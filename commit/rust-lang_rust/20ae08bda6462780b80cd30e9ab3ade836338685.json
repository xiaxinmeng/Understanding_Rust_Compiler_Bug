{"sha": "20ae08bda6462780b80cd30e9ab3ade836338685", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYWUwOGJkYTY0NjI3ODBiODBjZDMwZTlhYjNhZGU4MzYzMzg2ODU=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-13T10:17:53Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Dedup suggestions", "tree": {"sha": "e4f697d463c7a7cc1a47d528a22d9ebf66f90ebd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4f697d463c7a7cc1a47d528a22d9ebf66f90ebd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20ae08bda6462780b80cd30e9ab3ade836338685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20ae08bda6462780b80cd30e9ab3ade836338685", "html_url": "https://github.com/rust-lang/rust/commit/20ae08bda6462780b80cd30e9ab3ade836338685", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20ae08bda6462780b80cd30e9ab3ade836338685/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40b5118c8ab4e85c72803c371bc6d18dc01b478c", "url": "https://api.github.com/repos/rust-lang/rust/commits/40b5118c8ab4e85c72803c371bc6d18dc01b478c", "html_url": "https://github.com/rust-lang/rust/commit/40b5118c8ab4e85c72803c371bc6d18dc01b478c"}], "stats": {"total": 759, "additions": 654, "deletions": 105}, "files": [{"sha": "1615ff04badb1eb08a87047646a2c895cb9569f9", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/20ae08bda6462780b80cd30e9ab3ade836338685/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ae08bda6462780b80cd30e9ab3ade836338685/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=20ae08bda6462780b80cd30e9ab3ade836338685", "patch": "@@ -380,11 +380,14 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n         }\n     }\n \n+    // FIXME: Move the loop outside this method and add_move_error_labels()\n+    // so they can share it.\n     fn add_move_error_suggestions(\n         &self,\n         err: &mut DiagnosticBuilder<'a>,\n         binds_to: &[Local],\n     ) {\n+        let mut suggestions: Vec<(Span, String, String)> = Vec::new();\n         for local in binds_to {\n             let bind_to = &self.mir.local_decls[*local];\n             if let Some(\n@@ -410,14 +413,19 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                         suggestion = pat_snippet;\n                         to_remove = \"&\";\n                     }\n-                    err.span_suggestion(\n+                    suggestions.push((\n                         pat_span,\n-                        &format!(\"consider removing the `{}`\", to_remove),\n+                        format!(\"consider removing the `{}`\", to_remove),\n                         suggestion.to_owned(),\n-                    );\n+                    ));\n                 }\n             }\n         }\n+        suggestions.sort_unstable_by_key(|&(span, _, _)| span);\n+        suggestions.dedup_by_key(|&mut (span, _, _)| span);\n+        for (span, msg, suggestion) in suggestions {\n+            err.span_suggestion(span, &msg, suggestion);\n+        }\n     }\n \n     fn add_move_error_labels("}, {"sha": "8fa19e84e4c99318c30d06aa854559c8d3632967", "filename": "src/test/ui/suggestions/dont-suggest-ref.rs", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/20ae08bda6462780b80cd30e9ab3ade836338685/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20ae08bda6462780b80cd30e9ab3ade836338685/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs?ref=20ae08bda6462780b80cd30e9ab3ade836338685", "patch": "@@ -10,13 +10,16 @@\n \n #![feature(nll)]\n \n+#[derive(Clone)]\n enum Either {\n     One(X),\n     Two(X),\n }\n \n+#[derive(Clone)]\n struct X(Y);\n \n+#[derive(Clone)]\n struct Y;\n \n pub fn main() {\n@@ -338,4 +341,118 @@ pub fn main() {\n         //~| SUGGESTION Either::One(_t)\n         Either::Two(_t) => (),\n     }\n+\n+    // --------\n+\n+    let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&`\n+    //~| SUGGESTION (X(_t), X(_u))\n+    if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&`\n+    //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+    while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&`\n+    //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+    match &(e.clone(), e.clone()) {\n+        //~^ ERROR cannot move\n+        &(Either::One(_t), Either::Two(_u)) => (),\n+        //~^ HELP consider removing the `&`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        &(Either::Two(_t), Either::One(_u)) => (),\n+        //~^ HELP consider removing the `&`\n+        //~| SUGGESTION (Either::Two(_t), Either::One(_u))\n+        _ => (),\n+    }\n+    match &(e.clone(), e.clone()) {\n+        //~^ ERROR cannot move\n+        &(Either::One(_t), Either::Two(_u))\n+        //~^ HELP consider removing the `&`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        | &(Either::Two(_t), Either::One(_u)) => (),\n+        // FIXME: would really like a suggestion here too\n+        _ => (),\n+    }\n+    match &(e.clone(), e.clone()) {\n+        //~^ ERROR cannot move\n+        &(Either::One(_t), Either::Two(_u)) => (),\n+        //~^ HELP consider removing the `&`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        &(Either::Two(ref _t), Either::One(ref _u)) => (),\n+        _ => (),\n+    }\n+    match &(e.clone(), e.clone()) {\n+        //~^ ERROR cannot move\n+        &(Either::One(_t), Either::Two(_u)) => (),\n+        //~^ HELP consider removing the `&`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        (Either::Two(_t), Either::One(_u)) => (),\n+        _ => (),\n+    }\n+    fn f3(&(X(_t), X(_u)): &(X, X)) { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&`\n+    //~| SUGGESTION (X(_t), X(_u))\n+\n+    let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&mut`\n+    //~| SUGGESTION (X(_t), X(_u))\n+    if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&mut`\n+    //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+    while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&mut`\n+    //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+    match &mut (em.clone(), em.clone()) {\n+        //~^ ERROR cannot move\n+        &mut (Either::One(_t), Either::Two(_u)) => (),\n+        //~^ HELP consider removing the `&mut`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        &mut (Either::Two(_t), Either::One(_u)) => (),\n+        //~^ HELP consider removing the `&mut`\n+        //~| SUGGESTION (Either::Two(_t), Either::One(_u))\n+        _ => (),\n+    }\n+    match &mut (em.clone(), em.clone()) {\n+        //~^ ERROR cannot move\n+        &mut (Either::One(_t), Either::Two(_u))\n+        //~^ HELP consider removing the `&mut`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        | &mut (Either::Two(_t), Either::One(_u)) => (),\n+        // FIXME: would really like a suggestion here too\n+        _ => (),\n+    }\n+    match &mut (em.clone(), em.clone()) {\n+        //~^ ERROR cannot move\n+        &mut (Either::One(_t), Either::Two(_u)) => (),\n+        //~^ HELP consider removing the `&mut`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        &mut (Either::Two(ref _t), Either::One(ref _u)) => (),\n+        _ => (),\n+    }\n+    match &mut (em.clone(), em.clone()) {\n+        //~^ ERROR cannot move\n+        &mut (Either::One(_t), Either::Two(_u)) => (),\n+        //~^ HELP consider removing the `&mut`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        &mut (Either::Two(ref mut _t), Either::One(ref mut _u)) => (),\n+        _ => (),\n+    }\n+    match &mut (em.clone(), em.clone()) {\n+        //~^ ERROR cannot move\n+        &mut (Either::One(_t), Either::Two(_u)) => (),\n+        //~^ HELP consider removing the `&mut`\n+        //~| SUGGESTION (Either::One(_t), Either::Two(_u))\n+        (Either::Two(_t), Either::One(_u)) => (),\n+        _ => (),\n+    }\n+    fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider removing the `&mut`\n+    //~| SUGGESTION (X(_t), X(_u))\n }"}, {"sha": "81e3c21084802778e12adb9ba5691cd75b6101fb", "filename": "src/test/ui/suggestions/dont-suggest-ref.stderr", "status": "modified", "additions": 526, "deletions": 102, "changes": 628, "blob_url": "https://github.com/rust-lang/rust/blob/20ae08bda6462780b80cd30e9ab3ade836338685/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20ae08bda6462780b80cd30e9ab3ade836338685/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr?ref=20ae08bda6462780b80cd30e9ab3ade836338685", "patch": "@@ -1,5 +1,5 @@\n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:47:17\n+  --> $DIR/dont-suggest-ref.rs:50:17\n    |\n LL |     let X(_t) = *s;\n    |           --    ^^\n@@ -9,13 +9,13 @@ LL |     let X(_t) = *s;\n    |           data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:47:11\n+  --> $DIR/dont-suggest-ref.rs:50:11\n    |\n LL |     let X(_t) = *s;\n    |           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:51:30\n+  --> $DIR/dont-suggest-ref.rs:54:30\n    |\n LL |     if let Either::One(_t) = *r { }\n    |                        --    ^^\n@@ -25,13 +25,13 @@ LL |     if let Either::One(_t) = *r { }\n    |                        data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:51:24\n+  --> $DIR/dont-suggest-ref.rs:54:24\n    |\n LL |     if let Either::One(_t) = *r { }\n    |                        ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:55:33\n+  --> $DIR/dont-suggest-ref.rs:58:33\n    |\n LL |     while let Either::One(_t) = *r { }\n    |                           --    ^^\n@@ -41,13 +41,13 @@ LL |     while let Either::One(_t) = *r { }\n    |                           data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:55:27\n+  --> $DIR/dont-suggest-ref.rs:58:27\n    |\n LL |     while let Either::One(_t) = *r { }\n    |                           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:59:11\n+  --> $DIR/dont-suggest-ref.rs:62:11\n    |\n LL |     match *r {\n    |           ^^\n@@ -59,13 +59,13 @@ LL |         Either::One(_t)\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:63:21\n+  --> $DIR/dont-suggest-ref.rs:66:21\n    |\n LL |         Either::One(_t)\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:66:11\n+  --> $DIR/dont-suggest-ref.rs:69:11\n    |\n LL |     match *r {\n    |           ^^\n@@ -77,13 +77,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:70:21\n+  --> $DIR/dont-suggest-ref.rs:73:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:75:17\n+  --> $DIR/dont-suggest-ref.rs:78:17\n    |\n LL |     let X(_t) = *sm;\n    |           --    ^^^\n@@ -93,13 +93,13 @@ LL |     let X(_t) = *sm;\n    |           data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:75:11\n+  --> $DIR/dont-suggest-ref.rs:78:11\n    |\n LL |     let X(_t) = *sm;\n    |           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:79:30\n+  --> $DIR/dont-suggest-ref.rs:82:30\n    |\n LL |     if let Either::One(_t) = *rm { }\n    |                        --    ^^^\n@@ -109,13 +109,13 @@ LL |     if let Either::One(_t) = *rm { }\n    |                        data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:79:24\n+  --> $DIR/dont-suggest-ref.rs:82:24\n    |\n LL |     if let Either::One(_t) = *rm { }\n    |                        ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:83:33\n+  --> $DIR/dont-suggest-ref.rs:86:33\n    |\n LL |     while let Either::One(_t) = *rm { }\n    |                           --    ^^^\n@@ -125,13 +125,13 @@ LL |     while let Either::One(_t) = *rm { }\n    |                           data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:83:27\n+  --> $DIR/dont-suggest-ref.rs:86:27\n    |\n LL |     while let Either::One(_t) = *rm { }\n    |                           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:87:11\n+  --> $DIR/dont-suggest-ref.rs:90:11\n    |\n LL |     match *rm {\n    |           ^^^\n@@ -143,13 +143,13 @@ LL |         Either::One(_t)\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:91:21\n+  --> $DIR/dont-suggest-ref.rs:94:21\n    |\n LL |         Either::One(_t)\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:94:11\n+  --> $DIR/dont-suggest-ref.rs:97:11\n    |\n LL |     match *rm {\n    |           ^^^\n@@ -161,13 +161,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:98:21\n+  --> $DIR/dont-suggest-ref.rs:101:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:102:11\n+  --> $DIR/dont-suggest-ref.rs:105:11\n    |\n LL |     match *rm {\n    |           ^^^\n@@ -179,13 +179,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:106:21\n+  --> $DIR/dont-suggest-ref.rs:109:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:111:17\n+  --> $DIR/dont-suggest-ref.rs:114:17\n    |\n LL |     let X(_t) = vs[0];\n    |           --    ^^^^^\n@@ -195,13 +195,13 @@ LL |     let X(_t) = vs[0];\n    |           data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:111:11\n+  --> $DIR/dont-suggest-ref.rs:114:11\n    |\n LL |     let X(_t) = vs[0];\n    |           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:115:30\n+  --> $DIR/dont-suggest-ref.rs:118:30\n    |\n LL |     if let Either::One(_t) = vr[0] { }\n    |                        --    ^^^^^\n@@ -211,13 +211,13 @@ LL |     if let Either::One(_t) = vr[0] { }\n    |                        data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:115:24\n+  --> $DIR/dont-suggest-ref.rs:118:24\n    |\n LL |     if let Either::One(_t) = vr[0] { }\n    |                        ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:119:33\n+  --> $DIR/dont-suggest-ref.rs:122:33\n    |\n LL |     while let Either::One(_t) = vr[0] { }\n    |                           --    ^^^^^\n@@ -227,13 +227,13 @@ LL |     while let Either::One(_t) = vr[0] { }\n    |                           data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:119:27\n+  --> $DIR/dont-suggest-ref.rs:122:27\n    |\n LL |     while let Either::One(_t) = vr[0] { }\n    |                           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:123:11\n+  --> $DIR/dont-suggest-ref.rs:126:11\n    |\n LL |     match vr[0] {\n    |           ^^^^^\n@@ -245,13 +245,13 @@ LL |         Either::One(_t)\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:127:21\n+  --> $DIR/dont-suggest-ref.rs:130:21\n    |\n LL |         Either::One(_t)\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:130:11\n+  --> $DIR/dont-suggest-ref.rs:133:11\n    |\n LL |     match vr[0] {\n    |           ^^^^^\n@@ -263,13 +263,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:134:21\n+  --> $DIR/dont-suggest-ref.rs:137:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:139:17\n+  --> $DIR/dont-suggest-ref.rs:142:17\n    |\n LL |     let X(_t) = vsm[0];\n    |           --    ^^^^^^\n@@ -279,13 +279,13 @@ LL |     let X(_t) = vsm[0];\n    |           data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:139:11\n+  --> $DIR/dont-suggest-ref.rs:142:11\n    |\n LL |     let X(_t) = vsm[0];\n    |           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:143:30\n+  --> $DIR/dont-suggest-ref.rs:146:30\n    |\n LL |     if let Either::One(_t) = vrm[0] { }\n    |                        --    ^^^^^^\n@@ -295,13 +295,13 @@ LL |     if let Either::One(_t) = vrm[0] { }\n    |                        data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:143:24\n+  --> $DIR/dont-suggest-ref.rs:146:24\n    |\n LL |     if let Either::One(_t) = vrm[0] { }\n    |                        ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:147:33\n+  --> $DIR/dont-suggest-ref.rs:150:33\n    |\n LL |     while let Either::One(_t) = vrm[0] { }\n    |                           --    ^^^^^^\n@@ -311,13 +311,13 @@ LL |     while let Either::One(_t) = vrm[0] { }\n    |                           data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:147:27\n+  --> $DIR/dont-suggest-ref.rs:150:27\n    |\n LL |     while let Either::One(_t) = vrm[0] { }\n    |                           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:151:11\n+  --> $DIR/dont-suggest-ref.rs:154:11\n    |\n LL |     match vrm[0] {\n    |           ^^^^^^\n@@ -329,13 +329,13 @@ LL |         Either::One(_t)\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:155:21\n+  --> $DIR/dont-suggest-ref.rs:158:21\n    |\n LL |         Either::One(_t)\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:158:11\n+  --> $DIR/dont-suggest-ref.rs:161:11\n    |\n LL |     match vrm[0] {\n    |           ^^^^^^\n@@ -347,13 +347,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:162:21\n+  --> $DIR/dont-suggest-ref.rs:165:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:166:11\n+  --> $DIR/dont-suggest-ref.rs:169:11\n    |\n LL |     match vrm[0] {\n    |           ^^^^^^\n@@ -365,13 +365,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:170:21\n+  --> $DIR/dont-suggest-ref.rs:173:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:177:18\n+  --> $DIR/dont-suggest-ref.rs:180:18\n    |\n LL |     let &X(_t) = s;\n    |         ------   ^ cannot move out of borrowed content\n@@ -380,13 +380,13 @@ LL |     let &X(_t) = s;\n    |         help: consider removing the `&`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:177:12\n+  --> $DIR/dont-suggest-ref.rs:180:12\n    |\n LL |     let &X(_t) = s;\n    |            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:181:31\n+  --> $DIR/dont-suggest-ref.rs:184:31\n    |\n LL |     if let &Either::One(_t) = r { }\n    |            ----------------   ^ cannot move out of borrowed content\n@@ -395,13 +395,13 @@ LL |     if let &Either::One(_t) = r { }\n    |            help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:181:25\n+  --> $DIR/dont-suggest-ref.rs:184:25\n    |\n LL |     if let &Either::One(_t) = r { }\n    |                         ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:185:34\n+  --> $DIR/dont-suggest-ref.rs:188:34\n    |\n LL |     while let &Either::One(_t) = r { }\n    |               ----------------   ^ cannot move out of borrowed content\n@@ -410,13 +410,13 @@ LL |     while let &Either::One(_t) = r { }\n    |               help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:185:28\n+  --> $DIR/dont-suggest-ref.rs:188:28\n    |\n LL |     while let &Either::One(_t) = r { }\n    |                            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:189:11\n+  --> $DIR/dont-suggest-ref.rs:192:11\n    |\n LL |     match r {\n    |           ^ cannot move out of borrowed content\n@@ -428,13 +428,13 @@ LL |         &Either::One(_t)\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:191:22\n+  --> $DIR/dont-suggest-ref.rs:194:22\n    |\n LL |         &Either::One(_t)\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:197:11\n+  --> $DIR/dont-suggest-ref.rs:200:11\n    |\n LL |     match r {\n    |           ^ cannot move out of borrowed content\n@@ -446,13 +446,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:199:22\n+  --> $DIR/dont-suggest-ref.rs:202:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:204:11\n+  --> $DIR/dont-suggest-ref.rs:207:11\n    |\n LL |     match r {\n    |           ^ cannot move out of borrowed content\n@@ -464,13 +464,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:206:22\n+  --> $DIR/dont-suggest-ref.rs:209:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:216:22\n+  --> $DIR/dont-suggest-ref.rs:219:22\n    |\n LL |     let &mut X(_t) = sm;\n    |         ----------   ^^ cannot move out of borrowed content\n@@ -479,13 +479,13 @@ LL |     let &mut X(_t) = sm;\n    |         help: consider removing the `&mut`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:216:16\n+  --> $DIR/dont-suggest-ref.rs:219:16\n    |\n LL |     let &mut X(_t) = sm;\n    |                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:220:35\n+  --> $DIR/dont-suggest-ref.rs:223:35\n    |\n LL |     if let &mut Either::One(_t) = rm { }\n    |            --------------------   ^^ cannot move out of borrowed content\n@@ -494,13 +494,13 @@ LL |     if let &mut Either::One(_t) = rm { }\n    |            help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:220:29\n+  --> $DIR/dont-suggest-ref.rs:223:29\n    |\n LL |     if let &mut Either::One(_t) = rm { }\n    |                             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:224:38\n+  --> $DIR/dont-suggest-ref.rs:227:38\n    |\n LL |     while let &mut Either::One(_t) = rm { }\n    |               --------------------   ^^ cannot move out of borrowed content\n@@ -509,13 +509,13 @@ LL |     while let &mut Either::One(_t) = rm { }\n    |               help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:224:32\n+  --> $DIR/dont-suggest-ref.rs:227:32\n    |\n LL |     while let &mut Either::One(_t) = rm { }\n    |                                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:228:11\n+  --> $DIR/dont-suggest-ref.rs:231:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -527,12 +527,12 @@ LL |         &mut Either::Two(_t) => (),\n    |                          -- ... and here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:230:26\n+  --> $DIR/dont-suggest-ref.rs:233:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:233:26\n+  --> $DIR/dont-suggest-ref.rs:236:26\n    |\n LL |         &mut Either::Two(_t) => (),\n    |                          ^^\n@@ -546,7 +546,7 @@ LL |         Either::Two(_t) => (),\n    |         ^^^^^^^^^^^^^^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:237:11\n+  --> $DIR/dont-suggest-ref.rs:240:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -558,13 +558,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:239:26\n+  --> $DIR/dont-suggest-ref.rs:242:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:244:11\n+  --> $DIR/dont-suggest-ref.rs:247:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -576,13 +576,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:246:26\n+  --> $DIR/dont-suggest-ref.rs:249:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:251:11\n+  --> $DIR/dont-suggest-ref.rs:254:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -594,13 +594,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:253:26\n+  --> $DIR/dont-suggest-ref.rs:256:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:265:18\n+  --> $DIR/dont-suggest-ref.rs:268:18\n    |\n LL |     let &X(_t) = &x;\n    |         ------   ^^ cannot move out of borrowed content\n@@ -609,13 +609,13 @@ LL |     let &X(_t) = &x;\n    |         help: consider removing the `&`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:265:12\n+  --> $DIR/dont-suggest-ref.rs:268:12\n    |\n LL |     let &X(_t) = &x;\n    |            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:269:31\n+  --> $DIR/dont-suggest-ref.rs:272:31\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |            ----------------   ^^ cannot move out of borrowed content\n@@ -624,13 +624,13 @@ LL |     if let &Either::One(_t) = &e { }\n    |            help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:269:25\n+  --> $DIR/dont-suggest-ref.rs:272:25\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |                         ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:273:34\n+  --> $DIR/dont-suggest-ref.rs:276:34\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |               ----------------   ^^ cannot move out of borrowed content\n@@ -639,13 +639,13 @@ LL |     while let &Either::One(_t) = &e { }\n    |               help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:273:28\n+  --> $DIR/dont-suggest-ref.rs:276:28\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |                            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:277:11\n+  --> $DIR/dont-suggest-ref.rs:280:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -657,13 +657,13 @@ LL |         &Either::One(_t)\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:279:22\n+  --> $DIR/dont-suggest-ref.rs:282:22\n    |\n LL |         &Either::One(_t)\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:285:11\n+  --> $DIR/dont-suggest-ref.rs:288:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -675,13 +675,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:287:22\n+  --> $DIR/dont-suggest-ref.rs:290:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:292:11\n+  --> $DIR/dont-suggest-ref.rs:295:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -693,13 +693,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:294:22\n+  --> $DIR/dont-suggest-ref.rs:297:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:300:22\n+  --> $DIR/dont-suggest-ref.rs:303:22\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |         ----------   ^^^^^^^ cannot move out of borrowed content\n@@ -708,13 +708,13 @@ LL |     let &mut X(_t) = &mut xm;\n    |         help: consider removing the `&mut`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:300:16\n+  --> $DIR/dont-suggest-ref.rs:303:16\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:304:35\n+  --> $DIR/dont-suggest-ref.rs:307:35\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |            --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -723,13 +723,13 @@ LL |     if let &mut Either::One(_t) = &mut em { }\n    |            help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:304:29\n+  --> $DIR/dont-suggest-ref.rs:307:29\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |                             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:308:38\n+  --> $DIR/dont-suggest-ref.rs:311:38\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |               --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -738,13 +738,13 @@ LL |     while let &mut Either::One(_t) = &mut em { }\n    |               help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:308:32\n+  --> $DIR/dont-suggest-ref.rs:311:32\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |                                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:312:11\n+  --> $DIR/dont-suggest-ref.rs:315:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -756,13 +756,13 @@ LL |         &mut Either::One(_t)\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:314:26\n+  --> $DIR/dont-suggest-ref.rs:317:26\n    |\n LL |         &mut Either::One(_t)\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:320:11\n+  --> $DIR/dont-suggest-ref.rs:323:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -774,13 +774,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:322:26\n+  --> $DIR/dont-suggest-ref.rs:325:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:327:11\n+  --> $DIR/dont-suggest-ref.rs:330:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -792,13 +792,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:329:26\n+  --> $DIR/dont-suggest-ref.rs:332:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:334:11\n+  --> $DIR/dont-suggest-ref.rs:337:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -810,13 +810,393 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:336:26\n+  --> $DIR/dont-suggest-ref.rs:339:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:211:11\n+  --> $DIR/dont-suggest-ref.rs:347:27\n+   |\n+LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n+   |         ---------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |         |   |      |\n+   |         |   |      ... and here\n+   |         |   data moved here\n+   |         help: consider removing the `&`: `(X(_t), X(_u))`\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:347:13\n+   |\n+LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n+   |             ^^\n+note: move occurs because `_u` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:347:20\n+   |\n+LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n+   |                    ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:351:50\n+   |\n+LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+   |            -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |            |             |                |\n+   |            |             |                ... and here\n+   |            |             data moved here\n+   |            help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:351:26\n+   |\n+LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+   |                          ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:351:43\n+   |\n+LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+   |                                           ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:355:53\n+   |\n+LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+   |               -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |               |             |                |\n+   |               |             |                ... and here\n+   |               |             data moved here\n+   |               help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:355:29\n+   |\n+LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+   |                             ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:355:46\n+   |\n+LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n+   |                                              ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:359:11\n+   |\n+LL |     match &(e.clone(), e.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |                       --               -- ... and here\n+   |                       |\n+   |                       data moved here\n+...\n+LL |         &(Either::Two(_t), Either::One(_u)) => (),\n+   |                       -- ... and here  -- ... and here\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:361:23\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |                       ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:361:40\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |                                        ^^\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:364:23\n+   |\n+LL |         &(Either::Two(_t), Either::One(_u)) => (),\n+   |                       ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:364:40\n+   |\n+LL |         &(Either::Two(_t), Either::One(_u)) => (),\n+   |                                        ^^\n+help: consider removing the `&`\n+   |\n+LL |         (Either::One(_t), Either::Two(_u)) => (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider removing the `&`\n+   |\n+LL |         (Either::Two(_t), Either::One(_u)) => (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:369:11\n+   |\n+LL |     match &(e.clone(), e.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &(Either::One(_t), Either::Two(_u))\n+   |         -----------------------------------\n+   |         |             |                |\n+   |         |             |                ... and here\n+   |         |             data moved here\n+   |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:371:23\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u))\n+   |                       ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:371:40\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u))\n+   |                                        ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:378:11\n+   |\n+LL |     match &(e.clone(), e.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |         -----------------------------------\n+   |         |             |                |\n+   |         |             |                ... and here\n+   |         |             data moved here\n+   |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:380:23\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |                       ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:380:40\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |                                        ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:386:11\n+   |\n+LL |     match &(e.clone(), e.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |         -----------------------------------\n+   |         |             |                |\n+   |         |             |                ... and here\n+   |         |             data moved here\n+   |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:388:23\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |                       ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:388:40\n+   |\n+LL |         &(Either::One(_t), Either::Two(_u)) => (),\n+   |                                        ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:399:31\n+   |\n+LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n+   |         -------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |         |       |      |\n+   |         |       |      ... and here\n+   |         |       data moved here\n+   |         help: consider removing the `&mut`: `(X(_t), X(_u))`\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:399:17\n+   |\n+LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n+   |                 ^^\n+note: move occurs because `_u` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:399:24\n+   |\n+LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n+   |                        ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:403:54\n+   |\n+LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+   |            ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |            |                 |                |\n+   |            |                 |                ... and here\n+   |            |                 data moved here\n+   |            help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:403:30\n+   |\n+LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+   |                              ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:403:47\n+   |\n+LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+   |                                               ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:407:57\n+   |\n+LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+   |               ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |               |                 |                |\n+   |               |                 |                ... and here\n+   |               |                 data moved here\n+   |               help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:407:33\n+   |\n+LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+   |                                 ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:407:50\n+   |\n+LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n+   |                                                  ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:411:11\n+   |\n+LL |     match &mut (em.clone(), em.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                           --               -- ... and here\n+   |                           |\n+   |                           data moved here\n+...\n+LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n+   |                           -- ... and here  -- ... and here\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:413:27\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                           ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:413:44\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                                            ^^\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:416:27\n+   |\n+LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n+   |                           ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:416:44\n+   |\n+LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n+   |                                            ^^\n+help: consider removing the `&mut`\n+   |\n+LL |         (Either::One(_t), Either::Two(_u)) => (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider removing the `&mut`\n+   |\n+LL |         (Either::Two(_t), Either::One(_u)) => (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:421:11\n+   |\n+LL |     match &mut (em.clone(), em.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &mut (Either::One(_t), Either::Two(_u))\n+   |         ---------------------------------------\n+   |         |                 |                |\n+   |         |                 |                ... and here\n+   |         |                 data moved here\n+   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:423:27\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u))\n+   |                           ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:423:44\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u))\n+   |                                            ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:430:11\n+   |\n+LL |     match &mut (em.clone(), em.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |         ---------------------------------------\n+   |         |                 |                |\n+   |         |                 |                ... and here\n+   |         |                 data moved here\n+   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:432:27\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                           ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:432:44\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                                            ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:438:11\n+   |\n+LL |     match &mut (em.clone(), em.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |         ---------------------------------------\n+   |         |                 |                |\n+   |         |                 |                ... and here\n+   |         |                 data moved here\n+   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:440:27\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                           ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:440:44\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                                            ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:446:11\n+   |\n+LL |     match &mut (em.clone(), em.clone()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |         ---------------------------------------\n+   |         |                 |                |\n+   |         |                 |                ... and here\n+   |         |                 data moved here\n+   |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:448:27\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                           ^^\n+note: move occurs because `_u` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:448:44\n+   |\n+LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n+   |                                            ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:214:11\n    |\n LL |     fn f1(&X(_t): &X) { }\n    |           ^^^--^\n@@ -826,13 +1206,13 @@ LL |     fn f1(&X(_t): &X) { }\n    |           help: consider removing the `&`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:211:14\n+  --> $DIR/dont-suggest-ref.rs:214:14\n    |\n LL |     fn f1(&X(_t): &X) { }\n    |              ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:258:11\n+  --> $DIR/dont-suggest-ref.rs:261:11\n    |\n LL |     fn f2(&mut X(_t): &mut X) { }\n    |           ^^^^^^^--^\n@@ -842,11 +1222,55 @@ LL |     fn f2(&mut X(_t): &mut X) { }\n    |           help: consider removing the `&mut`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:258:18\n+  --> $DIR/dont-suggest-ref.rs:261:18\n    |\n LL |     fn f2(&mut X(_t): &mut X) { }\n    |                  ^^\n \n-error: aborting due to 50 previous errors\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:394:11\n+   |\n+LL |     fn f3(&(X(_t), X(_u)): &(X, X)) { }\n+   |           ^^^^--^^^^^--^^\n+   |           |   |      |\n+   |           |   |      ... and here\n+   |           |   data moved here\n+   |           cannot move out of borrowed content\n+   |           help: consider removing the `&`: `(X(_t), X(_u))`\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:394:15\n+   |\n+LL |     fn f3(&(X(_t), X(_u)): &(X, X)) { }\n+   |               ^^\n+note: move occurs because `_u` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:394:22\n+   |\n+LL |     fn f3(&(X(_t), X(_u)): &(X, X)) { }\n+   |                      ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:454:11\n+   |\n+LL |     fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n+   |           ^^^^^^^^--^^^^^--^^\n+   |           |       |      |\n+   |           |       |      ... and here\n+   |           |       data moved here\n+   |           cannot move out of borrowed content\n+   |           help: consider removing the `&mut`: `(X(_t), X(_u))`\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:454:19\n+   |\n+LL |     fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n+   |                   ^^\n+note: move occurs because `_u` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:454:26\n+   |\n+LL |     fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n+   |                          ^^\n+\n+error: aborting due to 67 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}]}