{"sha": "c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2YjhkOTZhYmQxMTYwOTBhZjEzZjFjMmM1ZmU4ZDViN2ZjNDk0ZDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-19T17:28:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-19T17:28:27Z"}, "message": "Auto merge of #24526 - klutzy:getrandom-fix, r=alexcrichton\n\nFixes #21538.", "tree": {"sha": "5f48e3c01526d4b7497b52f34d66bffb891f98ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f48e3c01526d4b7497b52f34d66bffb891f98ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2", "html_url": "https://github.com/rust-lang/rust/commit/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddf25c890da15142d9645169403a4038f2cfbdf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf25c890da15142d9645169403a4038f2cfbdf7", "html_url": "https://github.com/rust-lang/rust/commit/ddf25c890da15142d9645169403a4038f2cfbdf7"}, {"sha": "4d80a823818f9953d9ff281f698404004356c328", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d80a823818f9953d9ff281f698404004356c328", "html_url": "https://github.com/rust-lang/rust/commit/4d80a823818f9953d9ff281f698404004356c328"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "30d5ae5c6008beb7ba02865df4f745d18c4d6b36", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=c6b8d96abd116090af13f1c2c5fe8d5b7fc494d2", "patch": "@@ -97,25 +97,24 @@ mod imp {\n                   target_arch = \"powerpc\")))]\n     fn is_getrandom_available() -> bool {\n         use sync::atomic::{AtomicBool, ATOMIC_BOOL_INIT, Ordering};\n+        use sync::{Once, ONCE_INIT};\n \n-        static GETRANDOM_CHECKED: AtomicBool = ATOMIC_BOOL_INIT;\n-        static GETRANDOM_AVAILABLE: AtomicBool = ATOMIC_BOOL_INIT;\n+        static CHECKER: Once = ONCE_INIT;\n+        static AVAILABLE: AtomicBool = ATOMIC_BOOL_INIT;\n \n-        if !GETRANDOM_CHECKED.load(Ordering::Relaxed) {\n+        CHECKER.call_once(|| {\n             let mut buf: [u8; 0] = [];\n             let result = getrandom(&mut buf);\n             let available = if result == -1 {\n-                let err = errno() as libc::c_int;\n-                err != libc::ENOSYS\n+                let err = io::Error::last_os_error().raw_os_error();\n+                err != Some(libc::ENOSYS)\n             } else {\n                 true\n             };\n-            GETRANDOM_AVAILABLE.store(available, Ordering::Relaxed);\n-            GETRANDOM_CHECKED.store(true, Ordering::Relaxed);\n-            available\n-        } else {\n-            GETRANDOM_AVAILABLE.load(Ordering::Relaxed)\n-        }\n+            AVAILABLE.store(available, Ordering::Relaxed);\n+        });\n+\n+        AVAILABLE.load(Ordering::Relaxed)\n     }\n \n     #[cfg(not(all(target_os = \"linux\","}]}