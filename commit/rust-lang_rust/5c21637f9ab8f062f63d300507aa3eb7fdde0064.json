{"sha": "5c21637f9ab8f062f63d300507aa3eb7fdde0064", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMjE2MzdmOWFiOGYwNjJmNjNkMzAwNTA3YWEzZWI3ZmRkZTAwNjQ=", "commit": {"author": {"name": "M Farkas-Dyck", "email": "strake888@gmail.com", "date": "2017-10-29T09:28:54Z"}, "committer": {"name": "M Farkas-Dyck", "email": "strake888@gmail.com", "date": "2017-10-29T09:28:54Z"}, "message": "impl From<T> for AtomicT", "tree": {"sha": "d1b8a69e203762f73558525c1ebef2656c93c6c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1b8a69e203762f73558525c1ebef2656c93c6c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c21637f9ab8f062f63d300507aa3eb7fdde0064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c21637f9ab8f062f63d300507aa3eb7fdde0064", "html_url": "https://github.com/rust-lang/rust/commit/5c21637f9ab8f062f63d300507aa3eb7fdde0064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c21637f9ab8f062f63d300507aa3eb7fdde0064/comments", "author": {"login": "strake", "id": 976729, "node_id": "MDQ6VXNlcjk3NjcyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/976729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strake", "html_url": "https://github.com/strake", "followers_url": "https://api.github.com/users/strake/followers", "following_url": "https://api.github.com/users/strake/following{/other_user}", "gists_url": "https://api.github.com/users/strake/gists{/gist_id}", "starred_url": "https://api.github.com/users/strake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strake/subscriptions", "organizations_url": "https://api.github.com/users/strake/orgs", "repos_url": "https://api.github.com/users/strake/repos", "events_url": "https://api.github.com/users/strake/events{/privacy}", "received_events_url": "https://api.github.com/users/strake/received_events", "type": "User", "site_admin": false}, "committer": {"login": "strake", "id": 976729, "node_id": "MDQ6VXNlcjk3NjcyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/976729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strake", "html_url": "https://github.com/strake", "followers_url": "https://api.github.com/users/strake/followers", "following_url": "https://api.github.com/users/strake/following{/other_user}", "gists_url": "https://api.github.com/users/strake/gists{/gist_id}", "starred_url": "https://api.github.com/users/strake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strake/subscriptions", "organizations_url": "https://api.github.com/users/strake/orgs", "repos_url": "https://api.github.com/users/strake/repos", "events_url": "https://api.github.com/users/strake/events{/privacy}", "received_events_url": "https://api.github.com/users/strake/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fdcf52df48c6a16dab57337f311275f0d8995da", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fdcf52df48c6a16dab57337f311275f0d8995da", "html_url": "https://github.com/rust-lang/rust/commit/1fdcf52df48c6a16dab57337f311275f0d8995da"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "76ef4b23bf71a421ce64a5cf0197600ecaa36207", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c21637f9ab8f062f63d300507aa3eb7fdde0064/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c21637f9ab8f062f63d300507aa3eb7fdde0064/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=5c21637f9ab8f062f63d300507aa3eb7fdde0064", "patch": "@@ -927,6 +927,12 @@ impl<T> AtomicPtr<T> {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> From<*mut T> for AtomicPtr<T> {\n+    #[inline]\n+    fn from(p: *mut T) -> Self { Self::new(p) }\n+}\n+\n #[cfg(target_has_atomic = \"ptr\")]\n macro_rules! atomic_int {\n     ($stable:meta, $const_unstable:meta,\n@@ -967,6 +973,12 @@ macro_rules! atomic_int {\n             }\n         }\n \n+        #[$stable]\n+        impl From<$int_type> for $atomic_type {\n+            #[inline]\n+            fn from(v: $int_type) -> Self { Self::new(v) }\n+        }\n+\n         #[$stable_debug]\n         impl fmt::Debug for $atomic_type {\n             fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {"}]}