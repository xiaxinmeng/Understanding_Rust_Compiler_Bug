{"sha": "6fba12591217cd4f1980e0d6fc5b2dee897799d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYmExMjU5MTIxN2NkNGYxOTgwZTBkNmZjNWIyZGVlODk3Nzk5ZDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T00:57:42Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T03:33:34Z"}, "message": "parser::path: remove .fatal calls", "tree": {"sha": "b374757c1311c1cae8fd4815ccee9705d06f2c2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b374757c1311c1cae8fd4815ccee9705d06f2c2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fba12591217cd4f1980e0d6fc5b2dee897799d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fba12591217cd4f1980e0d6fc5b2dee897799d1", "html_url": "https://github.com/rust-lang/rust/commit/6fba12591217cd4f1980e0d6fc5b2dee897799d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fba12591217cd4f1980e0d6fc5b2dee897799d1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51fb5998493366a7f0257855d1d9be7836aad30f", "url": "https://api.github.com/repos/rust-lang/rust/commits/51fb5998493366a7f0257855d1d9be7836aad30f", "html_url": "https://github.com/rust-lang/rust/commit/51fb5998493366a7f0257855d1d9be7836aad30f"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "9a4bef3776865d19185ab92bcd5b007e09da82a1", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6fba12591217cd4f1980e0d6fc5b2dee897799d1/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fba12591217cd4f1980e0d6fc5b2dee897799d1/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=6fba12591217cd4f1980e0d6fc5b2dee897799d1", "patch": "@@ -1450,9 +1450,7 @@ impl<'a> Parser<'a> {\n         self.struct_span_err(sp, \"missing condition for `if` expression\")\n             .span_label(sp, \"expected if condition here\")\n             .emit();\n-        let expr = self.mk_expr_err(span);\n-        let stmt = self.mk_stmt(span, ast::StmtKind::Expr(expr));\n-        self.mk_block(vec![stmt], BlockCheckMode::Default, span)\n+        self.mk_block_err(span)\n     }\n \n     /// Parses the condition of a `if` or `while` expression."}, {"sha": "325ad56cd2a43ff896dddaf1459234135e7187b2", "filename": "src/librustc_parse/parser/path.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6fba12591217cd4f1980e0d6fc5b2dee897799d1/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fba12591217cd4f1980e0d6fc5b2dee897799d1/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpath.rs?ref=6fba12591217cd4f1980e0d6fc5b2dee897799d1", "patch": "@@ -406,9 +406,11 @@ impl<'a> Parser<'a> {\n                     if self.token.is_bool_lit() {\n                         self.parse_literal_maybe_minus()?\n                     } else {\n-                        return Err(\n-                            self.fatal(\"identifiers may currently not be used for const generics\")\n-                        );\n+                        let span = self.token.span;\n+                        let msg = \"identifiers may currently not be used for const generics\";\n+                        self.struct_span_err(span, msg).emit();\n+                        let block = self.mk_block_err(span);\n+                        self.mk_expr(span, ast::ExprKind::Block(block, None), ast::AttrVec::new())\n                     }\n                 } else {\n                     self.parse_literal_maybe_minus()?"}, {"sha": "bf092ed14e342e7e802fb827d39dafa80648b780", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6fba12591217cd4f1980e0d6fc5b2dee897799d1/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fba12591217cd4f1980e0d6fc5b2dee897799d1/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=6fba12591217cd4f1980e0d6fc5b2dee897799d1", "patch": "@@ -398,10 +398,7 @@ impl<'a> Parser<'a> {\n                     self.maybe_annotate_with_ascription(&mut err, false);\n                     err.emit();\n                     self.recover_stmt_(SemiColonMode::Ignore, BlockMode::Ignore);\n-                    Some(self.mk_stmt(\n-                        self.token.span,\n-                        StmtKind::Expr(self.mk_expr_err(self.token.span)),\n-                    ))\n+                    Some(self.mk_stmt_err(self.token.span))\n                 }\n                 Ok(stmt) => stmt,\n             };\n@@ -479,4 +476,12 @@ impl<'a> Parser<'a> {\n     pub(super) fn mk_stmt(&self, span: Span, kind: StmtKind) -> Stmt {\n         Stmt { id: DUMMY_NODE_ID, kind, span }\n     }\n+\n+    fn mk_stmt_err(&self, span: Span) -> Stmt {\n+        self.mk_stmt(span, StmtKind::Expr(self.mk_expr_err(span)))\n+    }\n+\n+    pub(super) fn mk_block_err(&self, span: Span) -> P<Block> {\n+        self.mk_block(vec![self.mk_stmt_err(span)], BlockCheckMode::Default, span)\n+    }\n }"}]}