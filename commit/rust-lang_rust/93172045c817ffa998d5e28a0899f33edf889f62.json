{"sha": "93172045c817ffa998d5e28a0899f33edf889f62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMTcyMDQ1YzgxN2ZmYTk5OGQ1ZTI4YTA4OTlmMzNlZGY4ODlmNjI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-15T01:51:44Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:25Z"}, "message": "Fix a bug with yielding subtypes of the yield type.", "tree": {"sha": "2d9f667b7b86acfb14ac1154503e6670162d23fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d9f667b7b86acfb14ac1154503e6670162d23fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93172045c817ffa998d5e28a0899f33edf889f62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93172045c817ffa998d5e28a0899f33edf889f62", "html_url": "https://github.com/rust-lang/rust/commit/93172045c817ffa998d5e28a0899f33edf889f62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93172045c817ffa998d5e28a0899f33edf889f62/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcddd807297765b85f11c05f68f0845cc8d372aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcddd807297765b85f11c05f68f0845cc8d372aa", "html_url": "https://github.com/rust-lang/rust/commit/dcddd807297765b85f11c05f68f0845cc8d372aa"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "69f3d68df571864cebe2ad74d3855f27a1e36be6", "filename": "src/librustc_mir/transform/type_check.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/93172045c817ffa998d5e28a0899f33edf889f62/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93172045c817ffa998d5e28a0899f33edf889f62/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs?ref=93172045c817ffa998d5e28a0899f33edf889f62", "patch": "@@ -516,14 +516,16 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n                 let value_ty = value.ty(mir, tcx);\n                 match mir.yield_ty {\n                     None => span_mirbug!(self, term, \"yield in non-generator\"),\n-                    Some(ty) if ty != value_ty => {\n-                        span_mirbug!(self,\n-                            term,\n-                            \"type of yield value is ({:?}, but the yield type is ({:?}\",\n-                            value_ty,\n-                            ty);\n+                    Some(ty) => {\n+                        if let Err(terr) = self.sub_types(value_ty, ty) {\n+                            span_mirbug!(self,\n+                                term,\n+                                \"22 - type of yield value is {:?}, but the yield type is {:?}: {:?}\",\n+                                value_ty,\n+                                ty,\n+                                terr);\n+                        }\n                     }\n-                    _ => (),\n                 }\n             }\n         }"}, {"sha": "268add4974b0bd4ffc9de947a8558b140d62e2f3", "filename": "src/test/run-pass/generator/yield-subtype.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/93172045c817ffa998d5e28a0899f33edf889f62/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93172045c817ffa998d5e28a0899f33edf889f62/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fyield-subtype.rs?ref=93172045c817ffa998d5e28a0899f33edf889f62", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generators)]\n+\n+fn bar<'a>() {\n+    let a: &'static str = \"hi\";\n+    let b: &'a str = a;\n+\n+\t|| {\n+\t\tyield a;\n+\t\tyield b;\n+\t};\n+}\n+\n+fn main() {}\n\\ No newline at end of file"}]}