{"sha": "2235fb73ef990d3c19b2888feed69ddb462ab686", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMzVmYjczZWY5OTBkM2MxOWIyODg4ZmVlZDY5ZGRiNDYyYWI2ODY=", "commit": {"author": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2011-06-08T07:58:52Z"}, "committer": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2011-06-08T08:02:55Z"}, "message": "Add optional message to fail.", "tree": {"sha": "93a49f2adb8b5c53a08cc4c2c7ad33baecc1e4e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93a49f2adb8b5c53a08cc4c2c7ad33baecc1e4e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2235fb73ef990d3c19b2888feed69ddb462ab686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2235fb73ef990d3c19b2888feed69ddb462ab686", "html_url": "https://github.com/rust-lang/rust/commit/2235fb73ef990d3c19b2888feed69ddb462ab686", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2235fb73ef990d3c19b2888feed69ddb462ab686/comments", "author": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5c73605ead0dc27eb09e5f5860326b2cf2c5cd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c73605ead0dc27eb09e5f5860326b2cf2c5cd1", "html_url": "https://github.com/rust-lang/rust/commit/b5c73605ead0dc27eb09e5f5860326b2cf2c5cd1"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "4f83ee7fa8d728e58ba6bdaa8ca56069f77067ba", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -272,7 +272,7 @@ tag expr_ {\n     expr_index(@expr, @expr, ann);\n     expr_path(path, ann);\n     expr_ext(path, vec[@expr], option::t[str], @expr, ann);\n-    expr_fail(ann);\n+    expr_fail(ann, option::t[str]);\n     expr_break(ann);\n     expr_cont(ann);\n     expr_ret(option::t[@expr], ann);"}, {"sha": "562bc0cc32e37f17128e577ce12b235a125bf57a", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -256,7 +256,6 @@ fn parse_value_ident(&parser p) -> ast::ident {\n     ret parse_ident(p);\n }\n \n-\n /* FIXME: gross hack copied from rustboot to make certain configuration-based\n  * decisions work at build-time.  We should probably change it to use a\n  * lexical sytnax-extension or something similar. For now we just imitate\n@@ -934,7 +933,17 @@ fn parse_bottom_expr(&parser p) -> @ast::expr {\n         ex = expand_syntax_ext(p, ext_span, pth, es.node,\n                                none[str]);\n     } else if (eat_word(p, \"fail\")) {\n-        ex = ast::expr_fail(p.get_ann());\n+        auto msg;\n+        alt (p.peek()) {\n+           case (token::LIT_STR(?s)) {\n+               msg = some[str](p.get_str(s));\n+               p.bump();\n+           }\n+           case (_) {\n+               msg = none[str];\n+           }\n+        }\n+        ex = ast::expr_fail(p.get_ann(), msg);\n     } else if (eat_word(p, \"log\")) {\n         auto e = parse_expr(p);\n         auto hi = e.span.hi;\n@@ -1643,7 +1652,7 @@ fn stmt_ends_with_semi(&ast::stmt stmt) -> bool {\n                 case (ast::expr_field(_,_,_))    { ret true; }\n                 case (ast::expr_index(_,_,_))    { ret true; }\n                 case (ast::expr_path(_,_))       { ret true; }\n-                case (ast::expr_fail(_))         { ret true; }\n+                case (ast::expr_fail(_,_))       { ret true; }\n                 case (ast::expr_break(_))        { ret true; }\n                 case (ast::expr_cont(_))         { ret true; }\n                 case (ast::expr_ret(_,_))        { ret true; }"}, {"sha": "0fac5651f14588873bb80de9cc2d07044f2213c0", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -5628,8 +5628,17 @@ fn trans_expr_out(&@block_ctxt cx, &@ast::expr e, out_method output)\n             ret trans_expr(cx, expanded);\n         }\n \n-        case (ast::expr_fail(_)) {\n-            ret trans_fail(cx, some(e.span), \"explicit failure\");\n+        case (ast::expr_fail(_, ?str)) {\n+            auto failmsg;\n+            alt (str) {\n+                case (some(?msg)) {\n+                    failmsg = msg;\n+                }\n+                case (_) {\n+                    failmsg = \"explicit failure\";\n+                }\n+            }\n+            ret trans_fail(cx, some(e.span), failmsg);\n         }\n \n         case (ast::expr_log(?lvl, ?a, _)) {"}, {"sha": "da4e333f0a6253dfdffaff52c4074fc9466df31e", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -459,7 +459,7 @@ fn find_pre_post_expr(&fn_ctxt fcx, @expr e) -> () {\n             find_pre_post_expr(fcx, operator);\n             copy_pre_post(fcx.ccx, a, operator);\n         }\n-        case (expr_fail(?a)) {\n+        case (expr_fail(?a, _)) {\n             set_pre_and_post(fcx.ccx, a,\n                              /* if execution continues after fail,\n                                 then everything is true! */"}, {"sha": "369f307aa819b6a8a411a4dd7cfbc6aef05f7599", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -508,7 +508,7 @@ fn find_pre_post_state_expr(&fn_ctxt fcx, &prestate pres, @expr e) -> bool {\n                     expr_poststate(fcx.ccx, operand)) || changed;\n         ret changed;\n     }\n-    case (expr_fail(?a)) {\n+    case (expr_fail(?a, _)) {\n         changed = extend_prestate_ann(fcx.ccx, a, pres) || changed;\n         /* if execution continues after fail, then everything is true! woo! */\n         changed = set_poststate_ann(fcx.ccx, a,"}, {"sha": "3487af785610e9b51715330d779fcef188db8e71", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -1657,7 +1657,7 @@ fn expr_ann(&@ast::expr e) -> ast::ann {\n         case (ast::expr_index(_,_,?a)) { ret a; }\n         case (ast::expr_path(_,?a)) { ret a; }\n         case (ast::expr_ext(_,_,_,_,?a)) { ret a; }\n-        case (ast::expr_fail(?a)) { ret a; }\n+        case (ast::expr_fail(?a,_)) { ret a; }\n         case (ast::expr_ret(_,?a)) { ret a; }\n         case (ast::expr_put(_,?a)) { ret a; }\n         case (ast::expr_be(_,?a)) { ret a; }"}, {"sha": "afafde4e916b6cd5aa551798165d837f2b4ecab9", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -1276,7 +1276,7 @@ mod pushdown {\n                 write::ty_only_fixup(fcx, ann.id, t);\n             }\n             /* FIXME: should this check the type annotations? */\n-            case (ast::expr_fail(_))  { /* no-op */ }\n+            case (ast::expr_fail(_,_))  { /* no-op */ }\n             case (ast::expr_log(_,_,_)) { /* no-op */ }\n             case (ast::expr_break(_)) { /* no-op */ }\n             case (ast::expr_cont(_))  { /* no-op */ }\n@@ -1972,7 +1972,7 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n             write::ty_only_fixup(fcx, a.id, t);\n         }\n \n-        case (ast::expr_fail(?a)) {\n+        case (ast::expr_fail(?a, _)) {\n             write::bot_ty(fcx.ccx.tcx, a.id);\n         }\n "}, {"sha": "214846a5ecf7ab9a973b94f07c49d8c1b979a5f9", "filename": "src/comp/middle/walk.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fmiddle%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fwalk.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -431,7 +431,7 @@ fn walk_expr(&ast_visitor v, @ast::expr e) {\n             // Only walk expansion, not args/body.\n             walk_expr(v, expansion);\n         }\n-        case (ast::expr_fail(_)) { }\n+        case (ast::expr_fail(_, _)) { }\n         case (ast::expr_break(_)) { }\n         case (ast::expr_cont(_)) { }\n         case (ast::expr_ret(?eo, _)) {"}, {"sha": "db6d62bdbc848d2e9976099d56fd32e98b7e0360", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -825,8 +825,13 @@ fn print_expr(&ps s, &@ast::expr expr) {\n         case (ast::expr_path(?path,_)) {\n             print_path(s, path);\n         }\n-        case (ast::expr_fail(_)) {\n+        case (ast::expr_fail(_, ?str)) {\n             word(s.s, \"fail\");\n+            alt (str) {\n+                case (some(?msg)) {\n+                    word(s.s, #fmt(\"\\\"%s\\\"\", msg));\n+                }\n+            }\n         }\n         case (ast::expr_break(_)) {\n             word(s.s, \"break\");"}, {"sha": "e37cf5d58f516bcc1586b0852188e2ba1fe59c9f", "filename": "src/test/run-fail/explicit-fail-msg.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2235fb73ef990d3c19b2888feed69ddb462ab686/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs?ref=2235fb73ef990d3c19b2888feed69ddb462ab686", "patch": "@@ -0,0 +1,5 @@\n+// error-pattern:woooo\n+\n+fn main() {\n+  fail \"woooo\";\n+}"}]}