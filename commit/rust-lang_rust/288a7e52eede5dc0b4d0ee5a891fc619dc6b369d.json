{"sha": "288a7e52eede5dc0b4d0ee5a891fc619dc6b369d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4OGE3ZTUyZWVkZTVkYzBiNGQwZWU1YTg5MWZjNjE5ZGM2YjM2OWQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-25T11:24:30Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-25T13:09:56Z"}, "message": "Rollup merge of #30545 - bluss:operator-overload, r=steveklabnik\n\nbook: Some operator fixes for the syntax index\n\n- Correct the names of the comparison traits (PartialOrd)\n- Mention only the traits that overload the operator (PartialOrd,\n  PartialEq), not operator-unrelated traits (Ord, Eq).\n- Add `!=` operator.", "tree": {"sha": "c6c02ca8aa86301e59941ac1daa13d59a845473c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6c02ca8aa86301e59941ac1daa13d59a845473c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/288a7e52eede5dc0b4d0ee5a891fc619dc6b369d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/288a7e52eede5dc0b4d0ee5a891fc619dc6b369d", "html_url": "https://github.com/rust-lang/rust/commit/288a7e52eede5dc0b4d0ee5a891fc619dc6b369d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/288a7e52eede5dc0b4d0ee5a891fc619dc6b369d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f903c9738c2aafc4d72f7133eb34870409843cec", "url": "https://api.github.com/repos/rust-lang/rust/commits/f903c9738c2aafc4d72f7133eb34870409843cec", "html_url": "https://github.com/rust-lang/rust/commit/f903c9738c2aafc4d72f7133eb34870409843cec"}, {"sha": "1b438314a07d4cc2ecf0d82cd195e28bef73eac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b438314a07d4cc2ecf0d82cd195e28bef73eac2", "html_url": "https://github.com/rust-lang/rust/commit/1b438314a07d4cc2ecf0d82cd195e28bef73eac2"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "f7e32943c638e470b76d4930f69a71009022a42f", "filename": "src/doc/book/syntax-index.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/288a7e52eede5dc0b4d0ee5a891fc619dc6b369d/src%2Fdoc%2Fbook%2Fsyntax-index.md", "raw_url": "https://github.com/rust-lang/rust/raw/288a7e52eede5dc0b4d0ee5a891fc619dc6b369d/src%2Fdoc%2Fbook%2Fsyntax-index.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsyntax-index.md?ref=288a7e52eede5dc0b4d0ee5a891fc619dc6b369d", "patch": "@@ -41,6 +41,7 @@\n \n * `!` (`ident!(\u2026)`, `ident!{\u2026}`, `ident![\u2026]`): denotes macro expansion.  See [Macros].\n * `!` (`!expr`): bitwise or logical complement.  Overloadable (`Not`).\n+* `!=` (`var != expr`): nonequality comparison.  Overloadable (`PartialEq`).\n * `%` (`expr % expr`): arithmetic remainder.  Overloadable (`Rem`).\n * `%=` (`var %= expr`): arithmetic remainder & assignment.\n * `&` (`expr & expr`): bitwise and.  Overloadable (`BitAnd`).\n@@ -75,13 +76,13 @@\n * `;` (`[\u2026; len]`): part of fixed-size array syntax.  See [Primitive Types (Arrays)].\n * `<<` (`expr << expr`): left-shift.  Overloadable (`Shl`).\n * `<<=` (`var <<= expr`): left-shift & assignment.\n-* `<` (`expr < expr`): less-than comparison.  Overloadable (`Cmp`, `PartialCmp`).\n-* `<=` (`var <= expr`): less-than or equal-to comparison.  Overloadable (`Cmp`, `PartialCmp`).\n+* `<` (`expr < expr`): less-than comparison.  Overloadable (`PartialOrd`).\n+* `<=` (`var <= expr`): less-than or equal-to comparison.  Overloadable (`PartialOrd`).\n * `=` (`var = expr`, `ident = type`): assignment/equivalence.  See [Variable Bindings], [`type` Aliases], generic parameter defaults.\n-* `==` (`var == expr`): comparison.  Overloadable (`Eq`, `PartialEq`).\n+* `==` (`var == expr`): equality comparison.  Overloadable (`PartialEq`).\n * `=>` (`pat => expr`): part of match arm syntax.  See [Match].\n-* `>` (`expr > expr`): greater-than comparison.  Overloadable (`Cmp`, `PartialCmp`).\n-* `>=` (`var >= expr`): greater-than or equal-to comparison.  Overloadable (`Cmp`, `PartialCmp`).\n+* `>` (`expr > expr`): greater-than comparison.  Overloadable (`PartialOrd`).\n+* `>=` (`var >= expr`): greater-than or equal-to comparison.  Overloadable (`PartialOrd`).\n * `>>` (`expr >> expr`): right-shift.  Overloadable (`Shr`).\n * `>>=` (`var >>= expr`): right-shift & assignment.\n * `@` (`ident @ pat`): pattern binding.  See [Patterns (Bindings)]."}]}