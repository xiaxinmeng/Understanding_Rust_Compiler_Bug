{"sha": "bfa1904765407e8064beb81c75b4bba039437043", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYTE5MDQ3NjU0MDdlODA2NGJlYjgxYzc1YjRiYmEwMzk0MzcwNDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-20T10:08:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-20T10:08:29Z"}, "message": "Rollup merge of #76828 - matthiaskrgr:clippy_manual_strip, r=lcnr\n\nuse strip_prefix over starts_with and manual slicing based on pattern length (clippy::manual_strip)", "tree": {"sha": "9c6a15af83650cb50f55ae245f18b1e745022c64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c6a15af83650cb50f55ae245f18b1e745022c64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfa1904765407e8064beb81c75b4bba039437043", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfZyodCRBK7hj4Ov3rIwAAdHIIACsW5/kxAeZsw5+xo+pzOWaY\ncwWQJmR+ChY9sc3QdKTZkv8PBEdQcfiEv+o6yG67MDZ5NUtC4xag18m5P9fc/Ful\nPvT9lm1GeI6z7csm9aNZSPmedqXZNUg8+FG2pQIyHx43akscOHH6VrRckpAYbLwi\nvNkUzeEMICl8pskWFCWlPELg1fMnrm/T9ao+CobaRFCu1X5CrNYkrjiL4d0JOlLx\n2ICcI/nuGwi9a1xQSmHqq2rZQ4vonHdeJ3Mj9f5BQ5b8f2nk68grn0IOUFhRasmN\nI+8JzJwFZrkxi3u4yiPZQcjorE9z6Rw4k5ysiQuJwW1/zXZLNrCJC6LC84n5rEc=\n=ucRd\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c6a15af83650cb50f55ae245f18b1e745022c64\nparent c124d4363d3b3eb76b4aee36c8a7386b34a2a996\nparent 012974da7ad3737b296af4a401dfed2e8dcc22df\nauthor Ralf Jung <post@ralfj.de> 1600596509 +0200\ncommitter GitHub <noreply@github.com> 1600596509 +0200\n\nRollup merge of #76828 - matthiaskrgr:clippy_manual_strip, r=lcnr\n\nuse strip_prefix over starts_with and manual slicing based on pattern length (clippy::manual_strip)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa1904765407e8064beb81c75b4bba039437043", "html_url": "https://github.com/rust-lang/rust/commit/bfa1904765407e8064beb81c75b4bba039437043", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfa1904765407e8064beb81c75b4bba039437043/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c124d4363d3b3eb76b4aee36c8a7386b34a2a996", "url": "https://api.github.com/repos/rust-lang/rust/commits/c124d4363d3b3eb76b4aee36c8a7386b34a2a996", "html_url": "https://github.com/rust-lang/rust/commit/c124d4363d3b3eb76b4aee36c8a7386b34a2a996"}, {"sha": "012974da7ad3737b296af4a401dfed2e8dcc22df", "url": "https://api.github.com/repos/rust-lang/rust/commits/012974da7ad3737b296af4a401dfed2e8dcc22df", "html_url": "https://github.com/rust-lang/rust/commit/012974da7ad3737b296af4a401dfed2e8dcc22df"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "4f2febf04b135acf54afa8009bd74a46d42a1705", "filename": "compiler/rustc_driver/src/args.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_driver%2Fsrc%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_driver%2Fsrc%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fargs.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -4,8 +4,7 @@ use std::fs;\n use std::io;\n \n pub fn arg_expand(arg: String) -> Result<Vec<String>, Error> {\n-    if arg.starts_with('@') {\n-        let path = &arg[1..];\n+    if let Some(path) = arg.strip_prefix('@') {\n         let file = match fs::read_to_string(path) {\n             Ok(file) => file,\n             Err(ref err) if err.kind() == io::ErrorKind::InvalidData => {"}, {"sha": "629e9be9ddd45f57d9932f253d3f0fecf4902c51", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/move_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -492,8 +492,8 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n             {\n                 if let Ok(pat_snippet) = self.infcx.tcx.sess.source_map().span_to_snippet(pat_span)\n                 {\n-                    if pat_snippet.starts_with('&') {\n-                        let pat_snippet = pat_snippet[1..].trim_start();\n+                    if let Some(stripped) = pat_snippet.strip_prefix('&') {\n+                        let pat_snippet = stripped.trim_start();\n                         let (suggestion, to_remove) = if pat_snippet.starts_with(\"mut\")\n                             && pat_snippet[\"mut\".len()..].starts_with(rustc_lexer::is_whitespace)\n                         {"}, {"sha": "d4cdf02104ace23c088bfe61d14847c15bfaa43f", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -631,9 +631,8 @@ fn suggest_ampmut<'tcx>(\n                 let lt_name = &src[1..ws_pos];\n                 let ty = &src[ws_pos..];\n                 return (assignment_rhs_span, format!(\"&{} mut {}\", lt_name, ty));\n-            } else if src.starts_with('&') {\n-                let borrowed_expr = &src[1..];\n-                return (assignment_rhs_span, format!(\"&mut {}\", borrowed_expr));\n+            } else if let Some(stripped) = src.strip_prefix('&') {\n+                return (assignment_rhs_span, format!(\"&mut {}\", stripped));\n             }\n         }\n     }"}, {"sha": "ced272e474d1154f55576ad7b301316df9ef7caa", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -1418,9 +1418,9 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                         if snippet.starts_with('&') && !snippet.starts_with(\"&'\") {\n                             introduce_suggestion\n                                 .push((param.span, format!(\"&{} {}\", lt_name, &snippet[1..])));\n-                        } else if snippet.starts_with(\"&'_ \") {\n+                        } else if let Some(stripped) = snippet.strip_prefix(\"&'_ \") {\n                             introduce_suggestion\n-                                .push((param.span, format!(\"&{} {}\", lt_name, &snippet[4..])));\n+                                .push((param.span, format!(\"&{} {}\", lt_name, stripped)));\n                         }\n                     }\n                 }"}, {"sha": "83b737a73b1e84239a9d5ea1c33cb56e563aede7", "filename": "compiler/rustc_session/src/search_paths.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_session%2Fsrc%2Fsearch_paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_session%2Fsrc%2Fsearch_paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsearch_paths.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -56,16 +56,16 @@ impl PathKind {\n \n impl SearchPath {\n     pub fn from_cli_opt(path: &str, output: config::ErrorOutputType) -> Self {\n-        let (kind, path) = if path.starts_with(\"native=\") {\n-            (PathKind::Native, &path[\"native=\".len()..])\n-        } else if path.starts_with(\"crate=\") {\n-            (PathKind::Crate, &path[\"crate=\".len()..])\n-        } else if path.starts_with(\"dependency=\") {\n-            (PathKind::Dependency, &path[\"dependency=\".len()..])\n-        } else if path.starts_with(\"framework=\") {\n-            (PathKind::Framework, &path[\"framework=\".len()..])\n-        } else if path.starts_with(\"all=\") {\n-            (PathKind::All, &path[\"all=\".len()..])\n+        let (kind, path) = if let Some(stripped) = path.strip_prefix(\"native=\") {\n+            (PathKind::Native, stripped)\n+        } else if let Some(stripped) = path.strip_prefix(\"crate=\") {\n+            (PathKind::Crate, stripped)\n+        } else if let Some(stripped) = path.strip_prefix(\"dependency=\") {\n+            (PathKind::Dependency, stripped)\n+        } else if let Some(stripped) = path.strip_prefix(\"framework=\") {\n+            (PathKind::Framework, stripped)\n+        } else if let Some(stripped) = path.strip_prefix(\"all=\") {\n+            (PathKind::All, stripped)\n         } else {\n             (PathKind::All, path)\n         };"}, {"sha": "c7ce5008c335405ba45d50e0c18ec5b4b53c2305", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -370,7 +370,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     {\n         let s = s.as_ref();\n         let old = old.as_ref();\n-        if s.starts_with(old) { Some(new.as_ref().to_owned() + &s[old.len()..]) } else { None }\n+        if let Some(stripped) = s.strip_prefix(old) {\n+            Some(new.as_ref().to_owned() + stripped)\n+        } else {\n+            None\n+        }\n     }\n \n     /// This function is used to determine potential \"simple\" improvements or users' errors and"}, {"sha": "66975f32a1f4ad6fe873ca268c264a21cbd15782", "filename": "compiler/rustc_typeck/src/check/op.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -589,10 +589,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 } else {\n                                     msg\n                                 },\n-                                if lstring.starts_with('&') {\n+                                if let Some(stripped) = lstring.strip_prefix('&') {\n                                     // let a = String::new();\n                                     // let _ = &a + \"bar\";\n-                                    lstring[1..].to_string()\n+                                    stripped.to_string()\n                                 } else {\n                                     format!(\"{}.to_owned()\", lstring)\n                                 },\n@@ -617,10 +617,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     is_assign,\n                 ) {\n                     (Ok(l), Ok(r), IsAssign::No) => {\n-                        let to_string = if l.starts_with('&') {\n+                        let to_string = if let Some(stripped) = l.strip_prefix('&') {\n                             // let a = String::new(); let b = String::new();\n                             // let _ = &a + b;\n-                            l[1..].to_string()\n+                            stripped.to_string()\n                         } else {\n                             format!(\"{}.to_owned()\", l)\n                         };"}, {"sha": "f5418c9e01e4928a0a6f1d86f398e4be369bfba3", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa1904765407e8064beb81c75b4bba039437043/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=bfa1904765407e8064beb81c75b4bba039437043", "patch": "@@ -2343,8 +2343,8 @@ fn from_target_feature(\n                         item.span(),\n                         format!(\"`{}` is not valid for this target\", feature),\n                     );\n-                    if feature.starts_with('+') {\n-                        let valid = supported_target_features.contains_key(&feature[1..]);\n+                    if let Some(stripped) = feature.strip_prefix('+') {\n+                        let valid = supported_target_features.contains_key(stripped);\n                         if valid {\n                             err.help(\"consider removing the leading `+` in the feature name\");\n                         }"}]}