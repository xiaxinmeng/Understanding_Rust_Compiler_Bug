{"sha": "386025117a6b7cd9e7f7c96946793db2ec8aa24c", "node_id": "C_kwDOAAsO6NoAKDM4NjAyNTExN2E2YjdjZDllN2Y3Yzk2OTQ2NzkzZGIyZWM4YWEyNGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-18T03:11:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-18T03:11:18Z"}, "message": "Auto merge of #110410 - saethlin:hash-u128-as-u64s, r=oli-obk\n\nImplement StableHasher::write_u128 via write_u64\n\nIn https://github.com/rust-lang/rust/pull/110367#issuecomment-1510114777 the cachegrind diffs indicate that nearly all the regression is from this:\n```\n22,892,558  ???:<rustc_data_structures::sip128::SipHasher128>::slice_write_process_buffer\n-9,502,262  ???:<rustc_data_structures::sip128::SipHasher128>::short_write_process_buffer::<8>\n```\nWhich happens because the diff for that perf run swaps a `Hash::hash` of a `u64` to a `u128`. But `slice_write_process_buffer` is a `#[cold]` function, and is for handling hashes of arbitrary-length byte arrays.\n\nUsing the much more optimizer-friendly `u64` path twice to hash a `u128` provides a nice perf boost in some benchmarks.", "tree": {"sha": "5dcd9f994eae1d84603e81d686c6db9db389d5d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dcd9f994eae1d84603e81d686c6db9db389d5d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/386025117a6b7cd9e7f7c96946793db2ec8aa24c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/386025117a6b7cd9e7f7c96946793db2ec8aa24c", "html_url": "https://github.com/rust-lang/rust/commit/386025117a6b7cd9e7f7c96946793db2ec8aa24c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/386025117a6b7cd9e7f7c96946793db2ec8aa24c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e279f902f31af1e111f2a951781c9eed82f8c360", "url": "https://api.github.com/repos/rust-lang/rust/commits/e279f902f31af1e111f2a951781c9eed82f8c360", "html_url": "https://github.com/rust-lang/rust/commit/e279f902f31af1e111f2a951781c9eed82f8c360"}, {"sha": "ad8d304163a8c0e8a20d4a1d9783734586273f4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8d304163a8c0e8a20d4a1d9783734586273f4a", "html_url": "https://github.com/rust-lang/rust/commit/ad8d304163a8c0e8a20d4a1d9783734586273f4a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "1608009809f4c09682268925e329a976a738e9a8", "filename": "compiler/rustc_data_structures/src/stable_hasher.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/386025117a6b7cd9e7f7c96946793db2ec8aa24c/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/386025117a6b7cd9e7f7c96946793db2ec8aa24c/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs?ref=386025117a6b7cd9e7f7c96946793db2ec8aa24c", "patch": "@@ -107,7 +107,8 @@ impl Hasher for StableHasher {\n \n     #[inline]\n     fn write_u128(&mut self, i: u128) {\n-        self.state.write(&i.to_le_bytes());\n+        self.write_u64(i as u64);\n+        self.write_u64((i >> 64) as u64);\n     }\n \n     #[inline]"}]}