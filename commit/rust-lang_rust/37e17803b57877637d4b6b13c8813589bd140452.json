{"sha": "37e17803b57877637d4b6b13c8813589bd140452", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ZTE3ODAzYjU3ODc3NjM3ZDRiNmIxM2M4ODEzNTg5YmQxNDA0NTI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-05-25T15:12:45Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-26T12:03:33Z"}, "message": "Change wording on array_into_iter lint for 1.53 and edition changes.", "tree": {"sha": "1da64862885d151ae363fad53237eae371c457de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1da64862885d151ae363fad53237eae371c457de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37e17803b57877637d4b6b13c8813589bd140452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37e17803b57877637d4b6b13c8813589bd140452", "html_url": "https://github.com/rust-lang/rust/commit/37e17803b57877637d4b6b13c8813589bd140452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37e17803b57877637d4b6b13c8813589bd140452/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "481971978fda83aa7cf1f1f3c80cfad822377cf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/481971978fda83aa7cf1f1f3c80cfad822377cf2", "html_url": "https://github.com/rust-lang/rust/commit/481971978fda83aa7cf1f1f3c80cfad822377cf2"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "92c6ae3529259f7ea3d6f5d82b38e55fc9c8bce9", "filename": "compiler/rustc_lint/src/array_into_iter.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/37e17803b57877637d4b6b13c8813589bd140452/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e17803b57877637d4b6b13c8813589bd140452/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs?ref=37e17803b57877637d4b6b13c8813589bd140452", "patch": "@@ -21,21 +21,15 @@ declare_lint! {\n     ///\n     /// ### Explanation\n     ///\n-    /// In the future, it is planned to add an `IntoIter` implementation for\n-    /// arrays such that it will iterate over *values* of the array instead of\n-    /// references. Due to how method resolution works, this will change\n-    /// existing code that uses `into_iter` on arrays. The solution to avoid\n-    /// this warning is to use `iter()` instead of `into_iter()`.\n-    ///\n-    /// This is a [future-incompatible] lint to transition this to a hard error\n-    /// in the future. See [issue #66145] for more details and a more thorough\n-    /// description of the lint.\n-    ///\n-    /// [issue #66145]: https://github.com/rust-lang/rust/issues/66145\n-    /// [future-incompatible]: ../index.md#future-incompatible-lints\n+    /// Since Rust 1.53, arrays implement `IntoIterator`. However, to avoid\n+    /// breakage, `array.into_iter()` in Rust 2015 and 2018 code will still\n+    /// behave as `(&array).into_iter()`, returning an iterator over\n+    /// references, just like in Rust 1.52 and earlier.\n+    /// This only applies to the method call syntax `array.into_iter()`, not to\n+    /// any other syntax such as `for _ in array` or `IntoIterator::into_iter(array)`.\n     pub ARRAY_INTO_ITER,\n     Warn,\n-    \"detects calling `into_iter` on arrays\",\n+    \"detects calling `into_iter` on arrays in Rust 2015 and 2018\",\n     @future_incompatible = FutureIncompatibleInfo {\n         reference: \"issue #66145 <https://github.com/rust-lang/rust/issues/66145>\",\n         reason: FutureIncompatibilityReason::EditionSemanticsChange(Edition::Edition2021),\n@@ -105,10 +99,10 @@ impl<'tcx> LateLintPass<'tcx> for ArrayIntoIter {\n             };\n             cx.struct_span_lint(ARRAY_INTO_ITER, *span, |lint| {\n                 lint.build(&format!(\n-                \"this method call currently resolves to `<&{} as IntoIterator>::into_iter` (due \\\n-                    to autoref coercions), but that might change in the future when \\\n-                    `IntoIterator` impls for arrays are added.\",\n-                target,\n+                    \"this method call resolves to `<&{} as IntoIterator>::into_iter` \\\n+                    (due to backwards compatibility), \\\n+                    but will resolve to <{} as IntoIterator>::into_iter in Rust 2021.\",\n+                    target, target,\n                 ))\n                 .span_suggestion(\n                     call.ident.span,"}]}