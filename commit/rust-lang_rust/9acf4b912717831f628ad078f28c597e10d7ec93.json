{"sha": "9acf4b912717831f628ad078f28c597e10d7ec93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhY2Y0YjkxMjcxNzgzMWY2MjhhZDA3OGYyOGM1OTdlMTBkN2VjOTM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-25T00:42:04Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-25T00:42:04Z"}, "message": "Handle the mutant 'let'-block directive in rustboot, temporarily.", "tree": {"sha": "3e06c9d9cd6946aa333380d3b5f403dfb54eb3d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e06c9d9cd6946aa333380d3b5f403dfb54eb3d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9acf4b912717831f628ad078f28c597e10d7ec93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9acf4b912717831f628ad078f28c597e10d7ec93", "html_url": "https://github.com/rust-lang/rust/commit/9acf4b912717831f628ad078f28c597e10d7ec93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9acf4b912717831f628ad078f28c597e10d7ec93/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2a09562a6c0683ca528c866abc1ecc99b4bdcf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2a09562a6c0683ca528c866abc1ecc99b4bdcf0", "html_url": "https://github.com/rust-lang/rust/commit/b2a09562a6c0683ca528c866abc1ecc99b4bdcf0"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "4817d960041d23a5b781059624c60dd68b596c32", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9acf4b912717831f628ad078f28c597e10d7ec93/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9acf4b912717831f628ad078f28c597e10d7ec93/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=9acf4b912717831f628ad078f28c597e10d7ec93", "patch": "@@ -2168,10 +2168,25 @@ impure fn parse_crate_directive(parser p) -> ast.crate_directive\n                 }\n             }\n         }\n+\n+        case (token.LET) {\n+            p.bump();\n+            expect(p, token.LPAREN);\n+            auto id = parse_ident(p);\n+            expect(p, token.EQ);\n+            auto x = parse_expr(p);\n+            expect(p, token.RPAREN);\n+            expect(p, token.LBRACE);\n+            auto v = parse_crate_directives(p, token.RBRACE);\n+            hi = p.get_span();\n+            expect(p, token.RBRACE);\n+            ret spanned(lo, hi, ast.cdir_let(id, x, v));\n+        }\n     }\n     fail;\n }\n \n+\n impure fn parse_crate_directives(parser p, token.token term)\n     -> vec[@ast.crate_directive] {\n "}]}