{"sha": "62792f09f20221add2484608fc3071259067b79a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNzkyZjA5ZjIwMjIxYWRkMjQ4NDYwOGZjMzA3MTI1OTA2N2I3OWE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-13T07:53:14Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-14T00:28:39Z"}, "message": "lint: add lint for use of a `~[T]`.\n\nThis is useless at the moment (since pretty much every crate uses\n`~[]`), but should help avoid regressions once completely removed from a\ncrate.", "tree": {"sha": "d347a7b5f2d4f012c549cf8ebc30835777902c87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d347a7b5f2d4f012c549cf8ebc30835777902c87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62792f09f20221add2484608fc3071259067b79a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62792f09f20221add2484608fc3071259067b79a", "html_url": "https://github.com/rust-lang/rust/commit/62792f09f20221add2484608fc3071259067b79a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62792f09f20221add2484608fc3071259067b79a/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ff3c9995e63b63c16d13739a0fc2d321f95410e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff3c9995e63b63c16d13739a0fc2d321f95410e", "html_url": "https://github.com/rust-lang/rust/commit/6ff3c9995e63b63c16d13739a0fc2d321f95410e"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "35e1c242fe289206d3fd7fdbad1f793f61ad290b", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -12,6 +12,7 @@\n \n #[allow(non_camel_case_types)];\n #[deny(warnings)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate test;\n extern crate getopts;"}, {"sha": "895c498aa87daabb9bae945fd6116c06ba0cf0b3", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -21,6 +21,7 @@\n #[license = \"MIT/ASL2\"];\n #[allow(missing_doc)];\n #[feature(managed_boxes)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate collections;\n "}, {"sha": "b5199913f0264249edb3270d77352bdfeaebf8f3", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -22,6 +22,7 @@\n // NOTE remove the following two attributes after the next snapshot.\n #[allow(unrecognized_lint)];\n #[allow(default_type_param_usage)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate rand;\n "}, {"sha": "4bb6b0050b89767ff46934000412922be3118ec1", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -31,6 +31,7 @@ Rust extras are part of the standard Rust distribution.\n \n #[feature(macro_rules, globs, managed_boxes, asm, default_type_params)];\n \n+#[allow(deprecated_owned_vector)];\n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];\n "}, {"sha": "e0da51a75af71b756a12a62733c003f719171b10", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -90,6 +90,7 @@ pub fn inflate_bytes_zlib(bytes: &[u8]) -> CVec<u8> {\n \n #[cfg(test)]\n mod tests {\n+    #[allow(deprecated_owned_vector)];\n     extern crate rand;\n \n     use super::{inflate_bytes, deflate_bytes};"}, {"sha": "007557c1d5828bda3f53c7a75d7a9e014e9077ac", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -81,6 +81,7 @@\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n #[allow(missing_doc)];\n+#[allow(deprecated_owned_vector)];\n \n #[feature(globs)];\n "}, {"sha": "126eebaa1d3a2f341ac32a19eda0d7e37099ac66", "filename": "src/libglob/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibglob%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibglob%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibglob%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -27,6 +27,7 @@\n #[crate_type = \"rlib\"];\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n+#[allow(deprecated_owned_vector)];\n \n use std::cell::Cell;\n use std::{cmp, os, path};"}, {"sha": "3cef60896b9aabd2c091fbae39c7cc3476bc36c4", "filename": "src/libgreen/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibgreen%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibgreen%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -174,6 +174,7 @@\n // NB this does *not* include globs, please keep it that way.\n #[feature(macro_rules)];\n #[allow(visible_private_types)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate rand;\n "}, {"sha": "b7a38dec1acb3a6829a46d2f5f231e287e34698d", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -50,6 +50,7 @@\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n #[deny(unused_result, unused_must_use)];\n #[allow(non_camel_case_types)];\n+#[allow(deprecated_owned_vector)];\n \n // NB this crate explicitly does *not* allow glob imports, please seriously\n //    consider whether they're needed before adding that feature here (the"}, {"sha": "1cbb7a279a50f4be98d963d93bc52bb4a97318e4", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -14,6 +14,7 @@\n #[crate_type = \"rlib\"];\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n+#[allow(deprecated_owned_vector)];\n \n extern crate rand;\n "}, {"sha": "70e5bb92816108c7e3927b25d2d0650d1633cfb9", "filename": "src/librand/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -71,6 +71,7 @@ println!(\"{:?}\", tuple_ptr)\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n #[feature(macro_rules, managed_boxes)];\n+#[allow(deprecated_owned_vector)];\n \n use std::cast;\n use std::kinds::marker;"}, {"sha": "ebc85c8c5dfebe8a344348d18ba3672e3ed535a4", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -28,6 +28,7 @@ This API is completely unstable and subject to change.\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n #[allow(deprecated)];\n+#[allow(deprecated_owned_vector)];\n #[feature(macro_rules, globs, struct_variant, managed_boxes)];\n #[feature(quote, default_type_params)];\n "}, {"sha": "ae2600533559b7c0ad0f8c05da11588edf2ee361", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -113,6 +113,8 @@ pub enum Lint {\n     UnusedMustUse,\n     UnusedResult,\n \n+    DeprecatedOwnedVector,\n+\n     Warnings,\n }\n \n@@ -397,7 +399,14 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n         lint: UnusedResult,\n         desc: \"unused result of an expression in a statement\",\n         default: allow,\n-    })\n+    }),\n+\n+    (\"deprecated_owned_vector\",\n+     LintSpec {\n+        lint: DeprecatedOwnedVector,\n+        desc: \"use of a `~[T]` vector\",\n+        default: warn\n+    }),\n ];\n \n /*\n@@ -1107,6 +1116,17 @@ fn check_unused_result(cx: &Context, s: &ast::Stmt) {\n     }\n }\n \n+fn check_deprecated_owned_vector(cx: &Context, e: &ast::Expr) {\n+    let t = ty::expr_ty(cx.tcx, e);\n+    match ty::get(t).sty {\n+        ty::ty_vec(_, ty::vstore_uniq) => {\n+            cx.span_lint(DeprecatedOwnedVector, e.span,\n+                         \"use of deprecated `~[]` vector; replaced by `std::vec_ng::Vec`\")\n+        }\n+        _ => {}\n+    }\n+}\n+\n fn check_item_non_camel_case_types(cx: &Context, it: &ast::Item) {\n     fn is_camel_case(ident: ast::Ident) -> bool {\n         let ident = token::get_ident(ident);\n@@ -1634,6 +1654,7 @@ impl<'a> Visitor<()> for Context<'a> {\n \n         check_type_limits(self, e);\n         check_unused_casts(self, e);\n+        check_deprecated_owned_vector(self, e);\n \n         visit::walk_expr(self, e, ());\n     }"}, {"sha": "c4fef2245526b25d0abc7baacdb8e21cdbf5b403", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -14,6 +14,7 @@\n #[crate_type = \"dylib\"];\n #[crate_type = \"rlib\"];\n \n+#[allow(deprecated_owned_vector)];\n #[feature(globs, struct_variant, managed_boxes, macro_rules)];\n \n extern crate syntax;"}, {"sha": "efe71b32f0a39c27de74b3655ccf910acbb7050e", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -166,6 +166,9 @@ fn maketest(s: &str, cratename: &str, loose_feature_gating: bool) -> ~str {\n     let mut prog = ~r\"\n #[deny(warnings)];\n #[allow(unused_variable, dead_assignment, unused_mut, attribute_usage, dead_code)];\n+\n+// FIXME: remove when ~[] disappears from tests.\n+#[allow(deprecated_owned_vector)];\n \";\n \n     if loose_feature_gating {"}, {"sha": "e2d13d65da0cb3ce3df8cd8036b98ff1e57a94e5", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -42,6 +42,7 @@ via `close` and `delete` methods.\n #[feature(macro_rules)];\n #[deny(unused_result, unused_must_use)];\n #[allow(visible_private_types)];\n+#[allow(deprecated_owned_vector)];\n \n #[cfg(test)] extern crate green;\n "}, {"sha": "3ffafbada9100cfe46f622836d9592c6f5269509", "filename": "src/libsemver/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibsemver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibsemver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsemver%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -33,6 +33,8 @@\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n \n+#[allow(deprecated_owned_vector)];\n+\n use std::char;\n use std::cmp;\n use std::fmt;"}, {"sha": "2f4996a92681f773d6f1787d0da552f5ec2dc07e", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -25,6 +25,7 @@ Core encoding and decoding interfaces.\n // NOTE remove the following two attributes after the next snapshot.\n #[allow(unrecognized_lint)];\n #[allow(default_type_param_usage)];\n+#[allow(deprecated_owned_vector)];\n \n // test harness access\n #[cfg(test)]"}, {"sha": "24a77b71fba1e61c5090a77ad74ec749acf844c7", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -65,6 +65,7 @@\n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];\n #[allow(unknown_features)];\n+#[allow(deprecated_owned_vector)];\n \n // When testing libstd, bring in libuv as the I/O backend so tests can print\n // things and all of the std::io tests have an I/O interface to run on top"}, {"sha": "2b8df3f17c5aa2abb22494fbada3e32d7c3acafd", "filename": "src/libsync/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibsync%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibsync%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -17,6 +17,8 @@\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n \n+#[allow(deprecated_owned_vector)];\n+\n pub use arc::{Arc, MutexArc, RWArc, RWWriteMode, RWReadMode, ArcCondvar, CowArc};\n pub use sync::{Mutex, RWLock, Condvar, Semaphore, RWLockWriteMode,\n     RWLockReadMode, Barrier, one, mutex};"}, {"sha": "e84d43117e5ef966d97dd9ce94d3bf86c77b5c7b", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -32,6 +32,7 @@ This API is completely unstable and subject to change.\n \n #[allow(deprecated)];\n #[deny(non_camel_case_types)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate serialize;\n extern crate term;"}, {"sha": "ca142ab8697691ed6c9e8d57da76f693a9d1e382", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -22,6 +22,7 @@\n #[feature(macro_rules)];\n #[deny(non_camel_case_types)];\n #[allow(missing_doc)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate collections;\n "}, {"sha": "d791fa0479e7ee85f67455e6cc0e88fb4b1e981d", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -30,6 +30,7 @@\n #[crate_type = \"dylib\"];\n \n #[feature(asm)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate collections;\n extern crate extra;"}, {"sha": "019ad2c4b4c329051d9dec1a960aa76d4433203d", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -14,6 +14,7 @@\n #[license = \"MIT/ASL2\"];\n \n #[allow(missing_doc)];\n+#[allow(deprecated_owned_vector)];\n \n extern crate serialize;\n "}, {"sha": "2fa6c0906c710901c0abaffd0e4670b7ab8ecaf6", "filename": "src/libuuid/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Flibuuid%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Flibuuid%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuuid%2Flib.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -59,6 +59,8 @@ Examples of string representations:\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n \n+#[allow(deprecated_owned_vector)];\n+\n #[feature(default_type_params)];\n \n // NOTE remove the following two attributes after the next snapshot."}, {"sha": "b5269519bb785aaa3dca39bb7366417fd4f3aa02", "filename": "src/test/compile-fail/issue-2150.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2150.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -11,6 +11,7 @@\n #[deny(unreachable_code)];\n #[allow(unused_variable)];\n #[allow(dead_code)];\n+#[allow(deprecated_owned_vector)];\n \n fn fail_len(v: ~[int]) -> uint {\n     let mut i = 3;"}, {"sha": "be676becd5acc73485e06e5242c031d9e598f10c", "filename": "src/test/compile-fail/issue-8727.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Fissue-8727.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Fissue-8727.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8727.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(deprecated_owned_vector)];\n \n // Verify the compiler fails with an error on infinite function\n // recursions."}, {"sha": "c21ca87e244a1467cd8f7bc499cb7a59eef64fc9", "filename": "src/test/compile-fail/lint-deprecated-owned-vector.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-deprecated-owned-vector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-deprecated-owned-vector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-deprecated-owned-vector.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deny(deprecated_owned_vector)];\n+\n+fn main() {\n+    ~[1]; //~ ERROR use of deprecated `~[]`\n+    //~^ ERROR use of deprecated `~[]`\n+    std::vec::with_capacity::<int>(10); //~ ERROR use of deprecated `~[]`\n+}"}, {"sha": "4c178cdf65c0f0c91ac74faf7a604d0cf82a6f17", "filename": "src/test/compile-fail/lint-heap-memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -11,6 +11,7 @@\n #[feature(managed_boxes)];\n #[forbid(heap_memory)];\n #[allow(dead_code)];\n+#[allow(deprecated_owned_vector)];\n \n struct Foo {\n     x: @int //~ ERROR type uses managed"}, {"sha": "c20546d8590489d4c217271df7260a2dc7ea21d8", "filename": "src/test/compile-fail/lint-unused-imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -11,6 +11,7 @@\n #[feature(globs)];\n #[deny(unused_imports)];\n #[allow(dead_code)];\n+#[allow(deprecated_owned_vector)];\n \n use cal = bar::c::cc;\n "}, {"sha": "6b6311739f05c095ccd1231b083105485585b444", "filename": "src/test/compile-fail/lint-unused-mut-variables.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -13,6 +13,7 @@\n #[allow(dead_assignment)];\n #[allow(unused_variable)];\n #[allow(dead_code)];\n+#[allow(deprecated_owned_vector)];\n #[deny(unused_mut)];\n \n fn main() {"}, {"sha": "de01a711a3e53ba4938baad0d2471a42006bcc52", "filename": "src/test/compile-fail/lint-unused-unsafe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-unused-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Fcompile-fail%2Flint-unused-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-unsafe.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -12,6 +12,7 @@\n \n #[allow(dead_code)];\n #[deny(unused_unsafe)];\n+#[allow(deprecated_owned_vector)];\n \n mod foo {\n     extern {"}, {"sha": "753e98422b3d4823cd344422020df9a5117fa491", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62792f09f20221add2484608fc3071259067b79a/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=62792f09f20221add2484608fc3071259067b79a", "patch": "@@ -13,6 +13,7 @@\n #[feature(macro_rules)];\n #[deny(warnings)];\n #[allow(unused_must_use)];\n+#[allow(deprecated_owned_vector)];\n \n use std::fmt;\n use std::io::MemWriter;"}]}