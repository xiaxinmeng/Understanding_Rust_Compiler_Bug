{"sha": "f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MmU5NjE0OWRkMDNlODE2YjhiYzNjMzI5ZTdiOWE1ZDEyZmNkYWI=", "commit": {"author": {"name": "Martin Habovstiak", "email": "martin.habovstiak@gmail.com", "date": "2021-02-04T10:13:03Z"}, "committer": {"name": "Martin Habovstiak", "email": "martin.habovstiak@gmail.com", "date": "2021-02-04T14:20:14Z"}, "message": "Stabilize poison API of Once, rename poisoned()\n\nThis stabilizes:\n\n* `OnceState`\n* `OnceState::is_poisoned()` (previously named `poisoned()`)\n* `Once::call_once_force()`\n\n`poisoned()` was renamed because the new name is more clear as a few\npeople agreed and nobody objected.\n\nCloses #33577", "tree": {"sha": "b9a550dae263d711255414fe996c09db8dc710f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9a550dae263d711255414fe996c09db8dc710f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "html_url": "https://github.com/rust-lang/rust/commit/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab/comments", "author": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e708cbd91c9cae4426d69270248362b423324556", "url": "https://api.github.com/repos/rust-lang/rust/commits/e708cbd91c9cae4426d69270248362b423324556", "html_url": "https://github.com/rust-lang/rust/commit/e708cbd91c9cae4426d69270248362b423324556"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "2e5f843fc43cb8ba712ac3107680655b65bb80b1", "filename": "library/std/src/sync/once.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs?ref=f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "patch": "@@ -125,7 +125,7 @@ unsafe impl Send for Once {}\n \n /// State yielded to [`Once::call_once_force()`]\u2019s closure parameter. The state\n /// can be used to query the poison status of the [`Once`].\n-#[unstable(feature = \"once_poison\", issue = \"33577\")]\n+#[stable(feature = \"once_poison\", since = \"1.51.0\")]\n #[derive(Debug)]\n pub struct OnceState {\n     poisoned: bool,\n@@ -280,8 +280,6 @@ impl Once {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(once_poison)]\n-    ///\n     /// use std::sync::Once;\n     /// use std::thread;\n     ///\n@@ -301,13 +299,13 @@ impl Once {\n     ///\n     /// // call_once_force will still run and reset the poisoned state\n     /// INIT.call_once_force(|state| {\n-    ///     assert!(state.poisoned());\n+    ///     assert!(state.is_poisoned());\n     /// });\n     ///\n     /// // once any success happens, we stop propagating the poison\n     /// INIT.call_once(|| {});\n     /// ```\n-    #[unstable(feature = \"once_poison\", issue = \"33577\")]\n+    #[stable(feature = \"once_poison\", since = \"1.51.0\")]\n     pub fn call_once_force<F>(&self, f: F)\n     where\n         F: FnOnce(&OnceState),\n@@ -526,8 +524,6 @@ impl OnceState {\n     /// A poisoned [`Once`]:\n     ///\n     /// ```\n-    /// #![feature(once_poison)]\n-    ///\n     /// use std::sync::Once;\n     /// use std::thread;\n     ///\n@@ -540,24 +536,22 @@ impl OnceState {\n     /// assert!(handle.join().is_err());\n     ///\n     /// INIT.call_once_force(|state| {\n-    ///     assert!(state.poisoned());\n+    ///     assert!(state.is_poisoned());\n     /// });\n     /// ```\n     ///\n     /// An unpoisoned [`Once`]:\n     ///\n     /// ```\n-    /// #![feature(once_poison)]\n-    ///\n     /// use std::sync::Once;\n     ///\n     /// static INIT: Once = Once::new();\n     ///\n     /// INIT.call_once_force(|state| {\n-    ///     assert!(!state.poisoned());\n+    ///     assert!(!state.is_poisoned());\n     /// });\n-    #[unstable(feature = \"once_poison\", issue = \"33577\")]\n-    pub fn poisoned(&self) -> bool {\n+    #[stable(feature = \"once_poison\", since = \"1.51.0\")]\n+    pub fn is_poisoned(&self) -> bool {\n         self.poisoned\n     }\n "}, {"sha": "0c35597e11c5126e0ebfe028e1ec36536ff4b097", "filename": "library/std/src/sync/once/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab/library%2Fstd%2Fsrc%2Fsync%2Fonce%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab/library%2Fstd%2Fsrc%2Fsync%2Fonce%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce%2Ftests.rs?ref=f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "patch": "@@ -69,7 +69,7 @@ fn poison_bad() {\n     let mut called = false;\n     O.call_once_force(|p| {\n         called = true;\n-        assert!(p.poisoned())\n+        assert!(p.is_poisoned())\n     });\n     assert!(called);\n \n@@ -92,7 +92,7 @@ fn wait_for_force_to_finish() {\n     let (tx2, rx2) = channel();\n     let t1 = thread::spawn(move || {\n         O.call_once_force(|p| {\n-            assert!(p.poisoned());\n+            assert!(p.is_poisoned());\n             tx1.send(()).unwrap();\n             rx2.recv().unwrap();\n         });"}]}