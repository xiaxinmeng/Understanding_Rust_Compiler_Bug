{"sha": "811868ec6fcde0a2e43025542e8fd87e74f64d0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMTg2OGVjNmZjZGUwYTJlNDMwMjU1NDJlOGZkODdlNzRmNjRkMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-31T03:00:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-31T03:00:21Z"}, "message": "Auto merge of #28103 - GuillaumeGomez:fix-intrinsic, r=huonw\n\nFixes #28062", "tree": {"sha": "b527a713a1da88508b4d5099ce129bc229f5276b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b527a713a1da88508b4d5099ce129bc229f5276b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/811868ec6fcde0a2e43025542e8fd87e74f64d0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/811868ec6fcde0a2e43025542e8fd87e74f64d0b", "html_url": "https://github.com/rust-lang/rust/commit/811868ec6fcde0a2e43025542e8fd87e74f64d0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/811868ec6fcde0a2e43025542e8fd87e74f64d0b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f28c9b01ee5ff7e73bb81b3364f26b6ad4060a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f28c9b01ee5ff7e73bb81b3364f26b6ad4060a2", "html_url": "https://github.com/rust-lang/rust/commit/8f28c9b01ee5ff7e73bb81b3364f26b6ad4060a2"}, {"sha": "bc024d261ee61276101985807d9ce6fff38d856c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc024d261ee61276101985807d9ce6fff38d856c", "html_url": "https://github.com/rust-lang/rust/commit/bc024d261ee61276101985807d9ce6fff38d856c"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "e75e512594ccb215a261a4ceb5d1ae1f0ec867c8", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/811868ec6fcde0a2e43025542e8fd87e74f64d0b/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811868ec6fcde0a2e43025542e8fd87e74f64d0b/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=811868ec6fcde0a2e43025542e8fd87e74f64d0b", "patch": "@@ -408,6 +408,13 @@ pub fn check_platform_intrinsic_type(ccx: &CrateCtxt,\n                     let mut structural_to_nomimal = HashMap::new();\n \n                     let sig = tcx.no_late_bound_regions(i_ty.ty.fn_sig()).unwrap();\n+                    if intr.inputs.len() != sig.inputs.len() {\n+                        span_err!(tcx.sess, it.span, E0444,\n+                                  \"platform-specific intrinsic has invalid number of \\\n+                                   arguments: found {}, expected {}\",\n+                                  intr.inputs.len(), sig.inputs.len());\n+                        return\n+                    }\n                     let input_pairs = intr.inputs.iter().zip(&sig.inputs);\n                     for (i, (expected_arg, arg)) in input_pairs.enumerate() {\n                         match_intrinsic_type_to_type(tcx, &format!(\"argument {}\", i + 1), it.span,"}, {"sha": "a7c1fbb2719ab91583dec59c5d4d4e86e8f839a4", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/811868ec6fcde0a2e43025542e8fd87e74f64d0b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811868ec6fcde0a2e43025542e8fd87e74f64d0b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=811868ec6fcde0a2e43025542e8fd87e74f64d0b", "patch": "@@ -3018,7 +3018,34 @@ PhantomData can also be used to express information about unused type\n parameters. You can read more about it in the API documentation:\n \n https://doc.rust-lang.org/std/marker/struct.PhantomData.html\n-\"##\n+\"##,\n+\n+E0444: r##\"\n+A platform-specific intrinsic function has wrong number of arguments.\n+Erroneous code example:\n+\n+```\n+#[repr(simd)]\n+struct f64x2(f64, f64);\n+\n+extern \"platform-intrinsic\" {\n+    fn x86_mm_movemask_pd(x: f64x2, y: f64x2, z: f64x2) -> i32;\n+    // error: platform-specific intrinsic has invalid number of arguments\n+}\n+```\n+\n+Please refer to the function declaration to see if it corresponds\n+with yours. Example:\n+\n+```\n+#[repr(simd)]\n+struct f64x2(f64, f64);\n+\n+extern \"platform-intrinsic\" {\n+    fn x86_mm_movemask_pd(x: f64x2) -> i32; // ok!\n+}\n+```\n+\"##,\n \n }\n "}, {"sha": "a224690af765c3a80e2c6d51bac807025a6f80d8", "filename": "src/test/compile-fail/intrinsic-invalid-number-of-arguments.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/811868ec6fcde0a2e43025542e8fd87e74f64d0b/src%2Ftest%2Fcompile-fail%2Fintrinsic-invalid-number-of-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811868ec6fcde0a2e43025542e8fd87e74f64d0b/src%2Ftest%2Fcompile-fail%2Fintrinsic-invalid-number-of-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fintrinsic-invalid-number-of-arguments.rs?ref=811868ec6fcde0a2e43025542e8fd87e74f64d0b", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test number of arguments in platform-specific intrinsic function\n+// This is the error E0444\n+\n+#![feature(repr_simd, platform_intrinsics)]\n+\n+#[repr(simd)]\n+struct f64x2(f64, f64);\n+\n+extern \"platform-intrinsic\" {\n+    fn x86_mm_movemask_pd(x: f64x2, y: f64x2, z: f64x2) -> i32; //~ platform-specific intrinsic\n+}\n+\n+pub fn main() {\n+}"}]}