{"sha": "9890217c0eedcbe4742e412ea59e851ecd500bf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4OTAyMTdjMGVlZGNiZTQ3NDJlNDEyZWE1OWU4NTFlY2Q1MDBiZjU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-19T20:36:45Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-19T20:47:38Z"}, "message": "Fix ui test for updated core::panic behaviour.\n\nIt now throws a &str instead of a String.", "tree": {"sha": "0101223f5b58a023d7b9f8389155686c69cf7725", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0101223f5b58a023d7b9f8389155686c69cf7725"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9890217c0eedcbe4742e412ea59e851ecd500bf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9890217c0eedcbe4742e412ea59e851ecd500bf5", "html_url": "https://github.com/rust-lang/rust/commit/9890217c0eedcbe4742e412ea59e851ecd500bf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9890217c0eedcbe4742e412ea59e851ecd500bf5/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "url": "https://api.github.com/repos/rust-lang/rust/commits/2780e35246f4f1b44fc1e17bc2f99cfbfedef127", "html_url": "https://github.com/rust-lang/rust/commit/2780e35246f4f1b44fc1e17bc2f99cfbfedef127"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4a91198ab9f6fac8edfdca1a0e27c11bc4171509", "filename": "src/test/ui/intrinsics/panic-uninitialized-zeroed.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9890217c0eedcbe4742e412ea59e851ecd500bf5/src%2Ftest%2Fui%2Fintrinsics%2Fpanic-uninitialized-zeroed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9890217c0eedcbe4742e412ea59e851ecd500bf5/src%2Ftest%2Fui%2Fintrinsics%2Fpanic-uninitialized-zeroed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fpanic-uninitialized-zeroed.rs?ref=9890217c0eedcbe4742e412ea59e851ecd500bf5", "patch": "@@ -53,8 +53,8 @@ enum LR_NonZero {\n fn test_panic_msg<T>(op: impl (FnOnce() -> T) + panic::UnwindSafe, msg: &str) {\n     let err = panic::catch_unwind(op).err();\n     assert_eq!(\n-        err.as_ref().and_then(|a| a.downcast_ref::<String>()).map(|s| &**s),\n-        Some(msg)\n+        err.as_ref().and_then(|a| a.downcast_ref::<&str>()),\n+        Some(&msg)\n     );\n }\n "}]}