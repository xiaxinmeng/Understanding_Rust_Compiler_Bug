{"sha": "63885f7f72974f71d08d21bf79676ef4dc1ccaf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzODg1ZjdmNzI5NzRmNzFkMDhkMjFiZjc5Njc2ZWY0ZGMxY2NhZjg=", "commit": {"author": {"name": "Tobias Stolzmann", "email": "tobias.stolzmann@gmail.com", "date": "2018-05-29T19:43:10Z"}, "committer": {"name": "Tobias Stolzmann", "email": "tobias.stolzmann@gmail.com", "date": "2018-06-05T10:03:50Z"}, "message": "Update rustdoc book to suggest using Termination trait instead of hidden \u2018foo\u2019 function", "tree": {"sha": "1711619bf8a415f3f717ed858d603de9ddd825aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1711619bf8a415f3f717ed858d603de9ddd825aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63885f7f72974f71d08d21bf79676ef4dc1ccaf8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE81kFa8bQP59p0MGlRS/A4273RDkFAlsWYAYACgkQRS/A4273\nRDmUWw/+M0y7/k94WONkOcDJosRT/xJtV+zCszlu6PQr8QTFG/WjCDwc+qwr28yK\n1qAG7jWB02l22vS9sEob2qts0twBtt0Bv164HOQ4ypjyhQPQ4ZRJSVgF0cab6Wd8\n8uI+oEk2WYynDDa00/1C4uB8IUUUPjm0ZAHRqXshHwOShfqBRQLxTEeNzX7NvHBf\n/R9d/4uFbH0yqaY8ywWJ5nQSFtoXOQM6gC0qbU6nasN+5DtBNMV2tsfll+oKEN2C\n8iKNFTbkrlluAxnZrv+FJqijrtcLVKeVsmJOs6cYRerLtg3+s9g/377l7CUBLILm\neehIj93JDZPp7BV5vAaqgcBo+T6aC4HQ16g+LBfp4X+cJgevcfDBtMAXcQDUuvkO\nVEPMUq5iM/lG+JGeCvxPD9LiURSihNoDqFJsxJTyr5wnma3pdlAEaCmuKOfn+Rli\nG60wHSZUGoFiQMB1uf/d9/yfNX+52sB5jNfWjyj9o8bbzRu1bNWdljOm7+DbKfX+\nS1eu6YPGDn0dxDTzj4YyuvR2WSXPLtq/4SY+cy68b4GA5a2T42kb/z4GZ0yuTw9F\n77AHF+gAMY1wMmMcloUG+Bmoy3XuyPqBr0xoIq3UCERo1NecS1MGjux/5tUTZsxe\n8cBha669BSamGKpA466joAU3mXFmtwisxs8ODBvBEQiYmp9TZFs=\n=iLVh\n-----END PGP SIGNATURE-----", "payload": "tree 1711619bf8a415f3f717ed858d603de9ddd825aa\nparent f33db06e1d95249de95202664340d8639ec15c57\nauthor Tobias Stolzmann <tobias.stolzmann@gmail.com> 1527622990 +0200\ncommitter Tobias Stolzmann <tobias.stolzmann@gmail.com> 1528193030 +0200\n\nUpdate rustdoc book to suggest using Termination trait instead of hidden \u2018foo\u2019 function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63885f7f72974f71d08d21bf79676ef4dc1ccaf8", "html_url": "https://github.com/rust-lang/rust/commit/63885f7f72974f71d08d21bf79676ef4dc1ccaf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63885f7f72974f71d08d21bf79676ef4dc1ccaf8/comments", "author": {"login": "teiesti", "id": 4253772, "node_id": "MDQ6VXNlcjQyNTM3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4253772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teiesti", "html_url": "https://github.com/teiesti", "followers_url": "https://api.github.com/users/teiesti/followers", "following_url": "https://api.github.com/users/teiesti/following{/other_user}", "gists_url": "https://api.github.com/users/teiesti/gists{/gist_id}", "starred_url": "https://api.github.com/users/teiesti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teiesti/subscriptions", "organizations_url": "https://api.github.com/users/teiesti/orgs", "repos_url": "https://api.github.com/users/teiesti/repos", "events_url": "https://api.github.com/users/teiesti/events{/privacy}", "received_events_url": "https://api.github.com/users/teiesti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "teiesti", "id": 4253772, "node_id": "MDQ6VXNlcjQyNTM3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4253772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teiesti", "html_url": "https://github.com/teiesti", "followers_url": "https://api.github.com/users/teiesti/followers", "following_url": "https://api.github.com/users/teiesti/following{/other_user}", "gists_url": "https://api.github.com/users/teiesti/gists{/gist_id}", "starred_url": "https://api.github.com/users/teiesti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teiesti/subscriptions", "organizations_url": "https://api.github.com/users/teiesti/orgs", "repos_url": "https://api.github.com/users/teiesti/repos", "events_url": "https://api.github.com/users/teiesti/events{/privacy}", "received_events_url": "https://api.github.com/users/teiesti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f33db06e1d95249de95202664340d8639ec15c57", "url": "https://api.github.com/repos/rust-lang/rust/commits/f33db06e1d95249de95202664340d8639ec15c57", "html_url": "https://github.com/rust-lang/rust/commit/f33db06e1d95249de95202664340d8639ec15c57"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "1fa385d652fd6e173ab6c7e8f2298a6bc117a07b", "filename": "src/doc/rustdoc/src/documentation-tests.md", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/63885f7f72974f71d08d21bf79676ef4dc1ccaf8/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/63885f7f72974f71d08d21bf79676ef4dc1ccaf8/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md?ref=63885f7f72974f71d08d21bf79676ef4dc1ccaf8", "patch": "@@ -168,37 +168,55 @@ By repeating all parts of the example, you can ensure that your example still\n compiles, while only showing the parts that are relevant to that part of your\n explanation.\n \n-Another case where the use of `#` is handy is when you want to ignore\n-error handling. Lets say you want the following,\n+\n+## Using `?` in doc tests\n+\n+A complete error handling is often not useful in your example, as it would add\n+significant amounts of boilerplate code. Instead, you may want the following:\n \n ```ignore\n+/// ```\n /// use std::io;\n /// let mut input = String::new();\n /// io::stdin().read_line(&mut input)?;\n+/// ```\n ```\n \n-The problem is that `?` returns a `Result<T, E>` and test functions\n-don't return anything so this will give a mismatched types error.\n+The problem is that `?` returns a `Result<T, E>` and test functions don't\n+return anything, so this will give a mismatched types error.\n+\n+You can get around this limitation by manually adding a `main` that returns\n+`Result<T, E>`, because `Result<T, E>` implements the `Termination` trait:\n \n ```ignore\n /// A doc test using ?\n ///\n /// ```\n /// use std::io;\n-/// # fn foo() -> io::Result<()> {\n+///\n+/// fn main() -> io::Result<()> {\n+///     let mut input = String::new();\n+///     io::stdin().read_line(&mut input)?;\n+///     Ok(())\n+/// }\n+/// ```\n+```\n+\n+Together with the `# ` from the section above, you arrive at a solution that\n+appears to the reader as the initial idea but works with doc tests:\n+\n+```ignore\n+/// ```\n+/// use std::io;\n+/// # fn main() -> io::Result<()> {\n /// let mut input = String::new();\n /// io::stdin().read_line(&mut input)?;\n /// # Ok(())\n /// # }\n /// ```\n-# fn foo() {}\n ```\n \n-You can get around this by wrapping the code in a function. This catches\n-and swallows the `Result<T, E>` when running tests on the docs. This\n-pattern appears regularly in the standard library.\n-\n-### Documenting macros\n+## Documenting macros\n \n Here\u2019s an example of documenting a macro:\n "}]}