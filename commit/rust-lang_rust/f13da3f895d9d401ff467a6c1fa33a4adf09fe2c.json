{"sha": "f13da3f895d9d401ff467a6c1fa33a4adf09fe2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxM2RhM2Y4OTVkOWQ0MDFmZjQ2N2E2YzFmYTMzYTRhZGYwOWZlMmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-11T20:58:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-11T20:58:59Z"}, "message": "Merge #3953\n\n3953: Remove #[should_panic] from call_info tests r=matklad a=kjeremy\n\nBetter fix than #3952\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "e025afecb8ea88319b9a04d227aa59dbb2b60d1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e025afecb8ea88319b9a04d227aa59dbb2b60d1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f13da3f895d9d401ff467a6c1fa33a4adf09fe2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeki+TCRBK7hj4Ov3rIwAAdHIIAD/cRy2x3Dc92iVhPQIBSDAE\nCYxPFVtUvKmYCxi6gBn7PdqipA6HbiCqb4X7NQYECLrbZ4pyiHRQbDV4ap6gdiUx\niiGFmJARsERFyf6a6EPbXOwzWeiBLW9lPPahcamxR1l9GCFUqPV2Jp3HD+V5n4XH\nAEjWSQM83y2S+lDEdeqW4kqeAVNFI+PslQkTDjL2pnq0IhkYoQ3XTtBwrnXBQnGb\nQiKeytJTmWCMiiUu9LB+7IwgZFN0aiN9LiIBuVdlBIn4C6kMl7z5g9Y9rbaPYYvn\n2YFsTIGIAypuHBNGC9LVNHHD8Y1jqiybJHRgS9eCmSRgjTSKE3c/Rr3NLJvRzns=\n=EVnd\n-----END PGP SIGNATURE-----\n", "payload": "tree e025afecb8ea88319b9a04d227aa59dbb2b60d1d\nparent fd06fe7b13045185ab4e630b0044aa9d8bbcdf8a\nparent 0f5d6766fd5b18716ede611060a69cbff9c2a35c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1586638739 +0000\ncommitter GitHub <noreply@github.com> 1586638739 +0000\n\nMerge #3953\n\n3953: Remove #[should_panic] from call_info tests r=matklad a=kjeremy\n\nBetter fix than #3952\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f13da3f895d9d401ff467a6c1fa33a4adf09fe2c", "html_url": "https://github.com/rust-lang/rust/commit/f13da3f895d9d401ff467a6c1fa33a4adf09fe2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f13da3f895d9d401ff467a6c1fa33a4adf09fe2c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd06fe7b13045185ab4e630b0044aa9d8bbcdf8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd06fe7b13045185ab4e630b0044aa9d8bbcdf8a", "html_url": "https://github.com/rust-lang/rust/commit/fd06fe7b13045185ab4e630b0044aa9d8bbcdf8a"}, {"sha": "0f5d6766fd5b18716ede611060a69cbff9c2a35c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5d6766fd5b18716ede611060a69cbff9c2a35c", "html_url": "https://github.com/rust-lang/rust/commit/0f5d6766fd5b18716ede611060a69cbff9c2a35c"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "f95b6baf3d47a677f14c40eb62deb1af5c570e07", "filename": "crates/ra_ide/src/call_info.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f13da3f895d9d401ff467a6c1fa33a4adf09fe2c/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f13da3f895d9d401ff467a6c1fa33a4adf09fe2c/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=f13da3f895d9d401ff467a6c1fa33a4adf09fe2c", "patch": "@@ -208,9 +208,20 @@ mod tests {\n         }\n     }\n \n-    fn call_info(text: &str) -> CallInfo {\n+    fn call_info_helper(text: &str) -> Option<CallInfo> {\n         let (analysis, position) = single_file_with_position(text);\n-        analysis.call_info(position).unwrap().unwrap()\n+        analysis.call_info(position).unwrap()\n+    }\n+\n+    fn call_info(text: &str) -> CallInfo {\n+        let info = call_info_helper(text);\n+        assert!(info.is_some());\n+        info.unwrap()\n+    }\n+\n+    fn no_call_info(text: &str) {\n+        let info = call_info_helper(text);\n+        assert!(info.is_none());\n     }\n \n     #[test]\n@@ -558,9 +569,8 @@ fn main() {\n     }\n \n     #[test]\n-    #[should_panic]\n     fn cant_call_named_structs() {\n-        let _ = call_info(\n+        no_call_info(\n             r#\"\n struct TS { x: u32, y: i32 }\n fn main() {\n@@ -594,9 +604,8 @@ fn main() {\n     }\n \n     #[test]\n-    #[should_panic]\n     fn cant_call_enum_records() {\n-        let _ = call_info(\n+        no_call_info(\n             r#\"\n enum E {\n     /// A Variant"}]}