{"sha": "51ca449f74f5d35677ce58988354994299ab45dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxY2E0NDlmNzRmNWQzNTY3N2NlNTg5ODgzNTQ5OTQyOTlhYjQ1ZGQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-16T13:14:32Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-04T20:48:54Z"}, "message": "Refactor away define", "tree": {"sha": "76e7817ca1cd5dbb5f946e92673ab0efb12cb4ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e7817ca1cd5dbb5f946e92673ab0efb12cb4ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51ca449f74f5d35677ce58988354994299ab45dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51ca449f74f5d35677ce58988354994299ab45dd", "html_url": "https://github.com/rust-lang/rust/commit/51ca449f74f5d35677ce58988354994299ab45dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51ca449f74f5d35677ce58988354994299ab45dd/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20b99d303d0fb70c98d8c460324c8e1824fef482", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b99d303d0fb70c98d8c460324c8e1824fef482", "html_url": "https://github.com/rust-lang/rust/commit/20b99d303d0fb70c98d8c460324c8e1824fef482"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "4e6ea6e5259f32671c52ac333841bc18ce17dc9f", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/51ca449f74f5d35677ce58988354994299ab45dd/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ca449f74f5d35677ce58988354994299ab45dd/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=51ca449f74f5d35677ce58988354994299ab45dd", "patch": "@@ -502,7 +502,11 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                     None\n                 };\n \n-                self.define(module_, target, ns, directive.import(binding, privacy_error));\n+                let imported_binding = directive.import(binding, privacy_error);\n+                let conflict = module_.try_define_child(target, ns, imported_binding);\n+                if let Err(old_binding) = conflict {\n+                    self.report_conflict(target, ns, &directive.import(binding, None), old_binding);\n+                }\n             }\n             module_.decrement_outstanding_references_for(target, ns);\n         }\n@@ -613,7 +617,7 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n         for (&(name, ns), resolution) in target_module.resolutions.borrow().iter() {\n             if let Some(Success(binding)) = resolution.try_result() {\n                 if binding.defined_with(DefModifiers::IMPORTABLE | DefModifiers::PUBLIC) {\n-                    self.define(module_, name, ns, directive.import(binding, None));\n+                    let _ = module_.try_define_child(name, ns, directive.import(binding, None));\n                 }\n             }\n         }\n@@ -631,16 +635,6 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n         return Success(());\n     }\n \n-    fn define(&mut self,\n-              parent: Module<'b>,\n-              name: Name,\n-              ns: Namespace,\n-              binding: NameBinding<'b>) {\n-        if let Err(old_binding) = parent.try_define_child(name, ns, binding.clone()) {\n-            self.report_conflict(name, ns, &binding, old_binding);\n-        }\n-    }\n-\n     fn report_conflict(&mut self,\n                        name: Name,\n                        ns: Namespace,"}]}