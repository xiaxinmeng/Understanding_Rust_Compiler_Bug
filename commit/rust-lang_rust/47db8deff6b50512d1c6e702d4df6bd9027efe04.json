{"sha": "47db8deff6b50512d1c6e702d4df6bd9027efe04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZGI4ZGVmZjZiNTA1MTJkMWM2ZTcwMmQ0ZGY2YmQ5MDI3ZWZlMDQ=", "commit": {"author": {"name": "Rahiel Kasim", "email": "rahielkasim@gmail.com", "date": "2016-07-26T09:14:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-26T09:14:46Z"}, "message": "doc/book/trait-objects: remove empty lines at start of examples", "tree": {"sha": "cf4213f0d0bed9308dd104e13af67068bd6b275b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4213f0d0bed9308dd104e13af67068bd6b275b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47db8deff6b50512d1c6e702d4df6bd9027efe04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47db8deff6b50512d1c6e702d4df6bd9027efe04", "html_url": "https://github.com/rust-lang/rust/commit/47db8deff6b50512d1c6e702d4df6bd9027efe04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47db8deff6b50512d1c6e702d4df6bd9027efe04/comments", "author": {"login": "rahiel", "id": 6839756, "node_id": "MDQ6VXNlcjY4Mzk3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6839756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahiel", "html_url": "https://github.com/rahiel", "followers_url": "https://api.github.com/users/rahiel/followers", "following_url": "https://api.github.com/users/rahiel/following{/other_user}", "gists_url": "https://api.github.com/users/rahiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahiel/subscriptions", "organizations_url": "https://api.github.com/users/rahiel/orgs", "repos_url": "https://api.github.com/users/rahiel/repos", "events_url": "https://api.github.com/users/rahiel/events{/privacy}", "received_events_url": "https://api.github.com/users/rahiel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9316ae515e2f8f3f497fb4f1559910c1eef2433d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9316ae515e2f8f3f497fb4f1559910c1eef2433d", "html_url": "https://github.com/rust-lang/rust/commit/9316ae515e2f8f3f497fb4f1559910c1eef2433d"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "b1aee579aabc26ae560c72e7187532fc0fd95c00", "filename": "src/doc/book/trait-objects.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47db8deff6b50512d1c6e702d4df6bd9027efe04/src%2Fdoc%2Fbook%2Ftrait-objects.md", "raw_url": "https://github.com/rust-lang/rust/raw/47db8deff6b50512d1c6e702d4df6bd9027efe04/src%2Fdoc%2Fbook%2Ftrait-objects.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftrait-objects.md?ref=47db8deff6b50512d1c6e702d4df6bd9027efe04", "patch": "@@ -123,7 +123,6 @@ dispatch with trait objects by casting:\n # trait Foo { fn method(&self) -> String; }\n # impl Foo for u8 { fn method(&self) -> String { format!(\"u8: {}\", *self) } }\n # impl Foo for String { fn method(&self) -> String { format!(\"string: {}\", *self) } }\n-\n fn do_something(x: &Foo) {\n     x.method();\n }\n@@ -140,7 +139,6 @@ or by coercing:\n # trait Foo { fn method(&self) -> String; }\n # impl Foo for u8 { fn method(&self) -> String { format!(\"u8: {}\", *self) } }\n # impl Foo for String { fn method(&self) -> String { format!(\"string: {}\", *self) } }\n-\n fn do_something(x: &Foo) {\n     x.method();\n }"}]}