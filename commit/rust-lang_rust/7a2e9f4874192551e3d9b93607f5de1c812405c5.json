{"sha": "7a2e9f4874192551e3d9b93607f5de1c812405c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMmU5ZjQ4NzQxOTI1NTFlM2Q5YjkzNjA3ZjVkZTFjODEyNDA1YzU=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-03T00:19:50Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-04T01:21:19Z"}, "message": "Sleep for a nonzero amount of time on Windows.", "tree": {"sha": "983765c003e327e37753cac907b2cb4ccd1554bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/983765c003e327e37753cac907b2cb4ccd1554bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a2e9f4874192551e3d9b93607f5de1c812405c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a2e9f4874192551e3d9b93607f5de1c812405c5", "html_url": "https://github.com/rust-lang/rust/commit/7a2e9f4874192551e3d9b93607f5de1c812405c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a2e9f4874192551e3d9b93607f5de1c812405c5/comments", "author": null, "committer": null, "parents": [{"sha": "5d5a3ca52dc246c94c772d0de9ceefcce5243279", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5a3ca52dc246c94c772d0de9ceefcce5243279", "html_url": "https://github.com/rust-lang/rust/commit/5d5a3ca52dc246c94c772d0de9ceefcce5243279"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "30504319b30b33e2756ee09b92c5d09b78bb7fd7", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a2e9f4874192551e3d9b93607f5de1c812405c5/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7a2e9f4874192551e3d9b93607f5de1c812405c5/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=7a2e9f4874192551e3d9b93607f5de1c812405c5", "patch": "@@ -197,7 +197,7 @@ rust_scheduler::start_main_loop() {\n             DLOG(this, task,\n                  \"all tasks are blocked, scheduler id %d yielding ...\",\n                  id);\n-            lock.timed_wait(100000);\n+            lock.timed_wait(10);\n             reap_dead_tasks(id);\n             DLOG(this, task,\n                  \"scheduler %d resuming ...\", id);"}, {"sha": "580fcbd6459c6a194b5a5e2d6401211d6e884464", "filename": "src/rt/sync/lock_and_signal.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7a2e9f4874192551e3d9b93607f5de1c812405c5/src%2Frt%2Fsync%2Flock_and_signal.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7a2e9f4874192551e3d9b93607f5de1c812405c5/src%2Frt%2Fsync%2Flock_and_signal.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.cpp?ref=7a2e9f4874192551e3d9b93607f5de1c812405c5", "patch": "@@ -68,12 +68,12 @@ void lock_and_signal::wait() {\n     timed_wait(0);\n }\n \n-bool lock_and_signal::timed_wait(size_t timeout_in_ns) {\n+bool lock_and_signal::timed_wait(size_t timeout_in_ms) {\n     _locked = false;\n     bool rv = true;\n #if defined(__WIN32__)\n     LeaveCriticalSection(&_cs);\n-    DWORD timeout = timeout_in_ns == 0 ? INFINITE : timeout_in_ns / 1000000;\n+    DWORD timeout = timeout_in_ms == 0 ? INFINITE : timeout_in_ms;\n     rv = WaitForSingleObject(_event, timeout) != WAIT_TIMEOUT;\n     EnterCriticalSection(&_cs);\n     _holding_thread = GetCurrentThreadId();\n@@ -85,7 +85,7 @@ bool lock_and_signal::timed_wait(size_t timeout_in_ns) {\n         gettimeofday(&time_val, NULL);\n         timespec time_spec;\n         time_spec.tv_sec = time_val.tv_sec + 0;\n-        time_spec.tv_nsec = time_val.tv_usec * 1000 + timeout_in_ns;\n+        time_spec.tv_nsec = time_val.tv_usec * 1000 + timeout_in_ms * 1000000;\n         if(time_spec.tv_nsec >= 1000000000) {\n             time_spec.tv_sec++;\n             time_spec.tv_nsec -= 1000000000;"}]}