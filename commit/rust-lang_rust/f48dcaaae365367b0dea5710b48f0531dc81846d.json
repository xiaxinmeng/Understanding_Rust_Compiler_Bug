{"sha": "f48dcaaae365367b0dea5710b48f0531dc81846d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0OGRjYWFhZTM2NTM2N2IwZGVhNTcxMGI0OGYwNTMxZGM4MTg0NmQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-19T01:09:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-19T01:10:00Z"}, "message": "rustc: Make vtable do duplicate-impl checking. Closes #2958.", "tree": {"sha": "0d0edb997e7f632f12b34c5e14f0c09f3ffe61dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d0edb997e7f632f12b34c5e14f0c09f3ffe61dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f48dcaaae365367b0dea5710b48f0531dc81846d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f48dcaaae365367b0dea5710b48f0531dc81846d", "html_url": "https://github.com/rust-lang/rust/commit/f48dcaaae365367b0dea5710b48f0531dc81846d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f48dcaaae365367b0dea5710b48f0531dc81846d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3119afc6e844fea76512e45c392bdcbeeeec2c00", "url": "https://api.github.com/repos/rust-lang/rust/commits/3119afc6e844fea76512e45c392bdcbeeeec2c00", "html_url": "https://github.com/rust-lang/rust/commit/3119afc6e844fea76512e45c392bdcbeeeec2c00"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "1b4cca803dcb207d26c88e47cd0daddabdcbd317", "filename": "src/rustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f48dcaaae365367b0dea5710b48f0531dc81846d/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f48dcaaae365367b0dea5710b48f0531dc81846d/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=f48dcaaae365367b0dea5710b48f0531dc81846d", "patch": "@@ -1,5 +1,6 @@\n import check::{fn_ctxt, impl_self_ty, methods};\n import infer::{resolve_type, resolve_all, force_all, fixup_err_to_str};\n+import ast_util::new_def_hash;\n \n fn has_trait_bounds(tps: ~[ty::param_bounds]) -> bool {\n     vec::any(tps, |bs| {\n@@ -49,6 +50,8 @@ fn relate_trait_tys(fcx: @fn_ctxt, sp: span,\n /*\n Look up the vtable to use when treating an item of type <t>\n as if it has type <trait_ty>\n+\n+XXX: This doesn't use the coherence tables yet.\n */\n fn lookup_vtable(fcx: @fn_ctxt, isc: resolve::iscopes, sp: span,\n                  ty: ty::t, trait_ty: ty::t, allow_unsafe: bool)\n@@ -114,10 +117,19 @@ fn lookup_vtable(fcx: @fn_ctxt, isc: resolve::iscopes, sp: span,\n       _ {\n         let mut found = ~[];\n \n+        let mut impls_seen = new_def_hash();\n+\n         for list::each(isc) |impls| {\n             /* For each impl in scope... */\n             for vec::each(*impls) |im| {\n                 // im = one specific impl\n+\n+                // First, ensure that we haven't processed this impl yet.\n+                if impls_seen.contains_key(im.did) {\n+                    again;\n+                }\n+                impls_seen.insert(im.did, ());\n+\n                 // find the trait that im implements (if any)\n                 for vec::each(ty::impl_traits(tcx, im.did)) |of_ty| {\n                     // it must have the same id as the expected one"}]}