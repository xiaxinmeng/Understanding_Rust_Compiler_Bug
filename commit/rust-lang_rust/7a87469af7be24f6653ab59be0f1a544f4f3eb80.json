{"sha": "7a87469af7be24f6653ab59be0f1a544f4f3eb80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhODc0NjlhZjdiZTI0ZjY2NTNhYjU5YmUwZjFhNTQ0ZjRmM2ViODA=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-05-31T08:30:13Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-05-31T08:30:13Z"}, "message": "Give the `try_trait` feature its own tracking issue", "tree": {"sha": "29a803ad1843f0ca9e43d815adbb7613ac54c7ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29a803ad1843f0ca9e43d815adbb7613ac54c7ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a87469af7be24f6653ab59be0f1a544f4f3eb80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a87469af7be24f6653ab59be0f1a544f4f3eb80", "html_url": "https://github.com/rust-lang/rust/commit/7a87469af7be24f6653ab59be0f1a544f4f3eb80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a87469af7be24f6653ab59be0f1a544f4f3eb80/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecde1e1d3b077f22f75ad34e12e35eef0b6c85f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecde1e1d3b077f22f75ad34e12e35eef0b6c85f3", "html_url": "https://github.com/rust-lang/rust/commit/ecde1e1d3b077f22f75ad34e12e35eef0b6c85f3"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "7289e95c2a002b4b73c266ae16449719683fa064", "filename": "src/doc/unstable-book/src/library-features/try-trait.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a87469af7be24f6653ab59be0f1a544f4f3eb80/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ftry-trait.md", "raw_url": "https://github.com/rust-lang/rust/raw/7a87469af7be24f6653ab59be0f1a544f4f3eb80/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ftry-trait.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ftry-trait.md?ref=7a87469af7be24f6653ab59be0f1a544f4f3eb80", "patch": "@@ -1,7 +1,7 @@\n # `try_trait`\n \n-The tracking issue for this feature is: [#31436]\n+The tracking issue for this feature is: [#42327]\n \n-[#31436]: https://github.com/rust-lang/rust/issues/31436\n+[#42327]: https://github.com/rust-lang/rust/issues/42327\n \n ------------------------"}, {"sha": "a1de8fe76e2580cb79d2fcf1b166ee8aff237935", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7a87469af7be24f6653ab59be0f1a544f4f3eb80/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a87469af7be24f6653ab59be0f1a544f4f3eb80/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=7a87469af7be24f6653ab59be0f1a544f4f3eb80", "patch": "@@ -2988,13 +2988,13 @@ impl Try for _DummyErrorType {\n /// in terms of a success/failure dichotomy.  This trait allows both\n /// extracting those success or failure values from an existing instance and\n /// creating a new instance from a success or failure value.\n-#[unstable(feature = \"try_trait\", issue = \"31436\")]\n+#[unstable(feature = \"try_trait\", issue = \"42327\")]\n pub trait Try {\n     /// The type of this value when viewed as successful.\n-    #[unstable(feature = \"try_trait\", issue = \"31436\")]\n+    #[unstable(feature = \"try_trait\", issue = \"42327\")]\n     type Ok;\n     /// The type of this value when viewed as failed.\n-    #[unstable(feature = \"try_trait\", issue = \"31436\")]\n+    #[unstable(feature = \"try_trait\", issue = \"42327\")]\n     type Error;\n \n     /// Applies the \"?\" operator. A return of `Ok(t)` means that the\n@@ -3006,16 +3006,16 @@ pub trait Try {\n     /// in the return type of the enclosing scope (which must itself implement\n     /// `Try`). Specifically, the value `X::from_error(From::from(e))`\n     /// is returned, where `X` is the return type of the enclosing function.\n-    #[unstable(feature = \"try_trait\", issue = \"31436\")]\n+    #[unstable(feature = \"try_trait\", issue = \"42327\")]\n     fn into_result(self) -> Result<Self::Ok, Self::Error>;\n \n     /// Wrap an error value to construct the composite result. For example,\n     /// `Result::Err(x)` and `Result::from_error(x)` are equivalent.\n-    #[unstable(feature = \"try_trait\", issue = \"31436\")]\n+    #[unstable(feature = \"try_trait\", issue = \"42327\")]\n     fn from_error(v: Self::Error) -> Self;\n \n     /// Wrap an OK value to construct the composite result. For example,\n     /// `Result::Ok(x)` and `Result::from_ok(x)` are equivalent.\n-    #[unstable(feature = \"try_trait\", issue = \"31436\")]\n+    #[unstable(feature = \"try_trait\", issue = \"42327\")]\n     fn from_ok(v: Self::Ok) -> Self;\n }"}, {"sha": "df7fff0df927078140f9950e049cadd1265e6297", "filename": "src/libcore/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a87469af7be24f6653ab59be0f1a544f4f3eb80/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a87469af7be24f6653ab59be0f1a544f4f3eb80/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=7a87469af7be24f6653ab59be0f1a544f4f3eb80", "patch": "@@ -1110,7 +1110,7 @@ impl<A, E, V: FromIterator<A>> FromIterator<Result<A, E>> for Result<V, E> {\n     }\n }\n \n-#[unstable(feature = \"try_trait\", issue = \"31436\")]\n+#[unstable(feature = \"try_trait\", issue = \"42327\")]\n impl<T,E> ops::Try for Result<T, E> {\n     type Ok = T;\n     type Error = E;"}]}