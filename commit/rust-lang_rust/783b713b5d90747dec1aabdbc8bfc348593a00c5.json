{"sha": "783b713b5d90747dec1aabdbc8bfc348593a00c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4M2I3MTNiNWQ5MDc0N2RlYzFhYWJkYmM4YmZjMzQ4NTkzYTAwYzU=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-05-02T17:03:29Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-05-20T15:12:49Z"}, "message": "Addressed more points raised in review.", "tree": {"sha": "f20304a0148bf8d31930c37dd8b44d8e63c3cf31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f20304a0148bf8d31930c37dd8b44d8e63c3cf31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/783b713b5d90747dec1aabdbc8bfc348593a00c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/783b713b5d90747dec1aabdbc8bfc348593a00c5", "html_url": "https://github.com/rust-lang/rust/commit/783b713b5d90747dec1aabdbc8bfc348593a00c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/783b713b5d90747dec1aabdbc8bfc348593a00c5/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20096628c6ce13654e79970b8c56baf1efcbff8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/20096628c6ce13654e79970b8c56baf1efcbff8e", "html_url": "https://github.com/rust-lang/rust/commit/20096628c6ce13654e79970b8c56baf1efcbff8e"}], "stats": {"total": 637, "additions": 452, "deletions": 185}, "files": [{"sha": "77588d713dfc5874030bdc189865ff4ca633204f", "filename": "src/librustc/traits/util.rs", "status": "modified", "additions": 42, "deletions": 54, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Flibrustc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Flibrustc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Futil.rs?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -51,13 +51,8 @@ struct PredicateSet<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n }\n \n impl<'a, 'gcx, 'tcx> PredicateSet<'a, 'gcx, 'tcx> {\n-    fn new(tcx: TyCtxt<'a, 'gcx, 'tcx>) -> PredicateSet<'a, 'gcx, 'tcx> {\n-        PredicateSet { tcx: tcx, set: Default::default() }\n-    }\n-\n-    fn contains(&mut self, pred: &ty::Predicate<'tcx>) -> bool {\n-        // See the `insert` method for why we use `anonymize_predicate` here.\n-        self.set.contains(&anonymize_predicate(self.tcx, pred))\n+    fn new(tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Self {\n+        Self { tcx: tcx, set: Default::default() }\n     }\n \n     fn insert(&mut self, pred: &ty::Predicate<'tcx>) -> bool {\n@@ -73,11 +68,6 @@ impl<'a, 'gcx, 'tcx> PredicateSet<'a, 'gcx, 'tcx> {\n         // regions before we throw things into the underlying set.\n         self.set.insert(anonymize_predicate(self.tcx, pred))\n     }\n-\n-    fn remove(&mut self, pred: &ty::Predicate<'tcx>) -> bool {\n-        // See the `insert` method for why we use `anonymize_predicate` here.\n-        self.set.remove(&anonymize_predicate(self.tcx, pred))\n-    }\n }\n \n impl<'a, 'gcx, 'tcx, T: AsRef<ty::Predicate<'tcx>>> Extend<T> for PredicateSet<'a, 'gcx, 'tcx> {\n@@ -135,7 +125,7 @@ impl<'cx, 'gcx, 'tcx> Elaborator<'cx, 'gcx, 'tcx> {\n         FilterToTraits::new(self)\n     }\n \n-    fn push(&mut self, predicate: &ty::Predicate<'tcx>) {\n+    fn elaborate(&mut self, predicate: &ty::Predicate<'tcx>) {\n         let tcx = self.visited.tcx;\n         match *predicate {\n             ty::Predicate::Trait(ref data) => {\n@@ -153,7 +143,7 @@ impl<'cx, 'gcx, 'tcx> Elaborator<'cx, 'gcx, 'tcx> {\n                 // This is necessary to prevent infinite recursion in some\n                 // cases. One common case is when people define\n                 // `trait Sized: Sized { }` rather than `trait Sized { }`.\n-                predicates.retain(|p| self.visited.insert(p));\n+                predicates.retain(|pred| self.visited.insert(pred));\n \n                 self.stack.extend(predicates);\n             }\n@@ -251,15 +241,12 @@ impl<'cx, 'gcx, 'tcx> Iterator for Elaborator<'cx, 'gcx, 'tcx> {\n \n     fn next(&mut self) -> Option<ty::Predicate<'tcx>> {\n         // Extract next item from top-most stack frame, if any.\n-        let next_predicate = match self.stack.pop() {\n-            Some(predicate) => predicate,\n-            None => {\n-                // No more stack frames. Done.\n-                return None;\n-            }\n-        };\n-        self.push(&next_predicate);\n-        return Some(next_predicate);\n+        if let Some(pred) = self.stack.pop() {\n+            self.elaborate(&pred);\n+            Some(pred)\n+        } else {\n+            None\n+        }\n     }\n }\n \n@@ -294,31 +281,29 @@ pub fn transitive_bounds<'cx, 'gcx, 'tcx>(tcx: TyCtxt<'cx, 'gcx, 'tcx>,\n /// Expansion is done via a DFS (depth-first search), and the `visited` field\n /// is used to avoid cycles.\n pub struct TraitAliasExpander<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n+    tcx: TyCtxt<'a, 'gcx, 'tcx>,\n     stack: Vec<TraitAliasExpansionInfo<'tcx>>,\n-    /// The set of predicates visited from the root directly to the current point in the\n-    /// expansion tree (only containing trait aliases).\n-    visited: PredicateSet<'a, 'gcx, 'tcx>,\n }\n \n /// Stores information about the expansion of a trait via a path of zero or more trait aliases.\n #[derive(Debug, Clone)]\n pub struct TraitAliasExpansionInfo<'tcx> {\n-    pub items: SmallVec<[(ty::PolyTraitRef<'tcx>, Span); 4]>,\n+    pub path: SmallVec<[(ty::PolyTraitRef<'tcx>, Span); 4]>,\n }\n \n impl<'tcx> TraitAliasExpansionInfo<'tcx> {\n     fn new(trait_ref: ty::PolyTraitRef<'tcx>, span: Span) -> Self {\n         Self {\n-            items: smallvec![(trait_ref, span)]\n+            path: smallvec![(trait_ref, span)]\n         }\n     }\n \n-    fn push(&self, trait_ref: ty::PolyTraitRef<'tcx>, span: Span) -> Self {\n-        let mut items = self.items.clone();\n-        items.push((trait_ref, span));\n+    fn clone_and_push(&self, trait_ref: ty::PolyTraitRef<'tcx>, span: Span) -> Self {\n+        let mut path = self.path.clone();\n+        path.push((trait_ref, span));\n \n         Self {\n-            items\n+            path\n         }\n     }\n \n@@ -327,11 +312,11 @@ impl<'tcx> TraitAliasExpansionInfo<'tcx> {\n     }\n \n     pub fn top(&self) -> &(ty::PolyTraitRef<'tcx>, Span) {\n-        self.items.last().unwrap()\n+        self.path.last().unwrap()\n     }\n \n     pub fn bottom(&self) -> &(ty::PolyTraitRef<'tcx>, Span) {\n-        self.items.first().unwrap()\n+        self.path.first().unwrap()\n     }\n }\n \n@@ -340,21 +325,25 @@ impl<'tcx> TraitAliasExpansionInfo<'tcx> {\n pub trait TraitAliasExpansionInfoDignosticBuilder {\n     fn label_with_exp_info<'tcx>(&mut self,\n         info: &TraitAliasExpansionInfo<'tcx>,\n-        top_label: &str\n+        top_label: &str,\n+        use_desc: &str\n     ) -> &mut Self;\n }\n \n impl<'a> TraitAliasExpansionInfoDignosticBuilder for DiagnosticBuilder<'a> {\n     fn label_with_exp_info<'tcx>(&mut self,\n         info: &TraitAliasExpansionInfo<'tcx>,\n-        top_label: &str\n+        top_label: &str,\n+        use_desc: &str\n     ) -> &mut Self {\n         self.span_label(info.top().1, top_label);\n-        if info.items.len() > 1 {\n-            for (_, sp) in info.items[1..(info.items.len() - 1)].iter().rev() {\n-                self.span_label(*sp, \"referenced here\");\n+        if info.path.len() > 1 {\n+            for (_, sp) in info.path.iter().rev().skip(1).take(info.path.len() - 2) {\n+                self.span_label(*sp, format!(\"referenced here ({})\", use_desc));\n             }\n         }\n+        self.span_label(info.bottom().1,\n+            format!(\"trait alias used in trait object type ({})\", use_desc));\n         self\n     }\n }\n@@ -367,7 +356,7 @@ pub fn expand_trait_aliases<'cx, 'gcx, 'tcx>(\n         .into_iter()\n         .map(|(trait_ref, span)| TraitAliasExpansionInfo::new(trait_ref, span))\n         .collect();\n-    TraitAliasExpander { stack: items, visited: PredicateSet::new(tcx) }\n+    TraitAliasExpander { tcx, stack: items }\n }\n \n impl<'cx, 'gcx, 'tcx> TraitAliasExpander<'cx, 'gcx, 'tcx> {\n@@ -376,23 +365,25 @@ impl<'cx, 'gcx, 'tcx> TraitAliasExpander<'cx, 'gcx, 'tcx> {\n     /// Otherwise, immediately returns `true` if `item` is a regular trait, or `false` if it is a\n     /// trait alias.\n     /// The return value indicates whether `item` should be yielded to the user.\n-    fn push(&mut self, item: &TraitAliasExpansionInfo<'tcx>) -> bool {\n-        let tcx = self.visited.tcx;\n+    fn expand(&mut self, item: &TraitAliasExpansionInfo<'tcx>) -> bool {\n+        let tcx = self.tcx;\n         let trait_ref = item.trait_ref();\n         let pred = trait_ref.to_predicate();\n \n         debug!(\"expand_trait_aliases: trait_ref={:?}\", trait_ref);\n \n-        // Don't recurse unless this bound is a trait alias and isn't currently in the DFS stack of\n-        // already-visited predicates.\n+        // Don't recurse if this bound is not a trait alias.\n         let is_alias = tcx.is_trait_alias(trait_ref.def_id());\n-        if !is_alias || self.visited.contains(&pred) {\n-            return !is_alias;\n+        if !is_alias {\n+            return true;\n         }\n \n-        // Remove the current predicate from the stack of already-visited ones, since we're doing\n-        // a DFS.\n-        self.visited.remove(&pred);\n+        // Don't recurse if this trait alias is already on the stack for the DFS search.\n+        let anon_pred = anonymize_predicate(tcx, &pred);\n+        if item.path.iter().rev().skip(1)\n+                .any(|(tr, _)| anonymize_predicate(tcx, &tr.to_predicate()) == anon_pred) {\n+            return false;\n+        }\n \n         // Get components of trait alias.\n         let predicates = tcx.super_predicates_of(trait_ref.def_id());\n@@ -403,16 +394,13 @@ impl<'cx, 'gcx, 'tcx> TraitAliasExpander<'cx, 'gcx, 'tcx> {\n             .filter_map(|(pred, span)| {\n                 pred.subst_supertrait(tcx, &trait_ref)\n                     .to_opt_poly_trait_ref()\n-                    .map(|trait_ref| item.push(trait_ref, *span))\n+                    .map(|trait_ref| item.clone_and_push(trait_ref, *span))\n             })\n             .collect();\n         debug!(\"expand_trait_aliases: items={:?}\", items);\n \n         self.stack.extend(items);\n \n-        // Record predicate into set of already-visited.\n-        self.visited.insert(&pred);\n-\n         false\n     }\n }\n@@ -426,7 +414,7 @@ impl<'cx, 'gcx, 'tcx> Iterator for TraitAliasExpander<'cx, 'gcx, 'tcx> {\n \n     fn next(&mut self) -> Option<TraitAliasExpansionInfo<'tcx>> {\n         while let Some(item) = self.stack.pop() {\n-            if self.push(&item) {\n+            if self.expand(&item) {\n                 return Some(item);\n             }\n         }"}, {"sha": "7d4243c4842ed6682503cf099b965b9efb3ac985", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -648,14 +648,14 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n                             // careful!\n                             if default_needs_object_self(param) {\n                                 struct_span_err!(tcx.sess, span, E0393,\n-                                                    \"the type parameter `{}` must be explicitly \\\n-                                                     specified\",\n-                                                    param.name)\n-                                    .span_label(span,\n-                                                format!(\"missing reference to `{}`\", param.name))\n-                                    .note(&format!(\"because of the default `Self` reference, \\\n-                                                    type parameters must be specified on object \\\n-                                                    types\"))\n+                                    \"the type parameter `{}` must be explicitly specified\",\n+                                    param.name\n+                                )\n+                                    .span_label(span, format!(\n+                                        \"missing reference to `{}`\", param.name))\n+                                    .note(&format!(\n+                                        \"because of the default `Self` reference, type parameters \\\n+                                         must be specified on object types\"))\n                                     .emit();\n                                 tcx.types.err.into()\n                             } else {\n@@ -987,20 +987,24 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n                 );\n                 potential_assoc_types.extend(cur_potential_assoc_types.into_iter().flatten());\n                 (trait_ref, trait_bound.span)\n-            }).collect();\n+            })\n+            .collect();\n \n         // Expand trait aliases recursively and check that only one regular (non-auto) trait\n         // is used and no 'maybe' bounds are used.\n         let expanded_traits = traits::expand_trait_aliases(tcx, bound_trait_refs.clone());\n         let (mut auto_traits, regular_traits): (Vec<_>, Vec<_>) =\n             expanded_traits.partition(|i| tcx.trait_is_auto(i.trait_ref().def_id()));\n         if regular_traits.len() > 1 {\n-            let extra_trait = &regular_traits[1];\n-            struct_span_err!(tcx.sess, extra_trait.bottom().1, E0225,\n+            let first_trait = &regular_traits[0];\n+            let additional_trait = &regular_traits[1];\n+            struct_span_err!(tcx.sess, additional_trait.bottom().1, E0225,\n                 \"only auto traits can be used as additional traits in a trait object\"\n             )\n-                .label_with_exp_info(extra_trait, \"additional non-auto trait\")\n-                .span_label(regular_traits[0].top().1, \"first non-auto trait\")\n+                .label_with_exp_info(additional_trait, \"additional non-auto trait\",\n+                    \"additional use\")\n+                .label_with_exp_info(first_trait, \"first non-auto trait\",\n+                    \"first use\")\n                 .emit();\n         }\n "}, {"sha": "6307af5d725d139c0270ec9232ef643566b94a87", "filename": "src/test/ui/bad/bad-sized.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Fbad%2Fbad-sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Fbad%2Fbad-sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-sized.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -2,9 +2,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/bad-sized.rs:4:24\n    |\n LL |     let x: Vec<Trait + Sized> = Vec::new();\n-   |                -----   ^^^^^ additional non-auto trait\n-   |                |\n+   |                -----   ^^^^^\n+   |                |       |\n+   |                |       additional non-auto trait\n+   |                |       trait alias used in trait object type (additional use)\n    |                first non-auto trait\n+   |                trait alias used in trait object type (first use)\n \n error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n   --> $DIR/bad-sized.rs:4:12"}, {"sha": "c7a66c327f1c177807e0322f8c372c5f080187a1", "filename": "src/test/ui/error-codes/E0225.stderr", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ferror-codes%2FE0225.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ferror-codes%2FE0225.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0225.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -1,21 +1,27 @@\n error[E0225]: only auto traits can be used as additional traits in a trait object\n-  --> $DIR/E0225.rs:6:32\n+  --> $DIR/E0225.rs:6:36\n    |\n-LL |     let _: Box<std::io::Read + std::io::Write>;\n-   |                -------------   ^^^^^^^^^^^^^^ additional non-auto trait\n-   |                |\n-   |                first non-auto trait\n+LL |     let _: Box<dyn std::io::Read + std::io::Write>;\n+   |                    -------------   ^^^^^^^^^^^^^^\n+   |                    |               |\n+   |                    |               additional non-auto trait\n+   |                    |               trait alias used in trait object type (additional use)\n+   |                    first non-auto trait\n+   |                    trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n-  --> $DIR/E0225.rs:8:16\n+  --> $DIR/E0225.rs:8:20\n    |\n LL | trait Foo = std::io::Read + std::io::Write;\n    |             -------------   -------------- additional non-auto trait\n    |             |\n    |             first non-auto trait\n ...\n-LL |     let _: Box<Foo>;\n-   |                ^^^\n+LL |     let _: Box<dyn Foo>;\n+   |                    ^^^\n+   |                    |\n+   |                    trait alias used in trait object type (additional use)\n+   |                    trait alias used in trait object type (first use)\n \n error: aborting due to 2 previous errors\n "}, {"sha": "322136d35cad156b37ed86fbd5b1040676dc8da9", "filename": "src/test/ui/issues/issue-22560.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -18,10 +18,16 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/issue-22560.rs:6:13\n    |\n LL | type Test = Add +\n-   |             --- first non-auto trait\n+   |             ---\n+   |             |\n+   |             first non-auto trait\n+   |             trait alias used in trait object type (first use)\n ...\n LL |             Sub;\n-   |             ^^^ additional non-auto trait\n+   |             ^^^\n+   |             |\n+   |             additional non-auto trait\n+   |             trait alias used in trait object type (additional use)\n \n error[E0191]: the value of the associated types `Output` (from the trait `std::ops::Add`), `Output` (from the trait `std::ops::Sub`) must be specified\n   --> $DIR/issue-22560.rs:3:13"}, {"sha": "cde4123dc3f40a462cd3b5b35d751803e99313cc", "filename": "src/test/ui/issues/issue-32963.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Fissues%2Fissue-32963.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Fissues%2Fissue-32963.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32963.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -2,9 +2,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/issue-32963.rs:8:25\n    |\n LL |     size_of_copy::<Misc+Copy>();\n-   |                    ---- ^^^^ additional non-auto trait\n-   |                    |\n+   |                    ---- ^^^^\n+   |                    |    |\n+   |                    |    additional non-auto trait\n+   |                    |    trait alias used in trait object type (additional use)\n    |                    first non-auto trait\n+   |                    trait alias used in trait object type (first use)\n \n error[E0277]: the trait bound `dyn Misc: std::marker::Copy` is not satisfied\n   --> $DIR/issue-32963.rs:8:5"}, {"sha": "eb667c9522ce118a824d35fc4b05f9d1076341f0", "filename": "src/test/ui/traits/trait-alias/trait-alias-no-duplicates.stderr", "status": "modified", "additions": 143, "deletions": 43, "changes": 186, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-duplicates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-duplicates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-duplicates.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -8,7 +8,9 @@ LL | trait _0 = Obj;\n    |            first non-auto trait\n ...\n LL | type _T00 = dyn _0 + _0;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:19:22\n@@ -18,9 +20,13 @@ LL | trait _0 = Obj;\n    |            |\n    |            additional non-auto trait\n    |            first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | type _T01 = dyn _1 + _0;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:22:22\n@@ -31,32 +37,44 @@ LL | trait _0 = Obj;\n    |            additional non-auto trait\n    |            first non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            --\n+   |            |\n+   |            referenced here (additional use)\n+   |            referenced here (first use)\n ...\n LL | type _T02 = dyn _1 + _1;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:25:23\n    |\n LL | trait _0 = Obj;\n    |            --- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | type _T03 = dyn Obj + _1;\n-   |                 ---   ^^\n+   |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:28:22\n    |\n LL | trait _0 = Obj;\n    |            --- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | type _T04 = dyn _1 + Obj;\n-   |                      ^^^ additional non-auto trait\n+   |                 --   ^^^\n+   |                 |    |\n+   |                 |    additional non-auto trait\n+   |                 |    trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:37:17\n@@ -67,13 +85,18 @@ LL | trait _0 = Obj;\n    |            additional non-auto trait\n    |            first non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _2 = _0 + _1;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n ...\n LL | type _T10 = dyn _2 + _3;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:40:22\n@@ -82,12 +105,14 @@ LL | trait _0 = Obj;\n    |            --- additional non-auto trait\n ...\n LL | trait _2 = _0 + _1;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n LL | trait _3 = Obj;\n    |            --- first non-auto trait\n ...\n LL | type _T11 = dyn _3 + _2;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:43:23\n@@ -96,12 +121,13 @@ LL | trait _0 = Obj;\n    |            --- additional non-auto trait\n ...\n LL | trait _2 = _0 + _1;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | type _T12 = dyn Obj + _2;\n-   |                 ---   ^^\n+   |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:46:17\n@@ -112,67 +138,86 @@ LL | trait _0 = Obj;\n    |            additional non-auto trait\n    |            first non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _2 = _0 + _1;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n ...\n LL | type _T13 = dyn _2 + Obj;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:49:22\n    |\n LL | trait _0 = Obj;\n    |            --- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _3 = Obj;\n    |            --- additional non-auto trait\n ...\n LL | type _T14 = dyn _1 + _3;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:52:22\n    |\n LL | trait _0 = Obj;\n    |            --- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _3 = Obj;\n    |            --- first non-auto trait\n ...\n LL | type _T15 = dyn _3 + _1;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:55:22\n    |\n LL | trait _0 = Obj;\n    |            --- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _3 = Obj;\n    |            --- additional non-auto trait\n LL | trait _4 = _3;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | type _T16 = dyn _1 + _4;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:58:22\n    |\n LL | trait _0 = Obj;\n    |            --- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _3 = Obj;\n    |            --- first non-auto trait\n+LL | trait _4 = _3;\n+   |            -- referenced here (first use)\n ...\n LL | type _T17 = dyn _4 + _1;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:65:22\n@@ -184,7 +229,9 @@ LL | trait _5 = Obj + Send;\n    |            first non-auto trait\n LL | \n LL | type _T20 = dyn _5 + _5;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:68:23\n@@ -193,9 +240,10 @@ LL | trait _5 = Obj + Send;\n    |            --- additional non-auto trait\n ...\n LL | type _T21 = dyn Obj + _5;\n-   |                 ---   ^^\n+   |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:71:22\n@@ -204,7 +252,11 @@ LL | trait _5 = Obj + Send;\n    |            --- first non-auto trait\n ...\n LL | type _T22 = dyn _5 + Obj;\n-   |                      ^^^ additional non-auto trait\n+   |                 --   ^^^\n+   |                 |    |\n+   |                 |    additional non-auto trait\n+   |                 |    trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:74:36\n@@ -213,7 +265,11 @@ LL | trait _5 = Obj + Send;\n    |            --- first non-auto trait\n ...\n LL | type _T23 = dyn _5 + Send + Sync + Obj;\n-   |                                    ^^^ additional non-auto trait\n+   |                 --                 ^^^\n+   |                 |                  |\n+   |                 |                  additional non-auto trait\n+   |                 |                  trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:81:17\n@@ -225,10 +281,15 @@ LL | trait _5 = Obj + Send;\n    |            first non-auto trait\n ...\n LL | trait _6 = _5 + _5; // ==> Obj + Send + Obj + Send\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n LL | \n LL | type _T30 = dyn _6;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:84:17\n@@ -240,10 +301,15 @@ LL | trait _5 = Obj + Send;\n    |            first non-auto trait\n ...\n LL | trait _6 = _5 + _5; // ==> Obj + Send + Obj + Send\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n ...\n LL | type _T31 = dyn _6 + Send;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:87:24\n@@ -255,19 +321,33 @@ LL | trait _5 = Obj + Send;\n    |            first non-auto trait\n ...\n LL | trait _6 = _5 + _5; // ==> Obj + Send + Obj + Send\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n ...\n LL | type _T32 = dyn Send + _6;\n    |                        ^^\n+   |                        |\n+   |                        trait alias used in trait object type (additional use)\n+   |                        trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:95:22\n    |\n LL | trait _5 = Obj + Send;\n    |            --- first non-auto trait\n ...\n+LL | trait _7 = _5 + Sync;\n+   |            -- referenced here (first use)\n+LL | trait _8 = Unpin + _7;\n+   |                    -- referenced here (first use)\n+LL | \n LL | type _T40 = dyn _8 + Obj;\n-   |                      ^^^ additional non-auto trait\n+   |                 --   ^^^\n+   |                 |    |\n+   |                 |    additional non-auto trait\n+   |                 |    trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:98:23\n@@ -276,62 +356,78 @@ LL | trait _5 = Obj + Send;\n    |            --- additional non-auto trait\n ...\n LL | trait _7 = _5 + Sync;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n LL | trait _8 = Unpin + _7;\n-   |                    -- referenced here\n+   |                    -- referenced here (additional use)\n ...\n LL | type _T41 = dyn Obj + _8;\n-   |                 ---   ^^\n+   |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:101:22\n    |\n LL | trait _3 = Obj;\n    |            --- additional non-auto trait\n LL | trait _4 = _3;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _5 = Obj + Send;\n    |            --- first non-auto trait\n ...\n+LL | trait _7 = _5 + Sync;\n+   |            -- referenced here (first use)\n+LL | trait _8 = Unpin + _7;\n+   |                    -- referenced here (first use)\n+...\n LL | type _T42 = dyn _8 + _4;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:104:22\n    |\n LL | trait _3 = Obj;\n    |            --- first non-auto trait\n+LL | trait _4 = _3;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Obj + Send;\n    |            --- additional non-auto trait\n ...\n LL | trait _7 = _5 + Sync;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n LL | trait _8 = Unpin + _7;\n-   |                    -- referenced here\n+   |                    -- referenced here (additional use)\n ...\n LL | type _T43 = dyn _4 + _8;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:107:36\n    |\n LL | trait _3 = Obj;\n    |            --- first non-auto trait\n+LL | trait _4 = _3;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Obj + Send;\n    |            --- additional non-auto trait\n ...\n LL | trait _7 = _5 + Sync;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n LL | trait _8 = Unpin + _7;\n-   |                    -- referenced here\n+   |                    -- referenced here (additional use)\n ...\n LL | type _T44 = dyn _4 + Send + Sync + _8;\n-   |                                    ^^\n+   |                 --                 ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:117:18\n@@ -341,7 +437,9 @@ LL | trait _9 = for<'a> ObjL<'a>;\n LL | trait _10 = for<'b> ObjL<'b>;\n    |             ---------------- additional non-auto trait\n LL | type _T50 = _9 + _10;\n-   |                  ^^^\n+   |             --   ^^^ trait alias used in trait object type (additional use)\n+   |             |\n+   |             trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:123:19\n@@ -351,7 +449,9 @@ LL | trait _11 = ObjT<for<'a> fn(&'a u8)>;\n LL | trait _12 = ObjT<for<'b> fn(&'b u8)>;\n    |             ------------------------ additional non-auto trait\n LL | type _T60 = _11 + _12;\n-   |                   ^^^\n+   |             ---   ^^^ trait alias used in trait object type (additional use)\n+   |             |\n+   |             trait alias used in trait object type (first use)\n \n error: aborting due to 27 previous errors\n "}, {"sha": "15685a228833d69184a4e27e11748e519f244765", "filename": "src/test/ui/traits/trait-alias/trait-alias-no-extra-traits.stderr", "status": "modified", "additions": 188, "deletions": 46, "changes": 234, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-extra-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-extra-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-extra-traits.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -5,7 +5,11 @@ LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n ...\n LL | type _T00 = dyn _0 + ObjB;\n-   |                      ^^^^ additional non-auto trait\n+   |                 --   ^^^^\n+   |                 |    |\n+   |                 |    additional non-auto trait\n+   |                 |    trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:19:24\n@@ -14,31 +18,39 @@ LL | trait _0 = ObjA;\n    |            ---- additional non-auto trait\n ...\n LL | type _T01 = dyn ObjB + _0;\n-   |                 ----   ^^\n+   |                 ----   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:22:24\n    |\n LL | trait _0 = ObjA;\n    |            ---- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | type _T02 = dyn ObjB + _1;\n-   |                 ----   ^^\n+   |                 ----   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:25:22\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | type _T03 = dyn _1 + ObjB;\n-   |                      ^^^^ additional non-auto trait\n+   |                 --   ^^^^\n+   |                 |    |\n+   |                 |    additional non-auto trait\n+   |                 |    trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:34:22\n@@ -49,10 +61,12 @@ LL | trait _2 = ObjB;\n    |            additional non-auto trait\n    |            first non-auto trait\n LL | trait _3 = _2;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | type _T10 = dyn _2 + _3;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:37:22\n@@ -62,9 +76,13 @@ LL | trait _2 = ObjB;\n    |            |\n    |            additional non-auto trait\n    |            first non-auto trait\n+LL | trait _3 = _2;\n+   |            -- referenced here (first use)\n ...\n LL | type _T11 = dyn _3 + _2;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:40:22\n@@ -75,12 +93,14 @@ LL | trait _2 = ObjB;\n    |            additional non-auto trait\n    |            first non-auto trait\n LL | trait _3 = _2;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n LL | trait _4 = _3;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | type _T12 = dyn _2 + _4;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:43:22\n@@ -90,35 +110,47 @@ LL | trait _2 = ObjB;\n    |            |\n    |            additional non-auto trait\n    |            first non-auto trait\n+LL | trait _3 = _2;\n+   |            -- referenced here (first use)\n+LL | trait _4 = _3;\n+   |            -- referenced here (first use)\n ...\n LL | type _T13 = dyn _4 + _2;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:50:22\n    |\n LL | trait _0 = ObjA;\n    |            ---- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n LL | \n LL | type _T20 = dyn _5 + _1;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:53:22\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | type _T21 = dyn _1 + _5;\n-   |                      ^^\n+   |                 --   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:56:22\n@@ -127,7 +159,11 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n LL | type _T22 = dyn _5 + ObjA;\n-   |                      ^^^^ additional non-auto trait\n+   |                 --   ^^^^\n+   |                 |    |\n+   |                 |    additional non-auto trait\n+   |                 |    trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:59:24\n@@ -136,35 +172,42 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | type _T23 = dyn ObjA + _5;\n-   |                 ----   ^^\n+   |                 ----   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:62:29\n    |\n LL | trait _0 = ObjA;\n    |            ---- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n LL | type _T24 = dyn Send + _5 + _1 + Sync;\n-   |                             ^^\n+   |                        --   ^^ trait alias used in trait object type (additional use)\n+   |                        |\n+   |                        trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:65:29\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | type _T25 = dyn _1 + Sync + _5 + Send;\n-   |                             ^^\n+   |                 --          ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:68:36\n@@ -173,7 +216,11 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n LL | type _T26 = dyn Sync + Send + _5 + ObjA;\n-   |                                    ^^^^ additional non-auto trait\n+   |                               --   ^^^^\n+   |                               |    |\n+   |                               |    additional non-auto trait\n+   |                               |    trait alias used in trait object type (additional use)\n+   |                               trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:71:38\n@@ -182,120 +229,190 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | type _T27 = dyn Send + Sync + ObjA + _5;\n-   |                               ----   ^^\n+   |                               ----   ^^ trait alias used in trait object type (additional use)\n    |                               |\n    |                               first non-auto trait\n+   |                               trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:80:17\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _6 = _1 + _5;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n ...\n LL | type _T30 = dyn _6;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:83:17\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _6 = _1 + _5;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n ...\n LL | type _T31 = dyn _6 + Send;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:86:24\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _6 = _1 + _5;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n ...\n LL | type _T32 = dyn Send + _6;\n    |                        ^^\n+   |                        |\n+   |                        trait alias used in trait object type (additional use)\n+   |                        trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:89:17\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _6 = _1 + _5;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n LL | trait _7 = _6;\n-   |            -- referenced here\n+   |            --\n+   |            |\n+   |            referenced here (additional use)\n+   |            referenced here (first use)\n LL | trait _8 = _7;\n-   |            -- referenced here\n+   |            --\n+   |            |\n+   |            referenced here (additional use)\n+   |            referenced here (first use)\n ...\n LL | type _T33 = dyn _8;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:92:17\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _6 = _1 + _5;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n LL | trait _7 = _6;\n-   |            -- referenced here\n+   |            --\n+   |            |\n+   |            referenced here (additional use)\n+   |            referenced here (first use)\n LL | trait _8 = _7;\n-   |            -- referenced here\n+   |            --\n+   |            |\n+   |            referenced here (additional use)\n+   |            referenced here (first use)\n ...\n LL | type _T34 = dyn _8 + Send;\n    |                 ^^\n+   |                 |\n+   |                 trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:95:24\n    |\n LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n+LL | trait _1 = _0;\n+   |            -- referenced here (first use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _6 = _1 + _5;\n-   |                 -- referenced here\n+   |            --   -- referenced here (additional use)\n+   |            |\n+   |            referenced here (first use)\n LL | trait _7 = _6;\n-   |            -- referenced here\n+   |            --\n+   |            |\n+   |            referenced here (additional use)\n+   |            referenced here (first use)\n LL | trait _8 = _7;\n-   |            -- referenced here\n+   |            --\n+   |            |\n+   |            referenced here (additional use)\n+   |            referenced here (first use)\n ...\n LL | type _T35 = dyn Send + _8;\n    |                        ^^\n+   |                        |\n+   |                        trait alias used in trait object type (additional use)\n+   |                        trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:103:23\n    |\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n+LL | trait _9 = _5 + Sync;\n+   |            -- referenced here (first use)\n+LL | trait _10 = Unpin + _9;\n+   |                     -- referenced here (first use)\n+LL | \n LL | type _T40 = dyn _10 + ObjA;\n-   |                       ^^^^ additional non-auto trait\n+   |                 ---   ^^^^\n+   |                 |     |\n+   |                 |     additional non-auto trait\n+   |                 |     trait alias used in trait object type (additional use)\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:106:24\n@@ -304,37 +421,54 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _9 = _5 + Sync;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n LL | trait _10 = Unpin + _9;\n-   |                     -- referenced here\n+   |                     -- referenced here (additional use)\n ...\n LL | type _T41 = dyn ObjA + _10;\n-   |                 ----   ^^^\n+   |                 ----   ^^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:109:23\n    |\n LL | trait _0 = ObjA;\n    |            ---- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n+LL | trait _9 = _5 + Sync;\n+   |            -- referenced here (first use)\n+LL | trait _10 = Unpin + _9;\n+   |                     -- referenced here (first use)\n+...\n LL | type _T42 = dyn _10 + _1;\n-   |                       ^^\n+   |                 ---   ^^ trait alias used in trait object type (additional use)\n+   |                 |\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:112:37\n    |\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n+LL | trait _9 = _5 + Sync;\n+   |            -- referenced here (first use)\n+LL | trait _10 = Unpin + _9;\n+   |                     -- referenced here (first use)\n+...\n LL | type _T43 = dyn Send + _10 + Sync + ObjA;\n-   |                                     ^^^^ additional non-auto trait\n+   |                        ---          ^^^^\n+   |                        |            |\n+   |                        |            additional non-auto trait\n+   |                        |            trait alias used in trait object type (additional use)\n+   |                        trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:115:24\n@@ -343,28 +477,36 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- additional non-auto trait\n ...\n LL | trait _9 = _5 + Sync;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n LL | trait _10 = Unpin + _9;\n-   |                     -- referenced here\n+   |                     -- referenced here (additional use)\n ...\n LL | type _T44 = dyn ObjA + _10 + Send + Sync;\n-   |                 ----   ^^^\n+   |                 ----   ^^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n+   |                 trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:118:37\n    |\n LL | trait _0 = ObjA;\n    |            ---- additional non-auto trait\n LL | trait _1 = _0;\n-   |            -- referenced here\n+   |            -- referenced here (additional use)\n ...\n LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n+LL | trait _9 = _5 + Sync;\n+   |            -- referenced here (first use)\n+LL | trait _10 = Unpin + _9;\n+   |                     -- referenced here (first use)\n+...\n LL | type _T45 = dyn Sync + Send + _10 + _1;\n-   |                                     ^^\n+   |                               ---   ^^ trait alias used in trait object type (additional use)\n+   |                               |\n+   |                               trait alias used in trait object type (first use)\n \n error: aborting due to 28 previous errors\n "}, {"sha": "fb26b7e2df7cba801409e348b3cd4c80466c2459", "filename": "src/test/ui/traits/trait-alias/trait-alias-object-wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-object-wf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-object-wf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-object-wf.rs?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-// This test hecks that trait objects involving trait aliases are well-formed.\n+// This test checks that trait objects involving trait aliases are well-formed.\n \n #![feature(trait_alias)]\n "}, {"sha": "d4f77200fd5a03fbe87c3d0f18f716087c682e1f", "filename": "src/test/ui/traits/trait-alias/trait-alias-only-maybe-bound.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-only-maybe-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-only-maybe-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-only-maybe-bound.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -1,13 +1,13 @@\n error[E0224]: at least one non-builtin trait is required for an object type\n-  --> $DIR/trait-alias-maybe-bound.rs:12:12\n+  --> $DIR/trait-alias-only-maybe-bound.rs:13:12\n    |\n LL | type _T0 = dyn _1;\n    |            ^^^^^^\n \n error[E0224]: at least one non-builtin trait is required for an object type\n-  --> $DIR/trait-alias-maybe-bound.rs:24:12\n+  --> $DIR/trait-alias-only-maybe-bound.rs:19:12\n    |\n-LL | type _T3 = dyn _2;\n+LL | type _T1 = dyn _2;\n    |            ^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "269d92fe43db80aff783a3bcdfc476efc389233f", "filename": "src/test/ui/traits/wf-trait-object-no-duplicates.stderr", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-no-duplicates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-no-duplicates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-no-duplicates.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -2,41 +2,56 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/wf-trait-object-no-duplicates.rs:8:21\n    |\n LL | type _0 = dyn Obj + Obj;\n-   |               ---   ^^^ additional non-auto trait\n-   |               |\n+   |               ---   ^^^\n+   |               |     |\n+   |               |     additional non-auto trait\n+   |               |     trait alias used in trait object type (additional use)\n    |               first non-auto trait\n+   |               trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:13:28\n    |\n LL | type _1 = dyn Send + Obj + Obj;\n-   |                      ---   ^^^ additional non-auto trait\n-   |                      |\n+   |                      ---   ^^^\n+   |                      |     |\n+   |                      |     additional non-auto trait\n+   |                      |     trait alias used in trait object type (additional use)\n    |                      first non-auto trait\n+   |                      trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:16:28\n    |\n LL | type _2 = dyn Obj + Send + Obj;\n-   |               ---          ^^^ additional non-auto trait\n-   |               |\n+   |               ---          ^^^\n+   |               |            |\n+   |               |            additional non-auto trait\n+   |               |            trait alias used in trait object type (additional use)\n    |               first non-auto trait\n+   |               trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:26:34\n    |\n LL | type _4 = dyn for<'a> ObjL<'a> + for<'b> ObjL<'b>;\n-   |               ----------------   ^^^^^^^^^^^^^^^^ additional non-auto trait\n-   |               |\n+   |               ----------------   ^^^^^^^^^^^^^^^^\n+   |               |                  |\n+   |               |                  additional non-auto trait\n+   |               |                  trait alias used in trait object type (additional use)\n    |               first non-auto trait\n+   |               trait alias used in trait object type (first use)\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:30:42\n    |\n LL | type _5 = dyn ObjT<for<'a> fn(&'a u8)> + ObjT<for<'b> fn(&'b u8)>;\n-   |               ------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^ additional non-auto trait\n-   |               |\n+   |               ------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               |                          |\n+   |               |                          additional non-auto trait\n+   |               |                          trait alias used in trait object type (additional use)\n    |               first non-auto trait\n+   |               trait alias used in trait object type (first use)\n \n error: aborting due to 5 previous errors\n "}, {"sha": "7a5080bbd0c0bd635b9a060d067156ff0184a1c9", "filename": "src/test/ui/traits/wf-trait-object-only-maybe-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/783b713b5d90747dec1aabdbc8bfc348593a00c5/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.stderr?ref=783b713b5d90747dec1aabdbc8bfc348593a00c5", "patch": "@@ -1,5 +1,5 @@\n error[E0224]: at least one non-builtin trait is required for an object type\n-  --> $DIR/wf-trait-object-maybe-bound.rs:4:11\n+  --> $DIR/wf-trait-object-only-maybe-bound.rs:3:11\n    |\n LL | type _0 = dyn ?Sized;\n    |           ^^^^^^^^^^"}]}