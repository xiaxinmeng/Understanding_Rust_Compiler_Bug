{"sha": "34b4e66736a0fb65235feadbb5178d42bd09ed67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0YjRlNjY3MzZhMGZiNjUyMzVmZWFkYmI1MTc4ZDQyYmQwOWVkNjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-21T09:02:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-21T09:02:48Z"}, "message": "Auto merge of #29520 - retep998:staticlib-naming-fiasco, r=alexcrichton\n\nI'm not sure if this was the best way to go about it, but it seems to work.\n\nFixes https://github.com/rust-lang/rust/issues/29508\n\nr? @alexcrichton", "tree": {"sha": "487479d46139a4e47a566e02995bb485622147a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/487479d46139a4e47a566e02995bb485622147a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34b4e66736a0fb65235feadbb5178d42bd09ed67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34b4e66736a0fb65235feadbb5178d42bd09ed67", "html_url": "https://github.com/rust-lang/rust/commit/34b4e66736a0fb65235feadbb5178d42bd09ed67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34b4e66736a0fb65235feadbb5178d42bd09ed67/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5ec3ab6851eefaf87ea2247c2ce373f1e905351", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ec3ab6851eefaf87ea2247c2ce373f1e905351", "html_url": "https://github.com/rust-lang/rust/commit/d5ec3ab6851eefaf87ea2247c2ce373f1e905351"}, {"sha": "1b0064ea60fcfd9c0a4f4aa88bb1943dc7c3850e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b0064ea60fcfd9c0a4f4aa88bb1943dc7c3850e", "html_url": "https://github.com/rust-lang/rust/commit/1b0064ea60fcfd9c0a4f4aa88bb1943dc7c3850e"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "b0fb12b26b28f96e778c9367a2d5fe7229198e3a", "filename": "src/librustc_metadata/loader.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Flibrustc_metadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Flibrustc_metadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Floader.rs?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -388,11 +388,12 @@ impl<'a> Context<'a> {\n         }\n \n         let dypair = self.dylibname();\n+        let staticpair = self.staticlibname();\n \n         // want: crate_name.dir_part() + prefix + crate_name.file_part + \"-\"\n         let dylib_prefix = format!(\"{}{}\", dypair.0, self.crate_name);\n         let rlib_prefix = format!(\"lib{}\", self.crate_name);\n-        let staticlib_prefix = format!(\"lib{}\", self.crate_name);\n+        let staticlib_prefix = format!(\"{}{}\", staticpair.0, self.crate_name);\n \n         let mut candidates = HashMap::new();\n         let mut staticlibs = vec!();\n@@ -425,7 +426,7 @@ impl<'a> Context<'a> {\n                  false)\n             } else {\n                 if file.starts_with(&staticlib_prefix[..]) &&\n-                   file.ends_with(\".a\") {\n+                   file.ends_with(&staticpair.1) {\n                     staticlibs.push(CrateMismatch {\n                         path: path.to_path_buf(),\n                         got: \"static\".to_string()\n@@ -644,6 +645,13 @@ impl<'a> Context<'a> {\n         (t.options.dll_prefix.clone(), t.options.dll_suffix.clone())\n     }\n \n+    // Returns the corresponding (prefix, suffix) that files need to have for\n+    // static libraries\n+    fn staticlibname(&self) -> (String, String) {\n+        let t = &self.target;\n+        (t.options.staticlib_prefix.clone(), t.options.staticlib_suffix.clone())\n+    }\n+\n     fn find_commandline_library(&mut self, locs: &[String]) -> Option<Library> {\n         // First, filter out all libraries that look suspicious. We only accept\n         // files which actually exist that have the correct naming scheme for"}, {"sha": "6aabf51a9ed9f10b44e7561f0331873c0bee4735", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -490,7 +490,10 @@ pub fn filename_for_input(sess: &Session,\n                                                 suffix))\n         }\n         config::CrateTypeStaticlib => {\n-            outputs.out_directory.join(&format!(\"lib{}.a\", libname))\n+            let (prefix, suffix) = (&sess.target.target.options.staticlib_prefix,\n+                                    &sess.target.target.options.staticlib_suffix);\n+            outputs.out_directory.join(&format!(\"{}{}{}\", prefix, libname,\n+                                                suffix))\n         }\n         config::CrateTypeExecutable => {\n             let suffix = &sess.target.target.options.exe_suffix;"}, {"sha": "9c445737b10eefa01ea58705f216d6095658a3d4", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -210,7 +210,14 @@ impl<'a> Linker for MsvcLinker<'a> {\n     fn link_rlib(&mut self, lib: &Path) { self.cmd.arg(lib); }\n     fn add_object(&mut self, path: &Path) { self.cmd.arg(path); }\n     fn args(&mut self, args: &[String]) { self.cmd.args(args); }\n-    fn build_dylib(&mut self, _out_filename: &Path) { self.cmd.arg(\"/DLL\"); }\n+\n+    fn build_dylib(&mut self, out_filename: &Path) {\n+        self.cmd.arg(\"/DLL\");\n+        let mut arg: OsString = \"/IMPLIB:\".into();\n+        arg.push(out_filename.with_extension(\"dll.lib\"));\n+        self.cmd.arg(arg);\n+    }\n+\n     fn gc_sections(&mut self, _is_dylib: bool) { self.cmd.arg(\"/OPT:REF,ICF\"); }\n \n     fn link_dylib(&mut self, lib: &str) {\n@@ -222,7 +229,7 @@ impl<'a> Linker for MsvcLinker<'a> {\n         // `foo.lib` file if the dll doesn't actually export any symbols, so we\n         // check to see if the file is there and just omit linking to it if it's\n         // not present.\n-        let name = format!(\"{}.lib\", lib);\n+        let name = format!(\"{}.dll.lib\", lib);\n         if fs::metadata(&path.join(&name)).is_ok() {\n             self.cmd.arg(name);\n         }"}, {"sha": "98e112a374423910cf249c8170e6a6e123a7d5c6", "filename": "src/test/run-make/c-link-to-rust-dylib/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2FMakefile?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -7,7 +7,7 @@ all: $(TMPDIR)/$(call BIN,bar)\n \n ifdef IS_MSVC\n $(TMPDIR)/$(call BIN,bar): $(call DYLIB,foo)\n-\t$(CC) bar.c $(TMPDIR)/foo.lib $(call OUT_EXE,bar)\n+\t$(CC) bar.c $(TMPDIR)/foo.dll.lib $(call OUT_EXE,bar)\n else\n $(TMPDIR)/$(call BIN,bar): $(call DYLIB,foo)\n \t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) -L $(TMPDIR)"}, {"sha": "47264e82165b4a96b80bba72fc96c0ac0214212f", "filename": "src/test/run-make/c-link-to-rust-staticlib/Makefile", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -4,11 +4,10 @@\n ifneq ($(shell uname),FreeBSD)\n all:\n \t$(RUSTC) foo.rs\n-\tcp $(TMPDIR)/libfoo.a $(call NATIVE_STATICLIB,foo2)\n-\t$(CC) bar.c $(call NATIVE_STATICLIB,foo2) $(call OUT_EXE,bar) \\\n+\t$(CC) bar.c $(call STATICLIB,foo) $(call OUT_EXE,bar) \\\n \t\t$(EXTRACFLAGS) $(EXTRACXXFLAGS)\n \t$(call RUN,bar)\n-\trm $(call STATICLIB,foo*)\n+\trm $(call STATICLIB,foo)\n \t$(call RUN,bar)\n \n else"}, {"sha": "0f61f5de938bc37d6bf5fbfae13b58e533ad5c1c", "filename": "src/test/run-make/lto-smoke-c/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -5,7 +5,7 @@ CC := $(CC:-g=)\n \n all:\n \t$(RUSTC) foo.rs -C lto\n-\t$(CC) bar.c $(TMPDIR)/libfoo.a \\\n+\t$(CC) bar.c $(call STATICLIB,foo) \\\n \t\t$(call OUT_EXE,bar) \\\n \t\t$(EXTRACFLAGS) $(EXTRACXXFLAGS)\n \t$(call RUN,bar)"}, {"sha": "c2715027bc1f904470285ddc0ce97fde9df967a2", "filename": "src/test/run-make/output-type-permutations/Makefile", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -4,8 +4,8 @@ all:\n \t$(RUSTC) foo.rs --crate-type=rlib,dylib,staticlib\n \t$(call REMOVE_RLIBS,bar)\n \t$(call REMOVE_DYLIBS,bar)\n-\trm $(TMPDIR)/libbar.a\n-\trm -f $(TMPDIR)/bar.{exp,lib,pdb}\n+\trm $(call STATICLIB,bar)\n+\trm -f $(TMPDIR)/bar.{dll.exp,dll.lib,pdb}\n \t# Check that $(TMPDIR) is empty.\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n@@ -78,7 +78,7 @@ all:\n \trm $(TMPDIR)/$(call BIN,foo)\n \t$(RUSTC) foo.rs --crate-type=dylib --emit=link=$(TMPDIR)/$(call BIN,foo)\n \trm $(TMPDIR)/$(call BIN,foo)\n-\trm -f $(TMPDIR)/foo.{exp,lib,pdb}\n+\trm -f $(TMPDIR)/foo.{dll.exp,dll.lib,pdb}\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --crate-type=staticlib -o $(TMPDIR)/foo\n@@ -133,7 +133,7 @@ all:\n \trm $(TMPDIR)/bar.ll\n \trm $(TMPDIR)/bar.s\n \trm $(TMPDIR)/bar.o\n-\trm $(TMPDIR)/libbar.a\n+\trm $(call STATICLIB,bar)\n \tmv $(TMPDIR)/bar.bc $(TMPDIR)/foo.bc\n \t# Don't check that the $(TMPDIR) is empty - we left `foo.bc` for later\n \t# comparison."}, {"sha": "6409aa66ae061879f2055606e83b573b8dc75bce", "filename": "src/test/run-make/static-dylib-by-default/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/34b4e66736a0fb65235feadbb5178d42bd09ed67/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2FMakefile?ref=34b4e66736a0fb65235feadbb5178d42bd09ed67", "patch": "@@ -2,7 +2,7 @@\n \n TO_LINK := $(call DYLIB,bar)\n ifdef IS_MSVC\n-LINK_ARG = $(TO_LINK:dll=lib)\n+LINK_ARG = $(TO_LINK:dll=dll.lib)\n else\n LINK_ARG = $(TO_LINK)\n endif"}]}