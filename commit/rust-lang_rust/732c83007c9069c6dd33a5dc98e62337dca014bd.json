{"sha": "732c83007c9069c6dd33a5dc98e62337dca014bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMmM4MzAwN2M5MDY5YzZkZDMzYTVkYzk4ZTYyMzM3ZGNhMDE0YmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-07T16:30:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-07T16:30:58Z"}, "message": "Rollup merge of #48028 - zackmdavis:and_the_span_of_the_unknown_type, r=estebank\n\ncorrect E0619 span re method call receivers whose type must be known\n\nPreviously, when the type of a method receiver could not be determined,\nthe error message would, potentially confusingly, highlight the span of\nthe entire method call.\n\n![unknown_receiver_type](https://user-images.githubusercontent.com/1076988/35838930-a595b17c-0aa2-11e8-9364-6b8e2329f051.png)\n\nResolves #36598, resolves #42234.", "tree": {"sha": "42fa6ee4ee4bd3b44887c258fb11372a12d0014d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42fa6ee4ee4bd3b44887c258fb11372a12d0014d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/732c83007c9069c6dd33a5dc98e62337dca014bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaeynCCRBK7hj4Ov3rIwAAdHIIAH+emaRazhADig2F3QYu+32H\nIcjLmmsg+fbBV4PD0cbvXWLJSIEDuoeXk3ANoSb6W8ONnjzVvooLI4kqeC6J3hV7\nCx/9HzebJAd9VrykZO773eY0qHrOpqGwYY8X+84KaaZR+K70tRI1P8DpxhFXnqfV\nb2zdkpOeCSPE9SPTRfnndEfMo5ojP1DlVlAp2trZX5jkBkfpCoCAvKf8ihhiTY63\nUulZSajLmDLE8We3NizX6myf3LhZwNdxp3mV9eEbTQ1QTOx4lnhWvTo5IgpVznPF\nvMaIevxQ9foG2bTni35fAbDccR1I/vXwjXh3by/z5McuOYeUkoXunA9pKyECFZs=\n=1u6x\n-----END PGP SIGNATURE-----\n", "payload": "tree 42fa6ee4ee4bd3b44887c258fb11372a12d0014d\nparent e2b7458a9740d823e958b0ee2a272917f6938bcd\nparent b55e07ee50c9e4d00b6fc13dc27d45bd03a7965d\nauthor Manish Goregaokar <manishsmail@gmail.com> 1518021058 -0800\ncommitter GitHub <noreply@github.com> 1518021058 -0800\n\nRollup merge of #48028 - zackmdavis:and_the_span_of_the_unknown_type, r=estebank\n\ncorrect E0619 span re method call receivers whose type must be known\n\nPreviously, when the type of a method receiver could not be determined,\nthe error message would, potentially confusingly, highlight the span of\nthe entire method call.\n\n![unknown_receiver_type](https://user-images.githubusercontent.com/1076988/35838930-a595b17c-0aa2-11e8-9364-6b8e2329f051.png)\n\nResolves #36598, resolves #42234.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/732c83007c9069c6dd33a5dc98e62337dca014bd", "html_url": "https://github.com/rust-lang/rust/commit/732c83007c9069c6dd33a5dc98e62337dca014bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/732c83007c9069c6dd33a5dc98e62337dca014bd/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2b7458a9740d823e958b0ee2a272917f6938bcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2b7458a9740d823e958b0ee2a272917f6938bcd", "html_url": "https://github.com/rust-lang/rust/commit/e2b7458a9740d823e958b0ee2a272917f6938bcd"}, {"sha": "b55e07ee50c9e4d00b6fc13dc27d45bd03a7965d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b55e07ee50c9e4d00b6fc13dc27d45bd03a7965d", "html_url": "https://github.com/rust-lang/rust/commit/b55e07ee50c9e4d00b6fc13dc27d45bd03a7965d"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "f044b2c711e2049446fee6dbe11df2bacae0fc24", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/732c83007c9069c6dd33a5dc98e62337dca014bd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/732c83007c9069c6dd33a5dc98e62337dca014bd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=732c83007c9069c6dd33a5dc98e62337dca014bd", "patch": "@@ -2925,7 +2925,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         let rcvr = &args[0];\n         let rcvr_t = self.check_expr_with_needs(&rcvr, needs);\n         // no need to check for bot/err -- callee does that\n-        let rcvr_t = self.structurally_resolved_type(expr.span, rcvr_t);\n+        let rcvr_t = self.structurally_resolved_type(args[0].span, rcvr_t);\n \n         let method = match self.lookup_method(rcvr_t,\n                                               segment,"}, {"sha": "d9cdd99c245e6ff9c5d804afb1e445f7633a5eb5", "filename": "src/test/ui/span/issue-42234-unknown-receiver-type.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/732c83007c9069c6dd33a5dc98e62337dca014bd/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/732c83007c9069c6dd33a5dc98e62337dca014bd/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.rs?ref=732c83007c9069c6dd33a5dc98e62337dca014bd", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// When the type of a method call's receiver is unknown, the span should point\n+// to the receiver (and not the entire call, as was previously the case before\n+// the fix of which this tests).\n+\n+fn shines_a_beacon_through_the_darkness() {\n+    let x: Option<_> = None;\n+    x.unwrap().method_that_could_exist_on_some_type();\n+    //~^ ERROR 17:5: 17:15: the type of this value must be known in this context\n+}\n+\n+fn courier_to_des_moines_and_points_west(data: &[u32]) -> String {\n+    data.iter() //~ ERROR 22:5: 23:20: the type of this value must be known in this context\n+        .sum::<_>()\n+        .to_string()\n+}\n+\n+fn main() {}"}, {"sha": "ed756cdc553ce7c8f64ac655441b8f7763814dc8", "filename": "src/test/ui/span/issue-42234-unknown-receiver-type.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/732c83007c9069c6dd33a5dc98e62337dca014bd/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/732c83007c9069c6dd33a5dc98e62337dca014bd/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.stderr?ref=732c83007c9069c6dd33a5dc98e62337dca014bd", "patch": "@@ -0,0 +1,15 @@\n+error[E0619]: the type of this value must be known in this context\n+  --> $DIR/issue-42234-unknown-receiver-type.rs:17:5\n+   |\n+17 |     x.unwrap().method_that_could_exist_on_some_type();\n+   |     ^^^^^^^^^^\n+\n+error[E0619]: the type of this value must be known in this context\n+  --> $DIR/issue-42234-unknown-receiver-type.rs:22:5\n+   |\n+22 | /     data.iter() //~ ERROR 22:5: 23:20: the type of this value must be known in this context\n+23 | |         .sum::<_>()\n+   | |___________________^\n+\n+error: aborting due to 2 previous errors\n+"}]}