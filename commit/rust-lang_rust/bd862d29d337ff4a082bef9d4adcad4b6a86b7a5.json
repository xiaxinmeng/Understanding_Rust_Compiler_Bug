{"sha": "bd862d29d337ff4a082bef9d4adcad4b6a86b7a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkODYyZDI5ZDMzN2ZmNGEwODJiZWY5ZDRhZGNhZDRiNmE4NmI3YTU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-03-20T05:03:10Z"}, "committer": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2017-03-21T20:53:34Z"}, "message": "Fix bug in legacy `#[derive]` processing logic.", "tree": {"sha": "38e1ef21965c691eede288d699c9b0ba87016859", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38e1ef21965c691eede288d699c9b0ba87016859"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJY0ZLOAAoJEN4E2eJ1WbyKsFgH/ifnIATL4QxN+QC0IwCUV2DL\nZZNEEuMLAP1+yi8gjgFfrfgAjnjsNKg60u3HKm8yQOOqhPp7JBzAUsOvgGowwV7A\nyy83tgnxLWmksG2/z+nbTxddVr335te3Iz8pxfuO6nDq20KbO9S0fQc16NY4nwFb\nkNo/SVcLdtbLc5/TAjvuIFt9ksgQImhAEu9wZq+3HnJqvJcRVNq97YGxgM5Xsvvs\nbq8OIe/7y+kVeNXo2a6WuvrMp6pcMoJHmH7Wm5kr0TXRI7qBTSxG26Yru65wfI50\nvGwBdjIK3E2o85uBaaT0guJmLHQeRnjfL/nBpx4YzfHnUKifI4pgOYwRNPVVQIY=\n=eDiy\n-----END PGP SIGNATURE-----", "payload": "tree 38e1ef21965c691eede288d699c9b0ba87016859\nparent 58c701f5c7dc26d9b55c631006ece52abe1ddce2\nauthor Jeffrey Seyfried <jeffrey.seyfried@gmail.com> 1489986190 +0000\ncommitter Peter Atashian <retep998@gmail.com> 1490129614 -0400\n\nFix bug in legacy `#[derive]` processing logic.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5", "html_url": "https://github.com/rust-lang/rust/commit/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58c701f5c7dc26d9b55c631006ece52abe1ddce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/58c701f5c7dc26d9b55c631006ece52abe1ddce2", "html_url": "https://github.com/rust-lang/rust/commit/58c701f5c7dc26d9b55c631006ece52abe1ddce2"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "f83413095934d9b19e87604d65b02bf66644834a", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=bd862d29d337ff4a082bef9d4adcad4b6a86b7a5", "patch": "@@ -230,12 +230,12 @@ impl<'a> base::Resolver for Resolver<'a> {\n                         attrs.remove(i);\n                     } else {\n                         let mut tokens = Vec::new();\n-                        for (i, path) in traits.iter().enumerate() {\n-                            if i > 0 {\n+                        for (j, path) in traits.iter().enumerate() {\n+                            if j > 0 {\n                                 tokens.push(TokenTree::Token(attrs[i].span, Token::Comma).into());\n                             }\n-                            for (j, segment) in path.segments.iter().enumerate() {\n-                                if j > 0 {\n+                            for (k, segment) in path.segments.iter().enumerate() {\n+                                if k > 0 {\n                                     tokens.push(TokenTree::Token(path.span, Token::ModSep).into());\n                                 }\n                                 let tok = Token::Ident(segment.identifier);"}, {"sha": "16856d304174999c74afe55adc2b371104fe5940", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_plugin.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_plugin.rs?ref=bd862d29d337ff4a082bef9d4adcad4b6a86b7a5", "patch": "@@ -34,8 +34,14 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_custom_derive(\n         Symbol::intern(\"derive_TotalSum\"),\n         MultiDecorator(box expand));\n+\n+    reg.register_custom_derive(\n+        Symbol::intern(\"derive_Nothing\"),\n+        MultiDecorator(box noop));\n }\n \n+fn noop(_: &mut ExtCtxt, _: Span, _: &ast::MetaItem, _: &Annotatable, _: &mut FnMut(Annotatable)) {}\n+\n fn expand(cx: &mut ExtCtxt,\n           span: Span,\n           mitem: &ast::MetaItem,"}, {"sha": "d030eab64e564026301e6996e34b55d8e6775681", "filename": "src/test/run-pass-fulldeps/issue-40663.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5/src%2Ftest%2Frun-pass-fulldeps%2Fissue-40663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd862d29d337ff4a082bef9d4adcad4b6a86b7a5/src%2Ftest%2Frun-pass-fulldeps%2Fissue-40663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-40663.rs?ref=bd862d29d337ff4a082bef9d4adcad4b6a86b7a5", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:custom_derive_plugin.rs\n+\n+#![feature(plugin, custom_derive)]\n+#![plugin(custom_derive_plugin)]\n+\n+#[derive(Nothing, Nothing, Nothing)]\n+struct S;\n+\n+fn main() {}"}]}