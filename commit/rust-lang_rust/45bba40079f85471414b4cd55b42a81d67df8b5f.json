{"sha": "45bba40079f85471414b4cd55b42a81d67df8b5f", "node_id": "C_kwDOAAsO6NoAKDQ1YmJhNDAwNzlmODU0NzE0MTRiNGNkNTViNDJhODFkNjdkZjhiNWY", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-27T18:35:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "dead code", "tree": {"sha": "a0772c748ce285b1fcce864722193521849b2bc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0772c748ce285b1fcce864722193521849b2bc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45bba40079f85471414b4cd55b42a81d67df8b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45bba40079f85471414b4cd55b42a81d67df8b5f", "html_url": "https://github.com/rust-lang/rust/commit/45bba40079f85471414b4cd55b42a81d67df8b5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45bba40079f85471414b4cd55b42a81d67df8b5f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f15641011b5d1211d6f86ce77a60f05b02a25b", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f15641011b5d1211d6f86ce77a60f05b02a25b", "html_url": "https://github.com/rust-lang/rust/commit/55f15641011b5d1211d6f86ce77a60f05b02a25b"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "1fb3dc6a65e0c85a06a1290520ceead02c8935e6", "filename": "crates/syntax/src/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/45bba40079f85471414b4cd55b42a81d67df8b5f/crates%2Fsyntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45bba40079f85471414b4cd55b42a81d67df8b5f/crates%2Fsyntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Flib.rs?ref=45bba40079f85471414b4cd55b42a81d67df8b5f", "patch": "@@ -187,13 +187,6 @@ impl ast::Expr {\n     }\n }\n \n-impl ast::Attr {\n-    /// Returns `text`, parsed as an attribute, but only if it has no errors.\n-    pub fn parse(text: &str) -> Result<Self, ()> {\n-        parsing::parse_text_as(text, parser::ParserEntryPoint::Attr)\n-    }\n-}\n-\n /// Matches a `SyntaxNode` against an `ast` type.\n ///\n /// # Example:"}]}