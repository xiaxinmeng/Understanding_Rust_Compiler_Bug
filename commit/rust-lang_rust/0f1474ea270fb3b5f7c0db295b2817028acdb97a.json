{"sha": "0f1474ea270fb3b5f7c0db295b2817028acdb97a", "node_id": "C_kwDOAAsO6NoAKDBmMTQ3NGVhMjcwZmIzYjVmN2MwZGIyOTViMjgxNzAyOGFjZGI5N2E", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-03-10T23:23:58Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-03-10T23:30:30Z"}, "message": "Add `allow_attribute` lint", "tree": {"sha": "31f8b44576ea575f9cc1bc0b5ce5a79fec84bf7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31f8b44576ea575f9cc1bc0b5ce5a79fec84bf7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1474ea270fb3b5f7c0db295b2817028acdb97a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmQLvZYACgkQTTgXC1ov\nwzTwKQ/9FQps7wjhEuNNmXSQ0qPwJYyeWKBfc0w0O+PoIgYJ2J5aaVQ1wHogh/CC\nrLPN8i/L64acyZGlz+1toOH3zIcXejBwU7bTeXNhnn9w1rPGHe9EBQG6KBcYfztv\ni7YBmjWB9zvBWUw/WHSkVVkGz1jzgwxTM7ax+xR+yb5hRJTZzEtoa8PWaBF/AGJS\n0+jCemi/vNyBfPQkesh+3cPi7z9NUaEPiqXlKCtGTXkcWMR7nVMb9O2T2tij5g7/\n/qDo9Pk12yGbejBqNo6NTJMtNRxUUe14ay4e4J7j4Z+9xEU1r62+ZHpj3p6ehcDM\n870z6ZSxWX1LDl5E8D5nEcNx6eXuo/4uW8TovlEA8qPp3xPI5T3B2Pwg8wSdq7nS\ndRrB+0HjnfjqYId10ItimBbHdXaIM52Id+xnWdFIWHOU9EjzcV0IlCPZm02wxkyp\nT906mrmpWc+/i9cPtChtSP/uOVC6jZnfRDgfWF0zY7uy8dBU3ckvqdqNe4S2a1y5\nmFf7m4R1QU4zRtwPq29A0U5xClHsH4skWf96cdc8X0rPCzA6tt85nOA3TmVxHUmA\n6nh2rlRXfn6UqxyxCuE/eHVFf6qfUdCka/JMCt/jiCoZyd4erlvZX+c8/6bwUxUP\nXryRtEnb3XxUOFJvqSBir7IBK01GTHktvrq/iKXmd4KbWel6gCQ=\n=OJFq\n-----END PGP SIGNATURE-----", "payload": "tree 31f8b44576ea575f9cc1bc0b5ce5a79fec84bf7e\nparent 8e1dd06918f405b9c19f8877109fad91d0c43099\nauthor blyxyas <blyxyas@gmail.com> 1678490638 +0100\ncommitter blyxyas <blyxyas@gmail.com> 1678491030 +0100\n\nAdd `allow_attribute` lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1474ea270fb3b5f7c0db295b2817028acdb97a", "html_url": "https://github.com/rust-lang/rust/commit/0f1474ea270fb3b5f7c0db295b2817028acdb97a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1474ea270fb3b5f7c0db295b2817028acdb97a/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e1dd06918f405b9c19f8877109fad91d0c43099", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e1dd06918f405b9c19f8877109fad91d0c43099", "html_url": "https://github.com/rust-lang/rust/commit/8e1dd06918f405b9c19f8877109fad91d0c43099"}], "stats": {"total": 145, "additions": 145, "deletions": 0}, "files": [{"sha": "2b00fd962cad7ec419ca8ea53c5d055fa155b1b4", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f1474ea270fb3b5f7c0db295b2817028acdb97a/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/0f1474ea270fb3b5f7c0db295b2817028acdb97a/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=0f1474ea270fb3b5f7c0db295b2817028acdb97a", "patch": "@@ -4382,6 +4382,7 @@ Released 2018-09-13\n <!-- begin autogenerated links to lint list -->\n [`absurd_extreme_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n [`alloc_instead_of_core`]: https://rust-lang.github.io/rust-clippy/master/index.html#alloc_instead_of_core\n+[`allow_attribute`]: https://rust-lang.github.io/rust-clippy/master/index.html#allow_attribute\n [`allow_attributes_without_reason`]: https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason\n [`almost_complete_letter_range`]: https://rust-lang.github.io/rust-clippy/master/index.html#almost_complete_letter_range\n [`almost_complete_range`]: https://rust-lang.github.io/rust-clippy/master/index.html#almost_complete_range"}, {"sha": "2970d467f6f569dcbacde804079e506c8bf1851b", "filename": "clippy_lints/src/allow_attribute.rs", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/0f1474ea270fb3b5f7c0db295b2817028acdb97a/clippy_lints%2Fsrc%2Fallow_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1474ea270fb3b5f7c0db295b2817028acdb97a/clippy_lints%2Fsrc%2Fallow_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fallow_attribute.rs?ref=0f1474ea270fb3b5f7c0db295b2817028acdb97a", "patch": "@@ -0,0 +1,91 @@\n+use ast::{AttrStyle, MetaItemKind};\n+use clippy_utils::{diagnostics::span_lint_and_sugg, source::snippet};\n+use rustc_ast as ast;\n+use rustc_errors::Applicability;\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_span::{symbol::Ident, BytePos};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Detects uses of the `#[allow]` attribute and suggests to replace it with the new `#[expect]` attribute implemented by `#![feature(lint_reasons)]` ([RFC 2383](https://rust-lang.github.io/rfcs/2383-lint-reasons.html))\n+    /// ### Why is this bad?\n+    /// Using `#[allow]` isn't bad, but `#[expect]` may be preferred as it lints if the code **doesn't** produce a warning.\n+    /// ### Example\n+    /// ```rust\n+    /// #[allow(unused_mut)]\n+    /// fn foo() -> usize {\n+    ///    let mut a = Vec::new();\n+    ///    a.len()\n+    ///}\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// #[expect(unused_mut)]\n+    /// fn foo() -> usize {\n+    ///     let mut a = Vec::new();\n+    ///     a.len()\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.69.0\"]\n+    pub ALLOW_ATTRIBUTE,\n+    restriction,\n+    \"`#[allow]` will not trigger if a warning isn't found. `#[expect]` triggers if there are no warnings.\"\n+}\n+\n+pub struct AllowAttribute {\n+    pub lint_reasons_active: bool,\n+}\n+\n+impl_lint_pass!(AllowAttribute => [ALLOW_ATTRIBUTE]);\n+\n+impl LateLintPass<'_> for AllowAttribute {\n+    // Separate each crate's features.\n+    fn check_crate_post(&mut self, _: &LateContext<'_>) {\n+        self.lint_reasons_active = false;\n+    }\n+    fn check_attribute(&mut self, cx: &LateContext<'_>, attr: &ast::Attribute) {\n+        // Check inner attributes\n+\n+        if_chain! {\n+            if let AttrStyle::Inner = attr.style;\n+            if attr.ident()\n+            .unwrap_or(Ident::with_dummy_span(sym!(empty))) // Will not trigger if doesn't have an ident.\n+            .name == sym!(feature);\n+            if let ast::AttrKind::Normal(normal) = &attr.kind;\n+            if let Some(MetaItemKind::List(list)) = normal.item.meta_kind();\n+            if list[0].ident().unwrap().name == sym!(lint_reasons);\n+            then {\n+                self.lint_reasons_active = true;\n+            }\n+        }\n+\n+        // Check outer attributes\n+\n+        if_chain! {\n+            if let AttrStyle::Outer = attr.style;\n+            if attr.ident()\n+            .unwrap_or(Ident::with_dummy_span(sym!(empty))) // Will not trigger if doesn't have an ident.\n+            .name == sym!(allow);\n+            if self.lint_reasons_active;\n+            then {\n+                span_lint_and_sugg(\n+                    cx,\n+                    ALLOW_ATTRIBUTE,\n+                    attr.span,\n+                    \"#[allow] attribute found\",\n+                    \"replace it with\",\n+                    format!(\"#[expect{})]\", snippet(\n+                        cx,\n+                        attr.ident().unwrap().span\n+                        .with_lo(\n+                            attr.ident().unwrap().span.hi() + BytePos(2) // Cut [(\n+                        )\n+                        .with_hi(\n+                            attr.meta().unwrap().span.hi() - BytePos(2) // Cut )]\n+                        )\n+                        , \"...\")), Applicability::MachineApplicable);\n+            }\n+        }\n+    }\n+}"}, {"sha": "73f74d59f4a15929bbca03d37c76db05a252899a", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f1474ea270fb3b5f7c0db295b2817028acdb97a/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1474ea270fb3b5f7c0db295b2817028acdb97a/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=0f1474ea270fb3b5f7c0db295b2817028acdb97a", "patch": "@@ -35,6 +35,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::utils::internal_lints::produce_ice::PRODUCE_ICE_INFO,\n     #[cfg(feature = \"internal\")]\n     crate::utils::internal_lints::unnecessary_def_path::UNNECESSARY_DEF_PATH_INFO,\n+    crate::allow_attribute::ALLOW_ATTRIBUTE_INFO,\n     crate::almost_complete_range::ALMOST_COMPLETE_RANGE_INFO,\n     crate::approx_const::APPROX_CONSTANT_INFO,\n     crate::as_conversions::AS_CONVERSIONS_INFO,"}, {"sha": "51da5d1ba499b64ceb01ef6943eac9427a8ca73f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f1474ea270fb3b5f7c0db295b2817028acdb97a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1474ea270fb3b5f7c0db295b2817028acdb97a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=0f1474ea270fb3b5f7c0db295b2817028acdb97a", "patch": "@@ -67,6 +67,7 @@ mod declared_lints;\n mod renamed_lints;\n \n // begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n+mod allow_attribute;\n mod almost_complete_range;\n mod approx_const;\n mod as_conversions;\n@@ -933,6 +934,11 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(missing_assert_message::MissingAssertMessage));\n     store.register_early_pass(|| Box::new(redundant_async_block::RedundantAsyncBlock));\n     store.register_late_pass(|_| Box::new(let_with_type_underscore::UnderscoreTyped));\n+    store.register_late_pass(|_| {\n+        Box::new(allow_attribute::AllowAttribute {\n+            lint_reasons_active: false,\n+        })\n+    });\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "5f445a0bd965ead67bc0f7cd5b7896885fc8ae50", "filename": "tests/ui/allow_attribute.fixed", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0f1474ea270fb3b5f7c0db295b2817028acdb97a/tests%2Fui%2Fallow_attribute.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0f1474ea270fb3b5f7c0db295b2817028acdb97a/tests%2Fui%2Fallow_attribute.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fallow_attribute.fixed?ref=0f1474ea270fb3b5f7c0db295b2817028acdb97a", "patch": "@@ -0,0 +1,18 @@\n+// run-rustfix\n+#![allow(unused)]\n+#![warn(clippy::allow_attribute)]\n+#![feature(lint_reasons)]\n+\n+fn main() {}\n+\n+// Using clippy::needless_borrow just as a placeholder, it isn't relevant.\n+\n+// Should lint\n+#[expect(dead_code)]\n+struct T1;\n+\n+struct T2; // Should not lint\n+#[deny(clippy::needless_borrow)] // Should not lint\n+struct T3;\n+#[warn(clippy::needless_borrow)] // Should not lint\n+struct T4;"}, {"sha": "36d2e3e27abdad74987332f665fb34528b5a3681", "filename": "tests/ui/allow_attribute.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0f1474ea270fb3b5f7c0db295b2817028acdb97a/tests%2Fui%2Fallow_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1474ea270fb3b5f7c0db295b2817028acdb97a/tests%2Fui%2Fallow_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fallow_attribute.rs?ref=0f1474ea270fb3b5f7c0db295b2817028acdb97a", "patch": "@@ -0,0 +1,18 @@\n+// run-rustfix\n+#![allow(unused)]\n+#![warn(clippy::allow_attribute)]\n+#![feature(lint_reasons)]\n+\n+fn main() {}\n+\n+// Using clippy::needless_borrow just as a placeholder, it isn't relevant.\n+\n+// Should lint\n+#[allow(dead_code)]\n+struct T1;\n+\n+struct T2; // Should not lint\n+#[deny(clippy::needless_borrow)] // Should not lint\n+struct T3;\n+#[warn(clippy::needless_borrow)] // Should not lint\n+struct T4;"}, {"sha": "6f90661577c3dbeff87c260c818d729ca5641fb4", "filename": "tests/ui/allow_attribute.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f1474ea270fb3b5f7c0db295b2817028acdb97a/tests%2Fui%2Fallow_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f1474ea270fb3b5f7c0db295b2817028acdb97a/tests%2Fui%2Fallow_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fallow_attribute.stderr?ref=0f1474ea270fb3b5f7c0db295b2817028acdb97a", "patch": "@@ -0,0 +1,10 @@\n+error: #[allow] attribute found\n+  --> $DIR/allow_attribute.rs:11:1\n+   |\n+LL | #[allow(dead_code)]\n+   | ^^^^^^^^^^^^^^^^^^^ help: replace it with: `#[expect(dead_code)]`\n+   |\n+   = note: `-D clippy::allow-attribute` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}