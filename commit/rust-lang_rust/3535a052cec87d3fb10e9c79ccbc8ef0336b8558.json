{"sha": "3535a052cec87d3fb10e9c79ccbc8ef0336b8558", "node_id": "C_kwDOAAsO6NoAKDM1MzVhMDUyY2VjODdkM2ZiMTBlOWM3OWNjYmM4ZWYwMzM2Yjg1NTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-22T10:33:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-22T10:33:43Z"}, "message": "Auto merge of #12346 - rainy-me:fix/builtin-type-docs-links, r=Veykril\n\nfix: special case base url of `BuiltinType` to core\n\nfix #12250", "tree": {"sha": "f4906efb7ec201042364e5cbc89da08aab21a75e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4906efb7ec201042364e5cbc89da08aab21a75e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3535a052cec87d3fb10e9c79ccbc8ef0336b8558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3535a052cec87d3fb10e9c79ccbc8ef0336b8558", "html_url": "https://github.com/rust-lang/rust/commit/3535a052cec87d3fb10e9c79ccbc8ef0336b8558", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3535a052cec87d3fb10e9c79ccbc8ef0336b8558/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90236dd77ae817b5e2c6d30b3523890975d4d519", "url": "https://api.github.com/repos/rust-lang/rust/commits/90236dd77ae817b5e2c6d30b3523890975d4d519", "html_url": "https://github.com/rust-lang/rust/commit/90236dd77ae817b5e2c6d30b3523890975d4d519"}, {"sha": "3a380d4b3a6bc2a3ecef1248f3f8161b09b0506b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a380d4b3a6bc2a3ecef1248f3f8161b09b0506b", "html_url": "https://github.com/rust-lang/rust/commit/3a380d4b3a6bc2a3ecef1248f3f8161b09b0506b"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "60fad2d5db2f01a4d7d9111aa7308d12f1a50370", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3535a052cec87d3fb10e9c79ccbc8ef0336b8558/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3535a052cec87d3fb10e9c79ccbc8ef0336b8558/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=3535a052cec87d3fb10e9c79ccbc8ef0336b8558", "patch": "@@ -10,7 +10,7 @@ use pulldown_cmark_to_cmark::{cmark_resume_with_options, Options as CMarkOptions\n use stdx::format_to;\n use url::Url;\n \n-use hir::{db::HirDatabase, Adt, AsAssocItem, AssocItem, AssocItemContainer, Crate, HasAttrs};\n+use hir::{db::HirDatabase, Adt, AsAssocItem, AssocItem, AssocItemContainer, HasAttrs};\n use ide_db::{\n     base_db::{CrateOrigin, LangCrateOrigin, SourceDatabase},\n     defs::{Definition, NameClass, NameRefClass},\n@@ -293,8 +293,7 @@ fn broken_link_clone_cb<'a>(link: BrokenLink<'a>) -> Option<(CowStr<'a>, CowStr<\n fn get_doc_link(db: &RootDatabase, def: Definition) -> Option<String> {\n     let (target, file, frag) = filename_and_frag_for_def(db, def)?;\n \n-    let krate = target.krate(db)?;\n-    let mut url = get_doc_base_url(db, krate)?;\n+    let mut url = get_doc_base_url(db, target)?;\n \n     if let Some(path) = mod_path_of_def(db, target) {\n         url = url.join(&path).ok()?;\n@@ -315,8 +314,7 @@ fn rewrite_intra_doc_link(\n     let (link, ns) = parse_intra_doc_link(target);\n \n     let resolved = resolve_doc_path_for_def(db, def, link, ns)?;\n-    let krate = resolved.krate(db)?;\n-    let mut url = get_doc_base_url(db, krate)?;\n+    let mut url = get_doc_base_url(db, resolved)?;\n \n     let (_, file, frag) = filename_and_frag_for_def(db, resolved)?;\n     if let Some(path) = mod_path_of_def(db, resolved) {\n@@ -335,8 +333,7 @@ fn rewrite_url_link(db: &RootDatabase, def: Definition, target: &str) -> Option<\n         return None;\n     }\n \n-    let krate = def.krate(db)?;\n-    let mut url = get_doc_base_url(db, krate)?;\n+    let mut url = get_doc_base_url(db, def)?;\n     let (def, file, frag) = filename_and_frag_for_def(db, def)?;\n \n     if let Some(path) = mod_path_of_def(db, def) {\n@@ -401,13 +398,20 @@ fn map_links<'e>(\n     })\n }\n \n-/// Get the root URL for the documentation of a crate.\n+/// Get the root URL for the documentation of a definition.\n ///\n /// ```ignore\n /// https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\n /// ^^^^^^^^^^^^^^^^^^^^^^^^^^\n /// ```\n-fn get_doc_base_url(db: &RootDatabase, krate: Crate) -> Option<Url> {\n+fn get_doc_base_url(db: &RootDatabase, def: Definition) -> Option<Url> {\n+    // special case base url of `BuiltinType` to core\n+    // https://github.com/rust-lang/rust-analyzer/issues/12250\n+    if let Definition::BuiltinType(..) = def {\n+        return Url::parse(\"https://doc.rust-lang.org/nightly/core/\").ok();\n+    };\n+\n+    let krate = def.krate(db)?;\n     let display_name = krate.display_name(db)?;\n \n     let base = match db.crate_graph()[krate.into()].origin {"}, {"sha": "5d084ac955bb6ec6522eecd3d7f0b0ea70a2525c", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3535a052cec87d3fb10e9c79ccbc8ef0336b8558/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3535a052cec87d3fb10e9c79ccbc8ef0336b8558/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=3535a052cec87d3fb10e9c79ccbc8ef0336b8558", "patch": "@@ -3796,6 +3796,7 @@ cosnt _: &str$0 = \"\"; }\n \n //- /libstd.rs crate:std\n /// Docs for prim_str\n+/// [`foo`](../std/keyword.foo.html)\n mod prim_str {}\n \"#,\n         expect![[r#\"\n@@ -3808,6 +3809,7 @@ mod prim_str {}\n                 ---\n \n                 Docs for prim_str\n+                [`foo`](https://doc.rust-lang.org/nightly/std/keyword.foo.html)\n             \"#]],\n     );\n }"}]}