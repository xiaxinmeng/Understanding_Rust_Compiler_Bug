{"sha": "c78426bfc88062ec28664a309ff32d4b3c206a9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ODQyNmJmYzg4MDYyZWMyODY2NGEzMDlmZjMyZDRiM2MyMDZhOWY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-17T09:20:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-17T09:20:46Z"}, "message": "Rollup merge of #49057 - Zoxc:fast-submodules, r=alexcrichton\n\nFaster submodule updating\n\nFor the common case when there are no submodules which need updating, this takes 0.48 seconds instead of 47 seconds.\n\nr? @alexcrichton", "tree": {"sha": "f413b0267a94782bb9c072a5f3957913307e5d8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f413b0267a94782bb9c072a5f3957913307e5d8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c78426bfc88062ec28664a309ff32d4b3c206a9f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJarN3uCRBK7hj4Ov3rIwAAdHIIAIVScMOtDmokQt739jpcLkfe\nt97w6whR6n6DDSZFhAuqEme5yNpFF5L0TWgnYGy0hNzmIiIwbDh5FSoiEHFK7tyd\niJll3mNsZAxtVRvrtwv8kYgHg6VhyaHNij3TYZIBESB0icbYScX4pdsfMvXSh16N\nsYZawJ4f2Yp+PYBlIuNWbMsZ7JGaHseBq9NzT/uB5WJYsR4LFnuAZZE6buRzxQ4t\n31GvbKBO2wKP+lRjce/dQI5yqLbnH0AJvIeGRktgqrd5Jn953TKcSJtibHhVpwXh\n8a5bj/jKCx97Ccb/FLH+6VPY5WUjD40gilDdCnDhGl56ype7V/wFR0fbrpyUA78=\n=fjzt\n-----END PGP SIGNATURE-----\n", "payload": "tree f413b0267a94782bb9c072a5f3957913307e5d8b\nparent a2289dadb0f7e841dad57b7152bb323edac46e57\nparent 72cb109bec8e73b1568c2f287ed08348453bf534\nauthor kennytm <kennytm@gmail.com> 1521278446 +0800\ncommitter GitHub <noreply@github.com> 1521278446 +0800\n\nRollup merge of #49057 - Zoxc:fast-submodules, r=alexcrichton\n\nFaster submodule updating\n\nFor the common case when there are no submodules which need updating, this takes 0.48 seconds instead of 47 seconds.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c78426bfc88062ec28664a309ff32d4b3c206a9f", "html_url": "https://github.com/rust-lang/rust/commit/c78426bfc88062ec28664a309ff32d4b3c206a9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c78426bfc88062ec28664a309ff32d4b3c206a9f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2289dadb0f7e841dad57b7152bb323edac46e57", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2289dadb0f7e841dad57b7152bb323edac46e57", "html_url": "https://github.com/rust-lang/rust/commit/a2289dadb0f7e841dad57b7152bb323edac46e57"}, {"sha": "72cb109bec8e73b1568c2f287ed08348453bf534", "url": "https://api.github.com/repos/rust-lang/rust/commits/72cb109bec8e73b1568c2f287ed08348453bf534", "html_url": "https://github.com/rust-lang/rust/commit/72cb109bec8e73b1568c2f287ed08348453bf534"}], "stats": {"total": 66, "additions": 54, "deletions": 12}, "files": [{"sha": "aec5e5a0e2c800220da705d7101a96de198d8491", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c78426bfc88062ec28664a309ff32d4b3c206a9f/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/c78426bfc88062ec28664a309ff32d4b3c206a9f/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=c78426bfc88062ec28664a309ff32d4b3c206a9f", "patch": "@@ -118,6 +118,10 @@\n # Indicate whether submodules are managed and updated automatically.\n #submodules = true\n \n+# Update submodules only when the checked out commit in the submodules differs\n+# from what is committed in the main rustc repo.\n+#fast-submodules = true\n+\n # The path to (or name of) the GDB executable to use. This is only used for\n # executing the debuginfo test suite.\n #gdb = \"gdb\""}, {"sha": "b55a133501d8eefc126966df971bd848c830179b", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 50, "deletions": 12, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/c78426bfc88062ec28664a309ff32d4b3c206a9f/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/c78426bfc88062ec28664a309ff32d4b3c206a9f/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=c78426bfc88062ec28664a309ff32d4b3c206a9f", "patch": "@@ -612,20 +612,55 @@ def build_triple(self):\n             return config\n         return default_build_triple()\n \n+    def check_submodule(self, module, slow_submodules):\n+        if not slow_submodules:\n+            checked_out = subprocess.Popen([\"git\", \"rev-parse\", \"HEAD\"],\n+                                           cwd=os.path.join(self.rust_root, module),\n+                                           stdout=subprocess.PIPE)\n+            return checked_out\n+        else:\n+            return None\n+\n+    def update_submodule(self, module, checked_out, recorded_submodules):\n+        module_path = os.path.join(self.rust_root, module)\n+\n+        if checked_out != None:\n+            default_encoding = sys.getdefaultencoding()\n+            checked_out = checked_out.communicate()[0].decode(default_encoding).strip()\n+            if recorded_submodules[module] == checked_out:\n+                return\n+\n+        print(\"Updating submodule\", module)\n+\n+        run([\"git\", \"submodule\", \"-q\", \"sync\", module],\n+            cwd=self.rust_root, verbose=self.verbose)\n+        run([\"git\", \"submodule\", \"update\",\n+            \"--init\", \"--recursive\", module],\n+            cwd=self.rust_root, verbose=self.verbose)\n+        run([\"git\", \"reset\", \"-q\", \"--hard\"],\n+            cwd=module_path, verbose=self.verbose)\n+        run([\"git\", \"clean\", \"-qdfx\"],\n+            cwd=module_path, verbose=self.verbose)\n+\n     def update_submodules(self):\n         \"\"\"Update submodules\"\"\"\n         if (not os.path.exists(os.path.join(self.rust_root, \".git\"))) or \\\n                 self.get_toml('submodules') == \"false\":\n             return\n-        print('Updating submodules')\n+        slow_submodules = self.get_toml('fast-submodule') == \"false\"\n+        start_time = time()\n+        if slow_submodules:\n+            print('Unconditionally updating all submodules')\n+        else:\n+            print('Updating only changed submodules')\n         default_encoding = sys.getdefaultencoding()\n-        run([\"git\", \"submodule\", \"-q\", \"sync\"], cwd=self.rust_root, verbose=self.verbose)\n         submodules = [s.split(' ', 1)[1] for s in subprocess.check_output(\n             [\"git\", \"config\", \"--file\",\n              os.path.join(self.rust_root, \".gitmodules\"),\n              \"--get-regexp\", \"path\"]\n         ).decode(default_encoding).splitlines()]\n         filtered_submodules = []\n+        submodules_names = []\n         for module in submodules:\n             if module.endswith(\"llvm\"):\n                 if self.get_toml('llvm-config'):\n@@ -643,16 +678,19 @@ def update_submodules(self):\n                 config = self.get_toml('lld')\n                 if config is None or config == 'false':\n                     continue\n-            filtered_submodules.append(module)\n-        run([\"git\", \"submodule\", \"update\",\n-             \"--init\", \"--recursive\"] + filtered_submodules,\n-            cwd=self.rust_root, verbose=self.verbose)\n-        run([\"git\", \"submodule\", \"-q\", \"foreach\", \"git\",\n-             \"reset\", \"-q\", \"--hard\"],\n-            cwd=self.rust_root, verbose=self.verbose)\n-        run([\"git\", \"submodule\", \"-q\", \"foreach\", \"git\",\n-             \"clean\", \"-qdfx\"],\n-            cwd=self.rust_root, verbose=self.verbose)\n+            check = self.check_submodule(module, slow_submodules)\n+            filtered_submodules.append((module, check))\n+            submodules_names.append(module)\n+        recorded = subprocess.Popen([\"git\", \"ls-tree\", \"HEAD\"] + submodules_names,\n+                                    cwd=self.rust_root, stdout=subprocess.PIPE)\n+        recorded = recorded.communicate()[0].decode(default_encoding).strip().splitlines()\n+        recorded_submodules = {}\n+        for data in recorded:\n+            data = data.split()\n+            recorded_submodules[data[3]] = data[2]\n+        for module in filtered_submodules:\n+            self.update_submodule(module[0], module[1], recorded_submodules)\n+        print(\"Submodules updated in %.2f seconds\" % (time() - start_time))\n \n     def set_dev_environment(self):\n         \"\"\"Set download URL for development environment\"\"\""}]}