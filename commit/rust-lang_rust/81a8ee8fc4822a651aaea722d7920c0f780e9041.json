{"sha": "81a8ee8fc4822a651aaea722d7920c0f780e9041", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYThlZThmYzQ4MjJhNjUxYWFlYTcyMmQ3OTIwYzBmNzgwZTkwNDE=", "commit": {"author": {"name": "Tinco Andringa", "email": "mail@tinco.nl", "date": "2018-07-12T21:35:40Z"}, "committer": {"name": "Tinco Andringa", "email": "mail@tinco.nl", "date": "2018-09-10T10:33:38Z"}, "message": "pretty=expanded should expand mod declarations", "tree": {"sha": "d4dcb8560fa7e5a7d5b30737e6a961871c22637d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4dcb8560fa7e5a7d5b30737e6a961871c22637d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a8ee8fc4822a651aaea722d7920c0f780e9041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a8ee8fc4822a651aaea722d7920c0f780e9041", "html_url": "https://github.com/rust-lang/rust/commit/81a8ee8fc4822a651aaea722d7920c0f780e9041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a8ee8fc4822a651aaea722d7920c0f780e9041/comments", "author": {"login": "tinco", "id": 22532, "node_id": "MDQ6VXNlcjIyNTMy", "avatar_url": "https://avatars.githubusercontent.com/u/22532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinco", "html_url": "https://github.com/tinco", "followers_url": "https://api.github.com/users/tinco/followers", "following_url": "https://api.github.com/users/tinco/following{/other_user}", "gists_url": "https://api.github.com/users/tinco/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinco/subscriptions", "organizations_url": "https://api.github.com/users/tinco/orgs", "repos_url": "https://api.github.com/users/tinco/repos", "events_url": "https://api.github.com/users/tinco/events{/privacy}", "received_events_url": "https://api.github.com/users/tinco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tinco", "id": 22532, "node_id": "MDQ6VXNlcjIyNTMy", "avatar_url": "https://avatars.githubusercontent.com/u/22532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinco", "html_url": "https://github.com/tinco", "followers_url": "https://api.github.com/users/tinco/followers", "following_url": "https://api.github.com/users/tinco/following{/other_user}", "gists_url": "https://api.github.com/users/tinco/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinco/subscriptions", "organizations_url": "https://api.github.com/users/tinco/orgs", "repos_url": "https://api.github.com/users/tinco/repos", "events_url": "https://api.github.com/users/tinco/events{/privacy}", "received_events_url": "https://api.github.com/users/tinco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3afb16e1608929a816d6c0e2a0118185199aef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3afb16e1608929a816d6c0e2a0118185199aef1", "html_url": "https://github.com/rust-lang/rust/commit/c3afb16e1608929a816d6c0e2a0118185199aef1"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "16f1a1ad846d8addd0630f038dd0b34cb1e046b1", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=81a8ee8fc4822a651aaea722d7920c0f780e9041", "patch": "@@ -6288,10 +6288,9 @@ impl<'a> Parser<'a> {\n                 // This mod is in an external file. Let's go get it!\n                 let ModulePathSuccess { path, directory_ownership, warn } =\n                     self.submod_path(id, &outer_attrs, id_span)?;\n-                let (mut module, mut attrs) =\n+                let (module, mut attrs) =\n                     self.eval_src_mod(path, directory_ownership, id.to_string(), id_span)?;\n                 // Record that we fetched the mod from an external file\n-                module.inline = false;\n                 if warn {\n                     let attr = Attribute {\n                         id: attr::mk_attr_id(),\n@@ -6530,7 +6529,8 @@ impl<'a> Parser<'a> {\n         p0.cfg_mods = self.cfg_mods;\n         let mod_inner_lo = p0.span;\n         let mod_attrs = p0.parse_inner_attributes()?;\n-        let m0 = p0.parse_mod_items(&token::Eof, mod_inner_lo)?;\n+        let mut m0 = p0.parse_mod_items(&token::Eof, mod_inner_lo)?;\n+        m0.inline = false;\n         self.sess.included_mod_stack.borrow_mut().pop();\n         Ok((m0, mod_attrs))\n     }"}, {"sha": "74ac57a634b527f255731ef62608533b806ad03d", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=81a8ee8fc4822a651aaea722d7920c0f780e9041", "patch": "@@ -61,6 +61,7 @@ pub struct State<'a> {\n     cur_cmnt: usize,\n     boxes: Vec<pp::Breaks>,\n     ann: &'a (dyn PpAnn+'a),\n+    is_expanded: bool\n }\n \n fn rust_printer<'a>(writer: Box<dyn Write+'a>, ann: &'a dyn PpAnn) -> State<'a> {\n@@ -72,6 +73,7 @@ fn rust_printer<'a>(writer: Box<dyn Write+'a>, ann: &'a dyn PpAnn) -> State<'a>\n         cur_cmnt: 0,\n         boxes: Vec::new(),\n         ann,\n+        is_expanded: false\n     }\n }\n \n@@ -133,14 +135,17 @@ impl<'a> State<'a> {\n             // If the code is post expansion, don't use the table of\n             // literals, since it doesn't correspond with the literals\n             // in the AST anymore.\n-            if is_expanded { None } else { Some(lits) })\n+            if is_expanded { None } else { Some(lits) },\n+            is_expanded\n+        )\n     }\n \n     pub fn new(cm: &'a SourceMap,\n                out: Box<dyn Write+'a>,\n                ann: &'a dyn PpAnn,\n                comments: Option<Vec<comments::Comment>>,\n-               literals: Option<Vec<comments::Literal>>) -> State<'a> {\n+               literals: Option<Vec<comments::Literal>>,\n+               is_expanded: bool) -> State<'a> {\n         State {\n             s: pp::mk_printer(out, DEFAULT_COLUMNS),\n             cm: Some(cm),\n@@ -149,6 +154,7 @@ impl<'a> State<'a> {\n             cur_cmnt: 0,\n             boxes: Vec::new(),\n             ann,\n+            is_expanded: is_expanded\n         }\n     }\n }\n@@ -1261,7 +1267,8 @@ impl<'a> State<'a> {\n                 self.head(&visibility_qualified(&item.vis, \"mod\"))?;\n                 self.print_ident(item.ident)?;\n \n-                if _mod.inline {\n+                if _mod.inline || self.is_expanded {\n+                    println!(\"Going to print inline anyway\");\n                     self.nbsp()?;\n                     self.bopen()?;\n                     self.print_mod(_mod, &item.attrs)?;"}, {"sha": "359b55a735abb79ee2f917c63ebe4f4bd7e3b252", "filename": "src/test/pretty/issue_12590_c.pp", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Ftest%2Fpretty%2Fissue_12590_c.pp", "raw_url": "https://github.com/rust-lang/rust/raw/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Ftest%2Fpretty%2Fissue_12590_c.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue_12590_c.pp?ref=81a8ee8fc4822a651aaea722d7920c0f780e9041", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// pp-exact:issue_12590_c.pp\n+// pretty-mode:expanded\n+\n+// The next line should be expanded\n+\n+mod issue_12590_b {\n+\n+\n+  fn b() { }\n+\n+  fn main() { }\n+}\n+\n+fn main() { }"}, {"sha": "a6b81fdefe6b8fb59e5cee5c7905946cd7126970", "filename": "src/test/pretty/issue_12590_c.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Ftest%2Fpretty%2Fissue_12590_c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a8ee8fc4822a651aaea722d7920c0f780e9041/src%2Ftest%2Fpretty%2Fissue_12590_c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue_12590_c.rs?ref=81a8ee8fc4822a651aaea722d7920c0f780e9041", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// pp-exact:issue_12590_c.pp\n+// pretty-mode:expanded\n+\n+// The next line should be expanded\n+\n+mod issue_12590_b;\n+\n+fn main() { }"}]}