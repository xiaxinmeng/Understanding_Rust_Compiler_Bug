{"sha": "1e0c7b682f1675e39085f1f0f928a37364bab9c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMGM3YjY4MmYxNjc1ZTM5MDg1ZjFmMGY5MjhhMzczNjRiYWI5Yzc=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-09-29T05:07:45Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@palantir.com", "date": "2014-09-30T19:52:00Z"}, "message": "Fix liballoc", "tree": {"sha": "f416bdb1942ea13d25fb71824072d444fba6ad67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f416bdb1942ea13d25fb71824072d444fba6ad67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e0c7b682f1675e39085f1f0f928a37364bab9c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0c7b682f1675e39085f1f0f928a37364bab9c7", "html_url": "https://github.com/rust-lang/rust/commit/1e0c7b682f1675e39085f1f0f928a37364bab9c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e0c7b682f1675e39085f1f0f928a37364bab9c7/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c76151529a79bf85f54d95cf41876d83a0fdad1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c76151529a79bf85f54d95cf41876d83a0fdad1d", "html_url": "https://github.com/rust-lang/rust/commit/c76151529a79bf85f54d95cf41876d83a0fdad1d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "0d2872bcba06bbacf9eec24d7ec1a06cc1499fb7", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1e0c7b682f1675e39085f1f0f928a37364bab9c7/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0c7b682f1675e39085f1f0f928a37364bab9c7/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=1e0c7b682f1675e39085f1f0f928a37364bab9c7", "patch": "@@ -111,12 +111,12 @@ unsafe fn exchange_free(ptr: *mut u8, size: uint, align: uint) {\n // The minimum alignment guaranteed by the architecture. This value is used to\n // add fast paths for low alignment values. In practice, the alignment is a\n // constant at the call site and the branch will be optimized out.\n-#[cfg(target_arch = \"arm\")]\n-#[cfg(target_arch = \"mips\")]\n-#[cfg(target_arch = \"mipsel\")]\n+#[cfg(any(target_arch = \"arm\",\n+          target_arch = \"mips\",\n+          target_arch = \"mipsel\"))]\n static MIN_ALIGN: uint = 8;\n-#[cfg(target_arch = \"x86\")]\n-#[cfg(target_arch = \"x86_64\")]\n+#[cfg(any(target_arch = \"x86\",\n+          target_arch = \"x86_64\"))]\n static MIN_ALIGN: uint = 16;\n \n #[cfg(jemalloc)]\n@@ -146,7 +146,7 @@ mod imp {\n     }\n \n     // -lpthread needs to occur after -ljemalloc, the earlier argument isn't enough\n-    #[cfg(not(windows), not(target_os = \"android\"))]\n+    #[cfg(all(not(windows), not(target_os = \"android\")))]\n     #[link(name = \"pthread\")]\n     extern {}\n \n@@ -206,7 +206,7 @@ mod imp {\n     }\n }\n \n-#[cfg(not(jemalloc), unix)]\n+#[cfg(all(not(jemalloc), unix))]\n mod imp {\n     use core::cmp;\n     use core::ptr;\n@@ -268,7 +268,7 @@ mod imp {\n     pub fn stats_print() {}\n }\n \n-#[cfg(not(jemalloc), windows)]\n+#[cfg(all(not(jemalloc), windows))]\n mod imp {\n     use libc::{c_void, size_t};\n     use libc;"}]}