{"sha": "bb259587056faa3a76eed6e7dae487e1848d841a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMjU5NTg3MDU2ZmFhM2E3NmVlZDZlN2RhZTQ4N2UxODQ4ZDg0MWE=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-17T18:32:10Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-17T18:32:10Z"}, "message": "Remove match_armlist validator", "tree": {"sha": "4df778730154b8c167930ec85c68426439607c36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4df778730154b8c167930ec85c68426439607c36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb259587056faa3a76eed6e7dae487e1848d841a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb259587056faa3a76eed6e7dae487e1848d841a", "html_url": "https://github.com/rust-lang/rust/commit/bb259587056faa3a76eed6e7dae487e1848d841a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb259587056faa3a76eed6e7dae487e1848d841a/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96e3ac389fbc3709cc6e7e8dbe25619daeb61f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/96e3ac389fbc3709cc6e7e8dbe25619daeb61f4b", "html_url": "https://github.com/rust-lang/rust/commit/96e3ac389fbc3709cc6e7e8dbe25619daeb61f4b"}], "stats": {"total": 30, "additions": 0, "deletions": 30}, "files": [{"sha": "10672d6bf30fed2c944a844e6c6ecbb83d41641f", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb259587056faa3a76eed6e7dae487e1848d841a/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb259587056faa3a76eed6e7dae487e1848d841a/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=bb259587056faa3a76eed6e7dae487e1848d841a", "patch": "@@ -3,7 +3,6 @@ mod byte_string;\n mod char;\n mod string;\n mod block;\n-mod match_armlist;\n \n use crate::{\n     SourceFile, syntax_node::SyntaxError, AstNode,\n@@ -20,7 +19,6 @@ pub(crate) fn validate(file: &SourceFile) -> Vec<SyntaxError> {\n             .visit::<ast::Char, _>(self::char::validate_char_node)\n             .visit::<ast::String, _>(self::string::validate_string_node)\n             .visit::<ast::Block, _>(self::block::validate_block_node)\n-            .visit::<ast::MatchArmList, _>(self::match_armlist::validate_match_armlist)\n             .accept(node);\n     }\n     errors"}, {"sha": "c43ed70922413e9012f6273bfb213f55ec3277e1", "filename": "crates/ra_syntax/src/validation/match_armlist.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/96e3ac389fbc3709cc6e7e8dbe25619daeb61f4b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fmatch_armlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96e3ac389fbc3709cc6e7e8dbe25619daeb61f4b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fmatch_armlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fmatch_armlist.rs?ref=96e3ac389fbc3709cc6e7e8dbe25619daeb61f4b", "patch": "@@ -1,28 +0,0 @@\n-use crate::{\r\n-    ast::{self, AttrsOwner, AstNode},\r\n-    syntax_node::{\r\n-        SyntaxError,\r\n-        SyntaxErrorKind::*,\r\n-        Direction,\r\n-    },\r\n-};\r\n-\r\n-pub(crate) fn validate_match_armlist(node: &ast::MatchArmList, errors: &mut Vec<SyntaxError>) {\r\n-    // Report errors for any inner attribute\r\n-    // which has a preceding matcharm or an outer attribute\r\n-    for inner_attr in node.attrs().filter(|s| s.is_inner()) {\r\n-        let any_errors = inner_attr.syntax().siblings(Direction::Prev).any(|s| {\r\n-            match (ast::MatchArm::cast(s), ast::Attr::cast(s)) {\r\n-                (Some(_), _) => true,\r\n-                // Outer attributes which preceed an inner attribute are not allowed\r\n-                (_, Some(a)) if !a.is_inner() => true,\r\n-                (_, Some(_)) => false,\r\n-                (None, None) => false,\r\n-            }\r\n-        });\r\n-\r\n-        if any_errors {\r\n-            errors.push(SyntaxError::new(InvalidMatchInnerAttr, inner_attr.syntax().range()));\r\n-        }\r\n-    }\r\n-}\r"}]}