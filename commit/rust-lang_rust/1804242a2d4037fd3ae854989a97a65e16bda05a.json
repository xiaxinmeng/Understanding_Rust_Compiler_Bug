{"sha": "1804242a2d4037fd3ae854989a97a65e16bda05a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MDQyNDJhMmQ0MDM3ZmQzYWU4NTQ5ODlhOTdhNjVlMTZiZGEwNWE=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-02-21T05:39:03Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-02-25T00:28:54Z"}, "message": "Add a second, more vexing section on recursive macros\n\nFixes #22423.", "tree": {"sha": "cb9a1b24e9dc7d6b066277d5036118ae50389c6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb9a1b24e9dc7d6b066277d5036118ae50389c6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1804242a2d4037fd3ae854989a97a65e16bda05a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1804242a2d4037fd3ae854989a97a65e16bda05a", "html_url": "https://github.com/rust-lang/rust/commit/1804242a2d4037fd3ae854989a97a65e16bda05a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1804242a2d4037fd3ae854989a97a65e16bda05a/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65e1e6bb942701a061f6772507141ea9f8e920e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/65e1e6bb942701a061f6772507141ea9f8e920e2", "html_url": "https://github.com/rust-lang/rust/commit/65e1e6bb942701a061f6772507141ea9f8e920e2"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "9a4cc57a1f7214205cb66984fc1a2211e71b806d", "filename": "src/doc/trpl/advanced-macros.md", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/1804242a2d4037fd3ae854989a97a65e16bda05a/src%2Fdoc%2Ftrpl%2Fadvanced-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/1804242a2d4037fd3ae854989a97a65e16bda05a/src%2Fdoc%2Ftrpl%2Fadvanced-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fadvanced-macros.md?ref=1804242a2d4037fd3ae854989a97a65e16bda05a", "patch": "@@ -192,6 +192,53 @@ To keep this system simple and correct, `#[macro_use] extern crate ...` may\n only appear at the root of your crate, not inside `mod`. This ensures that\n `$crate` is a single identifier.\n \n+# The deep end\n+\n+The introductory chapter mentioned recursive macros, but it did not give the\n+full story. Recursive macros are useful for another reason: Each recursive\n+invocation gives you another opportunity to pattern-match the macro's\n+arguments.\n+\n+As an extreme example, it is possible, though hardly advisable, to implement\n+the [Bitwise Cyclic Tag](http://esolangs.org/wiki/Bitwise_Cyclic_Tag) automaton\n+within Rust's macro system.\n+\n+```rust\n+#![feature(trace_macros)]\n+\n+macro_rules! bct {\n+    // cmd 0:  d ... => ...\n+    (0, $($ps:tt),* ; $_d:tt)\n+        => (bct!($($ps),*, 0 ; ));\n+    (0, $($ps:tt),* ; $_d:tt, $($ds:tt),*)\n+        => (bct!($($ps),*, 0 ; $($ds),*));\n+\n+    // cmd 1p:  1 ... => 1 ... p\n+    (1, $p:tt, $($ps:tt),* ; 1)\n+        => (bct!($($ps),*, 1, $p ; 1, $p));\n+    (1, $p:tt, $($ps:tt),* ; 1, $($ds:tt),*)\n+        => (bct!($($ps),*, 1, $p ; 1, $($ds),*, $p));\n+\n+    // cmd 1p:  0 ... => 0 ...\n+    (1, $p:tt, $($ps:tt),* ; $($ds:tt),*)\n+        => (bct!($($ps),*, 1, $p ; $($ds),*));\n+\n+    // halt on empty data string\n+    ( $($ps:tt),* ; )\n+        => (());\n+}\n+\n+fn main() {\n+    trace_macros!(true);\n+# /* just check the definition\n+    bct!(0, 0, 1, 1, 1 ; 1, 0, 1);\n+# */\n+}\n+```\n+\n+Exercise: use macros to reduce duplication in the above definition of the\n+`bct!` macro.\n+\n # A final note\n \n Macros, as currently implemented, are not for the faint of heart. Even"}]}