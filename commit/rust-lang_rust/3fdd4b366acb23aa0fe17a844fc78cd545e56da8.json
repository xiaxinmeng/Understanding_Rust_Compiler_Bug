{"sha": "3fdd4b366acb23aa0fe17a844fc78cd545e56da8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZGQ0YjM2NmFjYjIzYWEwZmUxN2E4NDRmYzc4Y2Q1NDVlNTZkYTg=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-02T04:16:49Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T14:34:04Z"}, "message": "rand: fix fallout", "tree": {"sha": "e591b564cf346f3abaf717a5a33ae483492aae36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e591b564cf346f3abaf717a5a33ae483492aae36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fdd4b366acb23aa0fe17a844fc78cd545e56da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fdd4b366acb23aa0fe17a844fc78cd545e56da8", "html_url": "https://github.com/rust-lang/rust/commit/3fdd4b366acb23aa0fe17a844fc78cd545e56da8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fdd4b366acb23aa0fe17a844fc78cd545e56da8/comments", "author": null, "committer": null, "parents": [{"sha": "41df05dd0e42b4f1c4f1b834219f3aafe02d4419", "url": "https://api.github.com/repos/rust-lang/rust/commits/41df05dd0e42b4f1c4f1b834219f3aafe02d4419", "html_url": "https://github.com/rust-lang/rust/commit/41df05dd0e42b4f1c4f1b834219f3aafe02d4419"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "0f8dbc78cde3272c8ee62d2da768f1e16abeb65f", "filename": "src/librand/lib.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3fdd4b366acb23aa0fe17a844fc78cd545e56da8/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fdd4b366acb23aa0fe17a844fc78cd545e56da8/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=3fdd4b366acb23aa0fe17a844fc78cd545e56da8", "patch": "@@ -25,6 +25,7 @@\n \n #![feature(macro_rules, phase, globs)]\n #![feature(unboxed_closures)]\n+#![feature(associated_types)]\n #![no_std]\n #![experimental]\n \n@@ -314,7 +315,9 @@ pub struct Generator<'a, T, R:'a> {\n     rng: &'a mut R,\n }\n \n-impl<'a, T: Rand, R: Rng> Iterator<T> for Generator<'a, T, R> {\n+impl<'a, T: Rand, R: Rng> Iterator for Generator<'a, T, R> {\n+    type Item = T;\n+\n     fn next(&mut self) -> Option<T> {\n         Some(self.rng.gen())\n     }\n@@ -327,7 +330,9 @@ pub struct AsciiGenerator<'a, R:'a> {\n     rng: &'a mut R,\n }\n \n-impl<'a, R: Rng> Iterator<char> for AsciiGenerator<'a, R> {\n+impl<'a, R: Rng> Iterator for AsciiGenerator<'a, R> {\n+    type Item = char;\n+\n     fn next(&mut self) -> Option<char> {\n         static GEN_ASCII_STR_CHARSET: &'static [u8] =\n             b\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\"}]}