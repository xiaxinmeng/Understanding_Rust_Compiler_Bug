{"sha": "ef8630381a51b367a9016c1dcaf160785a94f94b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmODYzMDM4MWE1MWIzNjdhOTAxNmMxZGNhZjE2MDc4NWE5NGY5NGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T19:24:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-21T19:24:15Z"}, "message": "Rollup merge of #64618 - alexcrichton:improve-dist-output, r=Mark-Simulacrum\n\nrustbuild: Improve output of `dist` step\n\n* Pass `/Q` to `iscc` on Windows to supress the thousands of lines of\n  output about compressing documentation.\n* Print out what's happening before long steps\n* Use `timeit` to print out timing information for long-running\n  installer assemblies.\n* Try to scope output of `Dist ...` to not also encompass actual build steps", "tree": {"sha": "696ddfb63f2d208949db896393e91c06df70a84c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/696ddfb63f2d208949db896393e91c06df70a84c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef8630381a51b367a9016c1dcaf160785a94f94b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdhnjfCRBK7hj4Ov3rIwAAdHIIADKCrLeMSmcZSaO7PxNcJG6/\nTRQo5DSM1+UbIlLlLC5uUaAPjruBmXZCni3QzCLhraCoi5NCbvs7pe5cnrSEuPMr\nEGgXCBZANBcGgQhXblSgiaR01A5hMAJzqM52hhuwI+FJL0yEKe89T0tXympEjJ3o\nMEFvMDtjY49kBQxoNHtx1Yg+Q3QhMZKfxdaTKGBnyag4FDq2qEyEhqB7kmIRBhvB\nxPezvYWqGXXORpzHuMri8ccBv/9X5MNZ0kruMwI2nCkme04WydmA0hc6opRcJ5bd\nwXpStPfMxiawggsdfrdu5nn1L2tgPwDy5/+n4oETY0HvnwzLRuu2NrOhCEYS/sU=\n=CawN\n-----END PGP SIGNATURE-----\n", "payload": "tree 696ddfb63f2d208949db896393e91c06df70a84c\nparent 395ec06b6a850b2de85c3e9bc23f17ab472365a4\nparent 255dd3ff42aecdc36da800e5bbfe0c09e83fa066\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569093855 +0200\ncommitter GitHub <noreply@github.com> 1569093855 +0200\n\nRollup merge of #64618 - alexcrichton:improve-dist-output, r=Mark-Simulacrum\n\nrustbuild: Improve output of `dist` step\n\n* Pass `/Q` to `iscc` on Windows to supress the thousands of lines of\n  output about compressing documentation.\n* Print out what's happening before long steps\n* Use `timeit` to print out timing information for long-running\n  installer assemblies.\n* Try to scope output of `Dist ...` to not also encompass actual build steps\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef8630381a51b367a9016c1dcaf160785a94f94b", "html_url": "https://github.com/rust-lang/rust/commit/ef8630381a51b367a9016c1dcaf160785a94f94b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef8630381a51b367a9016c1dcaf160785a94f94b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "395ec06b6a850b2de85c3e9bc23f17ab472365a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/395ec06b6a850b2de85c3e9bc23f17ab472365a4", "html_url": "https://github.com/rust-lang/rust/commit/395ec06b6a850b2de85c3e9bc23f17ab472365a4"}, {"sha": "255dd3ff42aecdc36da800e5bbfe0c09e83fa066", "url": "https://api.github.com/repos/rust-lang/rust/commits/255dd3ff42aecdc36da800e5bbfe0c09e83fa066", "html_url": "https://github.com/rust-lang/rust/commit/255dd3ff42aecdc36da800e5bbfe0c09e83fa066"}], "stats": {"total": 66, "additions": 47, "deletions": 19}, "files": [{"sha": "d9dff77a30e6bd0fdd9c5951ffab3e5ca1bb43ac", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 47, "deletions": 19, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/ef8630381a51b367a9016c1dcaf160785a94f94b/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef8630381a51b367a9016c1dcaf160785a94f94b/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=ef8630381a51b367a9016c1dcaf160785a94f94b", "patch": "@@ -18,7 +18,7 @@ use build_helper::{output, t};\n \n use crate::{Compiler, Mode, LLVM_TOOLS};\n use crate::channel;\n-use crate::util::{is_dylib, exe};\n+use crate::util::{is_dylib, exe, timeit};\n use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n use crate::compile;\n use crate::tool::{self, Tool};\n@@ -91,14 +91,15 @@ impl Step for Docs {\n \n         let name = pkgname(builder, \"rust-docs\");\n \n-        builder.info(&format!(\"Dist docs ({})\", host));\n         if !builder.config.docs {\n-            builder.info(\"\\tskipping - docs disabled\");\n             return distdir(builder).join(format!(\"{}-{}.tar.gz\", name, host));\n         }\n \n         builder.default_doc(None);\n \n+        builder.info(&format!(\"Dist docs ({})\", host));\n+        let _time = timeit(builder);\n+\n         let image = tmpdir(builder).join(format!(\"{}-{}-image\", name, host));\n         let _ = fs::remove_dir_all(&image);\n \n@@ -151,9 +152,7 @@ impl Step for RustcDocs {\n \n         let name = pkgname(builder, \"rustc-docs\");\n \n-        builder.info(&format!(\"Dist compiler docs ({})\", host));\n         if !builder.config.compiler_docs {\n-            builder.info(\"\\tskipping - compiler docs disabled\");\n             return distdir(builder).join(format!(\"{}-{}.tar.gz\", name, host));\n         }\n \n@@ -179,6 +178,9 @@ impl Step for RustcDocs {\n            .arg(\"--component-name=rustc-docs\")\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n            .arg(\"--bulk-dirs=share/doc/rust/html\");\n+\n+        builder.info(&format!(\"Dist compiler docs ({})\", host));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         builder.remove_dir(&image);\n \n@@ -350,6 +352,7 @@ impl Step for Mingw {\n         }\n \n         builder.info(&format!(\"Dist mingw ({})\", host));\n+        let _time = timeit(builder);\n         let name = pkgname(builder, \"rust-mingw\");\n         let image = tmpdir(builder).join(format!(\"{}-{}-image\", name, host));\n         let _ = fs::remove_dir_all(&image);\n@@ -403,7 +406,6 @@ impl Step for Rustc {\n         let compiler = self.compiler;\n         let host = self.compiler.host;\n \n-        builder.info(&format!(\"Dist rustc stage{} ({})\", compiler.stage, host));\n         let name = pkgname(builder, \"rustc\");\n         let image = tmpdir(builder).join(format!(\"{}-{}-image\", name, host));\n         let _ = fs::remove_dir_all(&image);\n@@ -460,6 +462,9 @@ impl Step for Rustc {\n            .arg(format!(\"--package-name={}-{}\", name, host))\n            .arg(\"--component-name=rustc\")\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n+\n+        builder.info(&format!(\"Dist rustc stage{} ({})\", compiler.stage, host));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         builder.remove_dir(&image);\n         builder.remove_dir(&overlay);\n@@ -662,8 +667,6 @@ impl Step for Std {\n         let target = self.target;\n \n         let name = pkgname(builder, \"rust-std\");\n-        builder.info(&format!(\"Dist std stage{} ({} -> {})\",\n-            compiler.stage, &compiler.host, target));\n \n         // The only true set of target libraries came from the build triple, so\n         // let's reduce redundant work by only producing archives from that host.\n@@ -714,6 +717,10 @@ impl Step for Std {\n            .arg(format!(\"--package-name={}-{}\", name, target))\n            .arg(format!(\"--component-name=rust-std-{}\", target))\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n+\n+        builder.info(&format!(\"Dist std stage{} ({} -> {})\",\n+            compiler.stage, &compiler.host, target));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         builder.remove_dir(&image);\n         distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target))\n@@ -754,11 +761,9 @@ impl Step for Analysis {\n         let compiler = self.compiler;\n         let target = self.target;\n         assert!(builder.config.extended);\n-        builder.info(\"Dist analysis\");\n         let name = pkgname(builder, \"rust-analysis\");\n \n         if &compiler.host != builder.config.build {\n-            builder.info(\"\\tskipping, not a build host\");\n             return distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target));\n         }\n \n@@ -786,6 +791,9 @@ impl Step for Analysis {\n            .arg(format!(\"--package-name={}-{}\", name, target))\n            .arg(format!(\"--component-name=rust-analysis-{}\", target))\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n+\n+        builder.info(\"Dist analysis\");\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         builder.remove_dir(&image);\n         distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target))\n@@ -874,8 +882,6 @@ impl Step for Src {\n \n     /// Creates the `rust-src` installer component\n     fn run(self, builder: &Builder<'_>) -> PathBuf {\n-        builder.info(\"Dist src\");\n-\n         let name = pkgname(builder, \"rust-src\");\n         let image = tmpdir(builder).join(format!(\"{}-image\", name));\n         let _ = fs::remove_dir_all(&image);\n@@ -930,6 +936,9 @@ impl Step for Src {\n            .arg(format!(\"--package-name={}\", name))\n            .arg(\"--component-name=rust-src\")\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n+\n+        builder.info(\"Dist src\");\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n \n         builder.remove_dir(&image);\n@@ -957,8 +966,6 @@ impl Step for PlainSourceTarball {\n \n     /// Creates the plain source tarball\n     fn run(self, builder: &Builder<'_>) -> PathBuf {\n-        builder.info(\"Create plain source tarball\");\n-\n         // Make sure that the root folder of tarball has the correct name\n         let plain_name = format!(\"{}-src\", pkgname(builder, \"rustc\"));\n         let plain_dst_src = tmpdir(builder).join(&plain_name);\n@@ -1020,6 +1027,9 @@ impl Step for PlainSourceTarball {\n            .arg(\"--output\").arg(&tarball)\n            .arg(\"--work-dir=.\")\n            .current_dir(tmpdir(builder));\n+\n+        builder.info(\"Create plain source tarball\");\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         distdir(builder).join(&format!(\"{}.tar.gz\", plain_name))\n     }\n@@ -1073,7 +1083,6 @@ impl Step for Cargo {\n         let compiler = self.compiler;\n         let target = self.target;\n \n-        builder.info(&format!(\"Dist cargo stage{} ({})\", compiler.stage, target));\n         let src = builder.src.join(\"src/tools/cargo\");\n         let etc = src.join(\"src/etc\");\n         let release_num = builder.release_num(\"cargo\");\n@@ -1126,6 +1135,9 @@ impl Step for Cargo {\n            .arg(format!(\"--package-name={}-{}\", name, target))\n            .arg(\"--component-name=cargo\")\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n+\n+        builder.info(&format!(\"Dist cargo stage{} ({})\", compiler.stage, target));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target))\n     }\n@@ -1161,7 +1173,6 @@ impl Step for Rls {\n         let target = self.target;\n         assert!(builder.config.extended);\n \n-        builder.info(&format!(\"Dist RLS stage{} ({})\", compiler.stage, target));\n         let src = builder.src.join(\"src/tools/rls\");\n         let release_num = builder.release_num(\"rls\");\n         let name = pkgname(builder, \"rls\");\n@@ -1210,6 +1221,8 @@ impl Step for Rls {\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n            .arg(\"--component-name=rls-preview\");\n \n+        builder.info(&format!(\"Dist RLS stage{} ({})\", compiler.stage, target));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target)))\n     }\n@@ -1245,7 +1258,6 @@ impl Step for Clippy {\n         let target = self.target;\n         assert!(builder.config.extended);\n \n-        builder.info(&format!(\"Dist clippy stage{} ({})\", compiler.stage, target));\n         let src = builder.src.join(\"src/tools/clippy\");\n         let release_num = builder.release_num(\"clippy\");\n         let name = pkgname(builder, \"clippy\");\n@@ -1299,6 +1311,8 @@ impl Step for Clippy {\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n            .arg(\"--component-name=clippy-preview\");\n \n+        builder.info(&format!(\"Dist clippy stage{} ({})\", compiler.stage, target));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target)))\n     }\n@@ -1334,7 +1348,6 @@ impl Step for Miri {\n         let target = self.target;\n         assert!(builder.config.extended);\n \n-        builder.info(&format!(\"Dist miri stage{} ({})\", compiler.stage, target));\n         let src = builder.src.join(\"src/tools/miri\");\n         let release_num = builder.release_num(\"miri\");\n         let name = pkgname(builder, \"miri\");\n@@ -1389,6 +1402,8 @@ impl Step for Miri {\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n            .arg(\"--component-name=miri-preview\");\n \n+        builder.info(&format!(\"Dist miri stage{} ({})\", compiler.stage, target));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target)))\n     }\n@@ -1423,7 +1438,6 @@ impl Step for Rustfmt {\n         let compiler = self.compiler;\n         let target = self.target;\n \n-        builder.info(&format!(\"Dist Rustfmt stage{} ({})\", compiler.stage, target));\n         let src = builder.src.join(\"src/tools/rustfmt\");\n         let release_num = builder.release_num(\"rustfmt\");\n         let name = pkgname(builder, \"rustfmt\");\n@@ -1476,6 +1490,8 @@ impl Step for Rustfmt {\n            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n            .arg(\"--component-name=rustfmt-preview\");\n \n+        builder.info(&format!(\"Dist Rustfmt stage{} ({})\", compiler.stage, target));\n+        let _time = timeit(builder);\n         builder.run(&mut cmd);\n         Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target)))\n     }\n@@ -1576,6 +1592,7 @@ impl Step for Extended {\n             input_tarballs.push(tarball);\n         }\n \n+        builder.info(\"building combined installer\");\n         let mut cmd = rust_installer(builder);\n         cmd.arg(\"combine\")\n             .arg(\"--product-name=Rust\")\n@@ -1587,7 +1604,9 @@ impl Step for Extended {\n             .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n             .arg(\"--input-tarballs\").arg(input_tarballs)\n             .arg(\"--non-installed-overlay\").arg(&overlay);\n+        let time = timeit(&builder);\n         builder.run(&mut cmd);\n+        drop(time);\n \n         let mut license = String::new();\n         license += &builder.read(&builder.src.join(\"COPYRIGHT\"));\n@@ -1643,6 +1662,7 @@ impl Step for Extended {\n         };\n \n         if target.contains(\"apple-darwin\") {\n+            builder.info(\"building pkg installer\");\n             let pkg = tmp.join(\"pkg\");\n             let _ = fs::remove_dir_all(&pkg);\n \n@@ -1692,6 +1712,7 @@ impl Step for Extended {\n                                                     pkgname(builder, \"rust\"),\n                                                     target)))\n                 .arg(\"--package-path\").arg(&pkg);\n+            let _time = timeit(builder);\n             builder.run(&mut cmd);\n         }\n \n@@ -1742,14 +1763,18 @@ impl Step for Extended {\n             builder.create(&exe.join(\"LICENSE.txt\"), &license);\n \n             // Generate exe installer\n+            builder.info(\"building `exe` installer with `iscc`\");\n             let mut cmd = Command::new(\"iscc\");\n             cmd.arg(\"rust.iss\")\n+                .arg(\"/Q\")\n                 .current_dir(&exe);\n             if target.contains(\"windows-gnu\") {\n                 cmd.arg(\"/dMINGW\");\n             }\n             add_env(builder, &mut cmd, target);\n+            let time = timeit(builder);\n             builder.run(&mut cmd);\n+            drop(time);\n             builder.install(&exe.join(format!(\"{}-{}.exe\", pkgname(builder, \"rust\"), target)),\n                     &distdir(builder),\n                     0o755);\n@@ -1914,6 +1939,7 @@ impl Step for Extended {\n             builder.install(&etc.join(\"gfx/banner.bmp\"), &exe, 0o644);\n             builder.install(&etc.join(\"gfx/dialogbg.bmp\"), &exe, 0o644);\n \n+            builder.info(&format!(\"building `msi` installer with {:?}\", light));\n             let filename = format!(\"{}-{}.msi\", pkgname(builder, \"rust\"), target);\n             let mut cmd = Command::new(&light);\n             cmd.arg(\"-nologo\")\n@@ -1946,6 +1972,7 @@ impl Step for Extended {\n             // ICE57 wrongly complains about the shortcuts\n             cmd.arg(\"-sice:ICE57\");\n \n+            let _time = timeit(builder);\n             builder.run(&mut cmd);\n \n             if !builder.config.dry_run {\n@@ -2114,6 +2141,7 @@ impl Step for LlvmTools {\n         }\n \n         builder.info(&format!(\"Dist LlvmTools ({})\", target));\n+        let _time = timeit(builder);\n         let src = builder.src.join(\"src/llvm-project/llvm\");\n         let name = pkgname(builder, \"llvm-tools\");\n "}]}