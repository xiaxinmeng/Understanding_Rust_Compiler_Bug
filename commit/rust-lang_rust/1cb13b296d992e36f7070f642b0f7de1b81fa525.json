{"sha": "1cb13b296d992e36f7070f642b0f7de1b81fa525", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYjEzYjI5NmQ5OTJlMzZmNzA3MGY2NDJiMGY3ZGUxYjgxZmE1MjU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-16T16:13:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-16T16:13:29Z"}, "message": "Rollup merge of #53412 - eddyb:stage-who, r=alexcrichton\n\n syntax_ext: remove leftover span_err_if_not_stage0 macro.\n\nI believe this is the right fix for #53380, although I'm not sure what happened.\nMy guess is this copy of the macro was accidentally missed when others were removed?\n\ncc @matthewjasper @varkor (please do not put this in a rollup, in case it fails)", "tree": {"sha": "d2fd49b149ee9e992b928027a571805b4b49e331", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2fd49b149ee9e992b928027a571805b4b49e331"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cb13b296d992e36f7070f642b0f7de1b81fa525", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdaKpCRBK7hj4Ov3rIwAAdHIIACAwjKXfD0KyJAS+gc1/2Gj8\nLfbaZVAo83vCSaq3/2iol0aVkAf+igtZwOaOKiowrcOAAYRwRpUIEz34MOENqvuR\nmwvgIb6g4ATnQBk6s21YiQPBIUWzDq7N9dtU3MuSPw0ExuGn6cUpArB6YEZgUgwe\nBHURm8Agl80aX+v4ZO91xlkQlqzW1Q1g25CKbOhy1tcCfzs6CbAn/vP2D0rdqd5j\nngGu7SwHZtVC1ZB1++grZemau+va6ksSWUkK5CwAZ4wo3zyl3coN1niBhbmij6gN\n+249hbsiikwkoTb7FWGAXdijT+P3EYDChYeK0irI6CfRnw3iBVtoRwE3k0Kz7Hk=\n=3ynt\n-----END PGP SIGNATURE-----\n", "payload": "tree d2fd49b149ee9e992b928027a571805b4b49e331\nparent ae3ebf0316eb282bff311d183d1bb5d9abbf7e70\nparent e7b65bd4578b1d8254f6ef700994fe3677693f02\nauthor kennytm <kennytm@gmail.com> 1534436009 +0800\ncommitter GitHub <noreply@github.com> 1534436009 +0800\n\nRollup merge of #53412 - eddyb:stage-who, r=alexcrichton\n\n syntax_ext: remove leftover span_err_if_not_stage0 macro.\n\nI believe this is the right fix for #53380, although I'm not sure what happened.\nMy guess is this copy of the macro was accidentally missed when others were removed?\n\ncc @matthewjasper @varkor (please do not put this in a rollup, in case it fails)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cb13b296d992e36f7070f642b0f7de1b81fa525", "html_url": "https://github.com/rust-lang/rust/commit/1cb13b296d992e36f7070f642b0f7de1b81fa525", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cb13b296d992e36f7070f642b0f7de1b81fa525/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae3ebf0316eb282bff311d183d1bb5d9abbf7e70", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae3ebf0316eb282bff311d183d1bb5d9abbf7e70", "html_url": "https://github.com/rust-lang/rust/commit/ae3ebf0316eb282bff311d183d1bb5d9abbf7e70"}, {"sha": "e7b65bd4578b1d8254f6ef700994fe3677693f02", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b65bd4578b1d8254f6ef700994fe3677693f02", "html_url": "https://github.com/rust-lang/rust/commit/e7b65bd4578b1d8254f6ef700994fe3677693f02"}], "stats": {"total": 72, "additions": 24, "deletions": 48}, "files": [{"sha": "adbc5828b8fb88bae1fb7124bf40dc14ac94ec72", "filename": "src/libsyntax_ext/deriving/default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdefault.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -76,8 +76,8 @@ fn default_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructur\n             }\n         }\n         StaticEnum(..) => {\n-            span_err_if_not_stage0!(cx, trait_span, E0665,\n-                                    \"`Default` cannot be derived for enums, only structs\");\n+            span_err!(cx, trait_span, E0665,\n+                      \"`Default` cannot be derived for enums, only structs\");\n             // let compilation continue\n             cx.expr_usize(trait_span, 0)\n         }"}, {"sha": "ae47a028bc3865346485126978e53c7fd0b8f6a4", "filename": "src/libsyntax_ext/deriving/mod.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -19,17 +19,6 @@ use syntax::ptr::P;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n \n-macro_rules! span_err_if_not_stage0 {\n-    ($cx:expr, $sp:expr, $code:ident, $text:tt) => {\n-        #[cfg(not(stage0))] {\n-            span_err!($cx, $sp, $code, $text)\n-        }\n-        #[cfg(stage0)] {\n-            $cx.span_err($sp, $text)\n-        }\n-    }\n-}\n-\n macro path_local($x:ident) {\n     generic::ty::Path::new_local(stringify!($x))\n }"}, {"sha": "2981e4ea8b3a38e0579116b68f4b307efb4cbf80", "filename": "src/test/ui/E0660.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0660.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0660.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0660.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-stage1\n-\n #![feature(asm)]\n \n fn main() {"}, {"sha": "e8acb282be94d370abfa1c6eb6ca5d441636deef", "filename": "src/test/ui/E0660.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0660.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0660.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0660.stderr?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -1,11 +1,11 @@\n error[E0660]: malformed inline assembly\n-  --> $DIR/E0660.rs:17:5\n+  --> $DIR/E0660.rs:15:5\n    |\n LL |     asm!(\"nop\" \"nop\");\n    |     ^^^^^^^^^^^^^^^^^^\n \n error[E0660]: malformed inline assembly\n-  --> $DIR/E0660.rs:19:5\n+  --> $DIR/E0660.rs:17:5\n    |\n LL |     asm!(\"nop\" \"nop\" : \"=r\"(a));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "2410eba02451fc6fb08307b72ad138a7796e4003", "filename": "src/test/ui/E0661.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0661.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0661.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0661.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-stage1\n-\n #![feature(asm)]\n \n fn main() {"}, {"sha": "90aeca5612ae468269b6a60be3924826debc1a3e", "filename": "src/test/ui/E0661.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0661.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0661.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0661.stderr?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -1,5 +1,5 @@\n error[E0661]: output operand constraint lacks '=' or '+'\n-  --> $DIR/E0661.rs:17:18\n+  --> $DIR/E0661.rs:15:18\n    |\n LL |     asm!(\"nop\" : \"r\"(a));\n    |                  ^^^"}, {"sha": "700540fd1e0c07b8544bb0740998c6257ba5aa2b", "filename": "src/test/ui/E0662.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0662.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0662.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0662.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-stage1\n-\n #![feature(asm)]\n \n fn main() {"}, {"sha": "31655ca198794c4f392755e8dbacfb57aa98ce1a", "filename": "src/test/ui/E0662.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0662.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0662.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0662.stderr?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -1,5 +1,5 @@\n error[E0662]: input operand constraint contains '='\n-  --> $DIR/E0662.rs:18:12\n+  --> $DIR/E0662.rs:16:12\n    |\n LL |          : \"=test\"(\"a\") //~ ERROR E0662\n    |            ^^^^^^^"}, {"sha": "dea2b9156b7e9f40b10085322b34ec44adb80f8d", "filename": "src/test/ui/E0663.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0663.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-stage1\n-\n #![feature(asm)]\n \n fn main() {"}, {"sha": "0a287620f20e1836d3dc9db93c294dacad6703a6", "filename": "src/test/ui/E0663.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0663.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0663.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0663.stderr?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -1,5 +1,5 @@\n error[E0663]: input operand constraint contains '+'\n-  --> $DIR/E0663.rs:18:12\n+  --> $DIR/E0663.rs:16:12\n    |\n LL |          : \"+test\"(\"a\") //~ ERROR E0663\n    |            ^^^^^^^"}, {"sha": "9773f604c468bc831f3b3ab467eb45333d2395f2", "filename": "src/test/ui/E0664.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0664.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0664.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0664.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-stage1\n-\n #![feature(asm)]\n \n fn main() {"}, {"sha": "1e79c84cbc8c460904b9cfe00e8717027f6d6690", "filename": "src/test/ui/E0664.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0664.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0664.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0664.stderr?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -1,5 +1,5 @@\n error[E0664]: clobber should not be surrounded by braces\n-  --> $DIR/E0664.rs:19:12\n+  --> $DIR/E0664.rs:17:12\n    |\n LL |          : \"{eax}\" //~ ERROR E0664\n    |            ^^^^^^^"}, {"sha": "0a0bd3f59052cf36edba5777d804a85a97a2b206", "filename": "src/test/ui/E0665.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0665.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0665.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0665.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-stage1\n-\n #[derive(Default)] //~ ERROR E0665\n enum Food {\n     Sweet,"}, {"sha": "268224cac3826f0841d6020eef36087d49eba68f", "filename": "src/test/ui/E0665.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0665.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2FE0665.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0665.stderr?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -1,5 +1,5 @@\n error[E0665]: `Default` cannot be derived for enums, only structs\n-  --> $DIR/E0665.rs:13:10\n+  --> $DIR/E0665.rs:11:10\n    |\n LL | #[derive(Default)] //~ ERROR E0665\n    |          ^^^^^^^"}, {"sha": "2815e1be70983377e45eaae934acb59da450eee7", "filename": "src/test/ui/macros/macros-nonfatal-errors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -10,7 +10,6 @@\n \n // normalize-stderr-test: \"The system cannot find the file specified\\.\" -> \"No such file or directory\"\n // ignore-tidy-linelength\n-// ignore-stage1\n \n // test that errors in a (selection) of macros don't kill compilation\n // immediately, so that we get more errors listed at a time."}, {"sha": "084042acc974d698f5655013cec24e281707ce81", "filename": "src/test/ui/macros/macros-nonfatal-errors.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cb13b296d992e36f7070f642b0f7de1b81fa525/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr?ref=1cb13b296d992e36f7070f642b0f7de1b81fa525", "patch": "@@ -1,55 +1,55 @@\n error[E0665]: `Default` cannot be derived for enums, only structs\n-  --> $DIR/macros-nonfatal-errors.rs:21:10\n+  --> $DIR/macros-nonfatal-errors.rs:20:10\n    |\n LL | #[derive(Default)] //~ ERROR\n    |          ^^^^^^^\n \n error: inline assembly must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:25:10\n+  --> $DIR/macros-nonfatal-errors.rs:24:10\n    |\n LL |     asm!(invalid); //~ ERROR\n    |          ^^^^^^^\n \n error: concat_idents! requires ident args.\n-  --> $DIR/macros-nonfatal-errors.rs:27:5\n+  --> $DIR/macros-nonfatal-errors.rs:26:5\n    |\n LL |     concat_idents!(\"not\", \"idents\"); //~ ERROR\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:29:17\n+  --> $DIR/macros-nonfatal-errors.rs:28:17\n    |\n LL |     option_env!(invalid); //~ ERROR\n    |                 ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:30:10\n+  --> $DIR/macros-nonfatal-errors.rs:29:10\n    |\n LL |     env!(invalid); //~ ERROR\n    |          ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:31:10\n+  --> $DIR/macros-nonfatal-errors.rs:30:10\n    |\n LL |     env!(foo, abr, baz); //~ ERROR\n    |          ^^^\n \n error: environment variable `RUST_HOPEFULLY_THIS_DOESNT_EXIST` not defined\n-  --> $DIR/macros-nonfatal-errors.rs:32:5\n+  --> $DIR/macros-nonfatal-errors.rs:31:5\n    |\n LL |     env!(\"RUST_HOPEFULLY_THIS_DOESNT_EXIST\"); //~ ERROR\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0658]: non-ident macro paths are experimental (see issue #35896)\n-  --> $DIR/macros-nonfatal-errors.rs:34:5\n+  --> $DIR/macros-nonfatal-errors.rs:33:5\n    |\n LL |     foo::blah!(); //~ ERROR\n    |     ^^^^^^^^^\n    |\n    = help: add #![feature(use_extern_macros)] to the crate attributes to enable\n \n error: format argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:36:13\n+  --> $DIR/macros-nonfatal-errors.rs:35:13\n    |\n LL |     format!(invalid); //~ ERROR\n    |             ^^^^^^^\n@@ -59,37 +59,37 @@ LL |     format!(\"{}\", invalid); //~ ERROR\n    |             ^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:38:14\n+  --> $DIR/macros-nonfatal-errors.rs:37:14\n    |\n LL |     include!(invalid); //~ ERROR\n    |              ^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:40:18\n+  --> $DIR/macros-nonfatal-errors.rs:39:18\n    |\n LL |     include_str!(invalid); //~ ERROR\n    |                  ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: No such file or directory (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:41:5\n+  --> $DIR/macros-nonfatal-errors.rs:40:5\n    |\n LL |     include_str!(\"i'd be quite surprised if a file with this name existed\"); //~ ERROR\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:42:20\n+  --> $DIR/macros-nonfatal-errors.rs:41:20\n    |\n LL |     include_bytes!(invalid); //~ ERROR\n    |                    ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: No such file or directory (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:43:5\n+  --> $DIR/macros-nonfatal-errors.rs:42:5\n    |\n LL |     include_bytes!(\"i'd be quite surprised if a file with this name existed\"); //~ ERROR\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: trace_macros! accepts only `true` or `false`\n-  --> $DIR/macros-nonfatal-errors.rs:45:5\n+  --> $DIR/macros-nonfatal-errors.rs:44:5\n    |\n LL |     trace_macros!(invalid); //~ ERROR\n    |     ^^^^^^^^^^^^^^^^^^^^^^^"}]}