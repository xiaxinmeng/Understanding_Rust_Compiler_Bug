{"sha": "d0986cd96b8765f252fe3d9d140cc313298d919b", "node_id": "C_kwDOAAsO6NoAKGQwOTg2Y2Q5NmI4NzY1ZjI1MmZlM2Q5ZDE0MGNjMzEzMjk4ZDkxOWI", "commit": {"author": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2021-12-22T00:48:02Z"}, "committer": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2021-12-22T00:48:02Z"}, "message": "Move variables into the closure", "tree": {"sha": "dd68c40c34562527313d34ca76ba1182b634b36a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd68c40c34562527313d34ca76ba1182b634b36a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0986cd96b8765f252fe3d9d140cc313298d919b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEaiSth+M9lPoQjHQDxt6lcKOwJvwFAmHCdccACgkQxt6lcKOw\nJvwDMQf/XmCIyLmhq9N2wAFmXUPuJuIRsDZyM0VOpW0nKnZ2YWEB/cRfib6DsEdc\n9V8nFyV3cy/QcEfe39Ws7q5/En936+wUo04smbSk+B1VYGV9go8Vb5Oz9N72CT1H\nPopGjOv6u9oI7iYGYAiRpHCxmOwRk667Mwh2bNAv8W+q+bOpb5KYl/IfNIoZ1n8Y\nP/JvBxty9rjRXq0xYqE7xCbGOKgTKFkaL25PJG4X9S+DrvcAqf2QHHOZ6G5Uwgiv\ntCY565s3MYNfcLAE4eTOsn/LPjEwiFyYcOdf9KPUOfu/mNezF8/Ir/szOsaGx7/G\nUh8WIV016+mhvUdLx9oilkOnXKsE0A==\n=iAdR\n-----END PGP SIGNATURE-----", "payload": "tree dd68c40c34562527313d34ca76ba1182b634b36a\nparent 71676ae89d14ab6bc7db586266f043a84cfdffbd\nauthor Wang Ruochen <wrc@ruo-chen.wang> 1640134082 -0800\ncommitter Wang Ruochen <wrc@ruo-chen.wang> 1640134082 -0800\n\nMove variables into the closure\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0986cd96b8765f252fe3d9d140cc313298d919b", "html_url": "https://github.com/rust-lang/rust/commit/d0986cd96b8765f252fe3d9d140cc313298d919b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0986cd96b8765f252fe3d9d140cc313298d919b/comments", "author": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71676ae89d14ab6bc7db586266f043a84cfdffbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/71676ae89d14ab6bc7db586266f043a84cfdffbd", "html_url": "https://github.com/rust-lang/rust/commit/71676ae89d14ab6bc7db586266f043a84cfdffbd"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "c427ee88a243e58fae5b6bc60594b9b6079ccc16", "filename": "crates/ide_assists/src/handlers/move_guard.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d0986cd96b8765f252fe3d9d140cc313298d919b/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0986cd96b8765f252fe3d9d140cc313298d919b/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=d0986cd96b8765f252fe3d9d140cc313298d919b", "patch": "@@ -116,26 +116,27 @@ pub(crate) fn move_arm_cond_to_match_guard(acc: &mut Assists, ctx: &AssistContex\n         }\n     })?;\n     let replace_node = replace_node.unwrap_or_else(|| if_expr.syntax().clone());\n-    // Dedent if if_expr is in a BlockExpr\n-    let dedent = if replace_node != *if_expr.syntax() {\n-        cov_mark::hit!(move_guard_ifelse_in_block);\n-        1\n-    } else {\n-        cov_mark::hit!(move_guard_ifelse_else_block);\n-        0\n-    };\n-\n+    let needs_dedent = replace_node != *if_expr.syntax();\n     let (conds_blocks, tail) = parse_if_chain(if_expr)?;\n \n-    let then_arm_end = match_arm.syntax().text_range().end();\n-    let indent_level = match_arm.indent_level();\n-    let spaces = \"    \".repeat(indent_level.0 as _);\n     acc.add(\n         AssistId(\"move_arm_cond_to_match_guard\", AssistKind::RefactorRewrite),\n         \"Move condition to match guard\",\n         replace_node.text_range(),\n         |edit| {\n             edit.delete(match_arm.syntax().text_range());\n+            // Dedent if if_expr is in a BlockExpr\n+            let dedent = if needs_dedent {\n+                cov_mark::hit!(move_guard_ifelse_in_block);\n+                1\n+            } else {\n+                cov_mark::hit!(move_guard_ifelse_else_block);\n+                0\n+            };\n+            let then_arm_end = match_arm.syntax().text_range().end();\n+            let indent_level = match_arm.indent_level();\n+            let spaces = \"    \".repeat(indent_level.0 as _);\n+\n             let mut first = true;\n             for (cond, block) in conds_blocks {\n                 if !first {"}]}