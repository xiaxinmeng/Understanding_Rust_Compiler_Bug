{"sha": "fc9da8f795b2670dd1f211d17c0896cc2ea85d45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjOWRhOGY3OTViMjY3MGRkMWYyMTFkMTdjMDg5NmNjMmVhODVkNDU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-04-20T00:50:31Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-04-20T00:54:13Z"}, "message": "rustc: Whitelist upstream target_features\n\nWhen compiling crates we'll be calculating and parsing `#[target_feature]` for\nupstream crates. We'll also be checking the stability of listed features, but we\nonly want to check the listed stability during the actual crate that wrote the\nrelevant code. This commit updates the `target_feature` process to ignore\nforeign `DefId` instances and only check the feature whitelist for local\nfunctions.\n\nCloses #50094", "tree": {"sha": "657313e9cfc2f7167b3c1da45fbcf95c840c21a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/657313e9cfc2f7167b3c1da45fbcf95c840c21a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc9da8f795b2670dd1f211d17c0896cc2ea85d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc9da8f795b2670dd1f211d17c0896cc2ea85d45", "html_url": "https://github.com/rust-lang/rust/commit/fc9da8f795b2670dd1f211d17c0896cc2ea85d45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc9da8f795b2670dd1f211d17c0896cc2ea85d45/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8830a0304327ba8c983555ac5d42cec0569c31bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8830a0304327ba8c983555ac5d42cec0569c31bb", "html_url": "https://github.com/rust-lang/rust/commit/8830a0304327ba8c983555ac5d42cec0569c31bb"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "a1eb043995abaa2939c135e3868b18f80e19960b", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc9da8f795b2670dd1f211d17c0896cc2ea85d45/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9da8f795b2670dd1f211d17c0896cc2ea85d45/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=fc9da8f795b2670dd1f211d17c0896cc2ea85d45", "patch": "@@ -1682,6 +1682,7 @@ fn is_foreign_item<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n fn from_target_feature(\n     tcx: TyCtxt,\n+    id: DefId,\n     attr: &ast::Attribute,\n     whitelist: &FxHashMap<String, Option<String>>,\n     target_features: &mut Vec<Symbol>,\n@@ -1752,7 +1753,7 @@ fn from_target_feature(\n                 Some(name) => bug!(\"unknown target feature gate {}\", name),\n                 None => true,\n             };\n-            if !allowed {\n+            if !allowed && id.is_local() {\n                 feature_gate::emit_feature_err(\n                     &tcx.sess.parse_sess,\n                     feature_gate.as_ref().unwrap(),\n@@ -1877,7 +1878,7 @@ fn trans_fn_attrs<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, id: DefId) -> TransFnAt\n                            `unsafe` function\";\n                 tcx.sess.span_err(attr.span, msg);\n             }\n-            from_target_feature(tcx, attr, &whitelist, &mut trans_fn_attrs.target_features);\n+            from_target_feature(tcx, id, attr, &whitelist, &mut trans_fn_attrs.target_features);\n         } else if attr.check_name(\"linkage\") {\n             if let Some(val) = attr.value_str() {\n                 trans_fn_attrs.linkage = Some(linkage_by_name(tcx, id, &val.as_str()));"}, {"sha": "8b7d0332fe97578fd63d293ac08c91355aad6e80", "filename": "src/test/run-pass/auxiliary/using-target-feature-unstable.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fc9da8f795b2670dd1f211d17c0896cc2ea85d45/src%2Ftest%2Frun-pass%2Fauxiliary%2Fusing-target-feature-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9da8f795b2670dd1f211d17c0896cc2ea85d45/src%2Ftest%2Frun-pass%2Fauxiliary%2Fusing-target-feature-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fusing-target-feature-unstable.rs?ref=fc9da8f795b2670dd1f211d17c0896cc2ea85d45", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(mmx_target_feature)]\n+\n+#[inline]\n+#[target_feature(enable = \"mmx\")]\n+pub unsafe fn foo() {}"}, {"sha": "614c8d4e1d477f0478bde703967be8a6f695d110", "filename": "src/test/run-pass/using-target-feature-unstable.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fc9da8f795b2670dd1f211d17c0896cc2ea85d45/src%2Ftest%2Frun-pass%2Fusing-target-feature-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9da8f795b2670dd1f211d17c0896cc2ea85d45/src%2Ftest%2Frun-pass%2Fusing-target-feature-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fusing-target-feature-unstable.rs?ref=fc9da8f795b2670dd1f211d17c0896cc2ea85d45", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// only-x86_64\n+// aux-build:using-target-feature-unstable.rs\n+\n+extern crate using_target_feature_unstable;\n+\n+fn main() {\n+    unsafe {\n+        using_target_feature_unstable::foo();\n+    }\n+}"}]}