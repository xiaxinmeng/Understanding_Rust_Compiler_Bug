{"sha": "199e3b73c712a74e36bbb75eebf9e9418f1b1341", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5OWUzYjczYzcxMmE3NGUzNmJiYjc1ZWViZjllOTQxOGYxYjEzNDE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-14T11:45:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-14T11:45:56Z"}, "message": "fields are part of the structure", "tree": {"sha": "c1d19ef695eedd9848eb9019a7c77c66f035a9bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d19ef695eedd9848eb9019a7c77c66f035a9bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/199e3b73c712a74e36bbb75eebf9e9418f1b1341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/199e3b73c712a74e36bbb75eebf9e9418f1b1341", "html_url": "https://github.com/rust-lang/rust/commit/199e3b73c712a74e36bbb75eebf9e9418f1b1341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/199e3b73c712a74e36bbb75eebf9e9418f1b1341/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1141d448d960eedba0a5647d525910de706bf778", "url": "https://api.github.com/repos/rust-lang/rust/commits/1141d448d960eedba0a5647d525910de706bf778", "html_url": "https://github.com/rust-lang/rust/commit/1141d448d960eedba0a5647d525910de706bf778"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "6f8853770888b0d6996b43a9568b506614872fc7", "filename": "crates/libeditor/src/symbols.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibeditor%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibeditor%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fsymbols.rs?ref=199e3b73c712a74e36bbb75eebf9e9418f1b1341", "patch": "@@ -96,6 +96,7 @@ fn structure_node(node: SyntaxNodeRef) -> Option<StructureNode> {\n     visitor()\n         .visit(decl::<ast::FnDef<_>>)\n         .visit(decl::<ast::StructDef<_>>)\n+        .visit(decl::<ast::NamedField<_>>)\n         .visit(decl::<ast::EnumDef<_>>)\n         .visit(decl::<ast::TraitDef<_>>)\n         .visit(decl::<ast::Module<_>>)"}, {"sha": "dd2c99c3f283c0993f0a1035062ffc3d4009e041", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=199e3b73c712a74e36bbb75eebf9e9418f1b1341", "patch": "@@ -88,14 +88,15 @@ impl fmt::Debug for E {}\n     let symbols = file_structure(&file);\n     dbg_eq(\n         r#\"[StructureNode { parent: None, label: \"Foo\", navigation_range: [8; 11), node_range: [1; 26), kind: STRUCT_DEF },\n-           StructureNode { parent: None, label: \"m\", navigation_range: [32; 33), node_range: [28; 53), kind: MODULE },\n-           StructureNode { parent: Some(1), label: \"bar\", navigation_range: [43; 46), node_range: [40; 51), kind: FN_DEF },\n-           StructureNode { parent: None, label: \"E\", navigation_range: [60; 61), node_range: [55; 75), kind: ENUM_DEF },\n-           StructureNode { parent: None, label: \"T\", navigation_range: [81; 82), node_range: [76; 88), kind: TYPE_DEF },\n-           StructureNode { parent: None, label: \"S\", navigation_range: [96; 97), node_range: [89; 108), kind: STATIC_DEF },\n-           StructureNode { parent: None, label: \"C\", navigation_range: [115; 116), node_range: [109; 127), kind: CONST_DEF },\n-           StructureNode { parent: None, label: \"impl E\", navigation_range: [134; 135), node_range: [129; 138), kind: IMPL_ITEM },\n-           StructureNode { parent: None, label: \"impl fmt::Debug for E\", navigation_range: [160; 161), node_range: [140; 164), kind: IMPL_ITEM }]\"#,\n+            StructureNode { parent: Some(0), label: \"x\", navigation_range: [18; 19), node_range: [18; 24), kind: NAMED_FIELD },\n+            StructureNode { parent: None, label: \"m\", navigation_range: [32; 33), node_range: [28; 53), kind: MODULE },\n+            StructureNode { parent: Some(2), label: \"bar\", navigation_range: [43; 46), node_range: [40; 51), kind: FN_DEF },\n+            StructureNode { parent: None, label: \"E\", navigation_range: [60; 61), node_range: [55; 75), kind: ENUM_DEF },\n+            StructureNode { parent: None, label: \"T\", navigation_range: [81; 82), node_range: [76; 88), kind: TYPE_DEF },\n+            StructureNode { parent: None, label: \"S\", navigation_range: [96; 97), node_range: [89; 108), kind: STATIC_DEF },\n+            StructureNode { parent: None, label: \"C\", navigation_range: [115; 116), node_range: [109; 127), kind: CONST_DEF },\n+            StructureNode { parent: None, label: \"impl E\", navigation_range: [134; 135), node_range: [129; 138), kind: IMPL_ITEM },\n+            StructureNode { parent: None, label: \"impl fmt::Debug for E\", navigation_range: [160; 161), node_range: [140; 164), kind: IMPL_ITEM }]\"#,\n         &symbols,\n     )\n }"}, {"sha": "1ec05c950b1908df95d440d72c68c3deafa3b59e", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=199e3b73c712a74e36bbb75eebf9e9418f1b1341", "patch": "@@ -249,6 +249,25 @@ impl<R: TreeRoot> AstNode<R> for NameRef<R> {\n \n impl<R: TreeRoot> NameRef<R> {}\n \n+// NamedField\n+#[derive(Debug, Clone, Copy)]\n+pub struct NamedField<R: TreeRoot = Arc<SyntaxRoot>> {\n+    syntax: SyntaxNode<R>,\n+}\n+\n+impl<R: TreeRoot> AstNode<R> for NamedField<R> {\n+    fn cast(syntax: SyntaxNode<R>) -> Option<Self> {\n+        match syntax.kind() {\n+            NAMED_FIELD => Some(NamedField { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode<R> { &self.syntax }\n+}\n+\n+impl<R: TreeRoot> ast::NameOwner<R> for NamedField<R> {}\n+impl<R: TreeRoot> NamedField<R> {}\n+\n // NeverType\n #[derive(Debug, Clone, Copy)]\n pub struct NeverType<R: TreeRoot = Arc<SyntaxRoot>> {\n@@ -436,7 +455,13 @@ impl<R: TreeRoot> AstNode<R> for StructDef<R> {\n }\n \n impl<R: TreeRoot> ast::NameOwner<R> for StructDef<R> {}\n-impl<R: TreeRoot> StructDef<R> {}\n+impl<R: TreeRoot> StructDef<R> {\n+    pub fn fields<'a>(&'a self) -> impl Iterator<Item = NamedField<R>> + 'a {\n+        self.syntax()\n+            .children()\n+            .filter_map(NamedField::cast)\n+    }\n+}\n \n // TraitDef\n #[derive(Debug, Clone, Copy)]"}, {"sha": "aa28ab9224ba0d9082cf7defb7ebfa0701f44248", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/199e3b73c712a74e36bbb75eebf9e9418f1b1341/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=199e3b73c712a74e36bbb75eebf9e9418f1b1341", "patch": "@@ -222,14 +222,21 @@ Grammar(\n             ]\n         ),\n         \"FnDef\": ( traits: [\"NameOwner\"] ),\n-        \"StructDef\": ( traits: [\"NameOwner\"] ),\n+        \"StructDef\": (\n+            traits: [\"NameOwner\"],\n+            collections: [\n+                [\"fields\", \"NamedField\"]\n+            ]\n+        ),\n+        \"NamedField\": ( traits: [\"NameOwner\"] ),\n         \"EnumDef\": ( traits: [\"NameOwner\"] ),\n         \"TraitDef\": ( traits: [\"NameOwner\"] ),\n         \"Module\": ( traits: [\"NameOwner\"] ),\n         \"ConstDef\": ( traits: [\"NameOwner\"] ),\n         \"StaticDef\": ( traits: [\"NameOwner\"] ),\n         \"TypeDef\": ( traits: [\"NameOwner\"] ),\n         \"ImplItem\": (),\n+\n         \"Name\": (),\n         \"NameRef\": (),\n "}]}