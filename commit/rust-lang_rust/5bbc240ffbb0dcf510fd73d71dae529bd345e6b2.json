{"sha": "5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYmMyNDBmZmJiMGRjZjUxMGZkNzNkNzFkYWU1MjliZDM0NWU2YjI=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-05-15T23:10:17Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-05-15T23:13:46Z"}, "message": "Fix unused attributes on macro_rules.", "tree": {"sha": "8cefde9b70c34b541f4ef195cab232777e26da88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cefde9b70c34b541f4ef195cab232777e26da88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "html_url": "https://github.com/rust-lang/rust/commit/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17f30e5451f581d753899d2f628e5be354df33cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/17f30e5451f581d753899d2f628e5be354df33cd", "html_url": "https://github.com/rust-lang/rust/commit/17f30e5451f581d753899d2f628e5be354df33cd"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "0a7ab4a2bafa38ea6b30ea762b2baf856f319c6c", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "patch": "@@ -448,6 +448,10 @@ fn late_lint_pass_crate<'tcx, T: LateLintPass<'tcx>>(tcx: TyCtxt<'tcx>, pass: T)\n         lint_callback!(cx, check_crate, krate);\n \n         hir_visit::walk_crate(cx, krate);\n+        for attr in krate.non_exported_macro_attrs {\n+            // This HIR ID is a lie, since the macro ID isn't available.\n+            cx.visit_attribute(hir::CRATE_HIR_ID, attr);\n+        }\n \n         lint_callback!(cx, check_crate_post, krate);\n     })"}, {"sha": "f4e4579bec27ef292e25f5a11d0fff12dcb8c1e5", "filename": "compiler/rustc_target/src/asm/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs?ref=5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "patch": "@@ -6,7 +6,6 @@ use rustc_span::Symbol;\n use std::fmt;\n use std::str::FromStr;\n \n-#[macro_use]\n macro_rules! def_reg_class {\n     ($arch:ident $arch_regclass:ident {\n         $(\n@@ -51,7 +50,6 @@ macro_rules! def_reg_class {\n     }\n }\n \n-#[macro_use]\n macro_rules! def_regs {\n     ($arch:ident $arch_reg:ident $arch_regclass:ident {\n         $(\n@@ -129,7 +127,6 @@ macro_rules! def_regs {\n     }\n }\n \n-#[macro_use]\n macro_rules! types {\n     (\n         $(_ : $($ty:expr),+;)?"}, {"sha": "396137a11d06995fb4147158d8e640729f923686", "filename": "src/test/ui/unused/unused-attr-macro-rules.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/src%2Ftest%2Fui%2Funused%2Funused-attr-macro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/src%2Ftest%2Fui%2Funused%2Funused-attr-macro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-attr-macro-rules.rs?ref=5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "patch": "@@ -0,0 +1,34 @@\n+#![deny(unused_attributes)]\n+// Unused attributes on macro_rules requires special handling since the\n+// macro_rules definition does not survive towards HIR.\n+\n+// A sample of various built-in attributes.\n+#[macro_export]\n+#[macro_use] //~ ERROR unused attribute\n+#[path=\"foo\"] //~ ERROR unused attribute\n+#[recursion_limit=\"1\"] //~ ERROR unused attribute\n+                       //~| ERROR crate-level attribute should be an inner attribute\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+// The following should not warn about unused attributes.\n+#[allow(unused)]\n+macro_rules! foo2 {\n+    () => {};\n+}\n+\n+#[cfg(FALSE)]\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+/// Some docs\n+#[deprecated]\n+#[doc = \"more docs\"]\n+#[macro_export]\n+macro_rules! bar {\n+    () => {};\n+}\n+\n+fn main() {}"}, {"sha": "4606be01ac014738d679395ee3a5f0c1361c0146", "filename": "src/test/ui/unused/unused-attr-macro-rules.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/src%2Ftest%2Fui%2Funused%2Funused-attr-macro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bbc240ffbb0dcf510fd73d71dae529bd345e6b2/src%2Ftest%2Fui%2Funused%2Funused-attr-macro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused%2Funused-attr-macro-rules.stderr?ref=5bbc240ffbb0dcf510fd73d71dae529bd345e6b2", "patch": "@@ -0,0 +1,32 @@\n+error: unused attribute\n+  --> $DIR/unused-attr-macro-rules.rs:7:1\n+   |\n+LL | #[macro_use]\n+   | ^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused-attr-macro-rules.rs:1:9\n+   |\n+LL | #![deny(unused_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^\n+\n+error: unused attribute\n+  --> $DIR/unused-attr-macro-rules.rs:8:1\n+   |\n+LL | #[path=\"foo\"]\n+   | ^^^^^^^^^^^^^\n+\n+error: unused attribute\n+  --> $DIR/unused-attr-macro-rules.rs:9:1\n+   |\n+LL | #[recursion_limit=\"1\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/unused-attr-macro-rules.rs:9:1\n+   |\n+LL | #[recursion_limit=\"1\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}]}