{"sha": "e87c62fb12e6b02cfc39fc2a16c315615714757a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4N2M2MmZiMTJlNmIwMmNmYzM5ZmMyYTE2YzMxNTYxNTcxNDc1N2E=", "commit": {"author": {"name": "marcell", "email": "marcell.pardavi@gmail.com", "date": "2015-06-10T00:03:56Z"}, "committer": {"name": "marcell", "email": "marcell.pardavi@gmail.com", "date": "2015-06-10T00:04:37Z"}, "message": "Modify String::push to reallocate more conservatively in case of the character's UTF-8 representation is bigger than 1 byte", "tree": {"sha": "032390cdd676876924e4906ca1bb10298ebc3875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/032390cdd676876924e4906ca1bb10298ebc3875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e87c62fb12e6b02cfc39fc2a16c315615714757a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e87c62fb12e6b02cfc39fc2a16c315615714757a", "html_url": "https://github.com/rust-lang/rust/commit/e87c62fb12e6b02cfc39fc2a16c315615714757a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e87c62fb12e6b02cfc39fc2a16c315615714757a/comments", "author": {"login": "pmarcelll", "id": 1909968, "node_id": "MDQ6VXNlcjE5MDk5Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/1909968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmarcelll", "html_url": "https://github.com/pmarcelll", "followers_url": "https://api.github.com/users/pmarcelll/followers", "following_url": "https://api.github.com/users/pmarcelll/following{/other_user}", "gists_url": "https://api.github.com/users/pmarcelll/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmarcelll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmarcelll/subscriptions", "organizations_url": "https://api.github.com/users/pmarcelll/orgs", "repos_url": "https://api.github.com/users/pmarcelll/repos", "events_url": "https://api.github.com/users/pmarcelll/events{/privacy}", "received_events_url": "https://api.github.com/users/pmarcelll/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmarcelll", "id": 1909968, "node_id": "MDQ6VXNlcjE5MDk5Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/1909968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmarcelll", "html_url": "https://github.com/pmarcelll", "followers_url": "https://api.github.com/users/pmarcelll/followers", "following_url": "https://api.github.com/users/pmarcelll/following{/other_user}", "gists_url": "https://api.github.com/users/pmarcelll/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmarcelll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmarcelll/subscriptions", "organizations_url": "https://api.github.com/users/pmarcelll/orgs", "repos_url": "https://api.github.com/users/pmarcelll/repos", "events_url": "https://api.github.com/users/pmarcelll/events{/privacy}", "received_events_url": "https://api.github.com/users/pmarcelll/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5d0e2a0733b5271d1044979cf824dccb2a3c3d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d0e2a0733b5271d1044979cf824dccb2a3c3d5", "html_url": "https://github.com/rust-lang/rust/commit/c5d0e2a0733b5271d1044979cf824dccb2a3c3d5"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "6717f2f45fab5f7362ee210b096cb0596539003a", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e87c62fb12e6b02cfc39fc2a16c315615714757a/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e87c62fb12e6b02cfc39fc2a16c315615714757a/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=e87c62fb12e6b02cfc39fc2a16c315615714757a", "patch": "@@ -468,24 +468,24 @@ impl String {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn push(&mut self, ch: char) {\n-        if (ch as u32) < 0x80 {\n-            self.vec.push(ch as u8);\n-            return;\n-        }\n-\n-        let cur_len = self.len();\n-        // This may use up to 4 bytes.\n-        self.vec.reserve(4);\n+        match ch.len_utf8() {\n+            1 => self.vec.push(ch as u8),\n+            ch_len => {\n+                let cur_len = self.len();\n+                // This may use up to 4 bytes.\n+                self.vec.reserve(ch_len);\n \n-        unsafe {\n-            // Attempt to not use an intermediate buffer by just pushing bytes\n-            // directly onto this string.\n-            let slice = slice::from_raw_parts_mut (\n-                self.vec.as_mut_ptr().offset(cur_len as isize),\n-                4\n-            );\n-            let used = ch.encode_utf8(slice).unwrap_or(0);\n-            self.vec.set_len(cur_len + used);\n+                unsafe {\n+                    // Attempt to not use an intermediate buffer by just pushing bytes\n+                    // directly onto this string.\n+                    let slice = slice::from_raw_parts_mut (\n+                        self.vec.as_mut_ptr().offset(cur_len as isize),\n+                        ch_len\n+                    );\n+                    let used = ch.encode_utf8(slice).unwrap_or(0);\n+                    self.vec.set_len(cur_len + used);\n+                }\n+            }\n         }\n     }\n "}]}