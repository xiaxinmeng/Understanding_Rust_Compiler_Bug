{"sha": "753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MzU5MGYwYzUyYzBjYTU0ZTdiODBjMWNjOTBmNzJiYjhiYmM4ZmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-24T11:36:54Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-09-06T15:17:03Z"}, "message": "add a debugging mechanism to forbid edges\n\nIt is useful to track down an errant edge that is being added.  This is\nnot a perfect mechanism, since it doesn't consider (e.g.) if we are\nin an ignored task, but it's helpful enough for now.", "tree": {"sha": "e90285076aef21ff1185cdfa2a42ae30504f22d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e90285076aef21ff1185cdfa2a42ae30504f22d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb", "html_url": "https://github.com/rust-lang/rust/commit/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6363b801316c1d8279f55a6be44746d71018ceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6363b801316c1d8279f55a6be44746d71018ceb", "html_url": "https://github.com/rust-lang/rust/commit/c6363b801316c1d8279f55a6be44746d71018ceb"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "ca441c4bc3ff2435733ad080e662d57abfb58ff5", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb", "patch": "@@ -38,6 +38,10 @@ struct DepGraphData {\n \n     /// Work-products that we generate in this run.\n     work_products: RefCell<FnvHashMap<Arc<WorkProductId>, WorkProduct>>,\n+\n+    /// Tracks nodes that are forbidden to read/write; see\n+    /// `DepGraph::forbid`. Used for debugging only.\n+    forbidden: RefCell<Vec<DepNode<DefId>>>,\n }\n \n impl DepGraph {\n@@ -46,7 +50,8 @@ impl DepGraph {\n             data: Rc::new(DepGraphData {\n                 thread: DepGraphThreadData::new(enabled),\n                 previous_work_products: RefCell::new(FnvHashMap()),\n-                work_products: RefCell::new(FnvHashMap())\n+                work_products: RefCell::new(FnvHashMap()),\n+                forbidden: RefCell::new(Vec::new()),\n             })\n         }\n     }\n@@ -70,6 +75,15 @@ impl DepGraph {\n         raii::DepTask::new(&self.data.thread, key)\n     }\n \n+    /// Debugging aid -- forbid reads/writes to `key` while the return\n+    /// value is in scope. Note that this is only available when debug\n+    /// assertions are enabled -- you should not check in code that\n+    /// invokes this function.\n+    #[cfg(debug_assertions)]\n+    pub fn forbid<'graph>(&'graph self, key: DepNode<DefId>) -> raii::Forbid<'graph> {\n+        raii::Forbid::new(&self.data.forbidden, key)\n+    }\n+\n     pub fn with_ignore<OP,R>(&self, op: OP) -> R\n         where OP: FnOnce() -> R\n     {\n@@ -85,10 +99,12 @@ impl DepGraph {\n     }\n \n     pub fn read(&self, v: DepNode<DefId>) {\n+        debug_assert!(!self.data.forbidden.borrow().contains(&v));\n         self.data.thread.enqueue(DepMessage::Read(v));\n     }\n \n     pub fn write(&self, v: DepNode<DefId>) {\n+        debug_assert!(!self.data.forbidden.borrow().contains(&v));\n         self.data.thread.enqueue(DepMessage::Write(v));\n     }\n "}, {"sha": "b344eb486240b10e6395542da37a349bd50db9d3", "filename": "src/librustc/dep_graph/raii.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb/src%2Flibrustc%2Fdep_graph%2Fraii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb/src%2Flibrustc%2Fdep_graph%2Fraii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fraii.rs?ref=753590f0c52c0ca54e7b80c1cc90f72bb8bbc8fb", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use hir::def_id::DefId;\n+use std::cell::RefCell;\n use super::DepNode;\n use super::thread::{DepGraphThreadData, DepMessage};\n \n@@ -47,3 +48,20 @@ impl<'graph> Drop for IgnoreTask<'graph> {\n         self.data.enqueue(DepMessage::PopIgnore);\n     }\n }\n+\n+pub struct Forbid<'graph> {\n+    forbidden: &'graph RefCell<Vec<DepNode<DefId>>>\n+}\n+\n+impl<'graph> Forbid<'graph> {\n+    pub fn new(forbidden: &'graph RefCell<Vec<DepNode<DefId>>>, node: DepNode<DefId>) -> Self {\n+        forbidden.borrow_mut().push(node);\n+        Forbid { forbidden: forbidden }\n+    }\n+}\n+\n+impl<'graph> Drop for Forbid<'graph> {\n+    fn drop(&mut self) {\n+        self.forbidden.borrow_mut().pop();\n+    }\n+}"}]}