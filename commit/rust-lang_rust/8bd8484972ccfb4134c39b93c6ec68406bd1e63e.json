{"sha": "8bd8484972ccfb4134c39b93c6ec68406bd1e63e", "node_id": "C_kwDOAAsO6NoAKDhiZDg0ODQ5NzJjY2ZiNDEzNGMzOWI5M2M2ZWM2ODQwNmJkMWU2M2U", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-08-17T15:21:43Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-11T02:06:59Z"}, "message": "review comments", "tree": {"sha": "5678051f8ca2cb2090c36b571f948fbbe2a894f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5678051f8ca2cb2090c36b571f948fbbe2a894f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bd8484972ccfb4134c39b93c6ec68406bd1e63e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bd8484972ccfb4134c39b93c6ec68406bd1e63e", "html_url": "https://github.com/rust-lang/rust/commit/8bd8484972ccfb4134c39b93c6ec68406bd1e63e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bd8484972ccfb4134c39b93c6ec68406bd1e63e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "243496e1299bc6dddb3824a91f026da34f732199", "url": "https://api.github.com/repos/rust-lang/rust/commits/243496e1299bc6dddb3824a91f026da34f732199", "html_url": "https://github.com/rust-lang/rust/commit/243496e1299bc6dddb3824a91f026da34f732199"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "045d76cac62b8701af2e2b65aa7bcd2daf6d4353", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8bd8484972ccfb4134c39b93c6ec68406bd1e63e/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bd8484972ccfb4134c39b93c6ec68406bd1e63e/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=8bd8484972ccfb4134c39b93c6ec68406bd1e63e", "patch": "@@ -95,10 +95,17 @@ impl<'tcx> LateLintPass<'tcx> for UnusedResults {\n \n         if let hir::ExprKind::Match(await_expr, _arms, hir::MatchSource::AwaitDesugar) = expr.kind\n             && let ty = cx.typeck_results().expr_ty(&await_expr)\n-            && let ty::Opaque(def_id, _) = ty.kind()\n+            && let ty::Opaque(future_def_id, _) = ty.kind()\n             && cx.tcx.ty_is_opaque_future(ty)\n-            && let parent = cx.tcx.parent(*def_id)\n-            && check_must_use_def(cx, parent, expr.span, \"awaited future returned by \", \"\")\n+            // FIXME: This also includes non-async fns that return `impl Future`.\n+            && let async_fn_def_id = cx.tcx.parent(*future_def_id)\n+            && check_must_use_def(\n+                cx,\n+                async_fn_def_id,\n+                expr.span,\n+                \"output of future returned by \",\n+                \"\",\n+            )\n         {\n             // We have a bare `foo().await;` on an opaque type from an async function that was\n             // annotated with `#[must_use]`."}, {"sha": "4be93aa155ad9097f0e35326ae0b2dd013caae87", "filename": "src/test/ui/lint/unused/unused-async.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bd8484972ccfb4134c39b93c6ec68406bd1e63e/src%2Ftest%2Fui%2Flint%2Funused%2Funused-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bd8484972ccfb4134c39b93c6ec68406bd1e63e/src%2Ftest%2Fui%2Flint%2Funused%2Funused-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-async.rs?ref=8bd8484972ccfb4134c39b93c6ec68406bd1e63e", "patch": "@@ -30,10 +30,10 @@ impl Wowee {\n async fn test() {\n     foo(); //~ ERROR unused return value of `foo` that must be used\n     //~^ ERROR unused implementer of `Future` that must be used\n-    foo().await; //~ ERROR unused awaited future returned by `foo` that must be used\n+    foo().await; //~ ERROR unused output of future returned by `foo` that must be used\n     bar(); //~ ERROR unused return value of `bar` that must be used\n     //~^ ERROR unused implementer of `Future` that must be used\n-    bar().await; //~ ERROR unused awaited future returned by `bar` that must be used\n+    bar().await; //~ ERROR unused output of future returned by `bar` that must be used\n     baz(); //~ ERROR unused implementer of `Future` that must be used\n     baz().await; // ok\n }"}, {"sha": "abc49599309ca23633583cc8d6e0422df28e1e3c", "filename": "src/test/ui/lint/unused/unused-async.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bd8484972ccfb4134c39b93c6ec68406bd1e63e/src%2Ftest%2Fui%2Flint%2Funused%2Funused-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bd8484972ccfb4134c39b93c6ec68406bd1e63e/src%2Ftest%2Fui%2Flint%2Funused%2Funused-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-async.stderr?ref=8bd8484972ccfb4134c39b93c6ec68406bd1e63e", "patch": "@@ -17,7 +17,7 @@ error: unused return value of `foo` that must be used\n LL |     foo();\n    |     ^^^^^\n \n-error: unused awaited future returned by `foo` that must be used\n+error: unused output of future returned by `foo` that must be used\n   --> $DIR/unused-async.rs:33:5\n    |\n LL |     foo().await;\n@@ -37,7 +37,7 @@ error: unused return value of `bar` that must be used\n LL |     bar();\n    |     ^^^^^\n \n-error: unused awaited future returned by `bar` that must be used\n+error: unused output of future returned by `bar` that must be used\n   --> $DIR/unused-async.rs:36:5\n    |\n LL |     bar().await;"}]}