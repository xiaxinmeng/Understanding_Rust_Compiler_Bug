{"sha": "454f3ed9029dc407b59b714cb60c00036a253a2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NGYzZWQ5MDI5ZGM0MDdiNTliNzE0Y2I2MGMwMDAzNmEyNTNhMmI=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-12-22T11:33:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-22T11:33:11Z"}, "message": "Update library/std/src/sys/windows/thread_parker.rs\n\nCo-authored-by: Mara Bos <m-ou.se@m-ou.se>", "tree": {"sha": "edc3fabc52baf39f8e2b0a1fbce8e9cedc1df2b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edc3fabc52baf39f8e2b0a1fbce8e9cedc1df2b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/454f3ed9029dc407b59b714cb60c00036a253a2b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf4dl3CRBK7hj4Ov3rIwAAdHIIAE0tkF/BgiPsmW8k8xY/OM6O\n08H3vP5PQXIYfX+7mBLnmVJNJg8YrFbT2TL3cbuRZSB0w40HMGoL4aJmvWBke2gv\ne9dP06hz4MmOMOxUkaO9otUtfdAE65wTyJ0Bdox5FBA711URM8WyR6WiFBGiT+WY\nLnMrwjYGgpm2MMiLOPAfm8Ly2p2f+dr0ervpUylU/6iBHfXqX2RPNBRPI8cRLc9A\n3kd9CXQzTUcVCrO9s7NUB1Vl53tzoT0ib/d5J79oSpUdPdOCCQUHHgLf/jnwXjBP\n5usA6BVkz2sYOMt5j59R9KnHDsWMCWja1TrGZCEmNpYsq1E+NMmZ+TLWNM3dn1E=\n=Ljh3\n-----END PGP SIGNATURE-----\n", "payload": "tree edc3fabc52baf39f8e2b0a1fbce8e9cedc1df2b7\nparent 865e4797df83a702982186bbbd6bc70268cd2664\nauthor Linus F\u00e4rnstrand <faern@faern.net> 1608636791 +0100\ncommitter GitHub <noreply@github.com> 1608636791 +0100\n\nUpdate library/std/src/sys/windows/thread_parker.rs\n\nCo-authored-by: Mara Bos <m-ou.se@m-ou.se>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/454f3ed9029dc407b59b714cb60c00036a253a2b", "html_url": "https://github.com/rust-lang/rust/commit/454f3ed9029dc407b59b714cb60c00036a253a2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/454f3ed9029dc407b59b714cb60c00036a253a2b/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "865e4797df83a702982186bbbd6bc70268cd2664", "url": "https://api.github.com/repos/rust-lang/rust/commits/865e4797df83a702982186bbbd6bc70268cd2664", "html_url": "https://github.com/rust-lang/rust/commit/865e4797df83a702982186bbbd6bc70268cd2664"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9e4c9aa0a512c4fb6c211fa0b50d791eb1dd9b5d", "filename": "library/std/src/sys/windows/thread_parker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/454f3ed9029dc407b59b714cb60c00036a253a2b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fthread_parker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/454f3ed9029dc407b59b714cb60c00036a253a2b/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fthread_parker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fthread_parker.rs?ref=454f3ed9029dc407b59b714cb60c00036a253a2b", "patch": "@@ -113,7 +113,7 @@ impl Parker {\n                 // Wait for something to happen, assuming it's still set to PARKED.\n                 c::WaitOnAddress(self.ptr(), &PARKED as *const _ as c::LPVOID, 1, c::INFINITE);\n                 // Change NOTIFIED=>EMPTY but leave PARKED alone.\n-                if self.state.compare_exchange(NOTIFIED, EMPTY, Acquire, Acquire) == NOTIFIED {\n+                if self.state.compare_exchange(NOTIFIED, EMPTY, Acquire, Acquire).is_ok() {\n                     // Actually woken up by unpark().\n                     return;\n                 } else {"}]}