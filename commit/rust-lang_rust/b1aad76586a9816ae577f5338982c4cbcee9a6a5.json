{"sha": "b1aad76586a9816ae577f5338982c4cbcee9a6a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYWFkNzY1ODZhOTgxNmFlNTc3ZjUzMzg5ODJjNGNiY2VlOWE2YTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-01T18:40:49Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-02T18:31:38Z"}, "message": "Normalize `syntax::edition` imports.", "tree": {"sha": "f7d0d3f7ff03c84fabc7839db13fcce341b67e45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7d0d3f7ff03c84fabc7839db13fcce341b67e45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1aad76586a9816ae577f5338982c4cbcee9a6a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1aad76586a9816ae577f5338982c4cbcee9a6a5", "html_url": "https://github.com/rust-lang/rust/commit/b1aad76586a9816ae577f5338982c4cbcee9a6a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1aad76586a9816ae577f5338982c4cbcee9a6a5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "html_url": "https://github.com/rust-lang/rust/commit/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8"}], "stats": {"total": 62, "additions": 28, "deletions": 34}, "files": [{"sha": "847c61033daf4196b2bf03dadd1719fba5f2000c", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -9,11 +9,11 @@ use crate::middle::stability;\n use crate::session::Session;\n use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc_session::declare_lint;\n+use rustc_span::edition::Edition;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n use syntax::ast;\n use syntax::early_buffered_lints::{ILL_FORMED_ATTRIBUTE_INPUT, META_VARIABLE_MISUSE};\n-use syntax::edition::Edition;\n \n declare_lint! {\n     pub EXCEEDING_BITSHIFTS,"}, {"sha": "c735ba0df3b313d3c7993d4fd96a73b72f125277", "filename": "src/librustc_builtin_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_builtin_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_builtin_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Flib.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -15,9 +15,9 @@ use crate::deriving::*;\n \n use rustc_expand::base::{MacroExpanderFn, Resolver, SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::proc_macro::BangProcMacro;\n+use rustc_span::edition::Edition;\n use rustc_span::symbol::sym;\n use syntax::ast::Ident;\n-use syntax::edition::Edition;\n \n mod asm;\n mod assert;"}, {"sha": "0c982b21eee2c9076a14308a54871d81d4286dc1", "filename": "src/librustc_builtin_macros/standard_library_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -1,9 +1,9 @@\n use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::ExpansionConfig;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::AstPass;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::DUMMY_SP;\n-use syntax::edition::Edition;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::{ast, attr};"}, {"sha": "fe08c85249a2ed0cea8fd3d0651e3ed9bc312199", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -1,11 +1,11 @@\n use crate::expand::{self, AstFragment, Invocation};\n \n use rustc_parse::{self, parser, DirectoryOwnership, MACRO_ARGUMENTS};\n+use rustc_span::edition::Edition;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use syntax::ast::{self, Attribute, Name, NodeId, PatKind};\n use syntax::attr::{self, Deprecation, HasAttrs, Stability};\n-use syntax::edition::Edition;\n use syntax::mut_visit::{self, MutVisitor};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;"}, {"sha": "6e965346d30e9bf7948bbebd0314317059f3568e", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -11,12 +11,12 @@ use crate::mbe::transcribe::transcribe;\n use rustc_feature::Features;\n use rustc_parse::parser::Parser;\n use rustc_parse::Directory;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n use syntax::attr::{self, TransparencyError};\n-use syntax::edition::Edition;\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n use syntax::token::{self, NtTT, Token, TokenKind::*};"}, {"sha": "25ab7650b0ec2e28fd21e04efbc406e19bd68ad6", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -12,13 +12,13 @@ use rustc::session::search_paths::SearchPath;\n use rustc::session::{build_session, Session};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{emitter::HumanReadableErrorType, registry, ColorConfig};\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n use rustc_span::symbol::sym;\n use rustc_target::spec::{MergeFunctions, PanicStrategy, RelroLevel};\n use std::collections::{BTreeMap, BTreeSet};\n use std::iter::FromIterator;\n use std::path::PathBuf;\n use syntax;\n-use syntax::edition::{Edition, DEFAULT_EDITION};\n \n type CfgSpecs = FxHashSet<(String, Option<String>)>;\n "}, {"sha": "055b1f8b366d82ce56ee421db3fd82541d5afe24", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -37,12 +37,12 @@ use rustc::util::nodemap::FxHashSet;\n use rustc_feature::Stability;\n use rustc_feature::{deprecated_attributes, AttributeGate, AttributeTemplate, AttributeType};\n \n+use rustc_span::edition::Edition;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, Span};\n use syntax::ast::{self, Expr};\n use syntax::attr::{self, HasAttrs};\n-use syntax::edition::Edition;\n use syntax::errors::{Applicability, DiagnosticBuilder};\n use syntax::print::pprust::{self, expr_to_string};\n use syntax::ptr::P;"}, {"sha": "f95801d6fb15a6e4a316da9b37db98c5dd7b80b0", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -23,11 +23,11 @@ use std::{cmp, fs};\n use log::{debug, info, log_enabled};\n use proc_macro::bridge::client::ProcMacro;\n use rustc_expand::base::SyntaxExtension;\n+use rustc_span::edition::Edition;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast;\n use syntax::attr;\n-use syntax::edition::Edition;\n use syntax::expand::allocator::{global_allocator_spans, AllocatorKind};\n use syntax::span_fatal;\n "}, {"sha": "40b0ec74a4a33e12df2d6dc931c204d23ad8f42c", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -15,10 +15,10 @@ use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_index::vec::IndexVec;\n use rustc_serialize::opaque::Encoder;\n+use rustc_span::edition::Edition;\n use rustc_span::symbol::Symbol;\n use rustc_span::{self, Span};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n-use syntax::edition::Edition;\n use syntax::{ast, attr};\n \n use std::marker::PhantomData;"}, {"sha": "f2ffd9470ed7601908ae67a145307a6e31329e40", "filename": "src/librustc_parse/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_parse%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_parse%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fconfig.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -11,12 +11,12 @@\n use crate::{parse_in, validate_attr};\n use rustc_errors::Applicability;\n use rustc_feature::Features;\n+use rustc_span::edition::Edition;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{self, AttrItem, Attribute, MetaItem};\n use syntax::attr;\n use syntax::attr::HasAttrs;\n-use syntax::edition::Edition;\n use syntax::feature_gate::{feature_err, get_features};\n use syntax::mut_visit::*;\n use syntax::ptr::P;"}, {"sha": "4c95607410bd7ab0289267d498b9f778bad41c03", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -17,12 +17,12 @@ use rustc_expand::base::{self, Indeterminate, InvocationRes};\n use rustc_expand::compile_declarative_macro;\n use rustc_expand::expand::{AstFragment, AstFragmentKind, Invocation, InvocationKind};\n use rustc_feature::is_builtin_attr_name;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::{self, ExpnData, ExpnId, ExpnKind};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Ident, NodeId};\n use syntax::attr::{self, StabilityLevel};\n-use syntax::edition::Edition;\n use syntax::feature_gate::feature_err;\n use syntax::print::pprust;\n "}, {"sha": "4a65a9f431a44b3920113ab543c9a376bf4fe85a", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -15,8 +15,8 @@ use rustc::session::config::{parse_crate_types_from_list, parse_externs, CrateTy\n use rustc::session::config::{CodegenOptions, DebuggingOptions, ErrorOutputType, Externs};\n use rustc::session::search_paths::SearchPath;\n use rustc_driver;\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n use rustc_target::spec::TargetTriple;\n-use syntax::edition::{Edition, DEFAULT_EDITION};\n \n use crate::core::new_handler;\n use crate::externalfiles::ExternalHtml;"}, {"sha": "e0ed02c11c71a5aba491f6161ac0496e975b4f01", "filename": "src/librustdoc/externalfiles.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fexternalfiles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fexternalfiles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fexternalfiles.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -1,5 +1,5 @@\n use crate::html::markdown::{ErrorCodes, IdMap, Markdown, Playground};\n-use crate::syntax::edition::Edition;\n+use crate::rustc_span::edition::Edition;\n use errors;\n use rustc_feature::UnstableFeatures;\n use std::fs;"}, {"sha": "c5f88f9f7f421d5ed93aaf62fe82a57e68ab6084", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -5,9 +5,9 @@\n //! ```\n //! #![feature(rustc_private)]\n //!\n-//! extern crate syntax;\n+//! extern crate rustc_span;\n //!\n-//! use syntax::edition::Edition;\n+//! use rustc_span::edition::Edition;\n //! use rustdoc::html::markdown::{IdMap, Markdown, ErrorCodes};\n //!\n //! let s = \"My *markdown* _text_\";\n@@ -20,14 +20,14 @@\n #![allow(non_camel_case_types)]\n \n use rustc_data_structures::fx::FxHashMap;\n+use rustc_span::edition::Edition;\n use std::borrow::Cow;\n use std::cell::RefCell;\n use std::collections::VecDeque;\n use std::default::Default;\n use std::fmt::Write;\n use std::ops::Range;\n use std::str;\n-use syntax::edition::Edition;\n \n use crate::html::highlight;\n use crate::html::toc::TocBuilder;"}, {"sha": "48231ce7b73ef9b28694f463b36c1e5fa044a4b6", "filename": "src/librustdoc/html/markdown/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -1,7 +1,7 @@\n use super::plain_summary_line;\n use super::{ErrorCodes, IdMap, Ignore, LangString, Markdown, MarkdownHtml};\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n use std::cell::RefCell;\n-use syntax::edition::{Edition, DEFAULT_EDITION};\n \n #[test]\n fn test_unique_id() {"}, {"sha": "ad059463aa43a07792fb4b9f602e103683c230ca", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -50,13 +50,13 @@ use rustc::middle::stability;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::flock;\n use rustc_feature::UnstableFeatures;\n+use rustc_span::edition::Edition;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::FileName;\n use rustc_span::symbol::{sym, Symbol};\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n use syntax::ast;\n-use syntax::edition::Edition;\n use syntax::print::pprust;\n \n use crate::clean::{self, AttributesExt, Deprecation, GetDefId, SelfTy};"}, {"sha": "69aa248aa8e987f6cfc7486afc7334391d6b21a2", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -4,8 +4,8 @@ use std::path::PathBuf;\n \n use errors;\n use rustc_feature::UnstableFeatures;\n+use rustc_span::edition::Edition;\n use rustc_span::source_map::DUMMY_SP;\n-use syntax::edition::Edition;\n use testing;\n \n use crate::config::{Options, RenderOptions};"}, {"sha": "d7285b9d0bb074585b75d765463ef89775b109ea", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -5,6 +5,7 @@ use rustc::util::common::ErrorReported;\n use rustc_data_structures::sync::Lrc;\n use rustc_feature::UnstableFeatures;\n use rustc_interface::interface;\n+use rustc_span::edition::Edition;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::sym;\n use rustc_span::{BytePos, FileName, Pos, Span, DUMMY_SP};\n@@ -16,7 +17,6 @@ use std::path::PathBuf;\n use std::process::{self, Command, Stdio};\n use std::str;\n use syntax::ast;\n-use syntax::edition::Edition;\n use syntax::with_globals;\n use tempfile::Builder as TempFileBuilder;\n use testing;"}, {"sha": "a96186a95e16b904cb84dfd4ef9228bab5cefeeb", "filename": "src/librustdoc/test/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Ftest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibrustdoc%2Ftest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest%2Ftests.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -1,5 +1,5 @@\n use super::{make_test, TestOptions};\n-use syntax::edition::DEFAULT_EDITION;\n+use rustc_span::edition::DEFAULT_EDITION;\n \n #[test]\n fn make_test_basic() {"}, {"sha": "50712058874c44744a2262658e3c67b8004138c8", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -1,7 +1,6 @@\n use crate::ast::{self, AssocTyConstraint, AssocTyConstraintKind, NodeId};\n use crate::ast::{GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData};\n use crate::attr;\n-use crate::edition::{Edition, ALL_EDITIONS};\n use crate::sess::ParseSess;\n use crate::visit::{self, FnKind, Visitor};\n \n@@ -14,6 +13,7 @@ use rustc_feature::{Feature, Features, State as FeatureState, UnstableFeatures};\n use rustc_feature::{\n     ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES,\n };\n+use rustc_span::edition::{Edition, ALL_EDITIONS};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span, DUMMY_SP};"}, {"sha": "0b0a19517ec1aef1f7fd1b67f4ca8c3c43c6ae25", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -21,7 +21,7 @@ use ast::AttrId;\n pub use errors;\n use rustc_data_structures::sync::Lock;\n use rustc_index::bit_set::GrowableBitSet;\n-use rustc_span::edition::Edition;\n+use rustc_span::edition::{Edition, DEFAULT_EDITION};\n \n #[macro_export]\n macro_rules! unwrap_or {\n@@ -51,19 +51,13 @@ impl Globals {\n     }\n }\n \n-pub fn with_globals<F, R>(edition: Edition, f: F) -> R\n-where\n-    F: FnOnce() -> R,\n-{\n+pub fn with_globals<R>(edition: Edition, f: impl FnOnce() -> R) -> R {\n     let globals = Globals::new(edition);\n     GLOBALS.set(&globals, || rustc_span::GLOBALS.set(&globals.rustc_span_globals, f))\n }\n \n-pub fn with_default_globals<F, R>(f: F) -> R\n-where\n-    F: FnOnce() -> R,\n-{\n-    with_globals(edition::DEFAULT_EDITION, f)\n+pub fn with_default_globals<R>(f: impl FnOnce() -> R) -> R {\n+    with_globals(DEFAULT_EDITION, f)\n }\n \n scoped_tls::scoped_thread_local!(pub static GLOBALS: Globals);\n@@ -96,7 +90,6 @@ pub mod mut_visit;\n pub mod ptr;\n pub mod show_span;\n pub use rustc_session::parse as sess;\n-pub use rustc_span::edition;\n pub mod token;\n pub mod tokenstream;\n pub mod visit;"}, {"sha": "313a303edb2bfb5a48db26355ff3921c7de70c5a", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1aad76586a9816ae577f5338982c4cbcee9a6a5/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=b1aad76586a9816ae577f5338982c4cbcee9a6a5", "patch": "@@ -2,6 +2,7 @@\n #![deny(warnings)]\n \n extern crate env_logger;\n+extern crate rustc_span;\n extern crate syntax;\n \n use std::cell::RefCell;\n@@ -13,7 +14,7 @@ use std::io::Write;\n use std::path::Path;\n use std::path::PathBuf;\n \n-use syntax::edition::DEFAULT_EDITION;\n+use rustc_span::edition::DEFAULT_EDITION;\n \n use rustdoc::html::markdown::{ErrorCodes, IdMap, Markdown, Playground};\n "}]}