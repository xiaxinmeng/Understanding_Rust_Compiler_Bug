{"sha": "863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2M2JiMWY1MTUwNDE5ZGMxNmVkOWM1MTFhN2U3OTBmMGI4YmE3OWM=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-10-24T01:51:38Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-10-24T01:56:23Z"}, "message": "Make `{Default, From, FromIterator, One, Zero}` well-formed\n\nUsing these traits in an object context previously resulted in an RFC\n1214 warning.", "tree": {"sha": "355e4192b19e415abd82dc63fbe46b2d6a4bca28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/355e4192b19e415abd82dc63fbe46b2d6a4bca28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "html_url": "https://github.com/rust-lang/rust/commit/863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "525ab4a4139f32732f222d39f5cc00ad08951910", "url": "https://api.github.com/repos/rust-lang/rust/commits/525ab4a4139f32732f222d39f5cc00ad08951910", "html_url": "https://github.com/rust-lang/rust/commit/525ab4a4139f32732f222d39f5cc00ad08951910"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "b02b2a06b75d5a3091d14ab1b59d7f974a5c7767", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "patch": "@@ -95,7 +95,7 @@ pub trait Into<T>: Sized {\n /// assert_eq!(string, other_string);\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub trait From<T> {\n+pub trait From<T>: Sized {\n     /// Performs the conversion.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn from(T) -> Self;"}, {"sha": "f7fda3d04fd615a6397f9686ab4a053fc94e468c", "filename": "src/libcore/default.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdefault.rs?ref=863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "patch": "@@ -78,6 +78,8 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n+use marker::Sized;\n+\n /// A trait for giving a type a useful default value.\n ///\n /// A struct can derive default implementations of `Default` for basic types using\n@@ -93,7 +95,7 @@\n /// }\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub trait Default {\n+pub trait Default: Sized {\n     /// Returns the \"default value\" for a type.\n     ///\n     /// Default values are often some kind of initial value, identity value, or anything else that"}, {"sha": "fc69472310bca56497da95c5a9847f11d803d00a", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "patch": "@@ -1490,7 +1490,7 @@ impl<'a, I: Iterator + ?Sized> Iterator for &'a mut I {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_on_unimplemented=\"a collection of type `{Self}` cannot be \\\n                           built from an iterator over elements of type `{A}`\"]\n-pub trait FromIterator<A> {\n+pub trait FromIterator<A>: Sized {\n     /// Builds a container with elements from something iterable.\n     ///\n     /// # Examples"}, {"sha": "de56cf902a4fd91d2d1dfb9d9a8163013e3b5127", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/863bb1f5150419dc16ed9c511a7e790f0b8ba79c/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=863bb1f5150419dc16ed9c511a7e790f0b8ba79c", "patch": "@@ -58,7 +58,7 @@ pub mod diy_float;\n #[unstable(feature = \"zero_one\",\n            reason = \"unsure of placement, wants to use associated constants\",\n            issue = \"27739\")]\n-pub trait Zero {\n+pub trait Zero: Sized {\n     /// The \"zero\" (usually, additive identity) for this type.\n     fn zero() -> Self;\n }\n@@ -70,7 +70,7 @@ pub trait Zero {\n #[unstable(feature = \"zero_one\",\n            reason = \"unsure of placement, wants to use associated constants\",\n            issue = \"27739\")]\n-pub trait One {\n+pub trait One: Sized {\n     /// The \"one\" (usually, multiplicative identity) for this type.\n     fn one() -> Self;\n }"}]}