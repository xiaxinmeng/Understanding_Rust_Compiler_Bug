{"sha": "e6b12c8e4f7817d6317ab7b981e440f260a8137e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YjEyYzhlNGY3ODE3ZDYzMTdhYjdiOTgxZTQ0MGYyNjBhODEzN2U=", "commit": {"author": {"name": "ltdk", "email": "usr@ltdk.xyz", "date": "2021-05-09T21:13:22Z"}, "committer": {"name": "ltdk", "email": "usr@ltdk.xyz", "date": "2021-05-09T21:15:54Z"}, "message": "Fix `Step` feature flag, make tidy lint more useful to find things like this", "tree": {"sha": "6fd439731a645607bad0afdcebd4c02de365f4d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fd439731a645607bad0afdcebd4c02de365f4d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6b12c8e4f7817d6317ab7b981e440f260a8137e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b12c8e4f7817d6317ab7b981e440f260a8137e", "html_url": "https://github.com/rust-lang/rust/commit/e6b12c8e4f7817d6317ab7b981e440f260a8137e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6b12c8e4f7817d6317ab7b981e440f260a8137e/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "380bbe8d478e2252b60b79b82f285b9464227f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/380bbe8d478e2252b60b79b82f285b9464227f5c", "html_url": "https://github.com/rust-lang/rust/commit/380bbe8d478e2252b60b79b82f285b9464227f5c"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "5e39e71252f5a1833a5f3e95a08489f560c6377b", "filename": "library/core/src/iter/range.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6b12c8e4f7817d6317ab7b981e440f260a8137e/library%2Fcore%2Fsrc%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6b12c8e4f7817d6317ab7b981e440f260a8137e/library%2Fcore%2Fsrc%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Frange.rs?ref=e6b12c8e4f7817d6317ab7b981e440f260a8137e", "patch": "@@ -106,7 +106,7 @@ pub unsafe trait Step: Clone + PartialOrd + Sized {\n     /// For any `a` and `n`, where no overflow occurs:\n     ///\n     /// * `Step::forward_unchecked(a, n)` is equivalent to `Step::forward(a, n)`\n-    #[unstable(feature = \"unchecked_math\", reason = \"niche optimization path\", issue = \"none\")]\n+    #[unstable(feature = \"step_trait_ext\", reason = \"recently added\", issue = \"42168\")]\n     unsafe fn forward_unchecked(start: Self, count: usize) -> Self {\n         Step::forward(start, count)\n     }\n@@ -178,7 +178,7 @@ pub unsafe trait Step: Clone + PartialOrd + Sized {\n     /// For any `a` and `n`, where no overflow occurs:\n     ///\n     /// * `Step::backward_unchecked(a, n)` is equivalent to `Step::backward(a, n)`\n-    #[unstable(feature = \"unchecked_math\", reason = \"niche optimization path\", issue = \"none\")]\n+    #[unstable(feature = \"step_trait_ext\", reason = \"recently added\", issue = \"42168\")]\n     unsafe fn backward_unchecked(start: Self, count: usize) -> Self {\n         Step::backward(start, count)\n     }"}, {"sha": "a7e700b935e04b2a9df6fdca3b94642a9b18f54e", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e6b12c8e4f7817d6317ab7b981e440f260a8137e/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6b12c8e4f7817d6317ab7b981e440f260a8137e/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=e6b12c8e4f7817d6317ab7b981e440f260a8137e", "patch": "@@ -51,6 +51,14 @@ pub struct Feature {\n     pub has_gate_test: bool,\n     pub tracking_issue: Option<NonZeroU32>,\n }\n+impl Feature {\n+    fn tracking_issue_display(&self) -> impl fmt::Display {\n+        match self.tracking_issue {\n+            None => \"none\".to_string(),\n+            Some(x) => x.to_string(),\n+        }\n+    }\n+}\n \n pub type Features = HashMap<String, Feature>;\n \n@@ -361,10 +369,12 @@ fn get_and_check_lib_features(\n                     if f.tracking_issue != s.tracking_issue && f.level != Status::Stable {\n                         tidy_error!(\n                             bad,\n-                            \"{}:{}: mismatches the `issue` in {}\",\n+                            \"{}:{}: `issue` \\\"{}\\\" mismatches the {} `issue` of \\\"{}\\\"\",\n                             file.display(),\n                             line,\n-                            display\n+                            f.tracking_issue_display(),\n+                            display,\n+                            s.tracking_issue_display(),\n                         );\n                     }\n                 }"}]}