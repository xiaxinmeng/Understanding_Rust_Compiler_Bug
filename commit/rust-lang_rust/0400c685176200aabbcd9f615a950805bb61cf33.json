{"sha": "0400c685176200aabbcd9f615a950805bb61cf33", "node_id": "C_kwDOAAsO6NoAKDA0MDBjNjg1MTc2MjAwYWFiYmNkOWY2MTVhOTUwODA1YmI2MWNmMzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-15T21:44:51Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-15T21:54:57Z"}, "message": "use chars instead of strings where applicable", "tree": {"sha": "4cd2f07ee88942a10010311f0b31edbec4faceab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cd2f07ee88942a10010311f0b31edbec4faceab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0400c685176200aabbcd9f615a950805bb61cf33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0400c685176200aabbcd9f615a950805bb61cf33", "html_url": "https://github.com/rust-lang/rust/commit/0400c685176200aabbcd9f615a950805bb61cf33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0400c685176200aabbcd9f615a950805bb61cf33/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d14db321b043ffc579a7461464c88d7e3f54f83", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d14db321b043ffc579a7461464c88d7e3f54f83", "html_url": "https://github.com/rust-lang/rust/commit/2d14db321b043ffc579a7461464c88d7e3f54f83"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3425e24585cdd0ff51c4fdfcd35dc1224656a9af", "filename": "compiler/rustc_resolve/src/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0400c685176200aabbcd9f615a950805bb61cf33/compiler%2Frustc_resolve%2Fsrc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0400c685176200aabbcd9f615a950805bb61cf33/compiler%2Frustc_resolve%2Fsrc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Frustdoc.rs?ref=0400c685176200aabbcd9f615a950805bb61cf33", "patch": "@@ -344,7 +344,7 @@ fn preprocess_link(link: &str) -> String {\n     let link = link.strip_suffix(\"()\").unwrap_or(link);\n     let link = link.strip_suffix(\"{}\").unwrap_or(link);\n     let link = link.strip_suffix(\"[]\").unwrap_or(link);\n-    let link = if link != \"!\" { link.strip_suffix(\"!\").unwrap_or(link) } else { link };\n+    let link = if link != \"!\" { link.strip_suffix('!').unwrap_or(link) } else { link };\n     strip_generics_from_path(link).unwrap_or_else(|_| link.to_string())\n }\n "}, {"sha": "4b73a53b8d987e44df0b8d99fdff2b80dc7b216c", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0400c685176200aabbcd9f615a950805bb61cf33/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0400c685176200aabbcd9f615a950805bb61cf33/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=0400c685176200aabbcd9f615a950805bb61cf33", "patch": "@@ -361,7 +361,7 @@ pub(crate) fn print_where_clause<'a, 'tcx: 'a>(\n             for _ in 0..padding_amout {\n                 br_with_padding.push_str(\" \");\n             }\n-            let where_preds = where_preds.to_string().replace(\"\\n\", &br_with_padding);\n+            let where_preds = where_preds.to_string().replace('\\n', &br_with_padding);\n \n             if ending == Ending::Newline {\n                 let mut clause = \" \".repeat(indent.saturating_sub(1));\n@@ -1421,12 +1421,12 @@ impl clean::FnDecl {\n             format!(\n                 \"({pad}{args}{close}){arrow}\",\n                 pad = if self.inputs.values.is_empty() { \"\" } else { &full_pad },\n-                args = args.replace(\"\\n\", &full_pad),\n+                args = args.replace('\\n', &full_pad),\n                 close = close_pad,\n                 arrow = arrow\n             )\n         } else {\n-            format!(\"({args}){arrow}\", args = args.replace(\"\\n\", \" \"), arrow = arrow)\n+            format!(\"({args}){arrow}\", args = args.replace('\\n', \" \"), arrow = arrow)\n         };\n \n         write!(f, \"{}\", output)"}]}