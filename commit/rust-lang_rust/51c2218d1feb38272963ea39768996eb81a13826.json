{"sha": "51c2218d1feb38272963ea39768996eb81a13826", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYzIyMThkMWZlYjM4MjcyOTYzZWEzOTc2ODk5NmViODFhMTM4MjY=", "commit": {"author": {"name": "cjkenn", "email": "cjkenn@users.noreply.github.com", "date": "2020-11-18T13:49:46Z"}, "committer": {"name": "cjkenn", "email": "cjkenn@users.noreply.github.com", "date": "2020-11-18T13:49:46Z"}, "message": "move fuel checks to later points in instcombine and const_prop, add opt level flag to test", "tree": {"sha": "29ed1cae945b0a9b3a46a4c3fee240e3ceaae6b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29ed1cae945b0a9b3a46a4c3fee240e3ceaae6b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51c2218d1feb38272963ea39768996eb81a13826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51c2218d1feb38272963ea39768996eb81a13826", "html_url": "https://github.com/rust-lang/rust/commit/51c2218d1feb38272963ea39768996eb81a13826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51c2218d1feb38272963ea39768996eb81a13826/comments", "author": {"login": "cjkenn", "id": 6255842, "node_id": "MDQ6VXNlcjYyNTU4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6255842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjkenn", "html_url": "https://github.com/cjkenn", "followers_url": "https://api.github.com/users/cjkenn/followers", "following_url": "https://api.github.com/users/cjkenn/following{/other_user}", "gists_url": "https://api.github.com/users/cjkenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjkenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjkenn/subscriptions", "organizations_url": "https://api.github.com/users/cjkenn/orgs", "repos_url": "https://api.github.com/users/cjkenn/repos", "events_url": "https://api.github.com/users/cjkenn/events{/privacy}", "received_events_url": "https://api.github.com/users/cjkenn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjkenn", "id": 6255842, "node_id": "MDQ6VXNlcjYyNTU4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6255842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjkenn", "html_url": "https://github.com/cjkenn", "followers_url": "https://api.github.com/users/cjkenn/followers", "following_url": "https://api.github.com/users/cjkenn/following{/other_user}", "gists_url": "https://api.github.com/users/cjkenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjkenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjkenn/subscriptions", "organizations_url": "https://api.github.com/users/cjkenn/orgs", "repos_url": "https://api.github.com/users/cjkenn/repos", "events_url": "https://api.github.com/users/cjkenn/events{/privacy}", "received_events_url": "https://api.github.com/users/cjkenn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4c94241476298936a868b1416f7285ab1e320a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c94241476298936a868b1416f7285ab1e320a7", "html_url": "https://github.com/rust-lang/rust/commit/b4c94241476298936a868b1416f7285ab1e320a7"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "abcf1862fd87366e052a8895ea6199d5adcce75c", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/51c2218d1feb38272963ea39768996eb81a13826/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51c2218d1feb38272963ea39768996eb81a13826/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=51c2218d1feb38272963ea39768996eb81a13826", "patch": "@@ -89,10 +89,6 @@ impl<'tcx> MirPass<'tcx> for ConstProp {\n             return;\n         }\n \n-        if !tcx.consider_optimizing(|| format!(\"ConstantPropagation {:?} {:?}\", def_id, hir_id)) {\n-            return;\n-        }\n-\n         // Check if it's even possible to satisfy the 'where' clauses\n         // for this item.\n         // This branch will never be taken for any normal function.\n@@ -804,7 +800,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             }\n         }\n \n-        trace!(\"attepting to replace {:?} with {:?}\", rval, value);\n+        trace!(\"attempting to replace {:?} with {:?}\", rval, value);\n         if let Err(e) = self.ecx.const_validate_operand(\n             value,\n             vec![],\n@@ -894,6 +890,10 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             return false;\n         }\n \n+        if !self.tcx.consider_optimizing(|| format!(\"ConstantPropagation - OpTy: {:?}\", op)) {\n+            return false;\n+        }\n+\n         match *op {\n             interpret::Operand::Immediate(Immediate::Scalar(ScalarMaybeUninit::Scalar(s))) => {\n                 s.is_bits()"}, {"sha": "3eb2b500d6627324dd0950e91556b780511286d3", "filename": "compiler/rustc_mir/src/transform/instcombine.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/51c2218d1feb38272963ea39768996eb81a13826/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51c2218d1feb38272963ea39768996eb81a13826/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstcombine.rs?ref=51c2218d1feb38272963ea39768996eb81a13826", "patch": "@@ -20,13 +20,6 @@ pub struct InstCombine;\n \n impl<'tcx> MirPass<'tcx> for InstCombine {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        // Check for fuel here before gathering the optimization list. If we're out of fuel,\n-        // we don't want to take the time to pass over the MIR only to find optimizations\n-        // we won't run.\n-        if !tcx.consider_optimizing(|| format!(\"InstCombine {:?} \", body.source.def_id())) {\n-            return;\n-        }\n-\n         // First, find optimization opportunities. This is done in a pre-pass to keep the MIR\n         // read-only so that we can do global analyses on the MIR in the process (e.g.\n         // `Place::ty()`).\n@@ -46,13 +39,21 @@ pub struct InstCombineVisitor<'tcx> {\n     tcx: TyCtxt<'tcx>,\n }\n \n+impl<'tcx> InstCombineVisitor<'tcx> {\n+    fn should_combine(&self, rvalue: &Rvalue<'tcx>, location: Location) -> bool {\n+        self.tcx.consider_optimizing(|| {\n+            format!(\"InstCombine - Rvalue: {:?} Location: {:?}\", rvalue, location)\n+        })\n+    }\n+}\n+\n impl<'tcx> MutVisitor<'tcx> for InstCombineVisitor<'tcx> {\n     fn tcx(&self) -> TyCtxt<'tcx> {\n         self.tcx\n     }\n \n     fn visit_rvalue(&mut self, rvalue: &mut Rvalue<'tcx>, location: Location) {\n-        if self.optimizations.and_stars.remove(&location) {\n+        if self.optimizations.and_stars.remove(&location) && self.should_combine(rvalue, location) {\n             debug!(\"replacing `&*`: {:?}\", rvalue);\n             let new_place = match rvalue {\n                 Rvalue::Ref(_, _, place) => {\n@@ -74,18 +75,24 @@ impl<'tcx> MutVisitor<'tcx> for InstCombineVisitor<'tcx> {\n         }\n \n         if let Some(constant) = self.optimizations.arrays_lengths.remove(&location) {\n-            debug!(\"replacing `Len([_; N])`: {:?}\", rvalue);\n-            *rvalue = Rvalue::Use(Operand::Constant(box constant));\n+            if self.should_combine(rvalue, location) {\n+                debug!(\"replacing `Len([_; N])`: {:?}\", rvalue);\n+                *rvalue = Rvalue::Use(Operand::Constant(box constant));\n+            }\n         }\n \n         if let Some(operand) = self.optimizations.unneeded_equality_comparison.remove(&location) {\n-            debug!(\"replacing {:?} with {:?}\", rvalue, operand);\n-            *rvalue = Rvalue::Use(operand);\n+            if self.should_combine(rvalue, location) {\n+                debug!(\"replacing {:?} with {:?}\", rvalue, operand);\n+                *rvalue = Rvalue::Use(operand);\n+            }\n         }\n \n         if let Some(place) = self.optimizations.unneeded_deref.remove(&location) {\n-            debug!(\"unneeded_deref: replacing {:?} with {:?}\", rvalue, place);\n-            *rvalue = Rvalue::Use(Operand::Copy(place));\n+            if self.should_combine(rvalue, location) {\n+                debug!(\"unneeded_deref: replacing {:?} with {:?}\", rvalue, place);\n+                *rvalue = Rvalue::Use(Operand::Copy(place));\n+            }\n         }\n \n         self.super_rvalue(rvalue, location)"}, {"sha": "c7d49b587443689981c1d229d84315b8faa48925", "filename": "src/test/ui/print-fuel/print-fuel.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51c2218d1feb38272963ea39768996eb81a13826/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51c2218d1feb38272963ea39768996eb81a13826/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs?ref=51c2218d1feb38272963ea39768996eb81a13826", "patch": "@@ -2,7 +2,7 @@\n #![allow(dead_code)]\n \n // (#55495: The --error-format is to sidestep an issue in our test harness)\n-// compile-flags: --error-format human -Z print-fuel=foo\n+// compile-flags: -C opt-level=0 --error-format human -Z print-fuel=foo\n // build-pass (FIXME(62277): could be check-pass?)\n \n struct S1(u8, u16, u8);"}, {"sha": "e8ed746f57f0d3c52186ff0c90bd691526ac6a01", "filename": "src/test/ui/print-fuel/print-fuel.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51c2218d1feb38272963ea39768996eb81a13826/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51c2218d1feb38272963ea39768996eb81a13826/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.stderr?ref=51c2218d1feb38272963ea39768996eb81a13826", "patch": "@@ -1 +1 @@\n-Fuel used by foo: 7\n+Fuel used by foo: 6"}]}