{"sha": "019ab732ce63a117cbb446db1488916c5c0bd2a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOWFiNzMyY2U2M2ExMTdjYmI0NDZkYjE0ODg5MTZjNWMwYmQyYTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-26T04:30:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-26T04:30:24Z"}, "message": "Auto merge of #71434 - pietroalbini:shrink-gha-config, r=Mark-Simulacrum\n\nShrink GHA configuration\n\nThis shrinks our GHA configuration by [taking advantage of two new features GitHub just announced](https://github.blog/2020-04-22-github-actions-community-momentum-enterprise-capabilities-and-developer-improvements/):\n\n* [Default values for `steps[].shell`](https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#defaultsrun)\n* [Being able to include values in a matrix without having to duplicate the job names.](https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-new-combinations)\n\nThe configuration should be functionally equivalent to the previous one.\n\nr? @Mark-Simulacrum", "tree": {"sha": "5387e58a25cf46b831e47cea9b35c07a4e343cc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5387e58a25cf46b831e47cea9b35c07a4e343cc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/019ab732ce63a117cbb446db1488916c5c0bd2a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/019ab732ce63a117cbb446db1488916c5c0bd2a7", "html_url": "https://github.com/rust-lang/rust/commit/019ab732ce63a117cbb446db1488916c5c0bd2a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/019ab732ce63a117cbb446db1488916c5c0bd2a7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b592b37fa31c0d81ca23fea9fe7998c3f0f4bd0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b592b37fa31c0d81ca23fea9fe7998c3f0f4bd0b", "html_url": "https://github.com/rust-lang/rust/commit/b592b37fa31c0d81ca23fea9fe7998c3f0f4bd0b"}, {"sha": "61831ff7f72aa577d17af00800859ef5e4667a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/61831ff7f72aa577d17af00800859ef5e4667a16", "html_url": "https://github.com/rust-lang/rust/commit/61831ff7f72aa577d17af00800859ef5e4667a16"}], "stats": {"total": 271, "additions": 40, "deletions": 231}, "files": [{"sha": "3e00fb0ac51805219d7cb2fc6ec6e09923bdd630", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 3, "deletions": 129, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/019ab732ce63a117cbb446db1488916c5c0bd2a7/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/019ab732ce63a117cbb446db1488916c5c0bd2a7/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=019ab732ce63a117cbb446db1488916c5c0bd2a7", "patch": "@@ -24,6 +24,9 @@ name: CI\n   pull_request:\n     branches:\n       - \"**\"\n+defaults:\n+  run:\n+    shell: \"python src/ci/exec-with-shell.py {0}\"\n jobs:\n   pr:\n     name: PR\n@@ -34,10 +37,6 @@ jobs:\n     if: \"github.event_name == 'pull_request'\"\n     strategy:\n       matrix:\n-        name:\n-          - mingw-check\n-          - x86_64-gnu-llvm-8\n-          - x86_64-gnu-tools\n         include:\n           - name: mingw-check\n             os: ubuntu-latest-xl\n@@ -68,95 +67,74 @@ jobs:\n         run: src/ci/scripts/setup-environment.sh\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install InnoSetup\n         run: src/ci/scripts/install-innosetup.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2 packages\n         run: src/ci/scripts/install-msys2-packages.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n         if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n   try:\n     name: try\n     env:\n@@ -171,9 +149,6 @@ jobs:\n     if: \"github.event_name == 'push' && github.ref == 'refs/heads/try' && github.repository == 'rust-lang-ci/rust'\"\n     strategy:\n       matrix:\n-        name:\n-          - dist-x86_64-linux\n-          - dist-x86_64-linux-alt\n         include:\n           - name: dist-x86_64-linux\n             os: ubuntu-latest-xl\n@@ -201,95 +176,74 @@ jobs:\n         run: src/ci/scripts/setup-environment.sh\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install InnoSetup\n         run: src/ci/scripts/install-innosetup.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2 packages\n         run: src/ci/scripts/install-msys2-packages.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n         if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n   auto:\n     name: auto\n     env:\n@@ -304,64 +258,6 @@ jobs:\n     if: \"github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\"\n     strategy:\n       matrix:\n-        name:\n-          - arm-android\n-          - armhf-gnu\n-          - dist-aarch64-linux\n-          - dist-android\n-          - dist-arm-linux\n-          - dist-armhf-linux\n-          - dist-armv7-linux\n-          - dist-i586-gnu-i586-i686-musl\n-          - dist-i686-freebsd\n-          - dist-i686-linux\n-          - dist-i686-mingw\n-          - dist-i686-msvc\n-          - dist-mips-linux\n-          - dist-mips64-linux\n-          - dist-mips64el-linux\n-          - dist-mipsel-linux\n-          - dist-powerpc-linux\n-          - dist-powerpc64-linux\n-          - dist-powerpc64le-linux\n-          - dist-s390x-linux\n-          - dist-various-1\n-          - dist-various-2\n-          - dist-x86_64-apple\n-          - dist-x86_64-apple-alt\n-          - dist-x86_64-freebsd\n-          - dist-x86_64-linux\n-          - dist-x86_64-linux-alt\n-          - dist-x86_64-mingw\n-          - dist-x86_64-msvc\n-          - dist-x86_64-msvc-alt\n-          - dist-x86_64-musl\n-          - dist-x86_64-netbsd\n-          - i686-gnu\n-          - i686-gnu-nopt\n-          - i686-mingw-1\n-          - i686-mingw-2\n-          - i686-msvc-1\n-          - i686-msvc-2\n-          - mingw-check\n-          - test-various\n-          - wasm32\n-          - x86_64-apple\n-          - x86_64-gnu\n-          - x86_64-gnu-aux\n-          - x86_64-gnu-debug\n-          - x86_64-gnu-distcheck\n-          - x86_64-gnu-full-bootstrap\n-          - x86_64-gnu-llvm-8\n-          - x86_64-gnu-nopt\n-          - x86_64-gnu-tools\n-          - x86_64-mingw-1\n-          - x86_64-mingw-2\n-          - x86_64-msvc-1\n-          - x86_64-msvc-2\n-          - x86_64-msvc-aux\n-          - x86_64-msvc-cargo\n-          - x86_64-msvc-tools\n         include:\n           - name: arm-android\n             os: ubuntu-latest-xl\n@@ -631,95 +527,74 @@ jobs:\n         run: src/ci/scripts/setup-environment.sh\n         env:\n           EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install InnoSetup\n         run: src/ci/scripts/install-innosetup.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MSYS2 packages\n         run: src/ci/scripts/install-msys2-packages.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n         env:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n         if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n   master:\n     name: master\n     runs-on: ubuntu-latest\n@@ -741,7 +616,6 @@ jobs:\n         run: src/ci/publish_toolstate.sh\n         env:\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n-        shell: \"python src/ci/exec-with-shell.py {0}\"\n         if: success() && !env.SKIP_JOB\n   try-success:\n     needs:"}, {"sha": "74581232af7cde87751455b0d2991b517fd0554a", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 37, "deletions": 102, "changes": 139, "blob_url": "https://github.com/rust-lang/rust/blob/019ab732ce63a117cbb446db1488916c5c0bd2a7/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/019ab732ce63a117cbb446db1488916c5c0bd2a7/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=019ab732ce63a117cbb446db1488916c5c0bd2a7", "patch": "@@ -70,21 +70,6 @@ x--expand-yaml-anchors--remove:\n   - &step\n     if: success() && !env.SKIP_JOB\n \n-  - &step-run\n-    <<: *step\n-    # While on Linux and macOS builders it just forwards the arguments to the\n-    # system bash, this wrapper allows switching from the host's bash.exe to\n-    # the one we install along with MSYS2 mid-build on Windows.\n-    #\n-    # Once the step to install MSYS2 is executed, the CI_OVERRIDE_SHELL\n-    # environment variable is set pointing to our MSYS2's bash.exe. From that\n-    # moment the host's bash.exe will not be called anymore.\n-    #\n-    # This is needed because we can't launch our own bash.exe from the host\n-    # bash.exe, as that would load two different cygwin1.dll in memory, causing\n-    # \"cygwin heap mismatch\" errors.\n-    shell: python src/ci/exec-with-shell.py {0}\n-\n   - &base-ci-job\n     timeout-minutes: 600\n     runs-on: \"${{ matrix.os }}\"\n@@ -114,67 +99,67 @@ x--expand-yaml-anchors--remove:\n           # are passed to the `setup-environment.sh` script encoded in JSON,\n           # which then uses log commands to actually set them.\n           EXTRA_VARIABLES: ${{ toJson(matrix.env) }}\n-        <<: *step-run\n+        <<: *step\n \n       - name: decide whether to skip this job\n         run: src/ci/scripts/should-skip-this.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: collect CPU statistics\n         run: src/ci/scripts/collect-cpu-stats.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: show the current environment\n         run: src/ci/scripts/dump-environment.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install awscli\n         run: src/ci/scripts/install-awscli.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install sccache\n         run: src/ci/scripts/install-sccache.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install clang\n         run: src/ci/scripts/install-clang.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install InnoSetup\n         run: src/ci/scripts/install-innosetup.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install MSYS2\n         run: src/ci/scripts/install-msys2.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install MSYS2 packages\n         run: src/ci/scripts/install-msys2-packages.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install MinGW\n         run: src/ci/scripts/install-mingw.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: install ninja\n         run: src/ci/scripts/install-ninja.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: enable ipv6 on Docker\n         run: src/ci/scripts/enable-docker-ipv6.sh\n-        <<: *step-run\n+        <<: *step\n \n       # Disable automatic line ending conversion (again). On Windows, when we're\n       # installing dependencies, something switches the git configuration directory or\n@@ -183,23 +168,23 @@ x--expand-yaml-anchors--remove:\n       # appropriate line endings.\n       - name: disable git crlf conversion\n         run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: checkout submodules\n         run: src/ci/scripts/checkout-submodules.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: ensure line endings are correct\n         run: src/ci/scripts/verify-line-endings.sh\n-        <<: *step-run\n+        <<: *step\n \n       - name: run the build\n         run: src/ci/scripts/run-build-from-ci.sh\n         env:\n           AWS_ACCESS_KEY_ID: ${{ env.CACHES_AWS_ACCESS_KEY_ID }}\n           AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\n           TOOLSTATE_REPO_ACCESS_TOKEN: ${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\n-        <<: *step-run\n+        <<: *step\n \n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n@@ -212,7 +197,7 @@ x--expand-yaml-anchors--remove:\n         # deploying artifacts from a dist builder if the variables are misconfigured,\n         # erroring about invalid credentials instead.\n         if: success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\n-        <<: *step-run\n+        <<: *step\n \n   # These snippets are used by the try-success, try-failure, auto-success and auto-failure jobs.\n   # Check out their documentation for more information on why they're needed.\n@@ -248,6 +233,21 @@ on:\n     branches:\n       - \"**\"\n \n+defaults:\n+  run:\n+    # While on Linux and macOS builders it just forwards the arguments to the\n+    # system bash, this wrapper allows switching from the host's bash.exe to\n+    # the one we install along with MSYS2 mid-build on Windows.\n+    #\n+    # Once the step to install MSYS2 is executed, the CI_OVERRIDE_SHELL\n+    # environment variable is set pointing to our MSYS2's bash.exe. From that\n+    # moment the host's bash.exe will not be called anymore.\n+    #\n+    # This is needed because we can't launch our own bash.exe from the host\n+    # bash.exe, as that would load two different cygwin1.dll in memory, causing\n+    # \"cygwin heap mismatch\" errors.\n+    shell: python src/ci/exec-with-shell.py {0}\n+\n jobs:\n   pr:\n     <<: *base-ci-job\n@@ -257,10 +257,6 @@ jobs:\n     if: github.event_name == 'pull_request'\n     strategy:\n       matrix:\n-        name:\n-          - mingw-check\n-          - x86_64-gnu-llvm-8\n-          - x86_64-gnu-tools\n         include:\n           - name: mingw-check\n             <<: *job-linux-xl\n@@ -281,9 +277,6 @@ jobs:\n     if: github.event_name == 'push' && github.ref == 'refs/heads/try' && github.repository == 'rust-lang-ci/rust'\n     strategy:\n       matrix:\n-        name:\n-          - dist-x86_64-linux\n-          - dist-x86_64-linux-alt\n         include:\n           - name: dist-x86_64-linux\n             <<: *job-linux-xl\n@@ -301,64 +294,6 @@ jobs:\n     if: github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\n     strategy:\n       matrix:\n-        name:\n-          - arm-android\n-          - armhf-gnu\n-          - dist-aarch64-linux\n-          - dist-android\n-          - dist-arm-linux\n-          - dist-armhf-linux\n-          - dist-armv7-linux\n-          - dist-i586-gnu-i586-i686-musl\n-          - dist-i686-freebsd\n-          - dist-i686-linux\n-          - dist-i686-mingw\n-          - dist-i686-msvc\n-          - dist-mips-linux\n-          - dist-mips64-linux\n-          - dist-mips64el-linux\n-          - dist-mipsel-linux\n-          - dist-powerpc-linux\n-          - dist-powerpc64-linux\n-          - dist-powerpc64le-linux\n-          - dist-s390x-linux\n-          - dist-various-1\n-          - dist-various-2\n-          - dist-x86_64-apple\n-          - dist-x86_64-apple-alt\n-          - dist-x86_64-freebsd\n-          - dist-x86_64-linux\n-          - dist-x86_64-linux-alt\n-          - dist-x86_64-mingw\n-          - dist-x86_64-msvc\n-          - dist-x86_64-msvc-alt\n-          - dist-x86_64-musl\n-          - dist-x86_64-netbsd\n-          - i686-gnu\n-          - i686-gnu-nopt\n-          - i686-mingw-1\n-          - i686-mingw-2\n-          - i686-msvc-1\n-          - i686-msvc-2\n-          - mingw-check\n-          - test-various\n-          - wasm32\n-          - x86_64-apple\n-          - x86_64-gnu\n-          - x86_64-gnu-aux\n-          - x86_64-gnu-debug\n-          - x86_64-gnu-distcheck\n-          - x86_64-gnu-full-bootstrap\n-          - x86_64-gnu-llvm-8\n-          - x86_64-gnu-nopt\n-          - x86_64-gnu-tools\n-          - x86_64-mingw-1\n-          - x86_64-mingw-2\n-          - x86_64-msvc-1\n-          - x86_64-msvc-2\n-          - x86_64-msvc-aux\n-          - x86_64-msvc-cargo\n-          - x86_64-msvc-tools\n         include:\n           #############################\n           #   Linux/Docker builders   #\n@@ -687,7 +622,7 @@ jobs:\n         run: src/ci/publish_toolstate.sh\n         env:\n           TOOLSTATE_REPO_ACCESS_TOKEN: ${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\n-        <<: *step-run\n+        <<: *step\n \n   # These jobs don't actually test anything, but they're used to tell bors the\n   # build completed, as there is no practical way to detect when a workflow is"}]}