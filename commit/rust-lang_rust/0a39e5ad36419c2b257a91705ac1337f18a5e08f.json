{"sha": "0a39e5ad36419c2b257a91705ac1337f18a5e08f", "node_id": "C_kwDOAAsO6NoAKDBhMzllNWFkMzY0MTljMmIyNTdhOTE3MDVhYzEzMzdmMThhNWUwOGY", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-05-11T04:56:51Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-05-11T04:56:51Z"}, "message": "Fix incorrect mentions of `OwnedFd` and `BorrowedFd` in Windows docs.", "tree": {"sha": "374c4477ae087546200a507f883a9b5331689d11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/374c4477ae087546200a507f883a9b5331689d11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a39e5ad36419c2b257a91705ac1337f18a5e08f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a39e5ad36419c2b257a91705ac1337f18a5e08f", "html_url": "https://github.com/rust-lang/rust/commit/0a39e5ad36419c2b257a91705ac1337f18a5e08f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a39e5ad36419c2b257a91705ac1337f18a5e08f/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bb7fdb8e16788367ea4a3403ac405b8bc614cc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bb7fdb8e16788367ea4a3403ac405b8bc614cc6", "html_url": "https://github.com/rust-lang/rust/commit/2bb7fdb8e16788367ea4a3403ac405b8bc614cc6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ef2ef10e05fea55e5093c900e5175d01f4a0f6e4", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a39e5ad36419c2b257a91705ac1337f18a5e08f/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a39e5ad36419c2b257a91705ac1337f18a5e08f/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=0a39e5ad36419c2b257a91705ac1337f18a5e08f", "patch": "@@ -22,7 +22,7 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// so it can be used in FFI in places where a handle is passed as an argument,\n /// it is not captured or consumed.\n ///\n-/// Note that it *may* have the value `-1`, which in `BorrowedFd` always\n+/// Note that it *may* have the value `-1`, which in `BorrowedHandle` always\n /// represents the current process handle, and not `INVALID_HANDLE_VALUE`,\n /// despite the two having the same value. See [here] for the full story.\n ///\n@@ -46,7 +46,7 @@ pub struct BorrowedHandle<'handle> {\n ///\n /// This closes the handle on drop.\n ///\n-/// Note that it *may* have the value `-1`, which in `OwnedFd` always\n+/// Note that it *may* have the value `-1`, which in `OwnedHandle` always\n /// represents the current process handle, and not `INVALID_HANDLE_VALUE`,\n /// despite the two having the same value. See [here] for the full story.\n ///\n@@ -77,7 +77,7 @@ pub struct OwnedHandle {\n /// `NULL`. This ensures that such FFI calls cannot start using the handle without\n /// checking for `NULL` first.\n ///\n-/// This type may hold any handle value that [`OwnedFd`] may hold, except `NULL`. It may\n+/// This type may hold any handle value that [`OwnedHandle`] may hold, except `NULL`. It may\n /// hold `-1`, even though `-1` has the same value as `INVALID_HANDLE_VALUE`, because in\n /// `HandleOrNull`, `-1` is interpreted to mean the current process handle.\n ///\n@@ -97,7 +97,7 @@ pub struct HandleOrNull(OwnedHandle);\n /// `INVALID_HANDLE_VALUE`. This ensures that such FFI calls cannot start using the handle without\n /// checking for `INVALID_HANDLE_VALUE` first.\n ///\n-/// This type may hold any handle value that [`OwnedFd`] may hold, except `-1`. It must not\n+/// This type may hold any handle value that [`OwnedHandle`] may hold, except `-1`. It must not\n /// hold `-1`, because `-1` in `HandleOrInvalid` is interpreted to mean `INVALID_HANDLE_VALUE`.\n ///\n /// This type may hold `NULL`, because APIs that use `INVALID_HANDLE_VALUE` as their sentry value"}]}