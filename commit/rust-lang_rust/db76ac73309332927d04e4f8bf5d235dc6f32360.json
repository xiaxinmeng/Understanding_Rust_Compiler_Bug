{"sha": "db76ac73309332927d04e4f8bf5d235dc6f32360", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNzZhYzczMzA5MzMyOTI3ZDA0ZTRmOGJmNWQyMzVkYzZmMzIzNjA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-09-17T06:17:39Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-10-02T15:57:48Z"}, "message": "std: Add AsRef/AsMut impls to Box/Rc/Arc\n\nThese common traits were left off originally by accident from these smart\npointers, and a past attempt (#26008) to add them was later reverted (#26160)\ndue to unexpected breakge (#26096) occurring. The specific breakage in worry is\nthe meaning of this return value changed:\n\n    let a: Box<Option<T>> = ...;\n    a.as_ref()\n\nCurrently this returns `Option<&T>` but after this change it will return\n`&Option<T>` because the `AsRef::as_ref` method shares the same name as\n`Option::as_ref`. A [crater report][crater] of this change, however, has shown\nthat the fallout of this change is quite minimal. These trait implementations\nare \"the right impls to add\" to these smart pointers and would enable various\ngeneralizations such as those in #27197.\n\n[crater]: https://gist.github.com/anonymous/0ba4c3512b07641c0f99\n\nThis commit is a breaking change for the above reasons mentioned, and the\nmitigation strategies look like any of:\n\n    Option::as_ref(&a)\n    a.as_ref().as_ref()\n    (*a).as_ref()", "tree": {"sha": "5af4d5f7ad60c9c8926c16966f9e4b9ae4b0d3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5af4d5f7ad60c9c8926c16966f9e4b9ae4b0d3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db76ac73309332927d04e4f8bf5d235dc6f32360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db76ac73309332927d04e4f8bf5d235dc6f32360", "html_url": "https://github.com/rust-lang/rust/commit/db76ac73309332927d04e4f8bf5d235dc6f32360", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db76ac73309332927d04e4f8bf5d235dc6f32360/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9d9ca1a025a944c552c027129cec984ffeeb41c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9d9ca1a025a944c552c027129cec984ffeeb41c", "html_url": "https://github.com/rust-lang/rust/commit/d9d9ca1a025a944c552c027129cec984ffeeb41c"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "f66f1f13dcb238195b870da826bcf169a3e52713", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db76ac73309332927d04e4f8bf5d235dc6f32360/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db76ac73309332927d04e4f8bf5d235dc6f32360/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=db76ac73309332927d04e4f8bf5d235dc6f32360", "patch": "@@ -1148,3 +1148,8 @@ impl<T: ?Sized> borrow::Borrow<T> for Arc<T> {\n         &**self\n     }\n }\n+\n+#[stable(since = \"1.5.0\", feature = \"smart_ptr_as_ref\")]\n+impl<T: ?Sized> AsRef<T> for Arc<T> {\n+    fn as_ref(&self) -> &T { &**self }\n+}"}, {"sha": "629adf4649d38c8147650d97e58ab1a6959c7cf0", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db76ac73309332927d04e4f8bf5d235dc6f32360/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db76ac73309332927d04e4f8bf5d235dc6f32360/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=db76ac73309332927d04e4f8bf5d235dc6f32360", "patch": "@@ -594,3 +594,13 @@ impl<T: ?Sized> borrow::BorrowMut<T> for Box<T> {\n         &mut **self\n     }\n }\n+\n+#[stable(since = \"1.5.0\", feature = \"smart_ptr_as_ref\")]\n+impl<T: ?Sized> AsRef<T> for Box<T> {\n+    fn as_ref(&self) -> &T { &**self }\n+}\n+\n+#[stable(since = \"1.5.0\", feature = \"smart_ptr_as_ref\")]\n+impl<T: ?Sized> AsMut<T> for Box<T> {\n+    fn as_mut(&mut self) -> &mut T { &mut **self }\n+}"}, {"sha": "2f0bf1281b344bd9d93cb4c1eb2ebd84910fda39", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db76ac73309332927d04e4f8bf5d235dc6f32360/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db76ac73309332927d04e4f8bf5d235dc6f32360/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=db76ac73309332927d04e4f8bf5d235dc6f32360", "patch": "@@ -1117,3 +1117,8 @@ impl<T: ?Sized> borrow::Borrow<T> for Rc<T> {\n         &**self\n     }\n }\n+\n+#[stable(since = \"1.5.0\", feature = \"smart_ptr_as_ref\")]\n+impl<T: ?Sized> AsRef<T> for Rc<T> {\n+    fn as_ref(&self) -> &T { &**self }\n+}"}]}