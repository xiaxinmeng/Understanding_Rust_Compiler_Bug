{"sha": "2799aec6ab4ae35f1a2064f941a9f2a270953b63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OTlhZWM2YWI0YWUzNWYxYTIwNjRmOTQxYTlmMmEyNzA5NTNiNjM=", "commit": {"author": {"name": "Flying-Toast", "email": "38232168+Flying-Toast@users.noreply.github.com", "date": "2020-09-09T02:37:18Z"}, "committer": {"name": "Flying-Toast", "email": "38232168+Flying-Toast@users.noreply.github.com", "date": "2020-09-09T02:37:18Z"}, "message": "Capitalize safety comments", "tree": {"sha": "f6cb6109703f22c96a20d490270aa84cac6ac402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6cb6109703f22c96a20d490270aa84cac6ac402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2799aec6ab4ae35f1a2064f941a9f2a270953b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2799aec6ab4ae35f1a2064f941a9f2a270953b63", "html_url": "https://github.com/rust-lang/rust/commit/2799aec6ab4ae35f1a2064f941a9f2a270953b63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2799aec6ab4ae35f1a2064f941a9f2a270953b63/comments", "author": {"login": "Flying-Toast", "id": 38232168, "node_id": "MDQ6VXNlcjM4MjMyMTY4", "avatar_url": "https://avatars.githubusercontent.com/u/38232168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flying-Toast", "html_url": "https://github.com/Flying-Toast", "followers_url": "https://api.github.com/users/Flying-Toast/followers", "following_url": "https://api.github.com/users/Flying-Toast/following{/other_user}", "gists_url": "https://api.github.com/users/Flying-Toast/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flying-Toast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flying-Toast/subscriptions", "organizations_url": "https://api.github.com/users/Flying-Toast/orgs", "repos_url": "https://api.github.com/users/Flying-Toast/repos", "events_url": "https://api.github.com/users/Flying-Toast/events{/privacy}", "received_events_url": "https://api.github.com/users/Flying-Toast/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Flying-Toast", "id": 38232168, "node_id": "MDQ6VXNlcjM4MjMyMTY4", "avatar_url": "https://avatars.githubusercontent.com/u/38232168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flying-Toast", "html_url": "https://github.com/Flying-Toast", "followers_url": "https://api.github.com/users/Flying-Toast/followers", "following_url": "https://api.github.com/users/Flying-Toast/following{/other_user}", "gists_url": "https://api.github.com/users/Flying-Toast/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flying-Toast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flying-Toast/subscriptions", "organizations_url": "https://api.github.com/users/Flying-Toast/orgs", "repos_url": "https://api.github.com/users/Flying-Toast/repos", "events_url": "https://api.github.com/users/Flying-Toast/events{/privacy}", "received_events_url": "https://api.github.com/users/Flying-Toast/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66789d572ab3d950bc187d3bca3bc0042023358", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66789d572ab3d950bc187d3bca3bc0042023358", "html_url": "https://github.com/rust-lang/rust/commit/c66789d572ab3d950bc187d3bca3bc0042023358"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a780d2386a63c20674aefb2a94202093da0c8032", "filename": "compiler/rustc_data_structures/src/temp_dir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2799aec6ab4ae35f1a2064f941a9f2a270953b63/compiler%2Frustc_data_structures%2Fsrc%2Ftemp_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2799aec6ab4ae35f1a2064f941a9f2a270953b63/compiler%2Frustc_data_structures%2Fsrc%2Ftemp_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ftemp_dir.rs?ref=2799aec6ab4ae35f1a2064f941a9f2a270953b63", "patch": "@@ -12,7 +12,7 @@ pub struct MaybeTempDir {\n \n impl Drop for MaybeTempDir {\n     fn drop(&mut self) {\n-        // Safety: We are in the destructor, and no further access will\n+        // SAFETY: We are in the destructor, and no further access will\n         // occur.\n         let dir = unsafe { ManuallyDrop::take(&mut self.dir) };\n         if self.keep {"}, {"sha": "341c6816197c7bf7161e228c76283471ba126228", "filename": "library/alloc/src/alloc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2799aec6ab4ae35f1a2064f941a9f2a270953b63/library%2Falloc%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2799aec6ab4ae35f1a2064f941a9f2a270953b63/library%2Falloc%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Falloc.rs?ref=2799aec6ab4ae35f1a2064f941a9f2a270953b63", "patch": "@@ -157,7 +157,7 @@ impl Global {\n         }\n     }\n \n-    // Safety: Same as `AllocRef::grow`\n+    // SAFETY: Same as `AllocRef::grow`\n     #[inline]\n     unsafe fn grow_impl(\n         &mut self,"}, {"sha": "172b25b9d17f88a69cff87007a62914c32943d1a", "filename": "library/alloc/src/collections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2799aec6ab4ae35f1a2064f941a9f2a270953b63/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2799aec6ab4ae35f1a2064f941a9f2a270953b63/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque.rs?ref=2799aec6ab4ae35f1a2064f941a9f2a270953b63", "patch": "@@ -2392,7 +2392,7 @@ impl<T> VecDeque<T> {\n         }\n     }\n \n-    // Safety: the following two methods require that the rotation amount\n+    // SAFETY: the following two methods require that the rotation amount\n     // be less than half the length of the deque.\n     //\n     // `wrap_copy` requires that `min(x, cap() - x) + copy_len <= cap()`,"}, {"sha": "d098bf1e688125ea8d7cfade86f3c0dfbaee68e7", "filename": "src/test/ui/generator/static-generators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2799aec6ab4ae35f1a2064f941a9f2a270953b63/src%2Ftest%2Fui%2Fgenerator%2Fstatic-generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2799aec6ab4ae35f1a2064f941a9f2a270953b63/src%2Ftest%2Fui%2Fgenerator%2Fstatic-generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fstatic-generators.rs?ref=2799aec6ab4ae35f1a2064f941a9f2a270953b63", "patch": "@@ -12,7 +12,7 @@ fn main() {\n         yield;\n         assert_eq!(b as *const _, &a as *const _);\n     };\n-    // Safety: We shadow the original generator variable so have no safe API to\n+    // SAFETY: We shadow the original generator variable so have no safe API to\n     // move it after this point.\n     let mut generator = unsafe { Pin::new_unchecked(&mut generator) };\n     assert_eq!(generator.as_mut().resume(()), GeneratorState::Yielded(()));"}]}