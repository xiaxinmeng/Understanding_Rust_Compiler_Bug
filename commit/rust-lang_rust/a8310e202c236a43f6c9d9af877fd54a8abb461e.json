{"sha": "a8310e202c236a43f6c9d9af877fd54a8abb461e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MzEwZTIwMmMyMzZhNDNmNmM5ZDlhZjg3N2ZkNTRhOGFiYjQ2MWU=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-10T09:02:19Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-10T09:02:33Z"}, "message": "add associated type bounds test", "tree": {"sha": "b42db01950cf35062d32824b14d178286d9e8a1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b42db01950cf35062d32824b14d178286d9e8a1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8310e202c236a43f6c9d9af877fd54a8abb461e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8310e202c236a43f6c9d9af877fd54a8abb461e", "html_url": "https://github.com/rust-lang/rust/commit/a8310e202c236a43f6c9d9af877fd54a8abb461e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8310e202c236a43f6c9d9af877fd54a8abb461e/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd78188185de99645178c75036415cbda55d553c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd78188185de99645178c75036415cbda55d553c", "html_url": "https://github.com/rust-lang/rust/commit/dd78188185de99645178c75036415cbda55d553c"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "8ccbe5dee0e443795de5fc2a3d97f44e348b967a", "filename": "src/test/ui/const-generics/associated-type-bound-fail.full.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.full.stderr?ref=a8310e202c236a43f6c9d9af877fd54a8abb461e", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the trait bound `u16: Bar<N>` is not satisfied\n+  --> $DIR/associated-type-bound-fail.rs:14:5\n+   |\n+LL |     type Assoc: Bar<N>;\n+   |                 ------ required by this bound in `Foo::Assoc`\n+...\n+LL |     type Assoc = u16;\n+   |     ^^^^^^^^^^^^^^^^^ the trait `Bar<N>` is not implemented for `u16`\n+   |\n+   = help: the following implementations were found:\n+             <u16 as Bar<3_usize>>\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "8ccbe5dee0e443795de5fc2a3d97f44e348b967a", "filename": "src/test/ui/const-generics/associated-type-bound-fail.min.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.min.stderr?ref=a8310e202c236a43f6c9d9af877fd54a8abb461e", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the trait bound `u16: Bar<N>` is not satisfied\n+  --> $DIR/associated-type-bound-fail.rs:14:5\n+   |\n+LL |     type Assoc: Bar<N>;\n+   |                 ------ required by this bound in `Foo::Assoc`\n+...\n+LL |     type Assoc = u16;\n+   |     ^^^^^^^^^^^^^^^^^ the trait `Bar<N>` is not implemented for `u16`\n+   |\n+   = help: the following implementations were found:\n+             <u16 as Bar<3_usize>>\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "3440b1356c2424418ce914dbbf8b24f1f095d51e", "filename": "src/test/ui/const-generics/associated-type-bound-fail.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound-fail.rs?ref=a8310e202c236a43f6c9d9af877fd54a8abb461e", "patch": "@@ -0,0 +1,17 @@\n+// revisions: full min\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+\n+trait Bar<const N: usize> {}\n+\n+trait Foo<const N: usize> {\n+    type Assoc: Bar<N>;\n+}\n+\n+impl Bar<3> for u16 {}\n+impl<const N: usize> Foo<N> for i16 {\n+    type Assoc = u16; //~ ERROR the trait bound `u16: Bar<N>`\n+}\n+\n+fn main() {}"}, {"sha": "374a49194b1786189fd333c53eff9e55bfa9efcd", "filename": "src/test/ui/const-generics/associated-type-bound.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8310e202c236a43f6c9d9af877fd54a8abb461e/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fassociated-type-bound.rs?ref=a8310e202c236a43f6c9d9af877fd54a8abb461e", "patch": "@@ -0,0 +1,24 @@\n+// run-pass\n+// revisions: full min\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+\n+trait Bar<const N: usize> {}\n+\n+trait Foo<const N: usize> {\n+    type Assoc: Bar<N>;\n+}\n+\n+impl<const N: usize> Bar<N> for u8 {}\n+impl Bar<3> for u16 {}\n+\n+impl<const N: usize> Foo<N> for i8 {\n+    type Assoc = u8;\n+}\n+\n+impl Foo<3> for i16 {\n+    type Assoc = u16;\n+}\n+\n+fn main() {}"}]}