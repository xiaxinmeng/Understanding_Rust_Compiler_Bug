{"sha": "e4938aabbbf0f7c8e248611c3c7251b7af24e7b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0OTM4YWFiYmJmMGY3YzhlMjQ4NjExYzNjNzI1MWI3YWYyNGU3Yjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-30T02:07:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-30T02:07:55Z"}, "message": "auto merge of #10149 : chris-morgan/rust/2013-10-29-vim-updates, r=erickt\n\n- Syntax updates for the regular prelude changes.\r\n- Fix an issue with the indentation of the second line of wrapped function arguments.", "tree": {"sha": "fad9e0dec40bfae38e1aff7aa950205dfe287dee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fad9e0dec40bfae38e1aff7aa950205dfe287dee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7", "html_url": "https://github.com/rust-lang/rust/commit/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13e5ce337f96241acf941316062d12e12e5f082b", "url": "https://api.github.com/repos/rust-lang/rust/commits/13e5ce337f96241acf941316062d12e12e5f082b", "html_url": "https://github.com/rust-lang/rust/commit/13e5ce337f96241acf941316062d12e12e5f082b"}, {"sha": "1ad8dbe42e2c9d5aa7e8fda39794cc84ec91972f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad8dbe42e2c9d5aa7e8fda39794cc84ec91972f", "html_url": "https://github.com/rust-lang/rust/commit/1ad8dbe42e2c9d5aa7e8fda39794cc84ec91972f"}], "stats": {"total": 61, "additions": 37, "deletions": 24}, "files": [{"sha": "1f08c5190214f68c711c561800b15384de4d0ef0", "filename": "src/etc/vim/indent/rust.vim", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7/src%2Fetc%2Fvim%2Findent%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7/src%2Fetc%2Fvim%2Findent%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Findent%2Frust.vim?ref=e4938aabbbf0f7c8e248611c3c7251b7af24e7b7", "patch": "@@ -1,7 +1,7 @@\n \" Vim indent file\n \" Language:         Rust\n \" Author:           Chris Morgan <me@chrismorgan.info>\n-\" Last Change:      2013 Jul 10\n+\" Last Change:      2013 Oct 29\n \n \" Only load this indent file when no other was loaded.\n if exists(\"b:did_indent\")\n@@ -104,8 +104,23 @@ function GetRustIndent(lnum)\n \tlet prevline = s:get_line_trimmed(prevnonblank(a:lnum - 1))\n \tif prevline[len(prevline) - 1] == \",\"\n \t\t\t\t\\ && s:get_line_trimmed(a:lnum) !~ \"^\\\\s*[\\\\[\\\\]{}]\"\n+\t\t\t\t\\ && prevline !~ \"^\\\\s*fn\\\\s\"\n \t\t\" Oh ho! The previous line ended in a comma! I bet cindent will try to\n-\t\t\" take this too far... For now, let's use the previous line's indent\n+\t\t\" take this too far... For now, let's normally use the previous line's\n+\t\t\" indent.\n+\n+\t\t\" One case where this doesn't work out is where *this* line contains\n+\t\t\" square or curly brackets; then we normally *do* want to be indenting\n+\t\t\" further.\n+\t\t\"\n+\t\t\" Another case where we don't want to is one like a function\n+\t\t\" definition with arguments spread over multiple lines:\n+\t\t\"\n+\t\t\" fn foo(baz: Baz,\n+\t\t\"        baz: Baz) // <-- cindent gets this right by itself\n+\t\t\"\n+\t\t\" There are probably other cases where we don't want to do this as\n+\t\t\" well. Add them as needed.\n \t\treturn GetRustIndent(a:lnum - 1)\n \tendif\n "}, {"sha": "a0a239284ceb716c04e5609cbdcf9aa15039c99d", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/e4938aabbbf0f7c8e248611c3c7251b7af24e7b7/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=e4938aabbbf0f7c8e248611c3c7251b7af24e7b7", "patch": "@@ -3,7 +3,7 @@\n \" Maintainer:   Patrick Walton <pcwalton@mozilla.com>\n \" Maintainer:   Ben Blum <bblum@cs.cmu.edu>\n \" Maintainer:   Chris Morgan <me@chrismorgan.info>\n-\" Last Change:  2013 Oct 19\n+\" Last Change:  2013 Oct 29\n \n if version < 600\n   syntax clear\n@@ -64,47 +64,45 @@ syn keyword   rustEnumVariant Ok Err\n \"syn keyword rustFunction from_str\n \n \" Types and traits {{{3\n+syn keyword rustTrait Any AnyOwnExt AnyRefExt AnyMutRefExt\n+syn keyword rustTrait Ascii AsciiCast OwnedAsciiCast AsciiStr ToBytesConsume\n+syn keyword rustTrait Bool\n syn keyword rustTrait ToCStr\n+syn keyword rustTrait Char\n syn keyword rustTrait Clone DeepClone\n syn keyword rustTrait Eq ApproxEq Ord TotalEq TotalOrd Ordering Equiv\n syn keyword rustEnumVariant Less Equal Greater\n-syn keyword rustTrait Char\n syn keyword rustTrait Container Mutable Map MutableMap Set MutableSet\n+syn keyword rustTrait Default\n syn keyword rustTrait Hash\n-syn keyword rustTrait Times\n+syn keyword rustTrait FromStr\n syn keyword rustTrait FromIterator Extendable\n syn keyword rustTrait Iterator DoubleEndedIterator RandomAccessIterator ClonableIterator\n syn keyword rustTrait OrdIterator MutableDoubleEndedIterator ExactSize\n-syn keyword rustTrait Num NumCast CheckedAdd CheckedSub CheckedMul\n-syn keyword rustTrait Orderable Signed Unsigned Round\n+syn keyword rustTrait Times\n+\n syn keyword rustTrait Algebraic Trigonometric Exponential Hyperbolic\n-syn keyword rustTrait Integer Fractional Real RealExt\n syn keyword rustTrait Bitwise BitCount Bounded\n+syn keyword rustTrait Integer Fractional Real RealExt\n+syn keyword rustTrait Num NumCast CheckedAdd CheckedSub CheckedMul\n+syn keyword rustTrait Orderable Signed Unsigned Round\n syn keyword rustTrait Primitive Int Float ToStrRadix ToPrimitive FromPrimitive\n-syn keyword rustTrait GenericPath\n-syn keyword rustTrait Path\n-syn keyword rustTrait PosixPath\n-syn keyword rustTrait WindowsPath\n+syn keyword rustTrait GenericPath Path PosixPath WindowsPath\n syn keyword rustTrait RawPtr\n-syn keyword rustTrait Ascii AsciiCast OwnedAsciiCast AsciiStr ToBytesConsume\n syn keyword rustTrait SendStr SendStrOwned SendStrStatic IntoSendStr\n syn keyword rustTrait Str StrVector StrSlice OwnedStr\n-syn keyword rustTrait FromStr\n syn keyword rustTrait IterBytes\n syn keyword rustTrait ToStr ToStrConsume\n syn keyword rustTrait CopyableTuple ImmutableTuple\n-syn keyword rustTrait Tuple1 ImmutableTuple1\n-syn keyword rustTrait Tuple2 Tuple3 Tuple4 Tuple5\n-syn keyword rustTrait Tuple6 Tuple7 Tuple8 Tuple9\n-syn keyword rustTrait Tuple10 Tuple11 Tuple12\n-syn keyword rustTrait ImmutableTuple2 ImmutableTuple3 ImmutableTuple4 ImmutableTuple5\n-syn keyword rustTrait ImmutableTuple6 ImmutableTuple7 ImmutableTuple8 ImmutableTuple9\n-syn keyword rustTrait ImmutableTuple10 ImmutableTuple11 ImmutableTuple12\n-syn keyword rustTrait Vector VectorVector CopyableVector ImmutableVector\n+syn keyword rustTrait Tuple1 Tuple2 Tuple3 Tuple4\n+syn keyword rustTrait Tuple5 Tuple6 Tuple7 Tuple8\n+syn keyword rustTrait Tuple9 Tuple10 Tuple11 Tuple12\n+syn keyword rustTrait ImmutableTuple1 ImmutableTuple2 ImmutableTuple3 ImmutableTuple4\n+syn keyword rustTrait ImmutableTuple5 ImmutableTuple6 ImmutableTuple7 ImmutableTuple8\n+syn keyword rustTrait ImmutableTuple9 ImmutableTuple10 ImmutableTuple11 ImmutableTuple12\n syn keyword rustTrait ImmutableEqVector ImmutableTotalOrdVector ImmutableCopyableVector\n syn keyword rustTrait OwnedVector OwnedCopyableVector OwnedEqVector MutableVector\n-syn keyword rustTrait Reader ReaderUtil Writer WriterUtil\n-syn keyword rustTrait Default\n+syn keyword rustTrait Vector VectorVector CopyableVector ImmutableVector\n \n \"syn keyword rustFunction stream\n syn keyword rustTrait Port Chan GenericChan GenericSmartChan GenericPort Peekable"}]}