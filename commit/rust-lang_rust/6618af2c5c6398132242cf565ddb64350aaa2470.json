{"sha": "6618af2c5c6398132242cf565ddb64350aaa2470", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MThhZjJjNWM2Mzk4MTMyMjQyY2Y1NjVkZGI2NDM1MGFhYTI0NzA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-23T22:22:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-23T22:22:33Z"}, "message": "Rollup merge of #61351 - GuillaumeGomez:stabilize-cfg-rustdoc, r=QuietMisdreavus\n\nStabilize cfg(doc)\n\ncc #43781.", "tree": {"sha": "959317ed5612dcc00fe6a3e7d28fe99933c375ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/959317ed5612dcc00fe6a3e7d28fe99933c375ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6618af2c5c6398132242cf565ddb64350aaa2470", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2bEpCRBK7hj4Ov3rIwAAdHIIAH1M/AslE7avNfb+j7NHRdvF\nAXPbkZhxkro5IQ84B7Y0n0VqQCNeHiX791j8rFjWt+eRhb5a/6m5YzKdp6BcKPL9\nhQT0TJgvk8G/jjpPfuVjHfYaWinSUbNl1HS/XgTEdRg9iwrl0p67bSCbe+4Db50E\nsBzy6sqwEchWHK++PtduDk3OdcRFUjwf8jaB3IV4pf8V2PyHxcQVOZ2Rr27oUWYo\nFxn+bcuGLeBvLS3605lBzMob63mZ7hQ3KMpo31eNux8QU2z/ClZB23+1nns+COFX\nYITtmhzPCQDpmUWyKOCAGiF93OUCodKLQhAwdC6pisr/L25k1I2ksXUvZ+TczRs=\n=EK0h\n-----END PGP SIGNATURE-----\n", "payload": "tree 959317ed5612dcc00fe6a3e7d28fe99933c375ee\nparent 0c987c5c02498b4e77f5dfae1f6914ffb9268575\nparent 0d7a7b554771daee7b08caa8c49544910948c915\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1574547753 +0100\ncommitter GitHub <noreply@github.com> 1574547753 +0100\n\nRollup merge of #61351 - GuillaumeGomez:stabilize-cfg-rustdoc, r=QuietMisdreavus\n\nStabilize cfg(doc)\n\ncc #43781.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6618af2c5c6398132242cf565ddb64350aaa2470", "html_url": "https://github.com/rust-lang/rust/commit/6618af2c5c6398132242cf565ddb64350aaa2470", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6618af2c5c6398132242cf565ddb64350aaa2470/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c987c5c02498b4e77f5dfae1f6914ffb9268575", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c987c5c02498b4e77f5dfae1f6914ffb9268575", "html_url": "https://github.com/rust-lang/rust/commit/0c987c5c02498b4e77f5dfae1f6914ffb9268575"}, {"sha": "0d7a7b554771daee7b08caa8c49544910948c915", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7a7b554771daee7b08caa8c49544910948c915", "html_url": "https://github.com/rust-lang/rust/commit/0d7a7b554771daee7b08caa8c49544910948c915"}], "stats": {"total": 70, "additions": 51, "deletions": 19}, "files": [{"sha": "f982863e67b94b4e060027372809b4e9624077cc", "filename": "src/doc/rustdoc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md?ref=6618af2c5c6398132242cf565ddb64350aaa2470", "patch": "@@ -7,4 +7,5 @@\n - [Documentation tests](documentation-tests.md)\n - [Lints](lints.md)\n - [Passes](passes.md)\n+- [Advanced Features](advanced-features.md)\n - [Unstable features](unstable-features.md)"}, {"sha": "47bef3cdde1877c2e669305d033072bb101308cb", "filename": "src/doc/rustdoc/src/advanced-features.md", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fadvanced-features.md?ref=6618af2c5c6398132242cf565ddb64350aaa2470", "patch": "@@ -0,0 +1,34 @@\n+# Advanced Features\n+\n+The features listed on this page fall outside the rest of the main categories.\n+\n+## `#[cfg(doc)]`: Documenting platform-/feature-specific information\n+\n+For conditional compilation, Rustdoc treats your crate the same way the compiler does: Only things\n+from the host target are available (or from the given `--target` if present), and everything else is\n+\"filtered out\" from the crate. This can cause problems if your crate is providing different things\n+on different targets and you want your documentation to reflect all the available items you\n+provide.\n+\n+If you want to make sure an item is seen by Rustdoc regardless of what platform it's targeting,\n+you can apply `#[cfg(doc)]` to it. Rustdoc sets this whenever it's building documentation, so\n+anything that uses that flag will make it into documentation it generates. To apply this to an item\n+with other `#[cfg]` filters on it, you can write something like `#[cfg(any(windows, doc))]`.\n+This will preserve the item either when built normally on Windows, or when being documented\n+anywhere.\n+\n+Please note that this feature is not passed to doctests.\n+\n+Example:\n+\n+```rust\n+/// Token struct that can only be used on Windows.\n+#[cfg(any(windows, doc))]\n+pub struct WindowsToken;\n+/// Token struct that can only be used on Unix.\n+#[cfg(any(unix, doc))]\n+pub struct UnixToken;\n+```\n+\n+Here, the respective tokens can only be used by dependent crates on their respective platforms, but\n+they will both appear in documentation."}, {"sha": "612f3c69871d7f10e2bd3082e8bc252b5aa4e663", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=6618af2c5c6398132242cf565ddb64350aaa2470", "patch": "@@ -250,7 +250,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n \n     let extern_names: Vec<String> = externs.iter().map(|(s,_)| s).cloned().collect();\n \n-    // Add the rustdoc cfg into the doc build.\n+    // Add the doc cfg into the doc build.\n     cfgs.push(\"doc\".to_string());\n \n     let cpath = Some(input.clone());"}, {"sha": "a9f41633f30fd11f2b5af6cc09be33efdc1912ac", "filename": "src/libsyntax/feature_gate/builtin_attrs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fbuiltin_attrs.rs?ref=6618af2c5c6398132242cf565ddb64350aaa2470", "patch": "@@ -30,7 +30,6 @@ const GATED_CFGS: &[(Symbol, Symbol, GateFn)] = &[\n     (sym::target_thread_local, sym::cfg_target_thread_local, cfg_fn!(cfg_target_thread_local)),\n     (sym::target_has_atomic, sym::cfg_target_has_atomic, cfg_fn!(cfg_target_has_atomic)),\n     (sym::target_has_atomic_load_store, sym::cfg_target_has_atomic, cfg_fn!(cfg_target_has_atomic)),\n-    (sym::doc, sym::doc_cfg, cfg_fn!(doc_cfg)),\n ];\n \n #[derive(Debug)]"}, {"sha": "6eaaac77f9dc11194ff8f16d9d5916df852284b1", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=6618af2c5c6398132242cf565ddb64350aaa2470", "patch": "@@ -627,7 +627,6 @@ symbols! {\n         rustc_test_marker,\n         rustc_then_this_would_need,\n         rustc_variance,\n-        rustdoc,\n         rustfmt,\n         rust_eh_personality,\n         rust_eh_unwind_resume,"}, {"sha": "dd8e1ed97c4d2fb89d89eef8cc3e79abb65d9a74", "filename": "src/test/ui/cfg-rustdoc.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Ftest%2Fui%2Fcfg-rustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Ftest%2Fui%2Fcfg-rustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-rustdoc.rs?ref=6618af2c5c6398132242cf565ddb64350aaa2470", "patch": "@@ -0,0 +1,6 @@\n+#[cfg(doc)]\n+pub struct Foo;\n+\n+fn main() {\n+    let f = Foo; //~ ERROR\n+}"}, {"sha": "c687d186989c0c5622d9a9d222e1a9d0ba6a7a83", "filename": "src/test/ui/cfg-rustdoc.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Ftest%2Fui%2Fcfg-rustdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6618af2c5c6398132242cf565ddb64350aaa2470/src%2Ftest%2Fui%2Fcfg-rustdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg-rustdoc.stderr?ref=6618af2c5c6398132242cf565ddb64350aaa2470", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find value `Foo` in this scope\n+  --> $DIR/cfg-rustdoc.rs:5:13\n+   |\n+LL |     let f = Foo;\n+   |             ^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "9830503a8cac6ab7d05da1a3019a105b32247870", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg-cfg-rustdoc.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c987c5c02498b4e77f5dfae1f6914ffb9268575/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c987c5c02498b4e77f5dfae1f6914ffb9268575/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.rs?ref=0c987c5c02498b4e77f5dfae1f6914ffb9268575", "patch": "@@ -1,4 +0,0 @@\n-#[cfg(doc)] //~ ERROR: `cfg(doc)` is experimental and subject to change\n-pub struct SomeStruct;\n-\n-fn main() {}"}, {"sha": "26a1f4decf4cfaaaf55e174d3f0dff2f1fecb332", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg-cfg-rustdoc.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c987c5c02498b4e77f5dfae1f6914ffb9268575/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c987c5c02498b4e77f5dfae1f6914ffb9268575/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr?ref=0c987c5c02498b4e77f5dfae1f6914ffb9268575", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: `cfg(doc)` is experimental and subject to change\n-  --> $DIR/feature-gate-doc_cfg-cfg-rustdoc.rs:1:7\n-   |\n-LL | #[cfg(doc)]\n-   |       ^^^\n-   |\n-   = note: for more information, see https://github.com/rust-lang/rust/issues/43781\n-   = help: add `#![feature(doc_cfg)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}]}