{"sha": "ba26dc50cecb66e10e183dc834fb570979a475b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMjZkYzUwY2VjYjY2ZTEwZTE4M2RjODM0ZmI1NzA5NzlhNDc1Yjc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-07T05:35:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-07T05:35:08Z"}, "message": "docs: Remove more uses of records", "tree": {"sha": "cae8ff6d4b603c281b5a587171b0d0aa0c9b37e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cae8ff6d4b603c281b5a587171b0d0aa0c9b37e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba26dc50cecb66e10e183dc834fb570979a475b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba26dc50cecb66e10e183dc834fb570979a475b7", "html_url": "https://github.com/rust-lang/rust/commit/ba26dc50cecb66e10e183dc834fb570979a475b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba26dc50cecb66e10e183dc834fb570979a475b7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b2ffa5692ce83bbf499262e6023c8f7673f0522", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b2ffa5692ce83bbf499262e6023c8f7673f0522", "html_url": "https://github.com/rust-lang/rust/commit/0b2ffa5692ce83bbf499262e6023c8f7673f0522"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "78a7b5e5f257a92cd7ed74741c3095a6d5fbfa3e", "filename": "doc/tutorial.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba26dc50cecb66e10e183dc834fb570979a475b7/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/ba26dc50cecb66e10e183dc834fb570979a475b7/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=ba26dc50cecb66e10e183dc834fb570979a475b7", "patch": "@@ -859,12 +859,12 @@ get at their contents. All variant constructors can be used as\n patterns, as in this definition of `area`:\n \n ~~~~\n-# type Point = {x: float, y: float};\n+# struct Point {x: float, y: float}\n # enum Shape { Circle(Point, float), Rectangle(Point, Point) }\n fn area(sh: Shape) -> float {\n     match sh {\n         Circle(_, size) => float::consts::pi * size * size,\n-        Rectangle({x, y}, {x: x2, y: y2}) => (x2 - x) * (y2 - y)\n+        Rectangle(Point {x, y}, Point {x: x2, y: y2}) => (x2 - x) * (y2 - y)\n     }\n }\n ~~~~\n@@ -875,7 +875,7 @@ their introductory form, nullary enum patterns are written without\n parentheses.\n \n ~~~~\n-# type Point = {x: float, y: float};\n+# struct Point {x: float, y: float}\n # enum Direction { North, East, South, West }\n fn point_from_direction(dir: Direction) -> Point {\n     match dir {"}]}