{"sha": "35ec01a3f72313d098722163e74f84bd1d047296", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZWMwMWEzZjcyMzEzZDA5ODcyMjE2M2U3NGY4NGJkMWQwNDcyOTY=", "commit": {"author": {"name": "Brandon Sanderson", "email": "singingboyo@hotmail.com", "date": "2013-08-20T09:02:01Z"}, "committer": {"name": "Brandon Sanderson", "email": "singingboyo@hotmail.com", "date": "2013-08-23T02:32:22Z"}, "message": "Clarify use_decl module resolution docs.", "tree": {"sha": "816156513b02267c69dced79e7897fecf70e7f53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/816156513b02267c69dced79e7897fecf70e7f53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35ec01a3f72313d098722163e74f84bd1d047296", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35ec01a3f72313d098722163e74f84bd1d047296", "html_url": "https://github.com/rust-lang/rust/commit/35ec01a3f72313d098722163e74f84bd1d047296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35ec01a3f72313d098722163e74f84bd1d047296/comments", "author": {"login": "brandonson", "id": 1870695, "node_id": "MDQ6VXNlcjE4NzA2OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1870695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonson", "html_url": "https://github.com/brandonson", "followers_url": "https://api.github.com/users/brandonson/followers", "following_url": "https://api.github.com/users/brandonson/following{/other_user}", "gists_url": "https://api.github.com/users/brandonson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonson/subscriptions", "organizations_url": "https://api.github.com/users/brandonson/orgs", "repos_url": "https://api.github.com/users/brandonson/repos", "events_url": "https://api.github.com/users/brandonson/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandonson", "id": 1870695, "node_id": "MDQ6VXNlcjE4NzA2OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1870695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonson", "html_url": "https://github.com/brandonson", "followers_url": "https://api.github.com/users/brandonson/followers", "following_url": "https://api.github.com/users/brandonson/following{/other_user}", "gists_url": "https://api.github.com/users/brandonson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonson/subscriptions", "organizations_url": "https://api.github.com/users/brandonson/orgs", "repos_url": "https://api.github.com/users/brandonson/repos", "events_url": "https://api.github.com/users/brandonson/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f858452391c63bfbf46678c4ea9fd584adf1c28e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f858452391c63bfbf46678c4ea9fd584adf1c28e", "html_url": "https://github.com/rust-lang/rust/commit/f858452391c63bfbf46678c4ea9fd584adf1c28e"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "7ac0527e47dcd1dcae5ebf2ed6edc5dd706bd110", "filename": "doc/rust.md", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/35ec01a3f72313d098722163e74f84bd1d047296/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/35ec01a3f72313d098722163e74f84bd1d047296/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=35ec01a3f72313d098722163e74f84bd1d047296", "patch": "@@ -851,6 +851,38 @@ In this example, the module `quux` re-exports all of the public names defined in\n \n Also note that the paths contained in `use` items are relative to the crate root.\n So, in the previous example, the `use` refers to `quux::foo::*`, and not simply to `foo::*`.\n+This also means that top-level module declarations should be at the crate root if direct usage\n+of the declared modules within `use` items is desired.  It is also possible to use `self` and `super`\n+at the beginning of a `use` item to refer to the current and direct parent modules respectively.\n+All rules regarding accessing declared modules in `use` declarations applies to both module declarations\n+and `extern mod` declarations.\n+\n+An example of what will and will not work for `use` items:\n+~~~~\n+# #[allow(unused_imports)];\n+use foo::extra;          // good: foo is at the root of the crate\n+use foo::baz::foobaz;    // good: foo is at the root of the crate\n+\n+mod foo {\n+    extern mod extra;\n+\n+    use foo::extra::list;  // good: foo is at crate root\n+//  use extra::*;          // bad:  extra is not at the crate root\n+    use self::baz::foobaz; // good: self refers to module 'foo'\n+    use foo::bar::foobar;  // good: foo is at crate root\n+\n+    pub mod bar {\n+        pub fn foobar() { }\n+    }\n+\n+    pub mod baz {\n+        use super::bar::foobar; // good: super refers to module 'foo'\n+        pub fn foobaz() { }\n+    }\n+}\n+\n+fn main() {}\n+~~~~\n \n ### Functions\n "}]}