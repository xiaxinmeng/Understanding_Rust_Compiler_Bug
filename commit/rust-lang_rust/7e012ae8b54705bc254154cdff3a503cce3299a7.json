{"sha": "7e012ae8b54705bc254154cdff3a503cce3299a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMDEyYWU4YjU0NzA1YmMyNTQxNTRjZGZmM2E1MDNjY2UzMjk5YTc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-26T17:41:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-26T17:41:45Z"}, "message": "Merge #5893\n\n5893: Allow running a test as a binary r=matklad a=jonas-schievink\n\nIf a test uses `harness = false`, it just contains an `fn main` that is executed via `cargo test`. This adds support for that.\r\n\r\nNote though that Cargo doesn't actually tell us whether `harness = false`, so this hint will always show up when you put an `fn main` into an integration test. Normally people shouldn't be doing that if they do use the harness though.\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "c1105a002b0e866bbd397188841f46243b336b6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1105a002b0e866bbd397188841f46243b336b6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e012ae8b54705bc254154cdff3a503cce3299a7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRp7ZCRBK7hj4Ov3rIwAAdHIIAD34/HnzJjV8hINvQUvdCoVn\nXFHZLirFobnxPBfP9zvzikWz6VztNz9SL8yUHt83RLZ038Wp+hu8gFZyNvOmVh20\nRJRDqIHDOiT/PeLp903Lg4AeZ2Fco1bD3XJeuQxafJM1Xq+S/FVpm2L9gHGCgetd\n1Hmad5Qmxg2nBU1usmyT04yviSyk99x3QVCWBxP9GINvg1r3iTvaJozndM9IdvXq\nSvLDdhYRuUzjCLHc/oJiesmTV3A/i45TLzefTtXlvMdF2fjhNwM3+2+DGOYw4y6Y\nith9R5IbY/Ezm9QQHiEfg2fOs3lQgV0L1eMCE9Vi5tg2ODsea68rbL1NyJZs3Xk=\n=e0cm\n-----END PGP SIGNATURE-----\n", "payload": "tree c1105a002b0e866bbd397188841f46243b336b6d\nparent 3d6c4c143b4b4c74810318eca1b5493e43535fff\nparent 964219f0be87d189e13dd63a6ffc4d9d53eafbb4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598463705 +0000\ncommitter GitHub <noreply@github.com> 1598463705 +0000\n\nMerge #5893\n\n5893: Allow running a test as a binary r=matklad a=jonas-schievink\n\nIf a test uses `harness = false`, it just contains an `fn main` that is executed via `cargo test`. This adds support for that.\r\n\r\nNote though that Cargo doesn't actually tell us whether `harness = false`, so this hint will always show up when you put an `fn main` into an integration test. Normally people shouldn't be doing that if they do use the harness though.\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e012ae8b54705bc254154cdff3a503cce3299a7", "html_url": "https://github.com/rust-lang/rust/commit/7e012ae8b54705bc254154cdff3a503cce3299a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e012ae8b54705bc254154cdff3a503cce3299a7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d6c4c143b4b4c74810318eca1b5493e43535fff", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d6c4c143b4b4c74810318eca1b5493e43535fff", "html_url": "https://github.com/rust-lang/rust/commit/3d6c4c143b4b4c74810318eca1b5493e43535fff"}, {"sha": "964219f0be87d189e13dd63a6ffc4d9d53eafbb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/964219f0be87d189e13dd63a6ffc4d9d53eafbb4", "html_url": "https://github.com/rust-lang/rust/commit/964219f0be87d189e13dd63a6ffc4d9d53eafbb4"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "ddc028148c605abc8d99045710e4211efc946a5e", "filename": "crates/rust-analyzer/src/cargo_target_spec.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e012ae8b54705bc254154cdff3a503cce3299a7/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e012ae8b54705bc254154cdff3a503cce3299a7/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs?ref=7e012ae8b54705bc254154cdff3a503cce3299a7", "patch": "@@ -72,7 +72,11 @@ impl CargoTargetSpec {\n                 extra_args.push(\"--nocapture\".to_string());\n             }\n             RunnableKind::Bin => {\n-                args.push(\"run\".to_string());\n+                let subcommand = match spec {\n+                    Some(CargoTargetSpec { target_kind: TargetKind::Test, .. }) => \"test\",\n+                    _ => \"run\",\n+                };\n+                args.push(subcommand.to_string());\n                 if let Some(spec) = spec {\n                     spec.push_to(&mut args, kind);\n                 }"}, {"sha": "8568f7b05077bc524a9f3334bab83287e3bc003f", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e012ae8b54705bc254154cdff3a503cce3299a7/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e012ae8b54705bc254154cdff3a503cce3299a7/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=7e012ae8b54705bc254154cdff3a503cce3299a7", "patch": "@@ -1399,7 +1399,10 @@ fn should_skip_target(runnable: &Runnable, cargo_spec: Option<&CargoTargetSpec>)\n         RunnableKind::Bin => {\n             // Do not suggest binary run on other target than binary\n             match &cargo_spec {\n-                Some(spec) => !matches!(spec.target_kind, TargetKind::Bin | TargetKind::Example),\n+                Some(spec) => !matches!(\n+                    spec.target_kind,\n+                    TargetKind::Bin | TargetKind::Example | TargetKind::Test\n+                ),\n                 None => true,\n             }\n         }"}]}