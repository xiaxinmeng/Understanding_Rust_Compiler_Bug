{"sha": "eec74360dce0be790b537ab41239bd9b876741d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYzc0MzYwZGNlMGJlNzkwYjUzN2FiNDEyMzliZDliODc2NzQxZDI=", "commit": {"author": {"name": "Ryan Leckey", "email": "leckey.ryan@gmail.com", "date": "2018-08-31T07:04:23Z"}, "committer": {"name": "Ryan Leckey", "email": "leckey.ryan@gmail.com", "date": "2018-08-31T07:04:23Z"}, "message": "Accept 2015 and 2018 instead of Edition2015 and Edition2018 for edition option", "tree": {"sha": "e16ca9a9e781bbf83d39cbf60ba0573ee6951ff1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e16ca9a9e781bbf83d39cbf60ba0573ee6951ff1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eec74360dce0be790b537ab41239bd9b876741d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eec74360dce0be790b537ab41239bd9b876741d2", "html_url": "https://github.com/rust-lang/rust/commit/eec74360dce0be790b537ab41239bd9b876741d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eec74360dce0be790b537ab41239bd9b876741d2/comments", "author": {"login": "mehcode", "id": 753919, "node_id": "MDQ6VXNlcjc1MzkxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/753919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehcode", "html_url": "https://github.com/mehcode", "followers_url": "https://api.github.com/users/mehcode/followers", "following_url": "https://api.github.com/users/mehcode/following{/other_user}", "gists_url": "https://api.github.com/users/mehcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehcode/subscriptions", "organizations_url": "https://api.github.com/users/mehcode/orgs", "repos_url": "https://api.github.com/users/mehcode/repos", "events_url": "https://api.github.com/users/mehcode/events{/privacy}", "received_events_url": "https://api.github.com/users/mehcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mehcode", "id": 753919, "node_id": "MDQ6VXNlcjc1MzkxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/753919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehcode", "html_url": "https://github.com/mehcode", "followers_url": "https://api.github.com/users/mehcode/followers", "following_url": "https://api.github.com/users/mehcode/following{/other_user}", "gists_url": "https://api.github.com/users/mehcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehcode/subscriptions", "organizations_url": "https://api.github.com/users/mehcode/orgs", "repos_url": "https://api.github.com/users/mehcode/repos", "events_url": "https://api.github.com/users/mehcode/events{/privacy}", "received_events_url": "https://api.github.com/users/mehcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d88139893f71801ee7262db999832e6bbab02cc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d88139893f71801ee7262db999832e6bbab02cc2", "html_url": "https://github.com/rust-lang/rust/commit/d88139893f71801ee7262db999832e6bbab02cc2"}], "stats": {"total": 79, "additions": 47, "deletions": 32}, "files": [{"sha": "f5242b79d5c8d906b2be4e3f01a4cb2ca58fb55f", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -35,7 +35,7 @@ matrix:\n     - env: INTEGRATION=stdsimd\n     - env: INTEGRATION=tempdir\n   allow_failures:\n-    # Needs `edition = \"Edition2018\"` in rustfmt.toml\n+    # Needs `edition = \"2018\"` in rustfmt.toml\n     - env: INTEGRATION=chalk\n     # Fails tests, don't know why\n     - env: INTEGRATION=crater"}, {"sha": "ae8ea2b3c6d2275e2e69601e5ce34cefa546f9e7", "filename": "Configurations.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -2176,16 +2176,16 @@ ignore = [\n \n Specifies which edition is used by the parser.\n \n-- **Default value**: `Edition2015`\n-- **Possible values**: `Edition2015`, `Edition2018`\n+- **Default value**: `2015`\n+- **Possible values**: `2015`, `2018`\n - **Stable**: No\n \n ### Example\n \n If you want to format code that requires edition 2018, add the following to your config file:\n \n ```toml\n-edition = \"Edition2018\"\n+edition = \"2018\"\n ```\n \n ## `emit_mode`"}, {"sha": "8d8bfcc1e0190745ccbaf2eee4dbeb6a2c247d13", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -39,7 +39,7 @@ cargo +nightly fmt\n To format code that requires edition 2018, create a `rustfmt.toml` [configuration](#configuring-rustfmt) file containing:\n \n ```toml\n-edition = \"Edition2018\"\n+edition = \"2018\"\n ```\n \n ## Limitations"}, {"sha": "94f7416365227e1ab21b83ddfa1488e6e3691d26", "filename": "rustfmt.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt.toml?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,3 +1,3 @@\n error_on_line_overflow = true\n error_on_unformatted = true\n-edition = \"Edition2018\"\n+edition = \"2018\""}, {"sha": "ac80116e0d0d5f0c53780db65d1ab28a48c10032", "filename": "src/config/options.rs", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -20,7 +20,15 @@ use std::path::{Path, PathBuf};\n /// Macro for deriving implementations of Serialize/Deserialize for enums\n #[macro_export]\n macro_rules! impl_enum_serialize_and_deserialize {\n-    ( $e:ident, $( $x:ident ),* ) => {\n+    (@stringify $variant:ident) => (\n+        stringify!($variant)\n+    );\n+\n+    (@stringify $_variant:ident: $value:expr) => (\n+        stringify!($value)\n+    );\n+\n+    ( $e:ident, $( $variant:ident $(: $value:expr)* ),* ) => {\n         impl ::serde::ser::Serialize for $e {\n             fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n                 where S: ::serde::ser::Serializer\n@@ -31,7 +39,9 @@ macro_rules! impl_enum_serialize_and_deserialize {\n                 #[allow(unreachable_patterns)]\n                 match *self {\n                     $(\n-                        $e::$x => serializer.serialize_str(stringify!($x)),\n+                        $e::$variant => serializer.serialize_str(\n+                            impl_enum_serialize_and_deserialize!(@stringify $variant $(: $value)*)\n+                        ),\n                     )*\n                     _ => {\n                         Err(S::Error::custom(format!(\"Cannot serialize {:?}\", self)))\n@@ -59,11 +69,13 @@ macro_rules! impl_enum_serialize_and_deserialize {\n                 }\n                 let s = d.deserialize_string(StringOnly::<D>(PhantomData))?;\n                 $(\n-                    if stringify!($x).eq_ignore_ascii_case(&s) {\n-                      return Ok($e::$x);\n+                    if impl_enum_serialize_and_deserialize!(@stringify $variant $(: $value)*)\n+                        .eq_ignore_ascii_case(&s) {\n+                      return Ok($e::$variant);\n                     }\n                 )*\n-                static ALLOWED: &'static[&str] = &[$(stringify!($x),)*];\n+                static ALLOWED: &'static[&str] = &[\n+                    $(impl_enum_serialize_and_deserialize!(@stringify $variant $(: $value)*),)*];\n                 Err(D::Error::unknown_variant(&s, ALLOWED))\n             }\n         }\n@@ -73,8 +85,9 @@ macro_rules! impl_enum_serialize_and_deserialize {\n \n             fn from_str(s: &str) -> Result<Self, Self::Err> {\n                 $(\n-                    if stringify!($x).eq_ignore_ascii_case(s) {\n-                        return Ok($e::$x);\n+                    if impl_enum_serialize_and_deserialize!(@stringify $variant $(: $value)*)\n+                        .eq_ignore_ascii_case(s) {\n+                        return Ok($e::$variant);\n                     }\n                 )*\n                 Err(\"Bad variant\")\n@@ -85,23 +98,25 @@ macro_rules! impl_enum_serialize_and_deserialize {\n             fn doc_hint() -> String {\n                 let mut variants = Vec::new();\n                 $(\n-                    variants.push(stringify!($x));\n+                    variants.push(\n+                        impl_enum_serialize_and_deserialize!(@stringify $variant $(: $value)*)\n+                    );\n                 )*\n                 format!(\"[{}]\", variants.join(\"|\"))\n             }\n         }\n     };\n }\n \n-macro_rules! configuration_option_enum{\n-    ($e:ident: $( $x:ident ),+ $(,)*) => {\n+macro_rules! configuration_option_enum {\n+    ($e:ident: $( $name:ident $(: $value:expr)* ),+ $(,)*) => (\n         #[derive(Copy, Clone, Eq, PartialEq, Debug)]\n         pub enum $e {\n-            $( $x ),+\n+            $( $name ),+\n         }\n \n-        impl_enum_serialize_and_deserialize!($e, $( $x ),+);\n-    }\n+        impl_enum_serialize_and_deserialize!($e, $( $name $(: $value)* ),+);\n+    );\n }\n \n configuration_option_enum! { NewlineStyle:\n@@ -412,8 +427,8 @@ pub trait CliOptions {\n \n /// The edition of the compiler (RFC 2052)\n configuration_option_enum!{ Edition:\n-    Edition2015,\n-    Edition2018,\n+    Edition2015: 2015,\n+    Edition2018: 2018,\n }\n \n impl Edition {"}, {"sha": "a7018316812d9b292e94958914d424fcc57737df", "filename": "tests/source/async_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fasync_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fasync_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fasync_block.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n \n fn main() {\n     let x = async {"}, {"sha": "f77dc73acd988b064f5a207d966603ef1d620c2d", "filename": "tests/source/async_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fasync_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fasync_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fasync_fn.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n \n async fn bar() -> Result<(), ()> {\n     Ok(())"}, {"sha": "541db1dc90c226889569ce151bc51b6c6b629b95", "filename": "tests/source/catch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fcatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fcatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcatch.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n #![feature(try_blocks)]\n \n fn main() {"}, {"sha": "d87761fdc9c3716752ba60a4b5c2bc7b887f3a87", "filename": "tests/source/issue-2927-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fissue-2927-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fissue-2927-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2927-2.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2015\n+// rustfmt-edition: 2015\n #![feature(rust_2018_preview, uniform_paths)]\n use futures::prelude::*;\n use http_03::cli::Cli;"}, {"sha": "a7df32084f3b6757ed72df379423b5084dad0429", "filename": "tests/source/issue-2927.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fissue-2927.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Fsource%2Fissue-2927.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2927.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n #![feature(rust_2018_preview, uniform_paths)]\n use futures::prelude::*;\n use http_03::cli::Cli;"}, {"sha": "5c1649373adefa102cfb2400db4bb194dc55edc6", "filename": "tests/target/async_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fasync_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fasync_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fasync_block.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n \n fn main() {\n     let x = async { Ok(()) };"}, {"sha": "db6405482c5969cb430b068a0f6ac4c8ebc8bed1", "filename": "tests/target/async_closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fasync_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fasync_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fasync_closure.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n \n fn main() {\n     let async_closure = async {"}, {"sha": "bba220ee25041b55a7894cb924e9e3bcbe961374", "filename": "tests/target/async_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fasync_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fasync_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fasync_fn.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n \n async fn bar() -> Result<(), ()> {\n     Ok(())"}, {"sha": "ffe694f8e7252cd64330e7d1626c0a94e5f03ff2", "filename": "tests/target/catch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fcatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fcatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcatch.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n #![feature(try_blocks)]\n \n fn main() {"}, {"sha": "e895783ba8bb46610cc1a7f9ac2edf5306a4ef1a", "filename": "tests/target/issue-2927-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fissue-2927-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fissue-2927-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2927-2.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2015\n+// rustfmt-edition: 2015\n #![feature(rust_2018_preview, uniform_paths)]\n use futures::prelude::*;\n use http_03::cli::Cli;"}, {"sha": "3267be28d7b70122e9676aefc49ba1c72f95194c", "filename": "tests/target/issue-2927.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fissue-2927.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec74360dce0be790b537ab41239bd9b876741d2/tests%2Ftarget%2Fissue-2927.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2927.rs?ref=eec74360dce0be790b537ab41239bd9b876741d2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-edition: Edition2018\n+// rustfmt-edition: 2018\n #![feature(rust_2018_preview, uniform_paths)]\n use ::log::{error, info, log};\n use futures::prelude::*;"}]}