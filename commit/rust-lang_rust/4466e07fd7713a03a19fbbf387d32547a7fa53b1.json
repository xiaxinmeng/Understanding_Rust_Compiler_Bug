{"sha": "4466e07fd7713a03a19fbbf387d32547a7fa53b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NjZlMDdmZDc3MTNhMDNhMTlmYmJmMzg3ZDMyNTQ3YTdmYTUzYjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-12T19:45:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-12T19:45:06Z"}, "message": "Merge #9874\n\n9874: fix: Always add implicit `proc_macro` dependency r=jonas-schievink a=jonas-schievink\n\nEven crates that don't set `proc-macro = true` are allowed to depend on `proc_macro` (just none of the APIs work when called outside of a proc macro).\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9857\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "34b3d7077302c4ab4fbb594af08c1a401c0e2054", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34b3d7077302c4ab4fbb594af08c1a401c0e2054"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4466e07fd7713a03a19fbbf387d32547a7fa53b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhFXpCCRBK7hj4Ov3rIwAAlIcIAGoRyL/bMtfqjc/iEqwgY5Y4\nZ2gFXXEIZnbJjIuTdrXwg2VjB/S3Tqj+GRs69l0vSz6/1x2qSicSai/dXR3wb7NG\nla2NteG1NXsB7DZ4tA9XTsyEPjjH0UX6LhrpR6dDe0FfERyPd+EBlJZBYxs0hIWT\nEf0CBRRwfsHECpwmGqRQZ7j1Am/bc2Ea+7JwaSo4iOfKDT8yxLylXRnjvqZuYy9h\nNd+LkqS89bk9ghhIMOApg2m8yzGcnHyxWDz0pcJ+UFLC8Gxohf420uHnSwKAdwUB\n5epkSGYXEgvfo3AXP4RUdwiCcsV+3/rEtTG/AJB79f99Qy6XXFE4dBH18wrJF7E=\n=nrHS\n-----END PGP SIGNATURE-----\n", "payload": "tree 34b3d7077302c4ab4fbb594af08c1a401c0e2054\nparent baf149437452f6aec9f873bb312723bf62cb3a74\nparent 6f579c4862b985afeb5249cc669e4dc558f7c2bc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628797506 +0000\ncommitter GitHub <noreply@github.com> 1628797506 +0000\n\nMerge #9874\n\n9874: fix: Always add implicit `proc_macro` dependency r=jonas-schievink a=jonas-schievink\n\nEven crates that don't set `proc-macro = true` are allowed to depend on `proc_macro` (just none of the APIs work when called outside of a proc macro).\r\n\r\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/9857\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4466e07fd7713a03a19fbbf387d32547a7fa53b1", "html_url": "https://github.com/rust-lang/rust/commit/4466e07fd7713a03a19fbbf387d32547a7fa53b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4466e07fd7713a03a19fbbf387d32547a7fa53b1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf149437452f6aec9f873bb312723bf62cb3a74", "url": "https://api.github.com/repos/rust-lang/rust/commits/baf149437452f6aec9f873bb312723bf62cb3a74", "html_url": "https://github.com/rust-lang/rust/commit/baf149437452f6aec9f873bb312723bf62cb3a74"}, {"sha": "6f579c4862b985afeb5249cc669e4dc558f7c2bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f579c4862b985afeb5249cc669e4dc558f7c2bc", "html_url": "https://github.com/rust-lang/rust/commit/6f579c4862b985afeb5249cc669e4dc558f7c2bc"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "898df83d62046e4e15ba59849396904e79afb63b", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4466e07fd7713a03a19fbbf387d32547a7fa53b1/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4466e07fd7713a03a19fbbf387d32547a7fa53b1/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=4466e07fd7713a03a19fbbf387d32547a7fa53b1", "patch": "@@ -533,15 +533,13 @@ fn cargo_to_crate_graph(\n                     lib_tgt = Some((crate_id, cargo[tgt].name.clone()));\n                     pkg_to_lib_crate.insert(pkg, crate_id);\n                 }\n-                if cargo[tgt].is_proc_macro {\n-                    if let Some(proc_macro) = libproc_macro {\n-                        add_dep(\n-                            &mut crate_graph,\n-                            crate_id,\n-                            CrateName::new(\"proc_macro\").unwrap(),\n-                            proc_macro,\n-                        );\n-                    }\n+                if let Some(proc_macro) = libproc_macro {\n+                    add_dep(\n+                        &mut crate_graph,\n+                        crate_id,\n+                        CrateName::new(\"proc_macro\").unwrap(),\n+                        proc_macro,\n+                    );\n                 }\n \n                 pkg_crates.entry(pkg).or_insert_with(Vec::new).push((crate_id, cargo[tgt].kind));"}]}