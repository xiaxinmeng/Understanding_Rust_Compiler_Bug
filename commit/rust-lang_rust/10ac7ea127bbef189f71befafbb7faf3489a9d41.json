{"sha": "10ac7ea127bbef189f71befafbb7faf3489a9d41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYWM3ZWExMjdiYmVmMTg5ZjcxYmVmYWZiYjdmYWYzNDg5YTlkNDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-14T22:57:20Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T13:47:19Z"}, "message": "document check_borrow_conflicts_in_at_patterns", "tree": {"sha": "cb3e1ae2c1cdafbcf93663edee1be15e98cf83ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb3e1ae2c1cdafbcf93663edee1be15e98cf83ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10ac7ea127bbef189f71befafbb7faf3489a9d41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10ac7ea127bbef189f71befafbb7faf3489a9d41", "html_url": "https://github.com/rust-lang/rust/commit/10ac7ea127bbef189f71befafbb7faf3489a9d41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10ac7ea127bbef189f71befafbb7faf3489a9d41/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9aba749cfc192422d879b12c7a5c3674f5ad110", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9aba749cfc192422d879b12c7a5c3674f5ad110", "html_url": "https://github.com/rust-lang/rust/commit/b9aba749cfc192422d879b12c7a5c3674f5ad110"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "8abe3508fd681215806ce8af81e451b601a5f86b", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/10ac7ea127bbef189f71befafbb7faf3489a9d41/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ac7ea127bbef189f71befafbb7faf3489a9d41/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=10ac7ea127bbef189f71befafbb7faf3489a9d41", "patch": "@@ -317,7 +317,7 @@ fn pat_is_catchall(pat: &Pat) -> bool {\n     }\n }\n \n-// Check for unreachable patterns\n+/// Check for unreachable patterns.\n fn check_arms<'p, 'tcx>(\n     cx: &mut MatchCheckCtxt<'p, 'tcx>,\n     arms: &[(&'p super::Pat<'tcx>, &hir::Pat, bool)],\n@@ -574,7 +574,7 @@ fn maybe_point_at_variant(ty: Ty<'_>, patterns: &[super::Pat<'_>]) -> Vec<Span>\n     covered\n }\n \n-// Check the legality of legality of by-move bindings.\n+/// Check the legality of legality of by-move bindings.\n fn check_legality_of_move_bindings(cx: &mut MatchVisitor<'_, '_>, has_guard: bool, pat: &Pat) {\n     let sess = cx.tcx.sess;\n     let tables = cx.tables;\n@@ -630,6 +630,14 @@ fn check_legality_of_move_bindings(cx: &mut MatchVisitor<'_, '_>, has_guard: boo\n     }\n }\n \n+/// Check that there are no borrow conflicts in `binding @ subpat` patterns.\n+///\n+/// For example, this would reject:\n+/// - `ref x @ Some(ref mut y)`,\n+/// - `ref mut x @ Some(ref y)`\n+/// - `ref mut x @ Some(ref mut y)`.\n+///\n+/// This analysis is *not* subsumed by NLL.\n fn check_borrow_conflicts_in_at_patterns(cx: &MatchVisitor<'_, '_>, pat: &Pat) {\n     let tab = cx.tables;\n     let sess = cx.tcx.sess;"}]}