{"sha": "c96e3524e319e3654a5542a3b078c4f7537e94f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NmUzNTI0ZTMxOWUzNjU0YTU1NDJhM2IwNzhjNGY3NTM3ZTk0ZjY=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2016-10-12T00:08:26Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2016-11-10T21:12:42Z"}, "message": "Don't use self type for cat_index on overloaded indexing. Fixes #20649.", "tree": {"sha": "7506c64adbd53c58646f67dbf7161a9fae1c7134", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7506c64adbd53c58646f67dbf7161a9fae1c7134"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c96e3524e319e3654a5542a3b078c4f7537e94f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c96e3524e319e3654a5542a3b078c4f7537e94f6", "html_url": "https://github.com/rust-lang/rust/commit/c96e3524e319e3654a5542a3b078c4f7537e94f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c96e3524e319e3654a5542a3b078c4f7537e94f6/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc1cc1db6ddee8d57d20adc05b740e3b73649ab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1cc1db6ddee8d57d20adc05b740e3b73649ab5", "html_url": "https://github.com/rust-lang/rust/commit/bc1cc1db6ddee8d57d20adc05b740e3b73649ab5"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "fedf8c2ec7472cd57ef6823627c509e52c0ad8a0", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c96e3524e319e3654a5542a3b078c4f7537e94f6/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c96e3524e319e3654a5542a3b078c4f7537e94f6/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=c96e3524e319e3654a5542a3b078c4f7537e94f6", "patch": "@@ -945,9 +945,7 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n                 let ref_ty = self.overloaded_method_return_ty(method_ty);\n                 base_cmt = self.cat_rvalue_node(elt.id(), elt.span(), ref_ty);\n \n-                // FIXME(#20649) -- why are we using the `self_ty` as the element type...?\n-                let self_ty = method_ty.fn_sig().input(0);\n-                (self.tcx().no_late_bound_regions(&self_ty).unwrap(),\n+                (ref_ty.builtin_deref(false, ty::NoPreference).unwrap().ty,\n                  ElementKind::OtherElement)\n             }\n             None => {"}]}