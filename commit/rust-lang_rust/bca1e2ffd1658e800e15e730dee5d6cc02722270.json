{"sha": "bca1e2ffd1658e800e15e730dee5d6cc02722270", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYTFlMmZmZDE2NThlODAwZTE1ZTczMGRlZTVkNmNjMDI3MjIyNzA=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-18T22:14:44Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-20T17:24:37Z"}, "message": "Use a single line for serde annotations.", "tree": {"sha": "d7176b5f5fee291c400ef464a7c6e8954124567b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7176b5f5fee291c400ef464a7c6e8954124567b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bca1e2ffd1658e800e15e730dee5d6cc02722270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bca1e2ffd1658e800e15e730dee5d6cc02722270", "html_url": "https://github.com/rust-lang/rust/commit/bca1e2ffd1658e800e15e730dee5d6cc02722270", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bca1e2ffd1658e800e15e730dee5d6cc02722270/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "981afa52f6e3fa61074a5e295c782cd0a84f06e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/981afa52f6e3fa61074a5e295c782cd0a84f06e1", "html_url": "https://github.com/rust-lang/rust/commit/981afa52f6e3fa61074a5e295c782cd0a84f06e1"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "b0c58235fc31e8f20747c8bd698ad0e3b68a5903", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bca1e2ffd1658e800e15e730dee5d6cc02722270/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca1e2ffd1658e800e15e730dee5d6cc02722270/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=bca1e2ffd1658e800e15e730dee5d6cc02722270", "patch": "@@ -139,8 +139,7 @@ pub struct Target {\n /// file into this format, and then this is traversed and written into the above\n /// `Config` structure.\n #[derive(Deserialize, Default)]\n-#[serde(deny_unknown_fields)]\n-#[serde(rename_all = \"kebab-case\")]\n+#[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct TomlConfig {\n     build: Option<Build>,\n     install: Option<Install>,\n@@ -152,8 +151,7 @@ struct TomlConfig {\n \n /// TOML representation of various global build decisions.\n #[derive(Deserialize, Default, Clone)]\n-#[serde(deny_unknown_fields)]\n-#[serde(rename_all = \"kebab-case\")]\n+#[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct Build {\n     build: Option<String>,\n     #[serde(default)]\n@@ -181,8 +179,7 @@ struct Build {\n \n /// TOML representation of various global install decisions.\n #[derive(Deserialize, Default, Clone)]\n-#[serde(deny_unknown_fields)]\n-#[serde(rename_all = \"kebab-case\")]\n+#[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct Install {\n     prefix: Option<String>,\n     sysconfdir: Option<String>,\n@@ -194,8 +191,7 @@ struct Install {\n \n /// TOML representation of how the LLVM build is configured.\n #[derive(Deserialize, Default)]\n-#[serde(deny_unknown_fields)]\n-#[serde(rename_all = \"kebab-case\")]\n+#[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct Llvm {\n     ccache: Option<StringOrBool>,\n     ninja: Option<bool>,\n@@ -211,8 +207,7 @@ struct Llvm {\n }\n \n #[derive(Deserialize, Default, Clone)]\n-#[serde(deny_unknown_fields)]\n-#[serde(rename_all = \"kebab-case\")]\n+#[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct Dist {\n     sign_folder: Option<String>,\n     gpg_password_file: Option<String>,\n@@ -235,8 +230,7 @@ impl Default for StringOrBool {\n \n /// TOML representation of how the Rust build is configured.\n #[derive(Deserialize, Default)]\n-#[serde(deny_unknown_fields)]\n-#[serde(rename_all = \"kebab-case\")]\n+#[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct Rust {\n     optimize: Option<bool>,\n     codegen_units: Option<u32>,\n@@ -259,8 +253,7 @@ struct Rust {\n \n /// TOML representation of how each build target is configured.\n #[derive(Deserialize, Default)]\n-#[serde(deny_unknown_fields)]\n-#[serde(rename_all = \"kebab-case\")]\n+#[serde(deny_unknown_fields, rename_all = \"kebab-case\")]\n struct TomlTarget {\n     llvm_config: Option<String>,\n     jemalloc: Option<String>,"}]}