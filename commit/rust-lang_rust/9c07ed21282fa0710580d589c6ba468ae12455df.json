{"sha": "9c07ed21282fa0710580d589c6ba468ae12455df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMDdlZDIxMjgyZmEwNzEwNTgwZDU4OWM2YmE0NjhhZTEyNDU1ZGY=", "commit": {"author": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2016-08-27T16:39:22Z"}, "committer": {"name": "Mikhail Modin", "email": "mikhailm1@gmail.com", "date": "2016-08-27T16:39:22Z"}, "message": "update error E0450 to new format", "tree": {"sha": "50f08806742bbd46b04b9cfaf632226ae3994f09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f08806742bbd46b04b9cfaf632226ae3994f09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c07ed21282fa0710580d589c6ba468ae12455df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c07ed21282fa0710580d589c6ba468ae12455df", "html_url": "https://github.com/rust-lang/rust/commit/9c07ed21282fa0710580d589c6ba468ae12455df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c07ed21282fa0710580d589c6ba468ae12455df/comments", "author": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikhail-m1", "id": 5663581, "node_id": "MDQ6VXNlcjU2NjM1ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/5663581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikhail-m1", "html_url": "https://github.com/mikhail-m1", "followers_url": "https://api.github.com/users/mikhail-m1/followers", "following_url": "https://api.github.com/users/mikhail-m1/following{/other_user}", "gists_url": "https://api.github.com/users/mikhail-m1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikhail-m1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikhail-m1/subscriptions", "organizations_url": "https://api.github.com/users/mikhail-m1/orgs", "repos_url": "https://api.github.com/users/mikhail-m1/repos", "events_url": "https://api.github.com/users/mikhail-m1/events{/privacy}", "received_events_url": "https://api.github.com/users/mikhail-m1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7e2157dbab228e491919094f012af3ff8ce530c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e2157dbab228e491919094f012af3ff8ce530c", "html_url": "https://github.com/rust-lang/rust/commit/b7e2157dbab228e491919094f012af3ff8ce530c"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "6da901a5f86c03a4345cd6e6a77ebe5966fd56b7", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9c07ed21282fa0710580d589c6ba468ae12455df/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c07ed21282fa0710580d589c6ba468ae12455df/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=9c07ed21282fa0710580d589c6ba468ae12455df", "patch": "@@ -444,13 +444,32 @@ impl<'a, 'tcx, 'v> Visitor<'v> for PrivacyVisitor<'a, 'tcx> {\n                         }), ..}) => ty,\n                         _ => expr_ty\n                     }.ty_adt_def().unwrap();\n-                    let any_priv = def.struct_variant().fields.iter().any(|f| {\n-                        !f.vis.is_accessible_from(self.curitem, &self.tcx.map)\n-                    });\n-                    if any_priv {\n-                        span_err!(self.tcx.sess, expr.span, E0450,\n-                                  \"cannot invoke tuple struct constructor with private \\\n-                                   fields\");\n+\n+                    let private_indexes : Vec<_> = def.struct_variant().fields.iter().enumerate()\n+                        .filter(|&(_,f)| {\n+                            !f.vis.is_accessible_from(self.curitem, &self.tcx.map)\n+                    }).map(|(n,&_)|n).collect();\n+\n+                    if !private_indexes.is_empty() {\n+\n+                        let mut error = struct_span_err!(self.tcx.sess, expr.span, E0450,\n+                                                         \"cannot invoke tuple struct constructor \\\n+                                                         with private fields\");\n+                        error.span_label(expr.span,\n+                                         &format!(\"cannot construct with a private field\"));\n+\n+                        if let Some(def_id) = self.tcx.map.as_local_node_id(def.did) {\n+                            if let Some(hir::map::NodeItem(node)) = self.tcx.map.find(def_id) {\n+                                if let hir::Item_::ItemStruct(ref tuple_data, _) = node.node {\n+\n+                                    for i in private_indexes {\n+                                        error.span_label(tuple_data.fields()[i].span,\n+                                                         &format!(\"private field declared here\"));\n+                                    }\n+                                }\n+                            }\n+                        }\n+                        error.emit();\n                     }\n                 }\n             }"}, {"sha": "200b58a329344780be4b7610c1787fe6c7b589aa", "filename": "src/test/compile-fail/E0450.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c07ed21282fa0710580d589c6ba468ae12455df/src%2Ftest%2Fcompile-fail%2FE0450.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c07ed21282fa0710580d589c6ba468ae12455df/src%2Ftest%2Fcompile-fail%2FE0450.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0450.rs?ref=9c07ed21282fa0710580d589c6ba468ae12455df", "patch": "@@ -9,9 +9,13 @@\n // except according to those terms.\n \n mod Bar {\n-    pub struct Foo(isize);\n+    pub struct Foo( bool, pub i32, f32, bool);\n+    //~^ NOTE private field declared here\n+    //~| NOTE private field declared here\n+    //~| NOTE private field declared here\n }\n \n fn main() {\n-    let f = Bar::Foo(0); //~ ERROR E0450\n+    let f = Bar::Foo(false,1,0.1, true); //~ ERROR E0450\n+                         //~^ NOTE cannot construct with a private field\n }"}]}