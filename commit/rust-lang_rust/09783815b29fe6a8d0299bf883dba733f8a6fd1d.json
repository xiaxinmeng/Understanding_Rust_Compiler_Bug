{"sha": "09783815b29fe6a8d0299bf883dba733f8a6fd1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NzgzODE1YjI5ZmU2YThkMDI5OWJmODgzZGJhNzMzZjhhNmZkMWQ=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-04-28T23:50:16Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-04-30T04:10:14Z"}, "message": "Add run flag to bootstrap test", "tree": {"sha": "d1e038f756f8f0f8906df3039c7073426226b45d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1e038f756f8f0f8906df3039c7073426226b45d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09783815b29fe6a8d0299bf883dba733f8a6fd1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09783815b29fe6a8d0299bf883dba733f8a6fd1d", "html_url": "https://github.com/rust-lang/rust/commit/09783815b29fe6a8d0299bf883dba733f8a6fd1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09783815b29fe6a8d0299bf883dba733f8a6fd1d/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "051f9ec694ec8c173b551d674cd17b8b989a9ee8", "url": "https://api.github.com/repos/rust-lang/rust/commits/051f9ec694ec8c173b551d674cd17b8b989a9ee8", "html_url": "https://github.com/rust-lang/rust/commit/051f9ec694ec8c173b551d674cd17b8b989a9ee8"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "4d7c207e3ab8b3cfe60b8c33b52e8e1c3101531b", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/09783815b29fe6a8d0299bf883dba733f8a6fd1d/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09783815b29fe6a8d0299bf883dba733f8a6fd1d/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=09783815b29fe6a8d0299bf883dba733f8a6fd1d", "patch": "@@ -489,6 +489,7 @@ mod dist {\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,\n+            run: None,\n         };\n \n         let build = Build::new(config);\n@@ -529,6 +530,7 @@ mod dist {\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,\n+            run: None,\n         };\n \n         let build = Build::new(config);\n@@ -584,6 +586,7 @@ mod dist {\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,\n+            run: None,\n         };\n         // Make sure rustfmt binary not being found isn't an error.\n         config.channel = \"beta\".to_string();"}, {"sha": "13d11cded303a4c0748a5ba28f042b5495b8632a", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/09783815b29fe6a8d0299bf883dba733f8a6fd1d/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09783815b29fe6a8d0299bf883dba733f8a6fd1d/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=09783815b29fe6a8d0299bf883dba733f8a6fd1d", "patch": "@@ -103,6 +103,7 @@ pub enum Subcommand {\n         bless: bool,\n         compare_mode: Option<String>,\n         pass: Option<String>,\n+        run: Option<String>,\n         test_args: Vec<String>,\n         rustc_args: Vec<String>,\n         fail_fast: bool,\n@@ -293,6 +294,12 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n                     \"force {check,build,run}-pass tests to this mode.\",\n                     \"check | build | run\",\n                 );\n+                opts.optopt(\n+                    \"\",\n+                    \"run\",\n+                    \"whether to execute run-* tests\",\n+                    \"auto | always | never\",\n+                );\n                 opts.optflag(\n                     \"\",\n                     \"rustfix-coverage\",\n@@ -556,6 +563,7 @@ Arguments:\n                 bless: matches.opt_present(\"bless\"),\n                 compare_mode: matches.opt_str(\"compare-mode\"),\n                 pass: matches.opt_str(\"pass\"),\n+                run: matches.opt_str(\"run\"),\n                 test_args: matches.opt_strs(\"test-args\"),\n                 rustc_args: matches.opt_strs(\"rustc-args\"),\n                 fail_fast: !matches.opt_present(\"no-fail-fast\"),\n@@ -742,6 +750,13 @@ impl Subcommand {\n         }\n     }\n \n+    pub fn run(&self) -> Option<&str> {\n+        match *self {\n+            Subcommand::Test { ref run, .. } => run.as_ref().map(|s| &s[..]),\n+            _ => None,\n+        }\n+    }\n+\n     pub fn open(&self) -> bool {\n         match *self {\n             Subcommand::Doc { open, .. } => open,"}, {"sha": "1eccfe102be8f10abca17e3a2337c8f89f698f81", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/09783815b29fe6a8d0299bf883dba733f8a6fd1d/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09783815b29fe6a8d0299bf883dba733f8a6fd1d/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=09783815b29fe6a8d0299bf883dba733f8a6fd1d", "patch": "@@ -1207,6 +1207,11 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             cmd.arg(pass);\n         }\n \n+        if let Some(ref run) = builder.config.cmd.run() {\n+            cmd.arg(\"--run\");\n+            cmd.arg(run);\n+        }\n+\n         if let Some(ref nodejs) = builder.config.nodejs {\n             cmd.arg(\"--nodejs\").arg(nodejs);\n         }"}]}