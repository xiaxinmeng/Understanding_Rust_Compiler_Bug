{"sha": "bd2b2f1b48f86d59c3b746b72a14192f75419a84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMmIyZjFiNDhmODZkNTljM2I3NDZiNzJhMTQxOTJmNzU0MTlhODQ=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-09-23T15:13:27Z"}, "committer": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-09-23T15:19:36Z"}, "message": "Implement folding ranges", "tree": {"sha": "f8a4d9e1cc79dccb4812879642d382b6a4184f6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8a4d9e1cc79dccb4812879642d382b6a4184f6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd2b2f1b48f86d59c3b746b72a14192f75419a84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd2b2f1b48f86d59c3b746b72a14192f75419a84", "html_url": "https://github.com/rust-lang/rust/commit/bd2b2f1b48f86d59c3b746b72a14192f75419a84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd2b2f1b48f86d59c3b746b72a14192f75419a84/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e293a16d6b430befe6eb8be315ad60e7b2b10926", "url": "https://api.github.com/repos/rust-lang/rust/commits/e293a16d6b430befe6eb8be315ad60e7b2b10926", "html_url": "https://github.com/rust-lang/rust/commit/e293a16d6b430befe6eb8be315ad60e7b2b10926"}], "stats": {"total": 91, "additions": 90, "deletions": 1}, "files": [{"sha": "36cdeda380c130eff50f61879409aa72db587ac4", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 89, "deletions": 1, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b2f1b48f86d59c3b746b72a14192f75419a84/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b2f1b48f86d59c3b746b72a14192f75419a84/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=bd2b2f1b48f86d59c3b746b72a14192f75419a84", "patch": "@@ -1,15 +1,18 @@\n-use std::collections::HashMap;\n+use std::collections::{HashMap, HashSet};\n \n use languageserver_types::{\n     Diagnostic, DiagnosticSeverity, DocumentSymbol,\n     CodeActionResponse, Command, TextDocumentIdentifier,\n     SymbolInformation, Position, Location, TextEdit,\n     CompletionItem, InsertTextFormat, CompletionItemKind,\n+    FoldingRange, FoldingRangeParams, FoldingRangeKind\n };\n use serde_json::to_value;\n use ra_analysis::{Query, FileId, RunnableKind, JobToken};\n use ra_syntax::{\n+    algo::{siblings, walk, Direction},\n     text_utils::contains_offset_nonstrict,\n+    SyntaxKind, SyntaxNodeRef, TextRange\n };\n \n use ::{\n@@ -177,6 +180,7 @@ pub fn handle_workspace_symbol(\n                     world, &line_index\n                 )?,\n                 container_name: None,\n+                deprecated: None,\n             };\n             res.push(info);\n         };\n@@ -365,6 +369,90 @@ pub fn handle_completion(\n     Ok(Some(req::CompletionResponse::Array(items)))\n }\n \n+pub fn handle_folding_range(\n+    world: ServerWorld,\n+    params: FoldingRangeParams,\n+    _token: JobToken,\n+) -> Result<Option<Vec<FoldingRange>>> {\n+    let file_id = params.text_document.try_conv_with(&world)?;\n+    let file = world.analysis().file_syntax(file_id);\n+    let line_index = world.analysis().file_line_index(file_id);\n+    let syntax = file.syntax();\n+\n+    let mut res = vec![];\n+    let mut visited = HashSet::new();\n+\n+    for node in walk::preorder(syntax) {\n+        if visited.contains(&node) {\n+            continue;\n+        }\n+\n+        let range_and_kind = match node.kind() {\n+            SyntaxKind::COMMENT => (\n+                contiguous_range_for(SyntaxKind::COMMENT, node, &mut visited),\n+                Some(FoldingRangeKind::Comment),\n+            ),\n+            SyntaxKind::USE_ITEM => (\n+                contiguous_range_for(SyntaxKind::USE_ITEM, node, &mut visited),\n+                Some(FoldingRangeKind::Imports),\n+            ),\n+            _ => (None, None),\n+        };\n+\n+        match range_and_kind {\n+            (Some(range), Some(kind)) => {\n+                let range = range.conv_with(&line_index);\n+                res.push(FoldingRange {\n+                    start_line: range.start.line,\n+                    start_character: Some(range.start.character),\n+                    end_line: range.end.line,\n+                    end_character: Some(range.start.character),\n+                    kind: Some(kind),\n+                });\n+            }\n+            _ => {}\n+        }\n+    }\n+\n+    if res.is_empty() {\n+        Ok(None)\n+    } else {\n+        Ok(Some(res))\n+    }\n+}\n+\n+fn contiguous_range_for<'a>(\n+    kind: SyntaxKind,\n+    node: SyntaxNodeRef<'a>,\n+    visited: &mut HashSet<SyntaxNodeRef<'a>>,\n+) -> Option<TextRange> {\n+    visited.insert(node);\n+\n+    let left = node;\n+    let mut right = node;\n+    for node in siblings(node, Direction::Forward) {\n+        visited.insert(node);\n+        match node.kind() {\n+            SyntaxKind::WHITESPACE if !node.leaf_text().unwrap().as_str().contains(\"\\n\\n\") => (),\n+            k => {\n+                if k == kind {\n+                    right = node\n+                } else {\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+    if left != right {\n+        Some(TextRange::from_to(\n+            left.range().start(),\n+            right.range().end(),\n+        ))\n+    } else {\n+        None\n+    }\n+}\n+\n pub fn handle_code_action(\n     world: ServerWorld,\n     params: req::CodeActionParams,"}, {"sha": "abc58b70ec807bffe0185c670337fbcaca2a6005", "filename": "crates/ra_lsp_server/src/main_loop/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b2f1b48f86d59c3b746b72a14192f75419a84/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b2f1b48f86d59c3b746b72a14192f75419a84/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs?ref=bd2b2f1b48f86d59c3b746b72a14192f75419a84", "patch": "@@ -253,6 +253,7 @@ fn on_request(\n         .on::<req::DecorationsRequest>(handlers::handle_decorations)?\n         .on::<req::Completion>(handlers::handle_completion)?\n         .on::<req::CodeActionRequest>(handlers::handle_code_action)?\n+        .on::<req::FoldingRangeRequest>(handlers::handle_folding_range)?\n         .finish();\n     match req {\n         Ok((id, handle)) => {"}]}