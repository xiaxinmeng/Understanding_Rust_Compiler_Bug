{"sha": "33fb1c501c95b9089b67c079aa79b50f1adedfe5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZmIxYzUwMWM5NWI5MDg5YjY3YzA3OWFhNzliNTBmMWFkZWRmZTU=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-05-14T00:09:30Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-05-21T16:52:05Z"}, "message": "Add FAQ for NLL migration", "tree": {"sha": "b9b69fffaa661081632c414bd2812273ff9af8c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9b69fffaa661081632c414bd2812273ff9af8c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33fb1c501c95b9089b67c079aa79b50f1adedfe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33fb1c501c95b9089b67c079aa79b50f1adedfe5", "html_url": "https://github.com/rust-lang/rust/commit/33fb1c501c95b9089b67c079aa79b50f1adedfe5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33fb1c501c95b9089b67c079aa79b50f1adedfe5/comments", "author": null, "committer": null, "parents": [{"sha": "50a0defd5a93523067ef239936cc2e0755220904", "url": "https://api.github.com/repos/rust-lang/rust/commits/50a0defd5a93523067ef239936cc2e0755220904", "html_url": "https://github.com/rust-lang/rust/commit/50a0defd5a93523067ef239936cc2e0755220904"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "cf02878ec82ed28db372f7877d2b2c1626c9781c", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -439,10 +439,11 @@ fn downgrade_if_error(diag: &mut Diagnostic) {\n         diag.warn(\n             \"this error has been downgraded to a warning for backwards \\\n             compatibility with previous releases\",\n-        );\n-        diag.warn(\n+        ).warn(\n             \"this represents potential undefined behavior in your code and \\\n             this warning will become a hard error in the future\",\n+        ).note(\n+            \"for more information, try `rustc --explain E0729`\"\n         );\n     }\n }"}, {"sha": "4807782c66347e55b8321b84b695be61ba6de47e", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -2424,6 +2424,38 @@ const fn foo() -> impl T {\n ```\n \"##,\n \n+E0729: r##\"\n+Support for Non-Lexical Lifetimes (NLL) has been included in the Rust compiler\n+since 1.31, and has been enabled on the 2015 edition since 1.36. The new borrow\n+checker for NLL uncovered some bugs in the old borrow checker, which in some\n+cases allowed unsound code to compile, resulting in memory safety issues.\n+\n+### What do I do?\n+\n+Change your code so the warning does no longer trigger. For backwards\n+compatibility, this unsound code may still compile (with a warning) right now.\n+However, at some point in the future, the compiler will no longer accept this\n+code and will throw a hard error.\n+\n+### Shouldn't you fix the old borrow checker?\n+\n+The old borrow checker has known soundness issues that are basically impossible\n+to fix. The new NLL-based borrow checker is the fix.\n+\n+### Can I turn these warnings into errors by denying a lint?\n+\n+No.\n+\n+### When are these warnings going to turn into errors?\n+\n+No formal timeline for turning the warnings into errors has been set. See\n+[GitHub issue 58781](https://github.com/rust-lang/rust/issues/58781) for more\n+information.\n+\n+### Why do I get this message with code that doesn't involve borrowing?\n+\n+There are some known bugs that trigger this message.\n+\"##,\n }\n \n register_diagnostics! {"}, {"sha": "e2d3e417ac3ac8777abf79ae5fe69ddc520ded08", "filename": "src/test/ui/borrowck/borrowck-anon-fields-variant.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-anon-fields-variant.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -12,6 +12,7 @@ LL |     *a += 1;\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error[E0503]: cannot use `y` because it was mutably borrowed\n   --> $DIR/borrowck-anon-fields-variant.rs:37:7"}, {"sha": "14b9b50f0c32a6352eeed0c16209e1aabf13411c", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -341,6 +341,7 @@ LL |             drop(x);\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n warning[E0502]: cannot borrow `*block.current` as immutable because it is also borrowed as mutable\n   --> $DIR/borrowck-describe-lvalue.rs:227:33\n@@ -355,6 +356,7 @@ LL |             drop(x);\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error[E0382]: use of moved value: `x`\n   --> $DIR/borrowck-describe-lvalue.rs:282:22"}, {"sha": "461fb7d11a58aa4f4f986b11607ec1c659190331", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.edition.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -6,4 +6,5 @@ LL |                 (|| { let bar = foo; bar.take() })();\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n "}, {"sha": "461fb7d11a58aa4f4f986b11607ec1c659190331", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.zflag.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -6,4 +6,5 @@ LL |                 (|| { let bar = foo; bar.take() })();\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n "}, {"sha": "ac6bed6137fa304577dd009cb862b0e3cf908be8", "filename": "src/test/ui/borrowck/borrowck-mutate-in-guard.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -28,6 +28,7 @@ LL |         Enum::A(_) if { x = Enum::B(false); false } => 1,\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n warning[E0510]: cannot mutably borrow `x` in match guard\n   --> $DIR/borrowck-mutate-in-guard.rs:15:33\n@@ -40,6 +41,7 @@ LL |         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "2ca76667bd118fb5c1bc2a95c329ad4d347594d4", "filename": "src/test/ui/consts/const_let_refutable.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_let_refutable.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -21,6 +21,7 @@ LL |     a + b\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n warning[E0381]: use of possibly uninitialized variable: `b`\n   --> $DIR/const_let_refutable.rs:4:9\n@@ -30,6 +31,7 @@ LL |     a + b\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "93b57bc24a82f0cbba7ed9527b7c44a4771860d4", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -297,6 +297,7 @@ LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:144:41"}, {"sha": "9ded93c16727ba5e881e22f37e1e56ffafc360e5", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_dyn.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -27,6 +27,7 @@ LL | const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "9911dd4683b6664a69b47d9e7b3a85fb6eb96194", "filename": "src/test/ui/empty/empty-never-array.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fempty%2Fempty-never-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fempty%2Fempty-never-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-never-array.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -19,6 +19,7 @@ LL |     u\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: aborting due to previous error\n "}, {"sha": "37542d52dc2ce10dbe8dcf474f42e7497b0c34f6", "filename": "src/test/ui/feature-gates/feature-gate-nll.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-nll.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -11,6 +11,7 @@ LL |     m;\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: compilation successful\n   --> $DIR/feature-gate-nll.rs:10:1"}, {"sha": "7b11d85ead8749fe86741c4ed9a3577e9c174e0a", "filename": "src/test/ui/issues/issue-15381.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-15381.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-15381.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15381.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -12,6 +12,7 @@ LL |         println!(\"y={}\", y);\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: aborting due to previous error\n "}, {"sha": "28aaa2a797e056262772e32e0a1aa527460c4807", "filename": "src/test/ui/issues/issue-40510-1.migrate.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40510-1.migrate.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -10,6 +10,7 @@ LL |         &mut x\n    = note: ...therefore, they cannot allow references to captured variables to escape\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: compilation successful\n   --> $DIR/issue-40510-1.rs:20:1"}, {"sha": "f00690efc312cff1fe54c06f34ed52523ed8f867", "filename": "src/test/ui/issues/issue-40510-3.migrate.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40510-3.migrate.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -12,6 +12,7 @@ LL | |         }\n    = note: ...therefore, they cannot allow references to captured variables to escape\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: compilation successful\n   --> $DIR/issue-40510-3.rs:22:1"}, {"sha": "479b724ad18f153411b4e9888f5d0cd7f62f4e2a", "filename": "src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.migrate.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -11,6 +11,7 @@ LL | }\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n warning[E0713]: borrow may still be in use when destructor runs\n   --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:62:5\n@@ -25,6 +26,7 @@ LL | }\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n warning[E0713]: borrow may still be in use when destructor runs\n   --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:73:5\n@@ -39,6 +41,7 @@ LL | }\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: compilation successful\n   --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:80:1"}, {"sha": "d5f1af88e133a002acc3de6855887de669f1bdcc", "filename": "src/test/ui/issues/issue-49824.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-49824.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fissues%2Fissue-49824.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49824.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -15,6 +15,7 @@ LL | |         }\n    = note: ...therefore, they cannot allow references to captured variables to escape\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: compilation successful\n   --> $DIR/issue-49824.rs:6:1"}, {"sha": "70452a930ee70ec8af606d70fc453cf999addd48", "filename": "src/test/ui/pattern/pattern-bindings-after-at.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fpattern%2Fpattern-bindings-after-at.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fpattern%2Fpattern-bindings-after-at.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-bindings-after-at.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -18,6 +18,7 @@ LL |             **z = None;\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: aborting due to previous error\n "}, {"sha": "9203f893fdbf777bd4d2278d3265e4dc04c06517", "filename": "src/test/ui/recursion/recursive-types-are-not-uninhabited.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Frecursion%2Frecursive-types-are-not-uninhabited.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Frecursion%2Frecursive-types-are-not-uninhabited.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Frecursive-types-are-not-uninhabited.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -12,6 +12,7 @@ LL |     x\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error: aborting due to previous error\n "}, {"sha": "6869109e67fc06c4deba374cfefc7b91c92781eb", "filename": "src/test/ui/thread-local-in-ctfe.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fthread-local-in-ctfe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33fb1c501c95b9089b67c079aa79b50f1adedfe5/src%2Ftest%2Fui%2Fthread-local-in-ctfe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fthread-local-in-ctfe.stderr?ref=33fb1c501c95b9089b67c079aa79b50f1adedfe5", "patch": "@@ -20,6 +20,7 @@ LL | static C: &u32 = &A;\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error[E0625]: thread-local statics cannot be accessed at compile-time\n   --> $DIR/thread-local-in-ctfe.rs:15:16\n@@ -43,6 +44,7 @@ LL | const E: &u32 = &A;\n    |\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n error[E0625]: thread-local statics cannot be accessed at compile-time\n   --> $DIR/thread-local-in-ctfe.rs:25:5"}]}