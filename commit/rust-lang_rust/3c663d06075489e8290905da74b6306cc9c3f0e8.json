{"sha": "3c663d06075489e8290905da74b6306cc9c3f0e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNjYzZDA2MDc1NDg5ZTgyOTA5MDVkYTc0YjYzMDZjYzljM2YwZTg=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-01-31T14:45:59Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:16Z"}, "message": "Tidy fix", "tree": {"sha": "2975cd1a8c72559e78a8d8da0b297f6684e7ebdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2975cd1a8c72559e78a8d8da0b297f6684e7ebdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c663d06075489e8290905da74b6306cc9c3f0e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53gACgkQpp+NIls6\n19nfVA//QFUwjafGi6T9Gq51sDasku2RbuPrXv5xfmMYPZZhQvrJpSnytwKPFRfJ\nUAzWcaZ52FHUT7T+3FD/coU1TPX6AKBDVc+Co6Q1GVns4sPBUav5lyxR+tJ9dzqE\nAsfKEDbFMtMCn7kVa2FK9eQB7x3vDqVtMkzUytQEV5bmXr5ulbfxi2cyCjnMhlxw\n7K0QXdgCFjrFikNhgDHZ8aqJFFF5hgCfioEw6STSrx+xVVlZTe94i42s9BepWNz2\nkjfpIkH8pNPCB15xOG3gtbmSi0vvp42vw/GmdHgbKAocDQycytWELBiEfiVmy7m9\npObD079PviPuxynyPcE75AlLejbH9VMfkc54e+sP67eQ5YFSuwXWjxLSjTIQrGz4\nIrLd+YScxzL3u9X8pLdAvNUi/xRd0Dm8lIvzFxLNyOVwIdzDLNWMywCXPeGkCAQo\nf4/7yz5hqfbkusEltIYMwCc/8yUc2W3ADkvxk8hgImWY7k7MORkBbYb8sYWWPHCx\nIbS1SmZl156ViHq1rk0bj9sVYHZG7Gr9KsNJzLfWAdZoUWf2QHmn1uyvD8dxuWtb\nO7fDANFrigMw3bKnTyQ4lAxK6WR8zLqxDtMO97xqMWNEdxAcgAx1AgPJWt4mxQKM\nl0GHRxvAKmMps38PWKHBg0jgGlZRIp1C+YhXy1N1ED4OdKBThEY=\n=8sA+\n-----END PGP SIGNATURE-----", "payload": "tree 2975cd1a8c72559e78a8d8da0b297f6684e7ebdc\nparent 8500c2fab2a7e93a4a918417c4f01d136247ef89\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1517409959 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494456 +0100\n\nTidy fix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c663d06075489e8290905da74b6306cc9c3f0e8", "html_url": "https://github.com/rust-lang/rust/commit/3c663d06075489e8290905da74b6306cc9c3f0e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c663d06075489e8290905da74b6306cc9c3f0e8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8500c2fab2a7e93a4a918417c4f01d136247ef89", "url": "https://api.github.com/repos/rust-lang/rust/commits/8500c2fab2a7e93a4a918417c4f01d136247ef89", "html_url": "https://github.com/rust-lang/rust/commit/8500c2fab2a7e93a4a918417c4f01d136247ef89"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "bb2c7977f265b7dc0e6cc382ae6c72cba5f6de05", "filename": "src/librustc/traits/fulfill.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=3c663d06075489e8290905da74b6306cc9c3f0e8", "patch": "@@ -536,7 +536,8 @@ fn process_predicate<'a, 'gcx, 'tcx>(\n                             } else {\n                                 Err(CodeSelectionError(ConstEvalFailure(ConstEvalErr {\n                                     span: obligation.cause.span,\n-                                    kind: ErrKind::UnimplementedConstVal(\"could not resolve\").into(),\n+                                    kind: ErrKind::UnimplementedConstVal(\"could not resolve\")\n+                                        .into(),\n                                 })))\n                             }\n                         },"}, {"sha": "8c0b227899a3b2fa263ba5e0e6d8f1592f988723", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=3c663d06075489e8290905da74b6306cc9c3f0e8", "patch": "@@ -42,6 +42,7 @@ pub enum PatternError {\n     StaticInPattern(Span),\n     FloatBug,\n     NonConstPath(Span),\n+    AssociatedConstInPattern(Span),\n }\n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "071103c600019a22c0cfa6b26eb9a241dc8f7d50", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=3c663d06075489e8290905da74b6306cc9c3f0e8", "patch": "@@ -457,7 +457,7 @@ pub fn const_eval_provider<'a, 'tcx>(\n             },\n         };\n         let ty = tcx.type_of(def_id);\n-        let layout = (tcx, key.param_env).layout_of(ty).unwrap();\n+        let layout = tcx.layout_of(key.param_env.and(ty)).unwrap();\n         let ptr = MemoryPointer::new(id, 0);\n         return Ok(tcx.mk_const(ty::Const {\n             val: ConstVal::Value(Value::ByRef(ptr.into(), layout.align)),"}, {"sha": "b43227c9f1a220fa688d23a97d6cbe0baa5490ea", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=3c663d06075489e8290905da74b6306cc9c3f0e8", "patch": "@@ -17,7 +17,6 @@ use rustc::mir::{Constant, Literal, Location, Place, Mir, Operand, Rvalue, Local\n use rustc::mir::{NullOp, StatementKind, Statement, BasicBlock, LocalKind};\n use rustc::mir::{TerminatorKind, ClearCrossCrate, SourceInfo, BinOp};\n use rustc::mir::visit::{Visitor, PlaceContext};\n-use rustc::ty::layout::LayoutOf;\n use rustc::middle::const_val::ConstVal;\n use rustc::ty::{TyCtxt, self, Instance};\n use rustc::mir::interpret::{Value, PrimVal, GlobalId};\n@@ -237,7 +236,7 @@ impl<'b, 'a, 'tcx:'b> ConstPropagator<'b, 'a, 'tcx> {\n                 let r = ecx.value_to_primval(ValTy { value: right.0, ty: right.1 }).ok()?;\n                 if op == BinOp::Shr || op == BinOp::Shl {\n                     let param_env = self.tcx.param_env(self.source.def_id);\n-                    let bits = (self.tcx, param_env).layout_of(place_ty).unwrap().size.bits();\n+                    let bits = self.tcx.layout_of(param_env.and(place_ty)).unwrap().size.bits();\n                     if r.to_bytes().ok().map_or(false, |b| b >= bits as u128) {\n                         let scope_info = match self.mir.visibility_scope_info {\n                             ClearCrossCrate::Set(ref data) => data,\n@@ -286,8 +285,7 @@ impl<'b, 'a, 'tcx:'b> ConstPropagator<'b, 'a, 'tcx> {\n fn type_size_of<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                           param_env: ty::ParamEnv<'tcx>,\n                           ty: ty::Ty<'tcx>) -> Option<u64> {\n-    use rustc::ty::layout::LayoutOf;\n-    (tcx, param_env).layout_of(ty).ok().map(|layout| layout.size.bytes())\n+    tcx.layout_of(param_env.and(ty)).ok().map(|layout| layout.size.bytes())\n }\n \n struct CanConstProp {"}, {"sha": "19085ff039ec5aa5aeded25ca1b1a137a0831581", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c663d06075489e8290905da74b6306cc9c3f0e8/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=3c663d06075489e8290905da74b6306cc9c3f0e8", "patch": "@@ -101,7 +101,6 @@ use rustc::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::maps::Providers;\n use rustc::ty::util::{Representability, IntTypeExt, Discr};\n-use rustc::ty::layout::LayoutOf;\n use errors::{DiagnosticBuilder, DiagnosticId};\n \n use require_c_abi_if_variadic;"}]}