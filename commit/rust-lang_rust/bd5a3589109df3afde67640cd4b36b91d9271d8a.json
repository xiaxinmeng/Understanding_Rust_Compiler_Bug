{"sha": "bd5a3589109df3afde67640cd4b36b91d9271d8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNWEzNTg5MTA5ZGYzYWZkZTY3NjQwY2Q0YjM2YjkxZDkyNzFkOGE=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-21T17:20:38Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-21T17:20:38Z"}, "message": "Fix where clauses using fully qualified path syntax", "tree": {"sha": "344250a85284d1b3c31e7a3111ef0f43c3833dbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/344250a85284d1b3c31e7a3111ef0f43c3833dbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd5a3589109df3afde67640cd4b36b91d9271d8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd5a3589109df3afde67640cd4b36b91d9271d8a", "html_url": "https://github.com/rust-lang/rust/commit/bd5a3589109df3afde67640cd4b36b91d9271d8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd5a3589109df3afde67640cd4b36b91d9271d8a/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e086cc8db5edbf38756abca25c8bcc3334a596ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/e086cc8db5edbf38756abca25c8bcc3334a596ff", "html_url": "https://github.com/rust-lang/rust/commit/e086cc8db5edbf38756abca25c8bcc3334a596ff"}], "stats": {"total": 148, "additions": 139, "deletions": 9}, "files": [{"sha": "7db25bebadf7061d53a3b05c2e6c9dd2e4a633ab", "filename": "crates/ra_syntax/src/grammar/type_params.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=bd5a3589109df3afde67640cd4b36b91d9271d8a", "patch": "@@ -96,6 +96,7 @@ pub(super) fn bounds_without_colon(p: &mut Parser) {\n //    'a: 'b + 'c,\n //    T: Clone + Copy + 'static,\n //    Iterator::Item: 'a,\n+//    <T as Iterator>::Item: 'a\n // {}\n pub(super) fn opt_where_clause(p: &mut Parser) {\n     if !p.at(WHERE_KW) {\n@@ -104,7 +105,11 @@ pub(super) fn opt_where_clause(p: &mut Parser) {\n     let m = p.start();\n     p.bump();\n     loop {\n-        if !(paths::is_path_start(p) || p.current() == LIFETIME || p.current() == FOR_KW) {\n+        if !(paths::is_path_start(p)\n+            || p.current() == LIFETIME\n+            || p.current() == FOR_KW\n+            || p.current() == L_ANGLE)\n+        {\n             break;\n         }\n         where_predicate(p);"}, {"sha": "19d7e571b0ca692aee2407a1e8165956801da932", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0056_where_clause.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0056_where_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0056_where_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0056_where_clause.rs?ref=bd5a3589109df3afde67640cd4b36b91d9271d8a", "patch": "@@ -3,4 +3,5 @@ where\n    'a: 'b + 'c,\n    T: Clone + Copy + 'static,\n    Iterator::Item: 'a,\n+   <T as Iterator>::Item: 'a\n {}"}, {"sha": "68485dc0bab83cd5e4039ef1ce86670b39ff9584", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0056_where_clause.txt", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0056_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0056_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0056_where_clause.txt?ref=bd5a3589109df3afde67640cd4b36b91d9271d8a", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 87)\n-  FN_DEF@[0; 86)\n+SOURCE_FILE@[0; 116)\n+  FN_DEF@[0; 115)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 87)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n     WHITESPACE@[8; 9)\n-    WHERE_CLAUSE@[9; 83)\n+    WHERE_CLAUSE@[9; 112)\n       WHERE_KW@[9; 14)\n       WHITESPACE@[14; 18)\n       WHERE_PRED@[18; 29)\n@@ -64,8 +64,36 @@ SOURCE_FILE@[0; 87)\n         WHITESPACE@[79; 80)\n         LIFETIME@[80; 82) \"'a\"\n       COMMA@[82; 83)\n-    WHITESPACE@[83; 84)\n-    BLOCK@[84; 86)\n-      L_CURLY@[84; 85)\n-      R_CURLY@[85; 86)\n-  WHITESPACE@[86; 87)\n+      WHITESPACE@[83; 87)\n+      WHERE_PRED@[87; 112)\n+        PATH_TYPE@[87; 108)\n+          PATH@[87; 108)\n+            PATH@[87; 102)\n+              PATH_SEGMENT@[87; 102)\n+                L_ANGLE@[87; 88)\n+                PATH_TYPE@[88; 89)\n+                  PATH@[88; 89)\n+                    PATH_SEGMENT@[88; 89)\n+                      NAME_REF@[88; 89)\n+                        IDENT@[88; 89) \"T\"\n+                WHITESPACE@[89; 90)\n+                AS_KW@[90; 92)\n+                WHITESPACE@[92; 93)\n+                PATH_TYPE@[93; 101)\n+                  PATH@[93; 101)\n+                    PATH_SEGMENT@[93; 101)\n+                      NAME_REF@[93; 101)\n+                        IDENT@[93; 101) \"Iterator\"\n+                R_ANGLE@[101; 102)\n+            COLONCOLON@[102; 104)\n+            PATH_SEGMENT@[104; 108)\n+              NAME_REF@[104; 108)\n+                IDENT@[104; 108) \"Item\"\n+        COLON@[108; 109)\n+        WHITESPACE@[109; 110)\n+        LIFETIME@[110; 112) \"'a\"\n+    WHITESPACE@[112; 113)\n+    BLOCK@[113; 115)\n+      L_CURLY@[113; 114)\n+      R_CURLY@[114; 115)\n+  WHITESPACE@[115; 116)"}, {"sha": "6da27933ece5682e07cc92e6747982f3f4a08c3a", "filename": "crates/ra_syntax/tests/data/parser/ok/0036_fully_qualified.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0036_fully_qualified.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0036_fully_qualified.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0036_fully_qualified.rs?ref=bd5a3589109df3afde67640cd4b36b91d9271d8a", "patch": "@@ -0,0 +1,8 @@\n+// https://github.com/rust-analyzer/rust-analyzer/issues/311\n+\n+pub fn foo<S: Iterator>() -> String\n+where\n+    <S as Iterator>::Item: Eq,\n+{\n+    \"\".to_owned()\n+}"}, {"sha": "208e5e51c4eb39753a3788abea7cfad388bd411f", "filename": "crates/ra_syntax/tests/data/parser/ok/0036_fully_qualified.txt", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0036_fully_qualified.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bd5a3589109df3afde67640cd4b36b91d9271d8a/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0036_fully_qualified.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0036_fully_qualified.txt?ref=bd5a3589109df3afde67640cd4b36b91d9271d8a", "patch": "@@ -0,0 +1,88 @@\n+SOURCE_FILE@[0; 157)\n+  COMMENT@[0; 60)\n+  WHITESPACE@[60; 62)\n+  FN_DEF@[62; 156)\n+    VISIBILITY@[62; 65)\n+      PUB_KW@[62; 65)\n+    WHITESPACE@[65; 66)\n+    FN_KW@[66; 68)\n+    WHITESPACE@[68; 69)\n+    NAME@[69; 72)\n+      IDENT@[69; 72) \"foo\"\n+    TYPE_PARAM_LIST@[72; 85)\n+      L_ANGLE@[72; 73)\n+      TYPE_PARAM@[73; 84)\n+        NAME@[73; 74)\n+          IDENT@[73; 74) \"S\"\n+        COLON@[74; 75)\n+        WHITESPACE@[75; 76)\n+        PATH_TYPE@[76; 84)\n+          PATH@[76; 84)\n+            PATH_SEGMENT@[76; 84)\n+              NAME_REF@[76; 84)\n+                IDENT@[76; 84) \"Iterator\"\n+      R_ANGLE@[84; 85)\n+    PARAM_LIST@[85; 87)\n+      L_PAREN@[85; 86)\n+      R_PAREN@[86; 87)\n+    WHITESPACE@[87; 88)\n+    RET_TYPE@[88; 97)\n+      THIN_ARROW@[88; 90)\n+      WHITESPACE@[90; 91)\n+      PATH_TYPE@[91; 97)\n+        PATH@[91; 97)\n+          PATH_SEGMENT@[91; 97)\n+            NAME_REF@[91; 97)\n+              IDENT@[91; 97) \"String\"\n+    WHITESPACE@[97; 98)\n+    WHERE_CLAUSE@[98; 134)\n+      WHERE_KW@[98; 103)\n+      WHITESPACE@[103; 108)\n+      WHERE_PRED@[108; 133)\n+        PATH_TYPE@[108; 129)\n+          PATH@[108; 129)\n+            PATH@[108; 123)\n+              PATH_SEGMENT@[108; 123)\n+                L_ANGLE@[108; 109)\n+                PATH_TYPE@[109; 110)\n+                  PATH@[109; 110)\n+                    PATH_SEGMENT@[109; 110)\n+                      NAME_REF@[109; 110)\n+                        IDENT@[109; 110) \"S\"\n+                WHITESPACE@[110; 111)\n+                AS_KW@[111; 113)\n+                WHITESPACE@[113; 114)\n+                PATH_TYPE@[114; 122)\n+                  PATH@[114; 122)\n+                    PATH_SEGMENT@[114; 122)\n+                      NAME_REF@[114; 122)\n+                        IDENT@[114; 122) \"Iterator\"\n+                R_ANGLE@[122; 123)\n+            COLONCOLON@[123; 125)\n+            PATH_SEGMENT@[125; 129)\n+              NAME_REF@[125; 129)\n+                IDENT@[125; 129) \"Item\"\n+        COLON@[129; 130)\n+        WHITESPACE@[130; 131)\n+        PATH_TYPE@[131; 133)\n+          PATH@[131; 133)\n+            PATH_SEGMENT@[131; 133)\n+              NAME_REF@[131; 133)\n+                IDENT@[131; 133) \"Eq\"\n+      COMMA@[133; 134)\n+    WHITESPACE@[134; 135)\n+    BLOCK@[135; 156)\n+      L_CURLY@[135; 136)\n+      WHITESPACE@[136; 141)\n+      METHOD_CALL_EXPR@[141; 154)\n+        LITERAL@[141; 143)\n+          STRING@[141; 143)\n+        DOT@[143; 144)\n+        NAME_REF@[144; 152)\n+          IDENT@[144; 152) \"to_owned\"\n+        ARG_LIST@[152; 154)\n+          L_PAREN@[152; 153)\n+          R_PAREN@[153; 154)\n+      WHITESPACE@[154; 155)\n+      R_CURLY@[155; 156)\n+  WHITESPACE@[156; 157)"}]}