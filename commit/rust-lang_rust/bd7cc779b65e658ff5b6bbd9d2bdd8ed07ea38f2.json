{"sha": "bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkN2NjNzc5YjY1ZTY1OGZmNWI2YmJkOWQyYmRkOGVkMDdlYTM4ZjI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-06-16T23:51:55Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-06-16T23:51:55Z"}, "message": "Make the `next` variable mutable to allow for ref mut in for patterns.", "tree": {"sha": "bee5262c5fee95d32c95b620df60d279742fa75a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bee5262c5fee95d32c95b620df60d279742fa75a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2", "html_url": "https://github.com/rust-lang/rust/commit/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09bc09201ca02c9bdbcba1c72610209c3598bca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/09bc09201ca02c9bdbcba1c72610209c3598bca1", "html_url": "https://github.com/rust-lang/rust/commit/09bc09201ca02c9bdbcba1c72610209c3598bca1"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "4b8ee8d8aecfb707b92e40062a7e56fb79adc7da", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2", "patch": "@@ -2170,12 +2170,12 @@ impl<'a> LoweringContext<'a> {\n                 //     let result = match ::std::iter::IntoIterator::into_iter(<head>) {\n                 //       mut iter => {\n                 //         [opt_ident]: loop {\n-                //           let next;\n+                //           let mut _next;\n                 //           match ::std::iter::Iterator::next(&mut iter) {\n-                //             ::std::option::Option::Some(val) => next = val,\n+                //             ::std::option::Option::Some(val) => _next = val,\n                 //             ::std::option::Option::None => break\n                 //           };\n-                //           let <pat> = next;\n+                //           let <pat> = _next;\n                 //           StmtExpr(<body>);\n                 //         }\n                 //       }\n@@ -2188,8 +2188,8 @@ impl<'a> LoweringContext<'a> {\n \n                 let iter = self.str_to_ident(\"iter\");\n \n-                let next_ident = self.str_to_ident(\"next\");\n-                let next_pat = self.pat_ident(e.span, next_ident);\n+                let next_ident = self.str_to_ident(\"_next\");\n+                let next_pat = self.pat_ident_binding_mode(e.span, next_ident, hir::BindByValue(hir::MutMutable));\n \n                 // `::std::option::Option::Some(val) => next = val`\n                 let pat_arm = {\n@@ -2235,13 +2235,13 @@ impl<'a> LoweringContext<'a> {\n \n                 let next_expr = P(self.expr_ident(e.span, next_ident, next_pat.id));\n \n-                // `let next`\n+                // `let mut _next`\n                 let next_let = self.stmt_let_pat(e.span,\n                     None,\n                     next_pat,\n                     hir::LocalSource::ForLoopDesugar);\n \n-                // `let <pat> = next`\n+                // `let <pat> = _next`\n                 let pat = self.lower_pat(pat);\n                 let pat_let = self.stmt_let_pat(e.span,\n                     Some(next_expr),"}, {"sha": "14ce23b07242c84d378af3dbe54c37e897464096", "filename": "src/test/run-pass/for-loop-mut-ref-element.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-mut-ref-element.rs?ref=bd7cc779b65e658ff5b6bbd9d2bdd8ed07ea38f2", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests that for loops can bind elements as mutable references\n+\n+fn main() {\n+    for ref mut _a in std::iter::once(true) {}\n+}\n\\ No newline at end of file"}]}