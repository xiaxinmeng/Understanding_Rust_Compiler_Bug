{"sha": "5bbbee5ba7bfa9d9f527f929e34231c9c5308923", "node_id": "C_kwDOAAsO6NoAKDViYmJlZTViYTdiZmE5ZDlmNTI3ZjkyOWUzNDIzMWM5YzUzMDg5MjM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-18T01:51:01Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-18T02:57:11Z"}, "message": "Add two useful assertions.", "tree": {"sha": "12196a57917b6704ca875b4ec256aab78028b7f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12196a57917b6704ca875b4ec256aab78028b7f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bbbee5ba7bfa9d9f527f929e34231c9c5308923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bbbee5ba7bfa9d9f527f929e34231c9c5308923", "html_url": "https://github.com/rust-lang/rust/commit/5bbbee5ba7bfa9d9f527f929e34231c9c5308923", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bbbee5ba7bfa9d9f527f929e34231c9c5308923/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "285fa7ecd05dcbfdaf2faaf20400f5f92b39b3c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/285fa7ecd05dcbfdaf2faaf20400f5f92b39b3c6", "html_url": "https://github.com/rust-lang/rust/commit/285fa7ecd05dcbfdaf2faaf20400f5f92b39b3c6"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "7e5c2402b90b191c7761cee5ca67c2cbfeb6e5a0", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bbbee5ba7bfa9d9f527f929e34231c9c5308923/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bbbee5ba7bfa9d9f527f929e34231c9c5308923/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=5bbbee5ba7bfa9d9f527f929e34231c9c5308923", "patch": "@@ -524,6 +524,7 @@ fn parse_tt_inner<'root, 'tt>(\n             // then we could be at the end of a sequence or at the beginning of the next\n             // repetition.\n             if let Some(repetition) = &item.repetition {\n+                debug_assert!(idx <= len + 1);\n                 debug_assert!(matches!(item.top_elts, Tt(TokenTree::Sequence(..))));\n \n                 // At this point, regardless of whether there is a separator, we should add all\n@@ -569,6 +570,7 @@ fn parse_tt_inner<'root, 'tt>(\n             } else {\n                 // If we are not in a repetition, then being at the end of a matcher means that we\n                 // have reached the potential end of the input.\n+                debug_assert_eq!(idx, len);\n                 eof_items = match eof_items {\n                     EofItems::None => EofItems::One(item),\n                     EofItems::One(_) | EofItems::Multiple => EofItems::Multiple,"}]}