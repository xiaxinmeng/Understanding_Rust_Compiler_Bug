{"sha": "1a74f25f9026f152fdba6f85ec617c02205d98eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNzRmMjVmOTAyNmYxNTJmZGJhNmY4NWVjNjE3YzAyMjA1ZDk4ZWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-23T13:18:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-23T13:18:33Z"}, "message": "Fix panic context", "tree": {"sha": "1ea6cbcb393def5f55a80b6aeb17d5ffbb6ec707", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ea6cbcb393def5f55a80b6aeb17d5ffbb6ec707"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a74f25f9026f152fdba6f85ec617c02205d98eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a74f25f9026f152fdba6f85ec617c02205d98eb", "html_url": "https://github.com/rust-lang/rust/commit/1a74f25f9026f152fdba6f85ec617c02205d98eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a74f25f9026f152fdba6f85ec617c02205d98eb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31db677a948cfad7c0651fb3cd45a2cf577bb95f", "url": "https://api.github.com/repos/rust-lang/rust/commits/31db677a948cfad7c0651fb3cd45a2cf577bb95f", "html_url": "https://github.com/rust-lang/rust/commit/31db677a948cfad7c0651fb3cd45a2cf577bb95f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7a87515e9aef0cac14177a68ce281c82886c1b36", "filename": "crates/rust-analyzer/src/dispatch.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1a74f25f9026f152fdba6f85ec617c02205d98eb/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a74f25f9026f152fdba6f85ec617c02205d98eb/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs?ref=1a74f25f9026f152fdba6f85ec617c02205d98eb", "patch": "@@ -34,7 +34,7 @@ impl<'a> RequestDispatcher<'a> {\n         };\n         let world = panic::AssertUnwindSafe(&mut *self.global_state);\n         let response = panic::catch_unwind(move || {\n-            stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n+            let _pctx = stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n             let result = f(world.0, params);\n             result_to_response::<R>(id, result)\n         })\n@@ -64,7 +64,7 @@ impl<'a> RequestDispatcher<'a> {\n             let world = self.global_state.snapshot();\n \n             move || {\n-                let _ctx =\n+                let _pctx =\n                     stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n                 let result = f(world, params);\n                 Task::Response(result_to_response::<R>(id, result))\n@@ -160,7 +160,7 @@ impl<'a> NotificationDispatcher<'a> {\n                 return Ok(self);\n             }\n         };\n-        stdx::panic_context::enter(format!(\"notification: {}\", N::METHOD));\n+        let _pctx = stdx::panic_context::enter(format!(\"notification: {}\", N::METHOD));\n         f(self.global_state, params)?;\n         Ok(self)\n     }"}, {"sha": "8d51e20d39efc5acc0684490277036ea2fe3bc74", "filename": "crates/stdx/src/panic_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a74f25f9026f152fdba6f85ec617c02205d98eb/crates%2Fstdx%2Fsrc%2Fpanic_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a74f25f9026f152fdba6f85ec617c02205d98eb/crates%2Fstdx%2Fsrc%2Fpanic_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Fpanic_context.rs?ref=1a74f25f9026f152fdba6f85ec617c02205d98eb", "patch": "@@ -4,7 +4,7 @@\n \n use std::{cell::RefCell, panic, sync::Once};\n \n-pub fn enter(context: String) -> impl Drop {\n+pub fn enter(context: String) -> PanicContext {\n     static ONCE: Once = Once::new();\n     ONCE.call_once(PanicContext::init);\n \n@@ -13,7 +13,7 @@ pub fn enter(context: String) -> impl Drop {\n }\n \n #[must_use]\n-struct PanicContext {\n+pub struct PanicContext {\n     _priv: (),\n }\n "}]}