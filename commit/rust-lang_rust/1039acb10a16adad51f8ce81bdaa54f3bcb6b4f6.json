{"sha": "1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMzlhY2IxMGExNmFkYWQ1MWY4Y2U4MWJkYWE1NGYzYmNiNmI0ZjY=", "commit": {"author": {"name": "Andr\u00e9 Oliveira", "email": "p32blo@gmail.com", "date": "2021-08-09T07:01:42Z"}, "committer": {"name": "Andr\u00e9 Oliveira", "email": "p32blo@gmail.com", "date": "2021-08-10T13:43:55Z"}, "message": "Add more features to the rendering\n\n- Allow the zoom to go further than 10x\n- Adapt css to dark and high constrast themess\n- Use 'javascript/worker' for the wasm graphviz\n- Add Ctrl + LeftMouseClick to reset zoom", "tree": {"sha": "d2dacdd7e27830f5cb76a7e75a34b58504d291b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2dacdd7e27830f5cb76a7e75a34b58504d291b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6", "html_url": "https://github.com/rust-lang/rust/commit/1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6/comments", "author": {"login": "p32blo", "id": 6619062, "node_id": "MDQ6VXNlcjY2MTkwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6619062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p32blo", "html_url": "https://github.com/p32blo", "followers_url": "https://api.github.com/users/p32blo/followers", "following_url": "https://api.github.com/users/p32blo/following{/other_user}", "gists_url": "https://api.github.com/users/p32blo/gists{/gist_id}", "starred_url": "https://api.github.com/users/p32blo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p32blo/subscriptions", "organizations_url": "https://api.github.com/users/p32blo/orgs", "repos_url": "https://api.github.com/users/p32blo/repos", "events_url": "https://api.github.com/users/p32blo/events{/privacy}", "received_events_url": "https://api.github.com/users/p32blo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "p32blo", "id": 6619062, "node_id": "MDQ6VXNlcjY2MTkwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6619062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p32blo", "html_url": "https://github.com/p32blo", "followers_url": "https://api.github.com/users/p32blo/followers", "following_url": "https://api.github.com/users/p32blo/following{/other_user}", "gists_url": "https://api.github.com/users/p32blo/gists{/gist_id}", "starred_url": "https://api.github.com/users/p32blo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p32blo/subscriptions", "organizations_url": "https://api.github.com/users/p32blo/orgs", "repos_url": "https://api.github.com/users/p32blo/repos", "events_url": "https://api.github.com/users/p32blo/events{/privacy}", "received_events_url": "https://api.github.com/users/p32blo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a563e4a46a699aa0e77ed38f925b61d843a9d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a563e4a46a699aa0e77ed38f925b61d843a9d36", "html_url": "https://github.com/rust-lang/rust/commit/8a563e4a46a699aa0e77ed38f925b61d843a9d36"}], "stats": {"total": 77, "additions": 45, "deletions": 32}, "files": [{"sha": "726566bbe1c524ff7ffec73e606e1c05cea19c93", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 45, "deletions": 32, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=1039acb10a16adad51f8ce81bdaa54f3bcb6b4f6", "patch": "@@ -485,40 +485,53 @@ function crateGraph(ctx: Ctx, full: boolean): Cmd {\n \n         console.log(dot);\n \n-        let script_d3 = vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', 'd3', 'dist', 'd3.min.js'));\n-        let script_d3_gv = vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', 'd3-graphviz', 'build', 'd3-graphviz.min.js'));\n-        let script_wasm = vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', '@hpcc-js', 'wasm', 'dist', 'index.min.js'));\n-\n-        console.log(script_d3, script_d3_gv, script_wasm);\n+        let scripts = [\n+            { file: vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', 'd3', 'dist', 'd3.min.js')) },\n+            { file: vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', '@hpcc-js', 'wasm', 'dist', 'index.min.js')), worker: true },\n+            { file: vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', 'd3-graphviz', 'build', 'd3-graphviz.min.js')) },\n+        ]\n+        console.log(scripts);\n+\n+        const scripts_html = scripts.map(({ file, worker }) => {\n+            let uri = panel.webview.asWebviewUri(file);\n+            return `<script type=\"${worker ? \"javascript/worker\" : \"text/javascript\"}\" src=\"${uri}\"></script>`\n+        }).join(\"\\n\")\n \n         const html = `\n-        <!DOCTYPE html>\n-        <meta charset=\"utf-8\">\n-        <head>\n-            <style>\n-                body {\n-                    padding: 0px\n-                }\n-                ::-webkit-scrollbar {\n-                    display: none;\n-                }\n-            </style>\n-        </head>\n-        <body>\n-            <script src=\"${panel.webview.asWebviewUri(script_d3)}\"></script>\n-            <script src=\"${panel.webview.asWebviewUri(script_wasm)}\"></script>\n-            <script src=\"${panel.webview.asWebviewUri(script_d3_gv)}\"></script>\n-            <div id=\"graph\"></div>\n-            <script>\n-                d3.select(\"#graph\")\n-                  .graphviz()\n-                  .fit(true)\n-                  .width(window.innerWidth)\n-                  .height(window.innerHeight)\n-                  .renderDot(\\`${dot}\\`);\n-            </script>\n-        </body>\n-        `;\n+            <!DOCTYPE html>\n+            <meta charset=\"utf-8\">\n+            <head>\n+                <style>\n+                    /* Fill the entire view */\n+                    html, body { margin:0; padding:0; overflow:hidden }\n+                    svg { position:fixed; top:0; left:0; height:100%; width:100% }\n+\n+                    /* Disable the graphviz backgroud and fill the polygons */\n+                    .graph > polygon { display:none; }\n+                    :is(.node,.edge) polygon { fill: white; }\n+\n+                    /* Invert the line colours for dark themes */\n+                    body:not(.vscode-light) .edge path { stroke: white; }\n+                </style>\n+            </head>\n+            <body>\n+                ${scripts_html}\n+                <div id=\"graph\"></div>\n+                <script>\n+                    let graph = d3.select(\"#graph\")\n+                                  .graphviz()\n+                                  .fit(true)\n+                                  .zoomScaleExtent([0.1, Infinity])\n+                                  .renderDot(\\`${dot}\\`);\n+\n+                    d3.select(window).on(\"click\", (event) => {\n+                        if (event.ctrlKey) {\n+                            graph.resetZoom(d3.transition().duration(100));\n+                        }\n+                    });\n+                </script>\n+            </body>\n+            `;\n \n         console.log(html);\n "}]}