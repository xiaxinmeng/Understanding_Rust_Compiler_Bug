{"sha": "333264c956cc4d2d821b8707abc5657a0f1e1369", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMzI2NGM5NTZjYzRkMmQ4MjFiODcwN2FiYzU2NTdhMGYxZTEzNjk=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-02-10T07:13:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-10T07:13:18Z"}, "message": "clarify comment on drop glue", "tree": {"sha": "ec264302647aa4bcdfc8f2a694b94367fa8205ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec264302647aa4bcdfc8f2a694b94367fa8205ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/333264c956cc4d2d821b8707abc5657a0f1e1369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/333264c956cc4d2d821b8707abc5657a0f1e1369", "html_url": "https://github.com/rust-lang/rust/commit/333264c956cc4d2d821b8707abc5657a0f1e1369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/333264c956cc4d2d821b8707abc5657a0f1e1369/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e58f750a49ce1a160a4de36a01bddcb1f1b38d42", "url": "https://api.github.com/repos/rust-lang/rust/commits/e58f750a49ce1a160a4de36a01bddcb1f1b38d42", "html_url": "https://github.com/rust-lang/rust/commit/e58f750a49ce1a160a4de36a01bddcb1f1b38d42"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "835c7bca7f60f155350070382478b1fb1b25f378", "filename": "src/memory.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/333264c956cc4d2d821b8707abc5657a0f1e1369/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333264c956cc4d2d821b8707abc5657a0f1e1369/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=333264c956cc4d2d821b8707abc5657a0f1e1369", "patch": "@@ -120,8 +120,10 @@ pub enum Function<'tcx> {\n     Concrete(FunctionDefinition<'tcx>),\n     /// Glue required to call a regular function through a Fn(Mut|Once) trait object\n     FnDefAsTraitObject(FunctionDefinition<'tcx>),\n-    /// A drop glue function only needs to know the real type, and then miri can extract the\n-    /// actual type at runtime.\n+    /// A drop glue function only needs to know the real type, and then miri can extract\n+    /// that type from a vtable's drop pointer.\n+    /// Instead of storing some drop function, we act as if there are no trait objects, by\n+    /// mapping trait objects to their real types before acting on them.\n     DropGlue(ty::Ty<'tcx>),\n     /// Glue required to treat the ptr part of a fat pointer\n     /// as a function pointer"}]}