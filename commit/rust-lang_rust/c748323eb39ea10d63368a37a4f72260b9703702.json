{"sha": "c748323eb39ea10d63368a37a4f72260b9703702", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NDgzMjNlYjM5ZWExMGQ2MzM2OGEzN2E0ZjcyMjYwYjk3MDM3MDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-30T09:01:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-30T09:01:22Z"}, "message": "move fn_item/ptr tests to closures file", "tree": {"sha": "8088311e31023734563bf7914577fe304dc74843", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8088311e31023734563bf7914577fe304dc74843"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c748323eb39ea10d63368a37a4f72260b9703702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c748323eb39ea10d63368a37a4f72260b9703702", "html_url": "https://github.com/rust-lang/rust/commit/c748323eb39ea10d63368a37a4f72260b9703702", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c748323eb39ea10d63368a37a4f72260b9703702/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "badbd57cee570f25ebf6b31ea4d596a162a87188", "url": "https://api.github.com/repos/rust-lang/rust/commits/badbd57cee570f25ebf6b31ea4d596a162a87188", "html_url": "https://github.com/rust-lang/rust/commit/badbd57cee570f25ebf6b31ea4d596a162a87188"}], "stats": {"total": 99, "additions": 52, "deletions": 47}, "files": [{"sha": "eb8d8f0d5b987b7205eb0d8ff8cd4f652e6f919a", "filename": "tests/run-pass/closures.rs", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/c748323eb39ea10d63368a37a4f72260b9703702/tests%2Frun-pass%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c748323eb39ea10d63368a37a4f72260b9703702/tests%2Frun-pass%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fclosures.rs?ref=c748323eb39ea10d63368a37a4f72260b9703702", "patch": "@@ -44,10 +44,62 @@ fn boxed(f: Box<dyn FnOnce() -> i32>) -> i32 {\n     f()\n }\n \n+fn fn_item_as_closure_trait_object() {\n+    fn foo() {}\n+    let f: &dyn Fn() = &foo;\n+    f();\n+}\n+\n+fn fn_item_with_args_as_closure_trait_object() {\n+    fn foo(i: i32) {\n+        assert_eq!(i, 42);\n+    }\n+    let f: &dyn Fn(i32) = &foo;\n+    f(42);\n+}\n+\n+fn fn_item_with_multiple_args_as_closure_trait_object() {\n+    fn foo(i: i32, j: i32) {\n+        assert_eq!(i, 42);\n+        assert_eq!(j, 55);\n+    }\n+\n+    fn bar(i: i32, j: i32, k: f32) {\n+        assert_eq!(i, 42);\n+        assert_eq!(j, 55);\n+        assert_eq!(k, 3.14159)\n+    }\n+    let f: &dyn Fn(i32, i32) = &foo;\n+    f(42, 55);\n+    let f: &dyn Fn(i32, i32, f32) = &bar;\n+    f(42, 55, 3.14159);\n+}\n+\n+fn fn_ptr_as_closure_trait_object() {\n+    fn foo() {}\n+    fn bar(u: u32) { assert_eq!(u, 42); }\n+    fn baa(u: u32, f: f32) {\n+        assert_eq!(u, 42);\n+        assert_eq!(f, 3.141);\n+    }\n+    let f: &dyn Fn() = &(foo as fn());\n+    f();\n+    let f: &dyn Fn(u32) = &(bar as fn(u32));\n+    f(42);\n+    let f: &dyn Fn(u32, f32) = &(baa as fn(u32, f32));\n+    f(42, 3.141);\n+}\n+\n+\n fn main() {\n     assert_eq!(simple(), 12);\n     assert_eq!(crazy_closure(), (84, 10, 10));\n     assert_eq!(closure_arg_adjustment_problem(), 3);\n     assert_eq!(fn_once_closure_with_multiple_args(), 6);\n     assert_eq!(boxed(Box::new({let x = 13; move || x})), 13);\n+\n+    fn_item_as_closure_trait_object();\n+    fn_item_with_args_as_closure_trait_object();\n+    fn_item_with_multiple_args_as_closure_trait_object();\n+    fn_ptr_as_closure_trait_object();\n }"}, {"sha": "dcbbb5cb6a2ceb2adf46e9d0dc51df8c38c8a4b6", "filename": "tests/run-pass/fn_item_as_closure_trait_object.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_item_as_closure_trait_object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_item_as_closure_trait_object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffn_item_as_closure_trait_object.rs?ref=badbd57cee570f25ebf6b31ea4d596a162a87188", "patch": "@@ -1,6 +0,0 @@\n-fn foo() {}\n-\n-fn main() {\n-    let f: &dyn Fn() = &foo;\n-    f();\n-}"}, {"sha": "257028c4f0d8ebf4a8e45cbc5a875da3eb0072c3", "filename": "tests/run-pass/fn_item_with_args_as_closure_trait_object.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_item_with_args_as_closure_trait_object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_item_with_args_as_closure_trait_object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffn_item_with_args_as_closure_trait_object.rs?ref=badbd57cee570f25ebf6b31ea4d596a162a87188", "patch": "@@ -1,8 +0,0 @@\n-fn foo(i: i32) {\n-    assert_eq!(i, 42);\n-}\n-\n-fn main() {\n-    let f: &dyn Fn(i32) = &foo;\n-    f(42);\n-}"}, {"sha": "98111f304c893bf58609c6d259937da7d1c7f98a", "filename": "tests/run-pass/fn_item_with_multiple_args_as_closure_trait_object.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_item_with_multiple_args_as_closure_trait_object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_item_with_multiple_args_as_closure_trait_object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffn_item_with_multiple_args_as_closure_trait_object.rs?ref=badbd57cee570f25ebf6b31ea4d596a162a87188", "patch": "@@ -1,18 +0,0 @@\n-fn foo(i: i32, j: i32) {\n-    assert_eq!(i, 42);\n-    assert_eq!(j, 55);\n-}\n-\n-fn bar(i: i32, j: i32, k: f32) {\n-    assert_eq!(i, 42);\n-    assert_eq!(j, 55);\n-    assert_eq!(k, 3.14159)\n-}\n-\n-\n-fn main() {\n-    let f: &dyn Fn(i32, i32) = &foo;\n-    f(42, 55);\n-    let f: &dyn Fn(i32, i32, f32) = &bar;\n-    f(42, 55, 3.14159);\n-}"}, {"sha": "89daed81507f1a03a278f1e266d426fd62cd5729", "filename": "tests/run-pass/fn_ptr_as_closure_trait_object.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_ptr_as_closure_trait_object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/badbd57cee570f25ebf6b31ea4d596a162a87188/tests%2Frun-pass%2Ffn_ptr_as_closure_trait_object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffn_ptr_as_closure_trait_object.rs?ref=badbd57cee570f25ebf6b31ea4d596a162a87188", "patch": "@@ -1,15 +0,0 @@\n-fn foo() {}\n-fn bar(u: u32) { assert_eq!(u, 42); }\n-fn baa(u: u32, f: f32) {\n-    assert_eq!(u, 42);\n-    assert_eq!(f, 3.141);\n-}\n-\n-fn main() {\n-    let f: &dyn Fn() = &(foo as fn());\n-    f();\n-    let f: &dyn Fn(u32) = &(bar as fn(u32));\n-    f(42);\n-    let f: &dyn Fn(u32, f32) = &(baa as fn(u32, f32));\n-    f(42, 3.141);\n-}"}]}