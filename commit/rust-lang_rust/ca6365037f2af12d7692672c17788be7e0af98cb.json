{"sha": "ca6365037f2af12d7692672c17788be7e0af98cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNjM2NTAzN2YyYWYxMmQ3NjkyNjcyYzE3Nzg4YmU3ZTBhZjk4Y2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-27T15:55:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-27T15:55:05Z"}, "message": "Auto merge of #30082 - semarie:execve, r=alexcrichton\n\nunder OpenBSD and Bitrig, it is an error to pass an empty argv\nargument to execve(2). It results the test fail as execve(2) don't exec\nand set errno to EINVAL.\n\ninstead, make argv with two arguments (in order to differenciate the\ninitial call, from the execve call).\n\nr? @alexcrichton", "tree": {"sha": "2fca6ae73f6503f1eb3d29e8c9d1653637b72c93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fca6ae73f6503f1eb3d29e8c9d1653637b72c93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca6365037f2af12d7692672c17788be7e0af98cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca6365037f2af12d7692672c17788be7e0af98cb", "html_url": "https://github.com/rust-lang/rust/commit/ca6365037f2af12d7692672c17788be7e0af98cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca6365037f2af12d7692672c17788be7e0af98cb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5aa92a0df5cd90ed2dc364e0d335c87b23355bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5aa92a0df5cd90ed2dc364e0d335c87b23355bf", "html_url": "https://github.com/rust-lang/rust/commit/e5aa92a0df5cd90ed2dc364e0d335c87b23355bf"}, {"sha": "efc17a598cf0d9974954369e87feb63ecdd79c96", "url": "https://api.github.com/repos/rust-lang/rust/commits/efc17a598cf0d9974954369e87feb63ecdd79c96", "html_url": "https://github.com/rust-lang/rust/commit/efc17a598cf0d9974954369e87feb63ecdd79c96"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4d68a4445bbe93e243f2fe8805a6c66e4751381f", "filename": "src/test/run-pass/env-funky-keys.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca6365037f2af12d7692672c17788be7e0af98cb/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6365037f2af12d7692672c17788be7e0af98cb/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs?ref=ca6365037f2af12d7692672c17788be7e0af98cb", "patch": "@@ -26,7 +26,7 @@ use std::ffi::OsStr;\n use std::ptr;\n \n fn main() {\n-    if env::args_os().next().is_none() {\n+    if env::args_os().count() == 2 {\n         for (key, value) in env::vars_os() {\n             panic!(\"found env value {:?} {:?}\", key, value);\n         }\n@@ -36,7 +36,7 @@ fn main() {\n     let current_exe = env::current_exe().unwrap().into_os_string().to_cstring().unwrap();\n     let new_env_var = OsStr::new(\"FOOBAR\").to_cstring().unwrap();\n     let filename: *const c_char = current_exe.as_ptr();\n-    let argv: &[*const c_char] = &[ptr::null()];\n+    let argv: &[*const c_char] = &[filename, filename, ptr::null()];\n     let envp: &[*const c_char] = &[new_env_var.as_ptr(), ptr::null()];\n     unsafe {\n         execve(filename, &argv[0], &envp[0]);"}]}