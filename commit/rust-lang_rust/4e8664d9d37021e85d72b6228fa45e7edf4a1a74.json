{"sha": "4e8664d9d37021e85d72b6228fa45e7edf4a1a74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlODY2NGQ5ZDM3MDIxZTg1ZDcyYjYyMjhmYTQ1ZTdlZGY0YTFhNzQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-03T19:29:21Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-03T19:29:21Z"}, "message": "Merge #1478\n\n1478: [WIP] Added resolve submodules with raw name r=matklad a=andreevlex\n\n#1211\n\nCo-authored-by: Alexander Andreev <andreevlex.as@gmail.com>", "tree": {"sha": "fd19fc2830a5621bed1735bdbe892bd17905e5e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd19fc2830a5621bed1735bdbe892bd17905e5e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e8664d9d37021e85d72b6228fa45e7edf4a1a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8664d9d37021e85d72b6228fa45e7edf4a1a74", "html_url": "https://github.com/rust-lang/rust/commit/4e8664d9d37021e85d72b6228fa45e7edf4a1a74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e8664d9d37021e85d72b6228fa45e7edf4a1a74/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "2b2cd829b0f95aef338227deb05ec7503dae9b6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b2cd829b0f95aef338227deb05ec7503dae9b6c", "html_url": "https://github.com/rust-lang/rust/commit/2b2cd829b0f95aef338227deb05ec7503dae9b6c"}, {"sha": "6263aa13d0eed983827d14fa39bf6490eb27e7a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6263aa13d0eed983827d14fa39bf6490eb27e7a5", "html_url": "https://github.com/rust-lang/rust/commit/6263aa13d0eed983827d14fa39bf6490eb27e7a5"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "06a2dbc76084d9a8ea5875340f398861e2c3ed4e", "filename": "crates/ra_hir/src/name.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e8664d9d37021e85d72b6228fa45e7edf4a1a74/crates%2Fra_hir%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8664d9d37021e85d72b6228fa45e7edf4a1a74/crates%2Fra_hir%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fname.rs?ref=4e8664d9d37021e85d72b6228fa45e7edf4a1a74", "patch": "@@ -98,13 +98,15 @@ pub(crate) trait AsName {\n \n impl AsName for ast::NameRef {\n     fn as_name(&self) -> Name {\n-        Name::new(self.text().clone())\n+        let name = resolve_name(self.text());\n+        Name::new(name)\n     }\n }\n \n impl AsName for ast::Name {\n     fn as_name(&self) -> Name {\n-        Name::new(self.text().clone())\n+        let name = resolve_name(self.text());\n+        Name::new(name)\n     }\n }\n \n@@ -184,3 +186,12 @@ impl AsName for KnownName {\n         Name::new(s.into())\n     }\n }\n+\n+fn resolve_name(text: &SmolStr) -> SmolStr {\n+    let raw_start = \"r#\";\n+    if text.as_str().starts_with(raw_start) {\n+        SmolStr::new(&text[raw_start.len()..])\n+    } else {\n+        text.clone()\n+    }\n+}"}, {"sha": "07b533e290763fb21ce33e837fbc9121dec708bb", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4e8664d9d37021e85d72b6228fa45e7edf4a1a74/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8664d9d37021e85d72b6228fa45e7edf4a1a74/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=4e8664d9d37021e85d72b6228fa45e7edf4a1a74", "patch": "@@ -338,6 +338,32 @@ fn module_resolution_works_for_non_standard_filenames() {\n     \"###);\n }\n \n+#[test]\n+fn module_resolution_works_for_raw_modules() {\n+    let map = def_map_with_crate_graph(\n+        \"\n+        //- /library.rs\n+        mod r#async;\n+        use self::r#async::Bar;\n+\n+        //- /async.rs\n+        pub struct Bar;\n+        \",\n+        crate_graph! {\n+            \"library\": (\"/library.rs\", []),\n+        },\n+    );\n+\n+    assert_snapshot_matches!(map, @r###\"\n+        \u22eecrate\n+        \u22eeBar: t v\n+        \u22eeasync: t\n+        \u22ee\n+        \u22eecrate::async\n+        \u22eeBar: t v\n+    \"###);\n+}\n+\n #[test]\n fn name_res_works_for_broken_modules() {\n     covers!(name_res_works_for_broken_modules);"}]}