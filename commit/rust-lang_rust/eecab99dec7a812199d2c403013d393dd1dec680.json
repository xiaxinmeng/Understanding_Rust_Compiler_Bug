{"sha": "eecab99dec7a812199d2c403013d393dd1dec680", "node_id": "C_kwDOAAsO6NoAKGVlY2FiOTlkZWM3YTgxMjE5OWQyYzQwMzAxM2QzOTNkZDFkZWM2ODA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-28T20:46:45Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-28T20:56:58Z"}, "message": "Allow `break` and co to go through `try{}` blocks", "tree": {"sha": "b0636ea93e23b46b7cbcb0960770641f3c75f750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0636ea93e23b46b7cbcb0960770641f3c75f750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eecab99dec7a812199d2c403013d393dd1dec680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eecab99dec7a812199d2c403013d393dd1dec680", "html_url": "https://github.com/rust-lang/rust/commit/eecab99dec7a812199d2c403013d393dd1dec680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eecab99dec7a812199d2c403013d393dd1dec680/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16264a3a53765d692e55ba73c74bb3abc653cb4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/16264a3a53765d692e55ba73c74bb3abc653cb4b", "html_url": "https://github.com/rust-lang/rust/commit/16264a3a53765d692e55ba73c74bb3abc653cb4b"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "0d3f15c3d5d8078dda5aae8d98cc86fc4168d5b7", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eecab99dec7a812199d2c403013d393dd1dec680/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eecab99dec7a812199d2c403013d393dd1dec680/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=eecab99dec7a812199d2c403013d393dd1dec680", "patch": "@@ -152,7 +152,7 @@ impl<'a> InferenceContext<'a> {\n                 .1\n             }\n             Expr::TryBlock { body } => {\n-                self.with_breakable_ctx(BreakableKind::Border, self.err_ty(), None, |this| {\n+                self.with_breakable_ctx(BreakableKind::Block, self.err_ty(), None, |this| {\n                     let _inner = this.infer_expr(*body, expected);\n                 });\n                 // FIXME should be std::result::Result<{inner}, _>"}, {"sha": "7a957e1c5042d14622a5ac83b9eb61b8004021c1", "filename": "crates/ide-diagnostics/src/handlers/break_outside_of_loop.rs", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/eecab99dec7a812199d2c403013d393dd1dec680/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fbreak_outside_of_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eecab99dec7a812199d2c403013d393dd1dec680/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fbreak_outside_of_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fbreak_outside_of_loop.rs?ref=eecab99dec7a812199d2c403013d393dd1dec680", "patch": "@@ -38,7 +38,7 @@ fn foo() {\n     }\n \n     #[test]\n-    fn try_blocks_are_borders() {\n+    fn async_blocks_are_borders() {\n         check_diagnostics(\n             r#\"\n fn foo() {\n@@ -60,7 +60,7 @@ fn foo() {\n     }\n \n     #[test]\n-    fn async_blocks_are_borders() {\n+    fn closures_are_borders() {\n         check_diagnostics(\n             r#\"\n fn foo() {\n@@ -82,39 +82,35 @@ fn foo() {\n     }\n \n     #[test]\n-    fn closures_are_borders() {\n+    fn blocks_pass_through() {\n         check_diagnostics(\n             r#\"\n fn foo() {\n     'a: loop {\n-        try {\n-                break;\n-              //^^^^^ error: break outside of loop\n-                break 'a;\n-              //^^^^^^^^ error: break outside of loop\n-                continue;\n-              //^^^^^^^^ error: continue outside of loop\n-                continue 'a;\n-              //^^^^^^^^^^^ error: continue outside of loop\n-        };\n+        {\n+            break;\n+            break 'a;\n+            continue;\n+            continue 'a;\n+        }\n     }\n }\n \"#,\n         );\n     }\n \n     #[test]\n-    fn blocks_pass_through() {\n+    fn try_blocks_pass_through() {\n         check_diagnostics(\n             r#\"\n fn foo() {\n     'a: loop {\n-        {\n-            break;\n-            break 'a;\n-            continue;\n-            continue 'a;\n-        }\n+        try {\n+                break;\n+                break 'a;\n+                continue;\n+                continue 'a;\n+        };\n     }\n }\n \"#,"}]}