{"sha": "fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNDdjYTBkMGIwNGYxY2Q0NjE5NWIxOWNiYjQyNjAyMzE5YWFmOTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-28T21:43:36Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-04-06T16:35:15Z"}, "message": "restructure rustc options relating to incr. comp.\n\nYou can now pass `-Z incremental=dir` as well as saying `-Z\nquery-dep-graph` if you want to enable queries for some other\npurpose. Accessor functions take the place of computed boolean flags.", "tree": {"sha": "0c079e9ca31f9d581e6a51a42010d5829bd9bc39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c079e9ca31f9d581e6a51a42010d5829bd9bc39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "html_url": "https://github.com/rust-lang/rust/commit/fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "943ec3bdfc9ba28e94b6d00a2b53fb2cd8b21655", "url": "https://api.github.com/repos/rust-lang/rust/commits/943ec3bdfc9ba28e94b6d00a2b53fb2cd8b21655", "html_url": "https://github.com/rust-lang/rust/commit/943ec3bdfc9ba28e94b6d00a2b53fb2cd8b21655"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "681a6ba8eb48de5a7acf3f705c07ba91f5101d35", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -139,11 +139,9 @@ pub struct Options {\n     pub continue_parse_after_error: bool,\n     pub mir_opt_level: usize,\n \n-    /// if true, build up the dep-graph\n-    pub build_dep_graph: bool,\n-\n-    /// if true, -Z dump-dep-graph was passed to dump out the dep-graph\n-    pub dump_dep_graph: bool,\n+    /// if Some, enable incremental compilation, using the given\n+    /// directory to store intermediate results\n+    pub incremental: Option<PathBuf>,\n \n     pub no_analysis: bool,\n     pub debugging_opts: DebuggingOptions,\n@@ -260,8 +258,7 @@ pub fn basic_options() -> Options {\n         treat_err_as_bug: false,\n         continue_parse_after_error: false,\n         mir_opt_level: 1,\n-        build_dep_graph: false,\n-        dump_dep_graph: false,\n+        incremental: None,\n         no_analysis: false,\n         debugging_opts: basic_debugging_options(),\n         prints: Vec::new(),\n@@ -276,6 +273,15 @@ pub fn basic_options() -> Options {\n     }\n }\n \n+impl Options {\n+    /// True if there is a reason to build the dep graph.\n+    pub fn build_dep_graph(&self) -> bool {\n+        self.incremental.is_some() ||\n+            self.debugging_opts.dump_dep_graph ||\n+            self.debugging_opts.query_dep_graph\n+    }\n+}\n+\n // The type of entry function, so\n // users can have their own entry\n // functions that don't start a\n@@ -635,10 +641,12 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"treat all errors that occur as bugs\"),\n     continue_parse_after_error: bool = (false, parse_bool,\n           \"attempt to recover from parse errors (experimental)\"),\n-    incr_comp: bool = (false, parse_bool,\n+    incremental: Option<String> = (None, parse_opt_string,\n           \"enable incremental compilation (experimental)\"),\n     dump_dep_graph: bool = (false, parse_bool,\n           \"dump the dependency graph to $RUST_DEP_GRAPH (default: /tmp/dep_graph.gv)\"),\n+    query_dep_graph: bool = (false, parse_bool,\n+          \"enable queries of the dependency graph for regression testing\"),\n     no_analysis: bool = (false, parse_bool,\n           \"parse and expand the source, but run no analysis\"),\n     extra_plugins: Vec<String> = (Vec::new(), parse_list,\n@@ -1051,8 +1059,6 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n     let treat_err_as_bug = debugging_opts.treat_err_as_bug;\n     let continue_parse_after_error = debugging_opts.continue_parse_after_error;\n     let mir_opt_level = debugging_opts.mir_opt_level.unwrap_or(1);\n-    let incremental_compilation = debugging_opts.incr_comp;\n-    let dump_dep_graph = debugging_opts.dump_dep_graph;\n     let no_analysis = debugging_opts.no_analysis;\n \n     let mut output_types = HashMap::new();\n@@ -1212,6 +1218,8 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n \n     let crate_name = matches.opt_str(\"crate-name\");\n \n+    let incremental = debugging_opts.incremental.as_ref().map(|m| PathBuf::from(m));\n+\n     Options {\n         crate_types: crate_types,\n         gc: gc,\n@@ -1231,8 +1239,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         treat_err_as_bug: treat_err_as_bug,\n         continue_parse_after_error: continue_parse_after_error,\n         mir_opt_level: mir_opt_level,\n-        build_dep_graph: incremental_compilation || dump_dep_graph,\n-        dump_dep_graph: dump_dep_graph,\n+        incremental: incremental,\n         no_analysis: no_analysis,\n         debugging_opts: debugging_opts,\n         prints: prints,"}, {"sha": "a4d34aaf6529e06de8d0534586f74aade387dbe7", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -121,7 +121,7 @@ pub fn compile_input(sess: &Session,\n         let expanded_crate = assign_node_ids(sess, expanded_crate);\n         // Lower ast -> hir.\n         let lcx = LoweringContext::new(sess, Some(&expanded_crate));\n-        let dep_graph = DepGraph::new(sess.opts.build_dep_graph);\n+        let dep_graph = DepGraph::new(sess.opts.build_dep_graph());\n         let mut hir_forest = time(sess.time_passes(),\n                                   \"lowering ast -> hir\",\n                                   || hir_map::Forest::new(lower_crate(&lcx, &expanded_crate),"}, {"sha": "b56be9e5683a851a5576eb93152faf1eba7e0e91", "filename": "src/test/compile-fail/dep-graph-assoc-type-trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-assoc-type-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-assoc-type-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-assoc-type-trans.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -11,7 +11,7 @@\n // Test that when a trait impl changes, fns whose body uses that trait\n // must also be recompiled.\n \n-// compile-flags: -Z incr-comp\n+// compile-flags: -Z query-dep-graph\n \n #![feature(rustc_attrs)]\n #![allow(warnings)]"}, {"sha": "0d6954ab9df6229e5390d647b1c0aabf62fc39c1", "filename": "src/test/compile-fail/dep-graph-caller-callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-caller-callee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-caller-callee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-caller-callee.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -11,7 +11,7 @@\n // Test that immediate callers have to change when callee changes, but\n // not callers' callers.\n \n-// compile-flags: -Z incr-comp\n+// compile-flags: -Z query-dep-graph\n \n #![feature(rustc_attrs)]\n #![allow(dead_code)]"}, {"sha": "235fc5051d780f78a50b91a8c06bfd8c063acbb8", "filename": "src/test/compile-fail/dep-graph-struct-signature.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-struct-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-struct-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-struct-signature.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -11,7 +11,7 @@\n // Test cases where a changing struct appears in the signature of fns\n // and methods.\n \n-// compile-flags: -Z incr-comp\n+// compile-flags: -Z query-dep-graph\n \n #![feature(rustc_attrs)]\n #![allow(dead_code)]"}, {"sha": "1afecd80ff5ad05309bc0b9c88b04cc43aff5c23", "filename": "src/test/compile-fail/dep-graph-trait-impl-two-traits-same-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl-two-traits-same-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl-two-traits-same-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl-two-traits-same-method.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -11,7 +11,7 @@\n // Test that adding an impl to a trait `Foo` DOES affect functions\n // that only use `Bar` if they have methods in common.\n \n-// compile-flags: -Z incr-comp\n+// compile-flags: -Z query-dep-graph\n \n #![feature(rustc_attrs)]\n #![allow(dead_code)]"}, {"sha": "2ec7573cb81dc133e32acfcbd7281fe53247d394", "filename": "src/test/compile-fail/dep-graph-trait-impl-two-traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl-two-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl-two-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl-two-traits.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -11,7 +11,7 @@\n // Test that adding an impl to a trait `Foo` does not affect functions\n // that only use `Bar`, so long as they do not have methods in common.\n \n-// compile-flags: -Z incr-comp\n+// compile-flags: -Z query-dep-graph\n \n #![feature(rustc_attrs)]\n #![allow(warnings)]"}, {"sha": "d87d7a6be1c280f65018f3bbbecec38514bd6a8e", "filename": "src/test/compile-fail/dep-graph-trait-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-trait-impl.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -11,7 +11,7 @@\n // Test that when a trait impl changes, fns whose body uses that trait\n // must also be recompiled.\n \n-// compile-flags: -Z incr-comp\n+// compile-flags: -Z query-dep-graph\n \n #![feature(rustc_attrs)]\n #![allow(warnings)]"}, {"sha": "079f2b52fd462a21c1107363fdca4636b34d6736", "filename": "src/test/compile-fail/dep-graph-unrelated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-unrelated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Fcompile-fail%2Fdep-graph-unrelated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdep-graph-unrelated.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -10,7 +10,7 @@\n \n // Test that two unrelated functions have no trans dependency.\n \n-// compile-flags: -Z incr-comp\n+// compile-flags: -Z query-dep-graph\n \n #![feature(rustc_attrs)]\n #![allow(dead_code)]"}, {"sha": "12cc475f121f6fbe0608ee73c8e8c9e0fae53733", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe47ca0d0b04f1cd46195b19cbb42602319aaf98/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=fe47ca0d0b04f1cd46195b19cbb42602319aaf98", "patch": "@@ -239,7 +239,7 @@ fn compile_program(input: &str, sysroot: PathBuf)\n \n         let krate = driver::assign_node_ids(&sess, krate);\n         let lcx = LoweringContext::new(&sess, Some(&krate));\n-        let dep_graph = DepGraph::new(sess.opts.build_dep_graph);\n+        let dep_graph = DepGraph::new(sess.opts.build_dep_graph());\n         let mut hir_forest = ast_map::Forest::new(lower_crate(&lcx, &krate), dep_graph);\n         let arenas = ty::CtxtArenas::new();\n         let ast_map = driver::make_map(&sess, &mut hir_forest);"}]}