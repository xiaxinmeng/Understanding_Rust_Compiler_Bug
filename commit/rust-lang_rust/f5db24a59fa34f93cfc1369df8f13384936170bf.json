{"sha": "f5db24a59fa34f93cfc1369df8f13384936170bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZGIyNGE1OWZhMzRmOTNjZmMxMzY5ZGY4ZjEzMzg0OTM2MTcwYmY=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2019-08-05T08:50:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-05T08:50:04Z"}, "message": "Rollup merge of #4330 - phansch:doctests_nursery, r=flip1995\n\nDoctests: Enable running doc tests for nursery lints\n\nchangelog: none\n\nmaster: 202 passed; 0 failed; 122 ignored; 0 measured; 0 filtered out\nthis PR: 213 passed; 0 failed; 122 ignored; 0 measured; 0 filtered out\n\ncc #4319", "tree": {"sha": "50c01a7ac55340e75d81f2ada0d12a576682e04c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50c01a7ac55340e75d81f2ada0d12a576682e04c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5db24a59fa34f93cfc1369df8f13384936170bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdR+28CRBK7hj4Ov3rIwAAdHIIACEOsGmq0Jf6m0vPYJzJEHUP\ndtC0W31n58gky7zjMtoXf3iXyxW6ATLohIeFlbwcj0JeuF6TnUix+DXjqWcy6Y7G\nOuBeQ4yZSJStKSlYfniEXT5Vgfh1/C7cvcFqsv84sF1mCfVf42O0eac1ITwxldaM\nlK+UD0YpjkmrgAPZtToW6zn6EjM/nKB5z0k1xCIK/OwUmqHzF/fn0SU/skxVGIl9\nXS2S2mDOScB/Mf2pkJY21KNwO4hmDBFknkwbGdRmtasVsJIBZrcpO6ZLsL5nJPnL\n2cAENnoeUDG/NggNIyo0WF/XXTV7hkpFONrEyOK4XyIJPUN7TxOq5XMbc4/zPeI=\n=m1VF\n-----END PGP SIGNATURE-----\n", "payload": "tree 50c01a7ac55340e75d81f2ada0d12a576682e04c\nparent 713ad964af3e3dee380cffaff776d31f154e2fe3\nparent 2f48effc926a84a823db9264f36890cc2da8ba49\nauthor Philipp Krones <hello@philkrones.com> 1564995004 +0200\ncommitter GitHub <noreply@github.com> 1564995004 +0200\n\nRollup merge of #4330 - phansch:doctests_nursery, r=flip1995\n\nDoctests: Enable running doc tests for nursery lints\n\nchangelog: none\n\nmaster: 202 passed; 0 failed; 122 ignored; 0 measured; 0 filtered out\nthis PR: 213 passed; 0 failed; 122 ignored; 0 measured; 0 filtered out\n\ncc #4319\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5db24a59fa34f93cfc1369df8f13384936170bf", "html_url": "https://github.com/rust-lang/rust/commit/f5db24a59fa34f93cfc1369df8f13384936170bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5db24a59fa34f93cfc1369df8f13384936170bf/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "713ad964af3e3dee380cffaff776d31f154e2fe3", "url": "https://api.github.com/repos/rust-lang/rust/commits/713ad964af3e3dee380cffaff776d31f154e2fe3", "html_url": "https://github.com/rust-lang/rust/commit/713ad964af3e3dee380cffaff776d31f154e2fe3"}, {"sha": "2f48effc926a84a823db9264f36890cc2da8ba49", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f48effc926a84a823db9264f36890cc2da8ba49", "html_url": "https://github.com/rust-lang/rust/commit/2f48effc926a84a823db9264f36890cc2da8ba49"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "64c8a715d5efc51548280fe44ec94c1259045a34", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=f5db24a59fa34f93cfc1369df8f13384936170bf", "patch": "@@ -113,19 +113,19 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// // Bad\n-    /// #[inline(always)]\n-    ///\n-    /// fn not_quite_good_code(..) { ... }\n-    ///\n     /// // Good (as inner attribute)\n     /// #![inline(always)]\n     ///\n-    /// fn this_is_fine(..) { ... }\n+    /// fn this_is_fine() { }\n+    ///\n+    /// // Bad\n+    /// #[inline(always)]\n+    ///\n+    /// fn not_quite_good_code() { }\n     ///\n     /// // Good (as outer attribute)\n     /// #[inline(always)]\n-    /// fn this_is_fine_too(..) { ... }\n+    /// fn this_is_fine_too() { }\n     /// ```\n     pub EMPTY_LINE_AFTER_OUTER_ATTR,\n     nursery,"}, {"sha": "cc314e789e741f5e14023f0cd9c8c7438c716a0f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=f5db24a59fa34f93cfc1369df8f13384936170bf", "patch": "@@ -125,7 +125,7 @@ macro_rules! declare_clippy_lint {\n     };\n     { $(#[$attr:meta])* pub $name:tt, nursery, $description:tt } => {\n         declare_tool_lint! {\n-            pub clippy::$name, Allow, $description, report_in_external_macro: true\n+            $(#[$attr])* pub clippy::$name, Allow, $description, report_in_external_macro: true\n         }\n     };\n     { $(#[$attr:meta])* pub $name:tt, internal, $description:tt } => {"}, {"sha": "89398f82c9e5c702da57309eea22e2a176c2f478", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=f5db24a59fa34f93cfc1369df8f13384936170bf", "patch": "@@ -40,17 +40,27 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// # struct Foo {\n+    /// #     random_number: usize,\n+    /// # }\n+    /// # impl Foo {\n     /// fn new() -> Self {\n     ///     Self { random_number: 42 }\n     /// }\n+    /// # }\n     /// ```\n     ///\n     /// Could be a const fn:\n     ///\n     /// ```rust\n+    /// # struct Foo {\n+    /// #     random_number: usize,\n+    /// # }\n+    /// # impl Foo {\n     /// const fn new() -> Self {\n     ///     Self { random_number: 42 }\n     /// }\n+    /// # }\n     /// ```\n     pub MISSING_CONST_FOR_FN,\n     nursery,"}, {"sha": "522c4ab52e2ec50b9796b26aa9764fa6445fb07b", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=f5db24a59fa34f93cfc1369df8f13384936170bf", "patch": "@@ -44,6 +44,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # use std::sync::Mutex;\n     /// let x = Mutex::new(0usize);\n     /// ```\n     pub MUTEX_INTEGER,"}, {"sha": "76f3f8fd88fe17585432af650adac69a6a01c149", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5db24a59fa34f93cfc1369df8f13384936170bf/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=f5db24a59fa34f93cfc1369df8f13384936170bf", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     /// * False-positive if there is a borrow preventing the value from moving out.\n     ///\n     /// ```rust\n+    /// # fn foo(x: String) {}\n     /// let x = String::new();\n     ///\n     /// let y = &x;\n@@ -49,15 +50,22 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # use std::path::Path;\n+    /// # #[derive(Clone)]\n+    /// # struct Foo;\n+    /// # impl Foo {\n+    /// #     fn new() -> Self { Foo {} }\n+    /// # }\n+    /// # fn call(x: Foo) {}\n     /// {\n     ///     let x = Foo::new();\n     ///     call(x.clone());\n     ///     call(x.clone()); // this can just pass `x`\n     /// }\n     ///\n-    /// [\"lorem\", \"ipsum\"].join(\" \").to_string()\n+    /// [\"lorem\", \"ipsum\"].join(\" \").to_string();\n     ///\n-    /// Path::new(\"/a/b\").join(\"c\").to_path_buf()\n+    /// Path::new(\"/a/b\").join(\"c\").to_path_buf();\n     /// ```\n     pub REDUNDANT_CLONE,\n     nursery,"}]}