{"sha": "fd4bf237834de7728d4a8a3af32393d27c934509", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNGJmMjM3ODM0ZGU3NzI4ZDRhOGEzYWYzMjM5M2QyN2M5MzQ1MDk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-03T08:11:31Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-03T18:12:48Z"}, "message": "Rollup merge of #50365 - nnethercote:nearest_common_ancestor-two-vecs, r=nikomatsakis\n\nUse two vectors in nearest_common_ancestor.\n\nWhen looking at any scope in scope chain A, we only need to look for\nmatches among scopes previously seen in scope chain B, and vice versa.\nThis halves the number of \"seen before?\" comparisons, speeding up some\nruns of style-servo, clap-rs, and syn by 1--2%.\n\nThanks to @kirillkh for the suggestion.\n\nr? @nikomatsakis", "tree": {"sha": "25f22e9404e7c002d2d15ee7dccde8adcee4a676", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25f22e9404e7c002d2d15ee7dccde8adcee4a676"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd4bf237834de7728d4a8a3af32393d27c934509", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlrrUSEACgkQ/vbIBR0O\nATzqLQ/+LlvvPcPHBD+83skpyxbxBgzswC1QkupZ2bPz+nPldoRhu/tl4Ce1Qo6D\nxLVWQTCGGLwtIuWGVcAZSjw6hHIJW0nW9zwzUpyRh49oQQiYUFtXTi+2AYld9wGt\nm2+1qBcazPHeiFyuchC8oM3oZh8S2PqT4J/BlDigFsSB9w8t0bUVNu7ab5cXe6fJ\n6hUPTVSkMmszJJUtibQo5KZeSgrm3H8k3jSkalPKWI+ShxTE1wmR6+bN/0fpAei2\nLPHV5EeR3OremvyObSv1F6FxSmwN3CyPsQdjHeFWqmuDmfaJ0zjfI2hMbiNqSXWL\n25MG5mxdfvlzLIJjN+IzLNDlIxGC0ubl3Gom1n5wWGv0/tFLuHMQFfJUN69RtbCU\nUVtfLa813xq/Qjak0ndBGvpYT5N5W7+uVoylHq5tOwwQ0GhHgwDtPjI3F9dPQ5BC\n5fttacYZwKT33Tkyy1EECwe9Wwg4tIa++BYfCoVJFYnfo111k5Eta88W1MOdSBfC\nrU1YDcT6nnkBxcXLB6L+OlT3VxkIBeTS0vIl/ATn1wlIWKiYJPqfnpDvxudfHf+C\n+7EkT0NVbsKmOSn1jDoWuRqimQ3dlWj1U3aJJXsXWX1g39Z12JrW/Zn7w4bIyTdI\nkChaPyQA4/j5A0ymyrWusk9Jl7KGJLbeblk4Ukfxdwm4reH2DAY=\n=cmjE\n-----END PGP SIGNATURE-----", "payload": "tree 25f22e9404e7c002d2d15ee7dccde8adcee4a676\nparent 06a47dc26ec742c3a899a76c182ef5c81ed9455f\nparent 94c5d38f0b5c85e2171dfe7b9ec36954d17f5fe0\nauthor kennytm <kennytm@gmail.com> 1525335091 +0800\ncommitter kennytm <kennytm@gmail.com> 1525371168 +0800\n\nRollup merge of #50365 - nnethercote:nearest_common_ancestor-two-vecs, r=nikomatsakis\n\nUse two vectors in nearest_common_ancestor.\n\nWhen looking at any scope in scope chain A, we only need to look for\nmatches among scopes previously seen in scope chain B, and vice versa.\nThis halves the number of \"seen before?\" comparisons, speeding up some\nruns of style-servo, clap-rs, and syn by 1--2%.\n\nThanks to @kirillkh for the suggestion.\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4bf237834de7728d4a8a3af32393d27c934509", "html_url": "https://github.com/rust-lang/rust/commit/fd4bf237834de7728d4a8a3af32393d27c934509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd4bf237834de7728d4a8a3af32393d27c934509/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a47dc26ec742c3a899a76c182ef5c81ed9455f", "url": "https://api.github.com/repos/rust-lang/rust/commits/06a47dc26ec742c3a899a76c182ef5c81ed9455f", "html_url": "https://github.com/rust-lang/rust/commit/06a47dc26ec742c3a899a76c182ef5c81ed9455f"}, {"sha": "94c5d38f0b5c85e2171dfe7b9ec36954d17f5fe0", "url": "https://api.github.com/repos/rust-lang/rust/commits/94c5d38f0b5c85e2171dfe7b9ec36954d17f5fe0", "html_url": "https://github.com/rust-lang/rust/commit/94c5d38f0b5c85e2171dfe7b9ec36954d17f5fe0"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "bfc9ff6660de9890254f9d37eb06660d413da73d", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fd4bf237834de7728d4a8a3af32393d27c934509/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4bf237834de7728d4a8a3af32393d27c934509/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=fd4bf237834de7728d4a8a3af32393d27c934509", "patch": "@@ -690,21 +690,22 @@ impl<'tcx> ScopeTree {\n         // the start. So this algorithm is faster.\n         let mut ma = Some(scope_a);\n         let mut mb = Some(scope_b);\n-        let mut seen: SmallVec<[Scope; 32]> = SmallVec::new();\n+        let mut seen_a: SmallVec<[Scope; 32]> = SmallVec::new();\n+        let mut seen_b: SmallVec<[Scope; 32]> = SmallVec::new();\n         loop {\n             if let Some(a) = ma {\n-                if seen.iter().position(|s| *s == a).is_some() {\n+                if seen_b.iter().position(|s| *s == a).is_some() {\n                     return a;\n                 }\n-                seen.push(a);\n+                seen_a.push(a);\n                 ma = self.parent_map.get(&a).map(|s| *s);\n             }\n \n             if let Some(b) = mb {\n-                if seen.iter().position(|s| *s == b).is_some() {\n+                if seen_a.iter().position(|s| *s == b).is_some() {\n                     return b;\n                 }\n-                seen.push(b);\n+                seen_b.push(b);\n                 mb = self.parent_map.get(&b).map(|s| *s);\n             }\n "}]}