{"sha": "b987fd78c2956fde0c9fe8a9ab4b9154dc5671da", "node_id": "C_kwDOAAsO6NoAKGI5ODdmZDc4YzI5NTZmZGUwYzlmZThhOWFiNGI5MTU0ZGM1NjcxZGE", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T02:54:14Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T02:54:14Z"}, "message": "Fix docs for `inline::build_impl`\n\nBased on looking at the source code, it looks like the `did` needs to be\nfor an impl, not functions in an impl.", "tree": {"sha": "d78a35e01b33cfbb7b24b08d8f3476e89a4ac57b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d78a35e01b33cfbb7b24b08d8f3476e89a4ac57b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b987fd78c2956fde0c9fe8a9ab4b9154dc5671da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b987fd78c2956fde0c9fe8a9ab4b9154dc5671da", "html_url": "https://github.com/rust-lang/rust/commit/b987fd78c2956fde0c9fe8a9ab4b9154dc5671da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b987fd78c2956fde0c9fe8a9ab4b9154dc5671da/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547a6ffee0cf4da9929a9e3d49546dc87d607735", "url": "https://api.github.com/repos/rust-lang/rust/commits/547a6ffee0cf4da9929a9e3d49546dc87d607735", "html_url": "https://github.com/rust-lang/rust/commit/547a6ffee0cf4da9929a9e3d49546dc87d607735"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "87e17a771a55b21cc9308b5966f51e56d6d2518a", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b987fd78c2956fde0c9fe8a9ab4b9154dc5671da/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b987fd78c2956fde0c9fe8a9ab4b9154dc5671da/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=b987fd78c2956fde0c9fe8a9ab4b9154dc5671da", "patch": "@@ -325,7 +325,7 @@ fn merge_attrs(\n     }\n }\n \n-/// Builds a specific implementation of a type. The `did` could be a type method or trait method.\n+/// Inline an `impl`, inherent or of a trait. The `did` must be for an `impl`.\n crate fn build_impl(\n     cx: &mut DocContext<'_>,\n     parent_module: impl Into<Option<DefId>>,"}]}