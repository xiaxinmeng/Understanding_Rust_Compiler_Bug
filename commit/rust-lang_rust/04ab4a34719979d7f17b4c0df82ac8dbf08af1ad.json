{"sha": "04ab4a34719979d7f17b4c0df82ac8dbf08af1ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0YWI0YTM0NzE5OTc5ZDdmMTdiNGMwZGY4MmFjOGRiZjA4YWYxYWQ=", "commit": {"author": {"name": "Michael Layzell", "email": "michael@thelayzells.com", "date": "2015-05-25T01:45:29Z"}, "committer": {"name": "Michael Layzell", "email": "michael@thelayzells.com", "date": "2015-05-25T01:45:29Z"}, "message": "Mark `boxed::into_raw` as safe\n\nBy the same logic that `mem::forget` is safe, `boxed::into_raw` is actually a safe function. Fixes #25755.", "tree": {"sha": "dc604e17b9e4b98a216ecdfdba13ffd1a7a3668f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc604e17b9e4b98a216ecdfdba13ffd1a7a3668f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04ab4a34719979d7f17b4c0df82ac8dbf08af1ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04ab4a34719979d7f17b4c0df82ac8dbf08af1ad", "html_url": "https://github.com/rust-lang/rust/commit/04ab4a34719979d7f17b4c0df82ac8dbf08af1ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04ab4a34719979d7f17b4c0df82ac8dbf08af1ad/comments", "author": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "893e4169337016cc5bbe4048f2132b896bda8ce8", "url": "https://api.github.com/repos/rust-lang/rust/commits/893e4169337016cc5bbe4048f2132b896bda8ce8", "html_url": "https://github.com/rust-lang/rust/commit/893e4169337016cc5bbe4048f2132b896bda8ce8"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "6633e48a814f6d8929865687dbb31596f73d8f8c", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/04ab4a34719979d7f17b4c0df82ac8dbf08af1ad/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04ab4a34719979d7f17b4c0df82ac8dbf08af1ad/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=04ab4a34719979d7f17b4c0df82ac8dbf08af1ad", "patch": "@@ -139,24 +139,20 @@ impl<T : ?Sized> Box<T> {\n /// convert pointer back to `Box` with `Box::from_raw` function, because\n /// `Box` does not specify, how memory is allocated.\n ///\n-/// Function is unsafe, because result of this function is no longer\n-/// automatically managed that may lead to memory or other resource\n-/// leak.\n-///\n /// # Examples\n /// ```\n /// # #![feature(alloc)]\n /// use std::boxed;\n ///\n /// let seventeen = Box::new(17u32);\n-/// let raw = unsafe { boxed::into_raw(seventeen) };\n+/// let raw = boxed::into_raw(seventeen);\n /// let boxed_again = unsafe { Box::from_raw(raw) };\n /// ```\n #[unstable(feature = \"alloc\",\n            reason = \"may be renamed\")]\n #[inline]\n-pub unsafe fn into_raw<T : ?Sized>(b: Box<T>) -> *mut T {\n-    mem::transmute(b)\n+pub fn into_raw<T : ?Sized>(b: Box<T>) -> *mut T {\n+    unsafe { mem::transmute(b) }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}