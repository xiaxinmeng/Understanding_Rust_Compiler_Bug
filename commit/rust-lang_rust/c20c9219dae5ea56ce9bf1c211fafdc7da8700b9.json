{"sha": "c20c9219dae5ea56ce9bf1c211fafdc7da8700b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMGM5MjE5ZGFlNWVhNTZjZTliZjFjMjExZmFmZGM3ZGE4NzAwYjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-04T05:40:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-04T05:40:24Z"}, "message": "Auto merge of #84874 - joshtriplett:ci-extract-llvm-win64-installer, r=Mark-Simulacrum\n\nCI: Extract LLVM win64 installer directly, using 7z\n\nCurrently, we have LLVM tarballs for win64, generated by someone running\nthe installer via wine and tarring up the result.\n\n7z knows how to extract NSIS installers directly, and the result is\nidentical to our tarball, except that it doesn't include `Uninstall.exe`\n(which we don't care about) and it includes the NSIS plugin directory\n(which we also don't care about).\n\nThis simplifies the process of upgrading CI, and allows us to just\nmirror the upstream release .exe directly. This also improves our\nsupply chain.", "tree": {"sha": "6e5bbb7003ff901ff178d7ecf21aecdb72f7487e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e5bbb7003ff901ff178d7ecf21aecdb72f7487e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c20c9219dae5ea56ce9bf1c211fafdc7da8700b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c20c9219dae5ea56ce9bf1c211fafdc7da8700b9", "html_url": "https://github.com/rust-lang/rust/commit/c20c9219dae5ea56ce9bf1c211fafdc7da8700b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c20c9219dae5ea56ce9bf1c211fafdc7da8700b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0309953232d9957aef4c7c5a24fcb30735b2066b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0309953232d9957aef4c7c5a24fcb30735b2066b", "html_url": "https://github.com/rust-lang/rust/commit/0309953232d9957aef4c7c5a24fcb30735b2066b"}, {"sha": "22d187a3f68017297102793e3350f18c00c23429", "url": "https://api.github.com/repos/rust-lang/rust/commits/22d187a3f68017297102793e3350f18c00c23429", "html_url": "https://github.com/rust-lang/rust/commit/22d187a3f68017297102793e3350f18c00c23429"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "a69e49b3f08003c2bcf4d5d7e37eadd1cac759a2", "filename": "src/ci/scripts/install-clang.sh", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c20c9219dae5ea56ce9bf1c211fafdc7da8700b9/src%2Fci%2Fscripts%2Finstall-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c20c9219dae5ea56ce9bf1c211fafdc7da8700b9/src%2Fci%2Fscripts%2Finstall-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-clang.sh?ref=c20c9219dae5ea56ce9bf1c211fafdc7da8700b9", "patch": "@@ -42,23 +42,14 @@ elif isWindows && [[ ${CUSTOM_MINGW-0} -ne 1 ]]; then\n     # clang has an output mode compatible with MinGW that we need. If it does we\n     # should switch to clang for MinGW as well!\n     #\n-    # Note that the LLVM installer is an NSIS installer\n-    #\n-    # Original downloaded here came from:\n-    #\n-    #   https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/LLVM-10.0.0-win64.exe\n-    #\n-    # That installer was run through `wine ./installer.exe /S /NCRC` on Linux\n-    # and then the resulting installation directory (found in\n-    # `$HOME/.wine/drive_c/Program Files/LLVM`) was packaged up into a tarball.\n-    # We've had issues otherwise that the installer will randomly hang, provide\n-    # not a lot of useful information, pollute global state, etc. In general the\n-    # tarball is just more confined and easier to deal with when working with\n-    # various CI environments.\n+    # The LLVM installer is an NSIS installer, which we can extract with 7z. We\n+    # don't want to run the installer directly; extracting it is more reliable\n+    # in CI environments.\n \n-    mkdir -p citools\n+    mkdir -p citools/clang-rust\n     cd citools\n-    curl -f \"${MIRRORS_BASE}/LLVM-${LLVM_VERSION}-win64.tar.gz\" | tar xzf -\n+    curl -f \"${MIRRORS_BASE}/LLVM-${LLVM_VERSION}-win64.exe\" -o \"LLVM-${LLVM_VERSION}-win64.exe\"\n+    7z x -oclang-rust/ \"LLVM-${LLVM_VERSION}-win64.exe\"\n     ciCommandSetEnv RUST_CONFIGURE_ARGS \\\n         \"${RUST_CONFIGURE_ARGS} --set llvm.clang-cl=$(pwd)/clang-rust/bin/clang-cl.exe\"\n fi"}]}