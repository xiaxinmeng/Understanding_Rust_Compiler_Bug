{"sha": "ba24e3302102eb97c253ad8d0ad08a5678428ae5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMjRlMzMwMjEwMmViOTdjMjUzYWQ4ZDBhZDA4YTU2Nzg0MjhhZTU=", "commit": {"author": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-11-10T03:34:53Z"}, "committer": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-11-14T08:41:07Z"}, "message": "Handle allocate/reallocate errors in ring_buf\nUse is_some() in clear to simplify the clear loop.", "tree": {"sha": "355a9ae977be67e5bb95a36b53e1c858b687155d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/355a9ae977be67e5bb95a36b53e1c858b687155d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba24e3302102eb97c253ad8d0ad08a5678428ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba24e3302102eb97c253ad8d0ad08a5678428ae5", "html_url": "https://github.com/rust-lang/rust/commit/ba24e3302102eb97c253ad8d0ad08a5678428ae5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba24e3302102eb97c253ad8d0ad08a5678428ae5/comments", "author": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a666df5fa6295e82d4350a6eb105c0370aca7a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a666df5fa6295e82d4350a6eb105c0370aca7a1", "html_url": "https://github.com/rust-lang/rust/commit/7a666df5fa6295e82d4350a6eb105c0370aca7a1"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "79201b1db54f37514573dab806386b773e122252", "filename": "src/libcollections/ring_buf.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ba24e3302102eb97c253ad8d0ad08a5678428ae5/src%2Flibcollections%2Fring_buf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba24e3302102eb97c253ad8d0ad08a5678428ae5/src%2Flibcollections%2Fring_buf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fring_buf.rs?ref=ba24e3302102eb97c253ad8d0ad08a5678428ae5", "patch": "@@ -115,15 +115,21 @@ impl<T> RingBuf<T> {\n         let size = cap.checked_mul(&mem::size_of::<T>())\n                       .expect(\"capacity overflow\");\n \n+        let ptr = if mem::size_of::<T>() != 0 {\n+            unsafe {\n+                let ptr = heap::allocate(size, mem::min_align_of::<T>())  as *mut T;;\n+                if ptr.is_null() { ::alloc::oom() }\n+                ptr\n+            }\n+        } else {\n+            heap::EMPTY as *mut T\n+        };\n+\n         RingBuf {\n             tail: 0,\n             head: 0,\n             cap: cap,\n-            ptr: if mem::size_of::<T>() != 0 {\n-                unsafe { heap::allocate(size, mem::min_align_of::<T>()) as *mut T }\n-            } else {\n-                heap::EMPTY as *mut T\n-            }\n+            ptr: ptr\n         }\n     }\n \n@@ -282,6 +288,7 @@ impl<T> RingBuf<T> {\n                                                 old,\n                                                 new,\n                                                 mem::min_align_of::<T>()) as *mut T;\n+                    if self.ptr.is_null() { ::alloc::oom() }\n                 }\n             }\n \n@@ -422,9 +429,7 @@ impl<T> RingBuf<T> {\n     /// ```\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n     pub fn clear(&mut self) {\n-        while !self.is_empty() {\n-            self.pop_front();\n-        }\n+        while self.pop_front().is_some() {}\n         self.head = 0;\n         self.tail = 0;\n     }\n@@ -720,7 +725,7 @@ impl<'a, T> Iterator<&'a mut T> for MutItems<'a, T> {\n         if mem::size_of::<T>() != 0 {\n             unsafe { Some(&mut *self.ptr.offset(tail as int)) }\n         } else {\n-            // use a none zero pointer\n+            // use a non-zero pointer\n             Some(unsafe { mem::transmute(1u) })\n         }\n     }"}]}