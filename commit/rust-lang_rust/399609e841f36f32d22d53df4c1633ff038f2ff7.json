{"sha": "399609e841f36f32d22d53df4c1633ff038f2ff7", "node_id": "C_kwDOAAsO6NoAKDM5OTYwOWU4NDFmMzZmMzJkMjJkNTNkZjRjMTYzM2ZmMDM4ZjJmZjc", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-07-26T14:39:06Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:26:52Z"}, "message": "Add debug! calls", "tree": {"sha": "67d895dc4437820af784345c6387765bcb7372e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67d895dc4437820af784345c6387765bcb7372e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/399609e841f36f32d22d53df4c1633ff038f2ff7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1ywACgkQgTGiTgx5\n76/NOBAAm3RUNYHIfyPwfPir7YSdznCJs75bepeR2rcZYGNu3mH1otJ8UTwfY3wR\napoa063RNu5pKpLFdp3Dufs4dG+82WewO7ai2XEL42UclFbMOW1bGA3iXPSxqLNx\nNf7w77VRAvu7USQ5wcstrLTFupsmPScFc48FpuJZSSfqefCoovOcrn+AduKx5xEr\nI0lIwYmaxEJgy3gLhGW9FnK/GtUYvGnfChB6GKZweJTV9KJMaWF9IXFQiC2gZTgJ\nAbz7ErEU1AtqNtpoAvIgeeya8Fb13Is9yhN5Hd9L4nV+a3L1aoZSSJIEiHAFsz0b\nJ9bK2Is9cwSaz15848u1EL3ohB8CqpdZbqI0l6fIZDkQjCwMJl5UTnNSwFbPDwT2\nu9h6EU2NC0w6azi19/IiYb7fTIs8r7n6Yelpzf8oBEEM6MYuSK3IHV3EX9enPxz4\nL18K6IKNyfNkRCQ721HqvYLgXAy/RvRY0Y3ZFp2WDjYxA8dJLfEUMQ3tHHqoLb3K\ncIEHlGPHk0NgBpWg8l7xcqdR3OxrbwpzMrF/I7NCf+EDiybIbXYzh7A0tPs7+7nh\n1SU7sVH+jV20XM+N9vFReWJX8Y8hRCSt5q7SUbXWK3tefie6phZhhAAJW2/ngcnI\nUk+FTghxwredboxj8ofF5x/wdfUi/NJsLa5KwCo6nzUme6EySeY=\n=4QZn\n-----END PGP SIGNATURE-----", "payload": "tree 67d895dc4437820af784345c6387765bcb7372e7\nparent cda2c04592850eb8248210beb8efd9c35de0dc19\nauthor Santiago Pastorino <spastorino@gmail.com> 1658846346 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623212 -0300\n\nAdd debug! calls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/399609e841f36f32d22d53df4c1633ff038f2ff7", "html_url": "https://github.com/rust-lang/rust/commit/399609e841f36f32d22d53df4c1633ff038f2ff7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/399609e841f36f32d22d53df4c1633ff038f2ff7/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cda2c04592850eb8248210beb8efd9c35de0dc19", "url": "https://api.github.com/repos/rust-lang/rust/commits/cda2c04592850eb8248210beb8efd9c35de0dc19", "html_url": "https://github.com/rust-lang/rust/commit/cda2c04592850eb8248210beb8efd9c35de0dc19"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "b8383af521fde4759438ff46ebb8737871bd1eb4", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/399609e841f36f32d22d53df4c1633ff038f2ff7/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399609e841f36f32d22d53df4c1633ff038f2ff7/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=399609e841f36f32d22d53df4c1633ff038f2ff7", "patch": "@@ -1378,6 +1378,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 lctx.lower_param_bounds(bounds, itctx, true)\n             } else {\n                 if std::env::var(\"NEW_COLLECT_LIFETIMES\").is_ok() {\n+                    debug!(?lctx.captured_lifetimes);\n+\n                     let lifetime_stash = std::mem::replace(\n                         &mut lctx.captured_lifetimes,\n                         Some(LifetimeCaptureContext {\n@@ -1388,6 +1390,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     );\n \n                     let (lifetimes_in_bounds, binders_to_ignore) = ast::lifetimes_in_bounds(bounds);\n+                    debug!(?lifetimes_in_bounds);\n+                    debug!(?binders_to_ignore);\n \n                     for lifetime in &lifetimes_in_bounds {\n                         let ident = lifetime.ident;\n@@ -1397,6 +1401,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             .resolver\n                             .get_lifetime_res(lifetime.id)\n                             .unwrap_or(LifetimeRes::Error);\n+                        debug!(?res);\n \n                         if let Some(mut captured_lifetimes) = lctx.captured_lifetimes.take() {\n                             match res {"}]}