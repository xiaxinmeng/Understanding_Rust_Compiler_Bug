{"sha": "92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyZDRhZTJiZTJlOTQyOGM5YWI1MjNmMDRmOTE3YTQxYWMwZjc2MGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-08T15:25:35Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-08T15:37:35Z"}, "message": "rename `irrefutable_let_pattern` to `irrefutable_let_patterns`", "tree": {"sha": "9ff210c877bf15d3edf6fa99ed82a97ea61786a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ff210c877bf15d3edf6fa99ed82a97ea61786a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "html_url": "https://github.com/rust-lang/rust/commit/92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7c7f5f07139cd4afe6e8db13942a0ec250ded70", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c7f5f07139cd4afe6e8db13942a0ec250ded70", "html_url": "https://github.com/rust-lang/rust/commit/e7c7f5f07139cd4afe6e8db13942a0ec250ded70"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "0d782e1c5395fabfe9428c7bb38b1ece086d0777", "filename": "src/doc/unstable-book/src/language-features/irrefutable-let-patterns.md", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Firrefutable-let-patterns.md", "raw_url": "https://github.com/rust-lang/rust/raw/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Firrefutable-let-patterns.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Firrefutable-let-patterns.md?ref=92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "patch": "@@ -1,4 +1,4 @@\n-# `irrefutable_let_pattern`\n+# `irrefutable_let_patterns`\n \n The tracking issue for this feature is: [#44495]\n \n@@ -11,13 +11,13 @@ in the `if let` and `while let` forms. The old way was to always error\n but now with a tag the error-by-default lint can be switched off.\n \n ```rust\n-#![feature(irrefutable_let_pattern)]\n+#![feature(irrefutable_let_patterns)]\n \n fn main() {\n-    #[allow(irrefutable_let_pattern)]\n+    #[allow(irrefutable_let_patterns)]\n     if let _ = 5 {}\n \n-    #[allow(irrefutable_let_pattern)]\n+    #[allow(irrefutable_let_patterns)]\n     while let _ = 5 {}\n }\n ```", "previous_filename": "src/doc/unstable-book/src/language-features/irrefutable-let-pattern.md"}, {"sha": "895f050d3997d03884836820c21e088d398e4f44", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "patch": "@@ -369,7 +369,7 @@ fn check_arms<'a, 'tcx>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n                 NotUseful => {\n                     match source {\n                         hir::MatchSource::IfLetDesugar { .. } => {\n-                            if cx.tcx.features().irrefutable_let_pattern {\n+                            if cx.tcx.features().irrefutable_let_patterns {\n                                 cx.tcx.lint_node(\n                                     lint::builtin::IRREFUTABLE_LET_PATTERNS,\n                                     hir_pat.id, pat.span,\n@@ -404,7 +404,7 @@ fn check_arms<'a, 'tcx>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n                                 },\n                                 // The arm with the wildcard pattern.\n                                 1 => {\n-                                    if cx.tcx.features().irrefutable_let_pattern {\n+                                    if cx.tcx.features().irrefutable_let_patterns {\n                                         cx.tcx.lint_node(\n                                             lint::builtin::IRREFUTABLE_LET_PATTERNS,\n                                             hir_pat.id, pat.span,"}, {"sha": "01820379c96be29ad4d4a271652f0d9c014dc32e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "patch": "@@ -468,7 +468,7 @@ declare_features! (\n     (active, tool_attributes, \"1.25.0\", Some(44690), None),\n \n     // allow irrefutable patterns in if-let and while-let statements (RFC 2086)\n-    (active, irrefutable_let_pattern, \"1.27.0\", Some(44495), None),\n+    (active, irrefutable_let_patterns, \"1.27.0\", Some(44495), None),\n \n     // Allows use of the :literal macro fragment specifier (RFC 1576)\n     (active, macro_literal_matcher, \"1.27.0\", Some(35625), None),"}, {"sha": "7cd026e21d6d878387cba7e9c0034202cfbfc39f", "filename": "src/test/compile-fail/feature-gate-without_gate_irrefutable_pattern.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-without_gate_irrefutable_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-without_gate_irrefutable_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-without_gate_irrefutable_pattern.rs?ref=92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "patch": "@@ -1,4 +1,4 @@\n-// gate-test-irrefutable_let_pattern\n+// gate-test-irrefutable_let_patterns\n \n // Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n@@ -11,7 +11,7 @@\n // except according to those terms.\n \n fn main() {\n-    #[allow(irrefutable_let_pattern)]\n+    #[allow(irrefutable_let_patterns)]\n     if let _ = 5 {}\n     //~^ ERROR 15:12: 15:13: irrefutable if-let pattern [E0162]\n }"}, {"sha": "8c9a24f4e72225a089e85fb56f0c892ba4e67288", "filename": "src/test/compile-fail/should-fail-no_gate_irrefutable_if_let_pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Fcompile-fail%2Fshould-fail-no_gate_irrefutable_if_let_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Fcompile-fail%2Fshould-fail-no_gate_irrefutable_if_let_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshould-fail-no_gate_irrefutable_if_let_pattern.rs?ref=92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// should-fail-irrefutable_let_pattern\n+// should-fail-irrefutable_let_patterns\n fn main() {\n     if let _ = 5 {}\n     //~^ ERROR irrefutable if-let pattern [E0162]"}, {"sha": "6f95f10c0d93f23c241829c5097165d23e8e6a59", "filename": "src/test/compile-fail/should-fail-with_gate_irrefutable_pattern_deny.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Fcompile-fail%2Fshould-fail-with_gate_irrefutable_pattern_deny.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Fcompile-fail%2Fshould-fail-with_gate_irrefutable_pattern_deny.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshould-fail-with_gate_irrefutable_pattern_deny.rs?ref=92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(irrefutable_let_pattern)]\n+#![feature(irrefutable_let_patterns)]\n \n-// should-fail-irrefutable_let_pattern_with_gate\n+// should-fail-irrefutable_let_patterns_with_gate\n fn main() {\n     if let _ = 5 {}\n-    //~^ ERROR irrefutable if-let pattern [irrefutable_let_pattern]\n+    //~^ ERROR irrefutable if-let pattern [irrefutable_let_patterns]\n }"}, {"sha": "689a54d60f3fc71caf1b31e42de421b82f1fc234", "filename": "src/test/run-pass/allow_irrefutable_let_patterns.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Frun-pass%2Fallow_irrefutable_let_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d4ae2be2e9428c9ab523f04f917a41ac0f760e/src%2Ftest%2Frun-pass%2Fallow_irrefutable_let_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallow_irrefutable_let_patterns.rs?ref=92d4ae2be2e9428c9ab523f04f917a41ac0f760e", "patch": "@@ -8,14 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(irrefutable_let_pattern)]\n+#![feature(irrefutable_let_patterns)]\n \n-// must-compile-successfully-irrefutable_let_pattern_with_gate\n+// must-compile-successfully-irrefutable_let_patterns_with_gate\n fn main() {\n-    #[allow(irrefutable_let_pattern)]\n+    #[allow(irrefutable_let_patterns)]\n     if let _ = 5 {}\n \n-    #[allow(irrefutable_let_pattern)]\n+    #[allow(irrefutable_let_patterns)]\n     while let _ = 5 {\n         break;\n     }"}]}