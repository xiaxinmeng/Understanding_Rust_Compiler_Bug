{"sha": "e50f5756aac024e5f10bf918e321afa1e671d7af", "node_id": "C_kwDOAAsO6NoAKGU1MGY1NzU2YWFjMDI0ZTVmMTBiZjkxOGUzMjFhZmExZTY3MWQ3YWY", "commit": {"author": {"name": "akida31", "email": "akida3@protonmail.com", "date": "2022-10-08T13:50:35Z"}, "committer": {"name": "akida31", "email": "akida3@protonmail.com", "date": "2022-12-13T15:27:21Z"}, "message": "Fix stderr of tests which have improved diagnostics", "tree": {"sha": "6e89bf2564b0a1c7bbe2200f0011f726136ddee7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e89bf2564b0a1c7bbe2200f0011f726136ddee7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e50f5756aac024e5f10bf918e321afa1e671d7af", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ20GAFrM+jef+hIIAuGvLD2ft8kFAmOYmdwACgkQAuGvLD2f\nt8nv5g/+NP0tMamGdx5DHMQeFiBFqsCdva72MAYiQeuBUZV+xJ6QdEFc/R3hMtQq\nY6kEIlOPEgNZTzpvN2dCidvifS0QcqZPkqoaM94LKCvmOoKvoCVkXefPlDMw7HLC\ngiqEgQSNoAL8sTsPEbh2RhB/bmlNPKVvIhuRASALkJLzl90Y/Bou9O1weBWzKCib\nkDcoKH6ShwuGMq29O3eCwSwZM1hjwcjKtbME08nkKZ3Mu6MqUo7ZY1pz/JBeiuc5\nqQKLiQZ2Yo6SG2xFPl9I2UUbDjGrvoud0QyqlR78EOGhpRaqEjYfCSBE3YwDgGBP\nUgm/kEjNFnQTdlOwqeoyDbtjDHnNXSvOizsXApHy7TyxZEwsQbrp1g/FGKAXP/Zd\n228L7kLcwGxwuFdjvMHjzDxdm3nvJ+htBWPCqcGawfgAnAkTJLMsT9qx5wU/dGRJ\npeCbjjFT/S3ZPWLLMSDSCPXKwDBe6GQ2r8QOVvGvrc/fHsJwgoJssbaHNQuXBpWE\nUiZ7p8zWoLftsoAD+rd4ZZVBIpqCXLcKBgaa/icKLyxdS99IIWDMczpBFMlsKGK1\nP8VMCFZjMDwlHDqjUH+3YbGwD1ijJTWuSE0Fy9lX+V88wzd+6P25mt2eat+0+bs6\njbqH9XxvFi8ZWfQPsH7NvBb0kwrSU7d95hWVzv2mcedxR5pkYus=\n=Vjzb\n-----END PGP SIGNATURE-----", "payload": "tree 6e89bf2564b0a1c7bbe2200f0011f726136ddee7\nparent 1e5d7724173c2ff16e1eacbb6b09e66daa0794e3\nauthor akida31 <akida3@protonmail.com> 1665237035 +0200\ncommitter akida31 <akida3@protonmail.com> 1670945241 +0100\n\nFix stderr of tests which have improved diagnostics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e50f5756aac024e5f10bf918e321afa1e671d7af", "html_url": "https://github.com/rust-lang/rust/commit/e50f5756aac024e5f10bf918e321afa1e671d7af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e50f5756aac024e5f10bf918e321afa1e671d7af/comments", "author": {"login": "Akida31", "id": 47895118, "node_id": "MDQ6VXNlcjQ3ODk1MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/47895118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Akida31", "html_url": "https://github.com/Akida31", "followers_url": "https://api.github.com/users/Akida31/followers", "following_url": "https://api.github.com/users/Akida31/following{/other_user}", "gists_url": "https://api.github.com/users/Akida31/gists{/gist_id}", "starred_url": "https://api.github.com/users/Akida31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Akida31/subscriptions", "organizations_url": "https://api.github.com/users/Akida31/orgs", "repos_url": "https://api.github.com/users/Akida31/repos", "events_url": "https://api.github.com/users/Akida31/events{/privacy}", "received_events_url": "https://api.github.com/users/Akida31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Akida31", "id": 47895118, "node_id": "MDQ6VXNlcjQ3ODk1MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/47895118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Akida31", "html_url": "https://github.com/Akida31", "followers_url": "https://api.github.com/users/Akida31/followers", "following_url": "https://api.github.com/users/Akida31/following{/other_user}", "gists_url": "https://api.github.com/users/Akida31/gists{/gist_id}", "starred_url": "https://api.github.com/users/Akida31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Akida31/subscriptions", "organizations_url": "https://api.github.com/users/Akida31/orgs", "repos_url": "https://api.github.com/users/Akida31/repos", "events_url": "https://api.github.com/users/Akida31/events{/privacy}", "received_events_url": "https://api.github.com/users/Akida31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e5d7724173c2ff16e1eacbb6b09e66daa0794e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e5d7724173c2ff16e1eacbb6b09e66daa0794e3", "html_url": "https://github.com/rust-lang/rust/commit/1e5d7724173c2ff16e1eacbb6b09e66daa0794e3"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "af6ae1273041ac330eaf5722b1771b6403182680", "filename": "src/test/ui/anonymous-higher-ranked-lifetime.stderr", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/e50f5756aac024e5f10bf918e321afa1e671d7af/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e50f5756aac024e5f10bf918e321afa1e671d7af/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanonymous-higher-ranked-lifetime.stderr?ref=e50f5756aac024e5f10bf918e321afa1e671d7af", "patch": "@@ -13,6 +13,14 @@ note: required by a bound in `f1`\n    |\n LL | fn f1<F>(_: F) where F: Fn(&(), &()) {}\n    |                         ^^^^^^^^^^^^ required by this bound in `f1`\n+help: hint: consider borrowing here:\n+   |\n+LL |     f1(|_: &(), _: ()| {});\n+   |            ~~~\n+help: hint: consider borrowing here:\n+   |\n+LL |     f1(|_: (), _: &()| {});\n+   |                   ~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:3:5\n@@ -29,6 +37,14 @@ note: required by a bound in `f2`\n    |\n LL | fn f2<F>(_: F) where F: for<'a> Fn(&'a (), &()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f2`\n+help: hint: consider borrowing here:\n+   |\n+LL |     f2(|_: &'a (), _: ()| {});\n+   |            ~~~~~~\n+help: hint: consider borrowing here:\n+   |\n+LL |     f2(|_: (), _: &()| {});\n+   |                   ~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:4:5\n@@ -45,6 +61,14 @@ note: required by a bound in `f3`\n    |\n LL | fn f3<'a, F>(_: F) where F: Fn(&'a (), &()) {}\n    |                             ^^^^^^^^^^^^^^^ required by this bound in `f3`\n+help: hint: consider borrowing here:\n+   |\n+LL |     f3(|_: &(), _: ()| {});\n+   |            ~~~\n+help: hint: consider borrowing here:\n+   |\n+LL |     f3(|_: (), _: &()| {});\n+   |                   ~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:5:5\n@@ -61,6 +85,14 @@ note: required by a bound in `f4`\n    |\n LL | fn f4<F>(_: F) where F: for<'r> Fn(&(), &'r ()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f4`\n+help: hint: consider borrowing here:\n+   |\n+LL |     f4(|_: &(), _: ()| {});\n+   |            ~~~\n+help: hint: consider borrowing here:\n+   |\n+LL |     f4(|_: (), _: &'r ()| {});\n+   |                   ~~~~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:6:5\n@@ -77,6 +109,14 @@ note: required by a bound in `f5`\n    |\n LL | fn f5<F>(_: F) where F: for<'r> Fn(&'r (), &'r ()) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `f5`\n+help: hint: consider borrowing here:\n+   |\n+LL |     f5(|_: &'r (), _: ()| {});\n+   |            ~~~~~~\n+help: hint: consider borrowing here:\n+   |\n+LL |     f5(|_: (), _: &'r ()| {});\n+   |                   ~~~~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:7:5\n@@ -93,6 +133,10 @@ note: required by a bound in `g1`\n    |\n LL | fn g1<F>(_: F) where F: Fn(&(), Box<dyn Fn(&())>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g1`\n+help: hint: consider borrowing here:\n+   |\n+LL |     g1(|_: &(), _: ()| {});\n+   |            ~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:8:5\n@@ -109,6 +153,10 @@ note: required by a bound in `g2`\n    |\n LL | fn g2<F>(_: F) where F: Fn(&(), fn(&())) {}\n    |                         ^^^^^^^^^^^^^^^^ required by this bound in `g2`\n+help: hint: consider borrowing here:\n+   |\n+LL |     g2(|_: &(), _: ()| {});\n+   |            ~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:9:5\n@@ -125,6 +173,10 @@ note: required by a bound in `g3`\n    |\n LL | fn g3<F>(_: F) where F: for<'s> Fn(&'s (), Box<dyn Fn(&())>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g3`\n+help: hint: consider borrowing here:\n+   |\n+LL |     g3(|_: &'s (), _: ()| {});\n+   |            ~~~~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:10:5\n@@ -141,6 +193,10 @@ note: required by a bound in `g4`\n    |\n LL | fn g4<F>(_: F) where F: Fn(&(), for<'r> fn(&'r ())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `g4`\n+help: hint: consider borrowing here:\n+   |\n+LL |     g4(|_: &(), _: ()| {});\n+   |            ~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:11:5\n@@ -157,6 +213,14 @@ note: required by a bound in `h1`\n    |\n LL | fn h1<F>(_: F) where F: Fn(&(), Box<dyn Fn(&())>, &(), fn(&(), &())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `h1`\n+help: hint: consider borrowing here:\n+   |\n+LL |     h1(|_: &(), _: (), _: (), _: ()| {});\n+   |            ~~~\n+help: hint: consider borrowing here:\n+   |\n+LL |     h1(|_: (), _: (), _: &(), _: ()| {});\n+   |                          ~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/anonymous-higher-ranked-lifetime.rs:12:5\n@@ -173,6 +237,14 @@ note: required by a bound in `h2`\n    |\n LL | fn h2<F>(_: F) where F: for<'t0> Fn(&(), Box<dyn Fn(&())>, &'t0 (), fn(&(), &())) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `h2`\n+help: hint: consider borrowing here:\n+   |\n+LL |     h2(|_: &(), _: (), _: (), _: ()| {});\n+   |            ~~~\n+help: hint: consider borrowing here:\n+   |\n+LL |     h2(|_: (), _: (), _: &'t0 (), _: ()| {});\n+   |                          ~~~~~~~\n \n error: aborting due to 11 previous errors\n "}, {"sha": "8a1a0d2440b1a83e4749a63b53470b1de6b0c637", "filename": "src/test/ui/mismatched_types/closure-arg-type-mismatch.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e50f5756aac024e5f10bf918e321afa1e671d7af/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e50f5756aac024e5f10bf918e321afa1e671d7af/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-type-mismatch.stderr?ref=e50f5756aac024e5f10bf918e321afa1e671d7af", "patch": "@@ -13,6 +13,10 @@ note: required by a bound in `map`\n    |\n LL |         F: FnMut(Self::Item) -> B,\n    |            ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::map`\n+help: hint: consider borrowing here:\n+   |\n+LL |     a.iter().map(|_: &(u32, u32)| 45);\n+   |                      ~~~~~~~~~~~\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/closure-arg-type-mismatch.rs:4:14"}, {"sha": "bbcce98f7d3ff7778e84fbe3f714dcc8cd282c6a", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e50f5756aac024e5f10bf918e321afa1e671d7af/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e50f5756aac024e5f10bf918e321afa1e671d7af/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=e50f5756aac024e5f10bf918e321afa1e671d7af", "patch": "@@ -13,6 +13,10 @@ note: required by a bound in `filter`\n    |\n LL |         P: FnMut(&Self::Item) -> bool,\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::filter`\n+help: hint: consider borrowing here:\n+   |\n+LL |     once::<&str>(\"str\").fuse().filter(|a: &&str| true).count();\n+   |                                           ~~~~~\n \n error[E0599]: the method `count` exists for struct `Filter<Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:7:39: 7:48]>`, but its trait bounds were not satisfied\n   --> $DIR/issue-36053-2.rs:7:55"}]}