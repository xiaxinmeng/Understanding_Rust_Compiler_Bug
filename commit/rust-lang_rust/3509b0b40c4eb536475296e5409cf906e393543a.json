{"sha": "3509b0b40c4eb536475296e5409cf906e393543a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MDliMGI0MGM0ZWI1MzY0NzUyOTZlNTQwOWNmOTA2ZTM5MzU0M2E=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-09-23T20:47:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-23T20:47:07Z"}, "message": "Merge pull request #2082 from rust-lang-nursery/rustup\n\nRust upgrade to rustc 1.22.0-nightly (14039a42a 2017-09-22)", "tree": {"sha": "73bc71f174cb0f47235fd0f7485018dc1d7ff555", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73bc71f174cb0f47235fd0f7485018dc1d7ff555"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3509b0b40c4eb536475296e5409cf906e393543a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3509b0b40c4eb536475296e5409cf906e393543a", "html_url": "https://github.com/rust-lang/rust/commit/3509b0b40c4eb536475296e5409cf906e393543a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3509b0b40c4eb536475296e5409cf906e393543a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3df3bc68177e392ebc8876c62760ec79419ead2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3df3bc68177e392ebc8876c62760ec79419ead2", "html_url": "https://github.com/rust-lang/rust/commit/c3df3bc68177e392ebc8876c62760ec79419ead2"}, {"sha": "a822cab01f7f7c0db3fb55182e38a30b4fcbd3e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a822cab01f7f7c0db3fb55182e38a30b4fcbd3e4", "html_url": "https://github.com/rust-lang/rust/commit/a822cab01f7f7c0db3fb55182e38a30b4fcbd3e4"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "15a0ee74e6b07d6fd4e721a07375f2a02ee9cee8", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3509b0b40c4eb536475296e5409cf906e393543a/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/3509b0b40c4eb536475296e5409cf906e393543a/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=3509b0b40c4eb536475296e5409cf906e393543a", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.163\n+* Update to *rustc 1.22.0-nightly (14039a42a 2017-09-22)*\n+\n ## 0.0.162\n * Update to *rustc 1.22.0-nightly (0701b37d9 2017-09-18)*\n * New lint: [`chars_last_cmp`]"}, {"sha": "16aaf148c60a98894ab081bfea858dbbbacbd6c2", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3509b0b40c4eb536475296e5409cf906e393543a/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3509b0b40c4eb536475296e5409cf906e393543a/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=3509b0b40c4eb536475296e5409cf906e393543a", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.162\"\n+version = \"0.0.163\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -31,7 +31,7 @@ path = \"src/main.rs\"\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.162\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.163\", path = \"clippy_lints\" }\n # end automatic update\n cargo_metadata = \"0.2\"\n "}, {"sha": "a9496d5b414d79a4866382bb25228d0a7a6d057e", "filename": "PUBLISH.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3509b0b40c4eb536475296e5409cf906e393543a/PUBLISH.md", "raw_url": "https://github.com/rust-lang/rust/raw/3509b0b40c4eb536475296e5409cf906e393543a/PUBLISH.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/PUBLISH.md?ref=3509b0b40c4eb536475296e5409cf906e393543a", "patch": "@@ -7,7 +7,7 @@ Steps to publish a new clippy version\n - `git push`\n - Wait for Travis's approval.\n - Merge.\n-- `cargo publish` in `./clippy_clints`.\n+- `cargo publish` in `./clippy_lints`.\n - `cargo publish` in the root directory.\n - `git pull`.\n - `git tag -s v0.0.X -m \"v0.0.X\"`."}, {"sha": "96bd05162dcaaf58d7bd831448189e0f49107381", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3509b0b40c4eb536475296e5409cf906e393543a/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3509b0b40c4eb536475296e5409cf906e393543a/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=3509b0b40c4eb536475296e5409cf906e393543a", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.162\"\n+version = \"0.0.163\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "5cbb854be923dbc6458aeede43014f1fc27d811a", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3509b0b40c4eb536475296e5409cf906e393543a/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3509b0b40c4eb536475296e5409cf906e393543a/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=3509b0b40c4eb536475296e5409cf906e393543a", "patch": "@@ -113,7 +113,7 @@ fn check_fn_inner<'a, 'tcx>(\n                     .parameters\n                     .lifetimes;\n                 for bound in bounds {\n-                    if bound.name != \"'static\" && !bound.is_elided() {\n+                    if bound.name.name() != \"'static\" && !bound.is_elided() {\n                         return;\n                     }\n                     bounds_lts.push(bound);\n@@ -225,7 +225,7 @@ fn allowed_lts_from(named_lts: &[LifetimeDef]) -> HashSet<RefLt> {\n     let mut allowed_lts = HashSet::new();\n     for lt in named_lts {\n         if lt.bounds.is_empty() {\n-            allowed_lts.insert(RefLt::Named(lt.lifetime.name));\n+            allowed_lts.insert(RefLt::Named(lt.lifetime.name.name()));\n         }\n     }\n     allowed_lts.insert(RefLt::Unnamed);\n@@ -235,8 +235,8 @@ fn allowed_lts_from(named_lts: &[LifetimeDef]) -> HashSet<RefLt> {\n \n fn lts_from_bounds<'a, T: Iterator<Item = &'a Lifetime>>(mut vec: Vec<RefLt>, bounds_lts: T) -> Vec<RefLt> {\n     for lt in bounds_lts {\n-        if lt.name != \"'static\" {\n-            vec.push(RefLt::Named(lt.name));\n+        if lt.name.name() != \"'static\" {\n+            vec.push(RefLt::Named(lt.name.name()));\n         }\n     }\n \n@@ -266,12 +266,12 @@ impl<'v, 't> RefVisitor<'v, 't> {\n \n     fn record(&mut self, lifetime: &Option<Lifetime>) {\n         if let Some(ref lt) = *lifetime {\n-            if lt.name == \"'static\" {\n+            if lt.name.name() == \"'static\" {\n                 self.lts.push(RefLt::Static);\n             } else if lt.is_elided() {\n                 self.lts.push(RefLt::Unnamed);\n             } else {\n-                self.lts.push(RefLt::Named(lt.name));\n+                self.lts.push(RefLt::Named(lt.name.name()));\n             }\n         } else {\n             self.lts.push(RefLt::Unnamed);\n@@ -396,7 +396,7 @@ struct LifetimeChecker {\n impl<'tcx> Visitor<'tcx> for LifetimeChecker {\n     // for lifetimes as parameters of generics\n     fn visit_lifetime(&mut self, lifetime: &'tcx Lifetime) {\n-        self.map.remove(&lifetime.name);\n+        self.map.remove(&lifetime.name.name());\n     }\n \n     fn visit_lifetime_def(&mut self, _: &'tcx LifetimeDef) {\n@@ -415,7 +415,7 @@ fn report_extra_lifetimes<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, func: &'tcx\n     let hs = generics\n         .lifetimes\n         .iter()\n-        .map(|lt| (lt.lifetime.name, lt.lifetime.span))\n+        .map(|lt| (lt.lifetime.name.name(), lt.lifetime.span))\n         .collect();\n     let mut checker = LifetimeChecker { map: hs };\n \n@@ -434,7 +434,7 @@ struct BodyLifetimeChecker {\n impl<'tcx> Visitor<'tcx> for BodyLifetimeChecker {\n     // for lifetimes as parameters of generics\n     fn visit_lifetime(&mut self, lifetime: &'tcx Lifetime) {\n-        if lifetime.name != keywords::Invalid.name() && lifetime.name != \"'static\" {\n+        if lifetime.name.name() != keywords::Invalid.name() && lifetime.name.name() != \"'static\" {\n             self.lifetimes_used_in_body = true;\n         }\n     }"}, {"sha": "90f1e87796d366b86e209e222480c571a5059d9e", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3509b0b40c4eb536475296e5409cf906e393543a/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3509b0b40c4eb536475296e5409cf906e393543a/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=3509b0b40c4eb536475296e5409cf906e393543a", "patch": "@@ -223,7 +223,7 @@ fn check_ty(cx: &LateContext, ast_ty: &hir::Ty, is_local: bool) {\n                         let ltopt = if lt.is_elided() {\n                             \"\".to_owned()\n                         } else {\n-                            format!(\"{} \", lt.name.as_str())\n+                            format!(\"{} \", lt.name.name().as_str())\n                         };\n                         let mutopt = if *mutbl == Mutability::MutMutable {\n                             \"mut \""}, {"sha": "7a7bb840ba98afa210d8c4d1cf4421e876de4ed4", "filename": "tests/ui/mut_mut.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3509b0b40c4eb536475296e5409cf906e393543a/tests%2Fui%2Fmut_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3509b0b40c4eb536475296e5409cf906e393543a/tests%2Fui%2Fmut_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.stderr?ref=3509b0b40c4eb536475296e5409cf906e393543a", "patch": "@@ -28,16 +28,16 @@ error: this expression mutably borrows a mutable reference. Consider reborrowing\n    |                     ^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:30:17\n+  --> $DIR/mut_mut.rs:30:33\n    |\n 30 |         let y : &mut &mut u32 = &mut &mut 2;\n-   |                 ^^^^^^^^^^^^^\n+   |                                 ^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:30:33\n+  --> $DIR/mut_mut.rs:30:17\n    |\n 30 |         let y : &mut &mut u32 = &mut &mut 2;\n-   |                                 ^^^^^^^^^^^\n+   |                 ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:30:17\n@@ -46,22 +46,22 @@ error: generally you want to avoid `&mut &mut _` if possible\n    |                 ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:35:17\n+  --> $DIR/mut_mut.rs:35:38\n    |\n 35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n-   |                 ^^^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:35:22\n+  --> $DIR/mut_mut.rs:35:17\n    |\n 35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n-   |                      ^^^^^^^^^^^^^\n+   |                 ^^^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:35:38\n+  --> $DIR/mut_mut.rs:35:22\n    |\n 35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n-   |                                      ^^^^^^^^^^^^^^^^\n+   |                      ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:35:17"}]}