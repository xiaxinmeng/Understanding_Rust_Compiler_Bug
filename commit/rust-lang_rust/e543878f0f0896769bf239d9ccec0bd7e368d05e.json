{"sha": "e543878f0f0896769bf239d9ccec0bd7e368d05e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NDM4NzhmMGYwODk2NzY5YmYyMzlkOWNjZWMwYmQ3ZTM2OGQwNWU=", "commit": {"author": {"name": "gamazeps", "email": "gamaz3ps@gmail.com", "date": "2014-09-23T15:24:46Z"}, "committer": {"name": "gamazeps", "email": "gamaz3ps@gmail.com", "date": "2014-09-29T16:14:28Z"}, "message": "Replaced some TODO by FIXME\n\ncloses #17478", "tree": {"sha": "b31bce3a3b2ffe31192bafba4a6a45c8f863365a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b31bce3a3b2ffe31192bafba4a6a45c8f863365a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e543878f0f0896769bf239d9ccec0bd7e368d05e", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e543878f0f0896769bf239d9ccec0bd7e368d05e", "html_url": "https://github.com/rust-lang/rust/commit/e543878f0f0896769bf239d9ccec0bd7e368d05e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e543878f0f0896769bf239d9ccec0bd7e368d05e/comments", "author": {"login": "gamazeps", "id": 4716134, "node_id": "MDQ6VXNlcjQ3MTYxMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4716134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gamazeps", "html_url": "https://github.com/gamazeps", "followers_url": "https://api.github.com/users/gamazeps/followers", "following_url": "https://api.github.com/users/gamazeps/following{/other_user}", "gists_url": "https://api.github.com/users/gamazeps/gists{/gist_id}", "starred_url": "https://api.github.com/users/gamazeps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gamazeps/subscriptions", "organizations_url": "https://api.github.com/users/gamazeps/orgs", "repos_url": "https://api.github.com/users/gamazeps/repos", "events_url": "https://api.github.com/users/gamazeps/events{/privacy}", "received_events_url": "https://api.github.com/users/gamazeps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gamazeps", "id": 4716134, "node_id": "MDQ6VXNlcjQ3MTYxMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4716134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gamazeps", "html_url": "https://github.com/gamazeps", "followers_url": "https://api.github.com/users/gamazeps/followers", "following_url": "https://api.github.com/users/gamazeps/following{/other_user}", "gists_url": "https://api.github.com/users/gamazeps/gists{/gist_id}", "starred_url": "https://api.github.com/users/gamazeps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gamazeps/subscriptions", "organizations_url": "https://api.github.com/users/gamazeps/orgs", "repos_url": "https://api.github.com/users/gamazeps/repos", "events_url": "https://api.github.com/users/gamazeps/events{/privacy}", "received_events_url": "https://api.github.com/users/gamazeps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f9669c7489cc383bc6616c5f9ed217ae37e3d56", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f9669c7489cc383bc6616c5f9ed217ae37e3d56", "html_url": "https://github.com/rust-lang/rust/commit/2f9669c7489cc383bc6616c5f9ed217ae37e3d56"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1b6794e77f9f45484d7071eb760c5c77e5256996", "filename": "src/etc/emacs/rust-mode-tests.el", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e543878f0f0896769bf239d9ccec0bd7e368d05e/src%2Fetc%2Femacs%2Frust-mode-tests.el", "raw_url": "https://github.com/rust-lang/rust/raw/e543878f0f0896769bf239d9ccec0bd7e368d05e/src%2Fetc%2Femacs%2Frust-mode-tests.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode-tests.el?ref=e543878f0f0896769bf239d9ccec0bd7e368d05e", "patch": "@@ -623,7 +623,7 @@ Convert the line-column information from that list into a buffer position value.\n       (move-to-column column)\n       (point))))\n \n-;;; TODO: Maybe add an ERT explainer function (something that shows the\n+;;; FIXME: Maybe add an ERT explainer function (something that shows the\n ;;; surrounding code of the final point, not just the position).\n (defun rust-test-motion (source-code init-pos final-pos manip-func &optional &rest args)\n   \"Test that MANIP-FUNC moves point from INIT-POS to FINAL-POS."}, {"sha": "1c48b9d4f0c51f33ed50e2cb831452e1e23bf64b", "filename": "src/etc/kate/rust.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e543878f0f0896769bf239d9ccec0bd7e368d05e/src%2Fetc%2Fkate%2Frust.xml", "raw_url": "https://github.com/rust-lang/rust/raw/e543878f0f0896769bf239d9ccec0bd7e368d05e/src%2Fetc%2Fkate%2Frust.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fkate%2Frust.xml?ref=e543878f0f0896769bf239d9ccec0bd7e368d05e", "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <!DOCTYPE language SYSTEM \"language.dtd\"\n [\n-\t<!-- TODO: Kate's regex engine has very limited support for\n+\t<!-- FIXME: Kate's regex engine has very limited support for\n \tpredefined char classes, so making rustIdent consistent with actual\n \tRust identifiers will be a bit difficult -->\n \t<!ENTITY rustIdent \"[a-zA-Z_][a-zA-Z_0-9]*\">"}, {"sha": "93931246a024043ae643a4bbf82c0eab7d927e53", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e543878f0f0896769bf239d9ccec0bd7e368d05e/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/e543878f0f0896769bf239d9ccec0bd7e368d05e/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=e543878f0f0896769bf239d9ccec0bd7e368d05e", "patch": "@@ -216,7 +216,7 @@ syn keyword rustTodo contained TODO FIXME XXX NB NOTE\n \n \" Folding rules {{{2\n \" Trivial folding rules to begin with.\n-\" TODO: use the AST to make really good folding\n+\" FIXME: use the AST to make really good folding\n syn region rustFoldBraces start=\"{\" end=\"}\" transparent fold\n \n \" Default highlighting {{{1"}]}