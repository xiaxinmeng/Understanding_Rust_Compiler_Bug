{"sha": "6c5aa765fb64758825fae0371b54ef07c3589e7a", "node_id": "C_kwDOAAsO6NoAKDZjNWFhNzY1ZmI2NDc1ODgyNWZhZTAzNzFiNTRlZjA3YzM1ODllN2E", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-31T12:20:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-31T12:20:04Z"}, "message": "Rollup merge of #89068 - bjorn3:restructure_rt2, r=joshtriplett\n\nRestructure std::rt (part 2)\n\nA couple more cleanups on top of https://github.com/rust-lang/rust/pull/89011\n\nBlocked on #89011", "tree": {"sha": "2a8f7021e38a2023c9d0a7b5ba029b3a6b7978a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a8f7021e38a2023c9d0a7b5ba029b3a6b7978a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c5aa765fb64758825fae0371b54ef07c3589e7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhfon1CRBK7hj4Ov3rIwAArI4IAB0muy+CsCCU3AE0KG9UQLaU\nj3eeusuCxWD+UHfbWqe5G0RsifgelNXmo92FRXzpg7n+XrVziytrrvVIRJZxwmtq\nbDvDNSCKTmMnoVhYmxwyMZmzAAJ5PpNjxiOhHLvn64VSN45H1OR4Fqs3BJ8TJ4eJ\n0tZcAiaSb8Dybk4U7gkNlVYn81vjetZIUgjvUidV11MTXcHdnKq9HGlOQLZkDwwB\nsVl97Yy7EQONPDpWr/cCGX662m9tP+LOv7WMOMHYOSfwCGJ7DYzE7XSYc6rmcxRh\nD1iiX9KrDZa+7wPLKMFCfr1tw2OZxKLGuve2YzaSg/m9XlKiiYQU8sF4fHyrnnI=\n=6zza\n-----END PGP SIGNATURE-----\n", "payload": "tree 2a8f7021e38a2023c9d0a7b5ba029b3a6b7978a1\nparent 58899c4d9c63a6d27ac395ee9597ae797df7f026\nparent 0cc4cce057c0272e1997fc1d684c0b5d417eac4d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635682804 +0100\ncommitter GitHub <noreply@github.com> 1635682804 +0100\n\nRollup merge of #89068 - bjorn3:restructure_rt2, r=joshtriplett\n\nRestructure std::rt (part 2)\n\nA couple more cleanups on top of https://github.com/rust-lang/rust/pull/89011\n\nBlocked on #89011\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5aa765fb64758825fae0371b54ef07c3589e7a", "html_url": "https://github.com/rust-lang/rust/commit/6c5aa765fb64758825fae0371b54ef07c3589e7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c5aa765fb64758825fae0371b54ef07c3589e7a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58899c4d9c63a6d27ac395ee9597ae797df7f026", "url": "https://api.github.com/repos/rust-lang/rust/commits/58899c4d9c63a6d27ac395ee9597ae797df7f026", "html_url": "https://github.com/rust-lang/rust/commit/58899c4d9c63a6d27ac395ee9597ae797df7f026"}, {"sha": "0cc4cce057c0272e1997fc1d684c0b5d417eac4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cc4cce057c0272e1997fc1d684c0b5d417eac4d", "html_url": "https://github.com/rust-lang/rust/commit/0cc4cce057c0272e1997fc1d684c0b5d417eac4d"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "0f276e89794d890aafce8ef26f33acf943e6195b", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c5aa765fb64758825fae0371b54ef07c3589e7a/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5aa765fb64758825fae0371b54ef07c3589e7a/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=6c5aa765fb64758825fae0371b54ef07c3589e7a", "patch": "@@ -299,9 +299,7 @@ mod util;\n \n const DEFAULT_BUF_SIZE: usize = crate::sys_common::io::DEFAULT_BUF_SIZE;\n \n-pub(crate) fn cleanup() {\n-    stdio::cleanup()\n-}\n+pub(crate) use stdio::cleanup;\n \n struct Guard<'a> {\n     buf: &'a mut Vec<u8>,"}, {"sha": "08e58257572b24fcfddeb1a18be409b6b124c8a6", "filename": "library/std/src/rt.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c5aa765fb64758825fae0371b54ef07c3589e7a/library%2Fstd%2Fsrc%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5aa765fb64758825fae0371b54ef07c3589e7a/library%2Fstd%2Fsrc%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Frt.rs?ref=6c5aa765fb64758825fae0371b54ef07c3589e7a", "patch": "@@ -128,8 +128,7 @@ fn lang_start_internal(\n     let ret_code = panic::catch_unwind(move || panic::catch_unwind(main).unwrap_or(101) as isize)\n         .map_err(move |e| {\n             mem::forget(e);\n-            rtprintpanic!(\"drop of the panic payload panicked\");\n-            sys::abort_internal()\n+            rtabort!(\"drop of the panic payload panicked\");\n         });\n     panic::catch_unwind(cleanup).map_err(rt_abort)?;\n     ret_code"}, {"sha": "1e8d1137ac8b865f1a8bbb8a74d57baec9ded908", "filename": "library/std/src/sys/unix/stack_overflow.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6c5aa765fb64758825fae0371b54ef07c3589e7a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5aa765fb64758825fae0371b54ef07c3589e7a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs?ref=6c5aa765fb64758825fae0371b54ef07c3589e7a", "patch": "@@ -6,7 +6,7 @@ pub use self::imp::cleanup;\n pub use self::imp::init;\n \n pub struct Handler {\n-    _data: *mut libc::c_void,\n+    data: *mut libc::c_void,\n }\n \n impl Handler {\n@@ -15,14 +15,14 @@ impl Handler {\n     }\n \n     fn null() -> Handler {\n-        Handler { _data: crate::ptr::null_mut() }\n+        Handler { data: crate::ptr::null_mut() }\n     }\n }\n \n impl Drop for Handler {\n     fn drop(&mut self) {\n         unsafe {\n-            drop_handler(self);\n+            drop_handler(self.data);\n         }\n     }\n }\n@@ -134,12 +134,12 @@ mod imp {\n         }\n \n         let handler = make_handler();\n-        MAIN_ALTSTACK.store(handler._data, Ordering::Relaxed);\n+        MAIN_ALTSTACK.store(handler.data, Ordering::Relaxed);\n         mem::forget(handler);\n     }\n \n     pub unsafe fn cleanup() {\n-        Handler { _data: MAIN_ALTSTACK.load(Ordering::Relaxed) };\n+        drop_handler(MAIN_ALTSTACK.load(Ordering::Relaxed));\n     }\n \n     unsafe fn get_stackp() -> *mut libc::c_void {\n@@ -176,14 +176,14 @@ mod imp {\n         if stack.ss_flags & SS_DISABLE != 0 {\n             stack = get_stack();\n             sigaltstack(&stack, ptr::null_mut());\n-            Handler { _data: stack.ss_sp as *mut libc::c_void }\n+            Handler { data: stack.ss_sp as *mut libc::c_void }\n         } else {\n             Handler::null()\n         }\n     }\n \n-    pub unsafe fn drop_handler(handler: &mut Handler) {\n-        if !handler._data.is_null() {\n+    pub unsafe fn drop_handler(data: *mut libc::c_void) {\n+        if !data.is_null() {\n             let stack = libc::stack_t {\n                 ss_sp: ptr::null_mut(),\n                 ss_flags: SS_DISABLE,\n@@ -196,7 +196,7 @@ mod imp {\n             sigaltstack(&stack, ptr::null_mut());\n             // We know from `get_stackp` that the alternate stack we installed is part of a mapping\n             // that started one page earlier, so walk back a page and unmap from there.\n-            munmap(handler._data.sub(page_size()), SIGSTKSZ + page_size());\n+            munmap(data.sub(page_size()), SIGSTKSZ + page_size());\n         }\n     }\n }\n@@ -220,5 +220,5 @@ mod imp {\n         super::Handler::null()\n     }\n \n-    pub unsafe fn drop_handler(_handler: &mut super::Handler) {}\n+    pub unsafe fn drop_handler(_data: *mut libc::c_void) {}\n }"}, {"sha": "dc193582c6a50bec8fe0184eb0a6a5bcc6fecc52", "filename": "src/test/ui/rt-explody-panic-payloads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c5aa765fb64758825fae0371b54ef07c3589e7a/src%2Ftest%2Fui%2Frt-explody-panic-payloads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5aa765fb64758825fae0371b54ef07c3589e7a/src%2Ftest%2Fui%2Frt-explody-panic-payloads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frt-explody-panic-payloads.rs?ref=6c5aa765fb64758825fae0371b54ef07c3589e7a", "patch": "@@ -25,6 +25,6 @@ fn main() {\n     println!(\"{:#?}\", output);\n     let stderr = std::str::from_utf8(&output.stderr);\n     assert!(stderr.map(|v| {\n-        v.ends_with(\"drop of the panic payload panicked\")\n+        v.ends_with(\"fatal runtime error: drop of the panic payload panicked\\n\")\n     }).unwrap_or(false));\n }"}]}