{"sha": "8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNTVmOWU3YTk3MzY2YmJmMmI2YTFkMmRjNjY1YmZhZjM4YThmNGU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-22T15:45:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-22T15:45:29Z"}, "message": "Rollup merge of #53418 - ekse:suggestions-applicability, r=estebank\n\nMark some suggestions as MachineApplicable\n\nI think the following suggestions should be safe to mark as `MachineApplicable`.\n\nr? @estebank", "tree": {"sha": "ce8a785c458138ded07cfa91ed13d09435d668c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8a785c458138ded07cfa91ed13d09435d668c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbfYUaCRBK7hj4Ov3rIwAAdHIIAGmqe2B+OcRUTZv4l06PjWPg\n+Kw75pQPmk1wF3jydq57SrwHg1+jnXbw3lwDH8MzY2DYyZngL62yK3TCMvozG14a\n1KpJEZ2AVOrWrAYv8iaghHDptP01lRrNvRmRIHKs5Z8XCjp4beyCzWcijjlmdpok\n5j969mCOnYHhIxIZZWmb+GvvL0rpRa1FipHD2fd4wPkTHpa74EepsltRZY3PpeFS\nvDw6nGloPM0U4CJCY+wyXmLOYtzdahONzIod2pOWlg18sAem28msD19eDzj477Ot\nN6n1tQ+Frjxy7WPRU49gjmzi4ZDeawRMUR/eF8ig5bLdzWqa3riQoygI9f2ri5k=\n=XuRs\n-----END PGP SIGNATURE-----\n", "payload": "tree ce8a785c458138ded07cfa91ed13d09435d668c1\nparent 329dde57fddee4d5fa0ae374cb5c8474459dfb0c\nparent e6657154c4f0359fc67730d3e9aa0eb1a4a4e108\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1534952729 +0200\ncommitter GitHub <noreply@github.com> 1534952729 +0200\n\nRollup merge of #53418 - ekse:suggestions-applicability, r=estebank\n\nMark some suggestions as MachineApplicable\n\nI think the following suggestions should be safe to mark as `MachineApplicable`.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "html_url": "https://github.com/rust-lang/rust/commit/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "329dde57fddee4d5fa0ae374cb5c8474459dfb0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/329dde57fddee4d5fa0ae374cb5c8474459dfb0c", "html_url": "https://github.com/rust-lang/rust/commit/329dde57fddee4d5fa0ae374cb5c8474459dfb0c"}, {"sha": "e6657154c4f0359fc67730d3e9aa0eb1a4a4e108", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6657154c4f0359fc67730d3e9aa0eb1a4a4e108", "html_url": "https://github.com/rust-lang/rust/commit/e6657154c4f0359fc67730d3e9aa0eb1a4a4e108"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "b8d6df368d47879e256892493136d357d1a457c8", "filename": "src/librustc_borrowck/borrowck/unused.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_borrowck%2Fborrowck%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_borrowck%2Fborrowck%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Funused.rs?ref=8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "patch": "@@ -13,6 +13,7 @@ use rustc::hir::{self, HirId};\n use rustc::lint::builtin::UNUSED_MUT;\n use rustc::ty;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use errors::Applicability;\n use std::slice;\n use syntax::ptr::P;\n \n@@ -83,7 +84,11 @@ impl<'a, 'tcx> UnusedMutCx<'a, 'tcx> {\n                                      hir_id,\n                                      span,\n                                      \"variable does not need to be mutable\")\n-                .span_suggestion_short(mut_span, \"remove this `mut`\", \"\".to_owned())\n+                .span_suggestion_short_with_applicability(\n+                    mut_span,\n+                    \"remove this `mut`\",\n+                    \"\".to_owned(),\n+                    Applicability::MachineApplicable)\n                 .emit();\n         }\n     }"}, {"sha": "eafb255093ef26b395f76a527a0e6be9eb7736e5", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "patch": "@@ -24,7 +24,7 @@ use rustc::mir::{Terminator, TerminatorKind};\n use rustc::ty::query::Providers;\n use rustc::ty::{self, ParamEnv, TyCtxt, Ty};\n \n-use rustc_errors::{Diagnostic, DiagnosticBuilder, Level};\n+use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, Level};\n use rustc_data_structures::graph::dominators::Dominators;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::indexed_set::IdxSetBuf;\n@@ -324,7 +324,11 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n                 span,\n                 \"variable does not need to be mutable\",\n             );\n-            err.span_suggestion_short(mut_span, \"remove this `mut`\", \"\".to_owned());\n+            err.span_suggestion_short_with_applicability(\n+                mut_span,\n+                \"remove this `mut`\",\n+                \"\".to_owned(),\n+                Applicability::MachineApplicable);\n \n             err.buffer(&mut mbcx.errors_buffer);\n         }"}, {"sha": "67b214d220237b8bcdba1ebc8f1d25221179ba2e", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "patch": "@@ -24,7 +24,7 @@ use util::nodemap::FxHashSet;\n \n use syntax::ast;\n use syntax::util::lev_distance::find_best_match_for_name;\n-use errors::DiagnosticBuilder;\n+use errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::{Span, FileName};\n \n \n@@ -407,11 +407,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 }\n                 if static_sources.len() == 1 {\n                     if let Some(expr) = rcvr_expr {\n-                        err.span_suggestion(expr.span.to(span),\n+                        err.span_suggestion_with_applicability(expr.span.to(span),\n                                             \"use associated function syntax instead\",\n                                             format!(\"{}::{}\",\n                                                     self.ty_to_string(actual),\n-                                                    item_name));\n+                                                    item_name),\n+                                            Applicability::MachineApplicable);\n                     } else {\n                         err.help(&format!(\"try with `{}::{}`\",\n                                           self.ty_to_string(actual), item_name));"}, {"sha": "62015907f0c8e608ff7df79bfe22e033fb111de0", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=8255f9e7a97366bbf2b6a1d2dc665bfaf38a8f4e", "patch": "@@ -11,6 +11,7 @@\n use lint;\n use rustc::ty::TyCtxt;\n \n+use errors::Applicability;\n use syntax::ast;\n use syntax_pos::Span;\n \n@@ -138,7 +139,11 @@ fn unused_crates_lint<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) {\n             let id = tcx.hir.hir_to_node_id(hir_id);\n             let msg = \"unused extern crate\";\n             tcx.struct_span_lint_node(lint, id, span, msg)\n-                .span_suggestion_short(span, \"remove it\", \"\".to_string())\n+                .span_suggestion_short_with_applicability(\n+                    span,\n+                    \"remove it\",\n+                    \"\".to_string(),\n+                    Applicability::MachineApplicable)\n                 .emit();\n             continue;\n         }"}]}