{"sha": "6800c606ec7be5f19c1728a246eb2e2ffa4110f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MDBjNjA2ZWM3YmU1ZjE5YzE3MjhhMjQ2ZWIyZTJmZmE0MTEwZjY=", "commit": {"author": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-01T05:52:59Z"}, "committer": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-02T10:53:52Z"}, "message": "Handle missing source in target_data_for_def", "tree": {"sha": "9255106fd55ba6685b089ade581907eac2ef5933", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9255106fd55ba6685b089ade581907eac2ef5933"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6800c606ec7be5f19c1728a246eb2e2ffa4110f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6800c606ec7be5f19c1728a246eb2e2ffa4110f6", "html_url": "https://github.com/rust-lang/rust/commit/6800c606ec7be5f19c1728a246eb2e2ffa4110f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6800c606ec7be5f19c1728a246eb2e2ffa4110f6/comments", "author": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a9b73524059cf29a19f9333c7753c11e268ef51", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9b73524059cf29a19f9333c7753c11e268ef51", "html_url": "https://github.com/rust-lang/rust/commit/0a9b73524059cf29a19f9333c7753c11e268ef51"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "de1e8f0bfa6e5fc1543955a07f72d38699c084d0", "filename": "crates/assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6800c606ec7be5f19c1728a246eb2e2ffa4110f6/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6800c606ec7be5f19c1728a246eb2e2ffa4110f6/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=6800c606ec7be5f19c1728a246eb2e2ffa4110f6", "patch": "@@ -146,54 +146,53 @@ fn target_data_for_def(\n     fn offset_target_and_file_id<S, Ast>(\n         db: &dyn HirDatabase,\n         x: S,\n-    ) -> (TextSize, Option<ast::Visibility>, TextRange, FileId)\n+    ) -> Option<(TextSize, Option<ast::Visibility>, TextRange, FileId)>\n     where\n         S: HasSource<Ast = Ast>,\n         Ast: AstNode + ast::VisibilityOwner,\n     {\n-        #[allow(deprecated)]\n-        let source = x.source_old(db);\n+        let source = x.source(db)?;\n         let in_file_syntax = source.syntax();\n         let file_id = in_file_syntax.file_id;\n         let syntax = in_file_syntax.value;\n         let current_visibility = source.value.visibility();\n-        (\n+        Some((\n             vis_offset(syntax),\n             current_visibility,\n             syntax.text_range(),\n             file_id.original_file(db.upcast()),\n-        )\n+        ))\n     }\n \n     let target_name;\n     let (offset, current_visibility, target, target_file) = match def {\n         hir::ModuleDef::Function(f) => {\n             target_name = Some(f.name(db));\n-            offset_target_and_file_id(db, f)\n+            offset_target_and_file_id(db, f)?\n         }\n         hir::ModuleDef::Adt(adt) => {\n             target_name = Some(adt.name(db));\n             match adt {\n-                hir::Adt::Struct(s) => offset_target_and_file_id(db, s),\n-                hir::Adt::Union(u) => offset_target_and_file_id(db, u),\n-                hir::Adt::Enum(e) => offset_target_and_file_id(db, e),\n+                hir::Adt::Struct(s) => offset_target_and_file_id(db, s)?,\n+                hir::Adt::Union(u) => offset_target_and_file_id(db, u)?,\n+                hir::Adt::Enum(e) => offset_target_and_file_id(db, e)?,\n             }\n         }\n         hir::ModuleDef::Const(c) => {\n             target_name = c.name(db);\n-            offset_target_and_file_id(db, c)\n+            offset_target_and_file_id(db, c)?\n         }\n         hir::ModuleDef::Static(s) => {\n             target_name = s.name(db);\n-            offset_target_and_file_id(db, s)\n+            offset_target_and_file_id(db, s)?\n         }\n         hir::ModuleDef::Trait(t) => {\n             target_name = Some(t.name(db));\n-            offset_target_and_file_id(db, t)\n+            offset_target_and_file_id(db, t)?\n         }\n         hir::ModuleDef::TypeAlias(t) => {\n             target_name = Some(t.name(db));\n-            offset_target_and_file_id(db, t)\n+            offset_target_and_file_id(db, t)?\n         }\n         hir::ModuleDef::Module(m) => {\n             target_name = m.name(db);"}]}