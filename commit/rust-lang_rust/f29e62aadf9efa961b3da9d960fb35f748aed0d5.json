{"sha": "f29e62aadf9efa961b3da9d960fb35f748aed0d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyOWU2MmFhZGY5ZWZhOTYxYjNkYTlkOTYwZmIzNWY3NDhhZWQwZDU=", "commit": {"author": {"name": "Vadzim Dambrouski", "email": "pftbest@gmail.com", "date": "2018-05-01T14:48:31Z"}, "committer": {"name": "Vadzim Dambrouski", "email": "pftbest@gmail.com", "date": "2018-05-01T14:48:31Z"}, "message": "Fix a warning in libcore on 16bit targets.\n\nThis code is assuming that usize >= 32bits, but it is not the case on\n16bit targets. It is producing a warning that will fail the compilation\non MSP430 if deny(warnings) is enabled.\nIt is very unlikely that someone would actually use this code on\na microcontroller, but since unicode was merged into libcore we\nhave compile it on 16bit targets.", "tree": {"sha": "f366e318d7c4f32ba338c1a74245cd5210966541", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f366e318d7c4f32ba338c1a74245cd5210966541"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f29e62aadf9efa961b3da9d960fb35f748aed0d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f29e62aadf9efa961b3da9d960fb35f748aed0d5", "html_url": "https://github.com/rust-lang/rust/commit/f29e62aadf9efa961b3da9d960fb35f748aed0d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f29e62aadf9efa961b3da9d960fb35f748aed0d5/comments", "author": {"login": "pftbest", "id": 1573340, "node_id": "MDQ6VXNlcjE1NzMzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1573340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pftbest", "html_url": "https://github.com/pftbest", "followers_url": "https://api.github.com/users/pftbest/followers", "following_url": "https://api.github.com/users/pftbest/following{/other_user}", "gists_url": "https://api.github.com/users/pftbest/gists{/gist_id}", "starred_url": "https://api.github.com/users/pftbest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pftbest/subscriptions", "organizations_url": "https://api.github.com/users/pftbest/orgs", "repos_url": "https://api.github.com/users/pftbest/repos", "events_url": "https://api.github.com/users/pftbest/events{/privacy}", "received_events_url": "https://api.github.com/users/pftbest/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pftbest", "id": 1573340, "node_id": "MDQ6VXNlcjE1NzMzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1573340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pftbest", "html_url": "https://github.com/pftbest", "followers_url": "https://api.github.com/users/pftbest/followers", "following_url": "https://api.github.com/users/pftbest/following{/other_user}", "gists_url": "https://api.github.com/users/pftbest/gists{/gist_id}", "starred_url": "https://api.github.com/users/pftbest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pftbest/subscriptions", "organizations_url": "https://api.github.com/users/pftbest/orgs", "repos_url": "https://api.github.com/users/pftbest/repos", "events_url": "https://api.github.com/users/pftbest/events{/privacy}", "received_events_url": "https://api.github.com/users/pftbest/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "491512ba1ed37a20b514c216c3eddaa732689de9", "url": "https://api.github.com/repos/rust-lang/rust/commits/491512ba1ed37a20b514c216c3eddaa732689de9", "html_url": "https://github.com/rust-lang/rust/commit/491512ba1ed37a20b514c216c3eddaa732689de9"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "0e6437fded594c3a18a8a5a5ed6b0fc474026ab3", "filename": "src/libcore/unicode/bool_trie.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f29e62aadf9efa961b3da9d960fb35f748aed0d5/src%2Flibcore%2Funicode%2Fbool_trie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f29e62aadf9efa961b3da9d960fb35f748aed0d5/src%2Flibcore%2Funicode%2Fbool_trie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fbool_trie.rs?ref=f29e62aadf9efa961b3da9d960fb35f748aed0d5", "patch": "@@ -42,15 +42,15 @@ pub struct BoolTrie {\n }\n impl BoolTrie {\n     pub fn lookup(&self, c: char) -> bool {\n-        let c = c as usize;\n+        let c = c as u32;\n         if c < 0x800 {\n-            trie_range_leaf(c, self.r1[c >> 6])\n+            trie_range_leaf(c, self.r1[(c >> 6) as usize])\n         } else if c < 0x10000 {\n-            let child = self.r2[(c >> 6) - 0x20];\n+            let child = self.r2[(c >> 6) as usize - 0x20];\n             trie_range_leaf(c, self.r3[child as usize])\n         } else {\n-            let child = self.r4[(c >> 12) - 0x10];\n-            let leaf = self.r5[((child as usize) << 6) + ((c >> 6) & 0x3f)];\n+            let child = self.r4[(c >> 12) as usize - 0x10];\n+            let leaf = self.r5[((child as usize) << 6) + ((c >> 6) as usize & 0x3f)];\n             trie_range_leaf(c, self.r6[leaf as usize])\n         }\n     }\n@@ -63,14 +63,14 @@ pub struct SmallBoolTrie {\n \n impl SmallBoolTrie {\n     pub fn lookup(&self, c: char) -> bool {\n-        let c = c as usize;\n-        match self.r1.get(c >> 6) {\n+        let c = c as u32;\n+        match self.r1.get((c >> 6) as usize) {\n             Some(&child) => trie_range_leaf(c, self.r2[child as usize]),\n             None => false,\n         }\n     }\n }\n \n-fn trie_range_leaf(c: usize, bitmap_chunk: u64) -> bool {\n+fn trie_range_leaf(c: u32, bitmap_chunk: u64) -> bool {\n     ((bitmap_chunk >> (c & 63)) & 1) != 0\n }"}]}