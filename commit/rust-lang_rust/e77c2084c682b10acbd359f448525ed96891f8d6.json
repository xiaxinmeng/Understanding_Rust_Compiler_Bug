{"sha": "e77c2084c682b10acbd359f448525ed96891f8d6", "node_id": "C_kwDOAAsO6NoAKGU3N2MyMDg0YzY4MmIxMGFjYmQzNTlmNDQ4NTI1ZWQ5Njg5MWY4ZDY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-22T15:04:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-22T15:04:09Z"}, "message": "Rollup merge of #99770 - Nilstrieb:mir-pass-unit-test, r=oli-obk\n\nMake some const prop mir-opt tests `unit-test`s\n\nMost of these have no or only tiny diffs beyond line numbers being changed (would it make sense to not have line numbers in mir-opt tests?). Some things changed a bit, but I think it should all be fine, not sure though.", "tree": {"sha": "b1631cdd94c082b171c34bcc309e3dc542cae13d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1631cdd94c082b171c34bcc309e3dc542cae13d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e77c2084c682b10acbd359f448525ed96891f8d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjA5rpCRBK7hj4Ov3rIwAAmzAIAELj16jkjzWvipDAWCVaDMrw\n7KfW98eidhBo5UMKKAt7bH00zvMdltLoxPBUPNHJDvg4bG6ucgD6rXot+Av1mIPq\ng2QSdryO/ykiLoG8Y8DXQ9XdqEhH7aBqgJt+qzphYTWMKlxL0mjzHcW84uocb3Tx\nM/jcIhDtLDTJl3QqfLqDRz4T2ZBhvDz8HWlp1i+e0GAJgfBl8rkvNOxZVB3iJo9p\nvZhuGwTkgXtuIQTkDLPIbUPfnCb3UzGX9nXiba4nY3ov8Wt1aDICBfgX/pWl9h0a\nt0+E/mAphS3KZs9qtY8qGsXY7/jxO2L9FM2i4WAQmVvIbv/Ve2JLZONNDYz1ElU=\n=llNO\n-----END PGP SIGNATURE-----\n", "payload": "tree b1631cdd94c082b171c34bcc309e3dc542cae13d\nparent 56ba13ac7f89b6ac8d70ec28230498dfa0790b93\nparent ee30cc8b204ed85bf3f843fb038d1d3e9c2fe8e2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1661180649 +0530\ncommitter GitHub <noreply@github.com> 1661180649 +0530\n\nRollup merge of #99770 - Nilstrieb:mir-pass-unit-test, r=oli-obk\n\nMake some const prop mir-opt tests `unit-test`s\n\nMost of these have no or only tiny diffs beyond line numbers being changed (would it make sense to not have line numbers in mir-opt tests?). Some things changed a bit, but I think it should all be fine, not sure though.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e77c2084c682b10acbd359f448525ed96891f8d6", "html_url": "https://github.com/rust-lang/rust/commit/e77c2084c682b10acbd359f448525ed96891f8d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e77c2084c682b10acbd359f448525ed96891f8d6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56ba13ac7f89b6ac8d70ec28230498dfa0790b93", "url": "https://api.github.com/repos/rust-lang/rust/commits/56ba13ac7f89b6ac8d70ec28230498dfa0790b93", "html_url": "https://github.com/rust-lang/rust/commit/56ba13ac7f89b6ac8d70ec28230498dfa0790b93"}, {"sha": "ee30cc8b204ed85bf3f843fb038d1d3e9c2fe8e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee30cc8b204ed85bf3f843fb038d1d3e9c2fe8e2", "html_url": "https://github.com/rust-lang/rust/commit/ee30cc8b204ed85bf3f843fb038d1d3e9c2fe8e2"}], "stats": {"total": 98, "additions": 60, "deletions": 38}, "files": [{"sha": "04378dbf374d9d74e312363997242227ebbc1dbc", "filename": "src/test/mir-opt/const_prop/aggregate.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -24,7 +24,7 @@\n +         _1 = const 1_i32;                // scope 0 at $DIR/aggregate.rs:+1:13: +1:28\n           StorageDead(_2);                 // scope 0 at $DIR/aggregate.rs:+1:27: +1:28\n           StorageDead(_3);                 // scope 0 at $DIR/aggregate.rs:+1:28: +1:29\n-          nop;                             // scope 0 at $DIR/aggregate.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/aggregate.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/aggregate.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/aggregate.rs:+2:2: +2:2\n       }"}, {"sha": "493d0508a046ddfd220f36f17f2fb9879b7ab44b", "filename": "src/test/mir-opt/const_prop/aggregate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -O\n \n // EMIT_MIR aggregate.main.ConstProp.diff"}, {"sha": "439b2a3e16b458fde72d7328c8436f8e48f9fdc9", "filename": "src/test/mir-opt/const_prop/array_index.main.ConstProp.32bit.diff", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.main.ConstProp.32bit.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -18,19 +18,20 @@\n           _2 = [const 0_u32, const 1_u32, const 2_u32, const 3_u32]; // scope 0 at $DIR/array_index.rs:+1:18: +1:30\n           StorageLive(_3);                 // scope 0 at $DIR/array_index.rs:+1:31: +1:32\n           _3 = const 2_usize;              // scope 0 at $DIR/array_index.rs:+1:31: +1:32\n-          _4 = const 4_usize;              // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n+-         _4 = Len(_2);                    // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n -         _5 = Lt(_3, _4);                 // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n -         assert(move _5, \"index out of bounds: the length is {} but the index is {}\", move _4, _3) -> bb1; // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n++         _4 = const 4_usize;              // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n +         _5 = const true;                 // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n-+         assert(const true, \"index out of bounds: the length is {} but the index is {}\", const 4_usize, const 2_usize) -> bb1; // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n++         assert(const true, \"index out of bounds: the length is {} but the index is {}\", move _4, _3) -> bb1; // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n       }\n   \n       bb1: {\n -         _1 = _2[_3];                     // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n +         _1 = const 2_u32;                // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n           StorageDead(_3);                 // scope 0 at $DIR/array_index.rs:+1:33: +1:34\n           StorageDead(_2);                 // scope 0 at $DIR/array_index.rs:+1:33: +1:34\n-          nop;                             // scope 0 at $DIR/array_index.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/array_index.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/array_index.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/array_index.rs:+2:2: +2:2\n       }"}, {"sha": "439b2a3e16b458fde72d7328c8436f8e48f9fdc9", "filename": "src/test/mir-opt/const_prop/array_index.main.ConstProp.64bit.diff", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.main.ConstProp.64bit.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -18,19 +18,20 @@\n           _2 = [const 0_u32, const 1_u32, const 2_u32, const 3_u32]; // scope 0 at $DIR/array_index.rs:+1:18: +1:30\n           StorageLive(_3);                 // scope 0 at $DIR/array_index.rs:+1:31: +1:32\n           _3 = const 2_usize;              // scope 0 at $DIR/array_index.rs:+1:31: +1:32\n-          _4 = const 4_usize;              // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n+-         _4 = Len(_2);                    // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n -         _5 = Lt(_3, _4);                 // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n -         assert(move _5, \"index out of bounds: the length is {} but the index is {}\", move _4, _3) -> bb1; // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n++         _4 = const 4_usize;              // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n +         _5 = const true;                 // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n-+         assert(const true, \"index out of bounds: the length is {} but the index is {}\", const 4_usize, const 2_usize) -> bb1; // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n++         assert(const true, \"index out of bounds: the length is {} but the index is {}\", move _4, _3) -> bb1; // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n       }\n   \n       bb1: {\n -         _1 = _2[_3];                     // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n +         _1 = const 2_u32;                // scope 0 at $DIR/array_index.rs:+1:18: +1:33\n           StorageDead(_3);                 // scope 0 at $DIR/array_index.rs:+1:33: +1:34\n           StorageDead(_2);                 // scope 0 at $DIR/array_index.rs:+1:33: +1:34\n-          nop;                             // scope 0 at $DIR/array_index.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/array_index.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/array_index.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/array_index.rs:+2:2: +2:2\n       }"}, {"sha": "d31c2827b4e0ac94daede6bdfac232dfc1a66204", "filename": "src/test/mir-opt/const_prop/array_index.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // EMIT_MIR_FOR_EACH_BIT_WIDTH\n \n // EMIT_MIR array_index.main.ConstProp.diff"}, {"sha": "bea32a67ef4a031b87d257845dfe6be9f105e9d3", "filename": "src/test/mir-opt/const_prop/bad_op_div_by_zero.main.ConstProp.diff", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_div_by_zero.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_div_by_zero.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_div_by_zero.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -24,10 +24,9 @@\n           StorageLive(_3);                 // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:18: +2:19\n -         _3 = _1;                         // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:18: +2:19\n -         _4 = Eq(_3, const 0_i32);        // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n--         assert(!move _4, \"attempt to divide `{}` by zero\", const 1_i32) -> bb1; // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n +         _3 = const 0_i32;                // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:18: +2:19\n +         _4 = const true;                 // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n-+         assert(!const true, \"attempt to divide `{}` by zero\", const 1_i32) -> bb1; // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n+          assert(!move _4, \"attempt to divide `{}` by zero\", const 1_i32) -> bb1; // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n       }\n   \n       bb1: {\n@@ -38,14 +37,13 @@\n +         _5 = const false;                // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n +         _6 = const false;                // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n +         _7 = const false;                // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n-+         assert(!const false, \"attempt to compute `{} / {}`, which would overflow\", const 1_i32, const 0_i32) -> bb2; // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n++         assert(!const false, \"attempt to compute `{} / {}`, which would overflow\", const 1_i32, _3) -> bb2; // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n       }\n   \n       bb2: {\n--         _2 = Div(const 1_i32, move _3);  // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n-+         _2 = Div(const 1_i32, const 0_i32); // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n+          _2 = Div(const 1_i32, move _3);  // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:14: +2:19\n           StorageDead(_3);                 // scope 1 at $DIR/bad_op_div_by_zero.rs:+2:18: +2:19\n-          nop;                             // scope 0 at $DIR/bad_op_div_by_zero.rs:+0:11: +3:2\n+          _0 = const ();                   // scope 0 at $DIR/bad_op_div_by_zero.rs:+0:11: +3:2\n           StorageDead(_2);                 // scope 1 at $DIR/bad_op_div_by_zero.rs:+3:1: +3:2\n           StorageDead(_1);                 // scope 0 at $DIR/bad_op_div_by_zero.rs:+3:1: +3:2\n           return;                          // scope 0 at $DIR/bad_op_div_by_zero.rs:+3:2: +3:2"}, {"sha": "a6fd325ece035d14f2b9924911ace9a31aa44de7", "filename": "src/test/mir-opt/const_prop/bad_op_div_by_zero.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_div_by_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_div_by_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_div_by_zero.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // EMIT_MIR bad_op_div_by_zero.main.ConstProp.diff\n #[allow(unconditional_panic)]\n fn main() {"}, {"sha": "c7b609949cd15a58a146013fcd4a79f82483b30f", "filename": "src/test/mir-opt/const_prop/boolean_identities.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboolean_identities.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboolean_identities.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboolean_identities.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -O -Zmir-opt-level=4\n \n // EMIT_MIR boolean_identities.test.ConstProp.diff"}, {"sha": "cb82a7bea149381b42e68f9cc0be10961b0a0c2e", "filename": "src/test/mir-opt/const_prop/boxes.main.ConstProp.diff", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -24,12 +24,11 @@\n           StorageLive(_3);                 // scope 0 at $DIR/boxes.rs:+1:14: +1:22\n -         _4 = SizeOf(i32);                // scope 2 at $DIR/boxes.rs:+1:14: +1:22\n -         _5 = AlignOf(i32);               // scope 2 at $DIR/boxes.rs:+1:14: +1:22\n--         _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at $DIR/boxes.rs:+1:14: +1:22\n +         _4 = const 4_usize;              // scope 2 at $DIR/boxes.rs:+1:14: +1:22\n +         _5 = const 4_usize;              // scope 2 at $DIR/boxes.rs:+1:14: +1:22\n-+         _6 = alloc::alloc::exchange_malloc(const 4_usize, const 4_usize) -> bb1; // scope 2 at $DIR/boxes.rs:+1:14: +1:22\n+          _6 = alloc::alloc::exchange_malloc(move _4, move _5) -> bb1; // scope 2 at $DIR/boxes.rs:+1:14: +1:22\n                                            // mir::Constant\n-                                           // + span: $DIR/boxes.rs:12:14: 12:22\n+                                           // + span: $DIR/boxes.rs:13:14: 13:22\n                                            // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }\n       }\n   \n@@ -53,7 +52,7 @@\n   \n       bb2: {\n           StorageDead(_3);                 // scope 0 at $DIR/boxes.rs:+1:26: +1:27\n-          nop;                             // scope 0 at $DIR/boxes.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/boxes.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/boxes.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/boxes.rs:+2:2: +2:2\n       }"}, {"sha": "d287830db5a56ed86aa83c6ca6a440e9e590ee99", "filename": "src/test/mir-opt/const_prop/boxes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -O\n // ignore-emscripten compiled with panic=abort by default\n // ignore-wasm32"}, {"sha": "e040a4b3a53e92b4c3ca489e3c81b5e6d0e996ae", "filename": "src/test/mir-opt/const_prop/cast.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -19,7 +19,7 @@\n           StorageLive(_2);                 // scope 1 at $DIR/cast.rs:+3:9: +3:10\n -         _2 = const 42_u32 as u8 (Misc);  // scope 1 at $DIR/cast.rs:+3:13: +3:24\n +         _2 = const 42_u8;                // scope 1 at $DIR/cast.rs:+3:13: +3:24\n-          nop;                             // scope 0 at $DIR/cast.rs:+0:11: +4:2\n+          _0 = const ();                   // scope 0 at $DIR/cast.rs:+0:11: +4:2\n           StorageDead(_2);                 // scope 1 at $DIR/cast.rs:+4:1: +4:2\n           StorageDead(_1);                 // scope 0 at $DIR/cast.rs:+4:1: +4:2\n           return;                          // scope 0 at $DIR/cast.rs:+4:2: +4:2"}, {"sha": "984086eda48b0a0225ca5f8b4d51cf56a60dae91", "filename": "src/test/mir-opt/const_prop/cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // EMIT_MIR cast.main.ConstProp.diff\n \n fn main() {"}, {"sha": "96d0d25664a41d15d7aa54c8a942626c08b476fe", "filename": "src/test/mir-opt/const_prop/checked_add.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -20,7 +20,7 @@\n       bb1: {\n -         _1 = move (_2.0: u32);           // scope 0 at $DIR/checked_add.rs:+1:18: +1:23\n +         _1 = const 2_u32;                // scope 0 at $DIR/checked_add.rs:+1:18: +1:23\n-          nop;                             // scope 0 at $DIR/checked_add.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/checked_add.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/checked_add.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/checked_add.rs:+2:2: +2:2\n       }"}, {"sha": "b9860da4c82204777d579a06a4f024fdbaca2037", "filename": "src/test/mir-opt/const_prop/checked_add.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -C overflow-checks=on\n \n // EMIT_MIR checked_add.main.ConstProp.diff"}, {"sha": "2cb071deab13fc0ac87f4b9989ce36978cb0c618", "filename": "src/test/mir-opt/const_prop/const_prop_fails_gracefully.main.ConstProp.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -18,7 +18,7 @@\n           StorageLive(_3);                 // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:16\n           _3 = const FOO;                  // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:16\n                                            // mir::Constant\n-                                           // + span: $DIR/const_prop_fails_gracefully.rs:7:13: 7:16\n+                                           // + span: $DIR/const_prop_fails_gracefully.rs:8:13: 8:16\n                                            // + literal: Const { ty: &i32, val: Unevaluated(FOO, [], None) }\n           _2 = &raw const (*_3);           // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:16\n           _1 = move _2 as usize (PointerExposeAddress); // scope 0 at $DIR/const_prop_fails_gracefully.rs:+2:13: +2:39\n@@ -29,14 +29,14 @@\n           _5 = _1;                         // scope 1 at $DIR/const_prop_fails_gracefully.rs:+3:10: +3:11\n           _4 = read(move _5) -> bb1;       // scope 1 at $DIR/const_prop_fails_gracefully.rs:+3:5: +3:12\n                                            // mir::Constant\n-                                           // + span: $DIR/const_prop_fails_gracefully.rs:8:5: 8:9\n+                                           // + span: $DIR/const_prop_fails_gracefully.rs:9:5: 9:9\n                                            // + literal: Const { ty: fn(usize) {read}, val: Value(<ZST>) }\n       }\n   \n       bb1: {\n           StorageDead(_5);                 // scope 1 at $DIR/const_prop_fails_gracefully.rs:+3:11: +3:12\n           StorageDead(_4);                 // scope 1 at $DIR/const_prop_fails_gracefully.rs:+3:12: +3:13\n-          nop;                             // scope 0 at $DIR/const_prop_fails_gracefully.rs:+0:11: +4:2\n+          _0 = const ();                   // scope 0 at $DIR/const_prop_fails_gracefully.rs:+0:11: +4:2\n           StorageDead(_1);                 // scope 0 at $DIR/const_prop_fails_gracefully.rs:+4:1: +4:2\n           return;                          // scope 0 at $DIR/const_prop_fails_gracefully.rs:+4:2: +4:2\n       }"}, {"sha": "0a3dcbd380fa823b44acb921e7bab8b9ee1a64cb", "filename": "src/test/mir-opt/const_prop/const_prop_fails_gracefully.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n #[inline(never)]\n fn read(_: usize) { }\n "}, {"sha": "7dbe8e7344b1227bb4cbf6389efb961301a4e5bc", "filename": "src/test/mir-opt/const_prop/control-flow-simplification.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,10 +1,11 @@\n+// unit-test: ConstProp\n // compile-flags: -Zmir-opt-level=1\n \n-trait NeedsDrop:Sized{\n-    const NEEDS:bool=std::mem::needs_drop::<Self>();\n+trait NeedsDrop: Sized {\n+    const NEEDS: bool = std::mem::needs_drop::<Self>();\n }\n \n-impl<This> NeedsDrop for This{}\n+impl<This> NeedsDrop for This {}\n \n // EMIT_MIR control_flow_simplification.hello.ConstProp.diff\n // EMIT_MIR control_flow_simplification.hello.PreCodegen.before.mir"}, {"sha": "6b29bb59c40dacc56c3161cb4bdfe71a6e0d6098", "filename": "src/test/mir-opt/const_prop/discriminant.main.ConstProp.32bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.32bit.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -44,7 +44,7 @@\n           _1 = Add(move _2, const 0_i32);  // scope 0 at $DIR/discriminant.rs:+1:13: +1:68\n           StorageDead(_2);                 // scope 0 at $DIR/discriminant.rs:+1:67: +1:68\n           StorageDead(_3);                 // scope 0 at $DIR/discriminant.rs:+1:68: +1:69\n-          nop;                             // scope 0 at $DIR/discriminant.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/discriminant.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/discriminant.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/discriminant.rs:+2:2: +2:2\n       }"}, {"sha": "6b29bb59c40dacc56c3161cb4bdfe71a6e0d6098", "filename": "src/test/mir-opt/const_prop/discriminant.main.ConstProp.64bit.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.64bit.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -44,7 +44,7 @@\n           _1 = Add(move _2, const 0_i32);  // scope 0 at $DIR/discriminant.rs:+1:13: +1:68\n           StorageDead(_2);                 // scope 0 at $DIR/discriminant.rs:+1:67: +1:68\n           StorageDead(_3);                 // scope 0 at $DIR/discriminant.rs:+1:68: +1:69\n-          nop;                             // scope 0 at $DIR/discriminant.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/discriminant.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/discriminant.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/discriminant.rs:+2:2: +2:2\n       }"}, {"sha": "fdd67ca8ac44f847634106a98ad31329f457e5b5", "filename": "src/test/mir-opt/const_prop/discriminant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -O\n \n // FIXME(wesleywiser): Ideally, we could const-prop away all of this and just be left with"}, {"sha": "948bb7f56fe8589b14acdb9c48d671b4f6aeadb0", "filename": "src/test/mir-opt/const_prop/indirect.main.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -18,14 +18,14 @@\n -         assert(!move (_3.1: bool), \"attempt to compute `{} + {}`, which would overflow\", move _2, const 1_u8) -> bb1; // scope 0 at $DIR/indirect.rs:+1:13: +1:29\n +         _2 = const 2_u8;                 // scope 0 at $DIR/indirect.rs:+1:13: +1:25\n +         _3 = const (3_u8, false);        // scope 0 at $DIR/indirect.rs:+1:13: +1:29\n-+         assert(!const false, \"attempt to compute `{} + {}`, which would overflow\", const 2_u8, const 1_u8) -> bb1; // scope 0 at $DIR/indirect.rs:+1:13: +1:29\n++         assert(!const false, \"attempt to compute `{} + {}`, which would overflow\", move _2, const 1_u8) -> bb1; // scope 0 at $DIR/indirect.rs:+1:13: +1:29\n       }\n   \n       bb1: {\n -         _1 = move (_3.0: u8);            // scope 0 at $DIR/indirect.rs:+1:13: +1:29\n +         _1 = const 3_u8;                 // scope 0 at $DIR/indirect.rs:+1:13: +1:29\n           StorageDead(_2);                 // scope 0 at $DIR/indirect.rs:+1:28: +1:29\n-          nop;                             // scope 0 at $DIR/indirect.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/indirect.rs:+0:11: +2:2\n           StorageDead(_1);                 // scope 0 at $DIR/indirect.rs:+2:1: +2:2\n           return;                          // scope 0 at $DIR/indirect.rs:+2:2: +2:2\n       }"}, {"sha": "44916cbfe743a8781e22e8d35bca33639719ba9a", "filename": "src/test/mir-opt/const_prop/indirect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -C overflow-checks=on\n \n // EMIT_MIR indirect.main.ConstProp.diff"}, {"sha": "6ca03438ef3965239bb0c18b0ee68129627fe066", "filename": "src/test/mir-opt/const_prop/issue-66971.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -Z mir-opt-level=3\n \n // Due to a bug in propagating scalar pairs the assertion below used to fail. In the expected"}, {"sha": "ffc6fa1f290f3e06210bfd90fe4eb63bc0b70972", "filename": "src/test/mir-opt/const_prop/issue-67019.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n // compile-flags: -Z mir-opt-level=3\n \n // This used to ICE in const-prop"}, {"sha": "9d541dcabbb2c24c19109d2351f79d1497feaa37", "filename": "src/test/mir-opt/const_prop/issue_66971.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_66971.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_66971.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_66971.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -19,7 +19,7 @@\n           StorageDead(_3);                 // scope 0 at $DIR/issue-66971.rs:+1:21: +1:22\n           _1 = encode(move _2) -> bb1;     // scope 0 at $DIR/issue-66971.rs:+1:5: +1:23\n                                            // mir::Constant\n-                                           // + span: $DIR/issue-66971.rs:16:5: 16:11\n+                                           // + span: $DIR/issue-66971.rs:17:5: 17:11\n                                            // + literal: Const { ty: fn(((), u8, u8)) {encode}, val: Value(<ZST>) }\n       }\n   "}, {"sha": "b79d814760d9eda1ec1d7eab095f28128b7df2bd", "filename": "src/test/mir-opt/const_prop/issue_67019.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -20,7 +20,7 @@\n           StorageDead(_3);                 // scope 0 at $DIR/issue-67019.rs:+1:18: +1:19\n           _1 = test(move _2) -> bb1;       // scope 0 at $DIR/issue-67019.rs:+1:5: +1:20\n                                            // mir::Constant\n-                                           // + span: $DIR/issue-67019.rs:11:5: 11:9\n+                                           // + span: $DIR/issue-67019.rs:12:5: 12:9\n                                            // + literal: Const { ty: fn(((u8, u8),)) {test}, val: Value(<ZST>) }\n       }\n   "}, {"sha": "c839f92f2ceb180f9a1aeb9c08987b73f494b988", "filename": "src/test/mir-opt/const_prop/mult_by_zero.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmult_by_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmult_by_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmult_by_zero.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O -Zmir-opt-level=4\n \n // EMIT_MIR mult_by_zero.test.ConstProp.diff"}, {"sha": "cb01719dd77a9e97885bbc9395950f26b967384a", "filename": "src/test/mir-opt/const_prop/mutable_variable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O\n \n // EMIT_MIR mutable_variable.main.ConstProp.diff"}, {"sha": "d4ff8d89073427e24217112dbfea577fce6cab6f", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O\n \n // EMIT_MIR mutable_variable_aggregate.main.ConstProp.diff"}, {"sha": "9060f7e9bd3e6a8759f3f03e1c030599d1756cb8", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate_mut_ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_mut_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_mut_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_mut_ref.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O\n \n // EMIT_MIR mutable_variable_aggregate_mut_ref.main.ConstProp.diff"}, {"sha": "6eda503c1eec4c615afcb8e467988fc186447935", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate_partial_read.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -16,7 +16,7 @@\n           StorageLive(_1);                 // scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:+1:9: +1:14\n           _1 = foo() -> bb1;               // scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:+1:29: +1:34\n                                            // mir::Constant\n-                                           // + span: $DIR/mutable_variable_aggregate_partial_read.rs:5:29: 5:32\n+                                           // + span: $DIR/mutable_variable_aggregate_partial_read.rs:6:29: 6:32\n                                            // + literal: Const { ty: fn() -> (i32, i32) {foo}, val: Value(<ZST>) }\n       }\n   "}, {"sha": "cb59509ff1061ae1245ab0306c6c00c3a82b8735", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate_partial_read.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O\n \n // EMIT_MIR mutable_variable_aggregate_partial_read.main.ConstProp.diff"}, {"sha": "eb3a7bc96d8822cdf959be5ac9ca55daecc246d0", "filename": "src/test/mir-opt/const_prop/mutable_variable_no_prop.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_no_prop.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_no_prop.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_no_prop.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -25,7 +25,7 @@\n           StorageLive(_4);                 // scope 2 at $DIR/mutable_variable_no_prop.rs:+3:13: +3:19\n           _4 = const {alloc1: *mut u32};   // scope 2 at $DIR/mutable_variable_no_prop.rs:+3:13: +3:19\n                                            // mir::Constant\n-                                           // + span: $DIR/mutable_variable_no_prop.rs:9:13: 9:19\n+                                           // + span: $DIR/mutable_variable_no_prop.rs:10:13: 10:19\n                                            // + literal: Const { ty: *mut u32, val: Value(Scalar(alloc1)) }\n           _3 = (*_4);                      // scope 2 at $DIR/mutable_variable_no_prop.rs:+3:13: +3:19\n           _1 = move _3;                    // scope 2 at $DIR/mutable_variable_no_prop.rs:+3:9: +3:19"}, {"sha": "8c23c5fcf0f88948a0952e751394e693bd26ca30", "filename": "src/test/mir-opt/const_prop/mutable_variable_no_prop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_no_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_no_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_no_prop.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O\n \n static mut STATIC: u32 = 42;"}, {"sha": "4f205667be0e2821a76f724caa84733ed84e2304", "filename": "src/test/mir-opt/const_prop/mutable_variable_unprop_assign.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -25,7 +25,7 @@\n           StorageLive(_1);                 // scope 0 at $DIR/mutable_variable_unprop_assign.rs:+1:9: +1:10\n           _1 = foo() -> bb1;               // scope 0 at $DIR/mutable_variable_unprop_assign.rs:+1:13: +1:18\n                                            // mir::Constant\n-                                           // + span: $DIR/mutable_variable_unprop_assign.rs:5:13: 5:16\n+                                           // + span: $DIR/mutable_variable_unprop_assign.rs:6:13: 6:16\n                                            // + literal: Const { ty: fn() -> i32 {foo}, val: Value(<ZST>) }\n       }\n   "}, {"sha": "b077cfd3e0ae71a9cb29b0d0099f09858cfdfaf3", "filename": "src/test/mir-opt/const_prop/mutable_variable_unprop_assign.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O\n \n // EMIT_MIR mutable_variable_unprop_assign.main.ConstProp.diff"}, {"sha": "c0fbd2558cd98fd1bc12b3621c654a68887d2840", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -C overflow-checks=on\n \n struct Point {"}, {"sha": "b9c283a54821b7576aa1edb8717ad2daf9d64501", "filename": "src/test/mir-opt/const_prop/read_immutable_static.main.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -18,15 +18,15 @@\n           StorageLive(_3);                 // scope 0 at $DIR/read_immutable_static.rs:+1:13: +1:16\n           _3 = const {alloc1: &u8};        // scope 0 at $DIR/read_immutable_static.rs:+1:13: +1:16\n                                            // mir::Constant\n-                                           // + span: $DIR/read_immutable_static.rs:7:13: 7:16\n+                                           // + span: $DIR/read_immutable_static.rs:8:13: 8:16\n                                            // + literal: Const { ty: &u8, val: Value(Scalar(alloc1)) }\n -         _2 = (*_3);                      // scope 0 at $DIR/read_immutable_static.rs:+1:13: +1:16\n +         _2 = const 2_u8;                 // scope 0 at $DIR/read_immutable_static.rs:+1:13: +1:16\n           StorageLive(_4);                 // scope 0 at $DIR/read_immutable_static.rs:+1:19: +1:22\n           StorageLive(_5);                 // scope 0 at $DIR/read_immutable_static.rs:+1:19: +1:22\n           _5 = const {alloc1: &u8};        // scope 0 at $DIR/read_immutable_static.rs:+1:19: +1:22\n                                            // mir::Constant\n-                                           // + span: $DIR/read_immutable_static.rs:7:19: 7:22\n+                                           // + span: $DIR/read_immutable_static.rs:8:19: 8:22\n                                            // + literal: Const { ty: &u8, val: Value(Scalar(alloc1)) }\n -         _4 = (*_5);                      // scope 0 at $DIR/read_immutable_static.rs:+1:19: +1:22\n -         _1 = Add(move _2, move _4);      // scope 0 at $DIR/read_immutable_static.rs:+1:13: +1:22"}, {"sha": "4f7afe6cad4a19d5e08ad465ddce6ee0ea57f52c", "filename": "src/test/mir-opt/const_prop/read_immutable_static.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // compile-flags: -O\n \n static FOO: u8 = 2;"}, {"sha": "84ec5c8bb1db1ac1035aaf7813b6539278b52fc3", "filename": "src/test/mir-opt/const_prop/ref_deref_project.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -13,7 +13,7 @@\n           StorageLive(_2);                 // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n           _4 = const main::promoted[0];    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n                                            // mir::Constant\n-                                           // + span: $DIR/ref_deref_project.rs:5:6: 5:17\n+                                           // + span: $DIR/ref_deref_project.rs:6:6: 6:17\n                                            // + literal: Const { ty: &(i32, i32), val: Unevaluated(main, [], Some(promoted[0])) }\n           _2 = &((*_4).1: i32);            // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n           _1 = (*_2);                      // scope 0 at $DIR/ref_deref_project.rs:+1:5: +1:17"}, {"sha": "6f3a060a1260a87281f8b73dbed98d1c80ffdb99", "filename": "src/test/mir-opt/const_prop/ref_deref_project.main.PromoteTemps.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -16,7 +16,7 @@\n -         _2 = &(_3.1: i32);               // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n +         _4 = const main::promoted[0];    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n +                                          // mir::Constant\n-+                                          // + span: $DIR/ref_deref_project.rs:5:6: 5:17\n++                                          // + span: $DIR/ref_deref_project.rs:6:6: 6:17\n +                                          // + literal: Const { ty: &(i32, i32), val: Unevaluated(main, [], Some(promoted[0])) }\n +         _2 = &((*_4).1: i32);            // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n           _1 = (*_2);                      // scope 0 at $DIR/ref_deref_project.rs:+1:5: +1:17"}, {"sha": "659c11d9b0c29f4afae77f07b26913976bce623e", "filename": "src/test/mir-opt/const_prop/ref_deref_project.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77c2084c682b10acbd359f448525ed96891f8d6/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs?ref=e77c2084c682b10acbd359f448525ed96891f8d6", "patch": "@@ -1,3 +1,4 @@\n+// unit-test\n // EMIT_MIR ref_deref_project.main.PromoteTemps.diff\n // EMIT_MIR ref_deref_project.main.ConstProp.diff\n "}]}