{"sha": "78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZjQxZWE3MDdjYzhhZWFhOGQxYmE4YTcyMTZjYjg3MTJmMTNlOTg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-11T07:56:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-11T07:56:40Z"}, "message": "more renames", "tree": {"sha": "0553368ba2a5b8f67f793413beb22225e3416126", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0553368ba2a5b8f67f793413beb22225e3416126"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "html_url": "https://github.com/rust-lang/rust/commit/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e971cdcbbeb543ab6b66dc8558644c1f4a80670", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e971cdcbbeb543ab6b66dc8558644c1f4a80670", "html_url": "https://github.com/rust-lang/rust/commit/2e971cdcbbeb543ab6b66dc8558644c1f4a80670"}], "stats": {"total": 100, "additions": 79, "deletions": 21}, "files": [{"sha": "293fafae7934af45958fa8001bfb6ccd2ef176b9", "filename": "crates/libeditor/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Flib.rs?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -141,8 +141,8 @@ struct Declaration<'f> (SyntaxNodeRef<'f>);\n impl<'f> Declaration<'f> {\n     fn cast(node: SyntaxNodeRef<'f>) -> Option<Declaration<'f>> {\n         match node.kind() {\n-            | STRUCT | ENUM | FUNCTION | TRAIT_ITEM\n-            | CONST_ITEM | STATIC_ITEM | MOD_ITEM | NAMED_FIELD\n+            | STRUCT | ENUM | FUNCTION | TRAIT\n+            | CONST_ITEM | STATIC_ITEM | MODULE | NAMED_FIELD\n             | TYPE_ITEM => Some(Declaration(node)),\n             _ => None\n         }"}, {"sha": "c9b587ecbbb8ee3c352ab23f97696630a95a2689", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -4,6 +4,30 @@ use {\n     SyntaxKind::*,\n };\n \n+#[derive(Debug, Clone, Copy)]\n+pub struct Enum<R: TreeRoot = Arc<SyntaxRoot>> {\n+    syntax: SyntaxNode<R>,\n+}\n+\n+impl<R: TreeRoot> AstNode<R> for Enum<R> {\n+    fn cast(syntax: SyntaxNode<R>) -> Option<Self> {\n+        match syntax.kind() {\n+            ENUM => Some(Enum { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode<R> { &self.syntax }\n+}\n+\n+impl<R: TreeRoot> Enum<R> {\n+    pub fn name(&self) -> Option<Name<R>> {\n+        self.syntax()\n+            .children()\n+            .filter_map(Name::cast)\n+            .next()\n+    }\n+}\n+\n #[derive(Debug, Clone, Copy)]\n pub struct File<R: TreeRoot = Arc<SyntaxRoot>> {\n     syntax: SyntaxNode<R>,\n@@ -68,3 +92,27 @@ impl<R: TreeRoot> AstNode<R> for Name<R> {\n \n impl<R: TreeRoot> Name<R> {}\n \n+#[derive(Debug, Clone, Copy)]\n+pub struct Struct<R: TreeRoot = Arc<SyntaxRoot>> {\n+    syntax: SyntaxNode<R>,\n+}\n+\n+impl<R: TreeRoot> AstNode<R> for Struct<R> {\n+    fn cast(syntax: SyntaxNode<R>) -> Option<Self> {\n+        match syntax.kind() {\n+            STRUCT => Some(Struct { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode<R> { &self.syntax }\n+}\n+\n+impl<R: TreeRoot> Struct<R> {\n+    pub fn name(&self) -> Option<Name<R>> {\n+        self.syntax()\n+            .children()\n+            .filter_map(Name::cast)\n+            .next()\n+    }\n+}\n+"}, {"sha": "a8916c5c72d6134fa0d88a79786cfd4a87e5ac25", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -112,11 +112,11 @@ Grammar(\n         \"ENUM\",\n         \"FUNCTION\",\n         \"EXTERN_CRATE_ITEM\",\n-        \"MOD_ITEM\",\n+        \"MODULE\",\n         \"USE_ITEM\",\n         \"STATIC_ITEM\",\n         \"CONST_ITEM\",\n-        \"TRAIT_ITEM\",\n+        \"TRAIT\",\n         \"IMPL_ITEM\",\n         \"TYPE_ITEM\",\n         \"MACRO_CALL\",\n@@ -224,6 +224,16 @@ Grammar(\n                 [\"name\", \"Name\"]\n             ]\n         ),\n+        \"Struct\": (\n+            options: [\n+                [\"name\", \"Name\"]\n+            ]\n+        ),\n+        \"Enum\": (\n+            options: [\n+                [\"name\", \"Name\"]\n+            ]\n+        ),\n         \"Name\": (),\n     },\n )"}, {"sha": "6f401ea1b0efd6a779734386aec4f2a2f485a930", "filename": "crates/libsyntax2/src/grammar/items/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -121,7 +121,7 @@ pub(super) fn maybe_item(p: &mut Parser) -> MaybeItem {\n         // unsafe auto trait T {}\n         TRAIT_KW => {\n             traits::trait_item(p);\n-            TRAIT_ITEM\n+            TRAIT\n         }\n \n         // test unsafe_impl\n@@ -161,7 +161,7 @@ fn items_without_modifiers(p: &mut Parser) -> Option<SyntaxKind> {\n         }\n         MOD_KW => {\n             mod_item(p);\n-            MOD_ITEM\n+            MODULE\n         }\n         STRUCT_KW => {\n             structs::struct_item(p);"}, {"sha": "c45a4800ce03904380f4594ae460086b596c7a6d", "filename": "crates/libsyntax2/src/syntax_kinds/generated.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -112,11 +112,11 @@ pub enum SyntaxKind {\n     ENUM,\n     FUNCTION,\n     EXTERN_CRATE_ITEM,\n-    MOD_ITEM,\n+    MODULE,\n     USE_ITEM,\n     STATIC_ITEM,\n     CONST_ITEM,\n-    TRAIT_ITEM,\n+    TRAIT,\n     IMPL_ITEM,\n     TYPE_ITEM,\n     MACRO_CALL,\n@@ -347,11 +347,11 @@ impl SyntaxKind {\n             ENUM => &SyntaxInfo { name: \"ENUM\" },\n             FUNCTION => &SyntaxInfo { name: \"FUNCTION\" },\n             EXTERN_CRATE_ITEM => &SyntaxInfo { name: \"EXTERN_CRATE_ITEM\" },\n-            MOD_ITEM => &SyntaxInfo { name: \"MOD_ITEM\" },\n+            MODULE => &SyntaxInfo { name: \"MODULE\" },\n             USE_ITEM => &SyntaxInfo { name: \"USE_ITEM\" },\n             STATIC_ITEM => &SyntaxInfo { name: \"STATIC_ITEM\" },\n             CONST_ITEM => &SyntaxInfo { name: \"CONST_ITEM\" },\n-            TRAIT_ITEM => &SyntaxInfo { name: \"TRAIT_ITEM\" },\n+            TRAIT => &SyntaxInfo { name: \"TRAIT\" },\n             IMPL_ITEM => &SyntaxInfo { name: \"IMPL_ITEM\" },\n             TYPE_ITEM => &SyntaxInfo { name: \"TYPE_ITEM\" },\n             MACRO_CALL => &SyntaxInfo { name: \"MACRO_CALL\" },"}, {"sha": "a98c05c773c301c1bed2dd328eb9a04168ca8905", "filename": "crates/libsyntax2/tests/data/parser/inline/0007_unsafe_trait.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0007_unsafe_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0007_unsafe_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0007_unsafe_trait.txt?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -1,5 +1,5 @@\n FILE@[0; 18)\n-  TRAIT_ITEM@[0; 17)\n+  TRAIT@[0; 17)\n     UNSAFE_KW@[0; 6)\n     WHITESPACE@[6; 7)\n     TRAIT_KW@[7; 12)"}, {"sha": "dac09a654b9c6e8bb4131c2c33e5ba63b5e4b06b", "filename": "crates/libsyntax2/tests/data/parser/inline/0009_unsafe_auto_trait.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0009_unsafe_auto_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0009_unsafe_auto_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0009_unsafe_auto_trait.txt?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -1,5 +1,5 @@\n FILE@[0; 23)\n-  TRAIT_ITEM@[0; 22)\n+  TRAIT@[0; 22)\n     UNSAFE_KW@[0; 6)\n     WHITESPACE@[6; 7)\n     AUTO_KW@[7; 11)"}, {"sha": "b9dc6a0fda599051057c9c4ee1e42493c6db1a72", "filename": "crates/libsyntax2/tests/data/parser/inline/0056_trait_item.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -1,5 +1,5 @@\n FILE@[0; 42)\n-  TRAIT_ITEM@[0; 41)\n+  TRAIT@[0; 41)\n     TRAIT_KW@[0; 5)\n     WHITESPACE@[5; 6)\n     NAME@[6; 7)"}, {"sha": "c7679b6434b9b14c96e88c7f41647a3b3e108eba", "filename": "crates/libsyntax2/tests/data/parser/inline/0057_auto_trait.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.txt?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -1,5 +1,5 @@\n FILE@[0; 16)\n-  TRAIT_ITEM@[0; 15)\n+  TRAIT@[0; 15)\n     AUTO_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     TRAIT_KW@[5; 10)"}, {"sha": "a6e144776e7358f69e02377b4f083803f7a89616", "filename": "crates/libsyntax2/tests/data/parser/inline/0091_fn_decl.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.txt?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -1,5 +1,5 @@\n FILE@[0; 22)\n-  TRAIT_ITEM@[0; 21)\n+  TRAIT@[0; 21)\n     TRAIT_KW@[0; 5)\n     WHITESPACE@[5; 6)\n     NAME@[6; 7)"}, {"sha": "86d92a8f49f295c3480b0e5afac38aa2f0dd9076", "filename": "crates/libsyntax2/tests/data/parser/ok/0008_mod_item.txt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0008_mod_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0008_mod_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0008_mod_item.txt?ref=78f41ea707cc8aeaa8d1ba8a7216cb8712f13e98", "patch": "@@ -1,12 +1,12 @@\n FILE@[0; 118)\n-  MOD_ITEM@[0; 6)\n+  MODULE@[0; 6)\n     MOD_KW@[0; 3)\n     WHITESPACE@[3; 4)\n     NAME@[4; 5)\n       IDENT@[4; 5) \"a\"\n     SEMI@[5; 6)\n   WHITESPACE@[6; 8)\n-  MOD_ITEM@[8; 17)\n+  MODULE@[8; 17)\n     MOD_KW@[8; 11)\n     WHITESPACE@[11; 12)\n     NAME@[12; 13)\n@@ -16,7 +16,7 @@ FILE@[0; 118)\n     WHITESPACE@[15; 16)\n     R_CURLY@[16; 17)\n   WHITESPACE@[17; 19)\n-  MOD_ITEM@[19; 65)\n+  MODULE@[19; 65)\n     MOD_KW@[19; 22)\n     WHITESPACE@[22; 23)\n     NAME@[23; 24)\n@@ -49,7 +49,7 @@ FILE@[0; 118)\n     WHITESPACE@[63; 64)\n     R_CURLY@[64; 65)\n   WHITESPACE@[65; 67)\n-  MOD_ITEM@[67; 118)\n+  MODULE@[67; 118)\n     MOD_KW@[67; 70)\n     WHITESPACE@[70; 71)\n     NAME@[71; 72)\n@@ -65,14 +65,14 @@ FILE@[0; 118)\n         IDENT@[82; 86) \"attr\"\n       R_BRACK@[86; 87)\n     WHITESPACE@[87; 92)\n-    MOD_ITEM@[92; 98)\n+    MODULE@[92; 98)\n       MOD_KW@[92; 95)\n       WHITESPACE@[95; 96)\n       NAME@[96; 97)\n         IDENT@[96; 97) \"e\"\n       SEMI@[97; 98)\n     WHITESPACE@[98; 103)\n-    MOD_ITEM@[103; 116)\n+    MODULE@[103; 116)\n       MOD_KW@[103; 106)\n       WHITESPACE@[106; 107)\n       NAME@[107; 108)"}]}