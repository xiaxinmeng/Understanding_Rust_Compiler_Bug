{"sha": "224afadb3bb746cd3a9f70047825481a5bf9c655", "node_id": "C_kwDOAAsO6NoAKDIyNGFmYWRiM2JiNzQ2Y2QzYTlmNzAwNDc4MjU0ODFhNWJmOWM2NTU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-15T18:50:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-15T18:50:49Z"}, "message": "Rollup merge of #96034 - Gumichocopengin8:test/btree-set, r=Dylan-DPC\n\n[test] Add test cases of untested functions for BTreeSet\n\n- add [`is_superset()`](https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.is_superset) and [`remove()`](https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.remove) test cases for BTreeSet since these functions has no test cases.", "tree": {"sha": "bfb14b5720ab47fe2adbae192ad5b87560d0db24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfb14b5720ab47fe2adbae192ad5b87560d0db24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224afadb3bb746cd3a9f70047825481a5bf9c655", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWb6JCRBK7hj4Ov3rIwAALNQIAIuRh3Sen91nP/pnYUYY3Vbd\nIRw844IAZV2OGL58ImFEcf7IFbKYVSF06oivOC5exIubUp8Y7pxaga6wvxOPxURN\nsLdpqT81c6knkK46od9M8zxytHbd0NfWRIArWKJXsbzRhl+ji9yIT8IW/nck6+/a\n0tqnHyCKK0jf6FRAQgGTQXa60qQ20/IAKQNXxOL2QZHdgIMVNI70LQHs3iqpF5i4\niykV0iv/lx6sZ7VBJMATG7Djp0aUyDLKgEFO1FxdYr2cF2GlKbInIZDAMtLPJRFs\nSyBr+jcLz9bLZy0VQnimGTUA+pA+EjoADFSAMzpq55LWZebCvP/umoH34rcvJ78=\n=BL9a\n-----END PGP SIGNATURE-----\n", "payload": "tree bfb14b5720ab47fe2adbae192ad5b87560d0db24\nparent 937b0a04cdc829efa15c8c26878b31ea91c109b9\nparent 50c339e8f5e5516c9ba4938979e787c0a0a8e081\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650048649 +0200\ncommitter GitHub <noreply@github.com> 1650048649 +0200\n\nRollup merge of #96034 - Gumichocopengin8:test/btree-set, r=Dylan-DPC\n\n[test] Add test cases of untested functions for BTreeSet\n\n- add [`is_superset()`](https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.is_superset) and [`remove()`](https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.remove) test cases for BTreeSet since these functions has no test cases.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224afadb3bb746cd3a9f70047825481a5bf9c655", "html_url": "https://github.com/rust-lang/rust/commit/224afadb3bb746cd3a9f70047825481a5bf9c655", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224afadb3bb746cd3a9f70047825481a5bf9c655/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "937b0a04cdc829efa15c8c26878b31ea91c109b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/937b0a04cdc829efa15c8c26878b31ea91c109b9", "html_url": "https://github.com/rust-lang/rust/commit/937b0a04cdc829efa15c8c26878b31ea91c109b9"}, {"sha": "50c339e8f5e5516c9ba4938979e787c0a0a8e081", "url": "https://api.github.com/repos/rust-lang/rust/commits/50c339e8f5e5516c9ba4938979e787c0a0a8e081", "html_url": "https://github.com/rust-lang/rust/commit/50c339e8f5e5516c9ba4938979e787c0a0a8e081"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "429b1644976c71586589f49ed806ceb8cccb59a5", "filename": "library/alloc/src/collections/btree/set/tests.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/224afadb3bb746cd3a9f70047825481a5bf9c655/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224afadb3bb746cd3a9f70047825481a5bf9c655/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs?ref=224afadb3bb746cd3a9f70047825481a5bf9c655", "patch": "@@ -319,6 +319,42 @@ fn test_is_subset() {\n     assert_eq!(is_subset(&[99, 100], &large), false);\n }\n \n+#[test]\n+fn test_is_superset() {\n+    fn is_superset(a: &[i32], b: &[i32]) -> bool {\n+        let set_a = BTreeSet::from_iter(a.iter());\n+        let set_b = BTreeSet::from_iter(b.iter());\n+        set_a.is_superset(&set_b)\n+    }\n+\n+    assert_eq!(is_superset(&[], &[]), true);\n+    assert_eq!(is_superset(&[], &[1, 2]), false);\n+    assert_eq!(is_superset(&[0], &[1, 2]), false);\n+    assert_eq!(is_superset(&[1], &[1, 2]), false);\n+    assert_eq!(is_superset(&[4], &[1, 2]), false);\n+    assert_eq!(is_superset(&[1, 4], &[1, 2]), false);\n+    assert_eq!(is_superset(&[1, 2], &[1, 2]), true);\n+    assert_eq!(is_superset(&[1, 2, 3], &[1, 3]), true);\n+    assert_eq!(is_superset(&[1, 2, 3], &[]), true);\n+    assert_eq!(is_superset(&[-1, 1, 2, 3], &[-1, 3]), true);\n+\n+    if cfg!(miri) {\n+        // Miri is too slow\n+        return;\n+    }\n+\n+    let large = Vec::from_iter(0..100);\n+    assert_eq!(is_superset(&[], &large), false);\n+    assert_eq!(is_superset(&large, &[]), true);\n+    assert_eq!(is_superset(&large, &[1]), true);\n+    assert_eq!(is_superset(&large, &[50, 99]), true);\n+    assert_eq!(is_superset(&large, &[100]), false);\n+    assert_eq!(is_superset(&large, &[0, 99]), true);\n+    assert_eq!(is_superset(&[-1], &large), false);\n+    assert_eq!(is_superset(&[0], &large), false);\n+    assert_eq!(is_superset(&[99, 100], &large), false);\n+}\n+\n #[test]\n fn test_retain() {\n     let mut set = BTreeSet::from([1, 2, 3, 4, 5, 6]);\n@@ -391,6 +427,26 @@ fn test_clear() {\n     x.clear();\n     assert!(x.is_empty());\n }\n+#[test]\n+fn test_remove() {\n+    let mut x = BTreeSet::new();\n+    assert!(x.is_empty());\n+\n+    x.insert(1);\n+    x.insert(2);\n+    x.insert(3);\n+    x.insert(4);\n+\n+    assert_eq!(x.remove(&2), true);\n+    assert_eq!(x.remove(&0), false);\n+    assert_eq!(x.remove(&5), false);\n+    assert_eq!(x.remove(&1), true);\n+    assert_eq!(x.remove(&2), false);\n+    assert_eq!(x.remove(&3), true);\n+    assert_eq!(x.remove(&4), true);\n+    assert_eq!(x.remove(&4), false);\n+    assert!(x.is_empty());\n+}\n \n #[test]\n fn test_zip() {"}]}