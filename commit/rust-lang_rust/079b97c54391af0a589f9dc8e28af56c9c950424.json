{"sha": "079b97c54391af0a589f9dc8e28af56c9c950424", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OWI5N2M1NDM5MWFmMGE1ODlmOWRjOGUyOGFmNTZjOWM5NTA0MjQ=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-10-11T14:26:43Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-10-17T12:09:38Z"}, "message": "Implement the `environment` query", "tree": {"sha": "a61f0738b29e937c339eaacf9631a889f1dd5f2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a61f0738b29e937c339eaacf9631a889f1dd5f2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/079b97c54391af0a589f9dc8e28af56c9c950424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/079b97c54391af0a589f9dc8e28af56c9c950424", "html_url": "https://github.com/rust-lang/rust/commit/079b97c54391af0a589f9dc8e28af56c9c950424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/079b97c54391af0a589f9dc8e28af56c9c950424/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81131804da3e14a67804a301008c796f5c8ea950", "url": "https://api.github.com/repos/rust-lang/rust/commits/81131804da3e14a67804a301008c796f5c8ea950", "html_url": "https://github.com/rust-lang/rust/commit/81131804da3e14a67804a301008c796f5c8ea950"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "7bfb6f060cd4a49bb05bd2481eb3160e6827c607", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=079b97c54391af0a589f9dc8e28af56c9c950424", "patch": "@@ -337,6 +337,13 @@ impl<'tcx> DomainGoal<'tcx> {\n     pub fn into_goal(self) -> GoalKind<'tcx> {\n         GoalKind::DomainGoal(self)\n     }\n+\n+    pub fn into_program_clause(self) -> ProgramClause<'tcx> {\n+        ProgramClause {\n+            goal: self,\n+            hypotheses: &ty::List::empty(),\n+        }\n+    }\n }\n \n impl<'tcx> GoalKind<'tcx> {\n@@ -402,11 +409,6 @@ pub struct InEnvironment<'tcx, G> {\n     pub goal: G,\n }\n \n-/// Compute the environment of the given item.\n-fn environment<'a, 'tcx>(_tcx: TyCtxt<'a, 'tcx, 'tcx>, _def_id: DefId) -> Environment<'tcx> {\n-    panic!()\n-}\n-\n pub type Selection<'tcx> = Vtable<'tcx, PredicateObligation<'tcx>>;\n \n #[derive(Clone,Debug)]\n@@ -1109,7 +1111,6 @@ pub fn provide(providers: &mut ty::query::Providers<'_>) {\n         codegen_fulfill_obligation: codegen::codegen_fulfill_obligation,\n         vtable_methods,\n         substitute_normalize_and_test_predicates,\n-        environment,\n         ..*providers\n     };\n }"}, {"sha": "adb5883fd5e26eb13f602caf8a3331f94c22756b", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=079b97c54391af0a589f9dc8e28af56c9c950424", "patch": "@@ -377,6 +377,7 @@ define_queries! { <'tcx>\n         // might want to use `reveal_all()` method to change modes.\n         [] fn param_env: ParamEnv(DefId) -> ty::ParamEnv<'tcx>,\n \n+        // Get the chalk-style environment of the given item.\n         [] fn environment: Environment(DefId) -> traits::Environment<'tcx>,\n \n         // Trait selection queries. These are best used by invoking `ty.moves_by_default()`,"}, {"sha": "1774db3d85a8722f8f397b90fa292aedceae1cc4", "filename": "src/librustc_traits/lowering/environment.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs?ref=079b97c54391af0a589f9dc8e28af56c9c950424", "patch": "@@ -17,6 +17,7 @@ use rustc::traits::{\n     Environment,\n };\n use rustc::ty::{self, TyCtxt, Ty};\n+use rustc::hir::def_id::DefId;\n use rustc_data_structures::fx::FxHashSet;\n \n struct ClauseVisitor<'set, 'a, 'tcx: 'a> {\n@@ -162,3 +163,26 @@ crate fn program_clauses_for_env<'a, 'tcx>(\n         closure.into_iter()\n     );\n }\n+\n+crate fn environment<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Environment<'tcx> {\n+    use super::{Lower, IntoFromEnvGoal};\n+\n+    // The environment of an impl Trait type is its defining function's environment\n+    if let Some(parent) = ty::is_impl_trait_defn(tcx, def_id) {\n+        return environment(tcx, parent);\n+    }\n+\n+    // Compute the bounds on `Self` and the type parameters.\n+    let ty::InstantiatedPredicates { predicates } =\n+        tcx.predicates_of(def_id).instantiate_identity(tcx);\n+    \n+    let clauses = predicates.into_iter()\n+        .map(|predicate| predicate.lower())\n+        .map(|domain_goal| domain_goal.map_bound(|dg| dg.into_from_env_goal()))\n+        .map(|domain_goal| domain_goal.map_bound(|dg| dg.into_program_clause()))\n+        .map(Clause::ForAll);\n+    \n+    Environment {\n+        clauses: tcx.mk_clauses(clauses),\n+    }\n+}"}, {"sha": "a6bf28b6ad8ac11232d16e0e5ca981affe6937e4", "filename": "src/librustc_traits/lowering/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/079b97c54391af0a589f9dc8e28af56c9c950424/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fmod.rs?ref=079b97c54391af0a589f9dc8e28af56c9c950424", "patch": "@@ -35,6 +35,7 @@ crate fn provide(p: &mut Providers) {\n     *p = Providers {\n         program_clauses_for,\n         program_clauses_for_env: environment::program_clauses_for_env,\n+        environment: environment::environment,\n         ..*p\n     };\n }"}]}