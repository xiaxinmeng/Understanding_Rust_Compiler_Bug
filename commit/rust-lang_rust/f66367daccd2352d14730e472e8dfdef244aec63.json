{"sha": "f66367daccd2352d14730e472e8dfdef244aec63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NjM2N2RhY2NkMjM1MmQxNDczMGU0NzJlOGRmZGVmMjQ0YWVjNjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "obk8176014uqher834@olio-obk.de", "date": "2018-04-28T11:35:35Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-30T16:29:15Z"}, "message": "Improve div by zero const eval errors", "tree": {"sha": "c12368ed62bdd34264ddc30105d68731ce0705e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c12368ed62bdd34264ddc30105d68731ce0705e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f66367daccd2352d14730e472e8dfdef244aec63", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrnRFssHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MATf\n9A//alDyoRZqSbI5189YqULtHXHuuLJi16vNT7wSrIh89bzrqvJ7CFHQfdEB7CfY\ngiGErdkW7Xt5uEgu6PBBZAJ578O6S5xefrrZwzTqIxwwjf0KqDBURyNClMsw6Oz0\n1Nkdc2WgdZ5w+mLeqCoLYf8qNotz2L5wr5W++4ZDPHEfDHsK5k2YiAhhyI38vyyZ\n3KLts6vMGw4oovHEHOcWaOvH6cpUxuKAsD2wWcUzDD5uV0oYWPtnMieTJ1UmgXxy\nk5/PxOaEO15POZce4OoyLXINbEKr8j15aYo/Eg+9xVZm2zG1kjyRaXqN/7/LNJIl\nVDw4VudX/VAvBxPFU6S0OhQXf6ZAYwB4oks9+vCNrx7QJAnNtWgnX2jtxpa5mefU\nexgkZdxPESyWVRyMXEkjRXZ7Y6rKQEP28pWney5CFFfEIAiuyFJVntID0zxAlahD\nnRrVsnAWBq2hNRco2oquPBEzOO2s1T8MGUsY0FI7EAaa6iVGNi4oQvrxvhGexRau\nERYXiZquQaOe/MNNMVjQREURuOk2BxuPGsDGGXc6fXkqVF1MNx0JeRvba5DHVJlQ\nSLC+uaIJqMxufPPspuf3yT9SgvV1C01VeuRjxMN8Vwp1FzEfx1sOkoj559csTo9x\nFpdFNu3JofWuHa+P5AysJ4bfVX4+jbDI2z8zi1mP5ESrPE0=\n=8epp\n-----END PGP SIGNATURE-----", "payload": "tree c12368ed62bdd34264ddc30105d68731ce0705e3\nparent 1f3cb926a24897d6524920bb38618b4b6ee17aa7\nauthor Oliver Schneider <obk8176014uqher834@olio-obk.de> 1524915335 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1525105755 +0200\n\nImprove div by zero const eval errors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f66367daccd2352d14730e472e8dfdef244aec63", "html_url": "https://github.com/rust-lang/rust/commit/f66367daccd2352d14730e472e8dfdef244aec63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f66367daccd2352d14730e472e8dfdef244aec63/comments", "author": null, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f3cb926a24897d6524920bb38618b4b6ee17aa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f3cb926a24897d6524920bb38618b4b6ee17aa7", "html_url": "https://github.com/rust-lang/rust/commit/1f3cb926a24897d6524920bb38618b4b6ee17aa7"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "624f8ed789cd6afa47db7690be133e71fa3dae05", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f66367daccd2352d14730e472e8dfdef244aec63/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66367daccd2352d14730e472e8dfdef244aec63/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=f66367daccd2352d14730e472e8dfdef244aec63", "patch": "@@ -1134,7 +1134,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n                     write!(fmt, \"!\")?;\n                 }\n                 write!(fmt, \"{:?}, \", cond)?;\n-                write!(fmt, \"{:?}\", msg)?;\n+                write!(fmt, \"\\\"{:?}\\\"\", msg)?;\n \n                 write!(fmt, \")\")\n             },"}, {"sha": "ef6deab04775049ac2dc23fd1c3fd4ee8f32121d", "filename": "src/librustc_mir/interpret/operator.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f66367daccd2352d14730e472e8dfdef244aec63/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66367daccd2352d14730e472e8dfdef244aec63/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperator.rs?ref=f66367daccd2352d14730e472e8dfdef244aec63", "patch": "@@ -140,7 +140,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                 return Ok((PrimVal::from_bool(op(&l, &r)), false));\n             }\n             let op: Option<fn(i128, i128) -> (i128, bool)> = match bin_op {\n-                Rem | Div if r == 0 => return Ok((PrimVal::Bytes(l), true)),\n+                Div if r == 0 => return err!(DivisionByZero),\n+                Rem if r == 0 => return err!(RemainderByZero),\n                 Div => Some(i128::overflowing_div),\n                 Rem => Some(i128::overflowing_rem),\n                 Add => Some(i128::overflowing_add),\n@@ -221,7 +222,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                     Add => u128::overflowing_add,\n                     Sub => u128::overflowing_sub,\n                     Mul => u128::overflowing_mul,\n-                    Rem | Div if r == 0 => return Ok((PrimVal::Bytes(l), true)),\n+                    Div if r == 0 => return err!(DivisionByZero),\n+                    Rem if r == 0 => return err!(RemainderByZero),\n                     Div => u128::overflowing_div,\n                     Rem => u128::overflowing_rem,\n                     _ => bug!(),"}, {"sha": "0e0d91f472472d2583db5ea058e7ccfbbd132a8c", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f66367daccd2352d14730e472e8dfdef244aec63/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66367daccd2352d14730e472e8dfdef244aec63/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=f66367daccd2352d14730e472e8dfdef244aec63", "patch": "@@ -161,6 +161,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                         }\n                         Overflow(op) => Err(Overflow(op).into()),\n                         OverflowNeg => Err(OverflowNeg.into()),\n+                        DivisionByZero => Err(DivisionByZero.into()),\n+                        RemainderByZero => Err(RemainderByZero.into()),\n                         GeneratorResumedAfterReturn |\n                         GeneratorResumedAfterPanic => unimplemented!(),\n                         _ => bug!(),"}, {"sha": "d16231c72b91a5040cf65ee083332eb9ccc592fe", "filename": "src/test/ui/const-eval/index_out_of_bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bound.stderr?ref=f66367daccd2352d14730e472e8dfdef244aec63", "patch": "@@ -2,7 +2,7 @@ error[E0080]: constant evaluation error\n   --> $DIR/index_out_of_bound.rs:11:19\n    |\n LL | static FOO: i32 = [][0];\n-   |                   ^^^^^ index out of bounds: the len is 0 but the index is 0 at $DIR/index_out_of_bound.rs:11:19: 11:24\n+   |                   ^^^^^ index out of bounds: the len is 0 but the index is 0\n \n error: aborting due to previous error\n "}, {"sha": "7761f192fdb70aa33edd4e4d1f6557bfb6625151", "filename": "src/test/ui/const-eval/promoted_errors.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpromoted_errors.stderr?ref=f66367daccd2352d14730e472e8dfdef244aec63", "patch": "@@ -28,7 +28,7 @@ warning: constant evaluation error\n   --> $DIR/promoted_errors.rs:19:20\n    |\n LL |     println!(\"{}\", 1/(1-1));\n-   |                    ^^^^^^^ attempt to divide with overflow\n+   |                    ^^^^^^^ attempt to divide by zero\n \n warning: attempt to divide by zero\n   --> $DIR/promoted_errors.rs:22:14\n@@ -40,11 +40,11 @@ warning: constant evaluation error\n   --> $DIR/promoted_errors.rs:22:14\n    |\n LL |     let _x = 1/(1-1);\n-   |              ^^^^^^^ attempt to divide with overflow\n+   |              ^^^^^^^ attempt to divide by zero\n \n warning: constant evaluation error\n   --> $DIR/promoted_errors.rs:25:20\n    |\n LL |     println!(\"{}\", 1/(false as u32));\n-   |                    ^^^^^^^^^^^^^^^^ attempt to divide with overflow\n+   |                    ^^^^^^^^^^^^^^^^ attempt to divide by zero\n "}, {"sha": "7f3e6eaad9b17963d825d532d470d2a0be4c85bb", "filename": "src/test/ui/error-codes/E0080.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Ferror-codes%2FE0080.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Ferror-codes%2FE0080.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0080.rs?ref=f66367daccd2352d14730e472e8dfdef244aec63", "patch": "@@ -15,7 +15,6 @@ enum Enum {\n     //~| const_err\n     //~| const_err\n     //~| const_err\n-    //~| divide by zero\n }\n \n fn main() {"}, {"sha": "5e401bd6c79da92a3faa90ae0a3630422d832ffe", "filename": "src/test/ui/error-codes/E0080.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Ferror-codes%2FE0080.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f66367daccd2352d14730e472e8dfdef244aec63/src%2Ftest%2Fui%2Ferror-codes%2FE0080.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0080.stderr?ref=f66367daccd2352d14730e472e8dfdef244aec63", "patch": "@@ -24,7 +24,7 @@ warning: constant evaluation error\n   --> $DIR/E0080.rs:14:9\n    |\n LL |     Y = (1 / 0) //~ ERROR E0080\n-   |         ^^^^^^^ attempt to divide with overflow\n+   |         ^^^^^^^ attempt to divide by zero\n \n error[E0080]: constant evaluation error\n   --> $DIR/E0080.rs:14:9"}]}