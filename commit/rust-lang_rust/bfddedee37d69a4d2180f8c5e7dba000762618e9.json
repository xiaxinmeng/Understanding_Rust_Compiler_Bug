{"sha": "bfddedee37d69a4d2180f8c5e7dba000762618e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZGRlZGVlMzdkNjlhNGQyMTgwZjhjNWU3ZGJhMDAwNzYyNjE4ZTk=", "commit": {"author": {"name": "Richard Diamond", "email": "wichard@vitalitystudios.com", "date": "2018-07-19T03:04:27Z"}, "committer": {"name": "Richard Diamond", "email": "wichard@vitalitystudios.com", "date": "2018-08-23T19:30:57Z"}, "message": "AMDGPU ignores `noinline` when it slaps `alwaysinline` everywhere.\n\nAllow target specs to disable that attribute.", "tree": {"sha": "14c56223981c3dd01247313c2d8dc12a7fb9a1af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14c56223981c3dd01247313c2d8dc12a7fb9a1af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfddedee37d69a4d2180f8c5e7dba000762618e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfddedee37d69a4d2180f8c5e7dba000762618e9", "html_url": "https://github.com/rust-lang/rust/commit/bfddedee37d69a4d2180f8c5e7dba000762618e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfddedee37d69a4d2180f8c5e7dba000762618e9/comments", "author": {"login": "DiamondLovesYou", "id": 650357, "node_id": "MDQ6VXNlcjY1MDM1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/650357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiamondLovesYou", "html_url": "https://github.com/DiamondLovesYou", "followers_url": "https://api.github.com/users/DiamondLovesYou/followers", "following_url": "https://api.github.com/users/DiamondLovesYou/following{/other_user}", "gists_url": "https://api.github.com/users/DiamondLovesYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiamondLovesYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiamondLovesYou/subscriptions", "organizations_url": "https://api.github.com/users/DiamondLovesYou/orgs", "repos_url": "https://api.github.com/users/DiamondLovesYou/repos", "events_url": "https://api.github.com/users/DiamondLovesYou/events{/privacy}", "received_events_url": "https://api.github.com/users/DiamondLovesYou/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DiamondLovesYou", "id": 650357, "node_id": "MDQ6VXNlcjY1MDM1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/650357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiamondLovesYou", "html_url": "https://github.com/DiamondLovesYou", "followers_url": "https://api.github.com/users/DiamondLovesYou/followers", "following_url": "https://api.github.com/users/DiamondLovesYou/following{/other_user}", "gists_url": "https://api.github.com/users/DiamondLovesYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiamondLovesYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiamondLovesYou/subscriptions", "organizations_url": "https://api.github.com/users/DiamondLovesYou/orgs", "repos_url": "https://api.github.com/users/DiamondLovesYou/repos", "events_url": "https://api.github.com/users/DiamondLovesYou/events{/privacy}", "received_events_url": "https://api.github.com/users/DiamondLovesYou/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c0603e55fdfd17fb7960967856a89482ff7543b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c0603e55fdfd17fb7960967856a89482ff7543b", "html_url": "https://github.com/rust-lang/rust/commit/1c0603e55fdfd17fb7960967856a89482ff7543b"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "739acf6f5caee587c4bfb2302f2d0c13d81c20fe", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bfddedee37d69a4d2180f8c5e7dba000762618e9/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfddedee37d69a4d2180f8c5e7dba000762618e9/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=bfddedee37d69a4d2180f8c5e7dba000762618e9", "patch": "@@ -16,6 +16,7 @@ use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::session::Session;\n use rustc::session::config::Sanitizer;\n use rustc::ty::TyCtxt;\n+use rustc::ty::layout::HasTyCtxt;\n use rustc::ty::query::Providers;\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::fx::FxHashMap;\n@@ -32,12 +33,16 @@ use value::Value;\n \n /// Mark LLVM function to use provided inline heuristic.\n #[inline]\n-pub fn inline(val: &'ll Value, inline: InlineAttr) {\n+pub fn inline(cx: &CodegenCx<'ll, '_>, val: &'ll Value, inline: InlineAttr) {\n     use self::InlineAttr::*;\n     match inline {\n         Hint   => Attribute::InlineHint.apply_llfn(Function, val),\n         Always => Attribute::AlwaysInline.apply_llfn(Function, val),\n-        Never  => Attribute::NoInline.apply_llfn(Function, val),\n+        Never  => {\n+            if cx.tcx().sess.target.target.arch != \"amdgpu\" {\n+                Attribute::NoInline.apply_llfn(Function, val);\n+            }\n+        },\n         None   => {\n             Attribute::InlineHint.unapply_llfn(Function, val);\n             Attribute::AlwaysInline.unapply_llfn(Function, val);\n@@ -142,7 +147,7 @@ pub fn from_fn_attrs(\n     let codegen_fn_attrs = id.map(|id| cx.tcx.codegen_fn_attrs(id))\n         .unwrap_or(CodegenFnAttrs::new());\n \n-    inline(llfn, codegen_fn_attrs.inline);\n+    inline(cx, llfn, codegen_fn_attrs.inline);\n \n     // The `uwtable` attribute according to LLVM is:\n     //"}, {"sha": "4b4ccb3b600b3a54f0d7a31dcac80ba472c2b828", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfddedee37d69a4d2180f8c5e7dba000762618e9/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfddedee37d69a4d2180f8c5e7dba000762618e9/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=bfddedee37d69a4d2180f8c5e7dba000762618e9", "patch": "@@ -96,7 +96,7 @@ pub fn get_fn(\n         debug!(\"get_fn: not casting pointer!\");\n \n         if instance.def.is_inline(tcx) {\n-            attributes::inline(llfn, attributes::InlineAttr::Hint);\n+            attributes::inline(cx, llfn, attributes::InlineAttr::Hint);\n         }\n         attributes::from_fn_attrs(cx, llfn, Some(instance.def.def_id()));\n "}, {"sha": "a8502e9244768b8aee7835dd4167bfffeff311fb", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfddedee37d69a4d2180f8c5e7dba000762618e9/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfddedee37d69a4d2180f8c5e7dba000762618e9/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=bfddedee37d69a4d2180f8c5e7dba000762618e9", "patch": "@@ -180,7 +180,7 @@ fn predefine_fn<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>,\n \n     debug!(\"predefine_fn: mono_ty = {:?} instance = {:?}\", mono_ty, instance);\n     if instance.def.is_inline(cx.tcx) {\n-        attributes::inline(lldecl, attributes::InlineAttr::Hint);\n+        attributes::inline(cx, lldecl, attributes::InlineAttr::Hint);\n     }\n     attributes::from_fn_attrs(cx, lldecl, Some(instance.def.def_id()));\n "}]}