{"sha": "0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMGEwMGNjMDU1MWI3ZjUyNTUxNWU0ZTUzYmMwYTExYmQxYjJlYmQ=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-12-20T16:18:45Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-12-20T16:18:45Z"}, "message": "new --static-root-path flag for controlling static file locations", "tree": {"sha": "762b7100621f8a197a04b3f8ec9f03ef7c80a6c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/762b7100621f8a197a04b3f8ec9f03ef7c80a6c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "html_url": "https://github.com/rust-lang/rust/commit/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a4a4ffc69f2d05eb8b8a32eaf9bd0607b69fe38", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a4a4ffc69f2d05eb8b8a32eaf9bd0607b69fe38", "html_url": "https://github.com/rust-lang/rust/commit/0a4a4ffc69f2d05eb8b8a32eaf9bd0607b69fe38"}], "stats": {"total": 94, "additions": 80, "deletions": 14}, "files": [{"sha": "905b06465340a7845e4b445adc67b0cb94fbc475", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "patch": "@@ -402,3 +402,18 @@ Using `index-page` option enables `enable-index-page` option as well.\n ### `--enable-index-page`: generate a default index page for docs\n \n This feature allows the generation of a default index-page which lists the generated crates.\n+\n+### `--static-root-path`: control how static files are loaded in HTML output\n+\n+Using this flag looks like this:\n+\n+```bash\n+$ rustdoc src/lib.rs -Z unstable-options --static-root-path '/cache/'\n+```\n+\n+This flag controls how rustdoc links to its static files on HTML pages. If you're hosting a lot of\n+crates' docs generated by the same version of rustdoc, you can use this flag to cache rustdoc's CSS,\n+JavaScript, and font files in a single location, rather than duplicating it once per \"doc root\"\n+(grouping of crate docs generated into the same output directory, like with `cargo doc`). Per-crate\n+files like the search index will still load from the documentation root, but anything that gets\n+renamed with `--resource-suffix` will load from the given path."}, {"sha": "f9a46fe362e3c6c4a43b472e2664f1f083fd9e88", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "patch": "@@ -181,6 +181,9 @@ pub struct RenderOptions {\n     /// A file to use as the index page at the root of the output directory. Overrides\n     /// `enable_index_page` to be true if set.\n     pub index_page: Option<PathBuf>,\n+    /// An optional path to use as the location of static files. If not set, uses combinations of\n+    /// `../` to reach the documentation root.\n+    pub static_root_path: Option<String>,\n \n     // Options specific to reading standalone Markdown files\n \n@@ -433,6 +436,7 @@ impl Options {\n         let markdown_playground_url = matches.opt_str(\"markdown-playground-url\");\n         let crate_version = matches.opt_str(\"crate-version\");\n         let enable_index_page = matches.opt_present(\"enable-index-page\") || index_page.is_some();\n+        let static_root_path = matches.opt_str(\"static-root-path\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -471,6 +475,7 @@ impl Options {\n                 enable_minification,\n                 enable_index_page,\n                 index_page,\n+                static_root_path,\n                 markdown_no_toc,\n                 markdown_css,\n                 markdown_playground_url,"}, {"sha": "1ead428ff498c72f34cce433fe45a2920a794422", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "patch": "@@ -26,6 +26,7 @@ pub struct Page<'a> {\n     pub title: &'a str,\n     pub css_class: &'a str,\n     pub root_path: &'a str,\n+    pub static_root_path: Option<&'a str>,\n     pub description: &'a str,\n     pub keywords: &'a str,\n     pub resource_suffix: &'a str,\n@@ -36,6 +37,7 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     css_file_extension: bool, themes: &[PathBuf], extra_scripts: &[&str])\n     -> io::Result<()>\n {\n+    let static_root_path = page.static_root_path.unwrap_or(page.root_path);\n     write!(dst,\n \"<!DOCTYPE html>\\\n <html lang=\\\"en\\\">\\\n@@ -46,20 +48,20 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     <meta name=\\\"description\\\" content=\\\"{description}\\\">\\\n     <meta name=\\\"keywords\\\" content=\\\"{keywords}\\\">\\\n     <title>{title}</title>\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}normalize{suffix}.css\\\">\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}rustdoc{suffix}.css\\\" \\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}normalize{suffix}.css\\\">\\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}rustdoc{suffix}.css\\\" \\\n           id=\\\"mainThemeStyle\\\">\\\n     {themes}\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}dark{suffix}.css\\\">\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}light{suffix}.css\\\" \\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}dark{suffix}.css\\\">\\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}light{suffix}.css\\\" \\\n           id=\\\"themeStyle\\\">\\\n-    <script src=\\\"{root_path}storage{suffix}.js\\\"></script>\\\n-    <noscript><link rel=\\\"stylesheet\\\" href=\\\"{root_path}noscript{suffix}.css\\\"></noscript>\\\n+    <script src=\\\"{static_root_path}storage{suffix}.js\\\"></script>\\\n+    <noscript><link rel=\\\"stylesheet\\\" href=\\\"{static_root_path}noscript{suffix}.css\\\"></noscript>\\\n     {css_extension}\\\n     {favicon}\\\n     {in_header}\\\n     <style type=\\\"text/css\\\">\\\n-    #crate-search{{background-image:url(\\\"{root_path}down-arrow{suffix}.svg\\\");}}\\\n+    #crate-search{{background-image:url(\\\"{static_root_path}down-arrow{suffix}.svg\\\");}}\\\n     </style>\\\n </head>\\\n <body class=\\\"rustdoc {css_class}\\\">\\\n@@ -77,11 +79,13 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     </nav>\\\n     <div class=\\\"theme-picker\\\">\\\n         <button id=\\\"theme-picker\\\" aria-label=\\\"Pick another theme!\\\">\\\n-            <img src=\\\"{root_path}brush{suffix}.svg\\\" width=\\\"18\\\" alt=\\\"Pick another theme!\\\">\\\n+            <img src=\\\"{static_root_path}brush{suffix}.svg\\\" \\\n+                 width=\\\"18\\\" \\\n+                 alt=\\\"Pick another theme!\\\">\\\n         </button>\\\n         <div id=\\\"theme-choices\\\"></div>\\\n     </div>\\\n-    <script src=\\\"{root_path}theme{suffix}.js\\\"></script>\\\n+    <script src=\\\"{static_root_path}theme{suffix}.js\\\"></script>\\\n     <nav class=\\\"sub\\\">\\\n         <form class=\\\"search-form js-only\\\">\\\n             <div class=\\\"search-container\\\">\\\n@@ -96,7 +100,9 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n                            type=\\\"search\\\">\\\n                 </div>\\\n                 <a id=\\\"settings-menu\\\" href=\\\"{root_path}settings.html\\\">\\\n-                    <img src=\\\"{root_path}wheel{suffix}.svg\\\" width=\\\"18\\\" alt=\\\"Change settings\\\">\\\n+                    <img src=\\\"{static_root_path}wheel{suffix}.svg\\\" \\\n+                         width=\\\"18\\\" \\\n+                         alt=\\\"Change settings\\\">\\\n                 </a>\\\n             </div>\\\n         </form>\\\n@@ -157,19 +163,22 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n         window.currentCrate = \\\"{krate}\\\";\\\n     </script>\\\n     <script src=\\\"{root_path}aliases.js\\\"></script>\\\n-    <script src=\\\"{root_path}main{suffix}.js\\\"></script>\\\n+    <script src=\\\"{static_root_path}main{suffix}.js\\\"></script>\\\n     {extra_scripts}\\\n     <script defer src=\\\"{root_path}search-index.js\\\"></script>\\\n </body>\\\n </html>\",\n     css_extension = if css_file_extension {\n-        format!(\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}theme{suffix}.css\\\">\",\n-                root_path = page.root_path,\n+        format!(\"<link rel=\\\"stylesheet\\\" \\\n+                       type=\\\"text/css\\\" \\\n+                       href=\\\"{static_root_path}theme{suffix}.css\\\">\",\n+                static_root_path = static_root_path,\n                 suffix=page.resource_suffix)\n     } else {\n         String::new()\n     },\n     content   = *t,\n+    static_root_path = static_root_path,\n     root_path = page.root_path,\n     css_class = page.css_class,\n     logo      = if layout.logo.is_empty() {\n@@ -197,11 +206,13 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n                    .filter_map(|t| t.file_stem())\n                    .filter_map(|t| t.to_str())\n                    .map(|t| format!(r#\"<link rel=\"stylesheet\" type=\"text/css\" href=\"{}{}{}.css\">\"#,\n-                                    page.root_path,\n+                                    static_root_path,\n                                     t,\n                                     page.resource_suffix))\n                    .collect::<String>(),\n     suffix=page.resource_suffix,\n+    // TODO: break out a separate `static_extra_scripts` that uses `static_root_path` instead,\n+    // then leave `source-files.js` here and move `source-script.js` to the static version\n     extra_scripts=extra_scripts.iter().map(|e| {\n         format!(\"<script src=\\\"{root_path}{extra_script}.js\\\"></script>\",\n                 root_path=page.root_path,"}, {"sha": "a4e71a1833322a1560c6b42904eb3db42d3cbaee", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "patch": "@@ -140,6 +140,9 @@ struct SharedContext {\n     /// Suffix to be added on resource files (if suffix is \"-v2\" then \"light.css\" becomes\n     /// \"light-v2.css\").\n     pub resource_suffix: String,\n+    /// Optional path string to be used to load static files on output pages. If not set, uses\n+    /// combinations of `../` to reach the documentation root.\n+    pub static_root_path: Option<String>,\n }\n \n impl SharedContext {\n@@ -506,6 +509,7 @@ pub fn run(mut krate: clean::Crate,\n         extension_css,\n         extern_html_root_urls,\n         resource_suffix,\n+        static_root_path,\n         ..\n     } = options;\n \n@@ -533,6 +537,7 @@ pub fn run(mut krate: clean::Crate,\n         sort_modules_alphabetically,\n         themes,\n         resource_suffix,\n+        static_root_path,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -1080,6 +1085,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n                 title: \"Index of crates\",\n                 css_class: \"mod\",\n                 root_path: \"./\",\n+                static_root_path: cx.shared.static_root_path.deref(),\n                 description: \"List of crates\",\n                 keywords: BASIC_KEYWORDS,\n                 resource_suffix: &cx.shared.resource_suffix,\n@@ -1366,6 +1372,7 @@ impl<'a> SourceCollector<'a> {\n             title: &title,\n             css_class: \"source\",\n             root_path: &root_path,\n+            static_root_path: self.scx.static_root_path.deref(),\n             description: &desc,\n             keywords: BASIC_KEYWORDS,\n             resource_suffix: &self.scx.resource_suffix,\n@@ -1956,6 +1963,7 @@ impl Context {\n             title: \"List of all items in this crate\",\n             css_class: \"mod\",\n             root_path: \"../\",\n+            static_root_path: self.shared.static_root_path.deref(),\n             description: \"List of all items in this crate\",\n             keywords: BASIC_KEYWORDS,\n             resource_suffix: &self.shared.resource_suffix,\n@@ -2035,6 +2043,7 @@ impl Context {\n         let page = layout::Page {\n             css_class: tyname,\n             root_path: &self.root_path(),\n+            static_root_path: self.shared.static_root_path.deref(),\n             title: &title,\n             description: &desc,\n             keywords: &keywords,"}, {"sha": "4f59f67e94f98e2e2a965d589d4508c375d44742", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "patch": "@@ -25,6 +25,7 @@\n #![feature(crate_visibility_modifier)]\n #![feature(const_fn)]\n #![feature(drain_filter)]\n+#![feature(inner_deref)]\n \n #![recursion_limit=\"256\"]\n \n@@ -338,6 +339,13 @@ fn opts() -> Vec<RustcOptGroup> {\n                        \"enable-index-page\",\n                        \"To enable generation of the index page\")\n         }),\n+        unstable(\"static-root-path\", |o| {\n+            o.optopt(\"\",\n+                     \"static-root-path\",\n+                     \"Path string to force loading static files from in output pages. \\\n+                      If not set, uses combinations of '../' to reach the documentation root.\",\n+                     \"PATH\")\n+        }),\n     ]\n }\n "}, {"sha": "9307b501585fc4072a3fe753541fb171332696a1", "filename": "src/test/rustdoc/static-root-path.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs?ref=0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-Z unstable-options --static-root-path /cache/\n+\n+// @has static_root_path/struct.SomeStruct.html\n+// @matches - '\"/cache/main\\.js\"'\n+// @!matches - '\"\\.\\./main\\.js\"'\n+// @matches - '\"\\.\\./search-index\\.js\"'\n+// @!matches - '\"/cache/search-index\\.js\"'\n+pub struct SomeStruct;"}]}