{"sha": "ccc75675b618f2ae59c77ee20064e613e74492bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYzc1Njc1YjYxOGYyYWU1OWM3N2VlMjAwNjRlNjEzZTc0NDkyYmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-12T08:19:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-12T08:19:19Z"}, "message": "correctly setup path-map for fs-changes", "tree": {"sha": "6cdfdc9714736317c7e33866a18c7bbbecfb09f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cdfdc9714736317c7e33866a18c7bbbecfb09f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccc75675b618f2ae59c77ee20064e613e74492bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc75675b618f2ae59c77ee20064e613e74492bb", "html_url": "https://github.com/rust-lang/rust/commit/ccc75675b618f2ae59c77ee20064e613e74492bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccc75675b618f2ae59c77ee20064e613e74492bb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e240360ee282b4f5936748cc07d6ceb3be5d6bb2", "html_url": "https://github.com/rust-lang/rust/commit/e240360ee282b4f5936748cc07d6ceb3be5d6bb2"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "6853efc00c625bfaba416c514529fbf506924df5", "filename": "crates/server/src/server_world.rs", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/ccc75675b618f2ae59c77ee20064e613e74492bb/crates%2Fserver%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc75675b618f2ae59c77ee20064e613e74492bb/crates%2Fserver%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fserver_world.rs?ref=ccc75675b618f2ae59c77ee20064e613e74492bb", "patch": "@@ -39,30 +39,31 @@ impl ServerWorldState {\n             mem_map: HashMap::new(),\n         }\n     }\n-\n     pub fn apply_fs_changes(&mut self, events: Vec<FileEvent>) {\n-        let pm = &mut self.path_map;\n-        let mm = &mut self.mem_map;\n-        let changes = events.into_iter()\n-            .map(|event| {\n-                let text = match event.kind {\n-                    FileEventKind::Add(text) => Some(text),\n-                };\n-                (event.path, text)\n-            })\n-            .map(|(path, text)| {\n-                (pm.get_or_insert(path, Root::Workspace), text)\n-            })\n-            .filter_map(|(id, text)| {\n-                if mm.contains_key(&id) {\n-                    mm.insert(id, text);\n-                    None\n-                } else {\n-                    Some((id, text))\n-                }\n-            });\n-\n-        self.analysis_host.change_files(changes);\n+        {\n+            let pm = &mut self.path_map;\n+            let mm = &mut self.mem_map;\n+            let changes = events.into_iter()\n+                .map(|event| {\n+                    let text = match event.kind {\n+                        FileEventKind::Add(text) => Some(text),\n+                    };\n+                    (event.path, text)\n+                })\n+                .map(|(path, text)| {\n+                    (pm.get_or_insert(path, Root::Workspace), text)\n+                })\n+                .filter_map(|(id, text)| {\n+                    if mm.contains_key(&id) {\n+                        mm.insert(id, text);\n+                        None\n+                    } else {\n+                        Some((id, text))\n+                    }\n+                });\n+            self.analysis_host.change_files(changes);\n+        }\n+        self.analysis_host.set_file_resolver(Arc::new(self.path_map.clone()));\n     }\n     pub fn events_to_files(&mut self, events: Vec<FileEvent>) -> (Vec<(FileId, String)>, Arc<FileResolver>) {\n         let files = {"}]}