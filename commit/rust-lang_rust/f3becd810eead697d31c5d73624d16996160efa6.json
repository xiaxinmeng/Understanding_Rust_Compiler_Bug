{"sha": "f3becd810eead697d31c5d73624d16996160efa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYmVjZDgxMGVlYWQ2OTdkMzFjNWQ3MzYyNGQxNjk5NjE2MGVmYTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-05T20:35:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-05T20:35:15Z"}, "message": "explain how to run cargo miri with a locally compiled rustc", "tree": {"sha": "9e8b1285afdfa7c4c186aa28c3ed41faf81f437b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e8b1285afdfa7c4c186aa28c3ed41faf81f437b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3becd810eead697d31c5d73624d16996160efa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3becd810eead697d31c5d73624d16996160efa6", "html_url": "https://github.com/rust-lang/rust/commit/f3becd810eead697d31c5d73624d16996160efa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3becd810eead697d31c5d73624d16996160efa6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dbd23626e2df2b129a31bc341d029bbf4439a70", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd23626e2df2b129a31bc341d029bbf4439a70", "html_url": "https://github.com/rust-lang/rust/commit/7dbd23626e2df2b129a31bc341d029bbf4439a70"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "46a46b3e7a80096e45585597453bd1c5eaa97154", "filename": "README.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f3becd810eead697d31c5d73624d16996160efa6/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/f3becd810eead697d31c5d73624d16996160efa6/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=f3becd810eead697d31c5d73624d16996160efa6", "patch": "@@ -111,20 +111,19 @@ local changes on whatever project you are debugging.\n (We are giving `+nightly` explicitly here all the time because it is important\n that all of these commands get executed with the same toolchain.)\n \n-### Testing Miri\n-\n-Instead of running an entire project using `cargo miri`, you can also use the\n-Miri \"driver\" directly to run just a single file.  That can be easier during\n-debugging.\n-\n `cargo miri setup` should end in printing the directory where the libstd was\n-built.  Set that as your `MIRI_SYSROOT` environment variable:\n+built.  For the next step to work, set that as your `MIRI_SYSROOT` environment\n+variable:\n \n ```sh\n export MIRI_SYSROOT=~/.cache/miri/HOST # or whatever the previous command said\n ```\n \n-Now you can run Miri directly, without going through `cargo miri`:\n+### Testing Miri\n+\n+Instead of running an entire project using `cargo miri`, you can also use the\n+Miri \"driver\" directly to run just a single file.  That can be easier during\n+debugging.\n \n ```sh\n cargo run tests/run-pass/format.rs # or whatever test you like\n@@ -186,6 +185,15 @@ rustup override set custom\n With this, you should now have a working development setup!  See\n [\"Testing Miri\"](#testing-miri) above for how to proceed.\n \n+Running `cargo miri` in this setup is a bit more complicated, because the Miri\n+binary you just created does not actually run without some enviroment variables.\n+But you can contort cargo into calling `cargo miri` the right way for you:\n+\n+```sh\n+# in some other project's directory, to run `cargo miri test`:\n+MIRI_SYSROOT=$(rustc +custom --print sysroot) cargo +custom run --manifest-path /path/to/miri/Cargo.toml --bin cargo-miri --release -- miri test\n+```\n+\n ### Miri `-Z` flags and environment variables\n \n Several `-Z` flags are relevant for Miri:"}]}