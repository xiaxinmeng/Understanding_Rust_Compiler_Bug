{"sha": "93ef4b3991d19cddf011da8f0b5a7bf9a8672541", "node_id": "C_kwDOAAsO6NoAKDkzZWY0YjM5OTFkMTljZGRmMDExZGE4ZjBiNWE3YmY5YTg2NzI1NDE", "commit": {"author": {"name": "Kai Luo", "email": "gluokai@gmail.com", "date": "2023-01-09T15:26:06Z"}, "committer": {"name": "Kai Luo", "email": "gluokai@gmail.com", "date": "2023-01-09T15:26:06Z"}, "message": "Add comment", "tree": {"sha": "b81a93ea21822160d2c7fe0b9042afbdf00a5da4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b81a93ea21822160d2c7fe0b9042afbdf00a5da4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93ef4b3991d19cddf011da8f0b5a7bf9a8672541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93ef4b3991d19cddf011da8f0b5a7bf9a8672541", "html_url": "https://github.com/rust-lang/rust/commit/93ef4b3991d19cddf011da8f0b5a7bf9a8672541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93ef4b3991d19cddf011da8f0b5a7bf9a8672541/comments", "author": {"login": "bzEq", "id": 3006405, "node_id": "MDQ6VXNlcjMwMDY0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3006405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzEq", "html_url": "https://github.com/bzEq", "followers_url": "https://api.github.com/users/bzEq/followers", "following_url": "https://api.github.com/users/bzEq/following{/other_user}", "gists_url": "https://api.github.com/users/bzEq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzEq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzEq/subscriptions", "organizations_url": "https://api.github.com/users/bzEq/orgs", "repos_url": "https://api.github.com/users/bzEq/repos", "events_url": "https://api.github.com/users/bzEq/events{/privacy}", "received_events_url": "https://api.github.com/users/bzEq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bzEq", "id": 3006405, "node_id": "MDQ6VXNlcjMwMDY0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3006405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzEq", "html_url": "https://github.com/bzEq", "followers_url": "https://api.github.com/users/bzEq/followers", "following_url": "https://api.github.com/users/bzEq/following{/other_user}", "gists_url": "https://api.github.com/users/bzEq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzEq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzEq/subscriptions", "organizations_url": "https://api.github.com/users/bzEq/orgs", "repos_url": "https://api.github.com/users/bzEq/repos", "events_url": "https://api.github.com/users/bzEq/events{/privacy}", "received_events_url": "https://api.github.com/users/bzEq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4926eb8ab9c70ff25f38fc699f629e50b704770", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4926eb8ab9c70ff25f38fc699f629e50b704770", "html_url": "https://github.com/rust-lang/rust/commit/d4926eb8ab9c70ff25f38fc699f629e50b704770"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "87585a8fcd0d72868e78631742e963783d0d7750", "filename": "library/std/src/personality/dwarf/eh.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93ef4b3991d19cddf011da8f0b5a7bf9a8672541/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93ef4b3991d19cddf011da8f0b5a7bf9a8672541/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs?ref=93ef4b3991d19cddf011da8f0b5a7bf9a8672541", "patch": "@@ -131,10 +131,12 @@ unsafe fn interpret_cs_action(\n     lpad: usize,\n ) -> EHAction {\n     if cs_action_entry == 0 {\n-        // If cs_action is 0 then this is a cleanup (Drop::drop). We run these\n+        // If cs_action_entry is 0 then this is a cleanup (Drop::drop). We run these\n         // for both Rust panics and foreign exceptions.\n         EHAction::Cleanup(lpad)\n     } else {\n+        // If lpad != 0 and cs_action_entry != 0, we have to check ttype_index.\n+        // If ttype_index == 0 under the condition, we take cleanup action.\n         let action_record = (action_table as *mut u8).offset(cs_action_entry as isize - 1);\n         let mut action_reader = DwarfReader::new(action_record);\n         let ttype_index = action_reader.read_sleb128();"}]}