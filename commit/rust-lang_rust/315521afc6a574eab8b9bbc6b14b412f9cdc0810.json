{"sha": "315521afc6a574eab8b9bbc6b14b412f9cdc0810", "node_id": "C_kwDOAAsO6NoAKDMxNTUyMWFmYzZhNTc0ZWFiOGI5YmJjNmIxNGI0MTJmOWNkYzA4MTA", "commit": {"author": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-27T13:26:36Z"}, "committer": {"name": "Max Baumann", "email": "max@bmn.dev", "date": "2022-03-30T18:12:58Z"}, "message": "fix uitests", "tree": {"sha": "d19c4372cf97940866aceb4e33e171d8cac5e1fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d19c4372cf97940866aceb4e33e171d8cac5e1fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/315521afc6a574eab8b9bbc6b14b412f9cdc0810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/315521afc6a574eab8b9bbc6b14b412f9cdc0810", "html_url": "https://github.com/rust-lang/rust/commit/315521afc6a574eab8b9bbc6b14b412f9cdc0810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/315521afc6a574eab8b9bbc6b14b412f9cdc0810/comments", "author": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FoseFx", "id": 22842759, "node_id": "MDQ6VXNlcjIyODQyNzU5", "avatar_url": "https://avatars.githubusercontent.com/u/22842759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FoseFx", "html_url": "https://github.com/FoseFx", "followers_url": "https://api.github.com/users/FoseFx/followers", "following_url": "https://api.github.com/users/FoseFx/following{/other_user}", "gists_url": "https://api.github.com/users/FoseFx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FoseFx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FoseFx/subscriptions", "organizations_url": "https://api.github.com/users/FoseFx/orgs", "repos_url": "https://api.github.com/users/FoseFx/repos", "events_url": "https://api.github.com/users/FoseFx/events{/privacy}", "received_events_url": "https://api.github.com/users/FoseFx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9be3945be740b12c333a68db6fa33b8878acdeb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9be3945be740b12c333a68db6fa33b8878acdeb9", "html_url": "https://github.com/rust-lang/rust/commit/9be3945be740b12c333a68db6fa33b8878acdeb9"}], "stats": {"total": 73, "additions": 37, "deletions": 36}, "files": [{"sha": "3f343a3e430185f8ca8535370c363b1f2c308ace", "filename": "tests/ui/module_name_repetitions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fmodule_name_repetitions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fmodule_name_repetitions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_name_repetitions.stderr?ref=315521afc6a574eab8b9bbc6b14b412f9cdc0810", "patch": "@@ -15,8 +15,8 @@ LL |     pub fn bar_foo() {}\n error: item name starts with its containing module's name\n   --> $DIR/module_name_repetitions.rs:10:5\n    |\n-LL |     pub struct FooCake {}\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+LL |     pub struct FooCake;\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error: item name ends with its containing module's name\n   --> $DIR/module_name_repetitions.rs:11:5"}, {"sha": "291dab4fb3144ad1750ac0df493c4deb3d776016", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=315521afc6a574eab8b9bbc6b14b412f9cdc0810", "patch": "@@ -68,7 +68,8 @@ impl FnOnce<(&str,)> for GreetStruct1 {\n     }\n }\n \n-struct GreetStruct2;\n+#[allow(clippy::unit_like_struct_brackets)]\n+struct GreetStruct2();\n \n impl FnOnce<(&str,)> for GreetStruct2 {\n     type Output = ();"}, {"sha": "ee57e0d26df83482fcf0fc6dcc1c1ec8b1ee9f11", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=315521afc6a574eab8b9bbc6b14b412f9cdc0810", "patch": "@@ -1,183 +1,183 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:95:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n LL |     0;\n    |     ^^\n    |\n    = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:96:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n LL |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:97:5\n+  --> $DIR/no_effect.rs:98:5\n    |\n LL |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:98:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n LL |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:99:5\n+  --> $DIR/no_effect.rs:100:5\n    |\n LL |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:100:5\n+  --> $DIR/no_effect.rs:101:5\n    |\n LL |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:101:5\n+  --> $DIR/no_effect.rs:102:5\n    |\n LL |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:102:5\n+  --> $DIR/no_effect.rs:103:5\n    |\n LL |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:103:5\n+  --> $DIR/no_effect.rs:104:5\n    |\n LL |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:104:5\n+  --> $DIR/no_effect.rs:105:5\n    |\n LL |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:105:5\n+  --> $DIR/no_effect.rs:106:5\n    |\n LL |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:106:5\n+  --> $DIR/no_effect.rs:107:5\n    |\n LL |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:107:5\n+  --> $DIR/no_effect.rs:108:5\n    |\n LL |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:108:5\n+  --> $DIR/no_effect.rs:109:5\n    |\n LL |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:109:5\n+  --> $DIR/no_effect.rs:110:5\n    |\n LL |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:110:5\n+  --> $DIR/no_effect.rs:111:5\n    |\n LL |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:111:5\n+  --> $DIR/no_effect.rs:112:5\n    |\n LL |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:112:5\n+  --> $DIR/no_effect.rs:113:5\n    |\n LL |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:113:5\n+  --> $DIR/no_effect.rs:114:5\n    |\n LL |     5..=6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:114:5\n+  --> $DIR/no_effect.rs:115:5\n    |\n LL |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:115:5\n+  --> $DIR/no_effect.rs:116:5\n    |\n LL |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:116:5\n+  --> $DIR/no_effect.rs:117:5\n    |\n LL |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:117:5\n+  --> $DIR/no_effect.rs:118:5\n    |\n LL |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:118:5\n+  --> $DIR/no_effect.rs:119:5\n    |\n LL |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:120:5\n+  --> $DIR/no_effect.rs:121:5\n    |\n LL |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:122:5\n+  --> $DIR/no_effect.rs:123:5\n    |\n LL |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:123:5\n+  --> $DIR/no_effect.rs:124:5\n    |\n LL |     let _unused = 1;\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::no-effect-underscore-binding` implied by `-D warnings`\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:124:5\n+  --> $DIR/no_effect.rs:125:5\n    |\n LL |     let _penguin = || println!(\"Some helpful closure\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:125:5\n+  --> $DIR/no_effect.rs:126:5\n    |\n LL |     let _duck = Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:126:5\n+  --> $DIR/no_effect.rs:127:5\n    |\n LL |     let _cat = [2, 4, 6, 8][2];\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "de763f98b5c89fb55d344bff8b836fde26f2f916", "filename": "tests/ui/redundant_allocation_fixable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fredundant_allocation_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Fredundant_allocation_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_allocation_fixable.rs?ref=315521afc6a574eab8b9bbc6b14b412f9cdc0810", "patch": "@@ -4,7 +4,7 @@\n #![allow(clippy::blacklisted_name, unused_variables, dead_code)]\n #![allow(unused_imports)]\n \n-pub struct MyStruct {}\n+pub struct MyStruct;\n \n pub struct SubT<T> {\n     foo: T,"}, {"sha": "7e7ba11cc719802a49da168a74294edc4d3af94a", "filename": "tests/ui/unit_like_struct_brackets.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Funit_like_struct_brackets.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/315521afc6a574eab8b9bbc6b14b412f9cdc0810/tests%2Fui%2Funit_like_struct_brackets.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_like_struct_brackets.stderr?ref=315521afc6a574eab8b9bbc6b14b412f9cdc0810", "patch": "@@ -1,15 +1,15 @@\n error: found empty brackets on struct declaration\n   --> $DIR/unit_like_struct_brackets.rs:5:25\n    |\n-LL | pub struct MyEmptyStruct {}             // should trigger lint\n+LL | pub struct MyEmptyStruct {} // should trigger lint\n    |                         ^^^ help: remove the brackets: `;`\n    |\n    = note: `-D clippy::unit-like-struct-brackets` implied by `-D warnings`\n \n error: found empty brackets on struct declaration\n   --> $DIR/unit_like_struct_brackets.rs:6:26\n    |\n-LL | struct MyEmptyTupleStruct();            // should trigger lint\n+LL | struct MyEmptyTupleStruct(); // should trigger lint\n    |                          ^^^ help: remove the brackets: `;`\n \n error: aborting due to 2 previous errors"}]}