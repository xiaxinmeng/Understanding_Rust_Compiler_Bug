{"sha": "1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZDk3YWU4YTE5ZDRkYzgxMWM4MjZiYjFiNjZhYjVhYjk0YTgxNjA=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-30T16:27:58Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-12-04T16:43:21Z"}, "message": "Tweak error on empty match", "tree": {"sha": "81cfc90fcf556cd6a93eb49dcfdd704341410fcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81cfc90fcf556cd6a93eb49dcfdd704341410fcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160", "html_url": "https://github.com/rust-lang/rust/commit/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b26aa0b52958e23a70b1a5f2a8b55ad49fbbd337", "url": "https://api.github.com/repos/rust-lang/rust/commits/b26aa0b52958e23a70b1a5f2a8b55ad49fbbd337", "html_url": "https://github.com/rust-lang/rust/commit/b26aa0b52958e23a70b1a5f2a8b55ad49fbbd337"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "b0be74626209326c447bde4c36ac2fb825cbddd0", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160", "patch": "@@ -180,11 +180,8 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n                         ty::Never => true,\n                         ty::Adt(def, _) => {\n                             def_span = self.tcx.hir().span_if_local(def.did);\n-                            if def.variants.len() < 4 && !def.variants.is_empty() {\n-                                // keep around to point at the definition of non-covered variants\n-                                missing_variants =\n-                                    def.variants.iter().map(|variant| variant.ident).collect();\n-                            }\n+                            missing_variants =\n+                                def.variants.iter().map(|variant| variant.ident).collect();\n \n                             def.variants.is_empty() && !cx.is_foreign_non_exhaustive_enum(pat_ty)\n                         }\n@@ -219,8 +216,10 @@ impl<'tcx> MatchVisitor<'_, 'tcx> {\n                         err.span_label(sp, format!(\"`{}` defined here\", pat_ty));\n                     }\n                     // point at the definition of non-covered enum variants\n-                    for variant in &missing_variants {\n-                        err.span_label(variant.span, \"variant not covered\");\n+                    if missing_variants.len() < 4 {\n+                        for variant in &missing_variants {\n+                            err.span_label(variant.span, \"variant not covered\");\n+                        }\n                     }\n                     err.emit();\n                 }"}, {"sha": "178d72d11584b2c693ae8667001da09034d77e29", "filename": "src/test/ui/pattern/usefulness/match-empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty.rs?ref=1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160", "patch": "@@ -44,5 +44,5 @@ fn main() {\n     match NonEmptyEnum2::Foo(true) {}\n     //~^ ERROR multiple patterns of type `NonEmptyEnum2` are not handled\n     match NonEmptyEnum5::V1 {}\n-    //~^ ERROR type `NonEmptyEnum5` is non-empty\n+    //~^ ERROR multiple patterns of type `NonEmptyEnum5` are not handled\n }"}, {"sha": "7d220a31ff9699f0c38c4ce7d0df00180f9fa2a0", "filename": "src/test/ui/pattern/usefulness/match-empty.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fmatch-empty.stderr?ref=1bd97ae8a19d4dc811c826bb1b66ab5ab94a8160", "patch": "@@ -50,7 +50,7 @@ LL |       match NonEmptyEnum2::Foo(true) {}\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: type `NonEmptyEnum5` is non-empty\n+error[E0004]: non-exhaustive patterns: multiple patterns of type `NonEmptyEnum5` are not handled\n   --> $DIR/match-empty.rs:46:11\n    |\n LL | / enum NonEmptyEnum5 {"}]}