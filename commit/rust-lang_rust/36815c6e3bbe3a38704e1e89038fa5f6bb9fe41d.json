{"sha": "36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d", "node_id": "C_kwDOAAsO6NoAKDM2ODE1YzZlM2JiZTNhMzg3MDRlMWU4OTAzOGZhNWY2YmI5ZmU0MWQ", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-23T03:54:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-23T03:54:39Z"}, "message": "Rollup merge of #104612 - Swatinem:async-ret-y, r=estebank\n\nLower return type outside async block creation\n\nThis allows feeding a different output type to async blocks with a different `ImplTraitContext`. Spotted this while working on #104321", "tree": {"sha": "25992274c8c5b286e2c1abf11632b40f4263aa5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25992274c8c5b286e2c1abf11632b40f4263aa5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjfZl/CRBK7hj4Ov3rIwAAy5QIAAzr3vuB1/Q1DVjc0f9qro9P\nvWOZC2BTncrbFgk6TH0CnRJ8/3Io66JORTO2d6QpD5+mau2FmEvNL8oG1gyZ0vRV\n3XthxcxgaWwyqvU28CRTRYKCNeHgtzdf/fvvlcW2d2ZHQrNVS3DYDDjf/RJxrvgM\neTkdRxCs2OKrPGNw8QMkMYAIFjr5u+TUwADqwZrWhlT4cdV1LWGbT6WqaXK3FnLK\nrbLTGGUwEtebFGjjKoQesylPrTv1t71vfxxJcFdpVzgNRW+8iVFVCR/F95hJrtsy\nnKLr2yYYZ5S+bmkGc7qZIi56cIHJTm/AypvKO2qq8RgtqflcOdvXd3DORm893g0=\n=Eyoi\n-----END PGP SIGNATURE-----\n", "payload": "tree 25992274c8c5b286e2c1abf11632b40f4263aa5e\nparent a673364c543986789cfbb844c925063519fb872a\nparent b59090ebe3779732033c7d984e1f8b369798b3a4\nauthor Manish Goregaokar <manishsmail@gmail.com> 1669175679 -0500\ncommitter GitHub <noreply@github.com> 1669175679 -0500\n\nRollup merge of #104612 - Swatinem:async-ret-y, r=estebank\n\nLower return type outside async block creation\n\nThis allows feeding a different output type to async blocks with a different `ImplTraitContext`. Spotted this while working on #104321\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d", "html_url": "https://github.com/rust-lang/rust/commit/36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a673364c543986789cfbb844c925063519fb872a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a673364c543986789cfbb844c925063519fb872a", "html_url": "https://github.com/rust-lang/rust/commit/a673364c543986789cfbb844c925063519fb872a"}, {"sha": "b59090ebe3779732033c7d984e1f8b369798b3a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b59090ebe3779732033c7d984e1f8b369798b3a4", "html_url": "https://github.com/rust-lang/rust/commit/b59090ebe3779732033c7d984e1f8b369798b3a4"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "6855344356a1ff5651769ac4e219b539ff66a945", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=36815c6e3bbe3a38704e1e89038fa5f6bb9fe41d", "patch": "@@ -588,17 +588,12 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         &mut self,\n         capture_clause: CaptureBy,\n         closure_node_id: NodeId,\n-        ret_ty: Option<AstP<Ty>>,\n+        ret_ty: Option<hir::FnRetTy<'hir>>,\n         span: Span,\n         async_gen_kind: hir::AsyncGeneratorKind,\n         body: impl FnOnce(&mut Self) -> hir::Expr<'hir>,\n     ) -> hir::ExprKind<'hir> {\n-        let output = match ret_ty {\n-            Some(ty) => hir::FnRetTy::Return(\n-                self.lower_ty(&ty, &ImplTraitContext::Disallowed(ImplTraitPosition::AsyncBlock)),\n-            ),\n-            None => hir::FnRetTy::DefaultReturn(self.lower_span(span)),\n-        };\n+        let output = ret_ty.unwrap_or_else(|| hir::FnRetTy::DefaultReturn(self.lower_span(span)));\n \n         // Resume argument type. We let the compiler infer this to simplify the lowering. It is\n         // fully constrained by `future::from_generator`.\n@@ -1003,8 +998,13 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             // Transform `async |x: u8| -> X { ... }` into\n             // `|x: u8| future_from_generator(|| -> X { ... })`.\n             let body_id = this.lower_fn_body(&outer_decl, |this| {\n-                let async_ret_ty =\n-                    if let FnRetTy::Ty(ty) = &decl.output { Some(ty.clone()) } else { None };\n+                let async_ret_ty = if let FnRetTy::Ty(ty) = &decl.output {\n+                    let itctx = ImplTraitContext::Disallowed(ImplTraitPosition::AsyncBlock);\n+                    Some(hir::FnRetTy::Return(this.lower_ty(&ty, &itctx)))\n+                } else {\n+                    None\n+                };\n+\n                 let async_body = this.make_async_expr(\n                     capture_clause,\n                     inner_closure_id,"}]}