{"sha": "941dca8ed238a04a55741127165e9ad80671ed8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MWRjYThlZDIzOGEwNGE1NTc0MTEyNzE2NWU5YWQ4MDY3MWVkOGE=", "commit": {"author": {"name": "Ayush Kumar Mishra", "email": "ayush.k.mishra@xcelenergy.com", "date": "2020-09-05T11:22:52Z"}, "committer": {"name": "Ayush Kumar Mishra", "email": "ayush.k.mishra@xcelenergy.com", "date": "2020-09-05T11:22:52Z"}, "message": "Add Arith Tests in Library", "tree": {"sha": "6f62264ce4a781208bf3014e45939968807f9fd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f62264ce4a781208bf3014e45939968807f9fd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/941dca8ed238a04a55741127165e9ad80671ed8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/941dca8ed238a04a55741127165e9ad80671ed8a", "html_url": "https://github.com/rust-lang/rust/commit/941dca8ed238a04a55741127165e9ad80671ed8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/941dca8ed238a04a55741127165e9ad80671ed8a/comments", "author": null, "committer": null, "parents": [{"sha": "c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "html_url": "https://github.com/rust-lang/rust/commit/c3364780d2cfddfe329f62a3ec138fd4f9a60e27"}], "stats": {"total": 68, "additions": 27, "deletions": 41}, "files": [{"sha": "71a40e14ebcebdba3b106114df80fe0f279fd856", "filename": "library/core/tests/num/i32.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/941dca8ed238a04a55741127165e9ad80671ed8a/library%2Fcore%2Ftests%2Fnum%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941dca8ed238a04a55741127165e9ad80671ed8a/library%2Fcore%2Ftests%2Fnum%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fi32.rs?ref=941dca8ed238a04a55741127165e9ad80671ed8a", "patch": "@@ -1 +1,28 @@\n int_module!(i32, i32);\n+\n+#[test]\n+fn test_arith_operation() {\n+    let a: isize = 10;\n+    assert_eq!(a * (a - 1), 90);\n+    let i32_a: isize = 10;\n+    assert_eq!(i32_a, 10);\n+    assert_eq!(i32_a - 10, 0);\n+    assert_eq!(i32_a / 10, 1);\n+    assert_eq!(i32_a - 20, -10);\n+    assert_eq!(i32_a << 10, 10240);\n+    assert_eq!(i32_a << 16, 655360);\n+    assert_eq!(i32_a * 16, 160);\n+    assert_eq!(i32_a * i32_a * i32_a, 1000);\n+    assert_eq!(i32_a * i32_a * i32_a * i32_a, 10000);\n+    assert_eq!(i32_a * i32_a / i32_a * i32_a, 100);\n+    assert_eq!(i32_a * (i32_a - 1) << (2 + i32_a as usize), 368640);\n+    let i32_b: isize = 0x10101010;\n+    assert_eq!(i32_b + 1 - 1, i32_b);\n+    assert_eq!(i32_b << 1, i32_b << 1);\n+    assert_eq!(i32_b >> 1, i32_b >> 1);\n+    assert_eq!(i32_b & i32_b << 1, 0);\n+    assert_eq!(i32_b | i32_b << 1, 0x30303030);\n+    let i32_c: isize = 0x10101010;\n+    assert_eq!(i32_c + i32_c * 2 / 3 * 2 + (i32_c - 7 % 3),\n+               i32_c + i32_c * 2 / 3 * 2 + (i32_c - 7 % 3));\n+}"}, {"sha": "7943cb908d1f1f4a10aa7447d8a76991ed409d4d", "filename": "src/test/ui/numbers-arithmetic/arith-0.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c3364780d2cfddfe329f62a3ec138fd4f9a60e27/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3364780d2cfddfe329f62a3ec138fd4f9a60e27/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-0.rs?ref=c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "patch": "@@ -1,8 +0,0 @@\n-// run-pass\n-\n-\n-pub fn main() {\n-    let a: isize = 10;\n-    println!(\"{}\", a);\n-    assert_eq!(a * (a - 1), 90);\n-}"}, {"sha": "c13c8d8b7659d4761bfd8687c658a3cb5da49f8b", "filename": "src/test/ui/numbers-arithmetic/arith-1.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c3364780d2cfddfe329f62a3ec138fd4f9a60e27/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3364780d2cfddfe329f62a3ec138fd4f9a60e27/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-1.rs?ref=c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "patch": "@@ -1,24 +0,0 @@\n-// run-pass\n-\n-\n-pub fn main() {\n-    let i32_a: isize = 10;\n-    assert_eq!(i32_a, 10);\n-    assert_eq!(i32_a - 10, 0);\n-    assert_eq!(i32_a / 10, 1);\n-    assert_eq!(i32_a - 20, -10);\n-    assert_eq!(i32_a << 10, 10240);\n-    assert_eq!(i32_a << 16, 655360);\n-    assert_eq!(i32_a * 16, 160);\n-    assert_eq!(i32_a * i32_a * i32_a, 1000);\n-    assert_eq!(i32_a * i32_a * i32_a * i32_a, 10000);\n-    assert_eq!(i32_a * i32_a / i32_a * i32_a, 100);\n-    assert_eq!(i32_a * (i32_a - 1) << (2 + i32_a as usize), 368640);\n-    let i32_b: isize = 0x10101010;\n-    assert_eq!(i32_b + 1 - 1, i32_b);\n-    assert_eq!(i32_b << 1, i32_b << 1);\n-    assert_eq!(i32_b >> 1, i32_b >> 1);\n-    assert_eq!(i32_b & i32_b << 1, 0);\n-    println!(\"{}\", i32_b | i32_b << 1);\n-    assert_eq!(i32_b | i32_b << 1, 0x30303030);\n-}"}, {"sha": "46c280677ce84836e18a17fdff8dffe6343c962c", "filename": "src/test/ui/numbers-arithmetic/arith-2.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c3364780d2cfddfe329f62a3ec138fd4f9a60e27/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3364780d2cfddfe329f62a3ec138fd4f9a60e27/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Farith-2.rs?ref=c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "patch": "@@ -1,9 +0,0 @@\n-// run-pass\n-\n-\n-\n-pub fn main() {\n-    let i32_c: isize = 0x10101010;\n-    assert_eq!(i32_c + i32_c * 2 / 3 * 2 + (i32_c - 7 % 3),\n-                 i32_c + i32_c * 2 / 3 * 2 + (i32_c - 7 % 3));\n-}"}]}