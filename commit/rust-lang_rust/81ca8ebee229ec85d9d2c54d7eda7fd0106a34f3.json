{"sha": "81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxY2E4ZWJlZTIyOWVjODVkOWQyYzU0ZDdlZGE3ZmQwMTA2YTM0ZjM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-09-28T19:54:18Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-09-28T20:35:01Z"}, "message": "rustc_typeck: don't lint non-extern-prelude extern crate's in Rust 2018.", "tree": {"sha": "54c651b4c5b11ff6131acafa76a285410f541385", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54c651b4c5b11ff6131acafa76a285410f541385"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "html_url": "https://github.com/rust-lang/rust/commit/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e90985acdec9928da9f6d157cfeb64f0ee98bffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/e90985acdec9928da9f6d157cfeb64f0ee98bffe", "html_url": "https://github.com/rust-lang/rust/commit/e90985acdec9928da9f6d157cfeb64f0ee98bffe"}], "stats": {"total": 122, "additions": 34, "deletions": 88}, "files": [{"sha": "4b3f08a10ff5e1e0f943e4f88eb51cbb91cf6a67", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "patch": "@@ -130,15 +130,13 @@ fn unused_crates_lint<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) {\n     });\n \n     for extern_crate in &crates_to_lint {\n-        assert!(extern_crate.def_id.is_local());\n+        let id = tcx.hir.as_local_node_id(extern_crate.def_id).unwrap();\n+        let item = tcx.hir.expect_item(id);\n \n         // If the crate is fully unused, we suggest removing it altogether.\n         // We do this in any edition.\n         if extern_crate.warn_if_unused {\n             if let Some(&span) = unused_extern_crates.get(&extern_crate.def_id) {\n-                assert_eq!(extern_crate.def_id.krate, LOCAL_CRATE);\n-                let hir_id = tcx.hir.definitions().def_index_to_hir_id(extern_crate.def_id.index);\n-                let id = tcx.hir.hir_to_node_id(hir_id);\n                 let msg = \"unused extern crate\";\n                 tcx.struct_span_lint_node(lint, id, span, msg)\n                     .span_suggestion_short_with_applicability(\n@@ -157,6 +155,13 @@ fn unused_crates_lint<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) {\n             continue;\n         }\n \n+        // If the extern crate isn't in the extern prelude,\n+        // there is no way it can be written as an `use`.\n+        let orig_name = extern_crate.orig_name.unwrap_or(item.name);\n+        if !tcx.sess.extern_prelude.contains(&orig_name) {\n+            continue;\n+        }\n+\n         // If the extern crate has any attributes, they may have funky\n         // semantics we can't faithfully represent using `use` (most\n         // notably `#[macro_use]`). Ignore it.\n@@ -165,9 +170,6 @@ fn unused_crates_lint<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) {\n         }\n \n         // Otherwise, we can convert it into a `use` of some kind.\n-        let hir_id = tcx.hir.definitions().def_index_to_hir_id(extern_crate.def_id.index);\n-        let id = tcx.hir.hir_to_node_id(hir_id);\n-        let item = tcx.hir.expect_item(id);\n         let msg = \"`extern crate` is not idiomatic in the new edition\";\n         let help = format!(\n             \"convert it to a `{}`\","}, {"sha": "1cdc9229d078c8f53f2b78f70eb9bdd639a94a55", "filename": "src/test/ui-fulldeps/unnecessary-extern-crate.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.rs?ref=81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "patch": "@@ -20,33 +20,23 @@ extern crate alloc as x;\n //~^ ERROR unused extern crate\n //~| HELP remove\n \n+extern crate proc_macro;\n+\n #[macro_use]\n extern crate test;\n \n pub extern crate test as y;\n-//~^ ERROR `extern crate` is not idiomatic in the new edition\n-//~| HELP convert it to a `pub use`\n \n pub extern crate libc;\n-//~^ ERROR `extern crate` is not idiomatic in the new edition\n-//~| HELP convert it to a `pub use`\n \n pub(crate) extern crate libc as a;\n-//~^ ERROR `extern crate` is not idiomatic in the new edition\n-//~| HELP convert it to a `pub(crate) use`\n \n crate extern crate libc as b;\n-//~^ ERROR `extern crate` is not idiomatic in the new edition\n-//~| HELP convert it to a `crate use`\n \n mod foo {\n     pub(in crate::foo) extern crate libc as c;\n-    //~^ ERROR `extern crate` is not idiomatic in the new edition\n-    //~| HELP convert it to a `pub(in crate::foo) use`\n \n     pub(super) extern crate libc as d;\n-    //~^ ERROR `extern crate` is not idiomatic in the new edition\n-    //~| HELP convert it to a `pub(super) use`\n \n     extern crate alloc;\n     //~^ ERROR unused extern crate\n@@ -57,12 +47,8 @@ mod foo {\n     //~| HELP remove\n \n     pub extern crate test;\n-    //~^ ERROR `extern crate` is not idiomatic in the new edition\n-    //~| HELP convert it\n \n     pub extern crate test as y;\n-    //~^ ERROR `extern crate` is not idiomatic in the new edition\n-    //~| HELP convert it\n \n     mod bar {\n         extern crate alloc;\n@@ -74,8 +60,6 @@ mod foo {\n         //~| HELP remove\n \n         pub(in crate::foo::bar) extern crate libc as e;\n-        //~^ ERROR `extern crate` is not idiomatic in the new edition\n-        //~| HELP convert it to a `pub(in crate::foo::bar) use`\n \n         fn dummy() {\n             unsafe {\n@@ -96,4 +80,6 @@ mod foo {\n fn main() {\n     unsafe { a::getpid(); }\n     unsafe { b::getpid(); }\n+\n+    proc_macro::TokenStream::new();\n }"}, {"sha": "58ec5901585d4888fb91ef20adeb3f4bc63ed82e", "filename": "src/test/ui-fulldeps/unnecessary-extern-crate.stderr", "status": "modified", "additions": 5, "deletions": 59, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr?ref=81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "patch": "@@ -16,83 +16,29 @@ error: unused extern crate\n LL | extern crate alloc as x;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n \n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:26:1\n-   |\n-LL | pub extern crate test as y;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub use`\n-\n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:30:1\n-   |\n-LL | pub extern crate libc;\n-   | ^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub use`\n-\n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:34:1\n-   |\n-LL | pub(crate) extern crate libc as a;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub(crate) use`\n-\n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:38:1\n-   |\n-LL | crate extern crate libc as b;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `crate use`\n-\n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:43:5\n-   |\n-LL |     pub(in crate::foo) extern crate libc as c;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub(in crate::foo) use`\n-\n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:47:5\n-   |\n-LL |     pub(super) extern crate libc as d;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub(super) use`\n-\n error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:51:5\n+  --> $DIR/unnecessary-extern-crate.rs:41:5\n    |\n LL |     extern crate alloc;\n    |     ^^^^^^^^^^^^^^^^^^^ help: remove it\n \n error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:55:5\n+  --> $DIR/unnecessary-extern-crate.rs:45:5\n    |\n LL |     extern crate alloc as x;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n \n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:59:5\n-   |\n-LL |     pub extern crate test;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub use`\n-\n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:63:5\n-   |\n-LL |     pub extern crate test as y;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub use`\n-\n error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:68:9\n+  --> $DIR/unnecessary-extern-crate.rs:54:9\n    |\n LL |         extern crate alloc;\n    |         ^^^^^^^^^^^^^^^^^^^ help: remove it\n \n error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:72:9\n+  --> $DIR/unnecessary-extern-crate.rs:58:9\n    |\n LL |         extern crate alloc as x;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n \n-error: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/unnecessary-extern-crate.rs:76:9\n-   |\n-LL |         pub(in crate::foo::bar) extern crate libc as e;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub(in crate::foo::bar) use`\n-\n-error: aborting due to 15 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "34c7266b637cbcb611dbe99be66e319a36f5e49f", "filename": "src/test/ui/rust-2018/remove-extern-crate.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.fixed?ref=81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "patch": "@@ -14,6 +14,7 @@\n // aux-build:remove-extern-crate.rs\n // compile-flags:--extern remove_extern_crate\n \n+#![feature(alloc)]\n #![warn(rust_2018_idioms)]\n \n \n@@ -22,11 +23,16 @@ use remove_extern_crate;\n #[macro_use]\n extern crate remove_extern_crate as something_else;\n \n+// Shouldn't suggest changing to `use`, as the `alloc`\n+// crate is not in the extern prelude - see #54381.\n+extern crate alloc;\n+\n fn main() {\n     another_name::mem::drop(3);\n     another::foo();\n     remove_extern_crate::foo!();\n     bar!();\n+    alloc::vec![5];\n }\n \n mod another {"}, {"sha": "570bbb02f7218a75fe1220f1861d793e2506125c", "filename": "src/test/ui/rust-2018/remove-extern-crate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.rs?ref=81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "patch": "@@ -14,6 +14,7 @@\n // aux-build:remove-extern-crate.rs\n // compile-flags:--extern remove_extern_crate\n \n+#![feature(alloc)]\n #![warn(rust_2018_idioms)]\n \n extern crate core;\n@@ -22,11 +23,16 @@ use remove_extern_crate;\n #[macro_use]\n extern crate remove_extern_crate as something_else;\n \n+// Shouldn't suggest changing to `use`, as the `alloc`\n+// crate is not in the extern prelude - see #54381.\n+extern crate alloc;\n+\n fn main() {\n     another_name::mem::drop(3);\n     another::foo();\n     remove_extern_crate::foo!();\n     bar!();\n+    alloc::vec![5];\n }\n \n mod another {"}, {"sha": "847ba5f3544b273edb52af7feec5ea9ee34e1b17", "filename": "src/test/ui/rust-2018/remove-extern-crate.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr?ref=81ca8ebee229ec85d9d2c54d7eda7fd0106a34f3", "patch": "@@ -1,24 +1,24 @@\n warning: unused extern crate\n-  --> $DIR/remove-extern-crate.rs:19:1\n+  --> $DIR/remove-extern-crate.rs:20:1\n    |\n LL | extern crate core;\n    | ^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n note: lint level defined here\n-  --> $DIR/remove-extern-crate.rs:17:9\n+  --> $DIR/remove-extern-crate.rs:18:9\n    |\n LL | #![warn(rust_2018_idioms)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: #[warn(unused_extern_crates)] implied by #[warn(rust_2018_idioms)]\n \n warning: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/remove-extern-crate.rs:20:1\n+  --> $DIR/remove-extern-crate.rs:21:1\n    |\n LL | extern crate core as another_name;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `use`\n \n warning: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/remove-extern-crate.rs:33:5\n+  --> $DIR/remove-extern-crate.rs:39:5\n    |\n LL |     extern crate core;\n    |     ^^^^^^^^^^^^^^^^^^ help: convert it to a `use`"}]}