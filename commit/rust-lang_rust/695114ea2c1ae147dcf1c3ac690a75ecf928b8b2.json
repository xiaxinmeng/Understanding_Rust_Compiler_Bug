{"sha": "695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NTExNGVhMmMxYWUxNDdkY2YxYzNhYzY5MGE3NWVjZjkyOGI4YjI=", "commit": {"author": {"name": "Laurent Bonnans", "email": "bonnans.l@gmail.com", "date": "2014-03-16T15:07:39Z"}, "committer": {"name": "Laurent Bonnans", "email": "bonnans.l@gmail.com", "date": "2014-03-17T11:11:22Z"}, "message": "rustc: disallow trailing parentheses for nullary enum variants\n\nFixes #12560", "tree": {"sha": "611c536d3cb01ae1bf7f123f4d05469d17428597", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/611c536d3cb01ae1bf7f123f4d05469d17428597"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "html_url": "https://github.com/rust-lang/rust/commit/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/comments", "author": {"login": "lbonn", "id": 2680312, "node_id": "MDQ6VXNlcjI2ODAzMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2680312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbonn", "html_url": "https://github.com/lbonn", "followers_url": "https://api.github.com/users/lbonn/followers", "following_url": "https://api.github.com/users/lbonn/following{/other_user}", "gists_url": "https://api.github.com/users/lbonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbonn/subscriptions", "organizations_url": "https://api.github.com/users/lbonn/orgs", "repos_url": "https://api.github.com/users/lbonn/repos", "events_url": "https://api.github.com/users/lbonn/events{/privacy}", "received_events_url": "https://api.github.com/users/lbonn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lbonn", "id": 2680312, "node_id": "MDQ6VXNlcjI2ODAzMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2680312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbonn", "html_url": "https://github.com/lbonn", "followers_url": "https://api.github.com/users/lbonn/followers", "following_url": "https://api.github.com/users/lbonn/following{/other_user}", "gists_url": "https://api.github.com/users/lbonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbonn/subscriptions", "organizations_url": "https://api.github.com/users/lbonn/orgs", "repos_url": "https://api.github.com/users/lbonn/repos", "events_url": "https://api.github.com/users/lbonn/events{/privacy}", "received_events_url": "https://api.github.com/users/lbonn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4c91e6c7cfc03246a422576ab41ac74125fd3b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4c91e6c7cfc03246a422576ab41ac74125fd3b8", "html_url": "https://github.com/rust-lang/rust/commit/e4c91e6c7cfc03246a422576ab41ac74125fd3b8"}], "stats": {"total": 81, "additions": 74, "deletions": 7}, "files": [{"sha": "909f3eaf361e02cce6a58f0b11a2259332b998d4", "filename": "src/libsyntax/ext/mtwt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Flibsyntax%2Fext%2Fmtwt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Flibsyntax%2Fext%2Fmtwt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmtwt.rs?ref=695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "patch": "@@ -198,7 +198,7 @@ fn resolve_internal(id: Ident,\n                     resolvedthis\n                 }\n             }\n-            IllegalCtxt() => fail!(\"expected resolvable context, got IllegalCtxt\")\n+            IllegalCtxt => fail!(\"expected resolvable context, got IllegalCtxt\")\n         }\n     };\n     resolve_table.insert(key, resolved);"}, {"sha": "e1a02d5240fb2373b7622011b9b951974c2fcdf6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "patch": "@@ -713,6 +713,23 @@ impl<'a> Parser<'a> {\n         result\n     }\n \n+    // parse a sequence parameter of enum variant. For consistency purposes,\n+    // these should not be empty.\n+    pub fn parse_enum_variant_seq<T>(\n+                               &mut self,\n+                               bra: &token::Token,\n+                               ket: &token::Token,\n+                               sep: SeqSep,\n+                               f: |&mut Parser| -> T)\n+                               -> Vec<T> {\n+        let result = self.parse_unspanned_seq(bra, ket, sep, f);\n+        if result.is_empty() {\n+            self.span_err(self.last_span,\n+            \"nullary enum variants are written with no trailing `( )`\");\n+        }\n+        result\n+    }\n+\n     // NB: Do not use this function unless you actually plan to place the\n     // spanned list in the AST.\n     pub fn parse_seq<T>(\n@@ -3013,7 +3030,7 @@ impl<'a> Parser<'a> {\n                                 self.expect(&token::RPAREN);\n                                 pat = PatEnum(enum_path, None);\n                             } else {\n-                                args = self.parse_unspanned_seq(\n+                                args = self.parse_enum_variant_seq(\n                                     &token::LPAREN,\n                                     &token::RPAREN,\n                                     seq_sep_trailing_disallowed(token::COMMA),\n@@ -4431,7 +4448,7 @@ impl<'a> Parser<'a> {\n                 kind = StructVariantKind(self.parse_struct_def());\n             } else if self.token == token::LPAREN {\n                 all_nullary = false;\n-                let arg_tys = self.parse_unspanned_seq(\n+                let arg_tys = self.parse_enum_variant_seq(\n                     &token::LPAREN,\n                     &token::RPAREN,\n                     seq_sep_trailing_disallowed(token::COMMA),"}, {"sha": "faf672415bdfac3565d0ffce2b5baf89d7e8c907", "filename": "src/test/compile-fail/enums-pats-not-idents.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fenums-pats-not-idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fenums-pats-not-idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fenums-pats-not-idents.rs?ref=695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -12,5 +12,5 @@\n \n fn main() {\n     // a bug in the parser is allowing this:\n-    let a() = 13;\n+    let a(1) = 13;\n }"}, {"sha": "ea2043e6703c2e44029098a147025761e21c260f", "filename": "src/test/compile-fail/issue-12560-1.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fissue-12560-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fissue-12560-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12560-1.rs?ref=695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// For style and consistency reasons, non-parametrized enum variants must\n+// be used simply as `ident` instead of `ident ()`.\n+// This test-case covers enum declaration.\n+\n+enum Foo {\n+    Bar(), //~ ERROR nullary enum variants are written with no trailing `( )`\n+    Baz(), //~ ERROR nullary enum variants are written with no trailing `( )`\n+    Bazar\n+}\n+\n+fn main() {\n+    println!(\"{}\", match Bar { Bar => 1, Baz => 2, Bazar => 3 })\n+}"}, {"sha": "13829d73aadaa7c18a400a427e1b8221cc7e5d80", "filename": "src/test/compile-fail/issue-12560-2.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fissue-12560-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fissue-12560-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12560-2.rs?ref=695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// For style and consistency reasons, non-parametrized enum variants must\n+// be used simply as `ident` instead of `ident ()`.\n+// This test-case covers enum matching.\n+\n+enum Foo {\n+    Bar,\n+    Baz,\n+    Bazar\n+}\n+\n+fn main() {\n+    println!(\"{}\", match Bar {\n+        Bar() => 1, //~ ERROR nullary enum variants are written with no trailing `( )`\n+        Baz() => 2, //~ ERROR nullary enum variants are written with no trailing `( )`\n+        Bazar => 3\n+    })\n+}"}, {"sha": "0359248b36a490cdaac3563a8a1c8552bc25f73a", "filename": "src/test/compile-fail/issue-5927.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fissue-5927.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695114ea2c1ae147dcf1c3ac690a75ecf928b8b2/src%2Ftest%2Fcompile-fail%2Fissue-5927.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5927.rs?ref=695114ea2c1ae147dcf1c3ac690a75ecf928b8b2", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -14,7 +14,7 @@\n \n fn main() {\n     let z = match 3 {\n-        x() => x\n+        x(1) => x(1)\n     };\n     assert_eq!(z,3);\n }"}]}