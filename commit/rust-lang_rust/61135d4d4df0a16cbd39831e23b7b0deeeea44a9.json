{"sha": "61135d4d4df0a16cbd39831e23b7b0deeeea44a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMTM1ZDRkNGRmMGExNmNiZDM5ODMxZTIzYjdiMGRlZWVlYTQ0YTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-09T08:13:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-09T08:13:15Z"}, "message": "fix profile name", "tree": {"sha": "4f8ff5feaa871bba722926847e8e44eb6030922c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f8ff5feaa871bba722926847e8e44eb6030922c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61135d4d4df0a16cbd39831e23b7b0deeeea44a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61135d4d4df0a16cbd39831e23b7b0deeeea44a9", "html_url": "https://github.com/rust-lang/rust/commit/61135d4d4df0a16cbd39831e23b7b0deeeea44a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61135d4d4df0a16cbd39831e23b7b0deeeea44a9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f59cd1a4a0d6c369025a7014e838d25f91d478e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f59cd1a4a0d6c369025a7014e838d25f91d478e4", "html_url": "https://github.com/rust-lang/rust/commit/f59cd1a4a0d6c369025a7014e838d25f91d478e4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2817c9e716debe5db88ee5243e186e997325b9b5", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61135d4d4df0a16cbd39831e23b7b0deeeea44a9/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61135d4d4df0a16cbd39831e23b7b0deeeea44a9/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=61135d4d4df0a16cbd39831e23b7b0deeeea44a9", "patch": "@@ -122,7 +122,7 @@ pub(crate) fn solve_query(\n     krate: Crate,\n     trait_ref: Canonical<InEnvironment<Obligation>>,\n ) -> Option<Solution> {\n-    let _p = profile(\"implements_query\");\n+    let _p = profile(\"solve_query\");\n     let canonical = trait_ref.to_chalk(db).cast();\n     // We currently don't deal with universes (I think / hope they're not yet\n     // relevant for our use cases?)"}]}