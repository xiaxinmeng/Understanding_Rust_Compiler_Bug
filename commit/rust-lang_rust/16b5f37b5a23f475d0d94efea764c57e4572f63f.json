{"sha": "16b5f37b5a23f475d0d94efea764c57e4572f63f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YjVmMzdiNWEyM2Y0NzVkMGQ5NGVmZWE3NjRjNTdlNDU3MmY2M2Y=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-10-19T15:31:41Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-10-19T15:36:48Z"}, "message": "Split `eq_op` ui tests to avoid file limit error in CI", "tree": {"sha": "8035c1be764d28fd33b55a6b4285af25379553bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8035c1be764d28fd33b55a6b4285af25379553bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16b5f37b5a23f475d0d94efea764c57e4572f63f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16b5f37b5a23f475d0d94efea764c57e4572f63f", "html_url": "https://github.com/rust-lang/rust/commit/16b5f37b5a23f475d0d94efea764c57e4572f63f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16b5f37b5a23f475d0d94efea764c57e4572f63f/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a13217ea9c07121e7d3cdcfb0ddd2aa52b90f12", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a13217ea9c07121e7d3cdcfb0ddd2aa52b90f12", "html_url": "https://github.com/rust-lang/rust/commit/5a13217ea9c07121e7d3cdcfb0ddd2aa52b90f12"}], "stats": {"total": 303, "additions": 152, "deletions": 151}, "files": [{"sha": "272b0900a31c6dee8c27f8eadf2c5b7e00245083", "filename": "tests/ui/eq_op.rs", "status": "modified", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.rs?ref=16b5f37b5a23f475d0d94efea764c57e4572f63f", "patch": "@@ -60,8 +60,6 @@ fn main() {\n     const B: u32 = 10;\n     const C: u32 = A / B; // ok, different named constants\n     const D: u32 = A / A;\n-\n-    check_assert_identical_args();\n }\n \n #[rustfmt::skip]\n@@ -87,58 +85,3 @@ fn check_ignore_macro() {\n     // checks if the lint ignores macros with `!` operator\n     !bool_macro!(1) && !bool_macro!(\"\");\n }\n-\n-macro_rules! assert_in_macro_def {\n-    () => {\n-        let a = 42;\n-        assert_eq!(a, a);\n-        assert_ne!(a, a);\n-        debug_assert_eq!(a, a);\n-        debug_assert_ne!(a, a);\n-    };\n-}\n-\n-// lint identical args in assert-like macro invocations (see #3574)\n-fn check_assert_identical_args() {\n-    // lint also in macro definition\n-    assert_in_macro_def!();\n-\n-    let a = 1;\n-    let b = 2;\n-\n-    // lint identical args in `assert_eq!`\n-    assert_eq!(a, a);\n-    assert_eq!(a + 1, a + 1);\n-    // ok\n-    assert_eq!(a, b);\n-    assert_eq!(a, a + 1);\n-    assert_eq!(a + 1, b + 1);\n-\n-    // lint identical args in `assert_ne!`\n-    assert_ne!(a, a);\n-    assert_ne!(a + 1, a + 1);\n-    // ok\n-    assert_ne!(a, b);\n-    assert_ne!(a, a + 1);\n-    assert_ne!(a + 1, b + 1);\n-\n-    // lint identical args in `debug_assert_eq!`\n-    debug_assert_eq!(a, a);\n-    debug_assert_eq!(a + 1, a + 1);\n-    // ok\n-    debug_assert_eq!(a, b);\n-    debug_assert_eq!(a, a + 1);\n-    debug_assert_eq!(a + 1, b + 1);\n-\n-    // lint identical args in `debug_assert_ne!`\n-    debug_assert_ne!(a, a);\n-    debug_assert_ne!(a + 1, a + 1);\n-    // ok\n-    debug_assert_ne!(a, b);\n-    debug_assert_ne!(a, a + 1);\n-    debug_assert_ne!(a + 1, b + 1);\n-\n-    let my_vec = vec![1; 5];\n-    let mut my_iter = my_vec.iter();\n-    assert_ne!(my_iter.next(), my_iter.next());\n-}"}, {"sha": "5b80e6078eed779a002db07565b8b0b7c1c18fe9", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 1, "deletions": 94, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=16b5f37b5a23f475d0d94efea764c57e4572f63f", "patch": "@@ -162,98 +162,5 @@ error: equal expressions as operands to `/`\n LL |     const D: u32 = A / A;\n    |                    ^^^^^\n \n-error: identical args used in this `assert_eq!` macro call\n-  --> $DIR/eq_op.rs:94:20\n-   |\n-LL |         assert_eq!(a, a);\n-   |                    ^^^^\n-...\n-LL |     assert_in_macro_def!();\n-   |     ----------------------- in this macro invocation\n-   |\n-   = note: `#[deny(clippy::eq_op)]` on by default\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: identical args used in this `assert_ne!` macro call\n-  --> $DIR/eq_op.rs:95:20\n-   |\n-LL |         assert_ne!(a, a);\n-   |                    ^^^^\n-...\n-LL |     assert_in_macro_def!();\n-   |     ----------------------- in this macro invocation\n-   |\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: identical args used in this `assert_eq!` macro call\n-  --> $DIR/eq_op.rs:110:16\n-   |\n-LL |     assert_eq!(a, a);\n-   |                ^^^^\n-\n-error: identical args used in this `assert_eq!` macro call\n-  --> $DIR/eq_op.rs:111:16\n-   |\n-LL |     assert_eq!(a + 1, a + 1);\n-   |                ^^^^^^^^^^^^\n-\n-error: identical args used in this `assert_ne!` macro call\n-  --> $DIR/eq_op.rs:118:16\n-   |\n-LL |     assert_ne!(a, a);\n-   |                ^^^^\n-\n-error: identical args used in this `assert_ne!` macro call\n-  --> $DIR/eq_op.rs:119:16\n-   |\n-LL |     assert_ne!(a + 1, a + 1);\n-   |                ^^^^^^^^^^^^\n-\n-error: identical args used in this `debug_assert_eq!` macro call\n-  --> $DIR/eq_op.rs:96:26\n-   |\n-LL |         debug_assert_eq!(a, a);\n-   |                          ^^^^\n-...\n-LL |     assert_in_macro_def!();\n-   |     ----------------------- in this macro invocation\n-   |\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: identical args used in this `debug_assert_ne!` macro call\n-  --> $DIR/eq_op.rs:97:26\n-   |\n-LL |         debug_assert_ne!(a, a);\n-   |                          ^^^^\n-...\n-LL |     assert_in_macro_def!();\n-   |     ----------------------- in this macro invocation\n-   |\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: identical args used in this `debug_assert_eq!` macro call\n-  --> $DIR/eq_op.rs:126:22\n-   |\n-LL |     debug_assert_eq!(a, a);\n-   |                      ^^^^\n-\n-error: identical args used in this `debug_assert_eq!` macro call\n-  --> $DIR/eq_op.rs:127:22\n-   |\n-LL |     debug_assert_eq!(a + 1, a + 1);\n-   |                      ^^^^^^^^^^^^\n-\n-error: identical args used in this `debug_assert_ne!` macro call\n-  --> $DIR/eq_op.rs:134:22\n-   |\n-LL |     debug_assert_ne!(a, a);\n-   |                      ^^^^\n-\n-error: identical args used in this `debug_assert_ne!` macro call\n-  --> $DIR/eq_op.rs:135:22\n-   |\n-LL |     debug_assert_ne!(a + 1, a + 1);\n-   |                      ^^^^^^^^^^^^\n-\n-error: aborting due to 39 previous errors\n+error: aborting due to 27 previous errors\n "}, {"sha": "6b5b31a1a2ef182e97cb855c1cdf3c117d8dbaba", "filename": "tests/ui/eq_op_macros.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op_macros.rs?ref=16b5f37b5a23f475d0d94efea764c57e4572f63f", "patch": "@@ -0,0 +1,56 @@\n+#![warn(clippy::eq_op)]\n+\n+// lint also in macro definition\n+macro_rules! assert_in_macro_def {\n+    () => {\n+        let a = 42;\n+        assert_eq!(a, a);\n+        assert_ne!(a, a);\n+        debug_assert_eq!(a, a);\n+        debug_assert_ne!(a, a);\n+    };\n+}\n+\n+// lint identical args in assert-like macro invocations (see #3574)\n+fn main() {\n+    assert_in_macro_def!();\n+\n+    let a = 1;\n+    let b = 2;\n+\n+    // lint identical args in `assert_eq!`\n+    assert_eq!(a, a);\n+    assert_eq!(a + 1, a + 1);\n+    // ok\n+    assert_eq!(a, b);\n+    assert_eq!(a, a + 1);\n+    assert_eq!(a + 1, b + 1);\n+\n+    // lint identical args in `assert_ne!`\n+    assert_ne!(a, a);\n+    assert_ne!(a + 1, a + 1);\n+    // ok\n+    assert_ne!(a, b);\n+    assert_ne!(a, a + 1);\n+    assert_ne!(a + 1, b + 1);\n+\n+    // lint identical args in `debug_assert_eq!`\n+    debug_assert_eq!(a, a);\n+    debug_assert_eq!(a + 1, a + 1);\n+    // ok\n+    debug_assert_eq!(a, b);\n+    debug_assert_eq!(a, a + 1);\n+    debug_assert_eq!(a + 1, b + 1);\n+\n+    // lint identical args in `debug_assert_ne!`\n+    debug_assert_ne!(a, a);\n+    debug_assert_ne!(a + 1, a + 1);\n+    // ok\n+    debug_assert_ne!(a, b);\n+    debug_assert_ne!(a, a + 1);\n+    debug_assert_ne!(a + 1, b + 1);\n+\n+    let my_vec = vec![1; 5];\n+    let mut my_iter = my_vec.iter();\n+    assert_ne!(my_iter.next(), my_iter.next());\n+}"}, {"sha": "fb9378108b98ce010b7641418b64b3c0a116087f", "filename": "tests/ui/eq_op_macros.stderr", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16b5f37b5a23f475d0d94efea764c57e4572f63f/tests%2Fui%2Feq_op_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op_macros.stderr?ref=16b5f37b5a23f475d0d94efea764c57e4572f63f", "patch": "@@ -0,0 +1,95 @@\n+error: identical args used in this `assert_eq!` macro call\n+  --> $DIR/eq_op_macros.rs:7:20\n+   |\n+LL |         assert_eq!(a, a);\n+   |                    ^^^^\n+...\n+LL |     assert_in_macro_def!();\n+   |     ----------------------- in this macro invocation\n+   |\n+   = note: `-D clippy::eq-op` implied by `-D warnings`\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: identical args used in this `assert_ne!` macro call\n+  --> $DIR/eq_op_macros.rs:8:20\n+   |\n+LL |         assert_ne!(a, a);\n+   |                    ^^^^\n+...\n+LL |     assert_in_macro_def!();\n+   |     ----------------------- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: identical args used in this `assert_eq!` macro call\n+  --> $DIR/eq_op_macros.rs:22:16\n+   |\n+LL |     assert_eq!(a, a);\n+   |                ^^^^\n+\n+error: identical args used in this `assert_eq!` macro call\n+  --> $DIR/eq_op_macros.rs:23:16\n+   |\n+LL |     assert_eq!(a + 1, a + 1);\n+   |                ^^^^^^^^^^^^\n+\n+error: identical args used in this `assert_ne!` macro call\n+  --> $DIR/eq_op_macros.rs:30:16\n+   |\n+LL |     assert_ne!(a, a);\n+   |                ^^^^\n+\n+error: identical args used in this `assert_ne!` macro call\n+  --> $DIR/eq_op_macros.rs:31:16\n+   |\n+LL |     assert_ne!(a + 1, a + 1);\n+   |                ^^^^^^^^^^^^\n+\n+error: identical args used in this `debug_assert_eq!` macro call\n+  --> $DIR/eq_op_macros.rs:9:26\n+   |\n+LL |         debug_assert_eq!(a, a);\n+   |                          ^^^^\n+...\n+LL |     assert_in_macro_def!();\n+   |     ----------------------- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: identical args used in this `debug_assert_ne!` macro call\n+  --> $DIR/eq_op_macros.rs:10:26\n+   |\n+LL |         debug_assert_ne!(a, a);\n+   |                          ^^^^\n+...\n+LL |     assert_in_macro_def!();\n+   |     ----------------------- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: identical args used in this `debug_assert_eq!` macro call\n+  --> $DIR/eq_op_macros.rs:38:22\n+   |\n+LL |     debug_assert_eq!(a, a);\n+   |                      ^^^^\n+\n+error: identical args used in this `debug_assert_eq!` macro call\n+  --> $DIR/eq_op_macros.rs:39:22\n+   |\n+LL |     debug_assert_eq!(a + 1, a + 1);\n+   |                      ^^^^^^^^^^^^\n+\n+error: identical args used in this `debug_assert_ne!` macro call\n+  --> $DIR/eq_op_macros.rs:46:22\n+   |\n+LL |     debug_assert_ne!(a, a);\n+   |                      ^^^^\n+\n+error: identical args used in this `debug_assert_ne!` macro call\n+  --> $DIR/eq_op_macros.rs:47:22\n+   |\n+LL |     debug_assert_ne!(a + 1, a + 1);\n+   |                      ^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}]}