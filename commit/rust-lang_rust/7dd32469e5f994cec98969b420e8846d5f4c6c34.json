{"sha": "7dd32469e5f994cec98969b420e8846d5f4c6c34", "node_id": "C_kwDOAAsO6NoAKDdkZDMyNDY5ZTVmOTk0Y2VjOTg5NjliNDIwZTg4NDZkNWY0YzZjMzQ", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-01-25T19:40:11Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-03-04T13:09:40Z"}, "message": "Fix a compilation error.", "tree": {"sha": "265d76dff15e6c217ea1c0a6f1f3a8f49c1f4ebc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/265d76dff15e6c217ea1c0a6f1f3a8f49c1f4ebc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dd32469e5f994cec98969b420e8846d5f4c6c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dd32469e5f994cec98969b420e8846d5f4c6c34", "html_url": "https://github.com/rust-lang/rust/commit/7dd32469e5f994cec98969b420e8846d5f4c6c34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dd32469e5f994cec98969b420e8846d5f4c6c34/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee02f01ea6caa0dd56393012aa84ca4d09549702", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee02f01ea6caa0dd56393012aa84ca4d09549702", "html_url": "https://github.com/rust-lang/rust/commit/ee02f01ea6caa0dd56393012aa84ca4d09549702"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "be2ccbd98e9c227773bafda5c043323c634e2548", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dd32469e5f994cec98969b420e8846d5f4c6c34/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dd32469e5f994cec98969b420e8846d5f4c6c34/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=7dd32469e5f994cec98969b420e8846d5f4c6c34", "patch": "@@ -171,7 +171,7 @@ impl OwnedHandle {\n         // if we passed it a null handle, but we can treat null as a valid\n         // handle which doesn't do any I/O, and allow it to be duplicated.\n         if handle.is_null() {\n-            return unsafe { Ok(Handle::from_raw_handle(handle)) };\n+            return unsafe { Ok(Self::from_raw_handle(handle)) };\n         }\n \n         let mut ret = 0 as c::HANDLE;"}]}