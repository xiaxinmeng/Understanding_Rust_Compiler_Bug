{"sha": "67ada7abeff96ac84510b8c723554105c2ac8a68", "node_id": "C_kwDOAAsO6NoAKDY3YWRhN2FiZWZmOTZhYzg0NTEwYjhjNzIzNTU0MTA1YzJhYzhhNjg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-02T23:25:29Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-10T17:51:19Z"}, "message": "Remove hir::Node::hir_id.", "tree": {"sha": "140ea64bed5f10fa2e9281a8f1fe8b46bb3f6871", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/140ea64bed5f10fa2e9281a8f1fe8b46bb3f6871"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ada7abeff96ac84510b8c723554105c2ac8a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ada7abeff96ac84510b8c723554105c2ac8a68", "html_url": "https://github.com/rust-lang/rust/commit/67ada7abeff96ac84510b8c723554105c2ac8a68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ada7abeff96ac84510b8c723554105c2ac8a68/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b6f079e4987ded15c13a15b734e7cfb8176839f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6f079e4987ded15c13a15b734e7cfb8176839f", "html_url": "https://github.com/rust-lang/rust/commit/0b6f079e4987ded15c13a15b734e7cfb8176839f"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "ad042acd5ba7293b11d4e5d051b1fe78f0c077a2", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/67ada7abeff96ac84510b8c723554105c2ac8a68/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ada7abeff96ac84510b8c723554105c2ac8a68/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=67ada7abeff96ac84510b8c723554105c2ac8a68", "patch": "@@ -3209,34 +3209,6 @@ impl<'hir> Node<'hir> {\n         }\n     }\n \n-    pub fn hir_id(&self) -> Option<HirId> {\n-        match self {\n-            Node::Item(Item { def_id, .. })\n-            | Node::TraitItem(TraitItem { def_id, .. })\n-            | Node::ImplItem(ImplItem { def_id, .. })\n-            | Node::ForeignItem(ForeignItem { def_id, .. }) => Some(HirId::make_owner(*def_id)),\n-            Node::Field(FieldDef { hir_id, .. })\n-            | Node::AnonConst(AnonConst { hir_id, .. })\n-            | Node::Expr(Expr { hir_id, .. })\n-            | Node::Stmt(Stmt { hir_id, .. })\n-            | Node::Ty(Ty { hir_id, .. })\n-            | Node::Binding(Pat { hir_id, .. })\n-            | Node::Pat(Pat { hir_id, .. })\n-            | Node::Arm(Arm { hir_id, .. })\n-            | Node::Block(Block { hir_id, .. })\n-            | Node::Local(Local { hir_id, .. })\n-            | Node::Lifetime(Lifetime { hir_id, .. })\n-            | Node::Param(Param { hir_id, .. })\n-            | Node::Infer(InferArg { hir_id, .. })\n-            | Node::GenericParam(GenericParam { hir_id, .. }) => Some(*hir_id),\n-            Node::TraitRef(TraitRef { hir_ref_id, .. }) => Some(*hir_ref_id),\n-            Node::PathSegment(PathSegment { hir_id, .. }) => *hir_id,\n-            Node::Variant(Variant { id, .. }) => Some(*id),\n-            Node::Ctor(variant) => variant.ctor_hir_id(),\n-            Node::Crate(_) | Node::Visibility(_) => None,\n-        }\n-    }\n-\n     /// Returns `Constness::Const` when this node is a const fn/impl/item.\n     pub fn constness_for_typeck(&self) -> Constness {\n         match self {"}]}