{"sha": "0a4504d400805b2d102a433af98cc33f185fdcf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNDUwNGQ0MDA4MDViMmQxMDJhNDMzYWY5OGNjMzNmMTg1ZmRjZjI=", "commit": {"author": {"name": "Cedric", "email": "cedric.brancourt@gmail.com", "date": "2019-06-08T18:43:24Z"}, "committer": {"name": "Cedric", "email": "cedric.brancourt@gmail.com", "date": "2019-06-08T18:43:24Z"}, "message": "fix libsyntax test", "tree": {"sha": "ef374ace366af820f6deb76f74398e1d59d59a6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef374ace366af820f6deb76f74398e1d59d59a6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a4504d400805b2d102a433af98cc33f185fdcf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a4504d400805b2d102a433af98cc33f185fdcf2", "html_url": "https://github.com/rust-lang/rust/commit/0a4504d400805b2d102a433af98cc33f185fdcf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a4504d400805b2d102a433af98cc33f185fdcf2/comments", "author": {"login": "Electron-libre", "id": 5979, "node_id": "MDQ6VXNlcjU5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Electron-libre", "html_url": "https://github.com/Electron-libre", "followers_url": "https://api.github.com/users/Electron-libre/followers", "following_url": "https://api.github.com/users/Electron-libre/following{/other_user}", "gists_url": "https://api.github.com/users/Electron-libre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Electron-libre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Electron-libre/subscriptions", "organizations_url": "https://api.github.com/users/Electron-libre/orgs", "repos_url": "https://api.github.com/users/Electron-libre/repos", "events_url": "https://api.github.com/users/Electron-libre/events{/privacy}", "received_events_url": "https://api.github.com/users/Electron-libre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Electron-libre", "id": 5979, "node_id": "MDQ6VXNlcjU5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Electron-libre", "html_url": "https://github.com/Electron-libre", "followers_url": "https://api.github.com/users/Electron-libre/followers", "following_url": "https://api.github.com/users/Electron-libre/following{/other_user}", "gists_url": "https://api.github.com/users/Electron-libre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Electron-libre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Electron-libre/subscriptions", "organizations_url": "https://api.github.com/users/Electron-libre/orgs", "repos_url": "https://api.github.com/users/Electron-libre/repos", "events_url": "https://api.github.com/users/Electron-libre/events{/privacy}", "received_events_url": "https://api.github.com/users/Electron-libre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c242a948c9f109c25c1ae54102f7a66271fa2ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c242a948c9f109c25c1ae54102f7a66271fa2ca", "html_url": "https://github.com/rust-lang/rust/commit/4c242a948c9f109c25c1ae54102f7a66271fa2ca"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "19dd8ebd0879a3ee91184125d9cc99143e392645", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a4504d400805b2d102a433af98cc33f185fdcf2/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a4504d400805b2d102a433af98cc33f185fdcf2/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=0a4504d400805b2d102a433af98cc33f185fdcf2", "patch": "@@ -431,22 +431,22 @@ mod tests {\n                     TokenTree::Token(Token { kind: token::Ident(name_zip, false), .. }),\n                     TokenTree::Delimited(_, macro_delim,  macro_tts)\n                 ]\n-                if name_macro_rules == sym::macro_rules && name_zip.as_str() == \"zip\" => {\n+                if name_macro_rules == &sym::macro_rules && name_zip.as_str() == \"zip\" => {\n                     let tts = &macro_tts.trees().collect::<Vec<_>>();\n                     match &tts[..] {\n                         [\n                             TokenTree::Delimited(_, first_delim, first_tts),\n                             TokenTree::Token(Token { kind: token::FatArrow, .. }),\n                             TokenTree::Delimited(_, second_delim, second_tts),\n                         ]\n-                        if macro_delim == token::Paren => {\n+                        if macro_delim == &token::Paren => {\n                             let tts = &first_tts.trees().collect::<Vec<_>>();\n                             match &tts[..] {\n                                 [\n                                     TokenTree::Token(Token { kind: token::Dollar, .. }),\n                                     TokenTree::Token(Token { kind: token::Ident(name, false), .. }),\n                                 ]\n-                                if first_delim == token::Paren && name.as_str() == \"a\" => {},\n+                                if first_delim == &token::Paren && name.as_str() == \"a\" => {},\n                                 _ => panic!(\"value 3: {:?} {:?}\", first_delim, first_tts),\n                             }\n                             let tts = &second_tts.trees().collect::<Vec<_>>();\n@@ -455,7 +455,7 @@ mod tests {\n                                     TokenTree::Token(Token { kind: token::Dollar, .. }),\n                                     TokenTree::Token(Token { kind: token::Ident(name, false), .. }),\n                                 ]\n-                                if second_delim == token::Paren && name.as_str() == \"a\" => {},\n+                                if second_delim == &token::Paren && name.as_str() == \"a\" => {},\n                                 _ => panic!(\"value 4: {:?} {:?}\", second_delim, second_tts),\n                             }\n                         },"}]}