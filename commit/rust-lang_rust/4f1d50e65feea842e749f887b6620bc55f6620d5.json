{"sha": "4f1d50e65feea842e749f887b6620bc55f6620d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmMWQ1MGU2NWZlZWE4NDJlNzQ5Zjg4N2I2NjIwYmM1NWY2NjIwZDU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-11T00:38:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-11T00:38:10Z"}, "message": "Rollup merge of #64349 - arnohaase:pr_documentation_atomicptr, r=cramertj\n\ndocumentation for AtomicPtr CAS operations\n\nThe examples in the documentation for AtomicPtr CAS operations only show code that does *not* perform the CAS operation. I suggest to change them so that they actually do exchange the AtomicPtr's value.", "tree": {"sha": "d7f42c43dfa18f7f3f668981e082b347352bd79a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7f42c43dfa18f7f3f668981e082b347352bd79a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f1d50e65feea842e749f887b6620bc55f6620d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdeEHzCRBK7hj4Ov3rIwAAdHIIAJ5a2dp5L+DBXxB+wLcqxQhe\nPvgBk7y3uh1iSi3y339SJRpxrAHEmLBPCLzFHVDUUJdTwkiSAERSIYUXIAqwK8T+\nbb1py93faok2G3rvj9Qz6BD1fKSNgvLTd3QBJeQyp4aDor/Sv7QGq3SdRfbQS5iH\nvGB9afetdf7WulY3Gj84Se+cfwUL23RpW1nKPAW5m0YVMvOGvEBcboXLUSEyASbS\nCnF0AuncHl0FLMTWZF4N6QB3YdZJw7ig8/fhvXR2OCYNFwVRAkoaaeFhm8u/otuD\nGo0JLyOpb/RUG2PA9tpyrYDZc8cE9ULpjmGOM/P5hEi9JQVqBxdmiVNP/ONgZL0=\n=6AsN\n-----END PGP SIGNATURE-----\n", "payload": "tree d7f42c43dfa18f7f3f668981e082b347352bd79a\nparent 57df63ce7d6afe7fe3bfeb910f2346623fcfc36f\nparent 7ad44c7c9c7feeca7df5358d7df26cc7cb10cf87\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1568162290 +0200\ncommitter GitHub <noreply@github.com> 1568162290 +0200\n\nRollup merge of #64349 - arnohaase:pr_documentation_atomicptr, r=cramertj\n\ndocumentation for AtomicPtr CAS operations\n\nThe examples in the documentation for AtomicPtr CAS operations only show code that does *not* perform the CAS operation. I suggest to change them so that they actually do exchange the AtomicPtr's value.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f1d50e65feea842e749f887b6620bc55f6620d5", "html_url": "https://github.com/rust-lang/rust/commit/4f1d50e65feea842e749f887b6620bc55f6620d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f1d50e65feea842e749f887b6620bc55f6620d5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57df63ce7d6afe7fe3bfeb910f2346623fcfc36f", "url": "https://api.github.com/repos/rust-lang/rust/commits/57df63ce7d6afe7fe3bfeb910f2346623fcfc36f", "html_url": "https://github.com/rust-lang/rust/commit/57df63ce7d6afe7fe3bfeb910f2346623fcfc36f"}, {"sha": "7ad44c7c9c7feeca7df5358d7df26cc7cb10cf87", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ad44c7c9c7feeca7df5358d7df26cc7cb10cf87", "html_url": "https://github.com/rust-lang/rust/commit/7ad44c7c9c7feeca7df5358d7df26cc7cb10cf87"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "a73111571c2b0a0bb911a5c567b9909c79b9526e", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f1d50e65feea842e749f887b6620bc55f6620d5/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f1d50e65feea842e749f887b6620bc55f6620d5/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=4f1d50e65feea842e749f887b6620bc55f6620d5", "patch": "@@ -979,9 +979,8 @@ impl<T> AtomicPtr<T> {\n     /// let some_ptr  = AtomicPtr::new(ptr);\n     ///\n     /// let other_ptr   = &mut 10;\n-    /// let another_ptr = &mut 10;\n     ///\n-    /// let value = some_ptr.compare_and_swap(other_ptr, another_ptr, Ordering::Relaxed);\n+    /// let value = some_ptr.compare_and_swap(ptr, other_ptr, Ordering::Relaxed);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1021,9 +1020,8 @@ impl<T> AtomicPtr<T> {\n     /// let some_ptr  = AtomicPtr::new(ptr);\n     ///\n     /// let other_ptr   = &mut 10;\n-    /// let another_ptr = &mut 10;\n     ///\n-    /// let value = some_ptr.compare_exchange(other_ptr, another_ptr,\n+    /// let value = some_ptr.compare_exchange(ptr, other_ptr,\n     ///                                       Ordering::SeqCst, Ordering::Relaxed);\n     /// ```\n     #[inline]"}]}