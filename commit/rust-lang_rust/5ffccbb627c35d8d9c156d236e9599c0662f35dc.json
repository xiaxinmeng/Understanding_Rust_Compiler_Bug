{"sha": "5ffccbb627c35d8d9c156d236e9599c0662f35dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZmNjYmI2MjdjMzVkOGQ5YzE1NmQyMzZlOTU5OWMwNjYyZjM1ZGM=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-06-30T02:36:31Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-11-29T03:59:30Z"}, "message": "Properly format function signature in extern blocks\n\nCloses #4288\n\nAnd we get to drop a method, which I think is a win :)", "tree": {"sha": "99c29267e95d2d06b8984e6e03ec642fd4fcb7ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99c29267e95d2d06b8984e6e03ec642fd4fcb7ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ffccbb627c35d8d9c156d236e9599c0662f35dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ffccbb627c35d8d9c156d236e9599c0662f35dc", "html_url": "https://github.com/rust-lang/rust/commit/5ffccbb627c35d8d9c156d236e9599c0662f35dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ffccbb627c35d8d9c156d236e9599c0662f35dc/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e4622554737cc20ac452eed0d97cc398facff59", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4622554737cc20ac452eed0d97cc398facff59", "html_url": "https://github.com/rust-lang/rust/commit/8e4622554737cc20ac452eed0d97cc398facff59"}], "stats": {"total": 29, "additions": 7, "deletions": 22}, "files": [{"sha": "3c30de1a417bd29901eda75229d4567368d491fe", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5ffccbb627c35d8d9c156d236e9599c0662f35dc/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ffccbb627c35d8d9c156d236e9599c0662f35dc/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=5ffccbb627c35d8d9c156d236e9599c0662f35dc", "patch": "@@ -125,6 +125,7 @@ impl Rewrite for ast::Local {\n // FIXME convert to using rewrite style rather than visitor\n // FIXME format modules in this style\n #[allow(dead_code)]\n+#[derive(Debug)]\n struct Item<'a> {\n     unsafety: ast::Unsafe,\n     abi: Cow<'static, str>,\n@@ -153,6 +154,7 @@ impl<'a> Item<'a> {\n     }\n }\n \n+#[derive(Debug)]\n enum BodyElement<'a> {\n     // Stmt(&'a ast::Stmt),\n     // Field(&'a ast::Field),\n@@ -174,26 +176,10 @@ pub(crate) struct FnSig<'a> {\n }\n \n impl<'a> FnSig<'a> {\n-    pub(crate) fn new(\n-        decl: &'a ast::FnDecl,\n-        generics: &'a ast::Generics,\n-        vis: ast::Visibility,\n-    ) -> FnSig<'a> {\n-        FnSig {\n-            decl,\n-            generics,\n-            ext: ast::Extern::None,\n-            is_async: Cow::Owned(ast::Async::No),\n-            constness: ast::Const::No,\n-            defaultness: ast::Defaultness::Final,\n-            unsafety: ast::Unsafe::No,\n-            visibility: vis,\n-        }\n-    }\n-\n     pub(crate) fn from_method_sig(\n         method_sig: &'a ast::FnSig,\n         generics: &'a ast::Generics,\n+        visibility: ast::Visibility,\n     ) -> FnSig<'a> {\n         FnSig {\n             unsafety: method_sig.header.unsafety,\n@@ -203,7 +189,7 @@ impl<'a> FnSig<'a> {\n             ext: method_sig.header.ext,\n             decl: &*method_sig.decl,\n             generics,\n-            visibility: DEFAULT_VISIBILITY,\n+            visibility,\n         }\n     }\n \n@@ -216,9 +202,8 @@ impl<'a> FnSig<'a> {\n         match *fn_kind {\n             visit::FnKind::Fn(fn_ctxt, _, fn_sig, vis, _) => match fn_ctxt {\n                 visit::FnCtxt::Assoc(..) => {\n-                    let mut fn_sig = FnSig::from_method_sig(fn_sig, generics);\n+                    let mut fn_sig = FnSig::from_method_sig(fn_sig, generics, vis.clone());\n                     fn_sig.defaultness = defaultness;\n-                    fn_sig.visibility = vis.clone();\n                     fn_sig\n                 }\n                 _ => FnSig {\n@@ -347,7 +332,7 @@ impl<'a> FmtVisitor<'a> {\n             &context,\n             indent,\n             ident,\n-            &FnSig::from_method_sig(sig, generics),\n+            &FnSig::from_method_sig(sig, generics, DEFAULT_VISIBILITY),\n             span,\n             FnBraceStyle::None,\n         )?;\n@@ -3062,7 +3047,7 @@ impl Rewrite for ast::ForeignItem {\n                 context,\n                 shape.indent,\n                 self.ident,\n-                &FnSig::new(&fn_sig.decl, generics, self.vis.clone()),\n+                &FnSig::from_method_sig(&fn_sig, generics, self.vis.clone()),\n                 span,\n                 FnBraceStyle::None,\n             )"}]}