{"sha": "18bf0540bf8a04a5724dd515fec2311d1e4768e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YmYwNTQwYmY4YTA0YTU3MjRkZDUxNWZlYzIzMTFkMWU0NzY4ZTQ=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-11-14T22:02:18Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-11-14T22:02:18Z"}, "message": "Fix redox prefix handling", "tree": {"sha": "7f48774d3ace2796260f16966f22a932de81caf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f48774d3ace2796260f16966f22a932de81caf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18bf0540bf8a04a5724dd515fec2311d1e4768e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18bf0540bf8a04a5724dd515fec2311d1e4768e4", "html_url": "https://github.com/rust-lang/rust/commit/18bf0540bf8a04a5724dd515fec2311d1e4768e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18bf0540bf8a04a5724dd515fec2311d1e4768e4/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0b5dfef2a36a15f76476a9d6bb7184a701d0d3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0b5dfef2a36a15f76476a9d6bb7184a701d0d3c", "html_url": "https://github.com/rust-lang/rust/commit/a0b5dfef2a36a15f76476a9d6bb7184a701d0d3c"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "3e414a28a301bc000724c132b00dc19eb18dfb2a", "filename": "src/libstd/path.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/18bf0540bf8a04a5724dd515fec2311d1e4768e4/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18bf0540bf8a04a5724dd515fec2311d1e4768e4/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=18bf0540bf8a04a5724dd515fec2311d1e4768e4", "patch": "@@ -129,7 +129,9 @@ use sys::path::{is_sep_byte, is_verbatim_sep, MAIN_SEP_STR, parse_prefix};\n // Windows Prefixes\n ////////////////////////////////////////////////////////////////////////////////\n \n-/// Path prefixes (Windows only).\n+/// Path prefixes (Redox and Windows only).\n+///\n+/// Redox uses schemes like `scheme:reference` to identify different I/O systems\n ///\n /// Windows uses a variety of path styles, including references to drive\n /// volumes (like `C:`), network shared folders (like `\\\\server\\share`) and\n@@ -139,6 +141,10 @@ use sys::path::{is_sep_byte, is_verbatim_sep, MAIN_SEP_STR, parse_prefix};\n #[derive(Copy, Clone, Debug, Hash, PartialOrd, Ord, PartialEq, Eq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum Prefix<'a> {\n+    /// Prefix `scheme:`, where `scheme` is the component stored\n+    #[unstable(feature=\"redox_prefix\", issue=\"0\")]\n+    Scheme(&'a OsStr),\n+\n     /// Prefix `\\\\?\\`, together with the given component immediately following it.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     Verbatim(#[stable(feature = \"rust1\", since = \"1.0.0\")] &'a OsStr),\n@@ -178,6 +184,7 @@ impl<'a> Prefix<'a> {\n             os_str_as_u8_slice(s).len()\n         }\n         match *self {\n+            Scheme(x) => os_str_len(x) + 1,\n             Verbatim(x) => 4 + os_str_len(x),\n             VerbatimUNC(x, y) => {\n                 8 + os_str_len(x) +"}, {"sha": "4069a0ea726f9c1ec3c63480e6d1fbf6be763798", "filename": "src/libstd/sys/redox/path.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/18bf0540bf8a04a5724dd515fec2311d1e4768e4/src%2Flibstd%2Fsys%2Fredox%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18bf0540bf8a04a5724dd515fec2311d1e4768e4/src%2Flibstd%2Fsys%2Fredox%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fpath.rs?ref=18bf0540bf8a04a5724dd515fec2311d1e4768e4", "patch": "@@ -21,8 +21,16 @@ pub fn is_verbatim_sep(b: u8) -> bool {\n     b == b'/'\n }\n \n-pub fn parse_prefix(_: &OsStr) -> Option<Prefix> {\n-    None\n+pub fn parse_prefix(path: &OsStr) -> Option<Prefix> {\n+    if let Some(path_str) = path.to_str() {\n+        if let Some(i) = path_str.find(':') {\n+            Some(Prefix::Scheme(OsStr::new(&path_str[..i])))\n+        } else {\n+            None\n+        }\n+    } else {\n+        None\n+    }\n }\n \n pub const MAIN_SEP_STR: &'static str = \"/\";"}]}