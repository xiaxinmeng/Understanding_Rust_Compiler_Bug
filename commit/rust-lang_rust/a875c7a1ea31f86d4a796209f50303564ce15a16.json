{"sha": "a875c7a1ea31f86d4a796209f50303564ce15a16", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NzVjN2ExZWEzMWY4NmQ0YTc5NjIwOWY1MDMwMzU2NGNlMTVhMTY=", "commit": {"author": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-09-19T21:22:54Z"}, "committer": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-09-19T21:22:54Z"}, "message": "Add assertion for len of vecs", "tree": {"sha": "070a75a2b2da775d5b052601064c886fea3dec93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/070a75a2b2da775d5b052601064c886fea3dec93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a875c7a1ea31f86d4a796209f50303564ce15a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a875c7a1ea31f86d4a796209f50303564ce15a16", "html_url": "https://github.com/rust-lang/rust/commit/a875c7a1ea31f86d4a796209f50303564ce15a16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a875c7a1ea31f86d4a796209f50303564ce15a16/comments", "author": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "738ed9b5ec62259eb0f2aced549feec2f7e7c75a", "url": "https://api.github.com/repos/rust-lang/rust/commits/738ed9b5ec62259eb0f2aced549feec2f7e7c75a", "html_url": "https://github.com/rust-lang/rust/commit/738ed9b5ec62259eb0f2aced549feec2f7e7c75a"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "4935997eb82a534de4fd1237861f106e22d2105b", "filename": "compiler/rustc_mir/src/transform/simplify_try.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a875c7a1ea31f86d4a796209f50303564ce15a16/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a875c7a1ea31f86d4a796209f50303564ce15a16/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_try.rs?ref=a875c7a1ea31f86d4a796209f50303564ce15a16", "patch": "@@ -568,14 +568,15 @@ impl<'a, 'tcx> SimplifyBranchSameOptimizationFinder<'a, 'tcx> {\n             .basic_blocks()\n             .iter_enumerated()\n             .filter_map(|(bb_idx, bb)| {\n-                let (discr_switched_on, targets_and_values):(_, Vec<_>) = match &bb.terminator().kind {\n+                let (discr_switched_on, targets_and_values) = match &bb.terminator().kind {\n                     TerminatorKind::SwitchInt { targets, discr, values, .. } => {\n                         // if values.len() == targets.len() - 1, we need to include None where no value is present\n                         // such that the zip does not throw away targets. If no `otherwise` case is in targets, the zip will simply throw away the added None\n                         let values_extended = values.iter().map(|x|Some(*x)).chain(once(None));\n-                        let targets_and_values = targets.iter().zip(values_extended)\n-                            .map(|(target, value)| SwitchTargetAndValue{target:*target, value:value})\n+                        let targets_and_values:Vec<_> = targets.iter().zip(values_extended)\n+                            .map(|(target, value)| SwitchTargetAndValue{target:*target, value})\n                             .collect();\n+                        assert_eq!(targets.len(), targets_and_values.len());\n                         (discr, targets_and_values)},\n                     _ => return None,\n                 };"}]}