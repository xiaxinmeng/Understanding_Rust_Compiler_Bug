{"sha": "8d3e55908ae0e51f04c170133c9f9739886b8e2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkM2U1NTkwOGFlMGU1MWYwNGMxNzAxMzNjOWY5NzM5ODg2YjhlMmU=", "commit": {"author": {"name": "bcoopers", "email": "coopersmithbrian@gmail.com", "date": "2015-03-29T23:29:11Z"}, "committer": {"name": "bcoopers", "email": "coopersmithbrian@gmail.com", "date": "2015-03-29T23:29:11Z"}, "message": "Clearer wording", "tree": {"sha": "f8f66ca6d83768ea1ca939a6b2c3b901d955011d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8f66ca6d83768ea1ca939a6b2c3b901d955011d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d3e55908ae0e51f04c170133c9f9739886b8e2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3e55908ae0e51f04c170133c9f9739886b8e2e", "html_url": "https://github.com/rust-lang/rust/commit/8d3e55908ae0e51f04c170133c9f9739886b8e2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d3e55908ae0e51f04c170133c9f9739886b8e2e/comments", "author": null, "committer": null, "parents": [{"sha": "2982fe39ad93e29709a2e1414a4228718c8de28a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2982fe39ad93e29709a2e1414a4228718c8de28a", "html_url": "https://github.com/rust-lang/rust/commit/2982fe39ad93e29709a2e1414a4228718c8de28a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c4ec2a7ca17f9aa154dd5fef24f9b5140a11abf1", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d3e55908ae0e51f04c170133c9f9739886b8e2e/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3e55908ae0e51f04c170133c9f9739886b8e2e/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=8d3e55908ae0e51f04c170133c9f9739886b8e2e", "patch": "@@ -106,9 +106,9 @@ fn read_to_end<R: Read + ?Sized>(r: &mut R, buf: &mut Vec<u8>) -> Result<usize>\n     loop {\n         if len == buf.len() {\n             if buf.capacity() == buf.len() {\n-                // reserve() rounds up our request to the nearest power of two,\n-                // so after the first time the capacity is exceeded, we double\n-                // our capacity at each call to reserve. \n+                // reserve() rounds up our request such that every request\n+                // (with maybe the exception of the first request) for the\n+                // same amount of space doubles our capacity.\n                 buf.reserve(min_cap_bump);\n             }\n             let new_area = buf.capacity() - buf.len();"}]}