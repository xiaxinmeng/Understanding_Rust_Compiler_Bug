{"sha": "412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMmYxODBkNzFiYjk0MmRjZGE1YWZhYTdkNmRjMmFkNmY0NjNkNjE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-31T18:26:04Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-31T18:33:02Z"}, "message": "Honor #![macro_use] in mod source files", "tree": {"sha": "20420c6ff4f67e09395700d4877e797cda865820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20420c6ff4f67e09395700d4877e797cda865820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "html_url": "https://github.com/rust-lang/rust/commit/412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/412f180d71bb942dcda5afaa7d6dc2ad6f463d61/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "286d90de2d213b467a092e702edf8b0706c7c1b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/286d90de2d213b467a092e702edf8b0706c7c1b2", "html_url": "https://github.com/rust-lang/rust/commit/286d90de2d213b467a092e702edf8b0706c7c1b2"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "fcc8e2607ea517202a3113eb72e7b155f82432ed", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/412f180d71bb942dcda5afaa7d6dc2ad6f463d61/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/412f180d71bb942dcda5afaa7d6dc2ad6f463d61/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "patch": "@@ -1273,20 +1273,16 @@ impl ModCollector<'_, '_> {\n             // out of line module, resolve, parse and recurse\n             ModKind::Outline {} => {\n                 let ast_id = AstId::new(self.file_id, module.ast_id);\n-                match self.mod_dir.resolve_declaration(\n-                    self.def_collector.db,\n-                    self.file_id,\n-                    &module.name,\n-                    path_attr,\n-                ) {\n+                let db = self.def_collector.db;\n+                match self.mod_dir.resolve_declaration(db, self.file_id, &module.name, path_attr) {\n                     Ok((file_id, is_mod_rs, mod_dir)) => {\n                         let module_id = self.push_child_module(\n                             module.name.clone(),\n                             ast_id,\n                             Some((file_id, is_mod_rs)),\n                             &self.item_tree[module.visibility],\n                         );\n-                        let item_tree = self.def_collector.db.item_tree(file_id.into());\n+                        let item_tree = db.item_tree(file_id.into());\n                         ModCollector {\n                             def_collector: &mut *self.def_collector,\n                             macro_depth: self.macro_depth,\n@@ -1296,7 +1292,12 @@ impl ModCollector<'_, '_> {\n                             mod_dir,\n                         }\n                         .collect(item_tree.top_level_items());\n-                        if is_macro_use {\n+                        if is_macro_use\n+                            || item_tree\n+                                .top_level_attrs(db, self.def_collector.def_map.krate)\n+                                .by_key(\"macro_use\")\n+                                .exists()\n+                        {\n                             self.import_all_legacy_macros(module_id);\n                         }\n                     }"}, {"sha": "36ed5e8cefe52d06c53bc43fa8f385015b9c46b8", "filename": "crates/hir_def/src/nameres/tests/macros.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/412f180d71bb942dcda5afaa7d6dc2ad6f463d61/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/412f180d71bb942dcda5afaa7d6dc2ad6f463d61/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=412f180d71bb942dcda5afaa7d6dc2ad6f463d61", "patch": "@@ -391,11 +391,21 @@ foo!(ok_shadow);\n mod m4;\n bar!(OkMacroUse);\n \n+mod m5;\n+baz!(OkMacroUseInner);\n+\n //- /m3/m4.rs\n foo!(ok_shadow_deep);\n macro_rules! bar {\n     ($x:ident) => { struct $x; }\n }\n+//- /m3/m5.rs\n+#![macro_use]\n+macro_rules! baz {\n+    ($x:ident) => { struct $x; }\n+}\n+\n+\n \"#,\n         expect![[r#\"\n             crate\n@@ -423,11 +433,15 @@ macro_rules! bar {\n             crate::m3\n             OkAfterInside: t v\n             OkMacroUse: t v\n+            OkMacroUseInner: t v\n             m4: t\n+            m5: t\n             ok_shadow: v\n \n             crate::m3::m4\n             ok_shadow_deep: v\n+\n+            crate::m3::m5\n         \"#]],\n     );\n }"}]}