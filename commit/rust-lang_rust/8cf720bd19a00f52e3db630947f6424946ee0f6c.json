{"sha": "8cf720bd19a00f52e3db630947f6424946ee0f6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZjcyMGJkMTlhMDBmNTJlM2RiNjMwOTQ3ZjY0MjQ5NDZlZTBmNmM=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-03-19T12:59:38Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-03-19T13:00:13Z"}, "message": "Make Option<ThreadId> no larger than ThreadId, with NonZeroU64", "tree": {"sha": "4bb45324b67e3fb9f2cdf8bdfbddbc3cc2ea8529", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bb45324b67e3fb9f2cdf8bdfbddbc3cc2ea8529"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cf720bd19a00f52e3db630947f6424946ee0f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf720bd19a00f52e3db630947f6424946ee0f6c", "html_url": "https://github.com/rust-lang/rust/commit/8cf720bd19a00f52e3db630947f6424946ee0f6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cf720bd19a00f52e3db630947f6424946ee0f6c/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f88167f89fffe321590c5148f21b7d51d44388d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f88167f89fffe321590c5148f21b7d51d44388d", "html_url": "https://github.com/rust-lang/rust/commit/0f88167f89fffe321590c5148f21b7d51d44388d"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "40682da8f8b0f24d40e411953cd054ccea2380ce", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8cf720bd19a00f52e3db630947f6424946ee0f6c/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cf720bd19a00f52e3db630947f6424946ee0f6c/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=8cf720bd19a00f52e3db630947f6424946ee0f6c", "patch": "@@ -163,6 +163,7 @@ use crate::ffi::{CStr, CString};\n use crate::fmt;\n use crate::io;\n use crate::mem;\n+use crate::num::NonZeroU64;\n use crate::panic;\n use crate::panicking;\n use crate::str;\n@@ -1036,15 +1037,15 @@ pub fn park_timeout(dur: Duration) {\n /// [`Thread`]: ../../std/thread/struct.Thread.html\n #[stable(feature = \"thread_id\", since = \"1.19.0\")]\n #[derive(Eq, PartialEq, Clone, Copy, Hash, Debug)]\n-pub struct ThreadId(u64);\n+pub struct ThreadId(NonZeroU64);\n \n impl ThreadId {\n     // Generate a new unique thread ID.\n     fn new() -> ThreadId {\n         // We never call `GUARD.init()`, so it is UB to attempt to\n         // acquire this mutex reentrantly!\n         static GUARD: mutex::Mutex = mutex::Mutex::new();\n-        static mut COUNTER: u64 = 0;\n+        static mut COUNTER: u64 = 1;\n \n         unsafe {\n             let _guard = GUARD.lock();\n@@ -1058,7 +1059,7 @@ impl ThreadId {\n             let id = COUNTER;\n             COUNTER += 1;\n \n-            ThreadId(id)\n+            ThreadId(NonZeroU64::new(id).unwrap())\n         }\n     }\n }"}]}