{"sha": "179e78d0ad95c60689f0df4cc6e3491b53b586ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3OWU3OGQwYWQ5NWM2MDY4OWYwZGY0Y2M2ZTM0OTFiNTNiNTg2YWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-14T07:58:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-14T08:23:47Z"}, "message": "make sure our disable flags do not miss all bugs; move type-assert intrinsic tests to their folder", "tree": {"sha": "c4a10c9386b26fc3cc935a76bc4070643597d673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4a10c9386b26fc3cc935a76bc4070643597d673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/179e78d0ad95c60689f0df4cc6e3491b53b586ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/179e78d0ad95c60689f0df4cc6e3491b53b586ad", "html_url": "https://github.com/rust-lang/rust/commit/179e78d0ad95c60689f0df4cc6e3491b53b586ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/179e78d0ad95c60689f0df4cc6e3491b53b586ad/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03715907f46f79250904c799a59b87c26c2b0377", "url": "https://api.github.com/repos/rust-lang/rust/commits/03715907f46f79250904c799a59b87c26c2b0377", "html_url": "https://github.com/rust-lang/rust/commit/03715907f46f79250904c799a59b87c26c2b0377"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "e088a5532581fcae1e99035272570a17e36239a9", "filename": "tests/compile-fail/dangling_pointers/dangling_pointer_deref.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_pointer_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_pointer_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_pointer_deref.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -1,3 +1,6 @@\n+// Make sure we find these even with many checks disabled.\n+// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n+\n fn main() {\n     let p = {\n         let b = Box::new(42);"}, {"sha": "f1b5149dabb41ffc6c6e3bf6cfb1c270ee8bdea9", "filename": "tests/compile-fail/dangling_pointers/dangling_zst_deref.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_zst_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_zst_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_zst_deref.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -1,3 +1,6 @@\n+// Make sure we find these even with many checks disabled.\n+// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n+\n fn main() {\n     let p = {\n         let b = Box::new(42);"}, {"sha": "deb3586c781e264c3b96ddcf6c1d55a15bf37db0", "filename": "tests/compile-fail/intrinsics/uninit_uninhabited_type.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fintrinsics%2Funinit_uninhabited_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fintrinsics%2Funinit_uninhabited_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Funinit_uninhabited_type.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -1,4 +1,4 @@\n- // error-pattern: the evaluated program aborted execution: attempted to instantiate uninhabited type `!`\n+// error-pattern: the evaluated program aborted execution: attempted to instantiate uninhabited type `!`\n #![feature(never_type)]\n \n #[allow(deprecated, invalid_value)]", "previous_filename": "tests/compile-fail/uninit_uninhabited_type.rs"}, {"sha": "81dbf6c429b3319bd9a8ba624c33199a4a85fd89", "filename": "tests/compile-fail/intrinsics/zero_fn_ptr.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fintrinsics%2Fzero_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Fintrinsics%2Fzero_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fzero_fn_ptr.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -0,0 +1,6 @@\n+// error-pattern: the evaluated program aborted execution: attempted to zero-initialize type `fn()`, which is invalid\n+\n+#[allow(deprecated, invalid_value)]\n+fn main() {\n+    unsafe { std::mem::zeroed::<fn()>() };\n+}"}, {"sha": "38033146ade828ac0d66aad0959e9f3d654d528d", "filename": "tests/compile-fail/invalid_bool.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Finvalid_bool.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -1,5 +1,6 @@\n // Validation makes this fail in the wrong place\n-// compile-flags: -Zmiri-disable-validation\n+// Make sure we find these even with many checks disabled.\n+// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n \n fn main() {\n     let b = unsafe { std::mem::transmute::<u8, bool>(2) };"}, {"sha": "ab10ab1e2173dc266c5450e7dd0cbd569039e713", "filename": "tests/compile-fail/invalid_char.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Finvalid_char.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -1,5 +1,6 @@\n // Validation makes this fail in the wrong place\n-// compile-flags: -Zmiri-disable-validation\n+// Make sure we find these even with many checks disabled.\n+// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n \n fn main() {\n     assert!(std::char::from_u32(-1_i32 as u32).is_none());"}, {"sha": "cdbea6aa1223455df83a2a18c4722a3746e70709", "filename": "tests/compile-fail/invalid_enum_discriminant.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_enum_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_enum_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Finvalid_enum_discriminant.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -1,5 +1,6 @@\n // Validation makes this fail in the wrong place\n-// compile-flags: -Zmiri-disable-validation\n+// Make sure we find these even with many checks disabled.\n+// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n \n // error-pattern: invalid enum discriminant\n "}, {"sha": "26a85802079b0f0ddbc5383e7cb761c652b5dd02", "filename": "tests/compile-fail/invalid_int.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Finvalid_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Finvalid_int.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -0,0 +1,8 @@\n+// Validation makes this fail in the wrong place\n+// Make sure we find these even with many checks disabled.\n+// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n+\n+fn main() {\n+    let i = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n+    let _x = i + 0; //~ ERROR this operation requires initialized memory\n+}"}, {"sha": "78c2b0fbeeb7232f6e142b15ac799edfbb24a74f", "filename": "tests/compile-fail/invalid_zero_init.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03715907f46f79250904c799a59b87c26c2b0377/tests%2Fcompile-fail%2Finvalid_zero_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03715907f46f79250904c799a59b87c26c2b0377/tests%2Fcompile-fail%2Finvalid_zero_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Finvalid_zero_init.rs?ref=03715907f46f79250904c799a59b87c26c2b0377", "patch": "@@ -1,6 +0,0 @@\n- // error-pattern: the evaluated program aborted execution: attempted to zero-initialize type `fn()`, which is invalid\n-\n-#[allow(deprecated, invalid_value)]\n-fn main() {\n-    unsafe { std::mem::zeroed::<fn()>() };\n-}"}, {"sha": "3eab4c0f3d5eb5f6bd2fa2a5f55cbe55a1e7dc50", "filename": "tests/compile-fail/overwriting_part_of_relocation_makes_the_rest_undefined.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Foverwriting_part_of_relocation_makes_the_rest_undefined.rs", "raw_url": "https://github.com/rust-lang/rust/raw/179e78d0ad95c60689f0df4cc6e3491b53b586ad/tests%2Fcompile-fail%2Foverwriting_part_of_relocation_makes_the_rest_undefined.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Foverwriting_part_of_relocation_makes_the_rest_undefined.rs?ref=179e78d0ad95c60689f0df4cc6e3491b53b586ad", "patch": "@@ -1,3 +1,6 @@\n+// Make sure we find these even with many checks disabled.\n+// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n+\n fn main() {\n     let mut p = &42;\n     unsafe {"}]}