{"sha": "23382e614a6e6a2eaf3ac4c476ae48594de8538a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMzgyZTYxNGE2ZTZhMmVhZjNhYzRjNDc2YWU0ODU5NGRlODUzOGE=", "commit": {"author": {"name": "steveklabnik", "email": "steve@steveklabnik.com", "date": "2017-04-25T10:38:26Z"}, "committer": {"name": "steveklabnik", "email": "steve@steveklabnik.com", "date": "2017-05-09T16:43:49Z"}, "message": "Add more ways to create a PathBuf to docs\n\nThe best way to do this wasn't in the documentation, and the ways that\nwere there needed some extra text to elaborate.\n\nFixes #40159", "tree": {"sha": "4a7ffcfdd04f71657d19ca8177fa7f6fc19b6666", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a7ffcfdd04f71657d19ca8177fa7f6fc19b6666"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23382e614a6e6a2eaf3ac4c476ae48594de8538a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23382e614a6e6a2eaf3ac4c476ae48594de8538a", "html_url": "https://github.com/rust-lang/rust/commit/23382e614a6e6a2eaf3ac4c476ae48594de8538a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23382e614a6e6a2eaf3ac4c476ae48594de8538a/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3fc547194d22dc673274ac20e9a7b1e607cb862", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fc547194d22dc673274ac20e9a7b1e607cb862", "html_url": "https://github.com/rust-lang/rust/commit/f3fc547194d22dc673274ac20e9a7b1e607cb862"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "f4b9a8972e3abb93f8dcfbceead1a6096d76d509", "filename": "src/libstd/path.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/23382e614a6e6a2eaf3ac4c476ae48594de8538a/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23382e614a6e6a2eaf3ac4c476ae48594de8538a/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=23382e614a6e6a2eaf3ac4c476ae48594de8538a", "patch": "@@ -51,10 +51,17 @@\n //! ```\n //! use std::path::PathBuf;\n //!\n+//! // This way works...\n //! let mut path = PathBuf::from(\"c:\\\\\");\n+//!\n //! path.push(\"windows\");\n //! path.push(\"system32\");\n+//!\n //! path.set_extension(\"dll\");\n+//!\n+//! // ... but push is best used if you don't know everything up\n+//! // front. If you do, this way is better:\n+//! let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();\n //! ```\n //!\n //! [`Component`]: ../../std/path/enum.Component.html\n@@ -63,6 +70,7 @@\n //! [`Path`]: ../../std/path/struct.Path.html\n //! [`push`]: ../../std/path/struct.PathBuf.html#method.push\n //! [`String`]: ../../std/string/struct.String.html\n+//!\n //! [`str`]: ../../std/primitive.str.html\n //! [`OsString`]: ../../std/ffi/struct.OsString.html\n //! [`OsStr`]: ../../std/ffi/struct.OsStr.html\n@@ -1036,14 +1044,40 @@ impl<'a> cmp::Ord for Components<'a> {\n ///\n /// # Examples\n ///\n+/// You can use [`push`] to build up a `PathBuf` from\n+/// components:\n+///\n /// ```\n /// use std::path::PathBuf;\n ///\n-/// let mut path = PathBuf::from(\"c:\\\\\");\n+/// let mut path = PathBuf::new();\n+///\n+/// path.push(r\"C:\\\");\n /// path.push(\"windows\");\n /// path.push(\"system32\");\n+///\n /// path.set_extension(\"dll\");\n /// ```\n+///\n+/// However, [`push`] is best used for dynamic situations. This is a better way\n+/// to do this when you know all of the components ahead of time:\n+///\n+/// ```\n+/// use std::path::PathBuf;\n+///\n+/// let path: PathBuf = [r\"C:\\\", \"windows\", \"system32.dll\"].iter().collect();\n+/// ```\n+///\n+/// We can still do better than this! Since these are all strings, we can use\n+/// `From::from`:\n+///\n+/// ```\n+/// use std::path::PathBuf;\n+///\n+/// let path = PathBuf::from(r\"C:\\windows\\system32.dll\");\n+/// ```\n+///\n+/// Which method works best depends on what kind of situation you're in.\n #[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct PathBuf {"}]}