{"sha": "06e2e0e18d7617091f2812573ed66ecf4613eaab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ZTJlMGUxOGQ3NjE3MDkxZjI4MTI1NzNlZDY2ZWNmNDYxM2VhYWI=", "commit": {"author": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2016-04-16T18:27:33Z"}, "committer": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2016-04-16T18:27:33Z"}, "message": "Use `v` instead of `v1` for consistency\n\nThe code examples and previous paragraphs all use `v` and `v2`", "tree": {"sha": "b15fda566a404255f5a1a4ba70e13c8a44bb79b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b15fda566a404255f5a1a4ba70e13c8a44bb79b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06e2e0e18d7617091f2812573ed66ecf4613eaab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06e2e0e18d7617091f2812573ed66ecf4613eaab", "html_url": "https://github.com/rust-lang/rust/commit/06e2e0e18d7617091f2812573ed66ecf4613eaab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06e2e0e18d7617091f2812573ed66ecf4613eaab/comments", "author": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fa61b810dc95ca3e8bbda1681229f855f214fc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa61b810dc95ca3e8bbda1681229f855f214fc4", "html_url": "https://github.com/rust-lang/rust/commit/6fa61b810dc95ca3e8bbda1681229f855f214fc4"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "988103a1180324087c25141c73313fb40bedb09e", "filename": "src/doc/book/ownership.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/06e2e0e18d7617091f2812573ed66ecf4613eaab/src%2Fdoc%2Fbook%2Fownership.md", "raw_url": "https://github.com/rust-lang/rust/raw/06e2e0e18d7617091f2812573ed66ecf4613eaab/src%2Fdoc%2Fbook%2Fownership.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fownership.md?ref=06e2e0e18d7617091f2812573ed66ecf4613eaab", "patch": "@@ -173,11 +173,11 @@ For example if we truncated the vector to just two elements through `v2`:\n v2.truncate(2);\n ```\n \n-and `v1` were still accessible we'd end up with an invalid vector since `v1`\n+and `v` were still accessible we'd end up with an invalid vector since `v`\n would not know that the heap data has been truncated. Now, the part of the\n-vector `v1` on the stack does not agree with the corresponding part on the\n-heap. `v1` still thinks there are three elements in the vector and will\n-happily let us access the non existent element `v1[2]` but as you might\n+vector `v` on the stack does not agree with the corresponding part on the\n+heap. `v` still thinks there are three elements in the vector and will\n+happily let us access the non existent element `v[2]` but as you might\n already know this is a recipe for disaster. Especially because it might lead\n to a segmentation fault or worse allow an unauthorized user to read from\n memory to which they don't have access."}]}