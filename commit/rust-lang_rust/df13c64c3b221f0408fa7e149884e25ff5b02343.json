{"sha": "df13c64c3b221f0408fa7e149884e25ff5b02343", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMTNjNjRjM2IyMjFmMDQwOGZhN2UxNDk4ODRlMjVmZjViMDIzNDM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-31T01:57:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:02:01Z"}, "message": "test: Get rid of some `@mut`s in borrow check tests", "tree": {"sha": "4c5bf35417e6a5f96c6f254d41cbc1f89cf6d991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c5bf35417e6a5f96c6f254d41cbc1f89cf6d991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df13c64c3b221f0408fa7e149884e25ff5b02343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df13c64c3b221f0408fa7e149884e25ff5b02343", "html_url": "https://github.com/rust-lang/rust/commit/df13c64c3b221f0408fa7e149884e25ff5b02343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df13c64c3b221f0408fa7e149884e25ff5b02343/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65d55afd2f94cb6cd8d66e767a52bc99a1569341", "url": "https://api.github.com/repos/rust-lang/rust/commits/65d55afd2f94cb6cd8d66e767a52bc99a1569341", "html_url": "https://github.com/rust-lang/rust/commit/65d55afd2f94cb6cd8d66e767a52bc99a1569341"}], "stats": {"total": 48, "additions": 3, "deletions": 45}, "files": [{"sha": "9d628c1f6c750402ce798ffb260b110b543b0f81", "filename": "src/test/compile-fail/borrowck-loan-rcvr-overloaded-op.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs?ref=df13c64c3b221f0408fa7e149884e25ff5b02343", "patch": "@@ -49,13 +49,5 @@ fn b() {\n     q.x += 1; // and OK to mutate it\n }\n \n-fn c() {\n-    // Here the receiver is in aliased memory but due to write\n-    // barriers we can still consider it immutable.\n-    let q = @mut Point {x: 3, y: 4};\n-    *q + 3;\n-    q.times(3);\n-}\n-\n fn main() {\n }"}, {"sha": "a0071938ce437ee50ee4f879264286c45e01c91b", "filename": "src/test/compile-fail/borrowck-loan-rcvr.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs?ref=df13c64c3b221f0408fa7e149884e25ff5b02343", "patch": "@@ -48,16 +48,5 @@ fn b() {\n     l.x += 1;\n }\n \n-fn c() {\n-    // Loaning @mut as & is considered legal due to dynamic checks...\n-    let q = @mut point {x: 3, y: 4};\n-    q.impurem();\n-\n-    // ...but we still detect errors statically when we can.\n-    q.blockm(|| {\n-        q.x = 10; //~ ERROR cannot assign\n-    })\n-}\n-\n fn main() {\n }"}, {"sha": "84c2db8bd576bdab4ecd8b829b7cfce652df7c62", "filename": "src/test/compile-fail/borrowck-mut-boxed-vec.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/65d55afd2f94cb6cd8d66e767a52bc99a1569341/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-boxed-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65d55afd2f94cb6cd8d66e767a52bc99a1569341/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-boxed-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-boxed-vec.rs?ref=65d55afd2f94cb6cd8d66e767a52bc99a1569341", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-\n-fn main() {\n-    let v = @mut [ 1, 2, 3 ];\n-    for _x in v.iter() {\n-        v[1] = 4; //~ ERROR cannot assign\n-    }\n-}"}, {"sha": "77318e6a636a1fb47c4b0a0d0f2739959fce039d", "filename": "src/test/compile-fail/borrowck-mut-deref-comp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-deref-comp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-deref-comp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-deref-comp.rs?ref=df13c64c3b221f0408fa7e149884e25ff5b02343", "patch": "@@ -12,7 +12,7 @@\n \n struct foo(~int);\n \n-fn borrow(x: @mut foo) {\n+fn borrow(x: @foo) {\n     let _y = &***x;\n     *x = foo(~4); //~ ERROR cannot assign\n }"}, {"sha": "1d1b993f5d1fee7faa7bf0cde4a696d18822a13b", "filename": "src/test/compile-fail/borrowck-object-mutability.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs?ref=df13c64c3b221f0408fa7e149884e25ff5b02343", "patch": "@@ -30,11 +30,6 @@ fn managed_receiver(x: @Foo) {\n     x.borrowed_mut(); //~ ERROR cannot borrow\n }\n \n-fn managed_mut_receiver(x: @mut Foo) {\n-    x.borrowed();\n-    x.borrowed_mut();\n-}\n-\n fn owned_receiver(x: ~Foo) {\n     x.borrowed();\n     x.borrowed_mut(); //~ ERROR cannot borrow"}, {"sha": "9511d1b40e60ccef00a7b737e4579a98fece5b9e", "filename": "src/test/run-pass/borrowck-root-while-cond-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond-2.rs?ref=df13c64c3b221f0408fa7e149884e25ff5b02343", "patch": "@@ -14,6 +14,6 @@ struct F { f: @G }\n struct G { g: ~[int] }\n \n pub fn main() {\n-    let rec = @mut F {f: @G {g: ~[1, 2, 3]}};\n+    let rec = @F {f: @G {g: ~[1, 2, 3]}};\n     while rec.f.g.len() == 23 {}\n }"}, {"sha": "a2d4991abc018f468a8fb090c345990966213ada", "filename": "src/test/run-pass/borrowck-root-while-cond.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df13c64c3b221f0408fa7e149884e25ff5b02343/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond.rs?ref=df13c64c3b221f0408fa7e149884e25ff5b02343", "patch": "@@ -15,6 +15,6 @@ fn borrow<'r,T>(x: &'r T) -> &'r T {x}\n struct Rec { f: @int }\n \n pub fn main() {\n-    let rec = @mut Rec {f: @22};\n+    let rec = @Rec {f: @22};\n     while *borrow(rec.f) == 23 {}\n }"}]}