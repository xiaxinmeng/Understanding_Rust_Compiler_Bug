{"sha": "d4cf00f03d35c651b7853935309342a4905943f4", "node_id": "C_kwDOAAsO6NoAKGQ0Y2YwMGYwM2QzNWM2NTFiNzg1MzkzNTMwOTM0MmE0OTA1OTQzZjQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-02T23:39:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-02T23:39:19Z"}, "message": "Rollup merge of #106383 - Manishearth:ast-docs, r=compiler-errors\n\nDocument some of the AST nodes\n\nSomeone was confused about some of this on Zulip, added some docs\n\nWe probably should make sure every last field/variant in the AST/HIR is documented at some point\n\n`@bors` rollup", "tree": {"sha": "dd917108ec0ada980daf1d4d5c283fefde1730b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd917108ec0ada980daf1d4d5c283fefde1730b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4cf00f03d35c651b7853935309342a4905943f4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjs2snCRBK7hj4Ov3rIwAAqxcIAGp4Gi86IwpR6EuWP5Rflwgq\ngZ2leNLLoKF6f7Fqr7zV2uQ+W5eq18fPOwibU/LpcWFEusASo+2rZvEZmXQFy96R\nyYqrK0agS+M5nlacnyhCt8Hrjy17AREVOcfeCF3bu+hHcV7/niJhK7xKyy/ts+zO\n5pDXUUMeC3hem8fcxlLj9Ze3lHqyvtjxTynAuFks1WuVsEP9JVr9sDhGUS43TDKq\n6J4tIPKU+BzWGmwF7EEgUEFCUmT/Adfx2ICQi+E45a2vvCBbn5jo2jf+mUxLC8V9\n3XypIsE+kyuMhavnI6bhWxOIJX8FLO4ga98iPoJacNF93YvaS7EuudC8RcxqRQk=\n=vSHb\n-----END PGP SIGNATURE-----\n", "payload": "tree dd917108ec0ada980daf1d4d5c283fefde1730b6\nparent d112cd9a00aa757fd5d285c009a31b918eef3883\nparent 157211ff2f0a8f45c6000c46a545412a0fb9eed4\nauthor Michael Goulet <michael@errs.io> 1672702759 -0800\ncommitter GitHub <noreply@github.com> 1672702759 -0800\n\nRollup merge of #106383 - Manishearth:ast-docs, r=compiler-errors\n\nDocument some of the AST nodes\n\nSomeone was confused about some of this on Zulip, added some docs\n\nWe probably should make sure every last field/variant in the AST/HIR is documented at some point\n\n`@bors` rollup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4cf00f03d35c651b7853935309342a4905943f4", "html_url": "https://github.com/rust-lang/rust/commit/d4cf00f03d35c651b7853935309342a4905943f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4cf00f03d35c651b7853935309342a4905943f4/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d112cd9a00aa757fd5d285c009a31b918eef3883", "url": "https://api.github.com/repos/rust-lang/rust/commits/d112cd9a00aa757fd5d285c009a31b918eef3883", "html_url": "https://github.com/rust-lang/rust/commit/d112cd9a00aa757fd5d285c009a31b918eef3883"}, {"sha": "157211ff2f0a8f45c6000c46a545412a0fb9eed4", "url": "https://api.github.com/repos/rust-lang/rust/commits/157211ff2f0a8f45c6000c46a545412a0fb9eed4", "html_url": "https://github.com/rust-lang/rust/commit/157211ff2f0a8f45c6000c46a545412a0fb9eed4"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c1b26ca0925380293e9fca902bf60119b53d4dcf", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d4cf00f03d35c651b7853935309342a4905943f4/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4cf00f03d35c651b7853935309342a4905943f4/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=d4cf00f03d35c651b7853935309342a4905943f4", "patch": "@@ -2743,8 +2743,19 @@ impl Item {\n /// `extern` qualifier on a function item or function type.\n #[derive(Clone, Copy, Encodable, Decodable, Debug)]\n pub enum Extern {\n+    /// No explicit extern keyword was used\n+    ///\n+    /// E.g. `fn foo() {}`\n     None,\n+    /// An explicit extern keyword was used, but with implicit ABI\n+    ///\n+    /// E.g. `extern fn foo() {}`\n+    ///\n+    /// This is just `extern \"C\"` (see `rustc_target::spec::abi::Abi::FALLBACK`)\n     Implicit(Span),\n+    /// An explicit extern keyword was used with an explicit ABI\n+    ///\n+    /// E.g. `extern \"C\" fn foo() {}`\n     Explicit(StrLit, Span),\n }\n \n@@ -2763,9 +2774,13 @@ impl Extern {\n /// included in this struct (e.g., `async unsafe fn` or `const extern \"C\" fn`).\n #[derive(Clone, Copy, Encodable, Decodable, Debug)]\n pub struct FnHeader {\n+    /// The `unsafe` keyword, if any\n     pub unsafety: Unsafe,\n+    /// The `async` keyword, if any\n     pub asyncness: Async,\n+    /// The `const` keyword, if any\n     pub constness: Const,\n+    /// The `extern` keyword and corresponding ABI string, if any\n     pub ext: Extern,\n }\n "}]}