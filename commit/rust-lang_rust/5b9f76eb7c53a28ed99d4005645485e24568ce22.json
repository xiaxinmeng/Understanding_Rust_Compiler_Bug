{"sha": "5b9f76eb7c53a28ed99d4005645485e24568ce22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViOWY3NmViN2M1M2EyOGVkOTlkNDAwNTY0NTQ4NWUyNDU2OGNlMjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-14T21:49:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-14T22:07:52Z"}, "message": "stdlib: Run cleanups on data that fails to send", "tree": {"sha": "e2b0c93a60fe8e96ca948e6108029cf5a0605eeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2b0c93a60fe8e96ca948e6108029cf5a0605eeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b9f76eb7c53a28ed99d4005645485e24568ce22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9f76eb7c53a28ed99d4005645485e24568ce22", "html_url": "https://github.com/rust-lang/rust/commit/5b9f76eb7c53a28ed99d4005645485e24568ce22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b9f76eb7c53a28ed99d4005645485e24568ce22/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c74fd1dc772ca67ec4d885152f01e33acad9213c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c74fd1dc772ca67ec4d885152f01e33acad9213c", "html_url": "https://github.com/rust-lang/rust/commit/c74fd1dc772ca67ec4d885152f01e33acad9213c"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "4aca724a01c3bdf275f6d688c93d6dc0102224db", "filename": "src/lib/comm.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Flib%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Flib%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fcomm.rs?ref=5b9f76eb7c53a28ed99d4005645485e24568ce22", "patch": "@@ -40,7 +40,7 @@ native \"cdecl\" mod rustrt {\n \n     fn chan_id_send<uniq T>(t: *sys::type_desc,\n                             target_task: task::task, target_port: port_id,\n-                            -data: T);\n+                            data: T) -> ctypes::uintptr_t;\n \n     fn new_port(unit_sz: uint) -> *rust_port;\n     fn del_port(po: *rust_port);\n@@ -109,7 +109,11 @@ to it.\n */\n fn send<uniq T>(ch: chan<T>, -data: T) {\n     let chan_t(t, p) = ch;\n-    rustrt::chan_id_send(sys::get_type_desc::<T>(), t, p, data);\n+    let res = rustrt::chan_id_send(sys::get_type_desc::<T>(), t, p, data);\n+    if res != 0u unsafe {\n+        // Data sent successfully\n+        unsafe::leak(data);\n+    }\n     task::yield();\n }\n "}, {"sha": "0c862f677105767f4cdccbe5a4b2f6f4ae095bfe", "filename": "src/lib/ctypes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Flib%2Fctypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Flib%2Fctypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fctypes.rs?ref=5b9f76eb7c53a28ed99d4005645485e24568ce22", "patch": "@@ -10,3 +10,5 @@ type size_t = uint;\n type ssize_t = int;\n /* Type: uint32_t */\n type uint32_t = u32;\n+/* Type: uintptr_t */\n+type uintptr_t = uint;"}, {"sha": "da7280211fdeb0bf1325d298a485fc4c7bda35cf", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=5b9f76eb7c53a28ed99d4005645485e24568ce22", "patch": "@@ -485,10 +485,11 @@ get_port_id(rust_port *port) {\n     return port->id;\n }\n \n-extern \"C\" CDECL void\n+extern \"C\" CDECL uintptr_t\n chan_id_send(type_desc *t, rust_task_id target_task_id,\n              rust_port_id target_port_id, void *sptr) {\n     // FIXME: make sure this is thread-safe\n+    bool sent = false;\n     rust_task *task = rust_scheduler::get_task();\n     rust_task *target_task = task->kernel->get_task_by_id(target_task_id);\n     if(target_task) {\n@@ -497,9 +498,11 @@ chan_id_send(type_desc *t, rust_task_id target_task_id,\n             port->send(sptr);\n             scoped_lock with(target_task->lock);\n             port->deref();\n+            sent = true;\n         }\n         target_task->deref();\n     }\n+    return (uintptr_t)sent;\n }\n \n // This is called by an intrinsic on the Rust stack."}, {"sha": "c6aa730d6d22a79316bb6145737cd8847c2f9849", "filename": "src/test/run-pass/task-comm-chan-cleanup3.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b9f76eb7c53a28ed99d4005645485e24568ce22/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup3.rs?ref=5b9f76eb7c53a28ed99d4005645485e24568ce22", "patch": "@@ -0,0 +1,10 @@\n+use std;\n+import std::comm;\n+\n+fn main() {\n+    let c = {\n+        let p = comm::port();\n+        comm::chan(p)\n+    };\n+    comm::send(c, \"coffee\");\n+}\n\\ No newline at end of file"}]}