{"sha": "9057dae235df4d893b3051991e9794af15b32902", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNTdkYWUyMzVkZjRkODkzYjMwNTE5OTFlOTc5NGFmMTViMzI5MDI=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T22:41:06Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T22:44:12Z"}, "message": "Reorder output", "tree": {"sha": "3d0dbdba54fc7ca5ddc1437fb2cc110e67810a13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d0dbdba54fc7ca5ddc1437fb2cc110e67810a13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9057dae235df4d893b3051991e9794af15b32902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9057dae235df4d893b3051991e9794af15b32902", "html_url": "https://github.com/rust-lang/rust/commit/9057dae235df4d893b3051991e9794af15b32902", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9057dae235df4d893b3051991e9794af15b32902/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e37d0e312596c06659b881c240a5afdd58395665", "url": "https://api.github.com/repos/rust-lang/rust/commits/e37d0e312596c06659b881c240a5afdd58395665", "html_url": "https://github.com/rust-lang/rust/commit/e37d0e312596c06659b881c240a5afdd58395665"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "565db7b178a1d25793fa9ead4d4fdc40d13af851", "filename": "src/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9057dae235df4d893b3051991e9794af15b32902/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9057dae235df4d893b3051991e9794af15b32902/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=9057dae235df4d893b3051991e9794af15b32902", "patch": "@@ -114,11 +114,14 @@ pub fn report_error<'tcx, 'mir>(\n     };\n \n     e.print_backtrace();\n+    let msg = e.to_string();\n+    let result = report_msg(ecx, &format!(\"{}: {}\", title, msg), msg, helps, true);\n+\n     if let UndefinedBehavior(UndefinedBehaviorInfo::InvalidUndefBytes(Some(ptr))) = e.kind {\n         ecx.memory.dump_alloc(ptr.alloc_id);\n     }\n-    let msg = e.to_string();\n-    report_msg(ecx, &format!(\"{}: {}\", title, msg), msg, helps, true)\n+\n+    result\n }\n \n /// Report an error or note (depending on the `error` argument) at the current frame's current statement."}]}