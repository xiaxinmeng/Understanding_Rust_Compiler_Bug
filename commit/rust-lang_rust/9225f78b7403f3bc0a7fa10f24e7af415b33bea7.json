{"sha": "9225f78b7403f3bc0a7fa10f24e7af415b33bea7", "node_id": "C_kwDOAAsO6NoAKDkyMjVmNzhiNzQwM2YzYmMwYTdmYTEwZjI0ZTdhZjQxNWIzM2JlYTc", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-02T09:13:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-02T09:13:23Z"}, "message": "Rollup merge of #97397 - JohnTitor:stabilize-box-into-pin, r=Mark-Simulacrum\n\nStabilize `box_into_pin`\n\nFCP has been completed: https://github.com/rust-lang/rust/issues/62370#issuecomment-1012162279\nAlso, adds notes as per https://github.com/rust-lang/rust/issues/62370#issuecomment-1004108116\nCloses #62370", "tree": {"sha": "89d4a93ea71320aed93f40f087495ba375a2b2c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89d4a93ea71320aed93f40f087495ba375a2b2c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9225f78b7403f3bc0a7fa10f24e7af415b33bea7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimH8zCRBK7hj4Ov3rIwAAocAIAIBq5PLvf7lunf/QLADCfJJV\nX/IPcVa8pktJ4yAH5zVSE9YSuvEtn6hkf7OtusTIQ5qNgKg1adyinQ5e2PcYmfnc\nWpmYTCbB7oPoVdV6WboG5H8XLSfTqHQSVYgw+ir+siXZEe1x8Q/csDqDu85j4lBs\nRrWMDMaQT/Va+M0nGbGKFniUqMymI9b02B+D9ZAGSdIBAgZMQywZiXbpfG2IWJG1\nkSi2siWnY62zdVaK80i0I0QGQ5ROPMJ8M+E4OAbReuKf5KWUw7gyick7yTBJhpQw\nyeAouid+bnM0nheU+KP6zvON1z8XA6rPBXy1l8BAVdP3+UoMZD4vY1JnL3Ff18o=\n=kpH3\n-----END PGP SIGNATURE-----\n", "payload": "tree 89d4a93ea71320aed93f40f087495ba375a2b2c5\nparent 5c041f98fa121a5e8ae61f755ac3776565a7a595\nparent 572c39000ba24a254637f8e53bb5933fbd5ebef7\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1654161203 +0200\ncommitter GitHub <noreply@github.com> 1654161203 +0200\n\nRollup merge of #97397 - JohnTitor:stabilize-box-into-pin, r=Mark-Simulacrum\n\nStabilize `box_into_pin`\n\nFCP has been completed: https://github.com/rust-lang/rust/issues/62370#issuecomment-1012162279\nAlso, adds notes as per https://github.com/rust-lang/rust/issues/62370#issuecomment-1004108116\nCloses #62370\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9225f78b7403f3bc0a7fa10f24e7af415b33bea7", "html_url": "https://github.com/rust-lang/rust/commit/9225f78b7403f3bc0a7fa10f24e7af415b33bea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9225f78b7403f3bc0a7fa10f24e7af415b33bea7/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c041f98fa121a5e8ae61f755ac3776565a7a595", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c041f98fa121a5e8ae61f755ac3776565a7a595", "html_url": "https://github.com/rust-lang/rust/commit/5c041f98fa121a5e8ae61f755ac3776565a7a595"}, {"sha": "572c39000ba24a254637f8e53bb5933fbd5ebef7", "url": "https://api.github.com/repos/rust-lang/rust/commits/572c39000ba24a254637f8e53bb5933fbd5ebef7", "html_url": "https://github.com/rust-lang/rust/commit/572c39000ba24a254637f8e53bb5933fbd5ebef7"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "e2c692b5299f45faef3c0976a1b4cf4301729d12", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9225f78b7403f3bc0a7fa10f24e7af415b33bea7/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9225f78b7403f3bc0a7fa10f24e7af415b33bea7/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=9225f78b7403f3bc0a7fa10f24e7af415b33bea7", "patch": "@@ -1175,14 +1175,33 @@ impl<T: ?Sized, A: Allocator> Box<T, A> {\n     /// This conversion does not allocate on the heap and happens in place.\n     ///\n     /// This is also available via [`From`].\n-    #[unstable(feature = \"box_into_pin\", issue = \"62370\")]\n+    ///\n+    /// # Notes\n+    ///\n+    /// It's not recommended that crates add an impl like `From<Box<T>> for Pin<T>`,\n+    /// as it'll introduce an ambiguity when calling `Pin::from`.\n+    /// A demonstration of such a poor impl is shown below.\n+    ///\n+    /// ```compile_fail\n+    /// # use std::pin::Pin;\n+    /// struct Foo; // A type defined in this crate.\n+    /// impl From<Box<()>> for Pin<Foo> {\n+    ///     fn from(_: Box<()>) -> Pin<Foo> {\n+    ///         Pin::new(Foo)\n+    ///     }\n+    /// }\n+    ///\n+    /// let foo = Box::new(());\n+    /// let bar = Pin::from(foo);\n+    /// ```\n+    #[stable(feature = \"box_into_pin\", since = \"1.63.0\")]\n     #[rustc_const_unstable(feature = \"const_box\", issue = \"92521\")]\n     pub const fn into_pin(boxed: Self) -> Pin<Self>\n     where\n         A: 'static,\n     {\n         // It's not possible to move or replace the insides of a `Pin<Box<T>>`\n-        // when `T: !Unpin`,  so it's safe to pin it directly without any\n+        // when `T: !Unpin`, so it's safe to pin it directly without any\n         // additional requirements.\n         unsafe { Pin::new_unchecked(boxed) }\n     }"}]}