{"sha": "5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjY2MxZTQ1YmQzOWYwNWQ5NjBkOGU5ZWQ2MTBmN2FkZTUyNzcyMGU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-24T21:42:56Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-04T17:59:28Z"}, "message": "move Node{Map,Set} -> rustc_session::node_id", "tree": {"sha": "75b354efa2e46b78dbce3eedad009ec298d3f55a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75b354efa2e46b78dbce3eedad009ec298d3f55a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "html_url": "https://github.com/rust-lang/rust/commit/5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f507403517299765b6d628fd677c6d880899b83c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f507403517299765b6d628fd677c6d880899b83c", "html_url": "https://github.com/rust-lang/rust/commit/f507403517299765b6d628fd677c6d880899b83c"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "aff2d7e65af1b55f4075e842d8ce75291edd6d44", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -3368,6 +3368,7 @@ dependencies = [\n  \"rustc_error_codes\",\n  \"rustc_errors\",\n  \"rustc_index\",\n+ \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n  \"smallvec 1.0.0\",\n@@ -3808,6 +3809,7 @@ dependencies = [\n  \"rustc_expand\",\n  \"rustc_feature\",\n  \"rustc_metadata\",\n+ \"rustc_session\",\n  \"rustc_span\",\n  \"smallvec 1.0.0\",\n  \"syntax\","}, {"sha": "b04c3523662eb3046497a77218da0866cb6d566f", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -7,12 +7,12 @@\n use crate::hir;\n use crate::hir::def_id::{CrateNum, DefId, DefIndex, CRATE_DEF_INDEX, LOCAL_CRATE};\n use crate::ich::Fingerprint;\n-use crate::session::CrateDisambiguator;\n-use crate::util::nodemap::NodeMap;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::StableHasher;\n use rustc_index::vec::IndexVec;\n+use rustc_session::node_id::NodeMap;\n+use rustc_session::CrateDisambiguator;\n use rustc_span::hygiene::ExpnId;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;"}, {"sha": "ff025f48dc44ffedc40649bc7e8f468dbd2511e7", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -11,13 +11,13 @@ pub use self::UnsafeSource::*;\n use crate::hir::def::{DefKind, Res};\n use crate::hir::def_id::{DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX};\n use crate::ty::query::Providers;\n-use crate::util::nodemap::NodeMap;\n \n use errors::FatalError;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::{par_for_each_in, Send, Sync};\n use rustc_macros::HashStable;\n use rustc_serialize::{self, Decodable, Decoder, Encodable, Encoder};\n+use rustc_session::node_id::NodeMap;\n use rustc_span::source_map::{SourceMap, Spanned};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{MultiSpan, Span, DUMMY_SP};"}, {"sha": "3c5566923130150497cd21e2cb36a015121181cd", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -25,10 +25,10 @@ use rustc_data_structures::sync;\n \n use crate::hir;\n use crate::lint::builtin::BuiltinLintDiagnostics;\n-use crate::session::{DiagnosticMessageId, Session};\n use crate::ty::TyCtxt;\n-use crate::util::nodemap::NodeMap;\n use errors::{DiagnosticBuilder, DiagnosticId};\n+use rustc_session::node_id::NodeMap;\n+use rustc_session::{DiagnosticMessageId, Session};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::{DesugaringKind, ExpnKind, MultiSpan};\n use rustc_span::symbol::Symbol;"}, {"sha": "88fbed32729da2f65f2ebf5a774694ea8c8ed606", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -46,7 +46,7 @@ use crate::ty::{ExistentialPredicate, InferTy, ParamTy, PolyFnSig, Predicate, Pr\n use crate::ty::{InferConst, ParamConst};\n use crate::ty::{List, TyKind, TyS};\n use crate::util::common::ErrorReported;\n-use crate::util::nodemap::{DefIdMap, DefIdSet, ItemLocalMap, ItemLocalSet, NodeMap};\n+use crate::util::nodemap::{DefIdMap, DefIdSet, ItemLocalMap, ItemLocalSet};\n \n use arena::SyncDroplessArena;\n use errors::DiagnosticBuilder;\n@@ -59,6 +59,7 @@ use rustc_data_structures::stable_hasher::{\n use rustc_data_structures::sync::{Lock, Lrc, WorkerLocal};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n+use rustc_session::node_id::NodeMap;\n use rustc_span::source_map::MultiSpan;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;"}, {"sha": "73020b8bc668930891e763835ba13e423f8c57ba", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -28,11 +28,12 @@ use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::{Discr, IntTypeExt};\n use crate::ty::walk::TypeWalker;\n use crate::util::captures::Captures;\n-use crate::util::nodemap::{DefIdMap, NodeMap, NodeSet};\n+use crate::util::nodemap::DefIdMap;\n use arena::SyncDroplessArena;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_macros::HashStable;\n+use rustc_session::node_id::{NodeMap, NodeSet};\n \n use rustc_data_structures::sync::{self, par_iter, Lrc, ParallelIterator};\n use rustc_serialize::{self, Encodable, Encoder};"}, {"sha": "ed69e9002b6baa7709689bd66a655fb7ea89b472", "filename": "src/librustc/util/nodemap.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Futil%2Fnodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc%2Futil%2Fnodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fnodemap.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -2,11 +2,9 @@\n \n use crate::hir::def_id::DefId;\n use crate::hir::{HirId, ItemLocalId};\n-use syntax::ast;\n \n use rustc_data_structures::define_id_collections;\n \n-define_id_collections!(NodeMap, NodeSet, ast::NodeId);\n define_id_collections!(DefIdMap, DefIdSet, DefId);\n define_id_collections!(HirIdMap, HirIdSet, HirId);\n define_id_collections!(ItemLocalMap, ItemLocalSet, ItemLocalId);"}, {"sha": "76980dfa31db4c051cfe2d59d6204749d8c8afc8", "filename": "src/librustc_ast_lowering/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_ast_lowering%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_ast_lowering%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2FCargo.toml?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -18,5 +18,6 @@ rustc_index = { path = \"../librustc_index\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_errors = { path = \"../librustc_errors\" }\n+rustc_session = { path = \"../librustc_session\" }\n syntax = { path = \"../libsyntax\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "7e7e2d1e10892efd05f338c094661c3655b64d14", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -6,8 +6,8 @@ use rustc::bug;\n use rustc::hir;\n use rustc::hir::def::{DefKind, Res};\n use rustc::hir::def_id::DefId;\n-use rustc::util::nodemap::NodeMap;\n use rustc_error_codes::*;\n+use rustc_session::node_id::NodeMap;\n use rustc_span::source_map::{respan, DesugaringKind};\n use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;"}, {"sha": "ba27e79dff5178d8d625059fe5918e6814b013ab", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -47,13 +47,14 @@ use rustc::session::config::nightly_options;\n use rustc::session::Session;\n use rustc::util::captures::Captures;\n use rustc::util::common::FN_OUTPUT_NAME;\n-use rustc::util::nodemap::{DefIdMap, NodeMap};\n+use rustc::util::nodemap::DefIdMap;\n use rustc::{bug, span_bug};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_error_codes::*;\n use rustc_errors::Applicability;\n use rustc_index::vec::IndexVec;\n+use rustc_session::node_id::NodeMap;\n use rustc_span::hygiene::ExpnId;\n use rustc_span::source_map::{respan, DesugaringKind, ExpnData, ExpnKind, Spanned};\n use rustc_span::symbol::{kw, sym, Symbol};"}, {"sha": "593662c1180db6dcd48fd575d1031a8f4cb7bb8f", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -24,4 +24,5 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n rustc_error_codes = { path = \"../librustc_error_codes\" }\n+rustc_session = { path = \"../librustc_session\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "6561072a21bcee699e102c6d779067a17b06e75a", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -27,10 +27,9 @@ use crate::imports::ImportDirectiveSubclass;\n use crate::Resolver;\n \n use errors::pluralize;\n-\n-use rustc::util::nodemap::NodeMap;\n use rustc::{lint, ty};\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_session::node_id::NodeMap;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use syntax::ast;\n use syntax::visit::{self, Visitor};"}, {"sha": "a822c0fa51885b4883e79ad9e61672e55a51dded", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -33,12 +33,13 @@ use rustc::session::Session;\n use rustc::span_bug;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, ResolverOutputs};\n-use rustc::util::nodemap::{DefIdMap, NodeMap, NodeSet};\n+use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_data_structures::ptr_key::PtrKey;\n use rustc_data_structures::sync::Lrc;\n use rustc_expand::base::SyntaxExtension;\n use rustc_metadata::creader::{CStore, CrateLoader};\n+use rustc_session::node_id::{NodeMap, NodeSet};\n use rustc_span::hygiene::{ExpnId, ExpnKind, MacroKind, SyntaxContext, Transparency};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "5e51c5a92ccc473850292829537dd85c7e282cc3", "filename": "src/librustc_session/node_id.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_session%2Fnode_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccc1e45bd39f05d960d8e9ed610f7ade527720e/src%2Flibrustc_session%2Fnode_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fnode_id.rs?ref=5ccc1e45bd39f05d960d8e9ed610f7ade527720e", "patch": "@@ -10,6 +10,8 @@ rustc_index::newtype_index! {\n     }\n }\n \n+rustc_data_structures::define_id_collections!(NodeMap, NodeSet, NodeId);\n+\n impl NodeId {\n     pub fn placeholder_from_expn_id(expn_id: ExpnId) -> Self {\n         NodeId::from_u32(expn_id.as_u32())"}]}