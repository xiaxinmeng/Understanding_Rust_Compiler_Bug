{"sha": "87d5383ec30e9837215b0d4a6e03b28bd9594117", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZDUzODNlYzMwZTk4MzcyMTViMGQ0YTZlMDNiMjhiZDk1OTQxMTc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-04T10:16:50Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-11T14:08:17Z"}, "message": "Rename the `exp` field to mirror its uses", "tree": {"sha": "f37d0016d16d7690d5a6212bc55075e25dd2e164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f37d0016d16d7690d5a6212bc55075e25dd2e164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87d5383ec30e9837215b0d4a6e03b28bd9594117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87d5383ec30e9837215b0d4a6e03b28bd9594117", "html_url": "https://github.com/rust-lang/rust/commit/87d5383ec30e9837215b0d4a6e03b28bd9594117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87d5383ec30e9837215b0d4a6e03b28bd9594117/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33bf81eec018ec717bffc4468faf8d2a3bde1892", "url": "https://api.github.com/repos/rust-lang/rust/commits/33bf81eec018ec717bffc4468faf8d2a3bde1892", "html_url": "https://github.com/rust-lang/rust/commit/33bf81eec018ec717bffc4468faf8d2a3bde1892"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9ff10ff851ae3063690af6f126e8e91d09804969", "filename": "src/librustc_plugin/registry.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87d5383ec30e9837215b0d4a6e03b28bd9594117/src%2Flibrustc_plugin%2Fregistry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d5383ec30e9837215b0d4a6e03b28bd9594117/src%2Flibrustc_plugin%2Fregistry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fregistry.rs?ref=87d5383ec30e9837215b0d4a6e03b28bd9594117", "patch": "@@ -110,8 +110,8 @@ impl<'a> Registry<'a> {\n                     edition,\n                 }\n             }\n-            IdentTT { ext, span: _, allow_internal_unstable } => {\n-                IdentTT { ext, span: Some(self.krate_span), allow_internal_unstable }\n+            IdentTT { expander, span: _, allow_internal_unstable } => {\n+                IdentTT { expander, span: Some(self.krate_span), allow_internal_unstable }\n             }\n             _ => extension,\n         }));"}, {"sha": "ec7d0e423b4cfbf690a355bf0b2cda2e36fddee6", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87d5383ec30e9837215b0d4a6e03b28bd9594117/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d5383ec30e9837215b0d4a6e03b28bd9594117/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=87d5383ec30e9837215b0d4a6e03b28bd9594117", "patch": "@@ -658,7 +658,7 @@ pub enum SyntaxExtension {\n     /// A function-like syntax extension that has an extra ident before\n     /// the block.\n     IdentTT {\n-        ext: Box<dyn IdentMacroExpander + sync::Sync + sync::Send>,\n+        expander: Box<dyn IdentMacroExpander + sync::Sync + sync::Send>,\n         span: Option<Span>,\n         allow_internal_unstable: Vec<Symbol>,\n     },"}, {"sha": "2d4082386b261b71717f8eed41af46b9e54da614", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87d5383ec30e9837215b0d4a6e03b28bd9594117/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d5383ec30e9837215b0d4a6e03b28bd9594117/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=87d5383ec30e9837215b0d4a6e03b28bd9594117", "patch": "@@ -792,7 +792,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                 }\n             }\n \n-            IdentTT { ext: ref expander, span: tt_span, ref allow_internal_unstable } => {\n+            IdentTT { ref expander, span: tt_span, ref allow_internal_unstable } => {\n                 if ident.name == keywords::Invalid.name() {\n                     self.cx.span_err(path.span,\n                                     &format!(\"macro {}! expects an ident argument\", path));"}]}