{"sha": "48bae9360feea931a0ef635ef1b69c61113dcd1a", "node_id": "C_kwDOAAsO6NoAKDQ4YmFlOTM2MGZlZWE5MzFhMGVmNjM1ZWYxYjY5YzYxMTEzZGNkMWE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-27T20:06:30Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-03T16:44:18Z"}, "message": "Use DefIdTree instead of open-coding it.", "tree": {"sha": "7f2e2c5151cbc42bc69661636a58ccdf715de39d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f2e2c5151cbc42bc69661636a58ccdf715de39d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48bae9360feea931a0ef635ef1b69c61113dcd1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48bae9360feea931a0ef635ef1b69c61113dcd1a", "html_url": "https://github.com/rust-lang/rust/commit/48bae9360feea931a0ef635ef1b69c61113dcd1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48bae9360feea931a0ef635ef1b69c61113dcd1a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "421bb6ac62f5624a05d9e4ff0a12c91da91e49a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/421bb6ac62f5624a05d9e4ff0a12c91da91e49a8", "html_url": "https://github.com/rust-lang/rust/commit/421bb6ac62f5624a05d9e4ff0a12c91da91e49a8"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "1892216dec0020459628dce1f469324fce851d49", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48bae9360feea931a0ef635ef1b69c61113dcd1a/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bae9360feea931a0ef635ef1b69c61113dcd1a/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=48bae9360feea931a0ef635ef1b69c61113dcd1a", "patch": "@@ -1437,13 +1437,9 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n \n         // Figure out if this is a type/trait segment,\n         // which requires object lifetime defaults.\n-        let parent_def_id = |this: &mut Self, def_id: DefId| {\n-            let def_key = this.tcx.def_key(def_id);\n-            DefId { krate: def_id.krate, index: def_key.parent.expect(\"missing parent\") }\n-        };\n         let type_def_id = match res {\n-            Res::Def(DefKind::AssocTy, def_id) if depth == 1 => Some(parent_def_id(self, def_id)),\n-            Res::Def(DefKind::Variant, def_id) if depth == 0 => Some(parent_def_id(self, def_id)),\n+            Res::Def(DefKind::AssocTy, def_id) if depth == 1 => Some(self.tcx.parent(def_id)),\n+            Res::Def(DefKind::Variant, def_id) if depth == 0 => Some(self.tcx.parent(def_id)),\n             Res::Def(\n                 DefKind::Struct\n                 | DefKind::Union"}]}