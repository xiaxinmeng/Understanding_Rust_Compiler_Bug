{"sha": "005e3194858785e9debae8116caedf4c14e3b727", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNWUzMTk0ODU4Nzg1ZTlkZWJhZTgxMTZjYWVkZjRjMTRlM2I3Mjc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-09T22:08:08Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-10T03:53:32Z"}, "message": "make use of snapshot runtime predicated on variable USE_SNAPSHOT_RUNTIME", "tree": {"sha": "af4dd95d582b34abd81474122684014651b243f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af4dd95d582b34abd81474122684014651b243f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/005e3194858785e9debae8116caedf4c14e3b727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/005e3194858785e9debae8116caedf4c14e3b727", "html_url": "https://github.com/rust-lang/rust/commit/005e3194858785e9debae8116caedf4c14e3b727", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/005e3194858785e9debae8116caedf4c14e3b727/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55edb4a04f63214d90853fcd4137fc53efe4ec27", "url": "https://api.github.com/repos/rust-lang/rust/commits/55edb4a04f63214d90853fcd4137fc53efe4ec27", "html_url": "https://github.com/rust-lang/rust/commit/55edb4a04f63214d90853fcd4137fc53efe4ec27"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "a728d90c13ef56830c2c6bbd2e7b24de30ae229b", "filename": "mk/target.mk", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/005e3194858785e9debae8116caedf4c14e3b727/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/005e3194858785e9debae8116caedf4c14e3b727/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=005e3194858785e9debae8116caedf4c14e3b727", "patch": "@@ -4,6 +4,11 @@\n # $(2) is the target triple\n # $(3) is the host triple\n \n+# If you are making non-backwards compatible changes to the runtime,\n+# set this flag to 1.  It will cause stage1 to use the snapshot\n+# runtime rather than the runtime from the working directory.\n+USE_SNAPSHOT_RUNTIME=0\n+\n define TARGET_STAGE_N\n \n $$(TLIB$(1)_T_$(2)_H_$(3))/intrinsics.ll: \\\n@@ -58,11 +63,17 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBRUSTC):\t\t\\\n endef\n \n # The stage0 (snapshot) compiler produces binaries that expect the\n-# snapshot runtime.  Therefore, the stage1 compiler and libraries\n-# (which are produced by stage0) should use the runtime from the\n-# snapshot.  The stage2 compiler and libraries (which are produced by\n-# stage1) will be the first that are expecting to run against the\n-# runtime as defined in the working directory.\n+# snapshot runtime.  Normally the working directory runtime and\n+# snapshot runtime are compatible, so this is no problem. But\n+# sometimes we want to make non-backwards-compatible changes.  In\n+# those cases, the stage1 compiler and libraries (which are produced\n+# by stage0) should use the runtime from the snapshot.  The stage2\n+# compiler and libraries (which are produced by stage1) will be the\n+# first that are expecting to run against the runtime as defined in\n+# the working directory.\n+#\n+# The catch is that you may not add new functions to the runtime\n+# in this case!\n #\n # Arguments are the same as for TARGET_BASE_STAGE_N\n define TARGET_RT_FROM_SNAPSHOT\n@@ -96,15 +107,25 @@ $(foreach source,$(CFG_TARGET_TRIPLES),\t\t\t\t\t\t\\\n   $(eval $(call TARGET_STAGE_N,2,$(target),$(source)))\t\t\\\n   $(eval $(call TARGET_STAGE_N,3,$(target),$(source)))))\n \n-$(eval $(call TARGET_RT_FROM_SNAPSHOT,0,$(CFG_HOST_TRIPLE),$(CFG_HOST_TRIPLE)))\n+# Host triple either uses the snapshot runtime or runtime from\n+# working directory, depending on the USE_SNAPSHOT_RUNTIME var.\n+ifeq ($(USE_SNAPSHOT_RUNTIME),1)\n+    $(foreach src,$(CFG_HOST_TRIPLE),\\\n+\t\t$(eval $(call TARGET_RT_FROM_SNAPSHOT,0,$(src),$(src))))\n+else \n+    $(foreach src,$(CFG_HOST_TRIPLE),\\\n+\t\t$(eval $(call TARGET_RT_FROM_WD,0,$(src),$(src))))\n+endif\n \n+# Non-host triples build the stage0 runtime from the working directory\n+$(foreach source,$(CFG_TARGET_TRIPLES),\t\t\t\t\t\t\\\n+ $(foreach target,$(NON_HOST_TRIPLES),\t\t\t\t\t\\\n+  $(eval $(call TARGET_RT_FROM_WD,0,$(target),$(source)))))\n+\n+# After stage0, always build the stage0 runtime from the working directory\n $(foreach source,$(CFG_TARGET_TRIPLES),\t\t\t\t\t\t\\\n  $(foreach target,$(CFG_TARGET_TRIPLES),\t\t\t\t\t\\\n   $(eval $(call TARGET_RT_FROM_WD,1,$(target),$(source)))\t\\\n   $(eval $(call TARGET_RT_FROM_WD,2,$(target),$(source)))\t\\\n   $(eval $(call TARGET_RT_FROM_WD,3,$(target),$(source)))))\n \n-# Non-host triples build the stage0 runtime from the working directory\n-$(foreach source,$(CFG_TARGET_TRIPLES),\t\t\t\t\t\t\\\n- $(foreach target,$(NON_HOST_TRIPLES),\t\t\t\t\t\\\n-  $(eval $(call TARGET_RT_FROM_WD,0,$(target),$(source)))))"}]}