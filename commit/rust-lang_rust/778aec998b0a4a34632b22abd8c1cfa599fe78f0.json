{"sha": "778aec998b0a4a34632b22abd8c1cfa599fe78f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OGFlYzk5OGIwYTRhMzQ2MzJiMjJhYmQ4YzFjZmE1OTlmZTc4ZjA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-22T22:37:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-23T19:15:10Z"}, "message": "libsyntax: Implement the `+` syntax for multiple trait bounds. r=tjc", "tree": {"sha": "0b9863c18bc8b6d75e5275f62631f80c3a24a02c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b9863c18bc8b6d75e5275f62631f80c3a24a02c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/778aec998b0a4a34632b22abd8c1cfa599fe78f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/778aec998b0a4a34632b22abd8c1cfa599fe78f0", "html_url": "https://github.com/rust-lang/rust/commit/778aec998b0a4a34632b22abd8c1cfa599fe78f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/778aec998b0a4a34632b22abd8c1cfa599fe78f0/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1871f3a70baf203e31c7e72b13715924bebd3ad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1871f3a70baf203e31c7e72b13715924bebd3ad7", "html_url": "https://github.com/rust-lang/rust/commit/1871f3a70baf203e31c7e72b13715924bebd3ad7"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "e1fc23276bc72d997c1bbe8c45284a497c8845eb", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/778aec998b0a4a34632b22abd8c1cfa599fe78f0/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778aec998b0a4a34632b22abd8c1cfa599fe78f0/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=778aec998b0a4a34632b22abd8c1cfa599fe78f0", "patch": "@@ -2531,6 +2531,10 @@ impl Parser {\n                 } else {\n                     break;\n                 }\n+\n+                if self.eat(token::BINOP(token::PLUS)) {\n+                    // Should be `break;` but that isn't backwards compatible.\n+                }\n             }\n         }\n         return @move bounds;"}, {"sha": "a0d3a81f867e3b26b39fcbab8cb187b2a586d914", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/778aec998b0a4a34632b22abd8c1cfa599fe78f0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778aec998b0a4a34632b22abd8c1cfa599fe78f0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=778aec998b0a4a34632b22abd8c1cfa599fe78f0", "patch": "@@ -1791,8 +1791,15 @@ fn print_arg_mode(s: ps, m: ast::mode) {\n fn print_bounds(s: ps, bounds: @~[ast::ty_param_bound]) {\n     if bounds.is_not_empty() {\n         word(s.s, ~\":\");\n+        let mut first = true;\n         for vec::each(*bounds) |&bound| {\n             nbsp(s);\n+            if first {\n+                first = false;\n+            } else {\n+                word_space(s, ~\"+\");\n+            }\n+\n             match bound {\n                 TraitTyParamBound(ty) => print_type(s, ty),\n                 RegionTyParamBound => word(s.s, ~\"&static\"),"}, {"sha": "e64b51888ef00a58dced2fd8039cec471f18a4e4", "filename": "src/test/run-pass/multiple-trait-bounds.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/778aec998b0a4a34632b22abd8c1cfa599fe78f0/src%2Ftest%2Frun-pass%2Fmultiple-trait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/778aec998b0a4a34632b22abd8c1cfa599fe78f0/src%2Ftest%2Frun-pass%2Fmultiple-trait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmultiple-trait-bounds.rs?ref=778aec998b0a4a34632b22abd8c1cfa599fe78f0", "patch": "@@ -0,0 +1,7 @@\n+fn f<T:Eq + Ord>(_: T) {\n+}\n+\n+fn main() {\n+    f(3);\n+}\n+"}]}