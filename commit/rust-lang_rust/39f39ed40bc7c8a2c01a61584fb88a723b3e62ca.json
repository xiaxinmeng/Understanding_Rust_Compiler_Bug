{"sha": "39f39ed40bc7c8a2c01a61584fb88a723b3e62ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZjM5ZWQ0MGJjN2M4YTJjMDFhNjE1ODRmYjg4YTcyM2IzZTYyY2E=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-31T00:26:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:01:59Z"}, "message": "libsyntax: De-`@mut` `FileMap::multibyte_chars`", "tree": {"sha": "0fcf5b237beda73c359b402e991d8b7319044929", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fcf5b237beda73c359b402e991d8b7319044929"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca", "html_url": "https://github.com/rust-lang/rust/commit/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27cc3d203baf219ae06596e9ac44f0c394024bb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/27cc3d203baf219ae06596e9ac44f0c394024bb5", "html_url": "https://github.com/rust-lang/rust/commit/27cc3d203baf219ae06596e9ac44f0c394024bb5"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "67a70dae24a92291ccde5d139cae7bee462c3178", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=39f39ed40bc7c8a2c01a61584fb88a723b3e62ca", "patch": "@@ -223,7 +223,7 @@ pub struct FileMap {\n     /// Locations of lines beginnings in the source code\n     lines: RefCell<~[BytePos]>,\n     /// Locations of multi-byte characters in the source code\n-    multibyte_chars: @mut ~[MultiByteChar],\n+    multibyte_chars: RefCell<~[MultiByteChar]>,\n }\n \n impl FileMap {\n@@ -258,7 +258,8 @@ impl FileMap {\n             pos: pos,\n             bytes: bytes,\n         };\n-        self.multibyte_chars.push(mbc);\n+        let mut multibyte_chars = self.multibyte_chars.borrow_mut();\n+        multibyte_chars.get().push(mbc);\n     }\n \n     pub fn is_real_file(&self) -> bool {\n@@ -300,7 +301,7 @@ impl CodeMap {\n             name: filename, substr: substr, src: src,\n             start_pos: Pos::from_uint(start_pos),\n             lines: RefCell::new(~[]),\n-            multibyte_chars: @mut ~[],\n+            multibyte_chars: RefCell::new(~[]),\n         };\n \n         files.push(filemap);\n@@ -471,7 +472,8 @@ impl CodeMap {\n         // The number of extra bytes due to multibyte chars in the FileMap\n         let mut total_extra_bytes = 0;\n \n-        for mbc in map.multibyte_chars.iter() {\n+        let multibyte_chars = map.multibyte_chars.borrow();\n+        for mbc in multibyte_chars.get().iter() {\n             debug!(\"codemap: {:?}-byte char at {:?}\", mbc.bytes, mbc.pos);\n             if mbc.pos < bpos {\n                 total_extra_bytes += mbc.bytes;"}, {"sha": "7e73f2b9aaf0ccfe8861490dc112d51bb1267ead", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f39ed40bc7c8a2c01a61584fb88a723b3e62ca/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=39f39ed40bc7c8a2c01a61584fb88a723b3e62ca", "patch": "@@ -115,7 +115,7 @@ pub fn expand_include_str(cx: &mut ExtCtxt, sp: Span, tts: &[ast::token_tree])\n                 src: s,\n                 start_pos: codemap::BytePos(0),\n                 lines: RefCell::new(~[]),\n-                multibyte_chars: @mut ~[],\n+                multibyte_chars: RefCell::new(~[]),\n             });\n             base::MRExpr(cx.expr_str(sp, s))\n         }"}]}