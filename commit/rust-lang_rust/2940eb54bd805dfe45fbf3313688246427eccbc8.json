{"sha": "2940eb54bd805dfe45fbf3313688246427eccbc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NDBlYjU0YmQ4MDVkZmU0NWZiZjMzMTM2ODgyNDY0MjdlY2NiYzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-14T12:04:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-14T12:04:38Z"}, "message": "Auto merge of #34232 - ollie27:rustdoc_inline, r=alexcrichton\n\nrustdoc: Don't inline #[doc(hidden)] pub use\n\nCurrently if a `#[doc(hidden)] pub use` item is inlined the `hidden`\nattribute is ignored so the item can appear in the docs. By never inlining\nsuch imports, they can be stripped.\n\nAn example in `std` is [`__OsLocalKeyInner`](https://doc.rust-lang.org/nightly/std/thread/struct.__OsLocalKeyInner.html) which clearly should not be documented.", "tree": {"sha": "c667bf06cf3f809439f94f8dc0f0d73b793306c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c667bf06cf3f809439f94f8dc0f0d73b793306c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2940eb54bd805dfe45fbf3313688246427eccbc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2940eb54bd805dfe45fbf3313688246427eccbc8", "html_url": "https://github.com/rust-lang/rust/commit/2940eb54bd805dfe45fbf3313688246427eccbc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2940eb54bd805dfe45fbf3313688246427eccbc8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af8f3e362fd1c931503703079467df027b57cdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af8f3e362fd1c931503703079467df027b57cdb", "html_url": "https://github.com/rust-lang/rust/commit/1af8f3e362fd1c931503703079467df027b57cdb"}, {"sha": "a7c467418fe552762dfff1be5405c35ef7407f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c467418fe552762dfff1be5405c35ef7407f38", "html_url": "https://github.com/rust-lang/rust/commit/a7c467418fe552762dfff1be5405c35ef7407f38"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "0801da19c822effb233e22b121f381a3ab16eb2b", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2940eb54bd805dfe45fbf3313688246427eccbc8", "patch": "@@ -2389,9 +2389,11 @@ impl Clean<Vec<Item>> for doctree::Import {\n         // We consider inlining the documentation of `pub use` statements, but we\n         // forcefully don't inline if this is not public or if the\n         // #[doc(no_inline)] attribute is present.\n+        // Don't inline doc(hidden) imports so they can be stripped at a later stage.\n         let denied = self.vis != hir::Public || self.attrs.iter().any(|a| {\n             &a.name()[..] == \"doc\" && match a.meta_item_list() {\n-                Some(l) => attr::contains_name(l, \"no_inline\"),\n+                Some(l) => attr::contains_name(l, \"no_inline\") ||\n+                           attr::contains_name(l, \"hidden\"),\n                 None => false,\n             }\n         });"}, {"sha": "b0b55a76e266e96babe7c4a715ea4349c5994bdf", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=2940eb54bd805dfe45fbf3313688246427eccbc8", "patch": "@@ -245,7 +245,9 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         let def_did = def.def_id();\n \n         let use_attrs = tcx.map.attrs(id).clean(self.cx);\n-        let is_no_inline = use_attrs.list(\"doc\").has_word(\"no_inline\");\n+        // Don't inline doc(hidden) imports so they can be stripped at a later stage.\n+        let is_no_inline = use_attrs.list(\"doc\").has_word(\"no_inline\") ||\n+                           use_attrs.list(\"doc\").has_word(\"hidden\");\n \n         // For cross-crate impl inlining we need to know whether items are\n         // reachable in documentation - a previously nonreachable item can be"}, {"sha": "dd668c203626dd0a50476bc8f7d297d28426028f", "filename": "src/test/rustdoc/inline_cross/hidden-use.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Ftest%2Frustdoc%2Finline_cross%2Fhidden-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Ftest%2Frustdoc%2Finline_cross%2Fhidden-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fhidden-use.rs?ref=2940eb54bd805dfe45fbf3313688246427eccbc8", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:rustdoc-hidden.rs\n+// build-aux-docs\n+// ignore-cross-compile\n+\n+extern crate rustdoc_hidden;\n+\n+// @has hidden_use/index.html\n+// @!has - 'rustdoc_hidden'\n+// @!has - 'Bar'\n+// @!has hidden_use/struct.Bar.html\n+#[doc(hidden)]\n+pub use rustdoc_hidden::Bar;"}, {"sha": "1b1dafcf58bef8c92bbb89b2c950c30c0168e594", "filename": "src/test/rustdoc/inline_local/hidden-use.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Ftest%2Frustdoc%2Finline_local%2Fhidden-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2940eb54bd805dfe45fbf3313688246427eccbc8/src%2Ftest%2Frustdoc%2Finline_local%2Fhidden-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fhidden-use.rs?ref=2940eb54bd805dfe45fbf3313688246427eccbc8", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod private {\n+    pub struct Foo {}\n+}\n+\n+// @has hidden_use/index.html\n+// @!has - 'private'\n+// @!has - 'Foo'\n+// @!has hidden_use/struct.Foo.html\n+#[doc(hidden)]\n+pub use private::Foo;"}]}