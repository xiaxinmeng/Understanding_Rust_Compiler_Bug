{"sha": "01cbe506f99aa484f583a7affb65d15a839d2412", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxY2JlNTA2Zjk5YWE0ODRmNTgzYTdhZmZiNjVkMTVhODM5ZDI0MTI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-14T04:30:23Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-20T07:41:42Z"}, "message": "Add `constness` field to `ast::ItemKind::Impl`", "tree": {"sha": "8d1a9404220d39f619e7d8dd50f05fc0dd3ce992", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d1a9404220d39f619e7d8dd50f05fc0dd3ce992"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01cbe506f99aa484f583a7affb65d15a839d2412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01cbe506f99aa484f583a7affb65d15a839d2412", "html_url": "https://github.com/rust-lang/rust/commit/01cbe506f99aa484f583a7affb65d15a839d2412", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01cbe506f99aa484f583a7affb65d15a839d2412/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29b854fb741809c29764e33fc17c32ba9c6523ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/29b854fb741809c29764e33fc17c32ba9c6523ba", "html_url": "https://github.com/rust-lang/rust/commit/29b854fb741809c29764e33fc17c32ba9c6523ba"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "170968e71fb35c708817e96a6c34e5c302e1336e", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -67,9 +67,8 @@ impl<'a> Visitor<'a> for ItemLowerer<'a, '_, '_> {\n         if let Some(hir_id) = item_hir_id {\n             self.lctx.with_parent_item_lifetime_defs(hir_id, |this| {\n                 let this = &mut ItemLowerer { lctx: this };\n-                if let ItemKind::Impl { ref of_trait, .. } = item.kind {\n-                    if of_trait.as_ref().map(|tr| tr.constness.is_some()).unwrap_or(false) {\n-                        this.with_trait_impl_ref(of_trait, |this| visit::walk_item(this, item));\n+                if let ItemKind::Impl { constness, ref of_trait, .. } = item.kind {\n+                    if constness == Constness::Const {\n                         this.lctx\n                             .diagnostic()\n                             .span_err(item.span, \"const trait impls are not yet implemented\");\n@@ -366,6 +365,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 unsafety,\n                 polarity,\n                 defaultness,\n+                constness: _, // TODO\n                 generics: ref ast_generics,\n                 of_trait: ref trait_ref,\n                 self_ty: ref ty,"}, {"sha": "23d2858a499661b7e664c084853bc68e3c453cae", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -616,6 +616,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 unsafety,\n                 polarity,\n                 defaultness: _,\n+                constness: _, // TODO\n                 generics: _,\n                 of_trait: Some(_),\n                 ref self_ty,\n@@ -649,6 +650,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 unsafety,\n                 polarity,\n                 defaultness,\n+                constness: _, // TODO\n                 generics: _,\n                 of_trait: None,\n                 self_ty: _,"}, {"sha": "f8918016c1b9835a803d2b8afa734f3f0b24d586", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -709,6 +709,7 @@ impl<'a> TraitDef<'a> {\n                 unsafety,\n                 polarity: ast::ImplPolarity::Positive,\n                 defaultness: ast::Defaultness::Final,\n+                constness: ast::Constness::NotConst,\n                 generics: trait_generics,\n                 of_trait: opt_trait_ref,\n                 self_ty: self_type,"}, {"sha": "914dcdf196921dc7088e44fd33fffda06903bd8c", "filename": "src/librustc_builtin_macros/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -160,6 +160,7 @@ fn inject_impl_of_structural_trait(\n             unsafety: ast::Unsafety::Normal,\n             polarity: ast::ImplPolarity::Positive,\n             defaultness: ast::Defaultness::Final,\n+            constness: ast::Constness::NotConst,\n             generics,\n             of_trait: Some(trait_ref),\n             self_ty: self_type,"}, {"sha": "e4982896376d62a239ac03a092a2b6ff3e62a0f3", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -638,6 +638,7 @@ impl<'a> Parser<'a> {\n                     unsafety,\n                     polarity,\n                     defaultness,\n+                    constness,\n                     generics,\n                     of_trait: Some(trait_ref),\n                     self_ty: ty_second,\n@@ -657,6 +658,7 @@ impl<'a> Parser<'a> {\n                     unsafety,\n                     polarity,\n                     defaultness,\n+                    constness,\n                     generics,\n                     of_trait: None,\n                     self_ty: ty_first,"}, {"sha": "a9d2bfabb1ba61c6ff84dd48b7f99e7ee943b175", "filename": "src/librustc_save_analysis/sig.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_save_analysis%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibrustc_save_analysis%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fsig.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -486,6 +486,7 @@ impl Sig for ast::Item {\n                 unsafety,\n                 polarity,\n                 defaultness,\n+                constness,\n                 ref generics,\n                 ref of_trait,\n                 ref self_ty,\n@@ -499,6 +500,9 @@ impl Sig for ast::Item {\n                     text.push_str(\"unsafe \");\n                 }\n                 text.push_str(\"impl\");\n+                if constness == ast::Constness::Const {\n+                    text.push_str(\" const\");\n+                }\n \n                 let generics_sig = generics.make(offset + text.len(), id, scx)?;\n                 text.push_str(&generics_sig.text);"}, {"sha": "6b54893075e7bf483c048fa79dac0098b5a3c991", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -2618,6 +2618,7 @@ pub enum ItemKind {\n         unsafety: Unsafety,\n         polarity: ImplPolarity,\n         defaultness: Defaultness,\n+        constness: Constness,\n         generics: Generics,\n \n         /// The trait being implemented, if any."}, {"sha": "8f82ff6b040a67533c8a533cc3e2e840b3ad9990", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -922,6 +922,7 @@ pub fn noop_visit_item_kind<T: MutVisitor>(kind: &mut ItemKind, vis: &mut T) {\n             unsafety: _,\n             polarity: _,\n             defaultness: _,\n+            constness: _,\n             generics,\n             of_trait,\n             self_ty,"}, {"sha": "3927e4f903011fda4bfab0619ff07605f84cced1", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -1230,6 +1230,7 @@ impl<'a> State<'a> {\n                 unsafety,\n                 polarity,\n                 defaultness,\n+                constness,\n                 ref generics,\n                 ref of_trait,\n                 ref self_ty,\n@@ -1240,6 +1241,7 @@ impl<'a> State<'a> {\n                 self.print_defaultness(defaultness);\n                 self.print_unsafety(unsafety);\n                 self.word_nbsp(\"impl\");\n+                self.print_constness(constness);\n \n                 if !generics.params.is_empty() {\n                     self.print_generic_params(&generics.params);\n@@ -2773,6 +2775,13 @@ impl<'a> State<'a> {\n         }\n     }\n \n+    crate fn print_constness(&mut self, s: ast::Constness) {\n+        match s {\n+            ast::Constness::Const => self.word_nbsp(\"const\"),\n+            ast::Constness::NotConst => {}\n+        }\n+    }\n+\n     crate fn print_is_auto(&mut self, s: ast::IsAuto) {\n         match s {\n             ast::IsAuto::Yes => self.word_nbsp(\"auto\"),"}, {"sha": "946a0d29cd399028c798787d73657c64d7962f2a", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cbe506f99aa484f583a7affb65d15a839d2412/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=01cbe506f99aa484f583a7affb65d15a839d2412", "patch": "@@ -312,6 +312,7 @@ pub fn walk_item<'a, V: Visitor<'a>>(visitor: &mut V, item: &'a Item) {\n             unsafety: _,\n             polarity: _,\n             defaultness: _,\n+            constness: _,\n             ref generics,\n             ref of_trait,\n             ref self_ty,"}]}