{"sha": "a43bf3ff99c0c801c4524f0f96d8d57e758e1044", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0M2JmM2ZmOTljMGM4MDFjNDUyNGYwZjk2ZDhkNTdlNzU4ZTEwNDQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-15T11:27:56Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-15T11:34:56Z"}, "message": "std::vec::bytes: remove obsolete functions.\n\nThese are less useful versions of the comparison operators and TotalOrd\ntrait.", "tree": {"sha": "65fbc99cb79a2554fcc71c41e21c7cc7f5b4e0c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65fbc99cb79a2554fcc71c41e21c7cc7f5b4e0c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a43bf3ff99c0c801c4524f0f96d8d57e758e1044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a43bf3ff99c0c801c4524f0f96d8d57e758e1044", "html_url": "https://github.com/rust-lang/rust/commit/a43bf3ff99c0c801c4524f0f96d8d57e758e1044", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a43bf3ff99c0c801c4524f0f96d8d57e758e1044/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f97040a93b7320af9963660b24a4b60b8bdd461a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f97040a93b7320af9963660b24a4b60b8bdd461a", "html_url": "https://github.com/rust-lang/rust/commit/f97040a93b7320af9963660b24a4b60b8bdd461a"}], "stats": {"total": 46, "additions": 2, "deletions": 44}, "files": [{"sha": "e546b4063c1f2af4b680a5dda9463dda548427a8", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 44, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a43bf3ff99c0c801c4524f0f96d8d57e758e1044/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a43bf3ff99c0c801c4524f0f96d8d57e758e1044/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=a43bf3ff99c0c801c4524f0f96d8d57e758e1044", "patch": "@@ -2351,10 +2351,7 @@ pub mod raw {\n \n /// Operations on `[u8]`\n pub mod bytes {\n-    use libc;\n-    use num;\n     use vec::raw;\n-    use vec;\n     use ptr;\n \n     /// A trait for operations on mutable operations on `[u8]`\n@@ -2372,45 +2369,6 @@ pub mod bytes {\n         }\n     }\n \n-    /// Bytewise string comparison\n-    pub fn memcmp(a: &~[u8], b: &~[u8]) -> int {\n-        let a_len = a.len();\n-        let b_len = b.len();\n-        let n = num::min(a_len, b_len) as libc::size_t;\n-        let r = unsafe {\n-            libc::memcmp(raw::to_ptr(*a) as *libc::c_void,\n-                         raw::to_ptr(*b) as *libc::c_void, n) as int\n-        };\n-\n-        if r != 0 { r } else {\n-            if a_len == b_len {\n-                0\n-            } else if a_len < b_len {\n-                -1\n-            } else {\n-                1\n-            }\n-        }\n-    }\n-\n-    /// Bytewise less than or equal\n-    pub fn lt(a: &~[u8], b: &~[u8]) -> bool { memcmp(a, b) < 0 }\n-\n-    /// Bytewise less than or equal\n-    pub fn le(a: &~[u8], b: &~[u8]) -> bool { memcmp(a, b) <= 0 }\n-\n-    /// Bytewise equality\n-    pub fn eq(a: &~[u8], b: &~[u8]) -> bool { memcmp(a, b) == 0 }\n-\n-    /// Bytewise inequality\n-    pub fn ne(a: &~[u8], b: &~[u8]) -> bool { memcmp(a, b) != 0 }\n-\n-    /// Bytewise greater than or equal\n-    pub fn ge(a: &~[u8], b: &~[u8]) -> bool { memcmp(a, b) >= 0 }\n-\n-    /// Bytewise greater than\n-    pub fn gt(a: &~[u8], b: &~[u8]) -> bool { memcmp(a, b) > 0 }\n-\n     /**\n       * Copies data from one vector to another.\n       *\n@@ -2419,7 +2377,7 @@ pub mod bytes {\n     #[inline]\n     pub fn copy_memory(dst: &mut [u8], src: &[u8]) {\n         // Bound checks are done at vec::raw::copy_memory.\n-        unsafe { vec::raw::copy_memory(dst, src) }\n+        unsafe { raw::copy_memory(dst, src) }\n     }\n \n     /**\n@@ -2435,7 +2393,7 @@ pub mod bytes {\n                     ptr::copy_memory(p_dst.offset(len_dst as int), p_src, len_src)\n                 })\n             });\n-            vec::raw::set_len(dst, old_len + src.len());\n+            raw::set_len(dst, old_len + src.len());\n         }\n     }\n }"}]}