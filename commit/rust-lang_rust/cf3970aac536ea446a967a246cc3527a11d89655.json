{"sha": "cf3970aac536ea446a967a246cc3527a11d89655", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzk3MGFhYzUzNmVhNDQ2YTk2N2EyNDZjYzM1MjdhMTFkODk2NTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-28T06:16:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-28T06:16:41Z"}, "message": "Auto merge of #33151 - ollie27:rustdoc_abi, r=alexcrichton\n\nrustdoc: Cleanup ABI rendering\n\nUse a common method for rendering `extern \"<abi>\"`.\n\nThis now consistently shows `extern fn` rather than `extern \"C\" fn`.", "tree": {"sha": "eac57beb3ffabf57d0a72e81502bd32bf288d16a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eac57beb3ffabf57d0a72e81502bd32bf288d16a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf3970aac536ea446a967a246cc3527a11d89655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf3970aac536ea446a967a246cc3527a11d89655", "html_url": "https://github.com/rust-lang/rust/commit/cf3970aac536ea446a967a246cc3527a11d89655", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf3970aac536ea446a967a246cc3527a11d89655/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "435095f32af93d27baf1390fa34e7dfff5eb7d5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/435095f32af93d27baf1390fa34e7dfff5eb7d5d", "html_url": "https://github.com/rust-lang/rust/commit/435095f32af93d27baf1390fa34e7dfff5eb7d5d"}, {"sha": "48aabbd9e3a451439070325c56fd84def324bdbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/48aabbd9e3a451439070325c56fd84def324bdbd", "html_url": "https://github.com/rust-lang/rust/commit/48aabbd9e3a451439070325c56fd84def324bdbd"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "35922c477ccee1895ce1277c7d91c54d216ea850", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf3970aac536ea446a967a246cc3527a11d89655/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3970aac536ea446a967a246cc3527a11d89655/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=cf3970aac536ea446a967a246cc3527a11d89655", "patch": "@@ -1721,7 +1721,7 @@ impl<'tcx> Clean<Type> for ty::Ty<'tcx> {\n                     where_predicates: Vec::new()\n                 },\n                 decl: (cx.map.local_def_id(0), &fty.sig).clean(cx),\n-                abi: fty.abi.to_string(),\n+                abi: fty.abi,\n             }),\n             ty::TyStruct(def, substs) |\n             ty::TyEnum(def, substs) => {\n@@ -2143,7 +2143,7 @@ pub struct BareFunctionDecl {\n     pub unsafety: hir::Unsafety,\n     pub generics: Generics,\n     pub decl: FnDecl,\n-    pub abi: String,\n+    pub abi: Abi,\n }\n \n impl Clean<BareFunctionDecl> for hir::BareFnTy {\n@@ -2156,7 +2156,7 @@ impl Clean<BareFunctionDecl> for hir::BareFnTy {\n                 where_predicates: Vec::new()\n             },\n             decl: self.decl.clean(cx),\n-            abi: self.abi.to_string(),\n+            abi: self.abi,\n         }\n     }\n }"}, {"sha": "d7763197f8a3bd0ba0f5b79a9395066178c68c8e", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf3970aac536ea446a967a246cc3527a11d89655/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3970aac536ea446a967a246cc3527a11d89655/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=cf3970aac536ea446a967a246cc3527a11d89655", "patch": "@@ -468,11 +468,7 @@ impl fmt::Display for clean::Type {\n             clean::BareFunction(ref decl) => {\n                 write!(f, \"{}{}fn{}{}\",\n                        UnsafetySpace(decl.unsafety),\n-                       match &*decl.abi {\n-                           \"\" => \" extern \".to_string(),\n-                           \"\\\"Rust\\\"\" => \"\".to_string(),\n-                           s => format!(\" extern {} \", s)\n-                       },\n+                       AbiSpace(decl.abi),\n                        decl.generics,\n                        decl.decl)\n             }\n@@ -788,7 +784,7 @@ impl fmt::Display for AbiSpace {\n         match self.0 {\n             Abi::Rust => Ok(()),\n             Abi::C => write!(f, \"extern \"),\n-            abi => write!(f, \"extern {} \", abi),\n+            abi => write!(f, \"extern &quot;{}&quot; \", abi.name()),\n         }\n     }\n }"}, {"sha": "5cdddc76582b3347cba38190daf1ac2c0063bde5", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cf3970aac536ea446a967a246cc3527a11d89655/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3970aac536ea446a967a246cc3527a11d89655/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=cf3970aac536ea446a967a246cc3527a11d89655", "patch": "@@ -2158,8 +2158,6 @@ fn render_assoc_item(w: &mut fmt::Formatter,\n               d: &clean::FnDecl,\n               link: AssocItemLink)\n               -> fmt::Result {\n-        use syntax::abi::Abi;\n-\n         let name = meth.name.as_ref().unwrap();\n         let anchor = format!(\"#{}.{}\", shortty(meth), name);\n         let href = match link {\n@@ -2186,10 +2184,7 @@ fn render_assoc_item(w: &mut fmt::Formatter,\n                    {generics}{decl}{where_clause}\",\n                ConstnessSpace(vis_constness),\n                UnsafetySpace(unsafety),\n-               match abi {\n-                   Abi::Rust => String::new(),\n-                   a => format!(\"extern {} \", a.to_string())\n-               },\n+               AbiSpace(abi),\n                href = href,\n                name = name,\n                generics = *g,"}, {"sha": "0e78746704fb150a838c7a885902e729a947d7f1", "filename": "src/test/rustdoc/extern-impl.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/cf3970aac536ea446a967a246cc3527a11d89655/src%2Ftest%2Frustdoc%2Fextern-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3970aac536ea446a967a246cc3527a11d89655/src%2Ftest%2Frustdoc%2Fextern-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-impl.rs?ref=cf3970aac536ea446a967a246cc3527a11d89655", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/struct.Foo.html\n+pub struct Foo;\n+\n+impl Foo {\n+    // @has - '//code' 'fn rust0()'\n+    pub fn rust0() {}\n+    // @has - '//code' 'fn rust1()'\n+    pub extern \"Rust\" fn rust1() {}\n+    // @has - '//code' 'extern fn c0()'\n+    pub extern fn c0() {}\n+    // @has - '//code' 'extern fn c1()'\n+    pub extern \"C\" fn c1() {}\n+    // @has - '//code' 'extern \"system\" fn system0()'\n+    pub extern \"system\" fn system0() {}\n+}\n+\n+// @has foo/trait.Bar.html\n+pub trait Bar {}\n+\n+// @has - '//code' 'impl Bar for fn()'\n+impl Bar for fn() {}\n+// @has - '//code' 'impl Bar for extern fn()'\n+impl Bar for extern fn() {}\n+// @has - '//code' 'impl Bar for extern \"system\" fn()'\n+impl Bar for extern \"system\" fn() {}"}]}