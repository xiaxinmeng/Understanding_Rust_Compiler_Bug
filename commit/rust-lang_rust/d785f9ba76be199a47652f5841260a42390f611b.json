{"sha": "d785f9ba76be199a47652f5841260a42390f611b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ODVmOWJhNzZiZTE5OWE0NzY1MmY1ODQxMjYwYTQyMzkwZjYxMWI=", "commit": {"author": {"name": "Dylan McKay", "email": "me@dylanmckay.io", "date": "2020-07-26T11:58:37Z"}, "committer": {"name": "Dylan McKay", "email": "me@dylanmckay.io", "date": "2020-08-24T06:43:30Z"}, "message": "[AVR] Replace broken 'avr-unknown-unknown' target with 'avr-unknown-gnu-atmega328' target\n\nThe `avr-unknown-unknown` target has never worked correctly, always trying to invoke\nthe host linker and failing. It aimed to be a mirror of AVR-GCC's\ndefault handling of the `avr-unknown-unknown' triple (assume bare\nminimum chip features, silently skip linking runtime libraries, etc).\nThis behaviour is broken-by-default as it will cause a miscompiled executable\nwhen flashed.\n\nThis patch improves the AVR builtin target specifications to instead\nexpose only a 'avr-unknown-gnu-atmega328' target. This target system is\n`gnu`, as it uses the AVR-GCC frontend along with avr-binutils. The\ntarget triple ABI is 'atmega328'.\n\nIn the future, it should be possible to replace the dependency on\nAVR-GCC and binutils by using the in-progress AVR LLD and compiler-rt support.\nPerhaps at that point it would make sense to add an\n'avr-unknown-unknown-atmega328' target as a better default when\nimplemented.\n\nThere is no current intention to add in-tree AVR target specifications for other\nAVR microcontrollers - this one can serve as a reference implementation\nfor other devices via `rustc --print target-spec-json\navr-unknown-gnu-atmega328p`.\n\nThere should be no users of the existing 'avr-unknown-unknown' Rust\ntarget as a custom target specification JSON has always been\nrecommended, and the avr-unknown-unknown target could never pass the\nlinking step anyway.", "tree": {"sha": "22e7df94cf482731bf01ee64e6a338a4b3df8b2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22e7df94cf482731bf01ee64e6a338a4b3df8b2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d785f9ba76be199a47652f5841260a42390f611b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d785f9ba76be199a47652f5841260a42390f611b", "html_url": "https://github.com/rust-lang/rust/commit/d785f9ba76be199a47652f5841260a42390f611b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d785f9ba76be199a47652f5841260a42390f611b/comments", "author": {"login": "dylanmckay", "id": 7722159, "node_id": "MDQ6VXNlcjc3MjIxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7722159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanmckay", "html_url": "https://github.com/dylanmckay", "followers_url": "https://api.github.com/users/dylanmckay/followers", "following_url": "https://api.github.com/users/dylanmckay/following{/other_user}", "gists_url": "https://api.github.com/users/dylanmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanmckay/subscriptions", "organizations_url": "https://api.github.com/users/dylanmckay/orgs", "repos_url": "https://api.github.com/users/dylanmckay/repos", "events_url": "https://api.github.com/users/dylanmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanmckay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dylanmckay", "id": 7722159, "node_id": "MDQ6VXNlcjc3MjIxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7722159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanmckay", "html_url": "https://github.com/dylanmckay", "followers_url": "https://api.github.com/users/dylanmckay/followers", "following_url": "https://api.github.com/users/dylanmckay/following{/other_user}", "gists_url": "https://api.github.com/users/dylanmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanmckay/subscriptions", "organizations_url": "https://api.github.com/users/dylanmckay/orgs", "repos_url": "https://api.github.com/users/dylanmckay/repos", "events_url": "https://api.github.com/users/dylanmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanmckay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4b6d9411f939c1ad7b3521b907fa101f3360462", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b6d9411f939c1ad7b3521b907fa101f3360462", "html_url": "https://github.com/rust-lang/rust/commit/c4b6d9411f939c1ad7b3521b907fa101f3360462"}], "stats": {"total": 59, "additions": 41, "deletions": 18}, "files": [{"sha": "5fcaaaacbeed9e17ab8b9e161cc1c99e9a7e6617", "filename": "src/librustc_target/spec/avr_gnu_base.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d785f9ba76be199a47652f5841260a42390f611b/src%2Flibrustc_target%2Fspec%2Favr_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d785f9ba76be199a47652f5841260a42390f611b/src%2Flibrustc_target%2Fspec%2Favr_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Favr_gnu_base.rs?ref=d785f9ba76be199a47652f5841260a42390f611b", "patch": "@@ -0,0 +1,34 @@\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+\n+/// A base target for AVR devices using the GNU toolchain.\n+///\n+/// Requires GNU avr-gcc and avr-binutils on the host system.\n+pub fn target(target_cpu: String) -> TargetResult {\n+    Ok(Target {\n+        arch: \"avr\".to_string(),\n+        data_layout: \"e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8\".to_string(),\n+        llvm_target: \"avr-unknown-unknown\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"16\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        target_os: \"unknown\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        target_c_int_width: 16.to_string(),\n+        options: TargetOptions {\n+            cpu: target_cpu.clone(),\n+            exe_suffix: \".elf\".to_string(),\n+            linker: Some(\"avr-gcc\".to_owned()),\n+            pre_link_args: vec![(\n+                LinkerFlavor::Gcc,\n+                vec![\"-Os\".to_owned(), format!(\"-mmcu={}\", target_cpu)],\n+            )]\n+            .into_iter()\n+            .collect(),\n+            late_link_args: vec![(LinkerFlavor::Gcc, vec![\"-lc\".to_owned(), \"-lgcc\".to_owned()])]\n+                .into_iter()\n+                .collect(),\n+            ..super::freestanding_base::opts()\n+        },\n+    })\n+}"}, {"sha": "5d22598b57b87fa05c18359237c9a5c650af1e6b", "filename": "src/librustc_target/spec/avr_unknown_gnu_atmega328.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d785f9ba76be199a47652f5841260a42390f611b/src%2Flibrustc_target%2Fspec%2Favr_unknown_gnu_atmega328.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d785f9ba76be199a47652f5841260a42390f611b/src%2Flibrustc_target%2Fspec%2Favr_unknown_gnu_atmega328.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Favr_unknown_gnu_atmega328.rs?ref=d785f9ba76be199a47652f5841260a42390f611b", "patch": "@@ -0,0 +1,5 @@\n+use crate::spec::TargetResult;\n+\n+pub fn target() -> TargetResult {\n+    super::avr_gnu_base::target(\"atmega328\".to_owned())\n+}"}, {"sha": "f90a8def0aa2f8699086d546426f3e3d0d697f2a", "filename": "src/librustc_target/spec/avr_unknown_unknown.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c4b6d9411f939c1ad7b3521b907fa101f3360462/src%2Flibrustc_target%2Fspec%2Favr_unknown_unknown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b6d9411f939c1ad7b3521b907fa101f3360462/src%2Flibrustc_target%2Fspec%2Favr_unknown_unknown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Favr_unknown_unknown.rs?ref=c4b6d9411f939c1ad7b3521b907fa101f3360462", "patch": "@@ -1,17 +0,0 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n-\n-pub fn target() -> TargetResult {\n-    Ok(Target {\n-        llvm_target: \"avr-unknown-unknown\".to_string(),\n-        target_endian: \"little\".to_string(),\n-        target_pointer_width: \"16\".to_string(),\n-        data_layout: \"e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8\".to_string(),\n-        arch: \"avr\".to_string(),\n-        linker_flavor: LinkerFlavor::Gcc,\n-        target_os: \"unknown\".to_string(),\n-        target_env: \"\".to_string(),\n-        target_vendor: \"unknown\".to_string(),\n-        target_c_int_width: 16.to_string(),\n-        options: super::freestanding_base::opts(),\n-    })\n-}"}, {"sha": "b16351c063a4fb166139694c8d32544cab214195", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d785f9ba76be199a47652f5841260a42390f611b/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d785f9ba76be199a47652f5841260a42390f611b/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=d785f9ba76be199a47652f5841260a42390f611b", "patch": "@@ -51,6 +51,7 @@ mod android_base;\n mod apple_base;\n mod apple_sdk_base;\n mod arm_base;\n+mod avr_gnu_base;\n mod cloudabi_base;\n mod dragonfly_base;\n mod freebsd_base;\n@@ -581,7 +582,7 @@ supported_targets! {\n     (\"aarch64-fuchsia\", aarch64_fuchsia),\n     (\"x86_64-fuchsia\", x86_64_fuchsia),\n \n-    (\"avr-unknown-unknown\", avr_unknown_unknown),\n+    (\"avr-unknown-gnu-atmega328\", avr_unknown_gnu_atmega328),\n \n     (\"x86_64-unknown-l4re-uclibc\", x86_64_unknown_l4re_uclibc),\n "}]}