{"sha": "4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MzhlOGEzYjQ1MzlmZmM3ZmViOWJmYTJlMmM3MmIwMGM1NWYwYjU=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-22T07:18:45Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-22T07:18:45Z"}, "message": "Merge pull request #344 from Manishearth/reflet\n\nHandle let ref in toplevel_ref_arg as well", "tree": {"sha": "f0dbc9411cbed3d175e82bccdd06567a11bf8985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0dbc9411cbed3d175e82bccdd06567a11bf8985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "html_url": "https://github.com/rust-lang/rust/commit/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf4e48d148812e4d84b93e5149e1a3a928f3d637", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf4e48d148812e4d84b93e5149e1a3a928f3d637", "html_url": "https://github.com/rust-lang/rust/commit/cf4e48d148812e4d84b93e5149e1a3a928f3d637"}, {"sha": "3609a2211a1cdb27c77f139108b25f9c9d3613f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3609a2211a1cdb27c77f139108b25f9c9d3613f9", "html_url": "https://github.com/rust-lang/rust/commit/3609a2211a1cdb27c77f139108b25f9c9d3613f9"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "e15ed7e8fce0fe76a5d2a43f320c08dc213c418a", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "patch": "@@ -9,7 +9,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n There are 58 lints included in this crate:\n \n name                                                                                                   | default | meaning\n--------------------------------------------------------------------------------------------------------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n+-------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n [approx_constant](https://github.com/Manishearth/rust-clippy/wiki#approx_constant)                     | warn    | the approximate of a known float constant (in `std::f64::consts` or `std::f32::consts`) is found; suggests to use the constant\n [bad_bit_mask](https://github.com/Manishearth/rust-clippy/wiki#bad_bit_mask)                           | warn    | expressions of the form `_ & mask == select` that will only ever return `true` or `false` (because in the example `select` containing bits that `mask` doesn't have)\n [box_vec](https://github.com/Manishearth/rust-clippy/wiki#box_vec)                                     | warn    | usage of `Box<Vec<T>>`, vector elements are already on the heap\n@@ -59,7 +59,7 @@ name\n [string_add](https://github.com/Manishearth/rust-clippy/wiki#string_add)                               | allow   | using `x + ..` where x is a `String`; suggests using `push_str()` instead\n [string_add_assign](https://github.com/Manishearth/rust-clippy/wiki#string_add_assign)                 | allow   | using `x = x + ..` where x is a `String`; suggests using `push_str()` instead\n [string_to_string](https://github.com/Manishearth/rust-clippy/wiki#string_to_string)                   | warn    | calling `String.to_string()` which is a no-op\n-[toplevel_ref_arg](https://github.com/Manishearth/rust-clippy/wiki#toplevel_ref_arg)                   | warn    | a function argument is declared `ref` (i.e. `fn foo(ref x: u8)`, but not `fn foo((ref x, ref y): (u8, u8))`)\n+[toplevel_ref_arg](https://github.com/Manishearth/rust-clippy/wiki#toplevel_ref_arg)                   | warn    | An entire binding was declared as `ref`, in a function argument (`fn foo(ref x: Bar)`), or a `let` statement (`let ref x = foo()`). In such cases, it is preferred to take references with `&`.\n [type_complexity](https://github.com/Manishearth/rust-clippy/wiki#type_complexity)                     | warn    | usage of very complex types; recommends factoring out parts into `type` definitions\n [unicode_not_nfc](https://github.com/Manishearth/rust-clippy/wiki#unicode_not_nfc)                     | allow   | using a unicode literal not in NFC normal form (see http://www.unicode.org/reports/tr15/ for further information)\n [unit_cmp](https://github.com/Manishearth/rust-clippy/wiki#unit_cmp)                                   | warn    | comparing unit values (which is always `true` or `false`, respectively)"}, {"sha": "c18c483bcbaf9765be6de6b444f4507858bc4bb0", "filename": "src/misc.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "patch": "@@ -8,11 +8,13 @@ use rustc_front::visit::FnKind;\n use rustc::middle::ty;\n \n use utils::{get_item_name, match_path, snippet, span_lint, walk_ptrs_ty, is_integer_literal};\n+use utils::span_help_and_lint;\n use consts::constant;\n \n declare_lint!(pub TOPLEVEL_REF_ARG, Warn,\n-              \"a function argument is declared `ref` (i.e. `fn foo(ref x: u8)`, but not \\\n-               `fn foo((ref x, ref y): (u8, u8))`)\");\n+              \"An entire binding was declared as `ref`, in a function argument (`fn foo(ref x: Bar)`), \\\n+               or a `let` statement (`let ref x = foo()`). In such cases, it is preferred to take \\\n+               references with `&`.\");\n \n #[allow(missing_copy_implementations)]\n pub struct TopLevelRefPass;\n@@ -39,6 +41,29 @@ impl LateLintPass for TopLevelRefPass {\n             }\n         }\n     }\n+    fn check_stmt(&mut self, cx: &LateContext, s: &Stmt) {\n+        if_let_chain! {\n+            [\n+            let StmtDecl(ref d, _) = s.node,\n+            let DeclLocal(ref l) = d.node,\n+            let PatIdent(BindByRef(_), i, None) = l.pat.node,\n+            let Some(ref init) = l.init\n+            ], {\n+                let tyopt = if let Some(ref ty) = l.ty {\n+                    format!(\": {:?} \", ty)\n+                } else {\n+                    \"\".to_owned()\n+                };\n+                span_help_and_lint(cx,\n+                    TOPLEVEL_REF_ARG,\n+                    l.pat.span,\n+                    \"`ref` on an entire `let` pattern is discouraged, take a reference with & instead\",\n+                    &format!(\"try `let {} {}= &{};`\", snippet(cx, i.span, \"_\"),\n+                             tyopt, snippet(cx, init.span, \"_\"))\n+                );\n+            }\n+        };\n+    }\n }\n \n declare_lint!(pub CMP_NAN, Deny,"}, {"sha": "f25a5fa3fa4a574b12e7a5267c2d655612f09710", "filename": "tests/compile-fail/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/tests%2Fcompile-fail%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/tests%2Fcompile-fail%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmatches.rs?ref=4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "patch": "@@ -40,7 +40,7 @@ fn single_match(){\n \n fn ref_pats() {\n     {\n-        let ref v = Some(0);\n+        let v = &Some(0);\n         match v {  //~ERROR instead of prefixing all patterns with `&`\n             &Some(v) => println!(\"{:?}\", v),\n             &None => println!(\"none\"),\n@@ -50,7 +50,7 @@ fn ref_pats() {\n             other => println!(\"other\"),\n         }\n     }\n-    let ref tup = (1, 2);\n+    let tup =& (1, 2);\n     match tup {  //~ERROR instead of prefixing all patterns with `&`\n         &(v, 1) => println!(\"{}\", v),\n         _ => println!(\"none\"),"}, {"sha": "05ad1af0034e63ed7898299e64a5de5f5d54ad07", "filename": "tests/compile-fail/toplevel_ref_arg.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/tests%2Fcompile-fail%2Ftoplevel_ref_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5/tests%2Fcompile-fail%2Ftoplevel_ref_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ftoplevel_ref_arg.rs?ref=4838e8a3b4539ffc7feb9bfa2e2c72b00c55f0b5", "patch": "@@ -14,5 +14,13 @@ fn main() {\n   // Closures should not warn\n   let y = |ref x| { println!(\"{:?}\", x) };\n   y(1u8);\n+\n+  let ref x = 1; //~ ERROR `ref` on an entire `let` pattern is discouraged\n+                 //~^ HELP try `let x = &1;`\n+\n+  let ref y = (&1, 2); //~ ERROR `ref` on an entire `let` pattern is discouraged\n+                 //~^ HELP try `let y = &(&1, 2);`\n+\n+  let (ref x, _) = (1,2); // okay, not top level\n   println!(\"The answer is {}.\", x);\n }"}]}