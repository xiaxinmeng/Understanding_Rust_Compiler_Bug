{"sha": "95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "node_id": "C_kwDOAAsO6NoAKDk1MDQwYTcwZDcwOThiMjA4YWEzMWE3ZWM4NmYxNWQ4YmY0ZjBkYzg", "commit": {"author": {"name": "Ryan Lopopolo", "email": "rjl@hyperbo.la", "date": "2022-09-25T16:52:44Z"}, "committer": {"name": "Ryan Lopopolo", "email": "rjl@hyperbo.la", "date": "2022-10-15T19:02:13Z"}, "message": "Stabilize `duration_checked_float`\n\nTracking issue:\n\n- https://github.com/rust-lang/rust/issues/83400", "tree": {"sha": "776968e320723cd0bea0445c10b8f2dce705bf97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/776968e320723cd0bea0445c10b8f2dce705bf97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEtUt7P6UGaZlFry5uRgR9c5tq4LEFAmNLA7UACgkQRgR9c5tq\n4LGUGg//exRsRejsVdt5bbvMx74avtoZ8+BJ5Ym6IbA6tnzTCavKetWGUfb/GUBG\nJkMFJ+GDCdzTFClqdwnyRG/QuJB0cGAn4LgzgwEZuKAGKjJa0nQPgd9XZKqwBHvu\nWnZ/hxSN9c0Ip30K66BVMYDQ7EgQCkl8B/pK19QUxeURrBiuQuWhAPoUrKqiuKqF\nVDQyXe7Z5yctcvZAZvieG7dmjeWiSw9NLCLVpSUOcu67dlmJQzt5ZzUfYO46FWHs\n9d6LbJoOSJT/zQANmdp+aj0ALSYWHH4oKVzZKgJA+CxEUKJgOH+WQENORUMwFVOg\n62CQAa18xtsmvqbgrac9hERsqP1tbD8/CCkjbeMPFCj035/+SebJfm7r1MLRBfCm\nwLp1eSGCknz/K8biOgzv/slMkv0ZJm3xtM99iBxxIS3SgejSbNp8i3wNts8Hr1fG\n7VCBZKOMdNc4P5LH2mTBN8sCQeoHhmRdUWBIwJ0Wm5BwxA37+oC0BIgfLIsrjZqZ\nBgJNK6lXnGX0i9YguON8ubWIzAjN2wgZvKBn5n46XxoGmuRXJIYMUdqFAGdr83WI\nVCb4Wu9q3wb/3f2IvHng0wFj3bMNFBhLEB9IExrlffSvftUwYKc/dRkOW0M/UXJD\nRa+zuFWsp3FezRFic3NuEe9ioNZURZaKmkRD5txMjiilIaJaFVQ=\n=AHqG\n-----END PGP SIGNATURE-----", "payload": "tree 776968e320723cd0bea0445c10b8f2dce705bf97\nparent b8c35ca26b191bb9a9ac669a4b3f4d3d52d97fb1\nauthor Ryan Lopopolo <rjl@hyperbo.la> 1664124764 -0700\ncommitter Ryan Lopopolo <rjl@hyperbo.la> 1665860533 -0700\n\nStabilize `duration_checked_float`\n\nTracking issue:\n\n- https://github.com/rust-lang/rust/issues/83400\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "html_url": "https://github.com/rust-lang/rust/commit/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/comments", "author": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8c35ca26b191bb9a9ac669a4b3f4d3d52d97fb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8c35ca26b191bb9a9ac669a4b3f4d3d52d97fb1", "html_url": "https://github.com/rust-lang/rust/commit/b8c35ca26b191bb9a9ac669a4b3f4d3d52d97fb1"}], "stats": {"total": 47, "additions": 21, "deletions": 26}, "files": [{"sha": "89053060fbbea1f0ecc940ec1bf7be1760f04372", "filename": "library/core/src/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fcore%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fcore%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ferror.rs?ref=95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "patch": "@@ -493,8 +493,8 @@ impl Error for crate::char::ParseCharError {\n     }\n }\n \n-#[unstable(feature = \"duration_checked_float\", issue = \"83400\")]\n-impl Error for crate::time::FromFloatSecsError {}\n+#[stable(feature = \"duration_checked_float\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl Error for crate::time::TryFromFloatSecsError {}\n \n #[stable(feature = \"frombyteswithnulerror_impls\", since = \"1.17.0\")]\n impl Error for crate::ffi::FromBytesWithNulError {"}, {"sha": "37c3611d0a908956b9b92f77094da68f6e3aaf25", "filename": "library/core/src/time.rs", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fcore%2Fsrc%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fcore%2Fsrc%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftime.rs?ref=95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "patch": "@@ -1225,41 +1225,40 @@ impl fmt::Debug for Duration {\n /// # Example\n ///\n /// ```\n-/// #![feature(duration_checked_float)]\n /// use std::time::Duration;\n ///\n /// if let Err(e) = Duration::try_from_secs_f32(-1.0) {\n ///     println!(\"Failed conversion to Duration: {e}\");\n /// }\n /// ```\n #[derive(Debug, Clone, PartialEq, Eq)]\n-#[unstable(feature = \"duration_checked_float\", issue = \"83400\")]\n-pub struct FromFloatSecsError {\n-    kind: FromFloatSecsErrorKind,\n+#[stable(feature = \"duration_checked_float\", since = \"CURRENT_RUSTC_VERSION\")]\n+pub struct TryFromFloatSecsError {\n+    kind: TryFromFloatSecsErrorKind,\n }\n \n-impl FromFloatSecsError {\n+impl TryFromFloatSecsError {\n     const fn description(&self) -> &'static str {\n         match self.kind {\n-            FromFloatSecsErrorKind::Negative => {\n+            TryFromFloatSecsErrorKind::Negative => {\n                 \"can not convert float seconds to Duration: value is negative\"\n             }\n-            FromFloatSecsErrorKind::OverflowOrNan => {\n+            TryFromFloatSecsErrorKind::OverflowOrNan => {\n                 \"can not convert float seconds to Duration: value is either too big or NaN\"\n             }\n         }\n     }\n }\n \n-#[unstable(feature = \"duration_checked_float\", issue = \"83400\")]\n-impl fmt::Display for FromFloatSecsError {\n+#[stable(feature = \"duration_checked_float\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl fmt::Display for TryFromFloatSecsError {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         self.description().fmt(f)\n     }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n-enum FromFloatSecsErrorKind {\n+enum TryFromFloatSecsErrorKind {\n     // Value is negative.\n     Negative,\n     // Value is either too big to be represented as `Duration` or `NaN`.\n@@ -1280,7 +1279,7 @@ macro_rules! try_from_secs {\n         const EXP_MASK: $bits_ty = (1 << $exp_bits) - 1;\n \n         if $secs < 0.0 {\n-            return Err(FromFloatSecsError { kind: FromFloatSecsErrorKind::Negative });\n+            return Err(TryFromFloatSecsError { kind: TryFromFloatSecsErrorKind::Negative });\n         }\n \n         let bits = $secs.to_bits();\n@@ -1339,7 +1338,7 @@ macro_rules! try_from_secs {\n             let secs = u64::from(mant) << (exp - $mant_bits);\n             (secs, 0)\n         } else {\n-            return Err(FromFloatSecsError { kind: FromFloatSecsErrorKind::OverflowOrNan });\n+            return Err(TryFromFloatSecsError { kind: TryFromFloatSecsErrorKind::OverflowOrNan });\n         };\n \n         Ok(Duration::new(secs, nanos))\n@@ -1355,8 +1354,6 @@ impl Duration {\n     ///\n     /// # Examples\n     /// ```\n-    /// #![feature(duration_checked_float)]\n-    ///\n     /// use std::time::Duration;\n     ///\n     /// let res = Duration::try_from_secs_f32(0.0);\n@@ -1404,9 +1401,10 @@ impl Duration {\n     /// let res = Duration::try_from_secs_f32(val);\n     /// assert_eq!(res, Ok(Duration::new(1, 2_929_688)));\n     /// ```\n-    #[unstable(feature = \"duration_checked_float\", issue = \"83400\")]\n+    #[stable(feature = \"duration_checked_float\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_unstable(feature = \"duration_consts_float\", issue = \"72440\")]\n     #[inline]\n-    pub const fn try_from_secs_f32(secs: f32) -> Result<Duration, FromFloatSecsError> {\n+    pub const fn try_from_secs_f32(secs: f32) -> Result<Duration, TryFromFloatSecsError> {\n         try_from_secs!(\n             secs = secs,\n             mantissa_bits = 23,\n@@ -1425,8 +1423,6 @@ impl Duration {\n     ///\n     /// # Examples\n     /// ```\n-    /// #![feature(duration_checked_float)]\n-    ///\n     /// use std::time::Duration;\n     ///\n     /// let res = Duration::try_from_secs_f64(0.0);\n@@ -1482,9 +1478,10 @@ impl Duration {\n     /// let res = Duration::try_from_secs_f64(val);\n     /// assert_eq!(res, Ok(Duration::new(1, 2_929_688)));\n     /// ```\n-    #[unstable(feature = \"duration_checked_float\", issue = \"83400\")]\n+    #[stable(feature = \"duration_checked_float\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_unstable(feature = \"duration_consts_float\", issue = \"72440\")]\n     #[inline]\n-    pub const fn try_from_secs_f64(secs: f64) -> Result<Duration, FromFloatSecsError> {\n+    pub const fn try_from_secs_f64(secs: f64) -> Result<Duration, TryFromFloatSecsError> {\n         try_from_secs!(\n             secs = secs,\n             mantissa_bits = 52,"}, {"sha": "a698e6e99e10c1657117d94db02200ddd65be872", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "patch": "@@ -103,7 +103,6 @@\n #![feature(provide_any)]\n #![feature(utf8_chunks)]\n #![feature(is_ascii_octdigit)]\n-#![feature(duration_checked_float)]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n extern crate test;"}, {"sha": "385585dada896fd6819a5365a27d1ced963fe6fc", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "patch": "@@ -280,7 +280,6 @@\n #![feature(core_intrinsics)]\n #![feature(cstr_from_bytes_until_nul)]\n #![feature(cstr_internals)]\n-#![feature(duration_checked_float)]\n #![feature(duration_constants)]\n #![feature(error_generic_member_access)]\n #![feature(error_in_core)]"}, {"sha": "c7c413da06041c6c5e650062e6091b0bfc7373d9", "filename": "library/std/src/time.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fstd%2Fsrc%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95040a70d7098b208aa31a7ec86f15d8bf4f0dc8/library%2Fstd%2Fsrc%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime.rs?ref=95040a70d7098b208aa31a7ec86f15d8bf4f0dc8", "patch": "@@ -43,8 +43,8 @@ use crate::sys_common::{FromInner, IntoInner};\n #[stable(feature = \"time\", since = \"1.3.0\")]\n pub use core::time::Duration;\n \n-#[unstable(feature = \"duration_checked_float\", issue = \"83400\")]\n-pub use core::time::FromFloatSecsError;\n+#[stable(feature = \"duration_checked_float\", since = \"CURRENT_RUSTC_VERSION\")]\n+pub use core::time::TryFromFloatSecsError;\n \n /// A measurement of a monotonically nondecreasing clock.\n /// Opaque and useful only with [`Duration`]."}]}