{"sha": "2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273", "node_id": "C_kwDOAAsO6NoAKDJhYTAyOGQzMGQxZTU5YzNjNGJmOWM1YmYzMWU5ZDlmOGVjODAyNzM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-28T03:55:00Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-28T21:05:34Z"}, "message": "Inline `<Token as PartialEq<TokenKind>>::eq`.", "tree": {"sha": "cc052669787d64eb7a8fd833b15a6c16e09c62c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc052669787d64eb7a8fd833b15a6c16e09c62c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273", "html_url": "https://github.com/rust-lang/rust/commit/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "307dd938d7937c93dc7a880e81a2383b82f30ad0", "url": "https://api.github.com/repos/rust-lang/rust/commits/307dd938d7937c93dc7a880e81a2383b82f30ad0", "html_url": "https://github.com/rust-lang/rust/commit/307dd938d7937c93dc7a880e81a2383b82f30ad0"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "96089d36b6f92353a6ed4b6eae116f010173eca7", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273", "patch": "@@ -728,6 +728,7 @@ impl Token {\n }\n \n impl PartialEq<TokenKind> for Token {\n+    #[inline]\n     fn eq(&self, rhs: &TokenKind) -> bool {\n         self.kind == *rhs\n     }"}]}