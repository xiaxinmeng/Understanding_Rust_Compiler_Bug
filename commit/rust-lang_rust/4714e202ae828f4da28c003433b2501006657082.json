{"sha": "4714e202ae828f4da28c003433b2501006657082", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MTRlMjAyYWU4MjhmNGRhMjhjMDAzNDMzYjI1MDEwMDY2NTcwODI=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-09T10:58:36Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-13T20:39:10Z"}, "message": "bless mir opt tests", "tree": {"sha": "4673543d1a8c9f6795791af85e51a2b7e31b9d4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4673543d1a8c9f6795791af85e51a2b7e31b9d4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4714e202ae828f4da28c003433b2501006657082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4714e202ae828f4da28c003433b2501006657082", "html_url": "https://github.com/rust-lang/rust/commit/4714e202ae828f4da28c003433b2501006657082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4714e202ae828f4da28c003433b2501006657082/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db83fdc46c9d866578de418f17461593f829988c", "url": "https://api.github.com/repos/rust-lang/rust/commits/db83fdc46c9d866578de418f17461593f829988c", "html_url": "https://github.com/rust-lang/rust/commit/db83fdc46c9d866578de418f17461593f829988c"}], "stats": {"total": 887, "additions": 730, "deletions": 157}, "files": [{"sha": "d0b5c401beabaaedfde007cbf1a24021085ad42e", "filename": "src/test/mir-opt/address-of/rustc.address_of_reborrow.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Faddress-of%2Frustc.address_of_reborrow.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Faddress-of%2Frustc.address_of_reborrow.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Faddress-of%2Frustc.address_of_reborrow.SimplifyCfg-initial.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -298,7 +298,13 @@ fn address_of_reborrow() -> () {\n         StorageDead(_48);                // bb0[157]: scope 13 at $DIR/address-of.rs:36:25: 36:26\n         FakeRead(ForLet, _47);           // bb0[158]: scope 13 at $DIR/address-of.rs:36:9: 36:10\n         AscribeUserType(_47, o, UserTypeProjection { base: UserType(29), projs: [] }); // bb0[159]: scope 13 at $DIR/address-of.rs:36:12: 36:22\n-        _0 = ();                         // bb0[160]: scope 0 at $DIR/address-of.rs:3:26: 37:2\n+        _0 = const ();                   // bb0[160]: scope 0 at $DIR/address-of.rs:3:26: 37:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/address-of.rs:3:26: 37:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_47);                // bb0[161]: scope 13 at $DIR/address-of.rs:37:1: 37:2\n         StorageDead(_45);                // bb0[162]: scope 12 at $DIR/address-of.rs:37:1: 37:2\n         StorageDead(_44);                // bb0[163]: scope 11 at $DIR/address-of.rs:37:1: 37:2"}, {"sha": "0ed76f230fda22beeba9ffd1ec931750531891e3", "filename": "src/test/mir-opt/address-of/rustc.borrow_and_cast.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Faddress-of%2Frustc.borrow_and_cast.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Faddress-of%2Frustc.borrow_and_cast.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Faddress-of%2Frustc.borrow_and_cast.SimplifyCfg-initial.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -38,7 +38,13 @@ fn borrow_and_cast(_1: i32) -> () {\n         _6 = &raw mut (*_7);             // bb0[15]: scope 2 at $DIR/address-of.rs:44:13: 44:19\n         FakeRead(ForLet, _6);            // bb0[16]: scope 2 at $DIR/address-of.rs:44:9: 44:10\n         StorageDead(_7);                 // bb0[17]: scope 2 at $DIR/address-of.rs:44:31: 44:32\n-        _0 = ();                         // bb0[18]: scope 0 at $DIR/address-of.rs:41:32: 45:2\n+        _0 = const ();                   // bb0[18]: scope 0 at $DIR/address-of.rs:41:32: 45:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/address-of.rs:41:32: 45:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_6);                 // bb0[19]: scope 2 at $DIR/address-of.rs:45:1: 45:2\n         StorageDead(_4);                 // bb0[20]: scope 1 at $DIR/address-of.rs:45:1: 45:2\n         StorageDead(_2);                 // bb0[21]: scope 0 at $DIR/address-of.rs:45:1: 45:2"}, {"sha": "c75acef2a27b0d8a33367bf4f11d8e95a58aa57a", "filename": "src/test/mir-opt/array-index-is-temporary/64bit/rustc.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -82,7 +82,13 @@ fn main() -> () {\n         _1[_7] = move _5;                // bb2[0]: scope 3 at $DIR/array-index-is-temporary.rs:16:5: 16:29\n         StorageDead(_5);                 // bb2[1]: scope 3 at $DIR/array-index-is-temporary.rs:16:28: 16:29\n         StorageDead(_7);                 // bb2[2]: scope 3 at $DIR/array-index-is-temporary.rs:16:29: 16:30\n-        _0 = ();                         // bb2[3]: scope 0 at $DIR/array-index-is-temporary.rs:12:11: 17:2\n+        _0 = const ();                   // bb2[3]: scope 0 at $DIR/array-index-is-temporary.rs:12:11: 17:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/array-index-is-temporary.rs:12:11: 17:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_3);                 // bb2[4]: scope 2 at $DIR/array-index-is-temporary.rs:17:1: 17:2\n         StorageDead(_2);                 // bb2[5]: scope 1 at $DIR/array-index-is-temporary.rs:17:1: 17:2\n         StorageDead(_1);                 // bb2[6]: scope 0 at $DIR/array-index-is-temporary.rs:17:1: 17:2"}, {"sha": "86ee1be6f7404644aabf327f18270e686c50f441", "filename": "src/test/mir-opt/basic_assignment/rustc.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fbasic_assignment%2Frustc.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fbasic_assignment%2Frustc.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbasic_assignment%2Frustc.main.SimplifyCfg-initial.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -72,7 +72,13 @@ fn main() -> () {\n \n     bb6: {\n         StorageDead(_6);                 // bb6[0]: scope 4 at $DIR/basic_assignment.rs:23:19: 23:20\n-        _0 = ();                         // bb6[1]: scope 0 at $DIR/basic_assignment.rs:10:11: 24:2\n+        _0 = const ();                   // bb6[1]: scope 0 at $DIR/basic_assignment.rs:10:11: 24:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/basic_assignment.rs:10:11: 24:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         drop(_5) -> [return: bb7, unwind: bb3]; // bb6[2]: scope 3 at $DIR/basic_assignment.rs:24:1: 24:2\n     }\n "}, {"sha": "aef0da9d6f09857e5ecd02938b9fe7cf075eda46", "filename": "src/test/mir-opt/box_expr/rustc.main.ElaborateDrops.before.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fbox_expr%2Frustc.main.ElaborateDrops.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fbox_expr%2Frustc.main.ElaborateDrops.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbox_expr%2Frustc.main.ElaborateDrops.before.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -53,7 +53,13 @@ fn main() -> () {\n     bb5: {\n         StorageDead(_4);                 // bb5[0]: scope 1 at $DIR/box_expr.rs:8:11: 8:12\n         StorageDead(_3);                 // bb5[1]: scope 1 at $DIR/box_expr.rs:8:12: 8:13\n-        _0 = ();                         // bb5[2]: scope 0 at $DIR/box_expr.rs:6:11: 9:2\n+        _0 = const ();                   // bb5[2]: scope 0 at $DIR/box_expr.rs:6:11: 9:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/box_expr.rs:6:11: 9:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         drop(_1) -> bb8;                 // bb5[3]: scope 0 at $DIR/box_expr.rs:9:1: 9:2\n     }\n "}, {"sha": "84f4e5bfd633e0850c828df5d76b7106ea8b3af5", "filename": "src/test/mir-opt/byte_slice/rustc.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fbyte_slice%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fbyte_slice%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbyte_slice%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -34,7 +34,13 @@ fn main() -> () {\n                                          // mir::Constant\n                                          // + span: $DIR/byte_slice.rs:6:19: 6:23\n                                          // + literal: Const { ty: u8, val: Value(Scalar(0x78)) }\n-        _0 = ();                         // bb0[4]: scope 0 at $DIR/byte_slice.rs:4:11: 7:2\n+        _0 = const ();                   // bb0[4]: scope 0 at $DIR/byte_slice.rs:4:11: 7:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/byte_slice.rs:4:11: 7:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_2);                 // bb0[5]: scope 1 at $DIR/byte_slice.rs:7:1: 7:2\n         StorageDead(_1);                 // bb0[6]: scope 0 at $DIR/byte_slice.rs:7:1: 7:2\n         return;                          // bb0[7]: scope 0 at $DIR/byte_slice.rs:7:2: 7:2"}, {"sha": "d6cca185ab0f7d237c8c449ba096c9b0dacd2193", "filename": "src/test/mir-opt/const_allocation/64bit/rustc.main.ConstProp.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_allocation%2F64bit%2Frustc.main.ConstProp.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_allocation%2F64bit%2Frustc.main.ConstProp.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_allocation%2F64bit%2Frustc.main.ConstProp.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -18,7 +18,13 @@ fn main() -> () {\n         _1 = (*_2);                      // bb0[3]: scope 0 at $DIR/const_allocation.rs:8:5: 8:8\n         StorageDead(_2);                 // bb0[4]: scope 0 at $DIR/const_allocation.rs:8:8: 8:9\n         StorageDead(_1);                 // bb0[5]: scope 0 at $DIR/const_allocation.rs:8:8: 8:9\n-        _0 = ();                         // bb0[6]: scope 0 at $DIR/const_allocation.rs:7:11: 9:2\n+        _0 = const ();                   // bb0[6]: scope 0 at $DIR/const_allocation.rs:7:11: 9:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/const_allocation.rs:7:11: 9:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb0[7]: scope 0 at $DIR/const_allocation.rs:9:2: 9:2\n     }\n }"}, {"sha": "e61f0a8b69fa72b420194cc9368fda4721081ddb", "filename": "src/test/mir-opt/const_allocation2/64bit/rustc.main.ConstProp.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_allocation2%2F64bit%2Frustc.main.ConstProp.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_allocation2%2F64bit%2Frustc.main.ConstProp.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_allocation2%2F64bit%2Frustc.main.ConstProp.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -18,7 +18,13 @@ fn main() -> () {\n         _1 = (*_2);                      // bb0[3]: scope 0 at $DIR/const_allocation2.rs:5:5: 5:8\n         StorageDead(_2);                 // bb0[4]: scope 0 at $DIR/const_allocation2.rs:5:8: 5:9\n         StorageDead(_1);                 // bb0[5]: scope 0 at $DIR/const_allocation2.rs:5:8: 5:9\n-        _0 = ();                         // bb0[6]: scope 0 at $DIR/const_allocation2.rs:4:11: 6:2\n+        _0 = const ();                   // bb0[6]: scope 0 at $DIR/const_allocation2.rs:4:11: 6:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/const_allocation2.rs:4:11: 6:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb0[7]: scope 0 at $DIR/const_allocation2.rs:6:2: 6:2\n     }\n }"}, {"sha": "952fe8336cd0ea6a43484b3cb3c50228a7f1f816", "filename": "src/test/mir-opt/const_allocation3/64bit/rustc.main.ConstProp.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_allocation3%2F64bit%2Frustc.main.ConstProp.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_allocation3%2F64bit%2Frustc.main.ConstProp.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_allocation3%2F64bit%2Frustc.main.ConstProp.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -18,7 +18,13 @@ fn main() -> () {\n         _1 = (*_2);                      // bb0[3]: scope 0 at $DIR/const_allocation3.rs:5:5: 5:8\n         StorageDead(_2);                 // bb0[4]: scope 0 at $DIR/const_allocation3.rs:5:8: 5:9\n         StorageDead(_1);                 // bb0[5]: scope 0 at $DIR/const_allocation3.rs:5:8: 5:9\n-        _0 = ();                         // bb0[6]: scope 0 at $DIR/const_allocation3.rs:4:11: 6:2\n+        _0 = const ();                   // bb0[6]: scope 0 at $DIR/const_allocation3.rs:4:11: 6:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/const_allocation3.rs:4:11: 6:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb0[7]: scope 0 at $DIR/const_allocation3.rs:6:2: 6:2\n     }\n }"}, {"sha": "50e6cfc37eea3adf31dccaa3071aaf673a0034e9", "filename": "src/test/mir-opt/const_prop/aggregate/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Faggregate%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -54,7 +54,13 @@\n +                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n           StorageDead(_2);                 // bb0[6]: scope 0 at $DIR/aggregate.rs:5:27: 5:28\n           StorageDead(_3);                 // bb0[7]: scope 0 at $DIR/aggregate.rs:5:28: 5:29\n-          _0 = ();                         // bb0[8]: scope 0 at $DIR/aggregate.rs:4:11: 6:2\n+          _0 = const ();                   // bb0[8]: scope 0 at $DIR/aggregate.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/aggregate.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb0[9]: scope 0 at $DIR/aggregate.rs:6:1: 6:2\n           return;                          // bb0[10]: scope 0 at $DIR/aggregate.rs:6:2: 6:2\n       }"}, {"sha": "b3d353bd48780f5bc674e4b4791ca6067b437eb6", "filename": "src/test/mir-opt/const_prop/array_index/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F64bit%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -84,7 +84,13 @@\n +                                          // + literal: Const { ty: u32, val: Value(Scalar(0x00000002)) }\n           StorageDead(_3);                 // bb1[1]: scope 0 at $DIR/array_index.rs:5:33: 5:34\n           StorageDead(_2);                 // bb1[2]: scope 0 at $DIR/array_index.rs:5:33: 5:34\n-          _0 = ();                         // bb1[3]: scope 0 at $DIR/array_index.rs:4:11: 6:2\n+          _0 = const ();                   // bb1[3]: scope 0 at $DIR/array_index.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/array_index.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb1[4]: scope 0 at $DIR/array_index.rs:6:1: 6:2\n           return;                          // bb1[5]: scope 0 at $DIR/array_index.rs:6:2: 6:2\n       }"}, {"sha": "bf5aff0cf4699749d5139571c40715e0a8fe9c98", "filename": "src/test/mir-opt/const_prop/boxes/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboxes%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -44,7 +44,13 @@\n   \n       bb2: {\n           StorageDead(_3);                 // bb2[0]: scope 0 at $DIR/boxes.rs:12:26: 12:27\n-          _0 = ();                         // bb2[1]: scope 0 at $DIR/boxes.rs:11:11: 13:2\n+          _0 = const ();                   // bb2[1]: scope 0 at $DIR/boxes.rs:11:11: 13:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/boxes.rs:11:11: 13:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb2[2]: scope 0 at $DIR/boxes.rs:13:1: 13:2\n           return;                          // bb2[3]: scope 0 at $DIR/boxes.rs:13:2: 13:2\n       }"}, {"sha": "ca0a309b1b5df4b6b6660ad9b4a0eb2fd4627132", "filename": "src/test/mir-opt/const_prop/cast/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcast%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -39,7 +39,13 @@\n +                                          // mir::Constant\n +                                          // + span: $DIR/cast.rs:6:13: 6:24\n +                                          // + literal: Const { ty: u8, val: Value(Scalar(0x2a)) }\n-          _0 = ();                         // bb0[4]: scope 0 at $DIR/cast.rs:3:11: 7:2\n+          _0 = const ();                   // bb0[4]: scope 0 at $DIR/cast.rs:3:11: 7:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/cast.rs:3:11: 7:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_2);                 // bb0[5]: scope 1 at $DIR/cast.rs:7:1: 7:2\n           StorageDead(_1);                 // bb0[6]: scope 0 at $DIR/cast.rs:7:1: 7:2\n           return;                          // bb0[7]: scope 0 at $DIR/cast.rs:7:2: 7:2"}, {"sha": "762927575f0f3ebf8fa4e68d6d510bd7af86562e", "filename": "src/test/mir-opt/const_prop/checked_add/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -51,7 +51,13 @@\n +                                          // mir::Constant\n +                                          // + span: $DIR/checked_add.rs:5:18: 5:23\n +                                          // + literal: Const { ty: u32, val: Value(Scalar(0x00000002)) }\n-          _0 = ();                         // bb1[1]: scope 0 at $DIR/checked_add.rs:4:11: 6:2\n+          _0 = const ();                   // bb1[1]: scope 0 at $DIR/checked_add.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/checked_add.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb1[2]: scope 0 at $DIR/checked_add.rs:6:1: 6:2\n           return;                          // bb1[3]: scope 0 at $DIR/checked_add.rs:6:2: 6:2\n       }"}, {"sha": "d3a6105a8522540f8447f6fff675b5e8bafa23f0", "filename": "src/test/mir-opt/const_prop/const_prop_fails_gracefully/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fconst_prop_fails_gracefully%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -42,7 +42,13 @@\n       bb1: {\n           StorageDead(_5);                 // bb1[0]: scope 1 at $DIR/const_prop_fails_gracefully.rs:8:11: 8:12\n           StorageDead(_4);                 // bb1[1]: scope 1 at $DIR/const_prop_fails_gracefully.rs:8:12: 8:13\n-          _0 = ();                         // bb1[2]: scope 0 at $DIR/const_prop_fails_gracefully.rs:5:11: 9:2\n+          _0 = const ();                   // bb1[2]: scope 0 at $DIR/const_prop_fails_gracefully.rs:5:11: 9:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/const_prop_fails_gracefully.rs:5:11: 9:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb1[3]: scope 0 at $DIR/const_prop_fails_gracefully.rs:9:1: 9:2\n           return;                          // bb1[4]: scope 0 at $DIR/const_prop_fails_gracefully.rs:9:2: 9:2\n       }"}, {"sha": "cbda5e4ef864af880615ca2339c3dcb3a60ba8e3", "filename": "src/test/mir-opt/const_prop/control-flow-simplification/rustc.hello.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification%2Frustc.hello.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification%2Frustc.hello.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification%2Frustc.hello.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -29,7 +29,13 @@\n       }\n   \n       bb1: {\n-          _0 = ();                         // bb1[0]: scope 0 at $DIR/control-flow-simplification.rs:12:5: 14:6\n+          _0 = const ();                   // bb1[0]: scope 0 at $DIR/control-flow-simplification.rs:12:5: 14:6\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/control-flow-simplification.rs:12:5: 14:6\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb1[1]: scope 0 at $DIR/control-flow-simplification.rs:15:1: 15:2\n           return;                          // bb1[2]: scope 0 at $DIR/control-flow-simplification.rs:15:2: 15:2\n       }"}, {"sha": "73922b5666905437bf5e28555ff84f2aa6350507", "filename": "src/test/mir-opt/const_prop/control-flow-simplification/rustc.hello.PreCodegen.before.mir", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification%2Frustc.hello.PreCodegen.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification%2Frustc.hello.PreCodegen.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol-flow-simplification%2Frustc.hello.PreCodegen.before.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -4,6 +4,13 @@ fn hello() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/control-flow-simplification.rs:11:14: 11:14\n \n     bb0: {\n-        return;                          // bb0[0]: scope 0 at $DIR/control-flow-simplification.rs:15:2: 15:2\n+        _0 = const ();                   // bb0[0]: scope 0 at $DIR/control-flow-simplification.rs:12:5: 14:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/control-flow-simplification.rs:12:5: 14:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+        return;                          // bb0[1]: scope 0 at $DIR/control-flow-simplification.rs:15:2: 15:2\n     }\n }"}, {"sha": "06f43db50f486c6c62d70ece7b0b4a7e3d1ddc85", "filename": "src/test/mir-opt/const_prop/discriminant/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant%2F64bit%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -87,7 +87,13 @@\n                                            // + literal: Const { ty: i32, val: Value(Scalar(0x00000000)) }\n           StorageDead(_2);                 // bb4[1]: scope 0 at $DIR/discriminant.rs:6:67: 6:68\n           StorageDead(_3);                 // bb4[2]: scope 0 at $DIR/discriminant.rs:6:68: 6:69\n-          _0 = ();                         // bb4[3]: scope 0 at $DIR/discriminant.rs:5:11: 7:2\n+          _0 = const ();                   // bb4[3]: scope 0 at $DIR/discriminant.rs:5:11: 7:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/discriminant.rs:5:11: 7:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb4[4]: scope 0 at $DIR/discriminant.rs:7:1: 7:2\n           return;                          // bb4[5]: scope 0 at $DIR/discriminant.rs:7:2: 7:2\n       }"}, {"sha": "4c80d0d1278445a0c067b2d649c2f787e3d05cf2", "filename": "src/test/mir-opt/const_prop/indirect/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -62,7 +62,13 @@\n +                                          // + span: $DIR/indirect.rs:5:13: 5:29\n +                                          // + literal: Const { ty: u8, val: Value(Scalar(0x03)) }\n           StorageDead(_2);                 // bb1[1]: scope 0 at $DIR/indirect.rs:5:28: 5:29\n-          _0 = ();                         // bb1[2]: scope 0 at $DIR/indirect.rs:4:11: 6:2\n+          _0 = const ();                   // bb1[2]: scope 0 at $DIR/indirect.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/indirect.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb1[3]: scope 0 at $DIR/indirect.rs:6:1: 6:2\n           return;                          // bb1[4]: scope 0 at $DIR/indirect.rs:6:2: 6:2\n       }"}, {"sha": "76c6759f700adf2ab7fb1d0f81cbef1464755d6f", "filename": "src/test/mir-opt/const_prop/issue-66971/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -45,7 +45,13 @@\n       bb1: {\n           StorageDead(_2);                 // bb1[0]: scope 0 at $DIR/issue-66971.rs:16:22: 16:23\n           StorageDead(_1);                 // bb1[1]: scope 0 at $DIR/issue-66971.rs:16:23: 16:24\n-          _0 = ();                         // bb1[2]: scope 0 at $DIR/issue-66971.rs:15:11: 17:2\n+          _0 = const ();                   // bb1[2]: scope 0 at $DIR/issue-66971.rs:15:11: 17:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/issue-66971.rs:15:11: 17:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb1[3]: scope 0 at $DIR/issue-66971.rs:17:2: 17:2\n       }\n   }"}, {"sha": "05e1a615953aefa4b228b239d91e0275acf5eadd", "filename": "src/test/mir-opt/const_prop/issue-67019/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -40,7 +40,13 @@\n       bb1: {\n           StorageDead(_2);                 // bb1[0]: scope 0 at $DIR/issue-67019.rs:11:19: 11:20\n           StorageDead(_1);                 // bb1[1]: scope 0 at $DIR/issue-67019.rs:11:20: 11:21\n-          _0 = ();                         // bb1[2]: scope 0 at $DIR/issue-67019.rs:10:11: 12:2\n+          _0 = const ();                   // bb1[2]: scope 0 at $DIR/issue-67019.rs:10:11: 12:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/issue-67019.rs:10:11: 12:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb1[3]: scope 0 at $DIR/issue-67019.rs:12:2: 12:2\n       }\n   }"}, {"sha": "0097d9448c81f570140b86c16831941f731a3715", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable%2F64bit%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -171,7 +171,13 @@\n +                                          // + span: $DIR/optimizes_into_variable.rs:14:13: 14:38\n +                                          // + literal: Const { ty: u32, val: Value(Scalar(0x0000002a)) }\n           StorageDead(_9);                 // bb2[7]: scope 2 at $DIR/optimizes_into_variable.rs:14:38: 14:39\n-          _0 = ();                         // bb2[8]: scope 0 at $DIR/optimizes_into_variable.rs:11:11: 15:2\n+          _0 = const ();                   // bb2[8]: scope 0 at $DIR/optimizes_into_variable.rs:11:11: 15:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/optimizes_into_variable.rs:11:11: 15:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_8);                 // bb2[9]: scope 2 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n           StorageDead(_3);                 // bb2[10]: scope 1 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n           StorageDead(_1);                 // bb2[11]: scope 0 at $DIR/optimizes_into_variable.rs:15:1: 15:2"}, {"sha": "5e2a8af060be81e79387414b9fd58a1f34cc21b2", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable/64bit/rustc.main.SimplifyLocals.after.mir", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable%2F64bit%2Frustc.main.SimplifyLocals.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable%2F64bit%2Frustc.main.SimplifyLocals.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable%2F64bit%2Frustc.main.SimplifyLocals.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -80,9 +80,16 @@ fn main() -> () {\n                                          // mir::Constant\n                                          // + span: $DIR/optimizes_into_variable.rs:14:13: 14:38\n                                          // + literal: Const { ty: u32, val: Value(Scalar(0x0000002a)) }\n-        StorageDead(_4);                 // bb0[9]: scope 2 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n-        StorageDead(_2);                 // bb0[10]: scope 1 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n-        StorageDead(_1);                 // bb0[11]: scope 0 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n-        return;                          // bb0[12]: scope 0 at $DIR/optimizes_into_variable.rs:15:2: 15:2\n+        _0 = const ();                   // bb0[9]: scope 0 at $DIR/optimizes_into_variable.rs:11:11: 15:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/optimizes_into_variable.rs:11:11: 15:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+        StorageDead(_4);                 // bb0[10]: scope 2 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n+        StorageDead(_2);                 // bb0[11]: scope 1 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n+        StorageDead(_1);                 // bb0[12]: scope 0 at $DIR/optimizes_into_variable.rs:15:1: 15:2\n+        return;                          // bb0[13]: scope 0 at $DIR/optimizes_into_variable.rs:15:2: 15:2\n     }\n }"}, {"sha": "d9852539844c9742519bc933fa168834df0f9fa5", "filename": "src/test/mir-opt/const_prop/read_immutable_static/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fread_immutable_static%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -60,7 +60,13 @@\n           StorageDead(_2);                 // bb0[11]: scope 0 at $DIR/read_immutable_static.rs:7:21: 7:22\n           StorageDead(_5);                 // bb0[12]: scope 0 at $DIR/read_immutable_static.rs:7:22: 7:23\n           StorageDead(_3);                 // bb0[13]: scope 0 at $DIR/read_immutable_static.rs:7:22: 7:23\n-          _0 = ();                         // bb0[14]: scope 0 at $DIR/read_immutable_static.rs:6:11: 8:2\n+          _0 = const ();                   // bb0[14]: scope 0 at $DIR/read_immutable_static.rs:6:11: 8:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/read_immutable_static.rs:6:11: 8:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb0[15]: scope 0 at $DIR/read_immutable_static.rs:8:1: 8:2\n           return;                          // bb0[16]: scope 0 at $DIR/read_immutable_static.rs:8:2: 8:2\n       }"}, {"sha": "591fdaddfccd5b25142230355ae785ac0763d183", "filename": "src/test/mir-opt/const_prop/ref_deref/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -29,7 +29,13 @@\n +                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000004)) }\n           StorageDead(_2);                 // bb0[5]: scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n           StorageDead(_1);                 // bb0[6]: scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n-          _0 = ();                         // bb0[7]: scope 0 at $DIR/ref_deref.rs:4:11: 6:2\n+          _0 = const ();                   // bb0[7]: scope 0 at $DIR/ref_deref.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/ref_deref.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb0[8]: scope 0 at $DIR/ref_deref.rs:6:2: 6:2\n       }\n   }"}, {"sha": "5cd9f43a5c684014f788e1c79f290c1cd9be9225", "filename": "src/test/mir-opt/const_prop/ref_deref/rustc.main.PromoteTemps.diff", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref%2Frustc.main.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref%2Frustc.main.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref%2Frustc.main.PromoteTemps.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -27,15 +27,21 @@\n -         StorageDead(_3);                 // bb0[6]: scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n -         StorageDead(_2);                 // bb0[7]: scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n -         StorageDead(_1);                 // bb0[8]: scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n--         _0 = ();                         // bb0[9]: scope 0 at $DIR/ref_deref.rs:4:11: 6:2\n--         return;                          // bb0[10]: scope 0 at $DIR/ref_deref.rs:6:2: 6:2\n+-         _0 = const ();                   // bb0[9]: scope 0 at $DIR/ref_deref.rs:4:11: 6:2\n +                                          // + span: $DIR/ref_deref.rs:5:6: 5:10\n +                                          // + literal: Const { ty: &i32, val: Unevaluated(DefId(0:3 ~ ref_deref[317d]::main[0]), [], Some(promoted[0])) }\n +         _2 = &(*_4);                     // bb0[3]: scope 0 at $DIR/ref_deref.rs:5:6: 5:10\n +         _1 = (*_2);                      // bb0[4]: scope 0 at $DIR/ref_deref.rs:5:5: 5:10\n +         StorageDead(_2);                 // bb0[5]: scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n +         StorageDead(_1);                 // bb0[6]: scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n-+         _0 = ();                         // bb0[7]: scope 0 at $DIR/ref_deref.rs:4:11: 6:2\n++         _0 = const ();                   // bb0[7]: scope 0 at $DIR/ref_deref.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/ref_deref.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+-         return;                          // bb0[10]: scope 0 at $DIR/ref_deref.rs:6:2: 6:2\n +         return;                          // bb0[8]: scope 0 at $DIR/ref_deref.rs:6:2: 6:2\n       }\n   }"}, {"sha": "6393bad2993d55ff7d09ee170adc75fef7f12b7a", "filename": "src/test/mir-opt/const_prop/ref_deref_project/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -22,7 +22,13 @@\n           _1 = (*_2);                      // bb0[4]: scope 0 at $DIR/ref_deref_project.rs:5:5: 5:17\n           StorageDead(_2);                 // bb0[5]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n           StorageDead(_1);                 // bb0[6]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n-          _0 = ();                         // bb0[7]: scope 0 at $DIR/ref_deref_project.rs:4:11: 6:2\n+          _0 = const ();                   // bb0[7]: scope 0 at $DIR/ref_deref_project.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/ref_deref_project.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb0[8]: scope 0 at $DIR/ref_deref_project.rs:6:2: 6:2\n       }\n   }"}, {"sha": "020ad7278c038af50283249c87ad3446b37f560a", "filename": "src/test/mir-opt/const_prop/ref_deref_project/rustc.main.PromoteTemps.diff", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project%2Frustc.main.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project%2Frustc.main.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project%2Frustc.main.PromoteTemps.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -22,7 +22,14 @@\n                                            // mir::Constant\n -                                          // + span: $DIR/ref_deref_project.rs:5:9: 5:10\n -                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000004)) }\n--                                          // ty::Const\n++                                          // + span: $DIR/ref_deref_project.rs:5:6: 5:17\n++                                          // + literal: Const { ty: &(i32, i32), val: Unevaluated(DefId(0:3 ~ ref_deref_project[317d]::main[0]), [], Some(promoted[0])) }\n++         _2 = &((*_4).1: i32);            // bb0[3]: scope 0 at $DIR/ref_deref_project.rs:5:6: 5:17\n++         _1 = (*_2);                      // bb0[4]: scope 0 at $DIR/ref_deref_project.rs:5:5: 5:17\n++         StorageDead(_2);                 // bb0[5]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n++         StorageDead(_1);                 // bb0[6]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n++         _0 = const ();                   // bb0[7]: scope 0 at $DIR/ref_deref_project.rs:4:11: 6:2\n+                                           // ty::Const\n -                                          // + ty: i32\n -                                          // + val: Value(Scalar(0x00000005))\n -                                          // mir::Constant\n@@ -33,15 +40,14 @@\n -         StorageDead(_3);                 // bb0[6]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n -         StorageDead(_2);                 // bb0[7]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n -         StorageDead(_1);                 // bb0[8]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n--         _0 = ();                         // bb0[9]: scope 0 at $DIR/ref_deref_project.rs:4:11: 6:2\n+-         _0 = const ();                   // bb0[9]: scope 0 at $DIR/ref_deref_project.rs:4:11: 6:2\n+-                                          // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/ref_deref_project.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         return;                          // bb0[10]: scope 0 at $DIR/ref_deref_project.rs:6:2: 6:2\n-+                                          // + span: $DIR/ref_deref_project.rs:5:6: 5:17\n-+                                          // + literal: Const { ty: &(i32, i32), val: Unevaluated(DefId(0:3 ~ ref_deref_project[317d]::main[0]), [], Some(promoted[0])) }\n-+         _2 = &((*_4).1: i32);            // bb0[3]: scope 0 at $DIR/ref_deref_project.rs:5:6: 5:17\n-+         _1 = (*_2);                      // bb0[4]: scope 0 at $DIR/ref_deref_project.rs:5:5: 5:17\n-+         StorageDead(_2);                 // bb0[5]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n-+         StorageDead(_1);                 // bb0[6]: scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n-+         _0 = ();                         // bb0[7]: scope 0 at $DIR/ref_deref_project.rs:4:11: 6:2\n +         return;                          // bb0[8]: scope 0 at $DIR/ref_deref_project.rs:6:2: 6:2\n       }\n   }"}, {"sha": "388ebe08689c2f39cdaf04b71f216c331f897302", "filename": "src/test/mir-opt/const_prop/reify_fn_ptr/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freify_fn_ptr%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freify_fn_ptr%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freify_fn_ptr%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -25,7 +25,13 @@\n           _1 = move _2 as *const fn() (Misc); // bb0[6]: scope 0 at $DIR/reify_fn_ptr.rs:4:13: 4:41\n           StorageDead(_2);                 // bb0[7]: scope 0 at $DIR/reify_fn_ptr.rs:4:40: 4:41\n           StorageDead(_1);                 // bb0[8]: scope 0 at $DIR/reify_fn_ptr.rs:4:41: 4:42\n-          _0 = ();                         // bb0[9]: scope 0 at $DIR/reify_fn_ptr.rs:3:11: 5:2\n+          _0 = const ();                   // bb0[9]: scope 0 at $DIR/reify_fn_ptr.rs:3:11: 5:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/reify_fn_ptr.rs:3:11: 5:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb0[10]: scope 0 at $DIR/reify_fn_ptr.rs:5:2: 5:2\n       }\n   }"}, {"sha": "361ee4933788e4603e34fb2825b5a21f7db14522", "filename": "src/test/mir-opt/const_prop/repeat/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F64bit%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -80,7 +80,13 @@\n           StorageDead(_2);                 // bb1[2]: scope 0 at $DIR/repeat.rs:6:31: 6:32\n           StorageDead(_4);                 // bb1[3]: scope 0 at $DIR/repeat.rs:6:32: 6:33\n           StorageDead(_3);                 // bb1[4]: scope 0 at $DIR/repeat.rs:6:32: 6:33\n-          _0 = ();                         // bb1[5]: scope 0 at $DIR/repeat.rs:5:11: 7:2\n+          _0 = const ();                   // bb1[5]: scope 0 at $DIR/repeat.rs:5:11: 7:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/repeat.rs:5:11: 7:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb1[6]: scope 0 at $DIR/repeat.rs:7:1: 7:2\n           return;                          // bb1[7]: scope 0 at $DIR/repeat.rs:7:2: 7:2\n       }"}, {"sha": "f1379446d7ad76e84fe2c02e7d986536eba08ab5", "filename": "src/test/mir-opt/const_prop/slice_len/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fslice_len%2F64bit%2Frustc.main.ConstProp.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -76,7 +76,13 @@\n           StorageDead(_4);                 // bb1[2]: scope 0 at $DIR/slice_len.rs:5:33: 5:34\n           StorageDead(_2);                 // bb1[3]: scope 0 at $DIR/slice_len.rs:5:33: 5:34\n           StorageDead(_1);                 // bb1[4]: scope 0 at $DIR/slice_len.rs:5:33: 5:34\n-          _0 = ();                         // bb1[5]: scope 0 at $DIR/slice_len.rs:4:11: 6:2\n+          _0 = const ();                   // bb1[5]: scope 0 at $DIR/slice_len.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/slice_len.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb1[6]: scope 0 at $DIR/slice_len.rs:6:2: 6:2\n       }\n   }"}, {"sha": "16bdb7d0a992180e587652254551c2f97f3aa2b6", "filename": "src/test/mir-opt/copy_propagation_arg/rustc.bar.CopyPropagation.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.bar.CopyPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.bar.CopyPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.bar.CopyPropagation.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -30,7 +30,13 @@\n                                            // mir::Constant\n                                            // + span: $DIR/copy_propagation_arg.rs:17:5: 17:10\n                                            // + literal: Const { ty: u8, val: Value(Scalar(0x05)) }\n-          nop;                             // bb1[3]: scope 0 at $DIR/copy_propagation_arg.rs:15:19: 18:2\n+          _0 = const ();                   // bb1[3]: scope 0 at $DIR/copy_propagation_arg.rs:15:19: 18:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/copy_propagation_arg.rs:15:19: 18:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb1[4]: scope 0 at $DIR/copy_propagation_arg.rs:18:2: 18:2\n       }\n   }"}, {"sha": "7df995c990a30f6d961a919ed3d1dd207851a8cf", "filename": "src/test/mir-opt/copy_propagation_arg/rustc.baz.CopyPropagation.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.baz.CopyPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.baz.CopyPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.baz.CopyPropagation.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -11,7 +11,13 @@\n           _2 = _1;                         // bb0[1]: scope 0 at $DIR/copy_propagation_arg.rs:23:9: 23:10\n           _1 = move _2;                    // bb0[2]: scope 0 at $DIR/copy_propagation_arg.rs:23:5: 23:10\n           StorageDead(_2);                 // bb0[3]: scope 0 at $DIR/copy_propagation_arg.rs:23:9: 23:10\n-          nop;                             // bb0[4]: scope 0 at $DIR/copy_propagation_arg.rs:21:20: 24:2\n+          _0 = const ();                   // bb0[4]: scope 0 at $DIR/copy_propagation_arg.rs:21:20: 24:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/copy_propagation_arg.rs:21:20: 24:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb0[5]: scope 0 at $DIR/copy_propagation_arg.rs:24:2: 24:2\n       }\n   }"}, {"sha": "67b58c30f054ad2025826f3a500ff4af1725d25f", "filename": "src/test/mir-opt/copy_propagation_arg/rustc.foo.CopyPropagation.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.foo.CopyPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.foo.CopyPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg%2Frustc.foo.CopyPropagation.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -24,7 +24,13 @@\n           StorageDead(_3);                 // bb1[0]: scope 0 at $DIR/copy_propagation_arg.rs:11:16: 11:17\n           _1 = move _2;                    // bb1[1]: scope 0 at $DIR/copy_propagation_arg.rs:11:5: 11:17\n           StorageDead(_2);                 // bb1[2]: scope 0 at $DIR/copy_propagation_arg.rs:11:16: 11:17\n-          nop;                             // bb1[3]: scope 0 at $DIR/copy_propagation_arg.rs:9:19: 12:2\n+          _0 = const ();                   // bb1[3]: scope 0 at $DIR/copy_propagation_arg.rs:9:19: 12:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/copy_propagation_arg.rs:9:19: 12:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb1[4]: scope 0 at $DIR/copy_propagation_arg.rs:12:2: 12:2\n       }\n   }"}, {"sha": "50a48f2eee4143376e2f2d53b2a665c16d8f5fe4", "filename": "src/test/mir-opt/generator-storage-dead-unwind/rustc.main-{{closure}}.StateTransform.before.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind%2Frustc.main-%7B%7Bclosure%7D%7D.StateTransform.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind%2Frustc.main-%7B%7Bclosure%7D%7D.StateTransform.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind%2Frustc.main-%7B%7Bclosure%7D%7D.StateTransform.before.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -112,7 +112,13 @@ yields ()\n     bb10: {\n         StorageDead(_10);                // bb10[0]: scope 2 at $DIR/generator-storage-dead-unwind.rs:27:15: 27:16\n         StorageDead(_9);                 // bb10[1]: scope 2 at $DIR/generator-storage-dead-unwind.rs:27:16: 27:17\n-        _0 = ();                         // bb10[2]: scope 0 at $DIR/generator-storage-dead-unwind.rs:22:19: 28:6\n+        _0 = const ();                   // bb10[2]: scope 0 at $DIR/generator-storage-dead-unwind.rs:22:19: 28:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/generator-storage-dead-unwind.rs:22:19: 28:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_4);                 // bb10[3]: scope 1 at $DIR/generator-storage-dead-unwind.rs:28:5: 28:6\n         StorageDead(_3);                 // bb10[4]: scope 0 at $DIR/generator-storage-dead-unwind.rs:28:5: 28:6\n         drop(_1) -> [return: bb12, unwind: bb1]; // bb10[5]: scope 0 at $DIR/generator-storage-dead-unwind.rs:28:5: 28:6"}, {"sha": "2e3354699fbaacf84f77fa5f7464da0821e2d585", "filename": "src/test/mir-opt/generator-tiny/rustc.main-{{closure}}.generator_resume.0.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fgenerator-tiny%2Frustc.main-%7B%7Bclosure%7D%7D.generator_resume.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fgenerator-tiny%2Frustc.main-%7B%7Bclosure%7D%7D.generator_resume.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator-tiny%2Frustc.main-%7B%7Bclosure%7D%7D.generator_resume.0.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -54,7 +54,13 @@ fn main::{{closure}}#0(_1: std::pin::Pin<&mut [generator@$DIR/generator-tiny.rs:\n \n     bb4: {\n         StorageDead(_8);                 // bb4[0]: scope 1 at $DIR/generator-tiny.rs:22:21: 22:22\n-        _5 = ();                         // bb4[1]: scope 1 at $DIR/generator-tiny.rs:20:14: 23:10\n+        _5 = const ();                   // bb4[1]: scope 1 at $DIR/generator-tiny.rs:20:14: 23:10\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/generator-tiny.rs:20:14: 23:10\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         goto -> bb2;                     // bb4[2]: scope 1 at $DIR/generator-tiny.rs:20:9: 23:10\n     }\n "}, {"sha": "f5d8b84812a3e15f53490aac02a5e0971414c72a", "filename": "src/test/mir-opt/graphviz/rustc.main.mir_map.0.dot", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fgraphviz%2Frustc.main.mir_map.0.dot", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fgraphviz%2Frustc.main.mir_map.0.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgraphviz%2Frustc.main.mir_map.0.dot?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -3,7 +3,7 @@ digraph Mir_0_3 {\n     node [fontname=\"monospace\"];\n     edge [fontname=\"monospace\"];\n     label=<fn main() -&gt; ()<br align=\"left\"/>>;\n-    bb0__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">0</td></tr><tr><td align=\"left\" balign=\"left\">_0 = ()<br/></td></tr><tr><td align=\"left\">goto</td></tr></table>>];\n+    bb0__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">0</td></tr><tr><td align=\"left\" balign=\"left\">_0 = const ()<br/></td></tr><tr><td align=\"left\">goto</td></tr></table>>];\n     bb1__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">1</td></tr><tr><td align=\"left\">resume</td></tr></table>>];\n     bb2__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">2</td></tr><tr><td align=\"left\">return</td></tr></table>>];\n     bb0__0_3 -> bb2__0_3 [label=\"\"];"}, {"sha": "38ab9ce9926c06d469fada8077b70672eb2bfb16", "filename": "src/test/mir-opt/inline/inline-into-box-place/64bit/rustc.main.Inline.diff", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F64bit%2Frustc.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F64bit%2Frustc.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F64bit%2Frustc.main.Inline.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -29,38 +29,46 @@\n -                                          // + span: $DIR/inline-into-box-place.rs:8:33: 8:41\n -                                          // + user_ty: UserType(1)\n -                                          // + literal: Const { ty: fn() -> std::vec::Vec<u32> {std::vec::Vec::<u32>::new}, val: Value(Scalar(<ZST>)) }\n+-     }\n+- \n+-     bb1 (cleanup): {\n+-         resume;                          // bb1[0]: scope 0 at $DIR/inline-into-box-place.rs:7:1: 9:2\n+-     }\n+- \n+-     bb2: {\n+-         _1 = move _2;                    // bb2[0]: scope 0 at $DIR/inline-into-box-place.rs:8:29: 8:43\n+-         StorageDead(_2);                 // bb2[1]: scope 0 at $DIR/inline-into-box-place.rs:8:42: 8:43\n+-         _0 = const ();                   // bb2[2]: scope 0 at $DIR/inline-into-box-place.rs:7:11: 9:2\n +                                          // + span: $SRC_DIR/liballoc/vec.rs:LL:COL\n +                                          // + user_ty: UserType(0)\n +                                          // + literal: Const { ty: alloc::raw_vec::RawVec<u32>, val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), undef_mask: UndefMask { blocks: [65535], len: Size { raw: 16 } }, size: Size { raw: 16 }, align: Align { pow2: 3 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\n +         ((*_4).1: usize) = const 0usize; // bb0[5]: scope 2 at $SRC_DIR/liballoc/vec.rs:LL:COL\n-+                                          // ty::Const\n+                                           // ty::Const\n +                                          // + ty: usize\n +                                          // + val: Value(Scalar(0x0000000000000000))\n +                                          // mir::Constant\n +                                          // + span: $SRC_DIR/liballoc/vec.rs:LL:COL\n +                                          // + literal: Const { ty: usize, val: Value(Scalar(0x0000000000000000)) }\n +         _1 = move _2;                    // bb0[6]: scope 0 at $DIR/inline-into-box-place.rs:8:29: 8:43\n +         StorageDead(_2);                 // bb0[7]: scope 0 at $DIR/inline-into-box-place.rs:8:42: 8:43\n-+         _0 = ();                         // bb0[8]: scope 0 at $DIR/inline-into-box-place.rs:7:11: 9:2\n++         _0 = const ();                   // bb0[8]: scope 0 at $DIR/inline-into-box-place.rs:7:11: 9:2\n++                                          // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/inline-into-box-place.rs:7:11: 9:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+-         drop(_1) -> [return: bb3, unwind: bb1]; // bb2[3]: scope 0 at $DIR/inline-into-box-place.rs:9:1: 9:2\n +         drop(_1) -> [return: bb2, unwind: bb1]; // bb0[9]: scope 0 at $DIR/inline-into-box-place.rs:9:1: 9:2\n       }\n   \n-      bb1 (cleanup): {\n-          resume;                          // bb1[0]: scope 0 at $DIR/inline-into-box-place.rs:7:1: 9:2\n-      }\n-  \n-      bb2: {\n--         _1 = move _2;                    // bb2[0]: scope 0 at $DIR/inline-into-box-place.rs:8:29: 8:43\n--         StorageDead(_2);                 // bb2[1]: scope 0 at $DIR/inline-into-box-place.rs:8:42: 8:43\n--         _0 = ();                         // bb2[2]: scope 0 at $DIR/inline-into-box-place.rs:7:11: 9:2\n--         drop(_1) -> [return: bb3, unwind: bb1]; // bb2[3]: scope 0 at $DIR/inline-into-box-place.rs:9:1: 9:2\n--     }\n-- \n -     bb3: {\n -         StorageDead(_1);                 // bb3[0]: scope 0 at $DIR/inline-into-box-place.rs:9:1: 9:2\n -         return;                          // bb3[1]: scope 0 at $DIR/inline-into-box-place.rs:9:2: 9:2\n--     }\n-- \n++     bb1 (cleanup): {\n++         resume;                          // bb1[0]: scope 0 at $DIR/inline-into-box-place.rs:7:1: 9:2\n+      }\n+  \n -     bb4 (cleanup): {\n -         _3 = const alloc::alloc::box_free::<std::vec::Vec<u32>>(move (_2.0: std::ptr::Unique<std::vec::Vec<u32>>)) -> bb1; // bb4[0]: scope 0 at $DIR/inline-into-box-place.rs:8:42: 8:43\n -                                          // ty::Const\n@@ -69,6 +77,7 @@\n -                                          // mir::Constant\n -                                          // + span: $DIR/inline-into-box-place.rs:8:42: 8:43\n -                                          // + literal: Const { ty: unsafe fn(std::ptr::Unique<std::vec::Vec<u32>>) {alloc::alloc::box_free::<std::vec::Vec<u32>>}, val: Value(Scalar(<ZST>)) }\n++     bb2: {\n +         StorageDead(_1);                 // bb2[0]: scope 0 at $DIR/inline-into-box-place.rs:9:1: 9:2\n +         return;                          // bb2[1]: scope 0 at $DIR/inline-into-box-place.rs:9:2: 9:2\n       }"}, {"sha": "35c400035a6ab7121e3d6f6ee028bcacf50af492", "filename": "src/test/mir-opt/inline/inline-specialization/rustc.main.Inline.diff", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Finline%2Finline-specialization%2Frustc.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Finline%2Finline-specialization%2Frustc.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-specialization%2Frustc.main.Inline.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -25,12 +25,18 @@\n -     }\n - \n -     bb1: {\n--         _0 = ();                         // bb1[0]: scope 0 at $DIR/inline-specialization.rs:4:11: 6:2\n--         StorageDead(_1);                 // bb1[1]: scope 0 at $DIR/inline-specialization.rs:6:1: 6:2\n--         return;                          // bb1[2]: scope 0 at $DIR/inline-specialization.rs:6:2: 6:2\n+-         _0 = const ();                   // bb1[0]: scope 0 at $DIR/inline-specialization.rs:4:11: 6:2\n +                                          // + span: $DIR/inline-specialization.rs:14:31: 14:34\n +                                          // + literal: Const { ty: u32, val: Value(Scalar(0x0000007b)) }\n-+         _0 = ();                         // bb0[2]: scope 0 at $DIR/inline-specialization.rs:4:11: 6:2\n++         _0 = const ();                   // bb0[2]: scope 0 at $DIR/inline-specialization.rs:4:11: 6:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/inline-specialization.rs:4:11: 6:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+-         StorageDead(_1);                 // bb1[1]: scope 0 at $DIR/inline-specialization.rs:6:1: 6:2\n+-         return;                          // bb1[2]: scope 0 at $DIR/inline-specialization.rs:6:2: 6:2\n +         StorageDead(_1);                 // bb0[3]: scope 0 at $DIR/inline-specialization.rs:6:1: 6:2\n +         return;                          // bb0[4]: scope 0 at $DIR/inline-specialization.rs:6:2: 6:2\n       }"}, {"sha": "62d2f8db7a43fdfacb40b01d54c91d930c1e2253", "filename": "src/test/mir-opt/issue-38669/rustc.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-38669%2Frustc.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-38669%2Frustc.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-38669%2Frustc.main.SimplifyCfg-initial.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -45,7 +45,13 @@ fn main() -> () {\n     }\n \n     bb5: {\n-        _3 = ();                         // bb5[0]: scope 1 at $DIR/issue-38669.rs:7:9: 9:10\n+        _3 = const ();                   // bb5[0]: scope 1 at $DIR/issue-38669.rs:7:9: 9:10\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-38669.rs:7:9: 9:10\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_4);                 // bb5[1]: scope 1 at $DIR/issue-38669.rs:9:9: 9:10\n         StorageDead(_3);                 // bb5[2]: scope 1 at $DIR/issue-38669.rs:9:9: 9:10\n         _1 = const true;                 // bb5[3]: scope 1 at $DIR/issue-38669.rs:10:9: 10:28\n@@ -55,12 +61,24 @@ fn main() -> () {\n                                          // mir::Constant\n                                          // + span: $DIR/issue-38669.rs:10:24: 10:28\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        _2 = ();                         // bb5[4]: scope 1 at $DIR/issue-38669.rs:6:10: 11:6\n+        _2 = const ();                   // bb5[4]: scope 1 at $DIR/issue-38669.rs:6:10: 11:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-38669.rs:6:10: 11:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         goto -> bb2;                     // bb5[5]: scope 1 at $DIR/issue-38669.rs:6:5: 11:6\n     }\n \n     bb6: {\n-        _0 = ();                         // bb6[0]: scope 1 at $DIR/issue-38669.rs:8:13: 8:18\n+        _0 = const ();                   // bb6[0]: scope 1 at $DIR/issue-38669.rs:8:13: 8:18\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-38669.rs:8:13: 8:18\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_4);                 // bb6[1]: scope 1 at $DIR/issue-38669.rs:9:9: 9:10\n         StorageDead(_3);                 // bb6[2]: scope 1 at $DIR/issue-38669.rs:9:9: 9:10\n         StorageDead(_1);                 // bb6[3]: scope 0 at $DIR/issue-38669.rs:12:1: 12:2"}, {"sha": "55849b2773290061e7d6fb711d9a540477504ad5", "filename": "src/test/mir-opt/issue-41110/rustc.main.ElaborateDrops.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-41110%2Frustc.main.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-41110%2Frustc.main.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-41110%2Frustc.main.ElaborateDrops.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -85,7 +85,13 @@ fn main() -> () {\n                                          // + span: $DIR/issue-41110.rs:8:27: 8:28\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n         StorageDead(_2);                 // bb6[2]: scope 0 at $DIR/issue-41110.rs:8:27: 8:28\n-        _0 = ();                         // bb6[3]: scope 0 at $DIR/issue-41110.rs:7:11: 9:2\n+        _0 = const ();                   // bb6[3]: scope 0 at $DIR/issue-41110.rs:7:11: 9:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-41110.rs:7:11: 9:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_1);                 // bb6[4]: scope 0 at $DIR/issue-41110.rs:9:1: 9:2\n         return;                          // bb6[5]: scope 0 at $DIR/issue-41110.rs:9:2: 9:2\n     }"}, {"sha": "cc1a49dd24524579b7598590612c81fdda716848", "filename": "src/test/mir-opt/issue-41110/rustc.test.ElaborateDrops.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-41110%2Frustc.test.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-41110%2Frustc.test.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-41110%2Frustc.test.ElaborateDrops.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -87,7 +87,13 @@ fn test() -> () {\n \n     bb8: {\n         StorageDead(_5);                 // bb8[0]: scope 2 at $DIR/issue-41110.rs:18:9: 18:10\n-        _0 = ();                         // bb8[1]: scope 0 at $DIR/issue-41110.rs:14:15: 19:2\n+        _0 = const ();                   // bb8[1]: scope 0 at $DIR/issue-41110.rs:14:15: 19:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-41110.rs:14:15: 19:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         drop(_2) -> [return: bb9, unwind: bb3]; // bb8[2]: scope 1 at $DIR/issue-41110.rs:19:1: 19:2\n     }\n "}, {"sha": "ee05bf48d6273fba603185e511c33f52974a0f60", "filename": "src/test/mir-opt/issue-41888/rustc.main.ElaborateDrops.after.mir", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-41888%2Frustc.main.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-41888%2Frustc.main.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-41888%2Frustc.main.ElaborateDrops.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -66,7 +66,13 @@ fn main() -> () {\n     }\n \n     bb4: {\n-        _0 = ();                         // bb4[0]: scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n+        _0 = const ();                   // bb4[0]: scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-41888.rs:8:5: 14:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         goto -> bb11;                    // bb4[1]: scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n     }\n \n@@ -94,7 +100,13 @@ fn main() -> () {\n     }\n \n     bb9: {\n-        _0 = ();                         // bb9[0]: scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n+        _0 = const ();                   // bb9[0]: scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-41888.rs:10:9: 13:10\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         goto -> bb11;                    // bb9[1]: scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n     }\n \n@@ -108,7 +120,13 @@ fn main() -> () {\n                                          // + span: $DIR/issue-41888.rs:10:21: 10:23\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n         _6 = move ((_1 as F).0: K);      // bb10[2]: scope 1 at $DIR/issue-41888.rs:10:21: 10:23\n-        _0 = ();                         // bb10[3]: scope 2 at $DIR/issue-41888.rs:10:29: 13:10\n+        _0 = const ();                   // bb10[3]: scope 2 at $DIR/issue-41888.rs:10:29: 13:10\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-41888.rs:10:29: 13:10\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_6);                 // bb10[4]: scope 1 at $DIR/issue-41888.rs:13:9: 13:10\n         goto -> bb11;                    // bb10[5]: scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n     }"}, {"sha": "5440d4488bb97c88cebfaa3c833354b569eaa97e", "filename": "src/test/mir-opt/issue-49232/rustc.main.mir_map.0.mir", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -47,7 +47,13 @@ fn main() -> () {\n     }\n \n     bb6: {\n-        _0 = ();                         // bb6[0]: scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n+        _0 = const ();                   // bb6[0]: scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-49232.rs:10:25: 10:30\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         goto -> bb8;                     // bb6[1]: scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n     }\n \n@@ -73,7 +79,13 @@ fn main() -> () {\n     }\n \n     bb10: {\n-        _4 = ();                         // bb10[0]: scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n+        _4 = const ();                   // bb10[0]: scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-49232.rs:10:25: 10:30\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         unreachable;                     // bb10[1]: scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n     }\n \n@@ -99,7 +111,13 @@ fn main() -> () {\n     bb13: {\n         StorageDead(_6);                 // bb13[0]: scope 1 at $DIR/issue-49232.rs:13:21: 13:22\n         StorageDead(_5);                 // bb13[1]: scope 1 at $DIR/issue-49232.rs:13:22: 13:23\n-        _1 = ();                         // bb13[2]: scope 0 at $DIR/issue-49232.rs:6:10: 14:6\n+        _1 = const ();                   // bb13[2]: scope 0 at $DIR/issue-49232.rs:6:10: 14:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue-49232.rs:6:10: 14:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_2);                 // bb13[3]: scope 0 at $DIR/issue-49232.rs:14:5: 14:6\n         goto -> bb1;                     // bb13[4]: scope 0 at $DIR/issue-49232.rs:6:5: 14:6\n     }"}, {"sha": "df05dbabc770d576efb29525daff4aae4089ec09", "filename": "src/test/mir-opt/loop_test/rustc.main.SimplifyCfg-qualify-consts.after.mir", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Floop_test%2Frustc.main.SimplifyCfg-qualify-consts.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Floop_test%2Frustc.main.SimplifyCfg-qualify-consts.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Floop_test%2Frustc.main.SimplifyCfg-qualify-consts.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -35,15 +35,27 @@ fn main() -> () {\n     }\n \n     bb3: {\n-        _1 = ();                         // bb3[0]: scope 0 at $DIR/loop_test.rs:10:5: 12:6\n+        _1 = const ();                   // bb3[0]: scope 0 at $DIR/loop_test.rs:10:5: 12:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/loop_test.rs:10:5: 12:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_2);                 // bb3[1]: scope 0 at $DIR/loop_test.rs:12:5: 12:6\n         StorageDead(_1);                 // bb3[2]: scope 0 at $DIR/loop_test.rs:12:5: 12:6\n         StorageLive(_4);                 // bb3[3]: scope 0 at $DIR/loop_test.rs:13:5: 16:6\n         goto -> bb5;                     // bb3[4]: scope 0 at $DIR/loop_test.rs:13:5: 16:6\n     }\n \n     bb4: {\n-        _0 = ();                         // bb4[0]: scope 0 at $DIR/loop_test.rs:11:9: 11:15\n+        _0 = const ();                   // bb4[0]: scope 0 at $DIR/loop_test.rs:11:9: 11:15\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/loop_test.rs:11:9: 11:15\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_2);                 // bb4[1]: scope 0 at $DIR/loop_test.rs:12:5: 12:6\n         StorageDead(_1);                 // bb4[2]: scope 0 at $DIR/loop_test.rs:12:5: 12:6\n         return;                          // bb4[3]: scope 0 at $DIR/loop_test.rs:17:2: 17:2"}, {"sha": "a296bd053121c76fe22c9b7110105743d05d1f7a", "filename": "src/test/mir-opt/match_false_edges/rustc.full_tested_match.PromoteTemps.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -143,7 +143,13 @@ fn full_tested_match() -> () {\n     bb11: {\n         StorageDead(_2);                 // bb11[0]: scope 0 at $DIR/match_false_edges.rs:19:6: 19:7\n         StorageDead(_1);                 // bb11[1]: scope 0 at $DIR/match_false_edges.rs:19:6: 19:7\n-        _0 = ();                         // bb11[2]: scope 0 at $DIR/match_false_edges.rs:14:28: 20:2\n+        _0 = const ();                   // bb11[2]: scope 0 at $DIR/match_false_edges.rs:14:28: 20:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/match_false_edges.rs:14:28: 20:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb11[3]: scope 0 at $DIR/match_false_edges.rs:20:2: 20:2\n     }\n }"}, {"sha": "567e3ebdd93103f639f057b3c228c33ddae58b17", "filename": "src/test/mir-opt/match_false_edges/rustc.full_tested_match2.PromoteTemps.before.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -135,7 +135,13 @@ fn full_tested_match2() -> () {\n     bb11: {\n         StorageDead(_2);                 // bb11[0]: scope 0 at $DIR/match_false_edges.rs:30:6: 30:7\n         StorageDead(_1);                 // bb11[1]: scope 0 at $DIR/match_false_edges.rs:30:6: 30:7\n-        _0 = ();                         // bb11[2]: scope 0 at $DIR/match_false_edges.rs:25:29: 31:2\n+        _0 = const ();                   // bb11[2]: scope 0 at $DIR/match_false_edges.rs:25:29: 31:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/match_false_edges.rs:25:29: 31:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb11[3]: scope 0 at $DIR/match_false_edges.rs:31:2: 31:2\n     }\n }"}, {"sha": "a24fa9dedb39f16232c9bf7c32ef58d42acfea0b", "filename": "src/test/mir-opt/match_false_edges/rustc.main.PromoteTemps.before.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -182,7 +182,13 @@ fn main() -> () {\n     bb15: {\n         StorageDead(_2);                 // bb15[0]: scope 0 at $DIR/match_false_edges.rs:40:6: 40:7\n         StorageDead(_1);                 // bb15[1]: scope 0 at $DIR/match_false_edges.rs:40:6: 40:7\n-        _0 = ();                         // bb15[2]: scope 0 at $DIR/match_false_edges.rs:34:11: 41:2\n+        _0 = const ();                   // bb15[2]: scope 0 at $DIR/match_false_edges.rs:34:11: 41:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/match_false_edges.rs:34:11: 41:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb15[3]: scope 0 at $DIR/match_false_edges.rs:41:2: 41:2\n     }\n }"}, {"sha": "3236b3bcc738f8560f5c38be983c8563842b2a45", "filename": "src/test/mir-opt/match_test/rustc.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -158,7 +158,13 @@ fn main() -> () {\n \n     bb14: {\n         StorageDead(_3);                 // bb14[0]: scope 2 at $DIR/match_test.rs:17:6: 17:7\n-        _0 = ();                         // bb14[1]: scope 0 at $DIR/match_test.rs:6:11: 18:2\n+        _0 = const ();                   // bb14[1]: scope 0 at $DIR/match_test.rs:6:11: 18:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/match_test.rs:6:11: 18:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_2);                 // bb14[2]: scope 1 at $DIR/match_test.rs:18:1: 18:2\n         StorageDead(_1);                 // bb14[3]: scope 0 at $DIR/match_test.rs:18:1: 18:2\n         return;                          // bb14[4]: scope 0 at $DIR/match_test.rs:18:2: 18:2"}, {"sha": "4a285d035be53f25a2d2819f10ceb0b93ee8fd66", "filename": "src/test/mir-opt/nll/region-subtyping-basic/64bit/rustc.main.nll.0.mir", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F64bit%2Frustc.main.nll.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F64bit%2Frustc.main.nll.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F64bit%2Frustc.main.nll.0.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -137,13 +137,25 @@ fn main() -> () {\n     bb6: {\n         StorageDead(_9);                 // bb6[0]: scope 3 at $DIR/region-subtyping-basic.rs:19:17: 19:18\n         StorageDead(_8);                 // bb6[1]: scope 3 at $DIR/region-subtyping-basic.rs:19:18: 19:19\n-        _0 = ();                         // bb6[2]: scope 3 at $DIR/region-subtyping-basic.rs:18:13: 20:6\n+        _0 = const Const(Value(Scalar(<ZST>)): ()); // bb6[2]: scope 3 at $DIR/region-subtyping-basic.rs:18:13: 20:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/region-subtyping-basic.rs:18:13: 20:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         goto -> bb8;                     // bb6[3]: scope 3 at $DIR/region-subtyping-basic.rs:18:5: 22:6\n     }\n \n     bb7: {\n         StorageDead(_10);                // bb7[0]: scope 3 at $DIR/region-subtyping-basic.rs:21:18: 21:19\n-        _0 = ();                         // bb7[1]: scope 3 at $DIR/region-subtyping-basic.rs:20:12: 22:6\n+        _0 = const Const(Value(Scalar(<ZST>)): ()); // bb7[1]: scope 3 at $DIR/region-subtyping-basic.rs:20:12: 22:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/region-subtyping-basic.rs:20:12: 22:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         goto -> bb8;                     // bb7[2]: scope 3 at $DIR/region-subtyping-basic.rs:18:5: 22:6\n     }\n "}, {"sha": "e43e37feba743515e83933b393dff9acbf917b3e", "filename": "src/test/mir-opt/no-spurious-drop-after-call/rustc.main.ElaborateDrops.before.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fno-spurious-drop-after-call%2Frustc.main.ElaborateDrops.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fno-spurious-drop-after-call%2Frustc.main.ElaborateDrops.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fno-spurious-drop-after-call%2Frustc.main.ElaborateDrops.before.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -48,7 +48,13 @@ fn main() -> () {\n         StorageDead(_2);                 // bb3[0]: scope 0 at $DIR/no-spurious-drop-after-call.rs:9:34: 9:35\n         StorageDead(_4);                 // bb3[1]: scope 0 at $DIR/no-spurious-drop-after-call.rs:9:35: 9:36\n         StorageDead(_1);                 // bb3[2]: scope 0 at $DIR/no-spurious-drop-after-call.rs:9:35: 9:36\n-        _0 = ();                         // bb3[3]: scope 0 at $DIR/no-spurious-drop-after-call.rs:8:11: 10:2\n+        _0 = const ();                   // bb3[3]: scope 0 at $DIR/no-spurious-drop-after-call.rs:8:11: 10:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/no-spurious-drop-after-call.rs:8:11: 10:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb3[4]: scope 0 at $DIR/no-spurious-drop-after-call.rs:10:2: 10:2\n     }\n "}, {"sha": "432f91d91e576f6020868bb57da6a29a23cf6326", "filename": "src/test/mir-opt/packed-struct-drop-aligned/64bit/rustc.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -61,7 +61,13 @@ fn main() -> () {\n         StorageDead(_6);                 // bb4[0]: scope 1 at $DIR/packed-struct-drop-aligned.rs:7:5: 7:8\n         (_1.0: Aligned) = move _4;       // bb4[1]: scope 1 at $DIR/packed-struct-drop-aligned.rs:7:5: 7:8\n         StorageDead(_4);                 // bb4[2]: scope 1 at $DIR/packed-struct-drop-aligned.rs:7:28: 7:29\n-        _0 = ();                         // bb4[3]: scope 0 at $DIR/packed-struct-drop-aligned.rs:5:11: 8:2\n+        _0 = const ();                   // bb4[3]: scope 0 at $DIR/packed-struct-drop-aligned.rs:5:11: 8:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/packed-struct-drop-aligned.rs:5:11: 8:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         drop(_1) -> [return: bb2, unwind: bb1]; // bb4[4]: scope 0 at $DIR/packed-struct-drop-aligned.rs:8:1: 8:2\n     }\n }"}, {"sha": "727c271a47832bf4f70870a13d7a6f19723e4474", "filename": "src/test/mir-opt/retag/rustc.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fretag%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fretag%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fretag%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -125,7 +125,13 @@ fn main() -> () {\n         Retag([raw] _12);                // bb4[14]: scope 4 at $DIR/retag.rs:36:18: 36:19\n         _11 = _12;                       // bb4[15]: scope 4 at $DIR/retag.rs:36:18: 36:29\n         StorageDead(_12);                // bb4[16]: scope 4 at $DIR/retag.rs:36:29: 36:30\n-        _2 = ();                         // bb4[17]: scope 1 at $DIR/retag.rs:31:5: 37:6\n+        _2 = const ();                   // bb4[17]: scope 1 at $DIR/retag.rs:31:5: 37:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/retag.rs:31:5: 37:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_11);                // bb4[18]: scope 4 at $DIR/retag.rs:37:5: 37:6\n         StorageDead(_10);                // bb4[19]: scope 3 at $DIR/retag.rs:37:5: 37:6\n         StorageDead(_8);                 // bb4[20]: scope 2 at $DIR/retag.rs:37:5: 37:6\n@@ -217,7 +223,13 @@ fn main() -> () {\n         Retag([raw] _26);                // bb8[5]: scope 7 at $DIR/retag.rs:50:14: 50:16\n         _25 = _26;                       // bb8[6]: scope 7 at $DIR/retag.rs:50:14: 50:28\n         StorageDead(_26);                // bb8[7]: scope 7 at $DIR/retag.rs:50:28: 50:29\n-        _0 = ();                         // bb8[8]: scope 0 at $DIR/retag.rs:29:11: 51:2\n+        _0 = const ();                   // bb8[8]: scope 0 at $DIR/retag.rs:29:11: 51:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/retag.rs:29:11: 51:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_25);                // bb8[9]: scope 7 at $DIR/retag.rs:51:1: 51:2\n         StorageDead(_15);                // bb8[10]: scope 6 at $DIR/retag.rs:51:1: 51:2\n         StorageDead(_13);                // bb8[11]: scope 1 at $DIR/retag.rs:51:1: 51:2"}, {"sha": "2caa6235d54c00de85278cc4631b84dee33ca61d", "filename": "src/test/mir-opt/simplify-arm-identity/rustc.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2Frustc.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2Frustc.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2Frustc.main.SimplifyArmIdentity.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -57,8 +57,15 @@\n   \n       bb4: {\n           StorageDead(_2);                 // bb4[0]: scope 1 at $DIR/simplify-arm-identity.rs:21:6: 21:7\n-          StorageDead(_1);                 // bb4[1]: scope 0 at $DIR/simplify-arm-identity.rs:22:1: 22:2\n-          return;                          // bb4[2]: scope 0 at $DIR/simplify-arm-identity.rs:22:2: 22:2\n+          _0 = const ();                   // bb4[1]: scope 0 at $DIR/simplify-arm-identity.rs:16:11: 22:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify-arm-identity.rs:16:11: 22:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+          StorageDead(_1);                 // bb4[2]: scope 0 at $DIR/simplify-arm-identity.rs:22:1: 22:2\n+          return;                          // bb4[3]: scope 0 at $DIR/simplify-arm-identity.rs:22:2: 22:2\n       }\n   }\n   "}, {"sha": "8613a812a834b94539a99a9286940b24e97e2e0d", "filename": "src/test/mir-opt/simplify-locals-removes-unused-consts/rustc.main.SimplifyLocals.diff", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-consts%2Frustc.main.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-consts%2Frustc.main.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-consts%2Frustc.main.SimplifyLocals.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -124,9 +124,17 @@\n       bb2: {\n -         StorageDead(_11);                // bb2[0]: scope 1 at $DIR/simplify-locals-removes-unused-consts.rs:16:35: 16:36\n -         StorageDead(_8);                 // bb2[1]: scope 1 at $DIR/simplify-locals-removes-unused-consts.rs:16:35: 16:36\n--         return;                          // bb2[2]: scope 0 at $DIR/simplify-locals-removes-unused-consts.rs:17:2: 17:2\n+-         _0 = const ();                   // bb2[2]: scope 0 at $DIR/simplify-locals-removes-unused-consts.rs:12:11: 17:2\n +         StorageDead(_2);                 // bb2[0]: scope 1 at $DIR/simplify-locals-removes-unused-consts.rs:16:35: 16:36\n-+         return;                          // bb2[1]: scope 0 at $DIR/simplify-locals-removes-unused-consts.rs:17:2: 17:2\n++         _0 = const ();                   // bb2[1]: scope 0 at $DIR/simplify-locals-removes-unused-consts.rs:12:11: 17:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify-locals-removes-unused-consts.rs:12:11: 17:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+-         return;                          // bb2[3]: scope 0 at $DIR/simplify-locals-removes-unused-consts.rs:17:2: 17:2\n++         return;                          // bb2[2]: scope 0 at $DIR/simplify-locals-removes-unused-consts.rs:17:2: 17:2\n       }\n   }\n   "}, {"sha": "ecac835fb87ef01869091e55f2f6c6e3ebc4a3a5", "filename": "src/test/mir-opt/simplify_cfg/rustc.main.SimplifyCfg-early-opt.diff", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-early-opt.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-early-opt.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-early-opt.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -33,28 +33,40 @@\n -     bb3: {\n -         nop;                             // bb3[0]: scope 0 at $DIR/simplify_cfg.rs:7:12: 7:17\n -         switchInt(_2) -> [false: bb5, otherwise: bb4]; // bb3[1]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n-+     bb2: {\n-+         _1 = ();                         // bb2[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n-+         StorageDead(_2);                 // bb2[1]: scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n-+         goto -> bb0;                     // bb2[2]: scope 0 at $DIR/simplify_cfg.rs:6:5: 10:6\n-      }\n-  \n+-     }\n+- \n -     bb4: {\n -         goto -> bb6;                     // bb4[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n -     }\n - \n -     bb5: {\n--         _1 = ();                         // bb5[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n+-         _1 = const ();                   // bb5[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n++     bb2: {\n++         _1 = const ();                   // bb2[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify_cfg.rs:7:9: 9:10\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         StorageDead(_2);                 // bb5[1]: scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n -         goto -> bb0;                     // bb5[2]: scope 0 at $DIR/simplify_cfg.rs:6:5: 10:6\n--     }\n-- \n++         StorageDead(_2);                 // bb2[1]: scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n++         goto -> bb0;                     // bb2[2]: scope 0 at $DIR/simplify_cfg.rs:6:5: 10:6\n+      }\n+  \n -     bb6: {\n--         _0 = ();                         // bb6[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n+-         _0 = const ();                   // bb6[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n++     bb3: {\n++         _0 = const ();                   // bb3[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify_cfg.rs:8:13: 8:18\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         StorageDead(_2);                 // bb6[1]: scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n -         return;                          // bb6[2]: scope 0 at $DIR/simplify_cfg.rs:11:2: 11:2\n-+     bb3: {\n-+         _0 = ();                         // bb3[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n +         StorageDead(_2);                 // bb3[1]: scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n +         return;                          // bb3[2]: scope 0 at $DIR/simplify_cfg.rs:11:2: 11:2\n       }"}, {"sha": "7c8bdde5418c2c1f18dccb99af6489282c33c3b7", "filename": "src/test/mir-opt/simplify_cfg/rustc.main.SimplifyCfg-initial.diff", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-initial.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-initial.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-initial.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -54,16 +54,30 @@\n       }\n   \n -     bb7: {\n--         _1 = ();                         // bb7[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n--         goto -> bb12;                    // bb7[1]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n+-         _1 = const ();                   // bb7[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n +     bb5: {\n-+         _1 = ();                         // bb5[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n++         _1 = const ();                   // bb5[0]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify_cfg.rs:7:9: 9:10\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+-         goto -> bb12;                    // bb7[1]: scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n +         StorageDead(_2);                 // bb5[1]: scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n +         goto -> bb0;                     // bb5[2]: scope 0 at $DIR/simplify_cfg.rs:6:5: 10:6\n       }\n   \n -     bb8: {\n--         _0 = ();                         // bb8[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n+-         _0 = const ();                   // bb8[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n++     bb6: {\n++         _0 = const ();                   // bb6[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify_cfg.rs:8:13: 8:18\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         goto -> bb9;                     // bb8[1]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n -     }\n - \n@@ -87,8 +101,6 @@\n - \n -     bb13: {\n -         return;                          // bb13[0]: scope 0 at $DIR/simplify_cfg.rs:11:2: 11:2\n-+     bb6: {\n-+         _0 = ();                         // bb6[0]: scope 0 at $DIR/simplify_cfg.rs:8:13: 8:18\n +         StorageDead(_2);                 // bb6[1]: scope 0 at $DIR/simplify_cfg.rs:10:5: 10:6\n +         return;                          // bb6[2]: scope 0 at $DIR/simplify_cfg.rs:11:2: 11:2\n       }"}, {"sha": "2946eb1cc44e162b5d2e24fc1ad98f4ab208423e", "filename": "src/test/mir-opt/simplify_if/rustc.main.SimplifyBranches-after-const-prop.diff", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_if%2Frustc.main.SimplifyBranches-after-const-prop.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_if%2Frustc.main.SimplifyBranches-after-const-prop.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_if%2Frustc.main.SimplifyBranches-after-const-prop.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -26,7 +26,13 @@\n       }\n   \n       bb1: {\n-          _0 = ();                         // bb1[0]: scope 0 at $DIR/simplify_if.rs:6:5: 8:6\n+          _0 = const ();                   // bb1[0]: scope 0 at $DIR/simplify_if.rs:6:5: 8:6\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify_if.rs:6:5: 8:6\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           goto -> bb4;                     // bb1[1]: scope 0 at $DIR/simplify_if.rs:6:5: 8:6\n       }\n   \n@@ -43,7 +49,13 @@\n   \n       bb3: {\n           StorageDead(_2);                 // bb3[0]: scope 0 at $DIR/simplify_if.rs:7:15: 7:16\n-          _0 = ();                         // bb3[1]: scope 0 at $DIR/simplify_if.rs:6:14: 8:6\n+          _0 = const ();                   // bb3[1]: scope 0 at $DIR/simplify_if.rs:6:14: 8:6\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify_if.rs:6:14: 8:6\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           goto -> bb4;                     // bb3[2]: scope 0 at $DIR/simplify_if.rs:6:5: 8:6\n       }\n   "}, {"sha": "1c83bb13425def3c7c5501db236940996655a0cb", "filename": "src/test/mir-opt/simplify_match/rustc.main.SimplifyBranches-after-copy-prop.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_match%2Frustc.main.SimplifyBranches-after-copy-prop.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fsimplify_match%2Frustc.main.SimplifyBranches-after-copy-prop.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_match%2Frustc.main.SimplifyBranches-after-copy-prop.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -26,7 +26,13 @@\n       }\n   \n       bb1: {\n-          nop;                             // bb1[0]: scope 0 at $DIR/simplify_match.rs:8:18: 8:20\n+          _0 = const ();                   // bb1[0]: scope 0 at $DIR/simplify_match.rs:8:18: 8:20\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify_match.rs:8:18: 8:20\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           goto -> bb3;                     // bb1[1]: scope 0 at $DIR/simplify_match.rs:6:5: 9:6\n       }\n   "}, {"sha": "e455a27642d369998d76a75db0a165b41183fc4d", "filename": "src/test/mir-opt/storage_ranges/rustc.main.nll.0.mir", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fstorage_ranges%2Frustc.main.nll.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fstorage_ranges%2Frustc.main.nll.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fstorage_ranges%2Frustc.main.nll.0.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -54,7 +54,13 @@ fn main() -> () {\n         StorageDead(_5);                 // bb0[9]: scope 1 at $DIR/storage_ranges.rs:6:24: 6:25\n         _3 = &_4;                        // bb0[10]: scope 1 at $DIR/storage_ranges.rs:6:17: 6:25\n         FakeRead(ForLet, _3);            // bb0[11]: scope 1 at $DIR/storage_ranges.rs:6:13: 6:14\n-        _2 = ();                         // bb0[12]: scope 1 at $DIR/storage_ranges.rs:5:5: 7:6\n+        _2 = const ();                   // bb0[12]: scope 1 at $DIR/storage_ranges.rs:5:5: 7:6\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/storage_ranges.rs:5:5: 7:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_4);                 // bb0[13]: scope 1 at $DIR/storage_ranges.rs:7:5: 7:6\n         StorageDead(_3);                 // bb0[14]: scope 1 at $DIR/storage_ranges.rs:7:5: 7:6\n         StorageDead(_2);                 // bb0[15]: scope 1 at $DIR/storage_ranges.rs:7:5: 7:6\n@@ -67,7 +73,13 @@ fn main() -> () {\n                                          // + span: $DIR/storage_ranges.rs:8:13: 8:14\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n         FakeRead(ForLet, _6);            // bb0[18]: scope 1 at $DIR/storage_ranges.rs:8:9: 8:10\n-        _0 = ();                         // bb0[19]: scope 0 at $DIR/storage_ranges.rs:3:11: 9:2\n+        _0 = const ();                   // bb0[19]: scope 0 at $DIR/storage_ranges.rs:3:11: 9:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/storage_ranges.rs:3:11: 9:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         StorageDead(_6);                 // bb0[20]: scope 1 at $DIR/storage_ranges.rs:9:1: 9:2\n         StorageDead(_1);                 // bb0[21]: scope 0 at $DIR/storage_ranges.rs:9:1: 9:2\n         return;                          // bb0[22]: scope 0 at $DIR/storage_ranges.rs:9:2: 9:2"}, {"sha": "b46adadf1016ad16ebc9229a4097b44b1693c469", "filename": "src/test/mir-opt/uniform_array_move_out/rustc.move_out_by_subslice.mir_map.0.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funiform_array_move_out%2Frustc.move_out_by_subslice.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funiform_array_move_out%2Frustc.move_out_by_subslice.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funiform_array_move_out%2Frustc.move_out_by_subslice.mir_map.0.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -83,7 +83,13 @@ fn move_out_by_subslice() -> () {\n         FakeRead(ForLet, _1);            // bb9[1]: scope 0 at $DIR/uniform_array_move_out.rs:11:9: 11:10\n         StorageLive(_6);                 // bb9[2]: scope 1 at $DIR/uniform_array_move_out.rs:12:10: 12:17\n         _6 = move _1[0..2];              // bb9[3]: scope 1 at $DIR/uniform_array_move_out.rs:12:10: 12:17\n-        _0 = ();                         // bb9[4]: scope 0 at $DIR/uniform_array_move_out.rs:10:27: 13:2\n+        _0 = const ();                   // bb9[4]: scope 0 at $DIR/uniform_array_move_out.rs:10:27: 13:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/uniform_array_move_out.rs:10:27: 13:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         drop(_6) -> [return: bb12, unwind: bb10]; // bb9[5]: scope 1 at $DIR/uniform_array_move_out.rs:13:1: 13:2\n     }\n "}, {"sha": "851107efe11f258f6c694752d47b33625ac99d98", "filename": "src/test/mir-opt/uniform_array_move_out/rustc.move_out_from_end.mir_map.0.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funiform_array_move_out%2Frustc.move_out_from_end.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funiform_array_move_out%2Frustc.move_out_from_end.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funiform_array_move_out%2Frustc.move_out_from_end.mir_map.0.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -83,7 +83,13 @@ fn move_out_from_end() -> () {\n         FakeRead(ForLet, _1);            // bb9[1]: scope 0 at $DIR/uniform_array_move_out.rs:5:9: 5:10\n         StorageLive(_6);                 // bb9[2]: scope 1 at $DIR/uniform_array_move_out.rs:6:14: 6:16\n         _6 = move _1[1 of 2];            // bb9[3]: scope 1 at $DIR/uniform_array_move_out.rs:6:14: 6:16\n-        _0 = ();                         // bb9[4]: scope 0 at $DIR/uniform_array_move_out.rs:4:24: 7:2\n+        _0 = const ();                   // bb9[4]: scope 0 at $DIR/uniform_array_move_out.rs:4:24: 7:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/uniform_array_move_out.rs:4:24: 7:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         drop(_6) -> [return: bb12, unwind: bb10]; // bb9[5]: scope 1 at $DIR/uniform_array_move_out.rs:7:1: 7:2\n     }\n "}, {"sha": "1ee2297daaca43302eab9c6cf592f833ad14b430", "filename": "src/test/mir-opt/uninhabited-enum/rustc.process_void.SimplifyLocals.after.mir", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funinhabited-enum%2Frustc.process_void.SimplifyLocals.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funinhabited-enum%2Frustc.process_void.SimplifyLocals.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited-enum%2Frustc.process_void.SimplifyLocals.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -13,7 +13,14 @@ fn process_void(_1: *const Void) -> () {\n     bb0: {\n         StorageLive(_2);                 // bb0[0]: scope 0 at $DIR/uninhabited-enum.rs:14:8: 14:14\n         _2 = &(*_1);                     // bb0[1]: scope 2 at $DIR/uninhabited-enum.rs:14:26: 14:33\n-        StorageDead(_2);                 // bb0[2]: scope 0 at $DIR/uninhabited-enum.rs:17:1: 17:2\n-        return;                          // bb0[3]: scope 0 at $DIR/uninhabited-enum.rs:17:2: 17:2\n+        _0 = const ();                   // bb0[2]: scope 0 at $DIR/uninhabited-enum.rs:13:41: 17:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/uninhabited-enum.rs:13:41: 17:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+        StorageDead(_2);                 // bb0[3]: scope 0 at $DIR/uninhabited-enum.rs:17:1: 17:2\n+        return;                          // bb0[4]: scope 0 at $DIR/uninhabited-enum.rs:17:2: 17:2\n     }\n }"}, {"sha": "fba77dfe239efcf1a6e4d0b8ac9a2a545cce27cf", "filename": "src/test/mir-opt/uninhabited_enum_branching/rustc.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching%2Frustc.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching%2Frustc.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching%2Frustc.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -64,7 +64,13 @@ fn main() -> () {\n     bb3: {\n         StorageDead(_7);                 // bb3[0]: scope 0 at $DIR/uninhabited_enum_branching.rs:29:6: 29:7\n         StorageDead(_6);                 // bb3[1]: scope 0 at $DIR/uninhabited_enum_branching.rs:29:6: 29:7\n-        _0 = ();                         // bb3[2]: scope 0 at $DIR/uninhabited_enum_branching.rs:19:11: 30:2\n+        _0 = const ();                   // bb3[2]: scope 0 at $DIR/uninhabited_enum_branching.rs:19:11: 30:2\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/uninhabited_enum_branching.rs:19:11: 30:2\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         return;                          // bb3[3]: scope 0 at $DIR/uninhabited_enum_branching.rs:30:2: 30:2\n     }\n }"}, {"sha": "35842fdaa4e7e9c6145635b7e7dfbb8455f9f808", "filename": "src/test/mir-opt/uninhabited_enum_branching/rustc.main.UninhabitedEnumBranching.diff", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching%2Frustc.main.UninhabitedEnumBranching.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching%2Frustc.main.UninhabitedEnumBranching.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching%2Frustc.main.UninhabitedEnumBranching.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -99,7 +99,13 @@\n       bb7: {\n           StorageDead(_7);                 // bb7[0]: scope 0 at $DIR/uninhabited_enum_branching.rs:29:6: 29:7\n           StorageDead(_6);                 // bb7[1]: scope 0 at $DIR/uninhabited_enum_branching.rs:29:6: 29:7\n-          _0 = ();                         // bb7[2]: scope 0 at $DIR/uninhabited_enum_branching.rs:19:11: 30:2\n+          _0 = const ();                   // bb7[2]: scope 0 at $DIR/uninhabited_enum_branching.rs:19:11: 30:2\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/uninhabited_enum_branching.rs:19:11: 30:2\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           return;                          // bb7[3]: scope 0 at $DIR/uninhabited_enum_branching.rs:30:2: 30:2\n       }\n   }"}, {"sha": "d530a9994098347347056013dad9e6f6ea7ba04a", "filename": "src/test/mir-opt/unreachable/rustc.main.UnreachablePropagation.diff", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable%2Frustc.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable%2Frustc.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable%2Frustc.main.UnreachablePropagation.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -35,7 +35,13 @@\n       }\n   \n       bb2: {\n-          _0 = ();                         // bb2[0]: scope 0 at $DIR/unreachable.rs:9:5: 19:6\n+          _0 = const ();                   // bb2[0]: scope 0 at $DIR/unreachable.rs:9:5: 19:6\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable.rs:9:5: 19:6\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb2[1]: scope 0 at $DIR/unreachable.rs:20:1: 20:2\n           return;                          // bb2[2]: scope 0 at $DIR/unreachable.rs:20:2: 20:2\n -     }\n@@ -64,7 +70,13 @@\n -                                          // mir::Constant\n -                                          // + span: $DIR/unreachable.rs:15:18: 15:20\n -                                          // + literal: Const { ty: i32, val: Value(Scalar(0x0000002a)) }\n--         _5 = ();                         // bb4[1]: scope 2 at $DIR/unreachable.rs:14:16: 16:10\n+-         _5 = const ();                   // bb4[1]: scope 2 at $DIR/unreachable.rs:14:16: 16:10\n+-                                          // ty::Const\n+-                                          // + ty: ()\n+-                                          // + val: Value(Scalar(<ZST>))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/unreachable.rs:14:16: 16:10\n+-                                          // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         goto -> bb6;                     // bb4[2]: scope 2 at $DIR/unreachable.rs:12:9: 16:10\n -     }\n - \n@@ -76,7 +88,13 @@\n -                                          // mir::Constant\n -                                          // + span: $DIR/unreachable.rs:13:18: 13:20\n -                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000015)) }\n--         _5 = ();                         // bb5[1]: scope 2 at $DIR/unreachable.rs:12:17: 14:10\n+-         _5 = const ();                   // bb5[1]: scope 2 at $DIR/unreachable.rs:12:17: 14:10\n+-                                          // ty::Const\n+-                                          // + ty: ()\n+-                                          // + val: Value(Scalar(<ZST>))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/unreachable.rs:12:17: 14:10\n+-                                          // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         goto -> bb6;                     // bb5[2]: scope 2 at $DIR/unreachable.rs:12:9: 16:10\n -     }\n - "}, {"sha": "2b3ab80fa0f812af59fb0a454aad6c7ce568fe62", "filename": "src/test/mir-opt/unreachable_asm/rustc.main.UnreachablePropagation.diff", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable_asm%2Frustc.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable_asm%2Frustc.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm%2Frustc.main.UnreachablePropagation.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -37,7 +37,13 @@\n       }\n   \n       bb2: {\n-          _0 = ();                         // bb2[0]: scope 0 at $DIR/unreachable_asm.rs:11:5: 23:6\n+          _0 = const ();                   // bb2[0]: scope 0 at $DIR/unreachable_asm.rs:11:5: 23:6\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm.rs:11:5: 23:6\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb2[1]: scope 0 at $DIR/unreachable_asm.rs:24:1: 24:2\n           return;                          // bb2[2]: scope 0 at $DIR/unreachable_asm.rs:24:2: 24:2\n       }\n@@ -66,7 +72,13 @@\n                                            // mir::Constant\n                                            // + span: $DIR/unreachable_asm.rs:17:18: 17:20\n                                            // + literal: Const { ty: i32, val: Value(Scalar(0x0000002a)) }\n-          _5 = ();                         // bb4[1]: scope 2 at $DIR/unreachable_asm.rs:16:16: 18:10\n+          _5 = const ();                   // bb4[1]: scope 2 at $DIR/unreachable_asm.rs:16:16: 18:10\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm.rs:16:16: 18:10\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           goto -> bb6;                     // bb4[2]: scope 2 at $DIR/unreachable_asm.rs:14:9: 18:10\n       }\n   \n@@ -78,7 +90,13 @@\n                                            // mir::Constant\n                                            // + span: $DIR/unreachable_asm.rs:15:18: 15:20\n                                            // + literal: Const { ty: i32, val: Value(Scalar(0x00000015)) }\n-          _5 = ();                         // bb5[1]: scope 2 at $DIR/unreachable_asm.rs:14:17: 16:10\n+          _5 = const ();                   // bb5[1]: scope 2 at $DIR/unreachable_asm.rs:14:17: 16:10\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm.rs:14:17: 16:10\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           goto -> bb6;                     // bb5[2]: scope 2 at $DIR/unreachable_asm.rs:14:9: 18:10\n       }\n   \n@@ -87,7 +105,13 @@\n           StorageDead(_5);                 // bb6[1]: scope 2 at $DIR/unreachable_asm.rs:18:9: 18:10\n           StorageLive(_7);                 // bb6[2]: scope 2 at $DIR/unreachable_asm.rs:21:9: 21:37\n           llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // bb6[3]: scope 3 at $DIR/unreachable_asm.rs:21:18: 21:35\n-          _7 = ();                         // bb6[4]: scope 3 at $DIR/unreachable_asm.rs:21:9: 21:37\n+          _7 = const ();                   // bb6[4]: scope 3 at $DIR/unreachable_asm.rs:21:9: 21:37\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm.rs:21:9: 21:37\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_7);                 // bb6[5]: scope 2 at $DIR/unreachable_asm.rs:21:36: 21:37\n           StorageLive(_8);                 // bb6[6]: scope 2 at $DIR/unreachable_asm.rs:22:9: 22:21\n           unreachable;                     // bb6[7]: scope 2 at $DIR/unreachable_asm.rs:22:15: 22:17"}, {"sha": "c3760f6a7fccf55533817ef80dfbe72de9954353", "filename": "src/test/mir-opt/unreachable_asm_2/rustc.main.UnreachablePropagation.diff", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable_asm_2%2Frustc.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable_asm_2%2Frustc.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm_2%2Frustc.main.UnreachablePropagation.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -40,7 +40,13 @@\n       }\n   \n       bb2: {\n-          _0 = ();                         // bb2[0]: scope 0 at $DIR/unreachable_asm_2.rs:11:5: 25:6\n+          _0 = const ();                   // bb2[0]: scope 0 at $DIR/unreachable_asm_2.rs:11:5: 25:6\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm_2.rs:11:5: 25:6\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb2[1]: scope 0 at $DIR/unreachable_asm_2.rs:26:1: 26:2\n           return;                          // bb2[2]: scope 0 at $DIR/unreachable_asm_2.rs:26:2: 26:2\n       }\n@@ -64,7 +70,13 @@\n       bb4: {\n           StorageLive(_8);                 // bb4[0]: scope 2 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n           llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // bb4[1]: scope 4 at $DIR/unreachable_asm_2.rs:20:22: 20:39\n-          _8 = ();                         // bb4[2]: scope 4 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n+          _8 = const ();                   // bb4[2]: scope 4 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm_2.rs:20:13: 20:41\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_8);                 // bb4[3]: scope 2 at $DIR/unreachable_asm_2.rs:20:40: 20:41\n           _4 = const 42i32;                // bb4[4]: scope 2 at $DIR/unreachable_asm_2.rs:21:13: 21:20\n                                            // ty::Const\n@@ -73,15 +85,27 @@\n                                            // mir::Constant\n                                            // + span: $DIR/unreachable_asm_2.rs:21:18: 21:20\n                                            // + literal: Const { ty: i32, val: Value(Scalar(0x0000002a)) }\n-          _5 = ();                         // bb4[5]: scope 2 at $DIR/unreachable_asm_2.rs:18:16: 22:10\n+          _5 = const ();                   // bb4[5]: scope 2 at $DIR/unreachable_asm_2.rs:18:16: 22:10\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm_2.rs:18:16: 22:10\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         goto -> bb6;                     // bb4[6]: scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n +         unreachable;                     // bb4[6]: scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n       }\n   \n       bb5: {\n           StorageLive(_7);                 // bb5[0]: scope 2 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n           llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // bb5[1]: scope 3 at $DIR/unreachable_asm_2.rs:16:22: 16:39\n-          _7 = ();                         // bb5[2]: scope 3 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n+          _7 = const ();                   // bb5[2]: scope 3 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm_2.rs:16:13: 16:41\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_7);                 // bb5[3]: scope 2 at $DIR/unreachable_asm_2.rs:16:40: 16:41\n           _4 = const 21i32;                // bb5[4]: scope 2 at $DIR/unreachable_asm_2.rs:17:13: 17:20\n                                            // ty::Const\n@@ -90,7 +114,13 @@\n                                            // mir::Constant\n                                            // + span: $DIR/unreachable_asm_2.rs:17:18: 17:20\n                                            // + literal: Const { ty: i32, val: Value(Scalar(0x00000015)) }\n-          _5 = ();                         // bb5[5]: scope 2 at $DIR/unreachable_asm_2.rs:14:17: 18:10\n+          _5 = const ();                   // bb5[5]: scope 2 at $DIR/unreachable_asm_2.rs:14:17: 18:10\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_asm_2.rs:14:17: 18:10\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         goto -> bb6;                     // bb5[6]: scope 2 at $DIR/unreachable_asm_2.rs:14:9: 22:10\n -     }\n - "}, {"sha": "2fe0c8dc1e7856ba7608a329a16a6eb509abeb8b", "filename": "src/test/mir-opt/unreachable_diverging/rustc.main.UnreachablePropagation.diff", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable_diverging%2Frustc.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Funreachable_diverging%2Frustc.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_diverging%2Frustc.main.UnreachablePropagation.diff?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -42,7 +42,13 @@\n       }\n   \n       bb2: {\n-          _0 = ();                         // bb2[0]: scope 1 at $DIR/unreachable_diverging.rs:14:5: 19:6\n+          _0 = const ();                   // bb2[0]: scope 1 at $DIR/unreachable_diverging.rs:14:5: 19:6\n+                                           // ty::Const\n+                                           // + ty: ()\n+                                           // + val: Value(Scalar(<ZST>))\n+                                           // mir::Constant\n+                                           // + span: $DIR/unreachable_diverging.rs:14:5: 19:6\n+                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n           StorageDead(_1);                 // bb2[1]: scope 0 at $DIR/unreachable_diverging.rs:20:1: 20:2\n           StorageDead(_2);                 // bb2[2]: scope 0 at $DIR/unreachable_diverging.rs:20:1: 20:2\n           return;                          // bb2[3]: scope 0 at $DIR/unreachable_diverging.rs:20:2: 20:2\n@@ -59,14 +65,20 @@\n       }\n   \n       bb4: {\n--         _5 = ();                         // bb4[0]: scope 2 at $DIR/unreachable_diverging.rs:15:9: 17:10\n+-         _5 = const ();                   // bb4[0]: scope 2 at $DIR/unreachable_diverging.rs:15:9: 17:10\n++         _5 = const loop_forever() -> bb5; // bb4[0]: scope 2 at $DIR/unreachable_diverging.rs:16:13: 16:27\n+                                           // ty::Const\n+-                                          // + ty: ()\n+-                                          // + val: Value(Scalar(<ZST>))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/unreachable_diverging.rs:15:9: 17:10\n+-                                          // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n -         goto -> bb6;                     // bb4[1]: scope 2 at $DIR/unreachable_diverging.rs:15:9: 17:10\n -     }\n - \n -     bb5: {\n -         _5 = const loop_forever() -> bb6; // bb5[0]: scope 2 at $DIR/unreachable_diverging.rs:16:13: 16:27\n-+         _5 = const loop_forever() -> bb5; // bb4[0]: scope 2 at $DIR/unreachable_diverging.rs:16:13: 16:27\n-                                           // ty::Const\n+-                                          // ty::Const\n                                            // + ty: fn() {loop_forever}\n                                            // + val: Value(Scalar(<ZST>))\n                                            // mir::Constant"}, {"sha": "0ac7989166ee04d7d6cac2e60e9f441d64ed91aa", "filename": "src/test/mir-opt/while-storage/rustc.while_loop.PreCodegen.after.mir", "status": "modified", "additions": 34, "deletions": 16, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fwhile-storage%2Frustc.while_loop.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/4714e202ae828f4da28c003433b2501006657082/src%2Ftest%2Fmir-opt%2Fwhile-storage%2Frustc.while_loop.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile-storage%2Frustc.while_loop.PreCodegen.after.mir?ref=4714e202ae828f4da28c003433b2501006657082", "patch": "@@ -23,40 +23,58 @@ fn while_loop(_1: bool) -> () {\n \n     bb1: {\n         StorageDead(_3);                 // bb1[0]: scope 0 at $DIR/while-storage.rs:10:21: 10:22\n-        switchInt(_2) -> [false: bb6, otherwise: bb2]; // bb1[1]: scope 0 at $DIR/while-storage.rs:10:5: 14:6\n+        switchInt(_2) -> [false: bb2, otherwise: bb3]; // bb1[1]: scope 0 at $DIR/while-storage.rs:10:5: 14:6\n     }\n \n     bb2: {\n-        StorageLive(_4);                 // bb2[0]: scope 0 at $DIR/while-storage.rs:11:12: 11:23\n-        StorageLive(_5);                 // bb2[1]: scope 0 at $DIR/while-storage.rs:11:21: 11:22\n-        _5 = _1;                         // bb2[2]: scope 0 at $DIR/while-storage.rs:11:21: 11:22\n-        _4 = const get_bool(move _5) -> bb3; // bb2[3]: scope 0 at $DIR/while-storage.rs:11:12: 11:23\n+        _0 = const ();                   // bb2[0]: scope 0 at $DIR/while-storage.rs:10:5: 14:6\n                                          // ty::Const\n-                                         // + ty: fn(bool) -> bool {get_bool}\n+                                         // + ty: ()\n                                          // + val: Value(Scalar(<ZST>))\n                                          // mir::Constant\n-                                         // + span: $DIR/while-storage.rs:11:12: 11:20\n-                                         // + literal: Const { ty: fn(bool) -> bool {get_bool}, val: Value(Scalar(<ZST>)) }\n+                                         // + span: $DIR/while-storage.rs:10:5: 14:6\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+        goto -> bb7;                     // bb2[1]: scope 0 at $DIR/while-storage.rs:10:5: 14:6\n     }\n \n     bb3: {\n-        StorageDead(_5);                 // bb3[0]: scope 0 at $DIR/while-storage.rs:11:22: 11:23\n-        switchInt(_4) -> [false: bb4, otherwise: bb5]; // bb3[1]: scope 0 at $DIR/while-storage.rs:11:9: 13:10\n+        StorageLive(_4);                 // bb3[0]: scope 0 at $DIR/while-storage.rs:11:12: 11:23\n+        StorageLive(_5);                 // bb3[1]: scope 0 at $DIR/while-storage.rs:11:21: 11:22\n+        _5 = _1;                         // bb3[2]: scope 0 at $DIR/while-storage.rs:11:21: 11:22\n+        _4 = const get_bool(move _5) -> bb4; // bb3[3]: scope 0 at $DIR/while-storage.rs:11:12: 11:23\n+                                         // ty::Const\n+                                         // + ty: fn(bool) -> bool {get_bool}\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/while-storage.rs:11:12: 11:20\n+                                         // + literal: Const { ty: fn(bool) -> bool {get_bool}, val: Value(Scalar(<ZST>)) }\n     }\n \n     bb4: {\n-        StorageDead(_4);                 // bb4[0]: scope 0 at $DIR/while-storage.rs:14:5: 14:6\n-        StorageDead(_2);                 // bb4[1]: scope 0 at $DIR/while-storage.rs:10:21: 10:22\n-        goto -> bb0;                     // bb4[2]: scope 0 at $DIR/while-storage.rs:10:5: 14:6\n+        StorageDead(_5);                 // bb4[0]: scope 0 at $DIR/while-storage.rs:11:22: 11:23\n+        switchInt(_4) -> [false: bb5, otherwise: bb6]; // bb4[1]: scope 0 at $DIR/while-storage.rs:11:9: 13:10\n     }\n \n     bb5: {\n         StorageDead(_4);                 // bb5[0]: scope 0 at $DIR/while-storage.rs:14:5: 14:6\n-        goto -> bb6;                     // bb5[1]: scope 0 at $DIR/while-storage.rs:12:13: 12:18\n+        StorageDead(_2);                 // bb5[1]: scope 0 at $DIR/while-storage.rs:10:21: 10:22\n+        goto -> bb0;                     // bb5[2]: scope 0 at $DIR/while-storage.rs:10:5: 14:6\n     }\n \n     bb6: {\n-        StorageDead(_2);                 // bb6[0]: scope 0 at $DIR/while-storage.rs:10:21: 10:22\n-        return;                          // bb6[1]: scope 0 at $DIR/while-storage.rs:15:2: 15:2\n+        _0 = const ();                   // bb6[0]: scope 0 at $DIR/while-storage.rs:12:13: 12:18\n+                                         // ty::Const\n+                                         // + ty: ()\n+                                         // + val: Value(Scalar(<ZST>))\n+                                         // mir::Constant\n+                                         // + span: $DIR/while-storage.rs:12:13: 12:18\n+                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n+        StorageDead(_4);                 // bb6[1]: scope 0 at $DIR/while-storage.rs:14:5: 14:6\n+        goto -> bb7;                     // bb6[2]: scope 0 at $DIR/while-storage.rs:12:13: 12:18\n+    }\n+\n+    bb7: {\n+        StorageDead(_2);                 // bb7[0]: scope 0 at $DIR/while-storage.rs:10:21: 10:22\n+        return;                          // bb7[1]: scope 0 at $DIR/while-storage.rs:15:2: 15:2\n     }\n }"}]}