{"sha": "dcdbdc10036b444ef39c329e9440d4acc6975fda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZGJkYzEwMDM2YjQ0NGVmMzljMzI5ZTk0NDBkNGFjYzY5NzVmZGE=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-09-24T07:35:42Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-09-24T07:35:42Z"}, "message": "Fix rebase fallout", "tree": {"sha": "85fc7725a6f5503d20b29cb532bc5683b2a907e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85fc7725a6f5503d20b29cb532bc5683b2a907e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcdbdc10036b444ef39c329e9440d4acc6975fda", "comment_count": 17, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdbdc10036b444ef39c329e9440d4acc6975fda", "html_url": "https://github.com/rust-lang/rust/commit/dcdbdc10036b444ef39c329e9440d4acc6975fda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcdbdc10036b444ef39c329e9440d4acc6975fda/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65cca7c8b14e9c5673af4921a57c2ccbac3fc2cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/65cca7c8b14e9c5673af4921a57c2ccbac3fc2cb", "html_url": "https://github.com/rust-lang/rust/commit/65cca7c8b14e9c5673af4921a57c2ccbac3fc2cb"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "8bf13e20fedf79e6f5b685185a9945b39a99f687", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcdbdc10036b444ef39c329e9440d4acc6975fda/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdbdc10036b444ef39c329e9440d4acc6975fda/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=dcdbdc10036b444ef39c329e9440d4acc6975fda", "patch": "@@ -440,7 +440,7 @@ fn initial_syntax_expander_table() -> SyntaxEnv {\n                             builtin_normal_expander(\n                                     ext::cfg::expand_cfg));\n     syntax_expanders.insert(intern(\"cfg_attr\"),\n-                            ItemModifier(ext::cfg_attr::expand));\n+                            Modifier(box ext::cfg_attr::expand));\n     syntax_expanders.insert(intern(\"trace_macros\"),\n                             builtin_normal_expander(\n                                     ext::trace_macros::expand_trace_macros));"}, {"sha": "ad02b50f248b4a6f3be98c98e58c6fbb6baf8783", "filename": "src/libsyntax/ext/cfg_attr.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dcdbdc10036b444ef39c329e9440d4acc6975fda/src%2Flibsyntax%2Fext%2Fcfg_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdbdc10036b444ef39c329e9440d4acc6975fda/src%2Flibsyntax%2Fext%2Fcfg_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fcfg_attr.rs?ref=dcdbdc10036b444ef39c329e9440d4acc6975fda", "patch": "@@ -8,45 +8,43 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::gc::{Gc, GC};\n-\n use ast;\n use attr;\n use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n+use ptr::P;\n \n-pub fn expand(cx: &mut ExtCtxt, sp: Span, mi: Gc<ast::MetaItem>, it: Gc<ast::Item>)\n-          -> Gc<ast::Item> {\n+pub fn expand(cx: &mut ExtCtxt, sp: Span, mi: &ast::MetaItem, it: P<ast::Item>) -> P<ast::Item> {\n     let (cfg, attr) = match mi.node {\n-        ast::MetaList(_, ref mis) if mis.len() == 2 => (mis[0], mis[1]),\n+        ast::MetaList(_, ref mis) if mis.len() == 2 => (&mis[0], &mis[1]),\n         _ => {\n             cx.span_err(sp, \"expected `#[cfg_attr(<cfg pattern>, <attr>)]`\");\n             return it;\n         }\n     };\n \n     let mut out = (*it).clone();\n-    if cfg_matches(cx, cfg) {\n-        out.attrs.push(cx.attribute(attr.span, attr));\n+    if cfg_matches(cx, &**cfg) {\n+        out.attrs.push(cx.attribute(attr.span, attr.clone()));\n     }\n \n-    box(GC) out\n+    P(out)\n }\n \n-fn cfg_matches(cx: &mut ExtCtxt, cfg: Gc<ast::MetaItem>) -> bool {\n+fn cfg_matches(cx: &mut ExtCtxt, cfg: &ast::MetaItem) -> bool {\n     match cfg.node {\n         ast::MetaList(ref pred, ref mis) if pred.get() == \"any\" =>\n-            mis.iter().any(|mi| cfg_matches(cx, *mi)),\n+            mis.iter().any(|mi| cfg_matches(cx, &**mi)),\n         ast::MetaList(ref pred, ref mis) if pred.get() == \"all\" =>\n-            mis.iter().all(|mi| cfg_matches(cx, *mi)),\n+            mis.iter().all(|mi| cfg_matches(cx, &**mi)),\n         ast::MetaList(ref pred, ref mis) if pred.get() == \"not\" => {\n             if mis.len() != 1 {\n                 cx.span_err(cfg.span, format!(\"expected 1 value, got {}\",\n                                               mis.len()).as_slice());\n                 return false;\n             }\n-            !cfg_matches(cx, mis[0])\n+            !cfg_matches(cx, &*mis[0])\n         }\n         ast::MetaList(ref pred, _) => {\n             cx.span_err(cfg.span,"}, {"sha": "091b0ce8ed949adab4d483e223d787e5e2c6489f", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcdbdc10036b444ef39c329e9440d4acc6975fda/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdbdc10036b444ef39c329e9440d4acc6975fda/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=dcdbdc10036b444ef39c329e9440d4acc6975fda", "patch": "@@ -340,7 +340,7 @@ fn is_ignored(cx: &TestCtxt, i: &ast::Item) -> bool {\n         attr.check_name(\"ignore\") && match attr.meta_item_list() {\n             Some(ref cfgs) => {\n                 if cfgs.iter().any(|cfg| cfg.check_name(\"cfg\")) {\n-                    cx.sess.span_warn(attr.span,\n+                    cx.span_diagnostic.span_warn(attr.span,\n                             \"The use of cfg filters in #[ignore] is \\\n                              deprecated. Use #[cfg_attr(<cfg pattern>, \\\n                              ignore)] instead.\");"}]}