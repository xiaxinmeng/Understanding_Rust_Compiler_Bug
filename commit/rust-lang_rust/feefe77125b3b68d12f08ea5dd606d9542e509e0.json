{"sha": "feefe77125b3b68d12f08ea5dd606d9542e509e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZWZlNzcxMjViM2I2OGQxMmYwOGVhNWRkNjA2ZDk1NDJlNTA5ZTA=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-20T02:08:51Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-20T02:56:52Z"}, "message": "Remove `{in,de}flate_bytes_zlib`.\n\nThese functions are unused.", "tree": {"sha": "0469a4062fa6b26d6bd4ae3d96565e7e1375c885", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0469a4062fa6b26d6bd4ae3d96565e7e1375c885"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feefe77125b3b68d12f08ea5dd606d9542e509e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feefe77125b3b68d12f08ea5dd606d9542e509e0", "html_url": "https://github.com/rust-lang/rust/commit/feefe77125b3b68d12f08ea5dd606d9542e509e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feefe77125b3b68d12f08ea5dd606d9542e509e0/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c429872a32c3005cf2b347025163361218634a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c429872a32c3005cf2b347025163361218634a4", "html_url": "https://github.com/rust-lang/rust/commit/0c429872a32c3005cf2b347025163361218634a4"}], "stats": {"total": 30, "additions": 6, "deletions": 24}, "files": [{"sha": "89df931da0299d01c3b40f2079fb2fd4072c2d20", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/feefe77125b3b68d12f08ea5dd606d9542e509e0/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feefe77125b3b68d12f08ea5dd606d9542e509e0/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=feefe77125b3b68d12f08ea5dd606d9542e509e0", "patch": "@@ -95,10 +95,10 @@ extern \"C\" {\n }\n \n const LZ_NORM: c_int = 0x80;  // LZ with 128 probes, \"normal\"\n-const TINFL_FLAG_PARSE_ZLIB_HEADER: c_int = 0x1; // parse zlib header and adler32 checksum\n-const TDEFL_WRITE_ZLIB_HEADER: c_int = 0x01000; // write zlib header and adler32 checksum\n \n-fn deflate_bytes_internal(bytes: &[u8], flags: c_int) -> Bytes {\n+/// Compress a buffer without writing any sort of header on the output.\n+pub fn deflate_bytes(bytes: &[u8]) -> Bytes {\n+    let flags = LZ_NORM;\n     unsafe {\n         let mut outsz: size_t = 0;\n         let res = tdefl_compress_mem_to_heap(bytes.as_ptr() as *const _,\n@@ -113,17 +113,9 @@ fn deflate_bytes_internal(bytes: &[u8], flags: c_int) -> Bytes {\n     }\n }\n \n-/// Compress a buffer, without writing any sort of header on the output.\n-pub fn deflate_bytes(bytes: &[u8]) -> Bytes {\n-    deflate_bytes_internal(bytes, LZ_NORM)\n-}\n-\n-/// Compress a buffer, using a header that zlib can understand.\n-pub fn deflate_bytes_zlib(bytes: &[u8]) -> Bytes {\n-    deflate_bytes_internal(bytes, LZ_NORM | TDEFL_WRITE_ZLIB_HEADER)\n-}\n-\n-fn inflate_bytes_internal(bytes: &[u8], flags: c_int) -> Result<Bytes, Error> {\n+/// Decompress a buffer without parsing any sort of header on the input.\n+pub fn inflate_bytes(bytes: &[u8]) -> Result<Bytes, Error> {\n+    let flags = 0;\n     unsafe {\n         let mut outsz: size_t = 0;\n         let res = tinfl_decompress_mem_to_heap(bytes.as_ptr() as *const _,\n@@ -141,16 +133,6 @@ fn inflate_bytes_internal(bytes: &[u8], flags: c_int) -> Result<Bytes, Error> {\n     }\n }\n \n-/// Decompress a buffer, without parsing any sort of header on the input.\n-pub fn inflate_bytes(bytes: &[u8]) -> Result<Bytes, Error> {\n-    inflate_bytes_internal(bytes, 0)\n-}\n-\n-/// Decompress a buffer that starts with a zlib header.\n-pub fn inflate_bytes_zlib(bytes: &[u8]) -> Result<Bytes, Error> {\n-    inflate_bytes_internal(bytes, TINFL_FLAG_PARSE_ZLIB_HEADER)\n-}\n-\n #[cfg(test)]\n mod tests {\n     #![allow(deprecated)]"}]}