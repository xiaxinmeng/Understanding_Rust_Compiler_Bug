{"sha": "0445574340f972ae892a6ef4589ba63756883a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NDU1NzQzNDBmOTcyYWU4OTJhNmVmNDU4OWJhNjM3NTY4ODNhMGE=", "commit": {"author": {"name": "Ana-Maria", "email": "mihalacheana.maria@yahoo.com", "date": "2020-02-24T16:23:55Z"}, "committer": {"name": "Ana-Maria", "email": "mihalacheana.maria@yahoo.com", "date": "2020-02-24T16:23:55Z"}, "message": "Replace uses of Cell::get + Cell::set with Cell::replace.", "tree": {"sha": "c9e2c546ff86cef1d666fe64c927f82d410ce37d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9e2c546ff86cef1d666fe64c927f82d410ce37d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0445574340f972ae892a6ef4589ba63756883a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0445574340f972ae892a6ef4589ba63756883a0a", "html_url": "https://github.com/rust-lang/rust/commit/0445574340f972ae892a6ef4589ba63756883a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0445574340f972ae892a6ef4589ba63756883a0a/comments", "author": {"login": "anyska", "id": 13694484, "node_id": "MDQ6VXNlcjEzNjk0NDg0", "avatar_url": "https://avatars.githubusercontent.com/u/13694484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anyska", "html_url": "https://github.com/anyska", "followers_url": "https://api.github.com/users/anyska/followers", "following_url": "https://api.github.com/users/anyska/following{/other_user}", "gists_url": "https://api.github.com/users/anyska/gists{/gist_id}", "starred_url": "https://api.github.com/users/anyska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anyska/subscriptions", "organizations_url": "https://api.github.com/users/anyska/orgs", "repos_url": "https://api.github.com/users/anyska/repos", "events_url": "https://api.github.com/users/anyska/events{/privacy}", "received_events_url": "https://api.github.com/users/anyska/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anyska", "id": 13694484, "node_id": "MDQ6VXNlcjEzNjk0NDg0", "avatar_url": "https://avatars.githubusercontent.com/u/13694484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anyska", "html_url": "https://github.com/anyska", "followers_url": "https://api.github.com/users/anyska/followers", "following_url": "https://api.github.com/users/anyska/following{/other_user}", "gists_url": "https://api.github.com/users/anyska/gists{/gist_id}", "starred_url": "https://api.github.com/users/anyska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anyska/subscriptions", "organizations_url": "https://api.github.com/users/anyska/orgs", "repos_url": "https://api.github.com/users/anyska/repos", "events_url": "https://api.github.com/users/anyska/events{/privacy}", "received_events_url": "https://api.github.com/users/anyska/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a328a0ade570608717b0df654306a5268c9f46", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a328a0ade570608717b0df654306a5268c9f46", "html_url": "https://github.com/rust-lang/rust/commit/d9a328a0ade570608717b0df654306a5268c9f46"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "0726bf30d3b3485c18c6e3e50e5510606c43d578", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0445574340f972ae892a6ef4589ba63756883a0a/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0445574340f972ae892a6ef4589ba63756883a0a/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=0445574340f972ae892a6ef4589ba63756883a0a", "patch": "@@ -64,8 +64,7 @@ thread_local! {\n /// calling the same query.\n pub fn with_no_queries<F: FnOnce() -> R, R>(f: F) -> R {\n     NO_QUERIES.with(|no_queries| {\n-        let old = no_queries.get();\n-        no_queries.set(true);\n+        let old = no_queries.replace(true);\n         let result = f();\n         no_queries.set(old);\n         result\n@@ -78,8 +77,7 @@ pub fn with_no_queries<F: FnOnce() -> R, R>(f: F) -> R {\n /// so this variable disables that check.\n pub fn with_forced_impl_filename_line<F: FnOnce() -> R, R>(f: F) -> R {\n     FORCE_IMPL_FILENAME_LINE.with(|force| {\n-        let old = force.get();\n-        force.set(true);\n+        let old = force.replace(true);\n         let result = f();\n         force.set(old);\n         result\n@@ -89,8 +87,7 @@ pub fn with_forced_impl_filename_line<F: FnOnce() -> R, R>(f: F) -> R {\n /// Adds the `crate::` prefix to paths where appropriate.\n pub fn with_crate_prefix<F: FnOnce() -> R, R>(f: F) -> R {\n     SHOULD_PREFIX_WITH_CRATE.with(|flag| {\n-        let old = flag.get();\n-        flag.set(true);\n+        let old = flag.replace(true);\n         let result = f();\n         flag.set(old);\n         result"}, {"sha": "65f060deb465d2cf14c44910da49546a4b61646b", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0445574340f972ae892a6ef4589ba63756883a0a/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0445574340f972ae892a6ef4589ba63756883a0a/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=0445574340f972ae892a6ef4589ba63756883a0a", "patch": "@@ -730,8 +730,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     where\n         F: FnOnce(&Self) -> R,\n     {\n-        let flag = self.in_snapshot.get();\n-        self.in_snapshot.set(false);\n+        let flag = self.in_snapshot.replace(false);\n         let result = func(self);\n         self.in_snapshot.set(flag);\n         result\n@@ -740,8 +739,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     fn start_snapshot(&self) -> CombinedSnapshot<'a, 'tcx> {\n         debug!(\"start_snapshot()\");\n \n-        let in_snapshot = self.in_snapshot.get();\n-        self.in_snapshot.set(true);\n+        let in_snapshot = self.in_snapshot.replace(true);\n \n         let mut inner = self.inner.borrow_mut();\n         CombinedSnapshot {"}]}