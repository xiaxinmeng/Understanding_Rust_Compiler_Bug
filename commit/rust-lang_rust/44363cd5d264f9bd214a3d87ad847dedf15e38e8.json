{"sha": "44363cd5d264f9bd214a3d87ad847dedf15e38e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MzYzY2Q1ZDI2NGY5YmQyMTRhM2Q4N2FkODQ3ZGVkZjE1ZTM4ZTg=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-06-06T02:06:46Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-06-06T02:06:46Z"}, "message": "fix: clean up warnings\n\nChange-Id: I91a468f6e846ac28574825b8ee7aa02fbff68f63", "tree": {"sha": "1703602891988f9d54aec6e8ef2584f8a1b982b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1703602891988f9d54aec6e8ef2584f8a1b982b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44363cd5d264f9bd214a3d87ad847dedf15e38e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44363cd5d264f9bd214a3d87ad847dedf15e38e8", "html_url": "https://github.com/rust-lang/rust/commit/44363cd5d264f9bd214a3d87ad847dedf15e38e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44363cd5d264f9bd214a3d87ad847dedf15e38e8/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "354be0ae8a42b0dde549660c777661ab3c21b883", "url": "https://api.github.com/repos/rust-lang/rust/commits/354be0ae8a42b0dde549660c777661ab3c21b883", "html_url": "https://github.com/rust-lang/rust/commit/354be0ae8a42b0dde549660c777661ab3c21b883"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "2557ef18e369406d28b32fdf99deacaa3532cf0f", "filename": "crates/ra_hir/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44363cd5d264f9bd214a3d87ad847dedf15e38e8/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44363cd5d264f9bd214a3d87ad847dedf15e38e8/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs?ref=44363cd5d264f9bd214a3d87ad847dedf15e38e8", "patch": "@@ -87,7 +87,7 @@ impl Diagnostic for NoSuchField {\n     fn syntax_node_ptr(&self) -> SyntaxNodePtr {\n         self.field.into()\n     }\n-    fn as_any(&self) -> &(Any + Send + 'static) {\n+    fn as_any(&self) -> &(dyn Any + Send + 'static) {\n         self\n     }\n }\n@@ -109,7 +109,7 @@ impl Diagnostic for UnresolvedModule {\n     fn syntax_node_ptr(&self) -> SyntaxNodePtr {\n         self.decl.into()\n     }\n-    fn as_any(&self) -> &(Any + Send + 'static) {\n+    fn as_any(&self) -> &(dyn Any + Send + 'static) {\n         self\n     }\n }"}, {"sha": "cb039ca376c38841e000a807b951fec89782dc28", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44363cd5d264f9bd214a3d87ad847dedf15e38e8/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44363cd5d264f9bd214a3d87ad847dedf15e38e8/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=44363cd5d264f9bd214a3d87ad847dedf15e38e8", "patch": "@@ -47,7 +47,7 @@ pub fn syntax_node_to_token_tree(node: &SyntaxNode) -> Option<(tt::Subtree, Toke\n \n fn token_tree_to_syntax_node<F>(tt: &tt::Subtree, f: F) -> Result<TreeArc<SyntaxNode>, ExpandError>\n where\n-    F: Fn(&mut ra_parser::TokenSource, &mut ra_parser::TreeSink),\n+    F: Fn(&mut dyn ra_parser::TokenSource, &mut dyn ra_parser::TreeSink),\n {\n     let tokens = [tt.clone().into()];\n     let buffer = TokenBuffer::new(&tokens);"}, {"sha": "874fb8b320dd960f997aeefde97126e5883ab59f", "filename": "crates/ra_syntax/src/parsing/lexer/numbers.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/44363cd5d264f9bd214a3d87ad847dedf15e38e8/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer%2Fnumbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44363cd5d264f9bd214a3d87ad847dedf15e38e8/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer%2Fnumbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer%2Fnumbers.rs?ref=44363cd5d264f9bd214a3d87ad847dedf15e38e8", "patch": "@@ -16,7 +16,7 @@ pub(crate) fn scan_number(c: char, ptr: &mut Ptr) -> SyntaxKind {\n                 ptr.bump();\n                 scan_digits(ptr, true);\n             }\n-            '0'...'9' | '_' | '.' | 'e' | 'E' => {\n+            '0'..='9' | '_' | '.' | 'e' | 'E' => {\n                 scan_digits(ptr, true);\n             }\n             _ => return INT_NUMBER,\n@@ -47,10 +47,10 @@ pub(crate) fn scan_number(c: char, ptr: &mut Ptr) -> SyntaxKind {\n fn scan_digits(ptr: &mut Ptr, allow_hex: bool) {\n     while let Some(c) = ptr.current() {\n         match c {\n-            '_' | '0'...'9' => {\n+            '_' | '0'..='9' => {\n                 ptr.bump();\n             }\n-            'a'...'f' | 'A'...'F' if allow_hex => {\n+            'a'..='f' | 'A'..='F' if allow_hex => {\n                 ptr.bump();\n             }\n             _ => return,"}]}