{"sha": "bcef40e5fb28401e99c75ea19055d60c46d508ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZWY0MGU1ZmIyODQwMWU5OWM3NWVhMTkwNTVkNjBjNDZkNTA4YmE=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-10T19:18:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-10T19:18:37Z"}, "message": "Rollup merge of #87811 - estebank:issue-87549, r=oli-obk\n\nDo not ICE on HIR based WF check when involving lifetimes\n\nFix #87549.", "tree": {"sha": "7bc02b168ff341955afb2bec877dccca1fd23cdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bc02b168ff341955afb2bec877dccca1fd23cdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcef40e5fb28401e99c75ea19055d60c46d508ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhEtENCRBK7hj4Ov3rIwAAp8gIAJI1+QftU3huADx7y+8yJMFq\n/H0EE4PiSPZ4mOnUYl8Z1IjGdOkav5WIEeRWalpUFrq6601t4Vud86BlT+R2g0aT\n+swux3qDoFstLeZSxyFnZ6AWh3vs/NKBicjAsVKmS4SJ2xDzs2Zn42ECqjGDS1xI\nxS1LSzT2NuGH5LoXcILB1WQXpkEXOYu3DEMXdz1GmuWsat7T9C8910hNrePAF97q\nVcn6hgvbU1nJhYe/IXchorkiL387wQNu3cRhBbFyk0YBacV/2NBT6mCMpG+qzOqf\nHimeypabybVuoyUmjVushyyDqCxNSLql8a6KIq38qQKna3P7pzC94wS7ZXNwr7o=\n=epIQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 7bc02b168ff341955afb2bec877dccca1fd23cdc\nparent 444280662633df3649ee24640506c1f6d7090f21\nparent f93cbedadec03e5d4d6733e0756d87b6eb706a4c\nauthor Yuki Okushi <jtitor@2k36.org> 1628623117 +0900\ncommitter GitHub <noreply@github.com> 1628623117 +0900\n\nRollup merge of #87811 - estebank:issue-87549, r=oli-obk\n\nDo not ICE on HIR based WF check when involving lifetimes\n\nFix #87549.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcef40e5fb28401e99c75ea19055d60c46d508ba", "html_url": "https://github.com/rust-lang/rust/commit/bcef40e5fb28401e99c75ea19055d60c46d508ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcef40e5fb28401e99c75ea19055d60c46d508ba/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "444280662633df3649ee24640506c1f6d7090f21", "url": "https://api.github.com/repos/rust-lang/rust/commits/444280662633df3649ee24640506c1f6d7090f21", "html_url": "https://github.com/rust-lang/rust/commit/444280662633df3649ee24640506c1f6d7090f21"}, {"sha": "f93cbedadec03e5d4d6733e0756d87b6eb706a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f93cbedadec03e5d4d6733e0756d87b6eb706a4c", "html_url": "https://github.com/rust-lang/rust/commit/f93cbedadec03e5d4d6733e0756d87b6eb706a4c"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "ac07cc1f03439a360ee0ecff4d13ca356382d0d8", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bcef40e5fb28401e99c75ea19055d60c46d508ba/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcef40e5fb28401e99c75ea19055d60c46d508ba/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=bcef40e5fb28401e99c75ea19055d60c46d508ba", "patch": "@@ -245,9 +245,10 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 if let ObligationCauseCode::WellFormed(Some(wf_loc)) =\n                     root_obligation.cause.code.peel_derives()\n                 {\n-                    if let Some(cause) =\n-                        self.tcx.diagnostic_hir_wf_check((obligation.predicate, wf_loc.clone()))\n-                    {\n+                    if let Some(cause) = self.tcx.diagnostic_hir_wf_check((\n+                        tcx.erase_regions(obligation.predicate),\n+                        wf_loc.clone(),\n+                    )) {\n                         obligation.cause = cause;\n                         span = obligation.cause.span;\n                     }"}, {"sha": "bb398e5698a8018797877601ccd9596c4f9564f5", "filename": "src/test/ui/wf/hir-wf-check-erase-regions.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bcef40e5fb28401e99c75ea19055d60c46d508ba/src%2Ftest%2Fui%2Fwf%2Fhir-wf-check-erase-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcef40e5fb28401e99c75ea19055d60c46d508ba/src%2Ftest%2Fui%2Fwf%2Fhir-wf-check-erase-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fhir-wf-check-erase-regions.rs?ref=bcef40e5fb28401e99c75ea19055d60c46d508ba", "patch": "@@ -0,0 +1,14 @@\n+// Regression test for #87549.\n+// compile-flags: -C incremental=tmp/wf/hir-wf-check-erase-regions\n+\n+pub struct Table<T, const N: usize>([Option<T>; N]);\n+\n+impl<'a, T, const N: usize> IntoIterator for &'a Table<T, N> {\n+    type IntoIter = std::iter::Flatten<std::slice::Iter<'a, T>>; //~ ERROR `&T` is not an iterator\n+    type Item = &'a T;\n+\n+    fn into_iter(self) -> Self::IntoIter { //~ ERROR `&T` is not an iterator\n+        unimplemented!()\n+    }\n+}\n+fn main() {}"}, {"sha": "a704754e82a9210f53a765c2e42cb8f14b2ca34c", "filename": "src/test/ui/wf/hir-wf-check-erase-regions.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/bcef40e5fb28401e99c75ea19055d60c46d508ba/src%2Ftest%2Fui%2Fwf%2Fhir-wf-check-erase-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bcef40e5fb28401e99c75ea19055d60c46d508ba/src%2Ftest%2Fui%2Fwf%2Fhir-wf-check-erase-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fhir-wf-check-erase-regions.stderr?ref=bcef40e5fb28401e99c75ea19055d60c46d508ba", "patch": "@@ -0,0 +1,31 @@\n+error[E0277]: `&T` is not an iterator\n+  --> $DIR/hir-wf-check-erase-regions.rs:7:5\n+   |\n+LL |     type IntoIter = std::iter::Flatten<std::slice::Iter<'a, T>>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `&T` is not an iterator\n+   |\n+  ::: $SRC_DIR/core/src/iter/adapters/flatten.rs:LL:COL\n+   |\n+LL | pub struct Flatten<I: Iterator<Item: IntoIterator>> {\n+   |                                      ------------ required by this bound in `Flatten`\n+   |\n+   = help: the trait `Iterator` is not implemented for `&T`\n+   = note: required because of the requirements on the impl of `IntoIterator` for `&T`\n+\n+error[E0277]: `&T` is not an iterator\n+  --> $DIR/hir-wf-check-erase-regions.rs:10:27\n+   |\n+LL |     fn into_iter(self) -> Self::IntoIter {\n+   |                           ^^^^^^^^^^^^^^ `&T` is not an iterator\n+   |\n+  ::: $SRC_DIR/core/src/iter/adapters/flatten.rs:LL:COL\n+   |\n+LL | pub struct Flatten<I: Iterator<Item: IntoIterator>> {\n+   |                                      ------------ required by this bound in `Flatten`\n+   |\n+   = help: the trait `Iterator` is not implemented for `&T`\n+   = note: required because of the requirements on the impl of `IntoIterator` for `&T`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}