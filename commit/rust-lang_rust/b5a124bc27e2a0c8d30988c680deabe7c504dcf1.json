{"sha": "b5a124bc27e2a0c8d30988c680deabe7c504dcf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1YTEyNGJjMjdlMmEwYzhkMzA5ODhjNjgwZGVhYmU3YzUwNGRjZjE=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:13:32Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/while_loop.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "aeaa0ca91500606bbbf246f1c3747dff0c588052", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aeaa0ca91500606bbbf246f1c3747dff0c588052"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5a124bc27e2a0c8d30988c680deabe7c504dcf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5a124bc27e2a0c8d30988c680deabe7c504dcf1", "html_url": "https://github.com/rust-lang/rust/commit/b5a124bc27e2a0c8d30988c680deabe7c504dcf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5a124bc27e2a0c8d30988c680deabe7c504dcf1/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45949c0da91470601952014db2dcfa864245d0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/45949c0da91470601952014db2dcfa864245d0b7", "html_url": "https://github.com/rust-lang/rust/commit/45949c0da91470601952014db2dcfa864245d0b7"}], "stats": {"total": 142, "additions": 54, "deletions": 88}, "files": [{"sha": "ddf1d6413cda6c0fbf00d2d18353624ed9fd7027", "filename": "tests/ui/while_loop.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b5a124bc27e2a0c8d30988c680deabe7c504dcf1/tests%2Fui%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5a124bc27e2a0c8d30988c680deabe7c504dcf1/tests%2Fui%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.rs?ref=b5a124bc27e2a0c8d30988c680deabe7c504dcf1", "patch": "@@ -7,9 +7,6 @@\n fn main() {\n     let y = Some(true);\n     loop {\n-\n-\n-\n         if let Some(_x) = y {\n             let _v = 1;\n         } else {\n@@ -23,18 +20,12 @@ fn main() {\n         break;\n     }\n     loop {\n-\n-\n-\n         match y {\n             Some(_x) => true,\n             None => break\n         };\n     }\n     loop {\n-\n-\n-\n         let x = match y {\n             Some(x) => x,\n             None => break\n@@ -43,9 +34,6 @@ fn main() {\n         let _str = \"foo\";\n     }\n     loop {\n-\n-\n-\n         let x = match y {\n             Some(x) => x,\n             None => break,\n@@ -68,9 +56,6 @@ fn main() {\n \n     // #675, this used to have a wrong suggestion\n     loop {\n-\n-\n-\n         let (e, l) = match \"\".split_whitespace().next() {\n             Some(word) => (word.is_empty(), word.len()),\n             None => break\n@@ -81,26 +66,17 @@ fn main() {\n \n     let mut iter = 1..20;\n     while let Option::Some(x) = iter.next() {\n-\n-\n-\n         println!(\"{}\", x);\n     }\n \n     let mut iter = 1..20;\n     while let Some(x) = iter.next() {\n-\n-\n-\n         println!(\"{}\", x);\n     }\n \n     let mut iter = 1..20;\n     while let Some(_) = iter.next() {}\n \n-\n-\n-\n     let mut iter = 1..20;\n     while let None = iter.next() {} // this is fine (if nonsensical)\n \n@@ -140,9 +116,6 @@ fn main() {\n fn no_panic<T>(slice: &[T]) {\n     let mut iter = slice.iter();\n     loop {\n-\n-\n-\n         let _ = match iter.next() {\n             Some(ele) => ele,\n             None => break"}, {"sha": "a942693b469f6cff03c10d0476128746c363a4bc", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 54, "deletions": 61, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/b5a124bc27e2a0c8d30988c680deabe7c504dcf1/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5a124bc27e2a0c8d30988c680deabe7c504dcf1/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=b5a124bc27e2a0c8d30988c680deabe7c504dcf1", "patch": "@@ -2,12 +2,12 @@ error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:9:5\n    |\n 9  | /     loop {\n-10 | |\n-11 | |\n-12 | |\n-...  |\n-17 | |         }\n-18 | |     }\n+10 | |         if let Some(_x) = y {\n+11 | |             let _v = 1;\n+12 | |         } else {\n+13 | |             break\n+14 | |         }\n+15 | |     }\n    | |_____^ help: try `while let Some(_x) = y { .. }`\n    |\n note: lint level defined here\n@@ -17,62 +17,58 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:25:5\n+  --> $DIR/while_loop.rs:22:5\n    |\n-25 | /     loop {\n-26 | |\n-27 | |\n-28 | |\n-...  |\n-32 | |         };\n-33 | |     }\n+22 | /     loop {\n+23 | |         match y {\n+24 | |             Some(_x) => true,\n+25 | |             None => break\n+26 | |         };\n+27 | |     }\n    | |_____^ help: try `while let Some(_x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:34:5\n+  --> $DIR/while_loop.rs:28:5\n    |\n-34 | /     loop {\n-35 | |\n-36 | |\n-37 | |\n+28 | /     loop {\n+29 | |         let x = match y {\n+30 | |             Some(x) => x,\n+31 | |             None => break\n ...  |\n-43 | |         let _str = \"foo\";\n-44 | |     }\n+34 | |         let _str = \"foo\";\n+35 | |     }\n    | |_____^ help: try `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:45:5\n+  --> $DIR/while_loop.rs:36:5\n    |\n-45 | /     loop {\n-46 | |\n-47 | |\n-48 | |\n+36 | /     loop {\n+37 | |         let x = match y {\n+38 | |             Some(x) => x,\n+39 | |             None => break,\n ...  |\n-54 | |         { let _b = \"foobar\"; }\n-55 | |     }\n+42 | |         { let _b = \"foobar\"; }\n+43 | |     }\n    | |_____^ help: try `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:70:5\n+  --> $DIR/while_loop.rs:58:5\n    |\n-70 | /     loop {\n-71 | |\n-72 | |\n-73 | |\n+58 | /     loop {\n+59 | |         let (e, l) = match \"\".split_whitespace().next() {\n+60 | |             Some(word) => (word.is_empty(), word.len()),\n+61 | |             None => break\n ...  |\n-79 | |         let _ = (e, l);\n-80 | |     }\n+64 | |         let _ = (e, l);\n+65 | |     }\n    | |_____^ help: try `while let Some(word) = \"\".split_whitespace().next() { .. }`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:83:5\n+  --> $DIR/while_loop.rs:68:5\n    |\n-83 | /     while let Option::Some(x) = iter.next() {\n-84 | |\n-85 | |\n-86 | |\n-87 | |         println!(\"{}\", x);\n-88 | |     }\n+68 | /     while let Option::Some(x) = iter.next() {\n+69 | |         println!(\"{}\", x);\n+70 | |     }\n    | |_____^ help: try `for x in iter { .. }`\n    |\n note: lint level defined here\n@@ -82,38 +78,35 @@ note: lint level defined here\n    |                                     ^^^^^^^^^^^^^^^^^^^^^\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:91:5\n+  --> $DIR/while_loop.rs:73:5\n    |\n-91 | /     while let Some(x) = iter.next() {\n-92 | |\n-93 | |\n-94 | |\n-95 | |         println!(\"{}\", x);\n-96 | |     }\n+73 | /     while let Some(x) = iter.next() {\n+74 | |         println!(\"{}\", x);\n+75 | |     }\n    | |_____^ help: try `for x in iter { .. }`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:99:5\n+  --> $DIR/while_loop.rs:78:5\n    |\n-99 |     while let Some(_) = iter.next() {}\n+78 |     while let Some(_) = iter.next() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `for _ in iter { .. }`\n \n error: this loop could be written as a `while let` loop\n-   --> $DIR/while_loop.rs:142:5\n+   --> $DIR/while_loop.rs:118:5\n     |\n-142 | /     loop {\n-143 | |\n-144 | |\n-145 | |\n-...   |\n-150 | |         loop {}\n-151 | |     }\n+118 | /     loop {\n+119 | |         let _ = match iter.next() {\n+120 | |             Some(ele) => ele,\n+121 | |             None => break\n+122 | |         };\n+123 | |         loop {}\n+124 | |     }\n     | |_____^ help: try `while let Some(ele) = iter.next() { .. }`\n \n error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n-   --> $DIR/while_loop.rs:150:9\n+   --> $DIR/while_loop.rs:123:9\n     |\n-150 |         loop {}\n+123 |         loop {}\n     |         ^^^^^^^\n     |\n note: lint level defined here"}]}