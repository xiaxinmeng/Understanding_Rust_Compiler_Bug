{"sha": "6519a03236df6f20dc2aad89fd3585bc5e351bb5", "node_id": "C_kwDOAAsO6NoAKDY1MTlhMDMyMzZkZjZmMjBkYzJhYWQ4OWZkMzU4NWJjNWUzNTFiYjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-14T18:16:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-14T18:16:02Z"}, "message": "Rollup merge of #100523 - GuillaumeGomez:remove-clean-impls, r=Dylan-DPC\n\n[rustdoc] remove Clean trait\n\nFollow-up of https://github.com/rust-lang/rust/pull/99638.\n\nThis is (finally!) the last part.\n\nr? `@Dylan-DPC`", "tree": {"sha": "c6f88fa3cad122a1bcf6efe92edec6fd5b23d2a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6f88fa3cad122a1bcf6efe92edec6fd5b23d2a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6519a03236df6f20dc2aad89fd3585bc5e351bb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi+TviCRBK7hj4Ov3rIwAA9EIIAKw0HLBFfYfQBVrRT0qcBncQ\nggefla9Cw8r12hA2IevdFQCvhUCV3szPonqTTTbABePngz/kFJ/AAk+QYdycQd2p\nw+dUvHP1lpH/ZJ/S+7TQFzywmmZh7Vj2CcVkOpR/C6uvP4lQ0f4FNghDMexC7WXa\nhBI6FU2UxPIzJNIyoLSeXR7ArZ7xlC796x6eGrZEOMFz3o6zOSsarF6ZZg8U4KLQ\nheL+3uypwtJfqyMDy+PfiuuQ6lzyrRr87kEZ7+kwBzC9IaklRSd2NEnaKlokzopl\nsjT6TqiVzADD/b+2zaQU+Feic3oFFXnlz0o10Xm1/eTv/RPbwRshyCiWfyu5Qys=\n=YuFm\n-----END PGP SIGNATURE-----\n", "payload": "tree c6f88fa3cad122a1bcf6efe92edec6fd5b23d2a6\nparent 6e53472ffcf57e9721efc24b69124c5e1f882f5a\nparent 74fb5f85b3c7fd5023a7ca0190542a18fc16fafa\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660500962 +0200\ncommitter GitHub <noreply@github.com> 1660500962 +0200\n\nRollup merge of #100523 - GuillaumeGomez:remove-clean-impls, r=Dylan-DPC\n\n[rustdoc] remove Clean trait\n\nFollow-up of https://github.com/rust-lang/rust/pull/99638.\n\nThis is (finally!) the last part.\n\nr? `@Dylan-DPC`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6519a03236df6f20dc2aad89fd3585bc5e351bb5", "html_url": "https://github.com/rust-lang/rust/commit/6519a03236df6f20dc2aad89fd3585bc5e351bb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6519a03236df6f20dc2aad89fd3585bc5e351bb5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e53472ffcf57e9721efc24b69124c5e1f882f5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e53472ffcf57e9721efc24b69124c5e1f882f5a", "html_url": "https://github.com/rust-lang/rust/commit/6e53472ffcf57e9721efc24b69124c5e1f882f5a"}, {"sha": "74fb5f85b3c7fd5023a7ca0190542a18fc16fafa", "url": "https://api.github.com/repos/rust-lang/rust/commits/74fb5f85b3c7fd5023a7ca0190542a18fc16fafa", "html_url": "https://github.com/rust-lang/rust/commit/74fb5f85b3c7fd5023a7ca0190542a18fc16fafa"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "971617a8400366d732e86d9d614870289b295234", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6519a03236df6f20dc2aad89fd3585bc5e351bb5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6519a03236df6f20dc2aad89fd3585bc5e351bb5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6519a03236df6f20dc2aad89fd3585bc5e351bb5", "patch": "@@ -44,10 +44,6 @@ use utils::*;\n pub(crate) use self::types::*;\n pub(crate) use self::utils::{get_auto_trait_and_blanket_impls, krate, register_res};\n \n-pub(crate) trait Clean<'tcx, T> {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> T;\n-}\n-\n pub(crate) fn clean_doc_module<'tcx>(doc: &DocModule<'tcx>, cx: &mut DocContext<'tcx>) -> Item {\n     let mut items: Vec<Item> = vec![];\n     let mut inserted = FxHashSet::default();\n@@ -1925,7 +1921,7 @@ fn clean_maybe_renamed_item<'tcx>(\n                 }))\n             }\n             ItemKind::Enum(ref def, generics) => EnumItem(Enum {\n-                variants: def.variants.iter().map(|v| v.clean(cx)).collect(),\n+                variants: def.variants.iter().map(|v| clean_variant(v, cx)).collect(),\n                 generics: clean_generics(generics, cx),\n             }),\n             ItemKind::TraitAlias(generics, bounds) => TraitAliasItem(TraitAlias {\n@@ -1978,14 +1974,12 @@ fn clean_maybe_renamed_item<'tcx>(\n     })\n }\n \n-impl<'tcx> Clean<'tcx, Item> for hir::Variant<'tcx> {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> Item {\n-        let kind = VariantItem(clean_variant_data(&self.data, cx));\n-        let what_rustc_thinks =\n-            Item::from_hir_id_and_parts(self.id, Some(self.ident.name), kind, cx);\n-        // don't show `pub` for variants, which are always public\n-        Item { visibility: Inherited, ..what_rustc_thinks }\n-    }\n+fn clean_variant<'tcx>(variant: &hir::Variant<'tcx>, cx: &mut DocContext<'tcx>) -> Item {\n+    let kind = VariantItem(clean_variant_data(&variant.data, cx));\n+    let what_rustc_thinks =\n+        Item::from_hir_id_and_parts(variant.id, Some(variant.ident.name), kind, cx);\n+    // don't show `pub` for variants, which are always public\n+    Item { visibility: Inherited, ..what_rustc_thinks }\n }\n \n fn clean_impl<'tcx>("}]}