{"sha": "7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMDRlOGY3YjRkYTFjZmRiZDgyZmE3YzRmODFlZDMxYmUyMmY5NWU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-17T15:22:50Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-17T15:22:50Z"}, "message": "Add an option to allow rustdoc to list modules by appearance\n\nThe `--sort-modules-by-appearance` option will list modules in the\norder that they appear in the source, rather than sorting them\nalphabetically (as is the default). This resolves #8552.", "tree": {"sha": "03ec97d175fef184a9195f6cdb19a72053508b29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03ec97d175fef184a9195f6cdb19a72053508b29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e", "html_url": "https://github.com/rust-lang/rust/commit/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53a6d14e5bb8b1915a5f0b9371bbf0da934ed052", "url": "https://api.github.com/repos/rust-lang/rust/commits/53a6d14e5bb8b1915a5f0b9371bbf0da934ed052", "html_url": "https://github.com/rust-lang/rust/commit/53a6d14e5bb8b1915a5f0b9371bbf0da934ed052"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "9f981e97a762bf8dba9bd7bb88dc60fff48139c3", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e", "patch": "@@ -129,6 +129,9 @@ pub struct SharedContext {\n     /// The directories that have already been created in this doc run. Used to reduce the number\n     /// of spurious `create_dir_all` calls.\n     pub created_dirs: RefCell<FxHashSet<PathBuf>>,\n+    /// This flag indicates whether listings of modules (in the side bar and documentation itself)\n+    /// should be ordered alphabetically or in order of appearance (in the source code).\n+    pub sort_modules_alphabetically: bool,\n }\n \n impl SharedContext {\n@@ -491,7 +494,8 @@ pub fn run(mut krate: clean::Crate,\n            passes: FxHashSet<String>,\n            css_file_extension: Option<PathBuf>,\n            renderinfo: RenderInfo,\n-           render_type: RenderType) -> Result<(), Error> {\n+           render_type: RenderType,\n+           sort_modules_alphabetically: bool) -> Result<(), Error> {\n     let src_root = match krate.src {\n         FileName::Real(ref p) => match p.parent() {\n             Some(p) => p.to_path_buf(),\n@@ -514,6 +518,7 @@ pub fn run(mut krate: clean::Crate,\n         css_file_extension: css_file_extension.clone(),\n         markdown_warnings: RefCell::new(vec![]),\n         created_dirs: RefCell::new(FxHashSet()),\n+        sort_modules_alphabetically,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -1654,8 +1659,10 @@ impl Context {\n                 .push((myname, Some(plain_summary_line(item.doc_value()))));\n         }\n \n-        for (_, items) in &mut map {\n-            items.sort();\n+        if self.shared.sort_modules_alphabetically {\n+            for (_, items) in &mut map {\n+                items.sort();\n+            }\n         }\n         map\n     }\n@@ -2013,7 +2020,9 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n         name_key(lhs).cmp(&name_key(rhs))\n     }\n \n-    indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2));\n+    if cx.shared.sort_modules_alphabetically {\n+        indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2));\n+    }\n     // This call is to remove reexport duplicates in cases such as:\n     //\n     // ```"}, {"sha": "1b0ff3a71d70e84dd88a4c2b4d5b9015ed7dc3ee", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=7104e8f7b4da1cfdbd82fa7c4f81ed31be22f95e", "patch": "@@ -253,6 +253,9 @@ pub fn opts() -> Vec<RustcOptGroup> {\n         unstable(\"linker\", |o| {\n             o.optopt(\"\", \"linker\", \"linker used for building executable test code\", \"PATH\")\n         }),\n+        unstable(\"sort-modules-by-appearance\", |o| {\n+            o.optflag(\"\", \"sort-modules-by-appearance\", \"sort modules by where they appear in the program, rather than alphabetically\")\n+        }),\n     ]\n }\n \n@@ -369,6 +372,7 @@ pub fn main_args(args: &[String]) -> isize {\n     let maybe_sysroot = matches.opt_str(\"sysroot\").map(PathBuf::from);\n     let display_warnings = matches.opt_present(\"display-warnings\");\n     let linker = matches.opt_str(\"linker\").map(PathBuf::from);\n+    let sort_modules_alphabetically = !matches.opt_present(\"sort-modules-by-appearance\");\n \n     match (should_test, markdown_input) {\n         (true, true) => {\n@@ -398,7 +402,8 @@ pub fn main_args(args: &[String]) -> isize {\n                                   passes.into_iter().collect(),\n                                   css_file_extension,\n                                   renderinfo,\n-                                  render_type)\n+                                  render_type,\n+                                  sort_modules_alphabetically)\n                     .expect(\"failed to generate documentation\");\n                 0\n             }"}]}