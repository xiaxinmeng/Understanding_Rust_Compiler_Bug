{"sha": "1a8779bce07281f1fbde1166ded75bc5acaa0f27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhODc3OWJjZTA3MjgxZjFmYmRlMTE2NmRlZDc1YmM1YWNhYTBmMjc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-03T12:06:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-03T12:06:04Z"}, "message": "Merge #3800\n\n3800: Introduce ra_proc_macro_srv r=matklad a=edwin0cheng\n\nThis PR add preliminary for server side of proc macro : \r\n\r\n1. Add crate setup\r\n2. IO for server side\r\n\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "3c69ce23117592f5442bcfdfc165820394b775a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c69ce23117592f5442bcfdfc165820394b775a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a8779bce07281f1fbde1166ded75bc5acaa0f27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehyasCRBK7hj4Ov3rIwAAdHIIAJ3u8m20JCbnytWJhj1HdIAI\npaokgZzQyB9Kg3lGPirUG6f7ZS7FyhSutvcr/d8yEQfzns2vYp3li3zHxB9mH2NK\nomFmEla+ZFlBz4R2Bk6ollLONEAKfudJpSbup1o3xk4sSIaggLqNPgFk+FdixYcY\nuHdlFPfzRnNGEtQaZonSCPBD74d/u2nJqQepl6QrtiiT5Ra5MwT3VOBUveqCvs/3\n7hRFTeqnISFlhAMRHyNA8gcBsLegliagvFhK4D+8HuO8wBBv2RCJeC5iSY/x0+qs\n6B+wjU3U455LWNqKR6zPtvVQbj9fl5EHgzBDcpnsnEVjPyqMHt8xdUm6Wm9fApU=\n=jSrf\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c69ce23117592f5442bcfdfc165820394b775a3\nparent ac91de1525662a602a1057709eb91a9b21ea3ac7\nparent 9a2114b0dd6d3292216fa4d05e3c4cd219633f4b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1585915564 +0000\ncommitter GitHub <noreply@github.com> 1585915564 +0000\n\nMerge #3800\n\n3800: Introduce ra_proc_macro_srv r=matklad a=edwin0cheng\n\nThis PR add preliminary for server side of proc macro : \r\n\r\n1. Add crate setup\r\n2. IO for server side\r\n\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a8779bce07281f1fbde1166ded75bc5acaa0f27", "html_url": "https://github.com/rust-lang/rust/commit/1a8779bce07281f1fbde1166ded75bc5acaa0f27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a8779bce07281f1fbde1166ded75bc5acaa0f27/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac91de1525662a602a1057709eb91a9b21ea3ac7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac91de1525662a602a1057709eb91a9b21ea3ac7", "html_url": "https://github.com/rust-lang/rust/commit/ac91de1525662a602a1057709eb91a9b21ea3ac7"}, {"sha": "9a2114b0dd6d3292216fa4d05e3c4cd219633f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a2114b0dd6d3292216fa4d05e3c4cd219633f4b", "html_url": "https://github.com/rust-lang/rust/commit/9a2114b0dd6d3292216fa4d05e3c4cd219633f4b"}], "stats": {"total": 166, "additions": 164, "deletions": 2}, "files": [{"sha": "016044f116925497f8b3e2ed4ec2dc9d1462ca1e", "filename": "Cargo.lock", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/1a8779bce07281f1fbde1166ded75bc5acaa0f27/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1a8779bce07281f1fbde1166ded75bc5acaa0f27/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=1a8779bce07281f1fbde1166ded75bc5acaa0f27", "patch": "@@ -424,6 +424,17 @@ dependencies = [\n  \"regex\",\n ]\n \n+[[package]]\n+name = \"goblin\"\n+version = \"0.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ddd5e3132801a1ac34ac53b97acde50c4685414dd2f291b9ea52afa6f07468c8\"\n+dependencies = [\n+ \"log\",\n+ \"plain\",\n+ \"scroll\",\n+]\n+\n [[package]]\n name = \"heck\"\n version = \"0.3.1\"\n@@ -595,6 +606,16 @@ version = \"0.2.68\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"dea0c0405123bba743ee3f91f49b1c7cfb684eef0da0a50110f758ccf24cdff0\"\n \n+[[package]]\n+name = \"libloading\"\n+version = \"0.5.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f2b111a074963af1d37a139918ac6d49ad1d0d5e47f72fd55388619691a7d753\"\n+dependencies = [\n+ \"cc\",\n+ \"winapi 0.3.8\",\n+]\n+\n [[package]]\n name = \"linked-hash-map\"\n version = \"0.5.2\"\n@@ -834,6 +855,12 @@ version = \"0.3.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3ad1f1b834a05d42dae330066e9699a173b28185b3bdc3dbf14ca239585de8cc\"\n \n+[[package]]\n+name = \"plain\"\n+version = \"0.2.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6\"\n+\n [[package]]\n name = \"ppv-lite86\"\n version = \"0.2.6\"\n@@ -1083,6 +1110,22 @@ dependencies = [\n  \"serde_json\",\n ]\n \n+[[package]]\n+name = \"ra_proc_macro_srv\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"cargo_metadata\",\n+ \"difference\",\n+ \"goblin\",\n+ \"libloading\",\n+ \"ra_mbe\",\n+ \"ra_proc_macro\",\n+ \"ra_tt\",\n+ \"serde\",\n+ \"serde_derive\",\n+ \"serde_json\",\n+]\n+\n [[package]]\n name = \"ra_prof\"\n version = \"0.1.0\"\n@@ -1392,6 +1435,26 @@ version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n \n+[[package]]\n+name = \"scroll\"\n+version = \"0.10.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"abb2332cb595d33f7edd5700f4cbf94892e680c7f0ae56adab58a35190b66cb1\"\n+dependencies = [\n+ \"scroll_derive\",\n+]\n+\n+[[package]]\n+name = \"scroll_derive\"\n+version = \"0.10.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f8584eea9b9ff42825b46faf46a8c24d2cff13ec152fa2a50df788b87c07ee28\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn\",\n+]\n+\n [[package]]\n name = \"semver\"\n version = \"0.9.0\""}, {"sha": "63da9f1b45bf415d3aad161b7e3007aa87ddabe1", "filename": "crates/ra_proc_macro/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Flib.rs?ref=1a8779bce07281f1fbde1166ded75bc5acaa0f27", "patch": "@@ -11,13 +11,12 @@ pub mod msg;\n \n use process::{ProcMacroProcessSrv, ProcMacroProcessThread};\n use ra_tt::{SmolStr, Subtree};\n-use rpc::ProcMacroKind;\n use std::{\n     path::{Path, PathBuf},\n     sync::Arc,\n };\n \n-pub use rpc::{ExpansionResult, ExpansionTask};\n+pub use rpc::{ExpansionResult, ExpansionTask, ListMacrosResult, ListMacrosTask, ProcMacroKind};\n \n #[derive(Debug, Clone)]\n pub struct ProcMacroProcessExpander {"}, {"sha": "fa2de2c91e748d661c94afe650325cd45a0dc263", "filename": "crates/ra_proc_macro_srv/Cargo.toml", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro_srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro_srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2FCargo.toml?ref=1a8779bce07281f1fbde1166ded75bc5acaa0f27", "patch": "@@ -0,0 +1,24 @@\n+[package]\n+edition = \"2018\"\n+name = \"ra_proc_macro_srv\"\n+version = \"0.1.0\"\n+authors = [\"rust-analyzer developers\"]\n+publish = false\n+\n+[lib]\n+doctest = false\n+\n+[dependencies]\n+ra_tt = { path = \"../ra_tt\" }\n+ra_mbe = { path = \"../ra_mbe\" }\n+ra_proc_macro = { path = \"../ra_proc_macro\" }\n+\n+serde_derive = \"1.0.104\"\n+serde = \"1.0.104\"\n+serde_json = \"1.0.48\"\n+libloading = \"0.5.2\"\n+goblin = \"0.2.0\"\n+\n+[dev-dependencies]\n+cargo_metadata = \"0.9.1\"\n+difference = \"2.0.0\""}, {"sha": "f77be1475b368e4afa64330fe054b66c8d3cb3c9", "filename": "crates/ra_proc_macro_srv/src/lib.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro_srv%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro_srv%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Flib.rs?ref=1a8779bce07281f1fbde1166ded75bc5acaa0f27", "patch": "@@ -0,0 +1,21 @@\n+//! RA Proc Macro Server\n+//!\n+//! This library is able to call compiled Rust custom derive dynamic libraries on arbitrary code.\n+//! The general idea here is based on https://github.com/fedochet/rust-proc-macro-expander.\n+//!\n+//! But we change some several design for fitting RA needs:\n+//!\n+//! * We use `ra_tt` for proc-macro `TokenStream` server, it is easy to manipute and interact with\n+//!   RA then proc-macro2 token stream.\n+//! * By **copying** the whole rustc `lib_proc_macro` code, we are able to build this with `stable`\n+//!   rustc rather than `unstable`. (Although in gerenal ABI compatibility is still an issue)\n+\n+use ra_proc_macro::{ExpansionResult, ExpansionTask, ListMacrosResult, ListMacrosTask};\n+\n+pub fn expand_task(_task: &ExpansionTask) -> Result<ExpansionResult, String> {\n+    unimplemented!()\n+}\n+\n+pub fn list_macros(_task: &ListMacrosTask) -> Result<ListMacrosResult, String> {\n+    unimplemented!()\n+}"}, {"sha": "70743c1f40eabcda3ea5022049f564c84b5e4fca", "filename": "crates/ra_proc_macro_srv/src/main.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro_srv%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8779bce07281f1fbde1166ded75bc5acaa0f27/crates%2Fra_proc_macro_srv%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fmain.rs?ref=1a8779bce07281f1fbde1166ded75bc5acaa0f27", "patch": "@@ -0,0 +1,55 @@\n+//! Driver for proc macro server\n+\n+use ra_proc_macro::msg::{self, Message};\n+use ra_proc_macro_srv::{expand_task, list_macros};\n+\n+use std::io;\n+\n+fn read_request() -> Result<Option<msg::Request>, io::Error> {\n+    let stdin = io::stdin();\n+    let mut stdin = stdin.lock();\n+    msg::Request::read(&mut stdin)\n+}\n+\n+fn write_response(res: Result<msg::Response, String>) -> Result<(), io::Error> {\n+    let msg: msg::Response = match res {\n+        Ok(res) => res,\n+        Err(err) => msg::Response::Error(msg::ResponseError {\n+            code: msg::ErrorCode::ExpansionError,\n+            message: err,\n+        }),\n+    };\n+\n+    let stdout = io::stdout();\n+    let mut stdout = stdout.lock();\n+    msg.write(&mut stdout)\n+}\n+fn main() {\n+    loop {\n+        let req = match read_request() {\n+            Err(err) => {\n+                eprintln!(\"Read message error on ra_proc_macro_srv: {}\", err.to_string());\n+                continue;\n+            }\n+            Ok(None) => continue,\n+            Ok(Some(req)) => req,\n+        };\n+\n+        match req {\n+            msg::Request::ListMacro(task) => {\n+                if let Err(err) =\n+                    write_response(list_macros(&task).map(|it| msg::Response::ListMacro(it)))\n+                {\n+                    eprintln!(\"Write message error on list macro: {}\", err);\n+                }\n+            }\n+            msg::Request::ExpansionMacro(task) => {\n+                if let Err(err) =\n+                    write_response(expand_task(&task).map(|it| msg::Response::ExpansionMacro(it)))\n+                {\n+                    eprintln!(\"Write message error on expansion macro: {}\", err);\n+                }\n+            }\n+        }\n+    }\n+}"}]}