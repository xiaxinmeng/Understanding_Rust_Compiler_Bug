{"sha": "3e07236a31950aa8e6a4c66066de02d1bca68ea9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMDcyMzZhMzE5NTBhYThlNmE0YzY2MDY2ZGUwMmQxYmNhNjhlYTk=", "commit": {"author": {"name": "\u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov]", "email": "newpavlov@gmail.com", "date": "2018-07-29T13:01:43Z"}, "committer": {"name": "\u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov]", "email": "newpavlov@gmail.com", "date": "2018-07-29T13:01:43Z"}, "message": "add MAX_NANOS_F64 constant", "tree": {"sha": "3a41d2e5ca294449660f5136b94b91abbd779571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a41d2e5ca294449660f5136b94b91abbd779571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e07236a31950aa8e6a4c66066de02d1bca68ea9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJbXbq3AAoJEBOpOZ+3fjNcgqEQAL7Fwbp9kjmjYJJHnpPiW/Zr\nwDUq01ciylPZdxectvId+I5Ixa2np7oGx4DNEQmZGVxOXEj1RLz3zPIzX7O1cGDW\n467YN6Sw2XVamXXmSS26ONNkCej6yEmzF0TISG0hsS+YDXeMIcuq37GHMziuZvo6\nno/tSRYHHINOPe1Y9YV+Kcvx+00wpCihAzDy0aiJfa3as5gVOPYRBQqFtBbNjn3Q\nS6/3YC2dMFmtZazljNNw8RenEGW9Y/5QFgNhNK81lqVYI5+QS8Pl0Ylsd/Fg2IvH\naQvvxGO9j1L3EKy95QT55eNn5nSSurqjUtPnMQhQFGT9tKQ4DcGcT/Ec26jsQ3wZ\nl+Fs4PehYAHCYjrMCpujfhtHejOyhami3jRT+RHAgEth0otgUbFhZcpVvBxHsjYP\njPLfnj8TrbeEoYs+73drbpR+nQa1ohE1nV+3+LoBE7bGq82gtuhdo6R0Oluf4rey\n5UrqvuyzkpKeZllp/xIljw1DnK90Nnx/o/ASG5PYh+FTpQprsWrWZEhEFzuzwC+O\n4J6pWykRlE9c1VvDKXA278L1Fh95zjh5krW9AL/Xr0JDSO+uoI+CeV2ZIAH0gzzy\nLmCbP8Tukpwrya9x2RXWbWZw4QTM22U6s6mQFUikqgi3brFT9jivIXeH0KOM4/WF\nD2O/FwyfPw7hTR9XXxMe\n=+oEe\n-----END PGP SIGNATURE-----", "payload": "tree 3a41d2e5ca294449660f5136b94b91abbd779571\nparent 12d8f2792a677e3e3beabec780cb2d93719095f8\nauthor \u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov] <newpavlov@gmail.com> 1532869303 +0300\ncommitter \u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov] <newpavlov@gmail.com> 1532869303 +0300\n\nadd MAX_NANOS_F64 constant\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e07236a31950aa8e6a4c66066de02d1bca68ea9", "html_url": "https://github.com/rust-lang/rust/commit/3e07236a31950aa8e6a4c66066de02d1bca68ea9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e07236a31950aa8e6a4c66066de02d1bca68ea9/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d8f2792a677e3e3beabec780cb2d93719095f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/12d8f2792a677e3e3beabec780cb2d93719095f8", "html_url": "https://github.com/rust-lang/rust/commit/12d8f2792a677e3e3beabec780cb2d93719095f8"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "4777b4356376b2988d544b958e5bb7466e4bed58", "filename": "src/libcore/time.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3e07236a31950aa8e6a4c66066de02d1bca68ea9/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e07236a31950aa8e6a4c66066de02d1bca68ea9/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=3e07236a31950aa8e6a4c66066de02d1bca68ea9", "patch": "@@ -30,6 +30,7 @@ const NANOS_PER_MILLI: u32 = 1_000_000;\n const NANOS_PER_MICRO: u32 = 1_000;\n const MILLIS_PER_SEC: u64 = 1_000;\n const MICROS_PER_SEC: u64 = 1_000_000;\n+const MAX_NANOS_F64: f64 = ((u64::MAX as u128)*(NANOS_PER_SEC as u128)) as f64;\n \n /// A `Duration` type to represent a span of time, typically used for system\n /// timeouts.\n@@ -523,7 +524,7 @@ impl Mul<f64> for Duration {\n         if !nanos_f64.is_finite() {\n             panic!(\"got non-finite value when multiplying duration by float\");\n         }\n-        if nanos_f64 > ((u64::MAX as u128)*(NANOS_PER_SEC as u128)) as f64 {\n+        if nanos_f64 > MAX_NANOS_F64 {\n             panic!(\"overflow when multiplying duration by float\");\n         };\n         let nanos_u128 = nanos_f64 as u128;\n@@ -547,7 +548,7 @@ impl Mul<Duration> for f64 {\n         if !nanos_f64.is_finite() {\n             panic!(\"got non-finite value when multiplying float by duration\");\n         }\n-        if nanos_f64 > ((u64::MAX as u128)*(NANOS_PER_SEC as u128)) as f64 {\n+        if nanos_f64 > MAX_NANOS_F64 {\n             panic!(\"overflow when multiplying float by duration\");\n         };\n         let nanos_u128 = nanos_f64 as u128;\n@@ -594,7 +595,7 @@ impl Div<f64> for Duration {\n         if !nanos_f64.is_finite() {\n             panic!(\"got non-finite value when dividing duration by float\");\n         }\n-        if nanos_f64 > ((u64::MAX as u128)*(NANOS_PER_SEC as u128)) as f64 {\n+        if nanos_f64 > MAX_NANOS_F64 {\n             panic!(\"overflow when dividing duration by float\");\n         };\n         let nanos_u128 = nanos_f64 as u128;"}]}