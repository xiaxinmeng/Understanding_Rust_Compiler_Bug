{"sha": "ff7e044f570f2389092f3d077c92017e727fa111", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmN2UwNDRmNTcwZjIzODkwOTJmM2QwNzdjOTIwMTdlNzI3ZmExMTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-03T19:16:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-03T19:18:21Z"}, "message": "get rid of real_intrinsics module\n\ninstead import intrinsics locally in their wrapper functions", "tree": {"sha": "6276b4252c9d80ecd024588362f691c77e9eb067", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6276b4252c9d80ecd024588362f691c77e9eb067"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff7e044f570f2389092f3d077c92017e727fa111", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff7e044f570f2389092f3d077c92017e727fa111", "html_url": "https://github.com/rust-lang/rust/commit/ff7e044f570f2389092f3d077c92017e727fa111", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff7e044f570f2389092f3d077c92017e727fa111/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61d286e9d0530bea8fb1ae24be3989baa9ea08eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/61d286e9d0530bea8fb1ae24be3989baa9ea08eb", "html_url": "https://github.com/rust-lang/rust/commit/61d286e9d0530bea8fb1ae24be3989baa9ea08eb"}], "stats": {"total": 43, "additions": 16, "deletions": 27}, "files": [{"sha": "63ca8098a0931868ff9d46d213b5da3242d2bf26", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 16, "deletions": 27, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ff7e044f570f2389092f3d077c92017e727fa111/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff7e044f570f2389092f3d077c92017e727fa111/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=ff7e044f570f2389092f3d077c92017e727fa111", "patch": "@@ -1298,30 +1298,10 @@ extern \"rust-intrinsic\" {\n     pub fn nontemporal_store<T>(ptr: *mut T, val: T);\n }\n \n-mod real_intrinsics {\n-  extern \"rust-intrinsic\" {\n-    /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n-    /// and destination must *not* overlap.\n-    /// For the full docs, see the stabilized wrapper [`copy_nonoverlapping`].\n-    ///\n-    /// [`copy_nonoverlapping`]: ../../std/ptr/fn.copy_nonoverlapping.html\n-    pub fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n-\n-    /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n-    /// and destination may overlap.\n-    /// For the full docs, see the stabilized wrapper [`copy`].\n-    ///\n-    /// [`copy`]: ../../std/ptr/fn.copy.html\n-    pub fn copy<T>(src: *const T, dst: *mut T, count: usize);\n-\n-    /// Sets `count * size_of::<T>()` bytes of memory starting at `dst` to\n-    /// `val`.\n-    /// For the full docs, see the stabilized wrapper [`write_bytes`].\n-    ///\n-    /// [`write_bytes`]: ../../std/ptr/fn.write_bytes.html\n-    pub fn write_bytes<T>(dst: *mut T, val: u8, count: usize);\n-  }\n-}\n+// Some functions are defined here because they accidentally got made\n+// available in this module on stable. See <https://github.com/rust-lang/rust/issues/15702>.\n+// (`transmute` also falls into this category, but it cannot be wrapped due to the\n+// check that `T` and `U` have the same size.)\n \n /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n /// and destination must *not* overlap.\n@@ -1409,7 +1389,10 @@ mod real_intrinsics {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n-    real_intrinsics::copy_nonoverlapping(src, dst, count);\n+    extern \"rust-intrinsic\" {\n+        fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n+    }\n+    copy_nonoverlapping(src, dst, count);\n }\n \n /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n@@ -1466,7 +1449,10 @@ pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n-    real_intrinsics::copy(src, dst, count)\n+    extern \"rust-intrinsic\" {\n+        fn copy<T>(src: *const T, dst: *mut T, count: usize);\n+    }\n+    copy(src, dst, count)\n }\n \n /// Sets `count * size_of::<T>()` bytes of memory starting at `dst` to\n@@ -1544,5 +1530,8 @@ pub unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn write_bytes<T>(dst: *mut T, val: u8, count: usize) {\n-    real_intrinsics::write_bytes(dst, val, count)\n+    extern \"rust-intrinsic\" {\n+        fn write_bytes<T>(dst: *mut T, val: u8, count: usize);\n+    }\n+    write_bytes(dst, val, count)\n }"}]}