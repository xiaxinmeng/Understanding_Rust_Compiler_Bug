{"sha": "9c72f16b9f4c9bdc1825be53c93e1425e9ca9763", "node_id": "C_kwDOAAsO6NoAKDljNzJmMTZiOWY0YzliZGMxODI1YmU1M2M5M2UxNDI1ZTljYTk3NjM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-31T05:57:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-31T05:57:33Z"}, "message": "Rollup merge of #97229 - Nilstrieb:doc-box-noalias, r=dtolnay\n\nDocument the current aliasing rules for `Box<T>`.\n\nCurrently, `Box<T>` gets `noalias`, meaning it has the same rules as `&mut T`. This is sparsely documented, even though it can have quite a big impact on unsafe code using box. Therefore, these rules are documented here, with a big warning that they are not normative and subject to change, since we have not yet committed to an aliasing model and the state of `Box<T>` is especially uncertain.\n\nIf you have any suggestions and improvements, make sure to leave them here. This is mostly intended to inform people about what is currently going on (to prevent misunderstandings such as [Jon Gjengset's Box aliasing](https://www.youtube.com/watch?v=EY7Wi9fV5bk)).\n\nThis is supposed to _only document current UB_ and not add any new guarantees or rules.", "tree": {"sha": "49a5126699414dfc0f3e6a810f269c656b37e469", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49a5126699414dfc0f3e6a810f269c656b37e469"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c72f16b9f4c9bdc1825be53c93e1425e9ca9763", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJila5NCRBK7hj4Ov3rIwAADQ8IABdCg7Cxtbn29nW2PyEhu6KC\nzY13QsM+Dz6rXlIJZFc3pFd7QfsnbaRNnKkGW3ntxa5bt+5ABxSh3jpzFsgYwgIi\nUnfkyRMgfPje1OgXemGEuwuNchwQieIGodlLFbeVpXo1Iz4iW1spjW7AGD+eyPlK\nonhPSFPUUEekgoPQmqPFDRkiLAe+6bZSGPqVT9eVrJkbiRb3EQOQSLjLLtRzyhI1\nnfafXKc7gFHbHbHzcUJQnd/pA7/dMaHfIyGMu28ALOc/nYCNfmfFV2sGGTR8RXCa\n1oACA++FRHxXWJeBH3ZBdpk40C1RmK9xvYcZNOnNDEku55g5sK75SVnVNCNv9RY=\n=nj9Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 49a5126699414dfc0f3e6a810f269c656b37e469\nparent 94b8036147c29a24856f24c0a78c203834525230\nparent ffd7f5873eda869a4722619596acecda420f643a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1653976653 +0200\ncommitter GitHub <noreply@github.com> 1653976653 +0200\n\nRollup merge of #97229 - Nilstrieb:doc-box-noalias, r=dtolnay\n\nDocument the current aliasing rules for `Box<T>`.\n\nCurrently, `Box<T>` gets `noalias`, meaning it has the same rules as `&mut T`. This is sparsely documented, even though it can have quite a big impact on unsafe code using box. Therefore, these rules are documented here, with a big warning that they are not normative and subject to change, since we have not yet committed to an aliasing model and the state of `Box<T>` is especially uncertain.\n\nIf you have any suggestions and improvements, make sure to leave them here. This is mostly intended to inform people about what is currently going on (to prevent misunderstandings such as [Jon Gjengset's Box aliasing](https://www.youtube.com/watch?v=EY7Wi9fV5bk)).\n\nThis is supposed to _only document current UB_ and not add any new guarantees or rules.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c72f16b9f4c9bdc1825be53c93e1425e9ca9763", "html_url": "https://github.com/rust-lang/rust/commit/9c72f16b9f4c9bdc1825be53c93e1425e9ca9763", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c72f16b9f4c9bdc1825be53c93e1425e9ca9763/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94b8036147c29a24856f24c0a78c203834525230", "url": "https://api.github.com/repos/rust-lang/rust/commits/94b8036147c29a24856f24c0a78c203834525230", "html_url": "https://github.com/rust-lang/rust/commit/94b8036147c29a24856f24c0a78c203834525230"}, {"sha": "ffd7f5873eda869a4722619596acecda420f643a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffd7f5873eda869a4722619596acecda420f643a", "html_url": "https://github.com/rust-lang/rust/commit/ffd7f5873eda869a4722619596acecda420f643a"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "41f3b1fa3dddb1bc72a9f4777b438e2e73b6006e", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9c72f16b9f4c9bdc1825be53c93e1425e9ca9763/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c72f16b9f4c9bdc1825be53c93e1425e9ca9763/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=9c72f16b9f4c9bdc1825be53c93e1425e9ca9763", "patch": "@@ -122,7 +122,21 @@\n //! definition is just using `T*` can lead to undefined behavior, as\n //! described in [rust-lang/unsafe-code-guidelines#198][ucg#198].\n //!\n+//! # Considerations for unsafe code\n+//!\n+//! **Warning: This section is not normative and is subject to change, possibly\n+//! being relaxed in the future! It is a simplified summary of the rules\n+//! currently implemented in the compiler.**\n+//!\n+//! The aliasing rules for `Box<T>` are the same as for `&mut T`. `Box<T>`\n+//! asserts uniqueness over its content. Using raw pointers derived from a box\n+//! after that box has been mutated through, moved or borrowed as `&mut T`\n+//! is not allowed. For more guidance on working with box from unsafe code, see\n+//! [rust-lang/unsafe-code-guidelines#326][ucg#326].\n+//!\n+//!\n //! [ucg#198]: https://github.com/rust-lang/unsafe-code-guidelines/issues/198\n+//! [ucg#326]: https://github.com/rust-lang/unsafe-code-guidelines/issues/326\n //! [dereferencing]: core::ops::Deref\n //! [`Box::<T>::from_raw(value)`]: Box::from_raw\n //! [`Global`]: crate::alloc::Global"}]}