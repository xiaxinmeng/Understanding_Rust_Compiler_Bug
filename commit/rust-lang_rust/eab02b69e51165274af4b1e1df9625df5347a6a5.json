{"sha": "eab02b69e51165274af4b1e1df9625df5347a6a5", "node_id": "C_kwDOAAsO6NoAKGVhYjAyYjY5ZTUxMTY1Mjc0YWY0YjFlMWRmOTYyNWRmNTM0N2E2YTU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-06T10:38:14Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-08T15:55:37Z"}, "message": "rustfmt", "tree": {"sha": "c5d67ca1cadd549f9094b1b28e8f6e47e6e7d035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5d67ca1cadd549f9094b1b28e8f6e47e6e7d035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eab02b69e51165274af4b1e1df9625df5347a6a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eab02b69e51165274af4b1e1df9625df5347a6a5", "html_url": "https://github.com/rust-lang/rust/commit/eab02b69e51165274af4b1e1df9625df5347a6a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eab02b69e51165274af4b1e1df9625df5347a6a5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f15a56d9bcc9712bca842f182e160df1942aea98", "url": "https://api.github.com/repos/rust-lang/rust/commits/f15a56d9bcc9712bca842f182e160df1942aea98", "html_url": "https://github.com/rust-lang/rust/commit/f15a56d9bcc9712bca842f182e160df1942aea98"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "727e6a2aa237d4dbb5ca91bd5e4da9fde88fc976", "filename": "ui_test/src/comments.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/eab02b69e51165274af4b1e1df9625df5347a6a5/ui_test%2Fsrc%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eab02b69e51165274af4b1e1df9625df5347a6a5/ui_test%2Fsrc%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fcomments.rs?ref=eab02b69e51165274af4b1e1df9625df5347a6a5", "patch": "@@ -184,19 +184,22 @@ impl Comments {\n \n     fn parse_command(&mut self, command: &str, l: usize) -> Result<()> {\n         // Commands are letters or dashes, grab everything until the first character that is neither of those.\n-        let (command, args) = match command.chars().position(|c: char| !c.is_alphabetic() && c != '-') {\n-            None => (command, \"\"),\n-            Some(i) => {\n-                let (command, args) = command.split_at(i);\n-                let mut args = args.chars();\n-                let next = args.next().expect(\"the `position` above guarantees that there is at least one char\");\n-                let args = match next {\n-                    ':' | ' ' => args.as_str(),\n-                    _ => bail!(\"expected space or `:`, got `{next}`\"),\n-                };\n-                (command, args)\n-            }\n-        };\n+        let (command, args) =\n+            match command.chars().position(|c: char| !c.is_alphabetic() && c != '-') {\n+                None => (command, \"\"),\n+                Some(i) => {\n+                    let (command, args) = command.split_at(i);\n+                    let mut args = args.chars();\n+                    let next = args\n+                        .next()\n+                        .expect(\"the `position` above guarantees that there is at least one char\");\n+                    let args = match next {\n+                        ':' | ' ' => args.as_str(),\n+                        _ => bail!(\"expected space or `:`, got `{next}`\"),\n+                    };\n+                    (command, args)\n+                }\n+            };\n \n         match command {\n             \"revisions\" => {"}]}