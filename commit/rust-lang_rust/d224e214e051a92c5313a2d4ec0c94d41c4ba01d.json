{"sha": "d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMjRlMjE0ZTA1MWE5MmM1MzEzYTJkNGVjMGM5NGQ0MWM0YmEwMWQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-25T06:52:12Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-26T08:40:52Z"}, "message": "Rename read_query_job -> current_query_job and simplify it.", "tree": {"sha": "558289a754b8c9caceaaa62dcf0ce9bedb3a6896", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/558289a754b8c9caceaaa62dcf0ce9bedb3a6896"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "html_url": "https://github.com/rust-lang/rust/commit/d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fce0d37619736b0e56eabab8f9064fad471a2b5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fce0d37619736b0e56eabab8f9064fad471a2b5f", "html_url": "https://github.com/rust-lang/rust/commit/fce0d37619736b0e56eabab8f9064fad471a2b5f"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "8cdc1ae27ee002a22ca7536781c107ebbf5fff11", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "patch": "@@ -32,8 +32,8 @@ impl QueryContext for TyCtxt<'tcx> {\n         &self.dep_graph\n     }\n \n-    fn read_query_job<R>(&self, op: impl FnOnce(Option<QueryJobId<Self::DepKind>>) -> R) -> R {\n-        tls::with_related_context(*self, move |icx| op(icx.query))\n+    fn current_query_job(&self) -> Option<QueryJobId<Self::DepKind>> {\n+        tls::with_related_context(*self, |icx| icx.query)\n     }\n \n     fn try_collect_active_jobs("}, {"sha": "106688d2b54ebe5fd9ae27084c26e5de785a6e75", "filename": "src/librustc_query_system/query/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc_query_system%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc_query_system%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fconfig.rs?ref=d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "patch": "@@ -43,7 +43,7 @@ pub trait QueryContext: DepContext {\n     fn dep_graph(&self) -> &DepGraph<Self::DepKind>;\n \n     /// Get the query information from the TLS context.\n-    fn read_query_job<R>(&self, op: impl FnOnce(Option<QueryJobId<Self::DepKind>>) -> R) -> R;\n+    fn current_query_job(&self) -> Option<QueryJobId<Self::DepKind>>;\n \n     fn try_collect_active_jobs(\n         &self,"}, {"sha": "a7488b6fdff10bc3227897d9f429676e6636e111", "filename": "src/librustc_query_system/query/job.rs", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc_query_system%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc_query_system%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fjob.rs?ref=d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "patch": "@@ -150,7 +150,7 @@ impl<CTX: QueryContext> QueryLatch<CTX> {\n         let query_map = tcx.try_collect_active_jobs().unwrap();\n \n         // Get the current executing query (waiter) and find the waitee amongst its parents\n-        let mut current_job = tcx.read_query_job(|query| query);\n+        let mut current_job = tcx.current_query_job();\n         let mut cycle = Vec::new();\n \n         while let Some(job) = current_job {\n@@ -222,23 +222,18 @@ impl<CTX: QueryContext> QueryLatch<CTX> {\n impl<CTX: QueryContext> QueryLatch<CTX> {\n     /// Awaits for the query job to complete.\n     pub(super) fn wait_on(&self, tcx: CTX, span: Span) -> Result<(), CycleError<CTX::Query>> {\n-        tcx.read_query_job(move |query| {\n-            let waiter = Lrc::new(QueryWaiter {\n-                query,\n-                span,\n-                cycle: Lock::new(None),\n-                condvar: Condvar::new(),\n-            });\n-            self.wait_on_inner(&waiter);\n-            // FIXME: Get rid of this lock. We have ownership of the QueryWaiter\n-            // although another thread may still have a Lrc reference so we cannot\n-            // use Lrc::get_mut\n-            let mut cycle = waiter.cycle.lock();\n-            match cycle.take() {\n-                None => Ok(()),\n-                Some(cycle) => Err(cycle),\n-            }\n-        })\n+        let query = tcx.current_query_job();\n+        let waiter =\n+            Lrc::new(QueryWaiter { query, span, cycle: Lock::new(None), condvar: Condvar::new() });\n+        self.wait_on_inner(&waiter);\n+        // FIXME: Get rid of this lock. We have ownership of the QueryWaiter\n+        // although another thread may still have a Lrc reference so we cannot\n+        // use Lrc::get_mut\n+        let mut cycle = waiter.cycle.lock();\n+        match cycle.take() {\n+            None => Ok(()),\n+            Some(cycle) => Err(cycle),\n+        }\n     }\n }\n "}, {"sha": "b3187ba91899594a0aa8a554bb1463b89a0f7a6b", "filename": "src/librustc_query_system/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d224e214e051a92c5313a2d4ec0c94d41c4ba01d/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fplumbing.rs?ref=d224e214e051a92c5313a2d4ec0c94d41c4ba01d", "patch": "@@ -211,7 +211,8 @@ where\n \n                 let global_id = QueryJobId::new(id, lookup.shard, Q::DEP_KIND);\n \n-                let job = tcx.read_query_job(|query| QueryJob::new(id, span, query));\n+                let job = tcx.current_query_job();\n+                let job = QueryJob::new(id, span, job);\n \n                 entry.insert(QueryResult::Started(job));\n "}]}