{"sha": "157cbbca04fa60b48bb5fec3221ff00d727a0abf", "node_id": "C_kwDOAAsO6NoAKDE1N2NiYmNhMDRmYTYwYjQ4YmI1ZmVjMzIyMWZmMDBkNzI3YTBhYmY", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-28T13:50:35Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:22Z"}, "message": "lint: add todo for invalid value diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "a9604e354adb6cf1ae28c4eb5756cb7e76d8fab7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9604e354adb6cf1ae28c4eb5756cb7e76d8fab7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/157cbbca04fa60b48bb5fec3221ff00d727a0abf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/157cbbca04fa60b48bb5fec3221ff00d727a0abf", "html_url": "https://github.com/rust-lang/rust/commit/157cbbca04fa60b48bb5fec3221ff00d727a0abf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/157cbbca04fa60b48bb5fec3221ff00d727a0abf/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd8fe82138ba24f1c9f27bb64bf4269aabf9d54a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8fe82138ba24f1c9f27bb64bf4269aabf9d54a", "html_url": "https://github.com/rust-lang/rust/commit/bd8fe82138ba24f1c9f27bb64bf4269aabf9d54a"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "2751c5d6e58b4e037cf562410e6196b069f087f7", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/157cbbca04fa60b48bb5fec3221ff00d727a0abf/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/157cbbca04fa60b48bb5fec3221ff00d727a0abf/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=157cbbca04fa60b48bb5fec3221ff00d727a0abf", "patch": "@@ -2595,6 +2595,7 @@ impl<'tcx> LateLintPass<'tcx> for InvalidValue {\n             if let Some((msg, span)) =\n                 with_no_trimmed_paths!(ty_find_init_error(cx, conjured_ty, init))\n             {\n+                // FIXME(davidtwco): make translatable\n                 cx.struct_span_lint(INVALID_VALUE, expr.span, |lint| {\n                     let mut err = lint.build(&format!(\n                         \"the type `{}` does not permit {}\","}]}