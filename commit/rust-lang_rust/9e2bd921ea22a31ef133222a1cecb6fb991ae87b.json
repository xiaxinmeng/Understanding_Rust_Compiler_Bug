{"sha": "9e2bd921ea22a31ef133222a1cecb6fb991ae87b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMmJkOTIxZWEyMmEzMWVmMTMzMjIyYTFjZWNiNmZiOTkxYWU4N2I=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-06-29T20:45:18Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-06-30T16:08:43Z"}, "message": "mk: Don't consider LLVM done until it's done\n\nCurrently if an LLVM build is interrupted *after* it creates the llvm-config\nbinary but before it's done it puts us in an inconsistent state where we think\nLLVM is compiled but it's not actually. This tweaks our logic to only consider\nLLVM done building once it's actually done building.\n\nThis should hopefully alleviate problems on the bots where if we interrupt at\nthe wrong time it doesn't corrupt the build directory.", "tree": {"sha": "396f246005a3dd17e0bc9ec09cd06b22497c34c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/396f246005a3dd17e0bc9ec09cd06b22497c34c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e2bd921ea22a31ef133222a1cecb6fb991ae87b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2bd921ea22a31ef133222a1cecb6fb991ae87b", "html_url": "https://github.com/rust-lang/rust/commit/9e2bd921ea22a31ef133222a1cecb6fb991ae87b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e2bd921ea22a31ef133222a1cecb6fb991ae87b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2b56fb7a0c24e04227318ca7e5950e9289ee3e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2b56fb7a0c24e04227318ca7e5950e9289ee3e4", "html_url": "https://github.com/rust-lang/rust/commit/c2b56fb7a0c24e04227318ca7e5950e9289ee3e4"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "2298565221072acf3e36dc9a4ff148dc16a40379", "filename": "mk/llvm.mk", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9e2bd921ea22a31ef133222a1cecb6fb991ae87b/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9e2bd921ea22a31ef133222a1cecb6fb991ae87b/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=9e2bd921ea22a31ef133222a1cecb6fb991ae87b", "patch": "@@ -37,16 +37,19 @@ endif\n ifeq ($(CFG_LLVM_ROOT),)\n \n LLVM_STAMP_$(1) = $$(CFG_LLVM_BUILD_DIR_$(1))/llvm-auto-clean-stamp\n+LLVM_DONE_$(1) = $$(CFG_LLVM_BUILD_DIR_$(1))/llvm-finished-building\n \n-$$(LLVM_CONFIG_$(1)): $$(LLVM_DEPS_TARGET_$(1)) $$(LLVM_STAMP_$(1))\n+$$(LLVM_CONFIG_$(1)): $$(LLVM_DONE_$(1))\n+\n+$$(LLVM_DONE_$(1)): $$(LLVM_DEPS_TARGET_$(1)) $$(LLVM_STAMP_$(1))\n \t@$$(call E, cmake: llvm)\n ifeq ($$(findstring msvc,$(1)),msvc)\n \t$$(Q)$$(CFG_CMAKE) --build $$(CFG_LLVM_BUILD_DIR_$(1)) \\\n \t\t--config $$(LLVM_BUILD_CONFIG_MODE)\n else\n \t$$(Q)$$(MAKE) -C $$(CFG_LLVM_BUILD_DIR_$(1))\n endif\n-\t$$(Q)touch $$(LLVM_CONFIG_$(1))\n+\t$$(Q)touch $$@\n \n ifeq ($$(findstring msvc,$(1)),msvc)\n clean-llvm$(1):"}, {"sha": "557c9a4be54887eb3c7b83bd7b237c27b5beed1f", "filename": "src/bootstrap/build/native.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9e2bd921ea22a31ef133222a1cecb6fb991ae87b/src%2Fbootstrap%2Fbuild%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e2bd921ea22a31ef133222a1cecb6fb991ae87b/src%2Fbootstrap%2Fbuild%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fnative.rs?ref=9e2bd921ea22a31ef133222a1cecb6fb991ae87b", "patch": "@@ -20,14 +20,14 @@\n \n use std::path::Path;\n use std::process::Command;\n-use std::fs;\n+use std::fs::{self, File};\n \n use build_helper::output;\n use cmake;\n use gcc;\n \n use build::Build;\n-use build::util::{exe, staticlib, up_to_date};\n+use build::util::{staticlib, up_to_date};\n \n /// Compile LLVM for `target`.\n pub fn llvm(build: &Build, target: &str) {\n@@ -43,9 +43,9 @@ pub fn llvm(build: &Build, target: &str) {\n     // artifacts are missing) then we keep going, otherwise we bail out.\n     let dst = build.llvm_out(target);\n     let stamp = build.src.join(\"src/rustllvm/llvm-auto-clean-trigger\");\n-    let llvm_config = dst.join(\"bin\").join(exe(\"llvm-config\", target));\n+    let done_stamp = dst.join(\"llvm-finished-building\");\n     build.clear_if_dirty(&dst, &stamp);\n-    if fs::metadata(llvm_config).is_ok() {\n+    if fs::metadata(&done_stamp).is_ok() {\n         return\n     }\n \n@@ -111,6 +111,8 @@ pub fn llvm(build: &Build, target: &str) {\n     //        tools. Figure out how to filter them down and only build the right\n     //        tools and libs on all platforms.\n     cfg.build();\n+\n+    t!(File::create(&done_stamp));\n }\n \n fn check_llvm_version(build: &Build, llvm_config: &Path) {"}]}