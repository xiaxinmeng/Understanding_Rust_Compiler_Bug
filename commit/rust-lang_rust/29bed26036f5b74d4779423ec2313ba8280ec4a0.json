{"sha": "29bed26036f5b74d4779423ec2313ba8280ec4a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YmVkMjYwMzZmNWI3NGQ0Nzc5NDIzZWMyMzEzYmE4MjgwZWM0YTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-12-21T12:35:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-12-21T12:37:59Z"}, "message": "slightly more typed interface to panic implementation", "tree": {"sha": "aa80d96d38b7bba0262edccdb63230b87b6c74c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa80d96d38b7bba0262edccdb63230b87b6c74c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29bed26036f5b74d4779423ec2313ba8280ec4a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29bed26036f5b74d4779423ec2313ba8280ec4a0", "html_url": "https://github.com/rust-lang/rust/commit/29bed26036f5b74d4779423ec2313ba8280ec4a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29bed26036f5b74d4779423ec2313ba8280ec4a0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "463ce4042835526f0bd7bf50d6905ed7e2004a2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/463ce4042835526f0bd7bf50d6905ed7e2004a2e", "html_url": "https://github.com/rust-lang/rust/commit/463ce4042835526f0bd7bf50d6905ed7e2004a2e"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "eb2277d8baacde22ad18f6c83d881a11773b5432", "filename": "library/panic_abort/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29bed26036f5b74d4779423ec2313ba8280ec4a0/library%2Fpanic_abort%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29bed26036f5b74d4779423ec2313ba8280ec4a0/library%2Fpanic_abort%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2Fsrc%2Flib.rs?ref=29bed26036f5b74d4779423ec2313ba8280ec4a0", "patch": "@@ -14,11 +14,13 @@\n #![feature(core_intrinsics)]\n #![feature(nll)]\n #![feature(panic_runtime)]\n+#![feature(std_internals)]\n #![feature(staged_api)]\n #![feature(rustc_attrs)]\n #![feature(asm)]\n \n use core::any::Any;\n+use core::panic::BoxMeUp;\n \n #[rustc_std_internal_symbol]\n #[allow(improper_ctypes_definitions)]\n@@ -28,7 +30,7 @@ pub unsafe extern \"C\" fn __rust_panic_cleanup(_: *mut u8) -> *mut (dyn Any + Sen\n \n // \"Leak\" the payload and shim to the relevant abort on the platform in question.\n #[rustc_std_internal_symbol]\n-pub unsafe extern \"C\" fn __rust_start_panic(_payload: usize) -> u32 {\n+pub unsafe extern \"C\" fn __rust_start_panic(_payload: *mut &mut dyn BoxMeUp) -> u32 {\n     abort();\n \n     cfg_if::cfg_if! {"}, {"sha": "1ac050be3e434bfe44ae28e71fd0b2541ec9bff6", "filename": "library/panic_unwind/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/29bed26036f5b74d4779423ec2313ba8280ec4a0/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29bed26036f5b74d4779423ec2313ba8280ec4a0/library%2Fpanic_unwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Flib.rs?ref=29bed26036f5b74d4779423ec2313ba8280ec4a0", "patch": "@@ -104,8 +104,7 @@ pub unsafe extern \"C\" fn __rust_panic_cleanup(payload: *mut u8) -> *mut (dyn Any\n // implementation.\n #[rustc_std_internal_symbol]\n #[unwind(allowed)]\n-pub unsafe extern \"C\" fn __rust_start_panic(payload: usize) -> u32 {\n-    let payload = payload as *mut &mut dyn BoxMeUp;\n+pub unsafe extern \"C\" fn __rust_start_panic(payload: *mut &mut dyn BoxMeUp) -> u32 {\n     let payload = (*payload).take_box();\n \n     imp::panic(Box::from_raw(payload))"}, {"sha": "31c215a52a2ed1facb1a2827e140f1d32c2e5e2f", "filename": "library/std/src/panicking.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29bed26036f5b74d4779423ec2313ba8280ec4a0/library%2Fstd%2Fsrc%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29bed26036f5b74d4779423ec2313ba8280ec4a0/library%2Fstd%2Fsrc%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanicking.rs?ref=29bed26036f5b74d4779423ec2313ba8280ec4a0", "patch": "@@ -48,7 +48,7 @@ extern \"C\" {\n     /// It cannot be `Box<dyn BoxMeUp>` because the other end of this call does not depend\n     /// on liballoc, and thus cannot use `Box`.\n     #[unwind(allowed)]\n-    fn __rust_start_panic(payload: usize) -> u32;\n+    fn __rust_start_panic(payload: *mut &mut dyn BoxMeUp) -> u32;\n }\n \n /// This function is called by the panic runtime if FFI code catches a Rust\n@@ -637,7 +637,7 @@ pub fn rust_panic_without_hook(payload: Box<dyn Any + Send>) -> ! {\n fn rust_panic(mut msg: &mut dyn BoxMeUp) -> ! {\n     let code = unsafe {\n         let obj = &mut msg as *mut &mut dyn BoxMeUp;\n-        __rust_start_panic(obj as usize)\n+        __rust_start_panic(obj)\n     };\n     rtabort!(\"failed to initiate panic, error {}\", code)\n }"}]}