{"sha": "4517e3912581a0709d5862101e19896e57afc22c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MTdlMzkxMjU4MWEwNzA5ZDU4NjIxMDFlMTk4OTZlNTdhZmMyMmM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-24T00:16:26Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-24T22:44:16Z"}, "message": "rm default method lint\n\ndefault methods are enabled by default, so there's not much point in\nkeeping around a lint to report them as being experimental", "tree": {"sha": "7b8132a57e172b13f59b5c259503304476bda065", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b8132a57e172b13f59b5c259503304476bda065"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4517e3912581a0709d5862101e19896e57afc22c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4517e3912581a0709d5862101e19896e57afc22c", "html_url": "https://github.com/rust-lang/rust/commit/4517e3912581a0709d5862101e19896e57afc22c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4517e3912581a0709d5862101e19896e57afc22c/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce1db94647fc82e0625a74fbf9670a7517aba996", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1db94647fc82e0625a74fbf9670a7517aba996", "html_url": "https://github.com/rust-lang/rust/commit/ce1db94647fc82e0625a74fbf9670a7517aba996"}], "stats": {"total": 40, "additions": 1, "deletions": 39}, "files": [{"sha": "d6e6db8354a0f35ce55665bc8f1d42a6731ed968", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4517e3912581a0709d5862101e19896e57afc22c/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4517e3912581a0709d5862101e19896e57afc22c/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=4517e3912581a0709d5862101e19896e57afc22c", "patch": "@@ -79,7 +79,6 @@ pub enum lint {\n     non_camel_case_types,\n     non_uppercase_statics,\n     type_limits,\n-    default_methods,\n     unused_unsafe,\n \n     managed_heap_memory,\n@@ -222,13 +221,6 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n         default: warn\n      }),\n \n-    (\"default_methods\",\n-     LintSpec {\n-        lint: default_methods,\n-        desc: \"allow default methods\",\n-        default: allow\n-     }),\n-\n     (\"unused_unsafe\",\n      LintSpec {\n         lint: unused_unsafe,\n@@ -690,23 +682,6 @@ fn lint_type_limits() -> visit::vt<@mut Context> {\n     })\n }\n \n-fn check_item_default_methods(cx: &Context, item: &ast::item) {\n-    match item.node {\n-        ast::item_trait(_, _, ref methods) => {\n-            for methods.iter().advance |method| {\n-                match *method {\n-                    ast::required(*) => {}\n-                    ast::provided(*) => {\n-                        cx.span_lint(default_methods, item.span,\n-                                     \"default methods are experimental\");\n-                    }\n-                }\n-            }\n-        }\n-        _ => {}\n-    }\n-}\n-\n fn check_item_ctypes(cx: &Context, it: &ast::item) {\n     fn check_ty(cx: &Context, ty: &ast::Ty) {\n         match ty.node {\n@@ -1143,7 +1118,6 @@ pub fn check_crate(tcx: ty::ctxt, crate: @ast::Crate) {\n                     check_item_ctypes(cx, it);\n                     check_item_non_camel_case_types(cx, it);\n                     check_item_non_uppercase_statics(cx, it);\n-                    check_item_default_methods(cx, it);\n                     check_item_heap(cx, it);\n \n                     cx.process(Item(it));"}, {"sha": "35de01b460e627df1b8ef4cf893c8c4e52607ced", "filename": "src/libstd/cmp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4517e3912581a0709d5862101e19896e57afc22c/src%2Flibstd%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4517e3912581a0709d5862101e19896e57afc22c/src%2Flibstd%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcmp.rs?ref=4517e3912581a0709d5862101e19896e57afc22c", "patch": "@@ -21,7 +21,6 @@ and `Eq` to overload the `==` and `!=` operators.\n */\n \n #[allow(missing_doc)];\n-#[allow(default_methods)]; // NOTE: Remove when allowed in stage0\n \n /**\n * Trait for values that can be compared for equality and inequality."}, {"sha": "8620cf5f44c6293c9d424bca6b798309bfc7bfe6", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4517e3912581a0709d5862101e19896e57afc22c/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4517e3912581a0709d5862101e19896e57afc22c/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=4517e3912581a0709d5862101e19896e57afc22c", "patch": "@@ -17,8 +17,6 @@ implementing the `Iterator` trait.\n \n */\n \n-#[allow(default_methods)]; // still off by default in stage0\n-\n use cmp;\n use iter::Times;\n use num::{Zero, One};"}, {"sha": "23befde7559c726dd17637d83df031c0d90645b5", "filename": "src/test/compile-fail/lint-default-methods.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce1db94647fc82e0625a74fbf9670a7517aba996/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1db94647fc82e0625a74fbf9670a7517aba996/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs?ref=ce1db94647fc82e0625a74fbf9670a7517aba996", "patch": "@@ -1,7 +0,0 @@\n-#[forbid(default_methods)];\n-\n-trait Foo { //~ ERROR default methods are experimental\n-    fn bar(&self) { println(\"hi\"); }\n-}\n-\n-fn main() {}"}, {"sha": "41c4af86bac95bdc8234a53f74b0ea2eeae74d35", "filename": "src/test/run-pass/issue-7712.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4517e3912581a0709d5862101e19896e57afc22c/src%2Ftest%2Frun-pass%2Fissue-7712.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4517e3912581a0709d5862101e19896e57afc22c/src%2Ftest%2Frun-pass%2Fissue-7712.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7712.rs?ref=4517e3912581a0709d5862101e19896e57afc22c", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags:-Z debug-info\n \n-#[allow(default_methods)];\n-\n pub trait TraitWithDefaultMethod {\n     pub fn method(self) {\n         ()\n@@ -24,4 +22,4 @@ impl TraitWithDefaultMethod for MyStruct { }\n \n fn main() {\n     MyStruct.method();\n-}\n\\ No newline at end of file\n+}"}]}