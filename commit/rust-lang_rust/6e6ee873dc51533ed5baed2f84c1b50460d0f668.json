{"sha": "6e6ee873dc51533ed5baed2f84c1b50460d0f668", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNmVlODczZGM1MTUzM2VkNWJhZWQyZjg0YzFiNTA0NjBkMGY2Njg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-01T13:18:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-01T13:18:04Z"}, "message": "Auto merge of #4307 - flip1995:unnecessary_unwrap, r=oli-obk\n\nMove {unnecessary,panicking}_unwrap out of nursery\n\nResolves #2437\n\nchangelog: Move `{unnnecessary,panicking}_unwrap` out of nursery", "tree": {"sha": "020f7e182530653c63119e442414d699e562a006", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/020f7e182530653c63119e442414d699e562a006"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e6ee873dc51533ed5baed2f84c1b50460d0f668", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e6ee873dc51533ed5baed2f84c1b50460d0f668", "html_url": "https://github.com/rust-lang/rust/commit/6e6ee873dc51533ed5baed2f84c1b50460d0f668", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e6ee873dc51533ed5baed2f84c1b50460d0f668/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e5352d9b24a59ba29f676bdbb48d9cc3634b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e5352d9b24a59ba29f676bdbb48d9cc3634b27", "html_url": "https://github.com/rust-lang/rust/commit/c8e5352d9b24a59ba29f676bdbb48d9cc3634b27"}, {"sha": "feca48d8a292c66186fb391c231327b85e116cd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/feca48d8a292c66186fb391c231327b85e116cd9", "html_url": "https://github.com/rust-lang/rust/commit/feca48d8a292c66186fb391c231327b85e116cd9"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "1e9e17f599c9af7ac50f972995ad0fe79f1f3ffa", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e6ee873dc51533ed5baed2f84c1b50460d0f668/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e6ee873dc51533ed5baed2f84c1b50460d0f668/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=6e6ee873dc51533ed5baed2f84c1b50460d0f668", "patch": "@@ -894,6 +894,8 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME,\n         unused_io_amount::UNUSED_IO_AMOUNT,\n         unused_label::UNUSED_LABEL,\n+        unwrap::PANICKING_UNWRAP,\n+        unwrap::UNNECESSARY_UNWRAP,\n         vec::USELESS_VEC,\n         write::PRINTLN_EMPTY_STRING,\n         write::PRINT_LITERAL,\n@@ -1060,6 +1062,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         types::UNNECESSARY_CAST,\n         types::VEC_BOX,\n         unused_label::UNUSED_LABEL,\n+        unwrap::UNNECESSARY_UNWRAP,\n         zero_div_zero::ZERO_DIVIDED_BY_ZERO,\n     ]);\n \n@@ -1121,6 +1124,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         types::UNIT_CMP,\n         unicode::ZERO_WIDTH_SPACE,\n         unused_io_amount::UNUSED_IO_AMOUNT,\n+        unwrap::PANICKING_UNWRAP,\n     ]);\n \n     reg.register_lint_group(\"clippy::perf\", Some(\"clippy_perf\"), vec![\n@@ -1157,8 +1161,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         needless_borrow::NEEDLESS_BORROW,\n         path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE,\n         redundant_clone::REDUNDANT_CLONE,\n-        unwrap::PANICKING_UNWRAP,\n-        unwrap::UNNECESSARY_UNWRAP,\n     ]);\n }\n "}, {"sha": "d39c341d06e5a43918f8d8b4283fd2d1665e04a7", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6e6ee873dc51533ed5baed2f84c1b50460d0f668/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e6ee873dc51533ed5baed2f84c1b50460d0f668/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=6e6ee873dc51533ed5baed2f84c1b50460d0f668", "patch": "@@ -14,10 +14,12 @@ declare_clippy_lint! {\n     ///\n     /// **Why is this bad?** Using `if let` or `match` is more idiomatic.\n     ///\n-    /// **Known problems:** Limitations of the borrow checker might make unwrap() necessary sometimes?\n+    /// **Known problems:** None\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let option = Some(0);\n+    /// # fn do_something_with(_x: usize) {}\n     /// if option.is_some() {\n     ///     do_something_with(option.unwrap())\n     /// }\n@@ -26,12 +28,14 @@ declare_clippy_lint! {\n     /// Could be written:\n     ///\n     /// ```rust\n+    /// # let option = Some(0);\n+    /// # fn do_something_with(_x: usize) {}\n     /// if let Some(value) = option {\n     ///     do_something_with(value)\n     /// }\n     /// ```\n     pub UNNECESSARY_UNWRAP,\n-    nursery,\n+    complexity,\n     \"checks for calls of unwrap[_err]() that cannot fail\"\n }\n \n@@ -45,14 +49,16 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let option = Some(0);\n+    /// # fn do_something_with(_x: usize) {}\n     /// if option.is_none() {\n     ///     do_something_with(option.unwrap())\n     /// }\n     /// ```\n     ///\n     /// This code will always panic. The if condition should probably be inverted.\n     pub PANICKING_UNWRAP,\n-    nursery,\n+    correctness,\n     \"checks for calls of unwrap[_err]() that will always fail\"\n }\n "}, {"sha": "aa457664020975c7bd237c715d83db01f2b029d0", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e6ee873dc51533ed5baed2f84c1b50460d0f668/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e6ee873dc51533ed5baed2f84c1b50460d0f668/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=6e6ee873dc51533ed5baed2f84c1b50460d0f668", "patch": "@@ -1381,7 +1381,7 @@ pub const ALL_LINTS: [Lint; 309] = [\n     },\n     Lint {\n         name: \"panicking_unwrap\",\n-        group: \"nursery\",\n+        group: \"correctness\",\n         desc: \"checks for calls of unwrap[_err]() that will always fail\",\n         deprecation: None,\n         module: \"unwrap\",\n@@ -1927,7 +1927,7 @@ pub const ALL_LINTS: [Lint; 309] = [\n     },\n     Lint {\n         name: \"unnecessary_unwrap\",\n-        group: \"nursery\",\n+        group: \"complexity\",\n         desc: \"checks for calls of unwrap[_err]() that cannot fail\",\n         deprecation: None,\n         module: \"unwrap\","}]}