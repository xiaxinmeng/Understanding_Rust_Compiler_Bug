{"sha": "cd6c186e4eb410413522e2be2ef6309edf3d0b32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNmMxODZlNGViNDEwNDEzNTIyZTJiZTJlZjYzMDllZGYzZDBiMzI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-04-20T12:18:29Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-04-24T11:11:48Z"}, "message": "Warn on all erroneous constants", "tree": {"sha": "fe3f5e008cd252804e323c692124386384bf5197", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe3f5e008cd252804e323c692124386384bf5197"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd6c186e4eb410413522e2be2ef6309edf3d0b32", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlrfEPYACgkQpp+NIls6\n19m5oA/+PJbpQPx7PG5tQHVZZy5i/gMiXXWiSo/6Qwg3NAJvhzALrlEPoea7WrfI\nA/3SV30zNQYr7PkGazTgu3frvSKFheG0bKFBgjXgRZtptkl8DOCBcrV8qowc40cp\nhaom+lFM0tJmwq35NAh1gFfISkJK7GsgodfZheCAgV/lN4zOMbJ+2MPa88TZrR4T\nOm/yzy9ccwiUKEValnuoHH61bHKBOSqS3tqSDBVwLT0MKGh0MsCTADLI4QwzXHmh\nSIsAVT/TXUQ54UWB+lhASwCh9xW4GXkDqg7/lIGPC4FwetMp+03FY/6DGe3HbDjY\n9zefEw/CrNfPrG1OEKUJ3pdc+p3F9SbiostO1a98u5J95vOITVDdBOgFUtfj5A4v\n9VaxPGTOPXEqPvbrpfiMeHdhSBTFWNq1tW3SKWzGMXps4H+BWk24kLYgPtgmEv7Q\noBiKO7u82o48njuiNMWVHRWNWmQPrjHuesKUIkGJDUT3eaWHNdGbWiaTnJvUXqT9\ngTW4h8VSmgUaTGnAFDKX7PKuI23Z+KOFuWpZC0+Yi+K9ezdD1LwP74iDjPOxEZ7p\ngzSvBO3h3IjFLbQTQ62UiCFEXwQmFWmsT+f+CTbvl2m+1hhxRMv/KugBluoBhaxK\nJQpA4MGeidiP2QLMrsYqsu6FSZYBFxsbDjtBBUKrdpGxWQT3KdQ=\n=gFMl\n-----END PGP SIGNATURE-----", "payload": "tree fe3f5e008cd252804e323c692124386384bf5197\nparent 52ed3d8761dc42e51429eb3bbf56a94d14fdd5c6\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1524226709 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1524568308 +0200\n\nWarn on all erroneous constants\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd6c186e4eb410413522e2be2ef6309edf3d0b32", "html_url": "https://github.com/rust-lang/rust/commit/cd6c186e4eb410413522e2be2ef6309edf3d0b32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd6c186e4eb410413522e2be2ef6309edf3d0b32/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52ed3d8761dc42e51429eb3bbf56a94d14fdd5c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/52ed3d8761dc42e51429eb3bbf56a94d14fdd5c6", "html_url": "https://github.com/rust-lang/rust/commit/52ed3d8761dc42e51429eb3bbf56a94d14fdd5c6"}], "stats": {"total": 308, "additions": 233, "deletions": 75}, "files": [{"sha": "af0620b00051f901e6f6ebf6e5ad8a30a4eb3cfb", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -1441,3 +1441,71 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypeAliasBounds {\n         }\n     }\n }\n+\n+/// Lint constants that are erroneous.\n+/// Without this lint, we might not get any diagnostic if the constant is\n+/// unused within this crate, even though downstream crates can't use it\n+/// without producing an error.\n+pub struct UnusedBrokenConst;\n+\n+impl LintPass for UnusedBrokenConst {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!()\n+    }\n+}\n+\n+fn check_const(cx: &LateContext, body_id: hir::BodyId, what: &str) {\n+    let def_id = cx.tcx.hir.body_owner_def_id(body_id);\n+    let param_env = cx.tcx.param_env(def_id);\n+    let cid = ::rustc::mir::interpret::GlobalId {\n+        instance: ty::Instance::mono(cx.tcx, def_id),\n+        promoted: None\n+    };\n+    if let Err(err) = cx.tcx.const_eval(param_env.and(cid)) {\n+        let span = cx.tcx.def_span(def_id);\n+        let mut diag = cx.struct_span_lint(\n+            CONST_ERR,\n+            span,\n+            &format!(\"this {} cannot be used\", what),\n+        );\n+        use rustc::middle::const_val::ConstEvalErrDescription;\n+        match err.description() {\n+            ConstEvalErrDescription::Simple(message) => {\n+                diag.span_label(span, message);\n+            }\n+            ConstEvalErrDescription::Backtrace(miri, frames) => {\n+                diag.span_label(span, format!(\"{}\", miri));\n+                for frame in frames {\n+                    diag.span_label(frame.span, format!(\"inside call to `{}`\", frame.location));\n+                }\n+            }\n+        }\n+        diag.emit()\n+    }\n+}\n+\n+struct UnusedBrokenConstVisitor<'a, 'tcx: 'a>(&'a LateContext<'a, 'tcx>);\n+\n+impl<'a, 'tcx, 'v> hir::intravisit::Visitor<'v> for UnusedBrokenConstVisitor<'a, 'tcx> {\n+    fn visit_nested_body(&mut self, id: hir::BodyId) {\n+        check_const(self.0, id, \"array length\");\n+    }\n+    fn nested_visit_map<'this>(&'this mut self) -> hir::intravisit::NestedVisitorMap<'this, 'v> {\n+        hir::intravisit::NestedVisitorMap::None\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedBrokenConst {\n+    fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n+        match it.node {\n+            hir::ItemConst(_, body_id) => {\n+                check_const(cx, body_id, \"constant\");\n+            },\n+            hir::ItemTy(ref ty, _) => hir::intravisit::walk_ty(\n+                &mut UnusedBrokenConstVisitor(cx),\n+                ty\n+            ),\n+            _ => {},\n+        }\n+    }\n+}"}, {"sha": "634b22e4ed7e01bd0c3f47ced5e4bd8d785e866b", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -136,6 +136,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                  UnionsWithDropFields,\n                  UnreachablePub,\n                  TypeAliasBounds,\n+                 UnusedBrokenConst,\n                  );\n \n     add_builtin_with_new!(sess,"}, {"sha": "9b9deb4ca8d9d9cbef5304fd34a13d4447a388f0", "filename": "src/test/compile-fail/array_const_index-0.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -12,6 +12,7 @@ const A: &'static [i32] = &[];\n const B: i32 = (&A)[1];\n //~^ ERROR constant evaluation error\n //~| index out of bounds: the len is 0 but the index is 1\n+//~| WARN this constant cannot be used\n \n fn main() {\n     let _ = B;"}, {"sha": "46feb20cf11ddbda624db1055b74db74476b9965", "filename": "src/test/compile-fail/array_const_index-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -12,6 +12,7 @@ const A: [i32; 0] = [];\n const B: i32 = A[1];\n //~^ ERROR constant evaluation error\n //~| index out of bounds: the len is 0 but the index is 1\n+//~| WARN this constant cannot be used\n \n fn main() {\n     let _ = B;"}, {"sha": "6caec159d019ce39ce7f9bd1d65f64a561aa9b53", "filename": "src/test/compile-fail/const-err-early.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -10,17 +10,17 @@\n \n #![deny(const_err)]\n \n-pub const A: i8 = -std::i8::MIN; //~ ERROR E0080\n-//~^ ERROR attempt to negate with overflow\n+pub const A: i8 = -std::i8::MIN; //~ ERROR const_err\n+//~^ ERROR this constant cannot be used\n //~| ERROR constant evaluation error\n-pub const B: u8 = 200u8 + 200u8; //~ ERROR E0080\n-//~^ ERROR attempt to add with overflow\n-pub const C: u8 = 200u8 * 4; //~ ERROR E0080\n-//~^ ERROR attempt to multiply with overflow\n-pub const D: u8 = 42u8 - (42u8 + 1); //~ ERROR E0080\n-//~^ ERROR attempt to subtract with overflow\n+pub const B: u8 = 200u8 + 200u8; //~ ERROR const_err\n+//~^ ERROR this constant cannot be used\n+pub const C: u8 = 200u8 * 4; //~ ERROR const_err\n+//~^ ERROR this constant cannot be used\n+pub const D: u8 = 42u8 - (42u8 + 1); //~ ERROR const_err\n+//~^ ERROR this constant cannot be used\n pub const E: u8 = [5u8][1];\n-//~^ ERROR E0080\n+//~^ ERROR const_err\n \n fn main() {\n     let _a = A;"}, {"sha": "6f0281b8bd0ca7382bf595d54137dae3a5b852a7", "filename": "src/test/compile-fail/const-err-multi.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -14,12 +14,13 @@ pub const A: i8 = -std::i8::MIN;\n //~^ ERROR E0080\n //~| ERROR attempt to negate with overflow\n //~| ERROR constant evaluation error\n+//~| ERROR this constant cannot be used\n pub const B: i8 = A;\n-//~^ ERROR E0080\n+//~^ ERROR const_err\n pub const C: u8 = A as u8;\n-//~^ ERROR E0080\n+//~^ ERROR const_err\n pub const D: i8 = 50 - A;\n-//~^ ERROR E0080\n+//~^ ERROR const_err\n \n fn main() {\n     let _ = (A, B, C, D);"}, {"sha": "faa8c3039b78cdfe0aae394a6428ea16b9adc8bd", "filename": "src/test/compile-fail/const-eval-overflow2.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -22,57 +22,57 @@ use std::{i8, i16, i32, i64, isize};\n use std::{u8, u16, u32, u64, usize};\n \n const VALS_I8: (i8,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i8::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n const VALS_I16: (i16,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i16::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n const VALS_I32: (i32,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i32::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n const VALS_I64: (i64,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i64::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n const VALS_U8: (u8,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      u8::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n const VALS_U16: (u16,) = (\n+     //~^ ERROR this constant cannot be used\n      u16::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n const VALS_U32: (u32,) = (\n+     //~^ ERROR this constant cannot be used\n      u32::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n const VALS_U64: (u64,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      u64::MIN - 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to subtract with overflow\n+     //~^ ERROR attempt to subtract with overflow\n      );\n \n fn main() {"}, {"sha": "d827e680c5bbbec49cad32f782b1b96cda6764d8", "filename": "src/test/compile-fail/const-eval-overflow2b.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2b.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -22,57 +22,57 @@ use std::{i8, i16, i32, i64, isize};\n use std::{u8, u16, u32, u64, usize};\n \n const VALS_I8: (i8,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i8::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n const VALS_I16: (i16,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i16::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n const VALS_I32: (i32,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i32::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n const VALS_I64: (i64,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i64::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n const VALS_U8: (u8,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      u8::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n const VALS_U16: (u16,) = (\n+     //~^ ERROR this constant cannot be used\n      u16::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n const VALS_U32: (u32,) = (\n+     //~^ ERROR this constant cannot be used\n      u32::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n const VALS_U64: (u64,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      u64::MAX + 1,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to add with overflow\n+     //~^ ERROR attempt to add with overflow\n      );\n \n fn main() {"}, {"sha": "2fd46b038ef28d7e62b9f98fcec95e360ba5c119", "filename": "src/test/compile-fail/const-eval-overflow2c.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2c.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -22,57 +22,57 @@ use std::{i8, i16, i32, i64, isize};\n use std::{u8, u16, u32, u64, usize};\n \n const VALS_I8: (i8,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i8::MIN * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n const VALS_I16: (i16,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i16::MIN * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n const VALS_I32: (i32,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i32::MIN * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n const VALS_I64: (i64,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      i64::MIN * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n const VALS_U8: (u8,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      u8::MAX * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n const VALS_U16: (u16,) = (\n+     //~^ ERROR this constant cannot be used\n      u16::MAX * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n const VALS_U32: (u32,) = (\n+     //~^ ERROR this constant cannot be used\n      u32::MAX * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n const VALS_U64: (u64,) =\n+     //~^ ERROR this constant cannot be used\n     (\n      u64::MAX * 2,\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR attempt to multiply with overflow\n+     //~^ ERROR attempt to multiply with overflow\n      );\n \n fn main() {"}, {"sha": "7da5a2f17eaf90960d6339474ec99ddd2a509b47", "filename": "src/test/compile-fail/const-slice-oob.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -14,6 +14,7 @@ const FOO: &'static[u32] = &[1, 2, 3];\n const BAR: u32 = FOO[5];\n //~^ ERROR constant evaluation error [E0080]\n //~| index out of bounds: the len is 3 but the index is 5\n+//~| WARN this constant cannot be used\n \n fn main() {\n     let _ = BAR;"}, {"sha": "dbddee862e022a87d3521e58ffec761291acf78b", "filename": "src/test/ui/const-eval/conditional_array_execution.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -14,6 +14,7 @@ const X: u32 = 5;\n const Y: u32 = 6;\n const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n //~^ WARN attempt to subtract with overflow\n+//~| WARN this constant cannot be used\n \n fn main() {\n     println!(\"{}\", FOO);"}, {"sha": "713b1b36c08b1b0c55f807d0eee174608f2e45a4", "filename": "src/test/ui/const-eval/conditional_array_execution.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -6,8 +6,14 @@ LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n    |\n    = note: #[warn(const_err)] on by default\n \n+warning: this constant cannot be used\n+  --> $DIR/conditional_array_execution.rs:15:1\n+   |\n+LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n+\n warning: constant evaluation error\n-  --> $DIR/conditional_array_execution.rs:19:20\n+  --> $DIR/conditional_array_execution.rs:20:20\n    |\n LL |     println!(\"{}\", FOO);\n    |                    ^^^ referenced constant has errors"}, {"sha": "097fba4d3c45094b98152e68372b8878b789539e", "filename": "src/test/ui/const-eval/issue-43197.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -19,8 +19,10 @@ const fn foo(x: u32) -> u32 {\n fn main() {\n     const X: u32 = 0-1;\n     //~^ WARN attempt to subtract with overflow\n+    //~| WARN this constant cannot be used\n     const Y: u32 = foo(0-1);\n     //~^ WARN attempt to subtract with overflow\n+    //~| WARN this constant cannot be used\n     println!(\"{} {}\", X, Y);\n     //~^ WARN constant evaluation error\n     //~| WARN constant evaluation error"}, {"sha": "a22e8016296c4f95a3b2fe53907d52bd39a71db4", "filename": "src/test/ui/const-eval/issue-43197.stderr", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -6,20 +6,32 @@ LL |     const X: u32 = 0-1;\n    |\n    = note: #[warn(const_err)] on by default\n \n-warning: constant evaluation error\n-  --> $DIR/issue-43197.rs:24:23\n+warning: this constant cannot be used\n+  --> $DIR/issue-43197.rs:20:5\n    |\n-LL |     println!(\"{} {}\", X, Y);\n-   |                       ^ referenced constant has errors\n+LL |     const X: u32 = 0-1;\n+   |     ^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n \n warning: attempt to subtract with overflow\n-  --> $DIR/issue-43197.rs:22:24\n+  --> $DIR/issue-43197.rs:23:24\n    |\n LL |     const Y: u32 = foo(0-1);\n    |                        ^^^\n \n+warning: this constant cannot be used\n+  --> $DIR/issue-43197.rs:23:5\n+   |\n+LL |     const Y: u32 = foo(0-1);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n+\n+warning: constant evaluation error\n+  --> $DIR/issue-43197.rs:26:23\n+   |\n+LL |     println!(\"{} {}\", X, Y);\n+   |                       ^ referenced constant has errors\n+\n warning: constant evaluation error\n-  --> $DIR/issue-43197.rs:24:26\n+  --> $DIR/issue-43197.rs:26:26\n    |\n LL |     println!(\"{} {}\", X, Y);\n    |                          ^ referenced constant has errors"}, {"sha": "c6bf07649af38a17dd33964436037a59b06d0493", "filename": "src/test/ui/const-eval/pub_const_err.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -8,9 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![deny(const_err)]\n+// compile-pass\n \n #![crate_type = \"lib\"]\n \n pub const Z: u32 = 0 - 1;\n-//~^ ERROR attempt to subtract with overflow\n+//~^ WARN attempt to subtract with overflow\n+//~| WARN this constant cannot be used\n+\n+pub type Foo = [i32; 0 - 1];\n+//~^ WARN attempt to subtract with overflow\n+//~| WARN this array length cannot be used"}, {"sha": "2981ac20cd981d639a426fd082a0486e2e4ff147", "filename": "src/test/ui/const-eval/pub_const_err.stderr", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err.stderr?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -1,14 +1,26 @@\n-error: attempt to subtract with overflow\n+warning: attempt to subtract with overflow\n   --> $DIR/pub_const_err.rs:15:20\n    |\n LL | pub const Z: u32 = 0 - 1;\n    |                    ^^^^^\n    |\n-note: lint level defined here\n-  --> $DIR/pub_const_err.rs:11:9\n+   = note: #[warn(const_err)] on by default\n+\n+warning: this constant cannot be used\n+  --> $DIR/pub_const_err.rs:15:1\n    |\n-LL | #![deny(const_err)]\n-   |         ^^^^^^^^^\n+LL | pub const Z: u32 = 0 - 1;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n \n-error: aborting due to previous error\n+warning: attempt to subtract with overflow\n+  --> $DIR/pub_const_err.rs:19:22\n+   |\n+LL | pub type Foo = [i32; 0 - 1];\n+   |                      ^^^^^\n+\n+warning: this array length cannot be used\n+  --> $DIR/pub_const_err.rs:19:22\n+   |\n+LL | pub type Foo = [i32; 0 - 1];\n+   |                      ^^^^^ attempt to subtract with overflow\n "}, {"sha": "d87cb7ed7707936ab5fb07554edb20f414ef739c", "filename": "src/test/ui/const-eval/pub_const_err_bin.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.rs?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+\n+pub const Z: u32 = 0 - 1;\n+//~^ WARN attempt to subtract with overflow\n+//~| WARN this constant cannot be used\n+\n+pub type Foo = [i32; 0 - 1];\n+//~^ WARN attempt to subtract with overflow\n+//~| WARN this array length cannot be used\n+\n+fn main() {}"}, {"sha": "3e8966d854bf0ff49d9b8c9998c4735d8b6fb990", "filename": "src/test/ui/const-eval/pub_const_err_bin.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd6c186e4eb410413522e2be2ef6309edf3d0b32/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fpub_const_err_bin.stderr?ref=cd6c186e4eb410413522e2be2ef6309edf3d0b32", "patch": "@@ -0,0 +1,26 @@\n+warning: attempt to subtract with overflow\n+  --> $DIR/pub_const_err_bin.rs:13:20\n+   |\n+LL | pub const Z: u32 = 0 - 1;\n+   |                    ^^^^^\n+   |\n+   = note: #[warn(const_err)] on by default\n+\n+warning: this constant cannot be used\n+  --> $DIR/pub_const_err_bin.rs:13:1\n+   |\n+LL | pub const Z: u32 = 0 - 1;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n+\n+warning: attempt to subtract with overflow\n+  --> $DIR/pub_const_err_bin.rs:17:22\n+   |\n+LL | pub type Foo = [i32; 0 - 1];\n+   |                      ^^^^^\n+\n+warning: this array length cannot be used\n+  --> $DIR/pub_const_err_bin.rs:17:22\n+   |\n+LL | pub type Foo = [i32; 0 - 1];\n+   |                      ^^^^^ attempt to subtract with overflow\n+"}]}