{"sha": "918115c32e9a3882d1dd65f2403bd109fc64c798", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxODExNWMzMmU5YTM4ODJkMWRkNjVmMjQwM2JkMTA5ZmM2NGM3OTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-06T17:30:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-06T17:30:57Z"}, "message": "Merge #3036\n\n3036: Remove the leftovers after ImportLocator removal r=matklad a=SomeoneToIgnore\n\nFollow the FIXME's suggestion (https://github.com/rust-analyzer/rust-analyzer/pull/3034/files#diff-001b3b1412c33fee802c22b0f848dcd7L237) and remove the `ModuleDefId` reexport.\r\n\r\nAlso rename `ImportsLocatorIde` into plain `ImportsLocator`\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "cd660466355281aea5dfbec84578e529b9c3e393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd660466355281aea5dfbec84578e529b9c3e393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/918115c32e9a3882d1dd65f2403bd109fc64c798", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJePE1RCRBK7hj4Ov3rIwAAdHIIAENC6PD7c6PenpPS8n7CsB4+\nWSPw8YhtL+6FzseDn/szsVQ9zxaVcPNJJZxUI2YkCZMGnlyHlXdJmhYHpjYvyrC0\nB9X+XZ3vvNz8VITeRYpcLyiFMgGjpwwrUDSsMR8raLGUYlreXRjLApiLq3lSuC1k\n2Ss+UiTkE02Fc+MDY6cIhDJceQ5ctwMMI5t6hxz5nIhZI0SV94h8D9zdcbmxLxVZ\nCSyad51PNyL4lJaGnIPtZDL8AZU6nv9wfrDqbPVuqXFdzzWTjLyL5O2Yh5ora+tx\nL6lQhBvspmirdFbobv4tzWgzszc3Bq8cBl0rwltYGyelMbjod0tp08eMQPCo2XM=\n=VHIb\n-----END PGP SIGNATURE-----\n", "payload": "tree cd660466355281aea5dfbec84578e529b9c3e393\nparent 46027e10be3d23643bc41ffa8dc8c7cf4013b21a\nparent f4a4fcf2753f48b81873de5dc39c1159d2a88654\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581010257 +0000\ncommitter GitHub <noreply@github.com> 1581010257 +0000\n\nMerge #3036\n\n3036: Remove the leftovers after ImportLocator removal r=matklad a=SomeoneToIgnore\n\nFollow the FIXME's suggestion (https://github.com/rust-analyzer/rust-analyzer/pull/3034/files#diff-001b3b1412c33fee802c22b0f848dcd7L237) and remove the `ModuleDefId` reexport.\r\n\r\nAlso rename `ImportsLocatorIde` into plain `ImportsLocator`\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/918115c32e9a3882d1dd65f2403bd109fc64c798", "html_url": "https://github.com/rust-lang/rust/commit/918115c32e9a3882d1dd65f2403bd109fc64c798", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/918115c32e9a3882d1dd65f2403bd109fc64c798/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46027e10be3d23643bc41ffa8dc8c7cf4013b21a", "url": "https://api.github.com/repos/rust-lang/rust/commits/46027e10be3d23643bc41ffa8dc8c7cf4013b21a", "html_url": "https://github.com/rust-lang/rust/commit/46027e10be3d23643bc41ffa8dc8c7cf4013b21a"}, {"sha": "f4a4fcf2753f48b81873de5dc39c1159d2a88654", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4a4fcf2753f48b81873de5dc39c1159d2a88654", "html_url": "https://github.com/rust-lang/rust/commit/f4a4fcf2753f48b81873de5dc39c1159d2a88654"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "10c4b7d7c343e130603c5d136bd0c24877d8dcb4", "filename": "crates/ra_assists/src/assists/auto_import.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/918115c32e9a3882d1dd65f2403bd109fc64c798/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/918115c32e9a3882d1dd65f2403bd109fc64c798/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs?ref=918115c32e9a3882d1dd65f2403bd109fc64c798", "patch": "@@ -8,7 +8,7 @@ use crate::{\n     assist_ctx::{ActionBuilder, Assist, AssistCtx},\n     auto_import_text_edit, AssistId,\n };\n-use ra_ide_db::imports_locator::ImportsLocatorIde;\n+use ra_ide_db::imports_locator::ImportsLocator;\n \n // Assist: auto_import\n //\n@@ -52,7 +52,7 @@ pub(crate) fn auto_import(ctx: AssistCtx) -> Option<Assist> {\n         return None;\n     }\n \n-    let mut imports_locator = ImportsLocatorIde::new(ctx.db);\n+    let mut imports_locator = ImportsLocator::new(ctx.db);\n \n     let proposed_imports = imports_locator\n         .find_imports(&name_to_import)"}, {"sha": "86e4227796c85c107aac2a61c3839ce7888cbf37", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/918115c32e9a3882d1dd65f2403bd109fc64c798/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/918115c32e9a3882d1dd65f2403bd109fc64c798/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=918115c32e9a3882d1dd65f2403bd109fc64c798", "patch": "@@ -56,7 +56,6 @@ pub use hir_def::{\n     nameres::ModuleSource,\n     path::{ModPath, Path, PathKind},\n     type_ref::Mutability,\n-    ModuleDefId, // FIXME this is exposed and should be used for implementing the `TestImportsLocator` in `ra_assists` only, should be removed later along with the trait and the implementation.\n };\n pub use hir_expand::{\n     name::{name, Name},"}, {"sha": "401b8ac0bdb0a687f48946f9283e5e33d44bde4a", "filename": "crates/ra_ide_db/src/imports_locator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/918115c32e9a3882d1dd65f2403bd109fc64c798/crates%2Fra_ide_db%2Fsrc%2Fimports_locator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/918115c32e9a3882d1dd65f2403bd109fc64c798/crates%2Fra_ide_db%2Fsrc%2Fimports_locator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fimports_locator.rs?ref=918115c32e9a3882d1dd65f2403bd109fc64c798", "patch": "@@ -12,11 +12,11 @@ use crate::{\n     RootDatabase,\n };\n \n-pub struct ImportsLocatorIde<'a> {\n+pub struct ImportsLocator<'a> {\n     source_binder: SourceBinder<'a, RootDatabase>,\n }\n \n-impl<'a> ImportsLocatorIde<'a> {\n+impl<'a> ImportsLocator<'a> {\n     pub fn new(db: &'a RootDatabase) -> Self {\n         Self { source_binder: SourceBinder::new(db) }\n     }"}]}