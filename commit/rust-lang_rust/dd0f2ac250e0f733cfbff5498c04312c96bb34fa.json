{"sha": "dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMGYyYWMyNTBlMGY3MzNjZmJmZjU0OThjMDQzMTJjOTZiYjM0ZmE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-07-25T19:03:53Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-07-25T19:03:53Z"}, "message": "librustc_errors: Support ui-testing flag in annotate-snippet emitter\n\nThis adds support for the `-Z ui-testing` flag to the new\nannotate-snippet diagnostic emitter.\n\nThe support for the flag was added to `annotate-snippet-rs` in these PRs:\n\n* https://github.com/rust-lang/annotate-snippets-rs/pull/3\n* https://github.com/rust-lang/annotate-snippets-rs/pull/5\n\nCloses #61811", "tree": {"sha": "965b86b89808315c96023de5f9bd94585c319a11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/965b86b89808315c96023de5f9bd94585c319a11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl05/hYQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5tV5D/wOSPUXHVLCpuOPsJRR9rY2wamUrn/RU9cx\nMMavLRtuZR3s5zjKLwkJbupLpyH8h68VKxdnbHwbKLGLftoMbr3b8liP8fwyNTde\nCOf23twGgIadslQbCA5jIqXhIOpJoN6eqR7uqmqrp7bhIuYNliPa9FuOYF1aIBVf\n1qsi5lLUYHK6N+Oih2nZRnTPp4g+vJiEznuobddZsad1QhS22o3siHACCGtkkrat\nAbcDdfym7ShzrhNvEy1h+jtYiGbONuKQmMkOvc3VHrTEKYqe+XwdYgocRB07mrpc\nEI7Czvwp2Jx3/uwq11mN8qFQ04vppmt9ZLiNn6KY0hUjFhXQo+Boj0YyNuqFtfeL\nSg2ROsv1IPGOAk2sZARh3te7Fdtco0LCtMM9Ow/sFIisaANb79QeaWpTpBOFnr1t\nEBF40DUzn4lZRrAjOvApWecD3GqDHtQXMfMg8h0niQN2Hpp8Z67UI3H0ZmMAQcpU\nk320QzcxuqBrdOtwIq8amzX+nwvbg8MQPNn5mp4OZgeNjtVaK5eSkU4HL/szgwUF\nlLViMxSa6KF0TGXrUMzpPfNOKSv9Qx8dDWnyL69+c7wp0RXuUc7irjX2LknX7/cu\nedLtJixQP8Yn8EiyY9fvUAwLwSyL5ZqWHDyA94j5Z4vA8WFZtPYx9KZW+cDNN0XV\n+o05TcP5Bw==\n=/AJ4\n-----END PGP SIGNATURE-----", "payload": "tree 965b86b89808315c96023de5f9bd94585c319a11\nparent 4b65a86ebace8600c8e269e8bfe3365cdc460e68\nauthor Philipp Hansch <dev@phansch.net> 1564081433 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1564081433 +0200\n\nlibrustc_errors: Support ui-testing flag in annotate-snippet emitter\n\nThis adds support for the `-Z ui-testing` flag to the new\nannotate-snippet diagnostic emitter.\n\nThe support for the flag was added to `annotate-snippet-rs` in these PRs:\n\n* https://github.com/rust-lang/annotate-snippets-rs/pull/3\n* https://github.com/rust-lang/annotate-snippets-rs/pull/5\n\nCloses #61811\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "html_url": "https://github.com/rust-lang/rust/commit/dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b65a86ebace8600c8e269e8bfe3365cdc460e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b65a86ebace8600c8e269e8bfe3365cdc460e68", "html_url": "https://github.com/rust-lang/rust/commit/4b65a86ebace8600c8e269e8bfe3365cdc460e68"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "ec26f11c4e5b223235d02ac77921970dbd49276d", "filename": "Cargo.lock", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "patch": "@@ -65,6 +65,11 @@ dependencies = [\n  \"ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"annotate-snippets\"\n+version = \"0.6.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"ansi_term\"\n version = \"0.11.0\"\n@@ -3073,7 +3078,7 @@ dependencies = [\n name = \"rustc_errors\"\n version = \"0.0.0\"\n dependencies = [\n- \"annotate-snippets 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"annotate-snippets 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_data_structures 0.0.0\",\n@@ -4492,6 +4497,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum ammonia 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a8b93ecb80665873703bf3b0a77f369c96b183d8e0afaf30a3ff5ff07dfc6409\"\n \"checksum ammonia 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c799ecf1ad77acb48b643e2f45b12d60ee41576287fc575031aa020de88b8f45\"\n \"checksum annotate-snippets 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e8bcdcd5b291ce85a78f2b9d082a8de9676c12b1840d386d67bc5eea6f9d2b4e\"\n+\"checksum annotate-snippets 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c7021ce4924a3f25f802b2cccd1af585e39ea1a363a1aa2e72afe54b67a3a7a7\"\n \"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n \"checksum arc-swap 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1025aeae2b664ca0ea726a89d574fe8f4e77dd712d443236ad1de00379450cf6\"\n \"checksum argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3f67b0b6a86dae6e67ff4ca2b6201396074996379fba2b92ff649126f37cb392\""}, {"sha": "9f83d46fd815b5af41e640c1d44b39f057bc4f34", "filename": "src/librustc_errors/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/src%2Flibrustc_errors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/src%2Flibrustc_errors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2FCargo.toml?ref=dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "patch": "@@ -17,4 +17,4 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n unicode-width = \"0.1.4\"\n atty = \"0.2\"\n termcolor = \"1.0\"\n-annotate-snippets = \"0.5.0\"\n+annotate-snippets = \"0.6.1\""}, {"sha": "96a9b6c5c4f7fab34b5a4aec5ddd267c53515457", "filename": "src/librustc_errors/annotate_snippet_emitter_writer.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs?ref=dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "patch": "@@ -23,7 +23,7 @@ pub struct AnnotateSnippetEmitterWriter {\n     source_map: Option<Lrc<SourceMapperDyn>>,\n     /// If true, hides the longer explanation text\n     short_message: bool,\n-    /// If true, will normalize line numbers with LL to prevent noise in UI test diffs.\n+    /// If true, will normalize line numbers with `LL` to prevent noise in UI test diffs.\n     ui_testing: bool,\n }\n \n@@ -173,10 +173,6 @@ impl AnnotateSnippetEmitterWriter {\n     /// Allows to modify `Self` to enable or disable the `ui_testing` flag.\n     ///\n     /// If this is set to true, line numbers will be normalized as `LL` in the output.\n-    // FIXME(#59346): This method is used via the public interface, but setting the `ui_testing`\n-    // flag currently does not anonymize line numbers. We would have to add the `maybe_anonymized`\n-    // method from `emitter.rs` and implement rust-lang/annotate-snippets-rs#2 in order to\n-    // anonymize line numbers.\n     pub fn ui_testing(mut self, ui_testing: bool) -> Self {\n         self.ui_testing = ui_testing;\n         self\n@@ -202,7 +198,7 @@ impl AnnotateSnippetEmitterWriter {\n         };\n         if let Some(snippet) = converter.to_annotation_snippet() {\n             let dl = DisplayList::from(snippet);\n-            let dlf = DisplayListFormatter::new(true);\n+            let dlf = DisplayListFormatter::new(true, self.ui_testing);\n             // FIXME(#59346): Figure out if we can _always_ print to stderr or not.\n             // `emitter.rs` has the `Destination` enum that lists various possible output\n             // destinations."}, {"sha": "806acf0bed5d1887c435e9aa870cec8b30f8770c", "filename": "src/test/ui/annotate-snippet/missing-type.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dd0f2ac250e0f733cfbff5498c04312c96bb34fa/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.stderr?ref=dd0f2ac250e0f733cfbff5498c04312c96bb34fa", "patch": "@@ -1,6 +1,6 @@\n error[E0412]: cannot find type `Iter` in this scope\n- --> $DIR/missing-type.rs:4:11\n-  |\n-4 |     let x: Iter;\n-  |            ^^^^ not found in this scope\n-  |\n+  --> $DIR/missing-type.rs:4:11\n+   |\n+LL |     let x: Iter;\n+   |            ^^^^ not found in this scope\n+   |"}]}