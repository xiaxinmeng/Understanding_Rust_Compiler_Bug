{"sha": "482dc0c8fa492bd533fb33a20d4cbb5677e73a8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MmRjMGM4ZmE0OTJiZDUzM2ZiMzNhMjBkNGNiYjU2NzdlNzNhOGE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-16T01:04:07Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-16T01:04:21Z"}, "message": "Convert obj item type to ctor type rather than obj type.", "tree": {"sha": "18d9081b2ba7a1f4e0cd01707c08a3855bd2b96b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18d9081b2ba7a1f4e0cd01707c08a3855bd2b96b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/482dc0c8fa492bd533fb33a20d4cbb5677e73a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/482dc0c8fa492bd533fb33a20d4cbb5677e73a8a", "html_url": "https://github.com/rust-lang/rust/commit/482dc0c8fa492bd533fb33a20d4cbb5677e73a8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/482dc0c8fa492bd533fb33a20d4cbb5677e73a8a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e17473de07f2f543d2c4fecd1212b1a716a33559", "url": "https://api.github.com/repos/rust-lang/rust/commits/e17473de07f2f543d2c4fecd1212b1a716a33559", "html_url": "https://github.com/rust-lang/rust/commit/e17473de07f2f543d2c4fecd1212b1a716a33559"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "b58b874fae10ba443f08429730c558128ef0057b", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/482dc0c8fa492bd533fb33a20d4cbb5677e73a8a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482dc0c8fa492bd533fb33a20d4cbb5677e73a8a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=482dc0c8fa492bd533fb33a20d4cbb5677e73a8a", "patch": "@@ -417,6 +417,30 @@ fn collect_item_types(@ast.crate crate) -> tup(@ast.crate, @ty_table) {\n         ret rec(ident=m.node.ident, inputs=inputs, output=output);\n     }\n \n+    fn ty_of_obj(@ty_item_table id_to_ty_item,\n+                 @ty_table item_to_ty,\n+                 &ast._obj obj_info) -> @ty {\n+        auto f = bind ty_of_method(id_to_ty_item, item_to_ty, _);\n+        auto methods =\n+            _vec.map[@ast.method,method](f, obj_info.methods);\n+\n+        auto t_obj = plain_ty(ty_obj(methods));\n+        ret t_obj;\n+    }\n+\n+    fn ty_of_obj_ctor(@ty_item_table id_to_ty_item,\n+                      @ty_table item_to_ty,\n+                      &ast._obj obj_info) -> @ty {\n+        auto t_obj = ty_of_obj(id_to_ty_item, item_to_ty, obj_info);\n+        let vec[arg] t_inputs = vec();\n+        for (ast.obj_field f in obj_info.fields) {\n+            auto t_field = getter(id_to_ty_item, item_to_ty, f.id);\n+            append[arg](t_inputs, rec(mode=ast.alias, ty=t_field));\n+        }\n+        auto t_fn = plain_ty(ty_fn(t_inputs, t_obj));\n+        ret t_fn;\n+    }\n+\n     fn ty_of_item(@ty_item_table id_to_ty_item,\n                   @ty_table item_to_ty,\n                   @ast.item it) -> @ty {\n@@ -444,14 +468,11 @@ fn collect_item_types(@ast.crate crate) -> tup(@ast.crate, @ty_table) {\n \n             case (ast.item_obj(?ident, ?obj_info, _, ?def_id, _)) {\n                 // TODO: handle ty-params\n-\n-                auto f = bind ty_of_method(id_to_ty_item, item_to_ty, _);\n-                auto methods =\n-                    _vec.map[@ast.method,method](f, obj_info.methods);\n-\n-                auto t_obj = plain_ty(ty_obj(methods));\n-                item_to_ty.insert(def_id, t_obj);\n-                ret t_obj;\n+                auto t_ctor = ty_of_obj_ctor(id_to_ty_item,\n+                                             item_to_ty,\n+                                             obj_info);\n+                item_to_ty.insert(def_id, t_ctor);\n+                ret t_ctor;\n             }\n \n             case (ast.item_ty(?ident, ?ty, _, ?def_id, _)) {"}]}