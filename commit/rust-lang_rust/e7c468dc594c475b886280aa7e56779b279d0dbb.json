{"sha": "e7c468dc594c475b886280aa7e56779b279d0dbb", "node_id": "C_kwDOAAsO6NoAKGU3YzQ2OGRjNTk0YzQ3NWI4ODYyODBhYTdlNTY3NzliMjc5ZDBkYmI", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-05-20T18:48:29Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-05-26T19:28:07Z"}, "message": "Document the current aliasing rules for `Box<T>`.\n\nCurrently, `Box<T>` gets `noalias`, meaning it has\nthe same rules as `&mut T`. This is\nsparsely documented, even though it can have quite\na big impact on unsafe code using box. Therefore,\nthese rules are documented here, with a big warning\nthat they are not normative and subject to change,\nsince we have not yet committed to an aliasing model\nand the state of `Box<T>` is especially uncertain.", "tree": {"sha": "2518e1c879a543c48ba3dbd05eb4df219dc57599", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2518e1c879a543c48ba3dbd05eb4df219dc57599"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7c468dc594c475b886280aa7e56779b279d0dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c468dc594c475b886280aa7e56779b279d0dbb", "html_url": "https://github.com/rust-lang/rust/commit/e7c468dc594c475b886280aa7e56779b279d0dbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7c468dc594c475b886280aa7e56779b279d0dbb/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1851f0802e148bb7fa0bfd7dabcb7397bf371b0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1851f0802e148bb7fa0bfd7dabcb7397bf371b0b", "html_url": "https://github.com/rust-lang/rust/commit/1851f0802e148bb7fa0bfd7dabcb7397bf371b0b"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "9818cb352ca3027d0ebb97ba653a4461d8da52f8", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7c468dc594c475b886280aa7e56779b279d0dbb/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7c468dc594c475b886280aa7e56779b279d0dbb/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=e7c468dc594c475b886280aa7e56779b279d0dbb", "patch": "@@ -122,7 +122,21 @@\n //! definition is just using `T*` can lead to undefined behavior, as\n //! described in [rust-lang/unsafe-code-guidelines#198][ucg#198].\n //!\n+//! # Considerations for unsafe code\n+//!\n+//! **Warning: This section is not normative and is subject to change, possibly\n+//! being relaxed in the future! It is a simplified summary of the rules\n+//! currently implemented in the compiler.**\n+//!\n+//! The aliasing rules for `Box<T>` are the same as for `&mut T`. `Box<T>`\n+//! asserts uniqeness over its content. Using raw pointers derived from a box\n+//! after that box has been mutated through, moved or borrowed as `&mut T`\n+//! is not allowed. For more guidance on working with box from unsafe code, see\n+//! [rust-lang/unsafe-code-guidelines#326][ucg#326].\n+//!\n+//!\n //! [ucg#198]: https://github.com/rust-lang/unsafe-code-guidelines/issues/198\n+//! [ucg#326]: https://github.com/rust-lang/unsafe-code-guidelines/issues/326\n //! [dereferencing]: core::ops::Deref\n //! [`Box::<T>::from_raw(value)`]: Box::from_raw\n //! [`Global`]: crate::alloc::Global"}]}