{"sha": "707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "node_id": "C_kwDOAAsO6NoAKDcwN2QyZWJiNWJlMDUxMjI3MWVlN2MyMDM5ZDI5ZDZmMmMwZTJmMGU", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-21T16:59:02Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-22T19:21:26Z"}, "message": "Use revisions for NLL (consistently) in higher-ranked-trait-bounds", "tree": {"sha": "4338fee20fe647cae6f413d4e828479ec8bd53fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4338fee20fe647cae6f413d4e828479ec8bd53fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "html_url": "https://github.com/rust-lang/rust/commit/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc435ee762b0f46dba84e67798c8a2f0ab394091", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc435ee762b0f46dba84e67798c8a2f0ab394091", "html_url": "https://github.com/rust-lang/rust/commit/dc435ee762b0f46dba84e67798c8a2f0ab394091"}], "stats": {"total": 76, "additions": 49, "deletions": 27}, "files": [{"sha": "ec576ee529a4d6d2496f635bcbe47beab3468b1a", "filename": "src/test/ui/higher-rank-trait-bounds/issue-59311.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.base.stderr?ref=707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "patch": "@@ -1,11 +1,11 @@\n error[E0477]: the type `&'a V` does not fulfill the required lifetime\n-  --> $DIR/issue-59311.rs:17:5\n+  --> $DIR/issue-59311.rs:21:5\n    |\n LL |     v.t(|| {});\n    |     ^^^^^^^^^^\n    |\n note: type must satisfy the static lifetime as required by this binding\n-  --> $DIR/issue-59311.rs:15:24\n+  --> $DIR/issue-59311.rs:19:24\n    |\n LL |     for<'a> &'a V: T + 'static,\n    |                        ^^^^^^^", "previous_filename": "src/test/ui/higher-rank-trait-bounds/issue-59311.stderr"}, {"sha": "7f98cefdf019fa46efdab4b15e8676eb4c9e3431", "filename": "src/test/ui/higher-rank-trait-bounds/issue-59311.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.nll.stderr?ref=707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "patch": "@@ -1,13 +1,13 @@\n error: higher-ranked lifetime error\n-  --> $DIR/issue-59311.rs:17:5\n+  --> $DIR/issue-59311.rs:21:5\n    |\n LL |     v.t(|| {});\n    |     ^^^^^^^^^^\n    |\n-   = note: could not prove [closure@$DIR/issue-59311.rs:17:9: 17:14] well-formed\n+   = note: could not prove [closure@$DIR/issue-59311.rs:21:9: 21:14] well-formed\n \n error: higher-ranked lifetime error\n-  --> $DIR/issue-59311.rs:17:9\n+  --> $DIR/issue-59311.rs:21:9\n    |\n LL |     v.t(|| {});\n    |         ^^^^^"}, {"sha": "a63c5754f8f11c7d72a57b3dfda5fcf00afffb9d", "filename": "src/test/ui/higher-rank-trait-bounds/issue-59311.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.rs", "raw_url": "https://github.com/rust-lang/rust/raw/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-59311.rs?ref=707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "patch": "@@ -6,6 +6,10 @@\n // an error, but the regression test is here to ensure\n // that it does not ICE. See discussion on #74889 for details.\n \n+// revisions: base nll\n+// ignore-compare-mode-nll\n+//[nll] compile-flags: -Z borrowck=mir\n+\n pub trait T {\n     fn t<F: Fn()>(&self, _: F) {}\n }\n@@ -14,7 +18,10 @@ pub fn crash<V>(v: &V)\n where\n     for<'a> &'a V: T + 'static,\n {\n-    v.t(|| {}); //~ ERROR: `&'a V` does not fulfill the required lifetime\n+    v.t(|| {});\n+    //[base]~^ ERROR: `&'a V` does not fulfill the required lifetime\n+    //[nll]~^^ ERROR: higher-ranked lifetime error\n+    //[nll]~| ERROR: higher-ranked lifetime error\n }\n \n fn main() {}"}, {"sha": "c24afdd418bf9172836271badcdddbe334efd8b3", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-71955.base.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.base.stderr?ref=707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "patch": "@@ -0,0 +1,20 @@\n+error: implementation of `Parser` is not general enough\n+  --> $DIR/issue-71955.rs:49:5\n+   |\n+LL |     foo(bar, \"string\", |s| s.len() == 5);\n+   |     ^^^ implementation of `Parser` is not general enough\n+   |\n+   = note: `for<'a> fn(&'a str) -> (&'a str, &'a str) {bar}` must implement `Parser<'0>`, for any lifetime `'0`...\n+   = note: ...but it actually implements `Parser<'1>`, for some specific lifetime `'1`\n+\n+error: implementation of `Parser` is not general enough\n+  --> $DIR/issue-71955.rs:53:5\n+   |\n+LL |     foo(baz, \"string\", |s| s.0.len() == 5);\n+   |     ^^^ implementation of `Parser` is not general enough\n+   |\n+   = note: `for<'a> fn(&'a str) -> (&'a str, Wrapper<'a>) {baz}` must implement `Parser<'0>`, for any lifetime `'0`...\n+   = note: ...but it actually implements `Parser<'1>`, for some specific lifetime `'1`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "9d3cd4dee531dd7f471e95ccc1be59955c4a5391", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-71955.nll.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.nll.stderr?ref=707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "patch": "@@ -1,75 +1,75 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-71955.rs:54:5\n+  --> $DIR/issue-71955.rs:49:5\n    |\n LL |     foo(bar, \"string\", |s| s.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n    = note: expected type `for<'r, 's> FnOnce<(&'r &'s str,)>`\n               found type `for<'r> FnOnce<(&'r &str,)>`\n note: this closure does not fulfill the lifetime requirements\n-  --> $DIR/issue-71955.rs:54:24\n+  --> $DIR/issue-71955.rs:49:24\n    |\n LL |     foo(bar, \"string\", |s| s.len() == 5);\n    |                        ^^^^^^^^^^^^^^^^\n note: the lifetime requirement is introduced here\n-  --> $DIR/issue-71955.rs:34:9\n+  --> $DIR/issue-71955.rs:29:9\n    |\n LL |     F2: FnOnce(&<F1 as Parser>::Output) -> bool\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-71955.rs:54:5\n+  --> $DIR/issue-71955.rs:49:5\n    |\n LL |     foo(bar, \"string\", |s| s.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n    = note: expected type `FnOnce<(&&str,)>`\n               found type `for<'r> FnOnce<(&'r &str,)>`\n note: this closure does not fulfill the lifetime requirements\n-  --> $DIR/issue-71955.rs:54:24\n+  --> $DIR/issue-71955.rs:49:24\n    |\n LL |     foo(bar, \"string\", |s| s.len() == 5);\n    |                        ^^^^^^^^^^^^^^^^\n note: the lifetime requirement is introduced here\n-  --> $DIR/issue-71955.rs:34:44\n+  --> $DIR/issue-71955.rs:29:44\n    |\n LL |     F2: FnOnce(&<F1 as Parser>::Output) -> bool\n    |                                            ^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-71955.rs:58:5\n+  --> $DIR/issue-71955.rs:53:5\n    |\n LL |     foo(baz, \"string\", |s| s.0.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n    = note: expected type `for<'r, 's> FnOnce<(&'r Wrapper<'s>,)>`\n               found type `for<'r> FnOnce<(&'r Wrapper<'_>,)>`\n note: this closure does not fulfill the lifetime requirements\n-  --> $DIR/issue-71955.rs:58:24\n+  --> $DIR/issue-71955.rs:53:24\n    |\n LL |     foo(baz, \"string\", |s| s.0.len() == 5);\n    |                        ^^^^^^^^^^^^^^^^^^\n note: the lifetime requirement is introduced here\n-  --> $DIR/issue-71955.rs:34:9\n+  --> $DIR/issue-71955.rs:29:9\n    |\n LL |     F2: FnOnce(&<F1 as Parser>::Output) -> bool\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-71955.rs:58:5\n+  --> $DIR/issue-71955.rs:53:5\n    |\n LL |     foo(baz, \"string\", |s| s.0.len() == 5);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n    |\n    = note: expected type `FnOnce<(&Wrapper<'_>,)>`\n               found type `for<'r> FnOnce<(&'r Wrapper<'_>,)>`\n note: this closure does not fulfill the lifetime requirements\n-  --> $DIR/issue-71955.rs:58:24\n+  --> $DIR/issue-71955.rs:53:24\n    |\n LL |     foo(baz, \"string\", |s| s.0.len() == 5);\n    |                        ^^^^^^^^^^^^^^^^^^\n note: the lifetime requirement is introduced here\n-  --> $DIR/issue-71955.rs:34:44\n+  --> $DIR/issue-71955.rs:29:44\n    |\n LL |     F2: FnOnce(&<F1 as Parser>::Output) -> bool\n    |                                            ^^^^"}, {"sha": "8d283afd09d643dbc23f881396cdbbe4cd5eddeb", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-71955.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.rs", "raw_url": "https://github.com/rust-lang/rust/raw/707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-71955.rs?ref=707d2ebb5be0512271ee7c2039d29d6f2c0e2f0e", "patch": "@@ -1,13 +1,8 @@\n // ignore-compare-mode-nll\n-// revisions: migrate nll\n+// revisions: base nll\n // [nll]compile-flags: -Zborrowck=mir\n-// check-fail\n-\n-// Since we are testing nll (and migration) explicitly as a separate\n-// revisions, don't worry about the --compare-mode=nll on this test.\n-\n-// ignore-compare-mode-nll\n \n+// check-fail\n #![feature(rustc_attrs)]\n \n trait Parser<'s> {\n@@ -52,11 +47,11 @@ fn main() {\n     }\n \n     foo(bar, \"string\", |s| s.len() == 5);\n-    //[migrate]~^ ERROR implementation of `Parser` is not general enough\n+    //[base]~^ ERROR implementation of `Parser` is not general enough\n     //[nll]~^^ ERROR mismatched types\n     //[nll]~| ERROR mismatched types\n     foo(baz, \"string\", |s| s.0.len() == 5);\n-    //[migrate]~^ ERROR implementation of `Parser` is not general enough\n+    //[base]~^ ERROR implementation of `Parser` is not general enough\n     //[nll]~^^ ERROR mismatched types\n     //[nll]~| ERROR mismatched types\n }"}]}