{"sha": "b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0N2UzZDhmZTRkYzZjMjIxNTdlOWQ0NThhM2Y2MTlhMzg2MGI4Zjg=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-09-28T19:04:06Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-11-07T13:51:17Z"}, "message": "Stabilize --extern flag without a path.", "tree": {"sha": "6a27a95fadd0899e5d4970ac81d02557e7930728", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a27a95fadd0899e5d4970ac81d02557e7930728"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "html_url": "https://github.com/rust-lang/rust/commit/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f8aadd746ebc929a752e5ffb133936ee75c52f", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f8aadd746ebc929a752e5ffb133936ee75c52f", "html_url": "https://github.com/rust-lang/rust/commit/50f8aadd746ebc929a752e5ffb133936ee75c52f"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "5887a0869e68c0e51d2422e9e1a6e71662d7cc9e", "filename": "src/doc/rustc/src/command-line-arguments.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md?ref=b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "patch": "@@ -264,7 +264,12 @@ This flag, when combined with other flags, makes them produce extra output.\n \n This flag allows you to pass the name and location of an external crate that\n will be linked into the crate you are building. This flag may be specified\n-multiple times. The format of the value should be `CRATENAME=PATH`.\n+multiple times. This flag takes an argument with either of the following\n+formats:\n+\n+* `CRATENAME=PATH` \u2014\u00a0Indicates the given crate is found at the given path.\n+* `CRATENAME` \u2014\u00a0Indicates the given crate may be found in the search path,\n+  such as within the sysroot or via the `-L` flag.\n \n <a id=\"option-sysroot\"></a>\n ## `--sysroot`: Override the system root"}, {"sha": "1740d8fe967511beaa5b9349ede44716dbdfbbf7", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "patch": "@@ -2392,13 +2392,6 @@ fn parse_externs(\n         let name = parts.next().unwrap_or_else(||\n             early_error(error_format, \"--extern value must not be empty\"));\n         let location = parts.next().map(|s| s.to_string());\n-        if location.is_none() && !is_unstable_enabled {\n-            early_error(\n-                error_format,\n-                \"the `-Z unstable-options` flag must also be passed to \\\n-                 enable `--extern crate_name` without `=path`\",\n-            );\n-        };\n \n         let entry = externs\n             .entry(name.to_owned())"}, {"sha": "255d5f9f35dbf02941b7bf48f518c6bfecbab2ee", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "patch": "@@ -615,10 +615,6 @@ fn parse_externs(matches: &getopts::Matches) -> Result<Externs, String> {\n         let mut parts = arg.splitn(2, '=');\n         let name = parts.next().ok_or(\"--extern value must not be empty\".to_string())?;\n         let location = parts.next().map(|s| s.to_string());\n-        if location.is_none() && !nightly_options::is_unstable_enabled(matches) {\n-            return Err(\"the `-Z unstable-options` flag must also be passed to \\\n-                        enable `--extern crate_name` without `=path`\".to_string());\n-        }\n         let name = name.to_string();\n         // For Rustdoc purposes, we can treat all externs as public\n         externs.entry(name)"}, {"sha": "7f54d6ea3bc6cd8eab16ec9aa9633ab00a2000e6", "filename": "src/test/run-make-fulldeps/extern-flag-fun/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Ftest%2Frun-make-fulldeps%2Fextern-flag-fun%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Ftest%2Frun-make-fulldeps%2Fextern-flag-fun%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fextern-flag-fun%2FMakefile?ref=b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "patch": "@@ -4,7 +4,6 @@ all:\n \t$(RUSTC) bar.rs --crate-type=rlib\n \t$(RUSTC) bar.rs --crate-type=rlib -C extra-filename=-a\n \t$(RUSTC) bar-alt.rs --crate-type=rlib\n-\t$(RUSTC) foo.rs --extern hello && exit 1 || exit 0\n \t$(RUSTC) foo.rs --extern bar=no-exist && exit 1 || exit 0\n \t$(RUSTC) foo.rs --extern bar=foo.rs && exit 1 || exit 0\n \t$(RUSTC) foo.rs \\"}, {"sha": "36288c4b870e7b8b0f35dcdc9c7adda78e38442e", "filename": "src/test/run-make-fulldeps/save-analysis-rfc2126/Makefile", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-rfc2126%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-rfc2126%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-rfc2126%2FMakefile?ref=b47e3d8fe4dc6c22157e9d458a3f619a3860b8f8", "patch": "@@ -1,8 +1,7 @@\n -include ../tools.mk\n \n all: extern_absolute_paths.rs krate2\n-\t$(RUSTC) extern_absolute_paths.rs -Zsave-analysis --edition=2018 \\\n-\t\t-Z unstable-options --extern krate2\n+\t$(RUSTC) extern_absolute_paths.rs -Zsave-analysis --edition=2018 --extern krate2\n \tcat $(TMPDIR)/save-analysis/extern_absolute_paths.json | \"$(PYTHON)\" validate_json.py\n \n krate2: krate2.rs"}]}