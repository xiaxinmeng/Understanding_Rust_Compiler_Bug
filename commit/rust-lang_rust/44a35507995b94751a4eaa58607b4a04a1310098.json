{"sha": "44a35507995b94751a4eaa58607b4a04a1310098", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YTM1NTA3OTk1Yjk0NzUxYTRlYWE1ODYwN2I0YTA0YTEzMTAwOTg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-11T14:59:42Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-11T14:59:42Z"}, "message": "Cleanup", "tree": {"sha": "c853924b9871178c32922c8b15baee49fe9ec179", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c853924b9871178c32922c8b15baee49fe9ec179"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a35507995b94751a4eaa58607b4a04a1310098", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a35507995b94751a4eaa58607b4a04a1310098", "html_url": "https://github.com/rust-lang/rust/commit/44a35507995b94751a4eaa58607b4a04a1310098", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a35507995b94751a4eaa58607b4a04a1310098/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07bb89a02d37e2158023ebf4e23799e54c7c4f31", "url": "https://api.github.com/repos/rust-lang/rust/commits/07bb89a02d37e2158023ebf4e23799e54c7c4f31", "html_url": "https://github.com/rust-lang/rust/commit/07bb89a02d37e2158023ebf4e23799e54c7c4f31"}], "stats": {"total": 47, "additions": 1, "deletions": 46}, "files": [{"sha": "567b2f04d2a070f5ce78745202e7128aad967348", "filename": "ar_test.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/07bb89a02d37e2158023ebf4e23799e54c7c4f31/ar_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07bb89a02d37e2158023ebf4e23799e54c7c4f31/ar_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ar_test.rs?ref=07bb89a02d37e2158023ebf4e23799e54c7c4f31", "patch": "@@ -1,45 +0,0 @@\n-//! ```cargo\n-//! [dependencies]\n-//! ar = \"0.6.2\"\n-//! ```\n-\n-use std::io::Read;\n-\n-// 64 gives Invalid file size field in entry header\n-// 32 gives unexpected EOF in the middle of archive entry header\n-const METADATA_LEN: usize = 64;\n-\n-fn main() {\n-    let mut builder = ar::Builder::new(std::fs::File::create(\"test.a\").expect(\"create\"));\n-\n-    // Remove this append and there is no problem.\n-    let header = ar::Header::new(b\"core-fc675.rcgu.o\".to_vec(), 0);\n-    // Remove any of the characters in the filename and ! from will show up in the error message.\n-    // Making it shorter than 17 chars will fix the problem though.\n-\n-    builder.append(&header, &mut (&[] as &[u8])).expect(\"add rcgu\");\n-\n-    let mut buf: Vec<u8> = vec!['!' as u8; 28];\n-    buf.extend(b\"hello worl\");\n-    buf.extend(&['*' as u8; 26] as &[u8]);\n-    assert!(buf.len() >= METADATA_LEN);\n-\n-    let header = ar::Header::new(b\"rust.metadata.bin\".to_vec(), METADATA_LEN as u64);\n-    builder.append(&header, &mut (&buf[0..METADATA_LEN])).expect(\"add meta\");\n-\n-    std::mem::drop(builder);\n-\n-    // Remove this ranlib invocation and there is no problem.\n-    /*assert!(\n-        std::process::Command::new(\"ranlib\")\n-            .arg(\"test.a\")\n-            .status()\n-            .expect(\"Couldn't run ranlib\")\n-            .success()\n-    );*/\n-\n-    let mut archive = ar::Archive::new(std::fs::File::open(\"test.a\").expect(\"open\"));\n-    while let Some(entry) = archive.next_entry() {\n-        entry.unwrap();\n-    }\n-}"}, {"sha": "1dfbf9247546c0e27988aaac4518d7cd3a515fb4", "filename": "test.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a35507995b94751a4eaa58607b4a04a1310098/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/44a35507995b94751a4eaa58607b4a04a1310098/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=44a35507995b94751a4eaa58607b4a04a1310098", "patch": "@@ -5,7 +5,7 @@ rm -r target/out || true\n mkdir -p target/out/clif\n \n echo \"[BUILD] mini_core\"\n-$RUSTC example/mini_core.rs --crate-name mini_core --crate-type dylib -Csave-temps\n+$RUSTC example/mini_core.rs --crate-name mini_core --crate-type dylib\n \n echo \"[BUILD] example\"\n $RUSTC example/example.rs --crate-type lib"}]}