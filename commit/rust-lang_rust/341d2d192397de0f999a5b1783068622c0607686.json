{"sha": "341d2d192397de0f999a5b1783068622c0607686", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MWQyZDE5MjM5N2RlMGY5OTlhNWIxNzgzMDY4NjIyYzA2MDc2ODY=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-13T02:53:51Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-15T23:31:00Z"}, "message": "Add redox target", "tree": {"sha": "0c60c1b915642399ab575655aebebd3b73811ee8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c60c1b915642399ab575655aebebd3b73811ee8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/341d2d192397de0f999a5b1783068622c0607686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/341d2d192397de0f999a5b1783068622c0607686", "html_url": "https://github.com/rust-lang/rust/commit/341d2d192397de0f999a5b1783068622c0607686", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/341d2d192397de0f999a5b1783068622c0607686/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f02c429ad3e2ad687a222d1daae2e04bb9bb876", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f02c429ad3e2ad687a222d1daae2e04bb9bb876", "html_url": "https://github.com/rust-lang/rust/commit/8f02c429ad3e2ad687a222d1daae2e04bb9bb876"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "4dec2ab7d5460fdf470e5e4dc9e5c5af9870378e", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/341d2d192397de0f999a5b1783068622c0607686/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/341d2d192397de0f999a5b1783068622c0607686/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=341d2d192397de0f999a5b1783068622c0607686", "patch": "@@ -69,6 +69,7 @@ mod windows_base;\n mod windows_msvc_base;\n mod thumb_base;\n mod fuchsia_base;\n+mod redox_base;\n \n pub type TargetResult = Result<Target, String>;\n \n@@ -184,6 +185,8 @@ supported_targets! {\n     (\"aarch64-unknown-fuchsia\", aarch64_unknown_fuchsia),\n     (\"x86_64-unknown-fuchsia\", x86_64_unknown_fuchsia),\n \n+    (\"x86_64-unknown-redox\", x86_64_unknown_redox),\n+\n     (\"i386-apple-ios\", i386_apple_ios),\n     (\"x86_64-apple-ios\", x86_64_apple_ios),\n     (\"aarch64-apple-ios\", aarch64_apple_ios),"}, {"sha": "cd962e4c2163fef8a02fee872516551df300149f", "filename": "src/librustc_back/target/redox_base.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/341d2d192397de0f999a5b1783068622c0607686/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/341d2d192397de0f999a5b1783068622c0607686/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs?ref=341d2d192397de0f999a5b1783068622c0607686", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::TargetOptions;\n+use std::default::Default;\n+\n+pub fn opts() -> TargetOptions {\n+    TargetOptions {\n+        pre_link_args: vec![\n+            // We want to be able to strip as much executable code as possible\n+            // from the linker command line, and this flag indicates to the\n+            // linker that it can avoid linking in dynamic libraries that don't\n+            // actually satisfy any symbols up to that point (as with many other\n+            // resolutions the linker does). This option only applies to all\n+            // following libraries so we're sure to pass it as one of the first\n+            // arguments.\n+            \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n+\n+            // Do not link libc\n+            \"-nostdlib\".to_string(),\n+\n+            // Static link\n+            \"-static\".to_string()\n+        ],\n+        executables: true,\n+        relocation_modal: \"static\".to_string(),\n+        disable_redzone: true,\n+        eliminate_frame_pointer: false,\n+        linker_is_gnu: true,\n+        no_compiler_rt: true,\n+        no_default_libraries: true,\n+        has_elf_tls: true,\n+        .. Default::default()\n+    }\n+}"}, {"sha": "cecac06b235275a6b18162e7b532c9168ff983c3", "filename": "src/librustc_back/target/x86_64_unknown_redox.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/341d2d192397de0f999a5b1783068622c0607686/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_redox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/341d2d192397de0f999a5b1783068622c0607686/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_redox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_redox.rs?ref=341d2d192397de0f999a5b1783068622c0607686", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::{Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::redox_base::opts();\n+    base.cpu = \"x86-64\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.pre_link_args.push(\"-m64\".to_string());\n+\n+    Ok(Target {\n+        llvm_target: \"x86_64-unknown-redox\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        data_layout: \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\".to_string(),\n+        arch: \"x86_64\".to_string(),\n+        target_os: \"redox\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        options: base,\n+    })\n+}"}]}