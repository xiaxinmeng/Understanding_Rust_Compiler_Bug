{"sha": "1c46ee34beb7149b8a8b167340acf9fb7a12cd2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNDZlZTM0YmViNzE0OWI4YThiMTY3MzQwYWNmOWZiN2ExMmNkMmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T04:52:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T04:59:59Z"}, "message": "rustc: Add llalign_of_min", "tree": {"sha": "9ad14da8d3bbb788ccdcd2e765e8261328dc74c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ad14da8d3bbb788ccdcd2e765e8261328dc74c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e", "html_url": "https://github.com/rust-lang/rust/commit/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43751e45d90ed3a2f5a9d0208d50125d88af6dfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/43751e45d90ed3a2f5a9d0208d50125d88af6dfc", "html_url": "https://github.com/rust-lang/rust/commit/43751e45d90ed3a2f5a9d0208d50125d88af6dfc"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "bc694b3b1e282d0aa1a71e19ef37c0946aa29114", "filename": "src/rustc/middle/trans/shape.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c46ee34beb7149b8a8b167340acf9fb7a12cd2e/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs?ref=1c46ee34beb7149b8a8b167340acf9fb7a12cd2e", "patch": "@@ -637,6 +637,12 @@ fn llalign_of_pref(cx: @crate_ctxt, t: TypeRef) -> uint {\n     ret llvm::LLVMPreferredAlignmentOfType(cx.td.lltd, t) as uint;\n }\n \n+// Returns the minimum alignment of a type required by the plattform.\n+// This is the alignment that will be used for struct fields.\n+fn llalign_of_min(cx: @crate_ctxt, t: TypeRef) -> uint {\n+    ret llvm::LLVMABIAlignmentOfType(cx.td.lltd, t) as uint;\n+}\n+\n fn llsize_of(cx: @crate_ctxt, t: TypeRef) -> ValueRef {\n     ret llvm::LLVMConstIntCast(lib::llvm::llvm::LLVMSizeOf(t), cx.int_type,\n                                False);"}]}