{"sha": "39f5ebcd7401b050ca948a28db9bf105b9ca6a88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZjVlYmNkNzQwMWIwNTBjYTk0OGEyOGRiOWJmMTA1YjljYTZhODg=", "commit": {"author": {"name": "aticu", "email": "15schnic@gmail.com", "date": "2020-08-26T23:16:18Z"}, "committer": {"name": "aticu", "email": "15schnic@gmail.com", "date": "2020-08-26T23:16:18Z"}, "message": "Fix typo in `std::hint::black_box` docs", "tree": {"sha": "80f442c2c8cbdd515db4360a0dbc4ddd5333f7f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80f442c2c8cbdd515db4360a0dbc4ddd5333f7f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39f5ebcd7401b050ca948a28db9bf105b9ca6a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39f5ebcd7401b050ca948a28db9bf105b9ca6a88", "html_url": "https://github.com/rust-lang/rust/commit/39f5ebcd7401b050ca948a28db9bf105b9ca6a88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39f5ebcd7401b050ca948a28db9bf105b9ca6a88/comments", "author": {"login": "aticu", "id": 16419880, "node_id": "MDQ6VXNlcjE2NDE5ODgw", "avatar_url": "https://avatars.githubusercontent.com/u/16419880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aticu", "html_url": "https://github.com/aticu", "followers_url": "https://api.github.com/users/aticu/followers", "following_url": "https://api.github.com/users/aticu/following{/other_user}", "gists_url": "https://api.github.com/users/aticu/gists{/gist_id}", "starred_url": "https://api.github.com/users/aticu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aticu/subscriptions", "organizations_url": "https://api.github.com/users/aticu/orgs", "repos_url": "https://api.github.com/users/aticu/repos", "events_url": "https://api.github.com/users/aticu/events{/privacy}", "received_events_url": "https://api.github.com/users/aticu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aticu", "id": 16419880, "node_id": "MDQ6VXNlcjE2NDE5ODgw", "avatar_url": "https://avatars.githubusercontent.com/u/16419880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aticu", "html_url": "https://github.com/aticu", "followers_url": "https://api.github.com/users/aticu/followers", "following_url": "https://api.github.com/users/aticu/following{/other_user}", "gists_url": "https://api.github.com/users/aticu/gists{/gist_id}", "starred_url": "https://api.github.com/users/aticu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aticu/subscriptions", "organizations_url": "https://api.github.com/users/aticu/orgs", "repos_url": "https://api.github.com/users/aticu/repos", "events_url": "https://api.github.com/users/aticu/events{/privacy}", "received_events_url": "https://api.github.com/users/aticu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d8a3b9181f41d3af9b9f016c5d73b2553e344bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8a3b9181f41d3af9b9f016c5d73b2553e344bf", "html_url": "https://github.com/rust-lang/rust/commit/2d8a3b9181f41d3af9b9f016c5d73b2553e344bf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d40a3802867624dd8d3dcd425ff2eaf3662f7956", "filename": "library/core/src/hint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39f5ebcd7401b050ca948a28db9bf105b9ca6a88/library%2Fcore%2Fsrc%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f5ebcd7401b050ca948a28db9bf105b9ca6a88/library%2Fcore%2Fsrc%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhint.rs?ref=39f5ebcd7401b050ca948a28db9bf105b9ca6a88", "patch": "@@ -101,7 +101,7 @@ pub fn spin_loop() {\n /// [`std::convert::identity`]: https://doc.rust-lang.org/core/convert/fn.identity.html\n ///\n /// Unlike [`std::convert::identity`], a Rust compiler is encouraged to assume that `black_box` can\n-/// use `x` in any possible valid way that Rust code is allowed to without introducing undefined\n+/// use `dummy` in any possible valid way that Rust code is allowed to without introducing undefined\n /// behavior in the calling code. This property makes `black_box` useful for writing code in which\n /// certain optimizations are not desired, such as benchmarks.\n ///"}]}