{"sha": "f1537da0e8e87c66ed4934b6ea245736a6bb63b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNTM3ZGEwZThlODdjNjZlZDQ5MzRiNmVhMjQ1NzM2YTZiYjYzYjc=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-24T15:16:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-24T15:16:33Z"}, "message": "Rollup merge of #43366 - leshow:bufreader-docs, r=aturon\n\nFix docs: BufReader/File doesn't need to be mut\n\nNeither `BufReader` nor `File` need to be declared `mut` for most of these examples. The cookbook example using `BufReader` doesn't declare them as `mut` either (https://brson.github.io/rust-cookbook/basics.html#ex-std-read-lines).", "tree": {"sha": "178a4cccc5da3d8ec2100500ad0b92a054b27a7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/178a4cccc5da3d8ec2100500ad0b92a054b27a7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1537da0e8e87c66ed4934b6ea245736a6bb63b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1537da0e8e87c66ed4934b6ea245736a6bb63b7", "html_url": "https://github.com/rust-lang/rust/commit/f1537da0e8e87c66ed4934b6ea245736a6bb63b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1537da0e8e87c66ed4934b6ea245736a6bb63b7/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e72b41d0c5a72640646ae8743821d57fc873820", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e72b41d0c5a72640646ae8743821d57fc873820", "html_url": "https://github.com/rust-lang/rust/commit/7e72b41d0c5a72640646ae8743821d57fc873820"}, {"sha": "72e8009185b537083015f43a8e0fd34509ab1938", "url": "https://api.github.com/repos/rust-lang/rust/commits/72e8009185b537083015f43a8e0fd34509ab1938", "html_url": "https://github.com/rust-lang/rust/commit/72e8009185b537083015f43a8e0fd34509ab1938"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d765dd227be695b4cccaa96a466fb5668b0200ed", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f1537da0e8e87c66ed4934b6ea245736a6bb63b7/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1537da0e8e87c66ed4934b6ea245736a6bb63b7/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=f1537da0e8e87c66ed4934b6ea245736a6bb63b7", "patch": "@@ -37,7 +37,7 @@ use memchr;\n /// use std::fs::File;\n ///\n /// # fn foo() -> std::io::Result<()> {\n-/// let mut f = File::open(\"log.txt\")?;\n+/// let f = File::open(\"log.txt\")?;\n /// let mut reader = BufReader::new(f);\n ///\n /// let mut line = String::new();\n@@ -64,8 +64,8 @@ impl<R: Read> BufReader<R> {\n     /// use std::fs::File;\n     ///\n     /// # fn foo() -> std::io::Result<()> {\n-    /// let mut f = File::open(\"log.txt\")?;\n-    /// let mut reader = BufReader::new(f);\n+    /// let f = File::open(\"log.txt\")?;\n+    /// let reader = BufReader::new(f);\n     /// # Ok(())\n     /// # }\n     /// ```\n@@ -85,8 +85,8 @@ impl<R: Read> BufReader<R> {\n     /// use std::fs::File;\n     ///\n     /// # fn foo() -> std::io::Result<()> {\n-    /// let mut f = File::open(\"log.txt\")?;\n-    /// let mut reader = BufReader::with_capacity(10, f);\n+    /// let f = File::open(\"log.txt\")?;\n+    /// let reader = BufReader::with_capacity(10, f);\n     /// # Ok(())\n     /// # }\n     /// ```\n@@ -116,8 +116,8 @@ impl<R: Read> BufReader<R> {\n     /// use std::fs::File;\n     ///\n     /// # fn foo() -> std::io::Result<()> {\n-    /// let mut f1 = File::open(\"log.txt\")?;\n-    /// let mut reader = BufReader::new(f1);\n+    /// let f1 = File::open(\"log.txt\")?;\n+    /// let reader = BufReader::new(f1);\n     ///\n     /// let f2 = reader.get_ref();\n     /// # Ok(())\n@@ -137,7 +137,7 @@ impl<R: Read> BufReader<R> {\n     /// use std::fs::File;\n     ///\n     /// # fn foo() -> std::io::Result<()> {\n-    /// let mut f1 = File::open(\"log.txt\")?;\n+    /// let f1 = File::open(\"log.txt\")?;\n     /// let mut reader = BufReader::new(f1);\n     ///\n     /// let f2 = reader.get_mut();\n@@ -158,8 +158,8 @@ impl<R: Read> BufReader<R> {\n     /// use std::fs::File;\n     ///\n     /// # fn foo() -> std::io::Result<()> {\n-    /// let mut f1 = File::open(\"log.txt\")?;\n-    /// let mut reader = BufReader::new(f1);\n+    /// let f1 = File::open(\"log.txt\")?;\n+    /// let reader = BufReader::new(f1);\n     ///\n     /// let f2 = reader.into_inner();\n     /// # Ok(())"}]}