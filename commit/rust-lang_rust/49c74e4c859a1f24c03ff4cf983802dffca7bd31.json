{"sha": "49c74e4c859a1f24c03ff4cf983802dffca7bd31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5Yzc0ZTRjODU5YTFmMjRjMDNmZjRjZjk4MzgwMmRmZmNhN2JkMzE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-18T21:56:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-18T21:56:40Z"}, "message": "Rollup merge of #57350 - folex:master, r=estebank\n\nBetter error note on unimplemented Index trait for string\n\nfixes #56740\n\nI've tried to compile suggestion from comments in the issue #56740, but unsure of it. So I'm open to advice :)\n\nCurrent output will be like this:\n```rust\nerror[E0277]: the type `str` cannot be indexed by `{integer}`\n  --> $DIR/str-idx.rs:3:17\n   |\nLL |     let c: u8 = s[4]; //~ ERROR the type `str` cannot be indexed by `{integer}`\n   |                 ^^^^ `str` cannot be indexed by `{integer}`\n   |\n   = help: the trait `std::ops::Index<{integer}>` is not implemented for `str`\n   = note: you can use `.chars().nth()` or `.bytes().nth()`\n           see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n```\n\n`x.py test src/test/ui` succeeded and I've also tested output manually by compiling the following code:\n```rust\nfn _f() {\n    let s = std::string::String::from(\"hello\");\n    let _c = s[0];\n\n    let s = std::string::String::from(\"hello\");\n    let mut _c = s[0];\n\n    let s = \"hello\";\n    let _c = s[0];\n\n    let s = \"hello\";\n    let mut _c = &s[0];\n}\n```\n\nNot sure if some docs should be changed too. I will also fix error message in the [Book :: Indexing into Strings](https://github.com/rust-lang/book/blob/db53e2e3cdf77beac853df6f29db4b3b86ea598c/src/ch08-02-strings.md#indexing-into-strings) if that PR will get approved :)", "tree": {"sha": "3353293511d3d6e7d981d7c8df9e5d40cc08abe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3353293511d3d6e7d981d7c8df9e5d40cc08abe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49c74e4c859a1f24c03ff4cf983802dffca7bd31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcQkuYCRBK7hj4Ov3rIwAAdHIIACyklUycrZ+OMv3atMqlIxwF\nuZcso4Jx+IqBTpWZ77jg3YQVvTCGtVPPD9M27L5J5jtGOElg5DRqN5ESEdq+ueDi\nTpoMeSbz+HuUBegqtvHXfHOkg7jaca3rZGAzi/UQQdSfgv14lioJyWx3I3SWxvxA\nKUssqF6tP6/h10o7xQErBofHnzU8DB23os1sC4EzfAqZRkSzNB0s7CVe459mv9+y\nklF36moONPJryPi8e1FUv9Lpg2OenPD+AvbmovXwu67ubRp2RcJoBzSoUrtR30v0\ntoRjT8YV9RVTZ1UU2FJkiQim+7C4H6QxyVCn3GW4F+i2jEITvV8RH6si1fqu7Yw=\n=IqlT\n-----END PGP SIGNATURE-----\n", "payload": "tree 3353293511d3d6e7d981d7c8df9e5d40cc08abe0\nparent 0dd4bfa35616d43bb6b24f209baade9270afdb59\nparent c120199116439827a89a0ac0f24f91f99dbed60f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547848600 +0100\ncommitter GitHub <noreply@github.com> 1547848600 +0100\n\nRollup merge of #57350 - folex:master, r=estebank\n\nBetter error note on unimplemented Index trait for string\n\nfixes #56740\n\nI've tried to compile suggestion from comments in the issue #56740, but unsure of it. So I'm open to advice :)\n\nCurrent output will be like this:\n```rust\nerror[E0277]: the type `str` cannot be indexed by `{integer}`\n  --> $DIR/str-idx.rs:3:17\n   |\nLL |     let c: u8 = s[4]; //~ ERROR the type `str` cannot be indexed by `{integer}`\n   |                 ^^^^ `str` cannot be indexed by `{integer}`\n   |\n   = help: the trait `std::ops::Index<{integer}>` is not implemented for `str`\n   = note: you can use `.chars().nth()` or `.bytes().nth()`\n           see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n```\n\n`x.py test src/test/ui` succeeded and I've also tested output manually by compiling the following code:\n```rust\nfn _f() {\n    let s = std::string::String::from(\"hello\");\n    let _c = s[0];\n\n    let s = std::string::String::from(\"hello\");\n    let mut _c = s[0];\n\n    let s = \"hello\";\n    let _c = s[0];\n\n    let s = \"hello\";\n    let mut _c = &s[0];\n}\n```\n\nNot sure if some docs should be changed too. I will also fix error message in the [Book :: Indexing into Strings](https://github.com/rust-lang/book/blob/db53e2e3cdf77beac853df6f29db4b3b86ea598c/src/ch08-02-strings.md#indexing-into-strings) if that PR will get approved :)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49c74e4c859a1f24c03ff4cf983802dffca7bd31", "html_url": "https://github.com/rust-lang/rust/commit/49c74e4c859a1f24c03ff4cf983802dffca7bd31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49c74e4c859a1f24c03ff4cf983802dffca7bd31/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd4bfa35616d43bb6b24f209baade9270afdb59", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd4bfa35616d43bb6b24f209baade9270afdb59", "html_url": "https://github.com/rust-lang/rust/commit/0dd4bfa35616d43bb6b24f209baade9270afdb59"}, {"sha": "c120199116439827a89a0ac0f24f91f99dbed60f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c120199116439827a89a0ac0f24f91f99dbed60f", "html_url": "https://github.com/rust-lang/rust/commit/c120199116439827a89a0ac0f24f91f99dbed60f"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "6cfa36741d0ca61363d3bdfba0df1233a94a1153", "filename": "src/libcore/ops/index.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/49c74e4c859a1f24c03ff4cf983802dffca7bd31/src%2Flibcore%2Fops%2Findex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c74e4c859a1f24c03ff4cf983802dffca7bd31/src%2Flibcore%2Fops%2Findex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Findex.rs?ref=49c74e4c859a1f24c03ff4cf983802dffca7bd31", "patch": "@@ -51,6 +51,21 @@\n /// ```\n #[lang = \"index\"]\n #[rustc_on_unimplemented(\n+    on(\n+        _Self=\"&str\",\n+        note=\"you can use `.chars().nth()` or `.bytes().nth()`\n+see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\"\n+    ),\n+    on(\n+        _Self=\"str\",\n+        note=\"you can use `.chars().nth()` or `.bytes().nth()`\n+see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\"\n+    ),\n+    on(\n+        _Self=\"std::string::String\",\n+        note=\"you can use `.chars().nth()` or `.bytes().nth()`\n+see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\"\n+    ),\n     message=\"the type `{Self}` cannot be indexed by `{Idx}`\",\n     label=\"`{Self}` cannot be indexed by `{Idx}`\",\n )]\n@@ -141,6 +156,21 @@ pub trait Index<Idx: ?Sized> {\n /// ```\n #[lang = \"index_mut\"]\n #[rustc_on_unimplemented(\n+    on(\n+        _Self=\"&str\",\n+        note=\"you can use `.chars().nth()` or `.bytes().nth()`\n+see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\"\n+    ),\n+    on(\n+        _Self=\"str\",\n+        note=\"you can use `.chars().nth()` or `.bytes().nth()`\n+see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\"\n+    ),\n+    on(\n+        _Self=\"std::string::String\",\n+        note=\"you can use `.chars().nth()` or `.bytes().nth()`\n+see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\"\n+    ),\n     message=\"the type `{Self}` cannot be mutably indexed by `{Idx}`\",\n     label=\"`{Self}` cannot be mutably indexed by `{Idx}`\",\n )]"}, {"sha": "71b1747492329a8ecf060f98e744bb5a0ef8f5c2", "filename": "src/test/ui/str/str-idx.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49c74e4c859a1f24c03ff4cf983802dffca7bd31/src%2Ftest%2Fui%2Fstr%2Fstr-idx.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49c74e4c859a1f24c03ff4cf983802dffca7bd31/src%2Ftest%2Fui%2Fstr%2Fstr-idx.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr%2Fstr-idx.stderr?ref=49c74e4c859a1f24c03ff4cf983802dffca7bd31", "patch": "@@ -5,6 +5,8 @@ LL |     let c: u8 = s[4]; //~ ERROR the type `str` cannot be indexed by `{integ\n    |                 ^^^^ `str` cannot be indexed by `{integer}`\n    |\n    = help: the trait `std::ops::Index<{integer}>` is not implemented for `str`\n+   = note: you can use `.chars().nth()` or `.bytes().nth()`\n+           see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\n \n error: aborting due to previous error\n "}, {"sha": "a1212c5a4fe10c1d7787bf624519515700ffac71", "filename": "src/test/ui/str/str-mut-idx.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49c74e4c859a1f24c03ff4cf983802dffca7bd31/src%2Ftest%2Fui%2Fstr%2Fstr-mut-idx.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49c74e4c859a1f24c03ff4cf983802dffca7bd31/src%2Ftest%2Fui%2Fstr%2Fstr-mut-idx.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr%2Fstr-mut-idx.stderr?ref=49c74e4c859a1f24c03ff4cf983802dffca7bd31", "patch": "@@ -29,6 +29,8 @@ LL |     s[1usize] = bot();\n    |     ^^^^^^^^^ `str` cannot be mutably indexed by `usize`\n    |\n    = help: the trait `std::ops::IndexMut<usize>` is not implemented for `str`\n+   = note: you can use `.chars().nth()` or `.bytes().nth()`\n+           see chapter in The Book <https://doc.rust-lang.org/book/ch08-02-strings.html#indexing-into-strings>\n \n error: aborting due to 3 previous errors\n "}]}