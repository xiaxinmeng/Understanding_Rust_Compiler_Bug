{"sha": "3f3a10fa64278173718b1fb9ee9ae85b14380af0", "node_id": "C_kwDOAAsO6NoAKDNmM2ExMGZhNjQyNzgxNzM3MThiMWZiOWVlOWFlODViMTQzODBhZjA", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-01-13T09:26:27Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-01-15T01:16:55Z"}, "message": "nyahggdshjjghsdfhgsf", "tree": {"sha": "11070ac712314e9a54c414e6a237007e20ec1503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11070ac712314e9a54c414e6a237007e20ec1503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f3a10fa64278173718b1fb9ee9ae85b14380af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f3a10fa64278173718b1fb9ee9ae85b14380af0", "html_url": "https://github.com/rust-lang/rust/commit/3f3a10fa64278173718b1fb9ee9ae85b14380af0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f3a10fa64278173718b1fb9ee9ae85b14380af0/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "408a086f97992f4b035e20303242c527e32b2491", "url": "https://api.github.com/repos/rust-lang/rust/commits/408a086f97992f4b035e20303242c527e32b2491", "html_url": "https://github.com/rust-lang/rust/commit/408a086f97992f4b035e20303242c527e32b2491"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "af7c2c5cb4cff0637d75d190d0d4a14c13f07a29", "filename": "compiler/rustc_middle/src/ty/consts/kind.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3f3a10fa64278173718b1fb9ee9ae85b14380af0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3a10fa64278173718b1fb9ee9ae85b14380af0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs?ref=3f3a10fa64278173718b1fb9ee9ae85b14380af0", "patch": "@@ -21,19 +21,22 @@ pub struct Unevaluated<'tcx, P = Option<Promoted>> {\n }\n \n impl<'tcx> Unevaluated<'tcx> {\n+    #[inline]\n     pub fn shrink(self) -> Unevaluated<'tcx, ()> {\n         debug_assert_eq!(self.promoted, None);\n         Unevaluated { def: self.def, substs: self.substs, promoted: () }\n     }\n }\n \n impl<'tcx> Unevaluated<'tcx, ()> {\n+    #[inline]\n     pub fn expand(self) -> Unevaluated<'tcx> {\n         Unevaluated { def: self.def, substs: self.substs, promoted: None }\n     }\n }\n \n impl<'tcx, P: Default> Unevaluated<'tcx, P> {\n+    #[inline]\n     pub fn new(def: ty::WithOptConstParam<DefId>, substs: SubstsRef<'tcx>) -> Unevaluated<'tcx, P> {\n         Unevaluated { def, substs, promoted: Default::default() }\n     }"}, {"sha": "f6e98f427108f7f380dd0579040acaa986fb2677", "filename": "compiler/rustc_trait_selection/src/traits/wf.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f3a10fa64278173718b1fb9ee9ae85b14380af0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3a10fa64278173718b1fb9ee9ae85b14380af0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs?ref=3f3a10fa64278173718b1fb9ee9ae85b14380af0", "patch": "@@ -442,8 +442,6 @@ impl<'a, 'tcx> WfPredicates<'a, 'tcx> {\n                 GenericArgKind::Const(constant) => {\n                     match constant.val {\n                         ty::ConstKind::Unevaluated(uv) => {\n-                            assert!(uv.promoted.is_none());\n-\n                             let obligations = self.nominal_obligations(uv.def.did, uv.substs);\n                             self.out.extend(obligations);\n "}, {"sha": "5c64312c28f84acf51af18c6afb39b664b52ab3d", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3f3a10fa64278173718b1fb9ee9ae85b14380af0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3a10fa64278173718b1fb9ee9ae85b14380af0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=3f3a10fa64278173718b1fb9ee9ae85b14380af0", "patch": "@@ -491,9 +491,9 @@ pub(super) fn check_opaque_for_inheriting_lifetimes<'tcx>(\n     }\n \n     struct ProhibitOpaqueVisitor<'tcx> {\n+        tcx: TyCtxt<'tcx>,\n         opaque_identity_ty: Ty<'tcx>,\n         generics: &'tcx ty::Generics,\n-        tcx: TyCtxt<'tcx>,\n         selftys: Vec<(Span, Option<String>)>,\n     }\n \n@@ -1471,8 +1471,8 @@ fn opaque_type_cycle_error(tcx: TyCtxt<'_>, def_id: LocalDefId, span: Span) {\n                 .filter_map(|e| typeck_results.node_type_opt(e.hir_id).map(|t| (e.span, t)))\n                 .filter(|(_, ty)| !matches!(ty.kind(), ty::Never))\n             {\n-                struct VisitTypes(Vec<DefId>);\n-                impl<'tcx> ty::fold::TypeVisitor<'tcx> for VisitTypes {\n+                struct OpaqueTypeCollector(Vec<DefId>);\n+                impl<'tcx> ty::fold::TypeVisitor<'tcx> for OpaqueTypeCollector {\n                     fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n                         match *t.kind() {\n                             ty::Opaque(def, _) => {\n@@ -1483,7 +1483,7 @@ fn opaque_type_cycle_error(tcx: TyCtxt<'_>, def_id: LocalDefId, span: Span) {\n                         }\n                     }\n                 }\n-                let mut visitor = VisitTypes(vec![]);\n+                let mut visitor = OpaqueTypeCollector(vec![]);\n                 ty.visit_with(&mut visitor);\n                 for def_id in visitor.0 {\n                     let ty_span = tcx.def_span(def_id);"}, {"sha": "d6e2bb806887deec1e762d2d97035bf91e30226e", "filename": "src/tools/clippy/clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f3a10fa64278173718b1fb9ee9ae85b14380af0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3a10fa64278173718b1fb9ee9ae85b14380af0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fescape.rs?ref=3f3a10fa64278173718b1fb9ee9ae85b14380af0", "patch": "@@ -54,7 +54,7 @@ fn is_non_trait_box(ty: Ty<'_>) -> bool {\n struct EscapeDelegate<'a, 'tcx> {\n     cx: &'a LateContext<'tcx>,\n     set: HirIdSet,\n-    trait_self_ty: Option<Ty<'a>>,\n+    trait_self_ty: Option<Ty<'tcx>>,\n     too_large_for_stack: u64,\n }\n "}, {"sha": "435f3071c80911920fc8fd0c6afa21be938f2a18", "filename": "src/tools/clippy/clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f3a10fa64278173718b1fb9ee9ae85b14380af0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3a10fa64278173718b1fb9ee9ae85b14380af0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=3f3a10fa64278173718b1fb9ee9ae85b14380af0", "patch": "@@ -188,11 +188,10 @@ fn is_value_unfrozen_expr<'tcx>(cx: &LateContext<'tcx>, hir_id: HirId, def_id: D\n \n     let result = cx.tcx.const_eval_resolve(\n         cx.param_env,\n-        ty::Unevaluated {\n-            def: ty::WithOptConstParam::unknown(def_id),\n+        ty::Unevaluated::new(\n+            ty::WithOptConstParam::unknown(def_id),\n             substs,\n-            promoted: None,\n-        },\n+        ),\n         None,\n     );\n     is_value_unfrozen_raw(cx, result, ty)"}, {"sha": "e09a663538ddcfeff5899eae3d0af5155b6a2340", "filename": "src/tools/clippy/clippy_utils/src/consts.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f3a10fa64278173718b1fb9ee9ae85b14380af0/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3a10fa64278173718b1fb9ee9ae85b14380af0/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs?ref=3f3a10fa64278173718b1fb9ee9ae85b14380af0", "patch": "@@ -413,11 +413,10 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n                     .tcx\n                     .const_eval_resolve(\n                         self.param_env,\n-                        ty::Unevaluated {\n-                            def: ty::WithOptConstParam::unknown(def_id),\n+                        ty::Unevaluated::new(\n+                            ty::WithOptConstParam::unknown(def_id),\n                             substs,\n-                            promoted: None,\n-                        },\n+                        ),\n                         None,\n                     )\n                     .ok()"}]}