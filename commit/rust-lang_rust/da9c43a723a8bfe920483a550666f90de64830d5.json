{"sha": "da9c43a723a8bfe920483a550666f90de64830d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhOWM0M2E3MjNhOGJmZTkyMDQ4M2E1NTA2NjZmOTBkZTY0ODMwZDU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas@schievink.net", "date": "2016-04-03T20:58:44Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas@schievink.net", "date": "2016-04-03T20:58:44Z"}, "message": "Autoderef when suggesting to call `(self.field)`\n\nFixes #32128", "tree": {"sha": "63c937b897f979a5ad912ccc4c22e72ac10c0917", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63c937b897f979a5ad912ccc4c22e72ac10c0917"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da9c43a723a8bfe920483a550666f90de64830d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da9c43a723a8bfe920483a550666f90de64830d5", "html_url": "https://github.com/rust-lang/rust/commit/da9c43a723a8bfe920483a550666f90de64830d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da9c43a723a8bfe920483a550666f90de64830d5/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0b8c438203ada8768f2f8ea7c750131744f97ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0b8c438203ada8768f2f8ea7c750131744f97ef", "html_url": "https://github.com/rust-lang/rust/commit/c0b8c438203ada8768f2f8ea7c750131744f97ef"}], "stats": {"total": 79, "additions": 61, "deletions": 18}, "files": [{"sha": "5b46880d5cfe41163cac86fce54fbb784523d6ea", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 36, "deletions": 18, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/da9c43a723a8bfe920483a550666f90de64830d5/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da9c43a723a8bfe920483a550666f90de64830d5/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=da9c43a723a8bfe920483a550666f90de64830d5", "patch": "@@ -14,14 +14,15 @@\n use CrateCtxt;\n \n use astconv::AstConv;\n-use check::{self, FnCtxt};\n+use check::{self, FnCtxt, UnresolvedTypeAction, autoderef};\n use front::map as hir_map;\n use rustc::ty::{self, Ty, ToPolyTraitRef, ToPredicate, TypeFoldable};\n use middle::cstore::{self, CrateStore};\n use middle::def::Def;\n use middle::def_id::DefId;\n use middle::lang_items::FnOnceTraitLangItem;\n use rustc::ty::subst::Substs;\n+use rustc::ty::LvaluePreference;\n use rustc::traits::{Obligation, SelectionContext};\n use util::nodemap::{FnvHashSet};\n \n@@ -50,23 +51,40 @@ fn is_fn_ty<'a, 'tcx>(ty: &Ty<'tcx>, fcx: &FnCtxt<'a, 'tcx>, span: Span) -> bool\n             if let Ok(fn_once_trait_did) =\n                     cx.lang_items.require(FnOnceTraitLangItem) {\n                 let infcx = fcx.infcx();\n-                infcx.probe(|_| {\n-                    let fn_once_substs =\n-                        Substs::new_trait(vec![infcx.next_ty_var()],\n-                                          Vec::new(),\n-                                          ty);\n-                    let trait_ref =\n-                      ty::TraitRef::new(fn_once_trait_did,\n-                                        cx.mk_substs(fn_once_substs));\n-                    let poly_trait_ref = trait_ref.to_poly_trait_ref();\n-                    let obligation = Obligation::misc(span,\n-                                                      fcx.body_id,\n-                                                      poly_trait_ref\n-                                                         .to_predicate());\n-                    let mut selcx = SelectionContext::new(infcx);\n-\n-                    return selcx.evaluate_obligation(&obligation)\n-                })\n+                let (_, _, opt_is_fn) = autoderef(fcx,\n+                                                  span,\n+                                                  ty,\n+                                                  || None,\n+                                                  UnresolvedTypeAction::Ignore,\n+                                                  LvaluePreference::NoPreference,\n+                                                  |ty, _| {\n+                    infcx.probe(|_| {\n+                        let fn_once_substs =\n+                            Substs::new_trait(vec![infcx.next_ty_var()],\n+                                              Vec::new(),\n+                                              ty);\n+                        let trait_ref =\n+                          ty::TraitRef::new(fn_once_trait_did,\n+                                            cx.mk_substs(fn_once_substs));\n+                        let poly_trait_ref = trait_ref.to_poly_trait_ref();\n+                        let obligation = Obligation::misc(span,\n+                                                          fcx.body_id,\n+                                                          poly_trait_ref\n+                                                             .to_predicate());\n+                        let mut selcx = SelectionContext::new(infcx);\n+\n+                        if selcx.evaluate_obligation(&obligation) {\n+                            Some(true)\n+                        } else {\n+                            None\n+                        }\n+                    })\n+                });\n+\n+                match opt_is_fn {\n+                    Some(result) => result,\n+                    None => false,\n+                }\n             } else {\n                 false\n             }"}, {"sha": "fe7e66a2116ebb7fa4d5740b7929dff14bc9db3d", "filename": "src/test/compile-fail/issue-32128.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/da9c43a723a8bfe920483a550666f90de64830d5/src%2Ftest%2Fcompile-fail%2Fissue-32128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da9c43a723a8bfe920483a550666f90de64830d5/src%2Ftest%2Fcompile-fail%2Fissue-32128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32128.rs?ref=da9c43a723a8bfe920483a550666f90de64830d5", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Example {\n+    example: Box<Fn(i32) -> i32>\n+}\n+\n+fn main() {\n+    let demo = Example {\n+        example: Box::new(|x| {\n+            x + 1\n+        })\n+    };\n+\n+    demo.example(1);    //~ ERROR no method named `example`\n+                        //~^ NOTE use `(demo.example)(...)`\n+    // (demo.example)(1);\n+}"}]}