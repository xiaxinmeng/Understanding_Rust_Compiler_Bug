{"sha": "fbc3cc18bee7fb6dfd39e11521783f00506ca06b", "node_id": "C_kwDOAAsO6NoAKGZiYzNjYzE4YmVlN2ZiNmRmZDM5ZTExNTIxNzgzZjAwNTA2Y2EwNmI", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-08T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-08T21:14:56Z"}, "message": "Avoid constructing switch sources unless necessary\n\nSwitch sources are used by backward analysis with a custom switch int\nedge effects, but are otherwise unnecessarily computed.\n\nDelay the computation until we know that switch sources are indeed\nrequired and avoid the computation otherwise.", "tree": {"sha": "56119a80bd6442a7cf3c5a463f1c009d2ae85dc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56119a80bd6442a7cf3c5a463f1c009d2ae85dc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbc3cc18bee7fb6dfd39e11521783f00506ca06b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc3cc18bee7fb6dfd39e11521783f00506ca06b", "html_url": "https://github.com/rust-lang/rust/commit/fbc3cc18bee7fb6dfd39e11521783f00506ca06b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbc3cc18bee7fb6dfd39e11521783f00506ca06b/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83322c557fcaa9b6750955ceb6b9591df6c53a65", "url": "https://api.github.com/repos/rust-lang/rust/commits/83322c557fcaa9b6750955ceb6b9591df6c53a65", "html_url": "https://github.com/rust-lang/rust/commit/83322c557fcaa9b6750955ceb6b9591df6c53a65"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "4d26840fd624ddf8fdf3c9fffcb2e24ffe37d874", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbc3cc18bee7fb6dfd39e11521783f00506ca06b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc3cc18bee7fb6dfd39e11521783f00506ca06b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=fbc3cc18bee7fb6dfd39e11521783f00506ca06b", "patch": "@@ -580,6 +580,8 @@ impl<'tcx> Body<'tcx> {\n         self.predecessor_cache.compute(&self.basic_blocks)\n     }\n \n+    /// `body.switch_sources()[target][switch]` returns a list of switch values\n+    /// that lead to a `target` block from a `switch` block.\n     #[inline]\n     pub fn switch_sources(&self) -> &SwitchSources {\n         self.switch_source_cache.compute(&self.basic_blocks)"}, {"sha": "327002219db6b471b2b259d19122b1ad08c42a82", "filename": "compiler/rustc_mir_dataflow/src/framework/direction.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fbc3cc18bee7fb6dfd39e11521783f00506ca06b/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fdirection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc3cc18bee7fb6dfd39e11521783f00506ca06b/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fdirection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fdirection.rs?ref=fbc3cc18bee7fb6dfd39e11521783f00506ca06b", "patch": "@@ -269,9 +269,9 @@ impl Direction for Backward {\n \n                 mir::TerminatorKind::SwitchInt { targets: _, ref discr, switch_ty: _ } => {\n                     let mut applier = BackwardSwitchIntEdgeEffectsApplier {\n+                        body,\n                         pred,\n                         exit_state,\n-                        values: &body.switch_sources()[bb][pred],\n                         bb,\n                         propagate: &mut propagate,\n                         effects_applied: false,\n@@ -305,9 +305,9 @@ impl Direction for Backward {\n }\n \n struct BackwardSwitchIntEdgeEffectsApplier<'a, D, F> {\n+    body: &'a mir::Body<'a>,\n     pred: BasicBlock,\n     exit_state: &'a mut D,\n-    values: &'a [Option<u128>],\n     bb: BasicBlock,\n     propagate: &'a mut F,\n \n@@ -322,7 +322,8 @@ where\n     fn apply(&mut self, mut apply_edge_effect: impl FnMut(&mut D, SwitchIntTarget)) {\n         assert!(!self.effects_applied);\n \n-        let targets = self.values.iter().map(|&value| SwitchIntTarget { value, target: self.bb });\n+        let values = &self.body.switch_sources()[self.bb][self.pred];\n+        let targets = values.iter().map(|&value| SwitchIntTarget { value, target: self.bb });\n \n         let mut tmp = None;\n         for target in targets {"}]}