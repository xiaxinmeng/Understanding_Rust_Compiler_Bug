{"sha": "0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "node_id": "C_kwDOAAsO6NoAKDBkNjc0OWMyYWZiZTEwZDViOGZiMWVjYzI0Zjk5MTY2NjNhZmQ3OWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-04T11:21:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-04T11:21:28Z"}, "message": "Rollup merge of #112178 - GuillaumeGomez:fix-inline-private-intermediate, r=notriddle\n\nFix bug where private item with intermediate doc hidden re-export was not inlined\n\nThis fixes this bug:\n\n```rust\nmod private {\n    /// Original.\n    pub struct Bar3;\n}\n\n/// Hidden.\n#[doc(hidden)]\npub use crate::private::Bar3;\n/// Visible.\npub use self::Bar3 as Reexport;\n```\n\nIn this case, `private::Bar3` should be inlined and renamed `Reexport` but instead we have:\n\n```\npub use self::Bar3 as Reexport;\n```\n\nand no links.\n\nThere were actually two issues: the first one is that we forgot to check if the next intermediate re-export was doc hidden. The second was that we made the `#[doc(hidden)]` attribute inheritable, which shouldn't be possible.\n\nr? `@notriddle`", "tree": {"sha": "1ab5ff41ec148d20302028fb6775073b197d9fde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ab5ff41ec148d20302028fb6775073b197d9fde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkfHO4CRBK7hj4Ov3rIwAArZcIAJT9xSr19Lf8iD+pgbGU74x/\n7utMbuMSbJTgRjOE0jRdtTJCIvm04/xbLUR30kkEqugRSi7uk9yYp0UIPuU+iuWG\nDMgCamz/XKNVaNyoGOTzN+hggMLcY2gPwppY0sGv1PxIHIb7kZOwZ7v0Kx8APD72\nvbpAYcyHe4xbWtIoGi2CZgJeYSnjsPsSszbfIA+ZoNoA6F1jVj9jkTKjAwmyayNJ\nPzAyjQ7m6vSVWCXD1JWb02GL0YDP5YPr6JLc2yQOxexnRWF0SI2tVIcVdtA+u/w8\nHgIdEH+ThzqySYRVDjzZHBQcuMRf6Zf0x0c0QYi3G7lqtlQu/wCC05P/108JyqM=\n=LNVM\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ab5ff41ec148d20302028fb6775073b197d9fde\nparent cbc3e3f641b8e0f508e2a6dd0cb49bd64dfbb41c\nparent d0298009924a3d37ddba89b346d1e419c9f1def3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685877688 +0200\ncommitter GitHub <noreply@github.com> 1685877688 +0200\n\nRollup merge of #112178 - GuillaumeGomez:fix-inline-private-intermediate, r=notriddle\n\nFix bug where private item with intermediate doc hidden re-export was not inlined\n\nThis fixes this bug:\n\n```rust\nmod private {\n    /// Original.\n    pub struct Bar3;\n}\n\n/// Hidden.\n#[doc(hidden)]\npub use crate::private::Bar3;\n/// Visible.\npub use self::Bar3 as Reexport;\n```\n\nIn this case, `private::Bar3` should be inlined and renamed `Reexport` but instead we have:\n\n```\npub use self::Bar3 as Reexport;\n```\n\nand no links.\n\nThere were actually two issues: the first one is that we forgot to check if the next intermediate re-export was doc hidden. The second was that we made the `#[doc(hidden)]` attribute inheritable, which shouldn't be possible.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "html_url": "https://github.com/rust-lang/rust/commit/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbc3e3f641b8e0f508e2a6dd0cb49bd64dfbb41c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc3e3f641b8e0f508e2a6dd0cb49bd64dfbb41c", "html_url": "https://github.com/rust-lang/rust/commit/cbc3e3f641b8e0f508e2a6dd0cb49bd64dfbb41c"}, {"sha": "d0298009924a3d37ddba89b346d1e419c9f1def3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0298009924a3d37ddba89b346d1e419c9f1def3", "html_url": "https://github.com/rust-lang/rust/commit/d0298009924a3d37ddba89b346d1e419c9f1def3"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "b56b81279962b80a419083299e96a581a5c9ea96", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "patch": "@@ -2180,7 +2180,8 @@ fn get_all_import_attributes<'hir>(\n             // This is the \"original\" reexport so we get all its attributes without filtering them.\n             attrs = import_attrs.iter().map(|attr| (Cow::Borrowed(attr), Some(def_id))).collect();\n             first = false;\n-        } else {\n+        // We don't add attributes of an intermediate re-export if it has `#[doc(hidden)]`.\n+        } else if !cx.tcx.is_doc_hidden(def_id) {\n             add_without_unwanted_attributes(&mut attrs, import_attrs, is_inline, Some(def_id));\n         }\n     }"}, {"sha": "1689445b9ef7c6baffe5329be86c6e679b75f751", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "patch": "@@ -246,7 +246,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         glob: bool,\n         please_inline: bool,\n     ) -> bool {\n-        debug!(\"maybe_inline_local res: {:?}\", res);\n+        debug!(\"maybe_inline_local (renamed: {renamed:?}) res: {res:?}\");\n \n         if renamed == Some(kw::Underscore) {\n             // We never inline `_` reexports.\n@@ -308,6 +308,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                     .cache\n                     .effective_visibilities\n                     .is_directly_public(tcx, item_def_id.to_def_id()) &&\n+                !tcx.is_doc_hidden(item_def_id) &&\n                 !inherits_doc_hidden(tcx, item_def_id, None)\n             {\n                 // The imported item is public and not `doc(hidden)` so no need to inline it."}, {"sha": "e382940a47eb88ec20bc0286ff88634cd5c8548e", "filename": "tests/rustdoc/inline-private-with-intermediate-doc-hidden.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/tests%2Frustdoc%2Finline-private-with-intermediate-doc-hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/tests%2Frustdoc%2Finline-private-with-intermediate-doc-hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Finline-private-with-intermediate-doc-hidden.rs?ref=0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "patch": "@@ -0,0 +1,23 @@\n+// This test ensures that if a private item is re-exported with an intermediate\n+// `#[doc(hidden)]` re-export, it'll still be inlined (and not include any attribute\n+// from the doc hidden re-export.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/index.html'\n+// There should only be one struct displayed.\n+// @count - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 1\n+// @has - '//*[@id=\"main-content\"]/*[@class=\"small-section-header\"]' 'Structs'\n+// @has - '//*[@id=\"main-content\"]//a[@href=\"struct.Reexport.html\"]' 'Reexport'\n+// @has - '//*[@id=\"main-content\"]//*[@class=\"desc docblock-short\"]' 'Visible. Original.'\n+\n+mod private {\n+    /// Original.\n+    pub struct Bar3;\n+}\n+\n+/// Hidden.\n+#[doc(hidden)]\n+pub use crate::private::Bar3;\n+/// Visible.\n+pub use self::Bar3 as Reexport;"}, {"sha": "6cc054e7a8b2c15130568620ffb47f24feb60aeb", "filename": "tests/rustdoc/reexport-attr-merge.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/tests%2Frustdoc%2Freexport-attr-merge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d6749c2afbe10d5b8fb1ecc24f9916663afd79b/tests%2Frustdoc%2Freexport-attr-merge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-attr-merge.rs?ref=0d6749c2afbe10d5b8fb1ecc24f9916663afd79b", "patch": "@@ -19,9 +19,9 @@ pub use Foo1 as Foo2;\n // First we ensure that only the reexport `Bar2` and the inlined struct `Bar`\n // are inlined.\n // @count - '//a[@class=\"struct\"]' 2\n-// Then we check that both `cfg` are displayed.\n+// Then we check that `cfg` is displayed for base item, but not for intermediate re-exports.\n // @has - '//*[@class=\"stab portability\"]' 'foo'\n-// @has - '//*[@class=\"stab portability\"]' 'bar'\n+// @!has - '//*[@class=\"stab portability\"]' 'bar'\n // And finally we check that the only element displayed is `Bar`.\n // @has - '//a[@class=\"struct\"]' 'Bar'\n #[doc(inline)]"}]}