{"sha": "24ccb34266c93a21b4cd1bef473c56087689c079", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0Y2NiMzQyNjZjOTNhMjFiNGNkMWJlZjQ3M2M1NjA4NzY4OWMwNzk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-07T00:11:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-07T00:12:28Z"}, "message": "Revert \"Remove the unneeded Sized bound on TypeId creation\"\n\nThis reverts commit 240423236906a2df976edd6065bbc595711b83c0.\n\nConflicts:\n\tsrc/libcore/intrinsics.rs", "tree": {"sha": "dfe5de372c938941300e632bdb44e46cfcb0e391", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfe5de372c938941300e632bdb44e46cfcb0e391"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24ccb34266c93a21b4cd1bef473c56087689c079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24ccb34266c93a21b4cd1bef473c56087689c079", "html_url": "https://github.com/rust-lang/rust/commit/24ccb34266c93a21b4cd1bef473c56087689c079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24ccb34266c93a21b4cd1bef473c56087689c079/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56a9e2fcd5f0b737df81a39b22f72a55c95b44a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/56a9e2fcd5f0b737df81a39b22f72a55c95b44a2", "html_url": "https://github.com/rust-lang/rust/commit/56a9e2fcd5f0b737df81a39b22f72a55c95b44a2"}], "stats": {"total": 18, "additions": 1, "deletions": 17}, "files": [{"sha": "822416a387e63405b152d460baafb786cabdc659", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/24ccb34266c93a21b4cd1bef473c56087689c079/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24ccb34266c93a21b4cd1bef473c56087689c079/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=24ccb34266c93a21b4cd1bef473c56087689c079", "patch": "@@ -42,9 +42,6 @@\n #![experimental]\n #![allow(missing_docs)]\n \n-#[cfg(not(stage0))]\n-use marker::Sized;\n-\n pub type GlueFn = extern \"Rust\" fn(*const i8);\n \n #[lang=\"ty_desc\"]\n@@ -203,9 +200,6 @@ extern \"rust-intrinsic\" {\n     /// Gets an identifier which is globally unique to the specified type. This\n     /// function will return the same value for a type regardless of whichever\n     /// crate it is invoked in.\n-    #[cfg(not(stage0))]\n-    pub fn type_id<T: ?Sized + 'static>() -> TypeId;\n-    #[cfg(stage0)]\n     pub fn type_id<T: 'static>() -> TypeId;\n \n     /// Create a value initialized to zero.\n@@ -556,19 +550,9 @@ pub struct TypeId {\n }\n \n impl TypeId {\n-    /// Returns the `TypeId` of the type this generic function has been\n-    /// instantiated with\n-    #[cfg(stage0)]\n+    /// Returns the `TypeId` of the type this generic function has been instantiated with\n     pub fn of<T: 'static>() -> TypeId {\n         unsafe { type_id::<T>() }\n     }\n-\n-    /// Returns the `TypeId` of the type this generic function has been\n-    /// instantiated with\n-    #[cfg(not(stage0))]\n-    pub fn of<T: ?Sized + 'static>() -> TypeId {\n-        unsafe { type_id::<T>() }\n-    }\n-\n     pub fn hash(&self) -> u64 { self.t }\n }"}]}