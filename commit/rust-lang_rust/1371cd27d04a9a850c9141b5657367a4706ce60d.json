{"sha": "1371cd27d04a9a850c9141b5657367a4706ce60d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNzFjZDI3ZDA0YTlhODUwYzkxNDFiNTY1NzM2N2E0NzA2Y2U2MGQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-23T14:30:41Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-23T14:32:46Z"}, "message": "check the self type is well-formed\n\nThis fixes `issue-28848.rs` -- it also handles another case that the\nAST region checker gets wrong (`wf-self-type.rs`).  I don't actually\nthink that this is the *right way* to be enforcing this constraint --\nI think we should probably do it more generally, perhaps by editing\n`predicates_of` for the impl itself. The chalk-style implied bounds\nsetup ought to fix this.", "tree": {"sha": "8efb41b87c8740ad2b43092aa476fbffa8c7fbb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8efb41b87c8740ad2b43092aa476fbffa8c7fbb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1371cd27d04a9a850c9141b5657367a4706ce60d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1371cd27d04a9a850c9141b5657367a4706ce60d", "html_url": "https://github.com/rust-lang/rust/commit/1371cd27d04a9a850c9141b5657367a4706ce60d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1371cd27d04a9a850c9141b5657367a4706ce60d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64b5599352545e390ead3da4f14c3a1ffaba50d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/64b5599352545e390ead3da4f14c3a1ffaba50d4", "html_url": "https://github.com/rust-lang/rust/commit/64b5599352545e390ead3da4f14c3a1ffaba50d4"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "182e31a77b1b4d4dd020cd45b2a6feb4528ac4d4", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=1371cd27d04a9a850c9141b5657367a4706ce60d", "patch": "@@ -1033,6 +1033,8 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n                     assert!(!impl_self_ty.has_infer_types());\n \n                     self.eq_types(self_ty, impl_self_ty, locations, category)?;\n+\n+                    self.prove_predicate(ty::Predicate::WellFormed(impl_self_ty), locations, category);\n                 }\n \n                 // Prove the predicates coming along with `def_id`."}, {"sha": "1a06d59f0b191a22ba5fb15de4f21670058280f3", "filename": "src/test/ui/issues/issue-28848.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fissues%2Fissue-28848.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fissues%2Fissue-28848.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28848.rs?ref=1371cd27d04a9a850c9141b5657367a4706ce60d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-compare-mode-nll\n-\n struct Foo<'a, 'b: 'a>(&'a &'b ());\n \n impl<'a, 'b> Foo<'a, 'b> {"}, {"sha": "738a1c0c6f616bff65c3944eb117f41c234ee3c7", "filename": "src/test/ui/issues/issue-28848.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fissues%2Fissue-28848.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fissues%2Fissue-28848.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28848.stderr?ref=1371cd27d04a9a850c9141b5657367a4706ce60d", "patch": "@@ -1,16 +1,16 @@\n error[E0478]: lifetime bound not satisfied\n-  --> $DIR/issue-28848.rs:22:5\n+  --> $DIR/issue-28848.rs:20:5\n    |\n LL |     Foo::<'a, 'b>::xmute(u) //~ ERROR lifetime bound not satisfied\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lifetime parameter instantiated with the lifetime 'b as defined on the function body at 21:16\n-  --> $DIR/issue-28848.rs:21:16\n+note: lifetime parameter instantiated with the lifetime 'b as defined on the function body at 19:16\n+  --> $DIR/issue-28848.rs:19:16\n    |\n LL | pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n    |                ^^\n-note: but lifetime parameter must outlive the lifetime 'a as defined on the function body at 21:12\n-  --> $DIR/issue-28848.rs:21:12\n+note: but lifetime parameter must outlive the lifetime 'a as defined on the function body at 19:12\n+  --> $DIR/issue-28848.rs:19:12\n    |\n LL | pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n    |            ^^"}, {"sha": "c3cb3068bcecf3533b483a30adee2356d5c7ef5d", "filename": "src/test/ui/nll/user-annotations/wf-self-type.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.rs?ref=1371cd27d04a9a850c9141b5657367a4706ce60d", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(nll)]\n+\n+struct Foo<'a, 'b: 'a>(&'a &'b ());\n+\n+impl<'a, 'b> Foo<'a, 'b> {\n+    fn xmute(a: &'b ()) -> &'a () {\n+        unreachable!()\n+    }\n+}\n+\n+pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n+    Foo::xmute(u) //~ ERROR unsatisfied lifetime constraints\n+}\n+\n+fn main() {}"}, {"sha": "78d86fbf17ec09706fada4d301eac0fe836f1031", "filename": "src/test/ui/nll/user-annotations/wf-self-type.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1371cd27d04a9a850c9141b5657367a4706ce60d/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fwf-self-type.stderr?ref=1371cd27d04a9a850c9141b5657367a4706ce60d", "patch": "@@ -0,0 +1,12 @@\n+error: unsatisfied lifetime constraints\n+  --> $DIR/wf-self-type.rs:22:5\n+   |\n+LL | pub fn foo<'a, 'b>(u: &'b ()) -> &'a () {\n+   |            --  -- lifetime `'b` defined here\n+   |            |\n+   |            lifetime `'a` defined here\n+LL |     Foo::xmute(u) //~ ERROR unsatisfied lifetime constraints\n+   |     ^^^^^^^^^^^^^ returning this value requires that `'b` must outlive `'a`\n+\n+error: aborting due to previous error\n+"}]}