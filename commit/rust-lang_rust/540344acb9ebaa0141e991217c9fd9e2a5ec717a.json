{"sha": "540344acb9ebaa0141e991217c9fd9e2a5ec717a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MDM0NGFjYjllYmFhMDE0MWU5OTEyMTdjOWZkOWUyYTVlYzcxN2E=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-22T00:34:04Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-22T00:42:26Z"}, "message": "Fix the signature of expr_ext\n\nThe extension body is just a string, not an expression.", "tree": {"sha": "04633c069092e6f36617db6a3f40e73212bc0b1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04633c069092e6f36617db6a3f40e73212bc0b1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/540344acb9ebaa0141e991217c9fd9e2a5ec717a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/540344acb9ebaa0141e991217c9fd9e2a5ec717a", "html_url": "https://github.com/rust-lang/rust/commit/540344acb9ebaa0141e991217c9fd9e2a5ec717a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/540344acb9ebaa0141e991217c9fd9e2a5ec717a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c78b73b71d82e4f428c60daee892b9d30e0e1029", "url": "https://api.github.com/repos/rust-lang/rust/commits/c78b73b71d82e4f428c60daee892b9d30e0e1029", "html_url": "https://github.com/rust-lang/rust/commit/c78b73b71d82e4f428c60daee892b9d30e0e1029"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "95522c0ced70516467b28183eb249d633ad8a2ef", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=540344acb9ebaa0141e991217c9fd9e2a5ec717a", "patch": "@@ -275,7 +275,7 @@ tag expr_ {\n     expr_field(@expr, ident, ann);\n     expr_index(@expr, @expr, ann);\n     expr_path(path, option.t[def], ann);\n-    expr_ext(path, vec[@expr], option.t[@expr], @expr, ann);\n+    expr_ext(path, vec[@expr], option.t[str], @expr, ann);\n     expr_fail(ann);\n     expr_break(ann);\n     expr_cont(ann);"}, {"sha": "39c074c3ca186aabced98f4830456042172fb53e", "filename": "src/comp/front/extfmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Ffront%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Ffront%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fextfmt.rs?ref=540344acb9ebaa0141e991217c9fd9e2a5ec717a", "patch": "@@ -46,7 +46,7 @@ export expand_syntax_ext;\n \n // FIXME: Need to thread parser through here to handle errors correctly\n fn expand_syntax_ext(vec[@ast.expr] args,\n-                     option.t[@ast.expr] body) -> @ast.expr {\n+                     option.t[str] body) -> @ast.expr {\n \n     if (_vec.len[@ast.expr](args) == 0u) {\n         log_err \"malformed #fmt call\";"}, {"sha": "fdd41cf0ff702784691f925ccbf8b09415cb9816", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=540344acb9ebaa0141e991217c9fd9e2a5ec717a", "patch": "@@ -794,7 +794,7 @@ fn parse_bottom_expr(parser p) -> @ast.expr {\n                                            pf, p);\n             hi = es.span.hi;\n             ex = expand_syntax_ext(p, es.span, pth, es.node,\n-                                   none[@ast.expr]);\n+                                   none[str]);\n         }\n \n         case (token.FAIL) {\n@@ -935,7 +935,7 @@ fn parse_bottom_expr(parser p) -> @ast.expr {\n \n fn expand_syntax_ext(parser p, ast.span sp,\n                      &ast.path path, vec[@ast.expr] args,\n-                     option.t[@ast.expr] body) -> ast.expr_ {\n+                     option.t[str] body) -> ast.expr_ {\n \n     check (_vec.len[ast.ident](path.node.idents) > 0u);\n     auto extname = path.node.idents.(0);"}, {"sha": "a0f3bc93f955d846eeb49917b46d4164193624fa", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=540344acb9ebaa0141e991217c9fd9e2a5ec717a", "patch": "@@ -173,7 +173,7 @@ type ast_fold[ENV] =\n \n      (fn(&ENV e, &span sp,\n          &path p, vec[@expr] args,\n-         option.t[@expr] body,\n+         option.t[str] body,\n          @expr expanded,\n          ann a) -> @expr)                         fold_expr_ext,\n \n@@ -1343,7 +1343,7 @@ fn identity_fold_expr_path[ENV](&ENV env, &span sp,\n \n fn identity_fold_expr_ext[ENV](&ENV env, &span sp,\n                                &path p, vec[@expr] args,\n-                               option.t[@expr] body,\n+                               option.t[str] body,\n                                @expr expanded,\n                                ann a) -> @expr {\n     ret @respan(sp, ast.expr_ext(p, args, body, expanded, a));"}, {"sha": "8a6e840a4284e7ff64010718a98e85017630207d", "filename": "src/comp/middle/typestate_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Fmiddle%2Ftypestate_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540344acb9ebaa0141e991217c9fd9e2a5ec717a/src%2Fcomp%2Fmiddle%2Ftypestate_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypestate_check.rs?ref=540344acb9ebaa0141e991217c9fd9e2a5ec717a", "patch": "@@ -1922,9 +1922,9 @@ fn annotate_expr(&fn_info_map fm, &@expr e) -> @expr {\n         case (expr_path(_,_,_)) {\n             /* no change */\n         }\n-        case (expr_ext(?p, ?es, ?e_opt, ?e, ?a)) {\n+        case (expr_ext(?p, ?es, ?s_opt, ?e, ?a)) {\n             e1 = expr_ext(p, annotate_exprs(fm, es),\n-                          annotate_option_exp(fm, e_opt),\n+                          s_opt,\n                           annotate_expr(fm, e), a);\n         }\n         /* no change, next 3 cases */"}]}