{"sha": "88d64a09314d7f19201eebc1b92377afed31b5c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZDY0YTA5MzE0ZDdmMTkyMDFlZWJjMWI5MjM3N2FmZWQzMWI1YzI=", "commit": {"author": {"name": "Rob Pilling", "email": "robpilling@gmail.com", "date": "2020-02-01T19:06:15Z"}, "committer": {"name": "Rob Pilling", "email": "robpilling@gmail.com", "date": "2020-02-01T19:07:58Z"}, "message": "Simplify span usage and avoid .eat()", "tree": {"sha": "0d34c3c17c6d63cab6e93ea307db93975c00b75a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d34c3c17c6d63cab6e93ea307db93975c00b75a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88d64a09314d7f19201eebc1b92377afed31b5c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88d64a09314d7f19201eebc1b92377afed31b5c2", "html_url": "https://github.com/rust-lang/rust/commit/88d64a09314d7f19201eebc1b92377afed31b5c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88d64a09314d7f19201eebc1b92377afed31b5c2/comments", "author": {"login": "bobrippling", "id": 205673, "node_id": "MDQ6VXNlcjIwNTY3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/205673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobrippling", "html_url": "https://github.com/bobrippling", "followers_url": "https://api.github.com/users/bobrippling/followers", "following_url": "https://api.github.com/users/bobrippling/following{/other_user}", "gists_url": "https://api.github.com/users/bobrippling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobrippling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobrippling/subscriptions", "organizations_url": "https://api.github.com/users/bobrippling/orgs", "repos_url": "https://api.github.com/users/bobrippling/repos", "events_url": "https://api.github.com/users/bobrippling/events{/privacy}", "received_events_url": "https://api.github.com/users/bobrippling/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bobrippling", "id": 205673, "node_id": "MDQ6VXNlcjIwNTY3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/205673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobrippling", "html_url": "https://github.com/bobrippling", "followers_url": "https://api.github.com/users/bobrippling/followers", "following_url": "https://api.github.com/users/bobrippling/following{/other_user}", "gists_url": "https://api.github.com/users/bobrippling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobrippling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobrippling/subscriptions", "organizations_url": "https://api.github.com/users/bobrippling/orgs", "repos_url": "https://api.github.com/users/bobrippling/repos", "events_url": "https://api.github.com/users/bobrippling/events{/privacy}", "received_events_url": "https://api.github.com/users/bobrippling/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c91bdca1d552055e2b92ecac5275c1ebe9a4ee8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c91bdca1d552055e2b92ecac5275c1ebe9a4ee8", "html_url": "https://github.com/rust-lang/rust/commit/3c91bdca1d552055e2b92ecac5275c1ebe9a4ee8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a4541046c6c14d533e938661acff227093fd766a", "filename": "src/librustc_parse/parser/path.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/88d64a09314d7f19201eebc1b92377afed31b5c2/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d64a09314d7f19201eebc1b92377afed31b5c2/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpath.rs?ref=88d64a09314d7f19201eebc1b92377afed31b5c2", "patch": "@@ -71,15 +71,15 @@ impl<'a> Parser<'a> {\n             debug!(\"parse_qpath: (decrement) count={:?}\", self.unmatched_angle_bracket_count);\n         }\n \n-        let lo_colon = self.token.span;\n-        if self.eat(&token::Colon) {\n+        if self.token.kind == token::Colon {\n             // <Bar as Baz<T>>:Qux\n             //                ^\n-            let span = lo_colon.to(self.prev_span);\n+            self.bump();\n+\n             self.diagnostic()\n-                .struct_span_err(span, \"found single colon where type path was expected\")\n+                .struct_span_err(self.prev_span, \"found single colon where type path was expected\")\n                 .span_suggestion(\n-                    span,\n+                    self.prev_span,\n                     \"use double colon\",\n                     \"::\".to_string(),\n                     Applicability::MachineApplicable,"}]}