{"sha": "caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZWI1NTQ0ZWNkOWRiYTRkNjdiNjhiOGMxYjMyZDgxMzJjNmQ1ZjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-07T09:31:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-07T09:31:37Z"}, "message": "do not inline black_box when building for Miri", "tree": {"sha": "ae8e8fea7395f63929896f386136e99a2e0f5abc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae8e8fea7395f63929896f386136e99a2e0f5abc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2", "html_url": "https://github.com/rust-lang/rust/commit/caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e114d6228b948ce056de0bcdec2603c8e89d3727", "url": "https://api.github.com/repos/rust-lang/rust/commits/e114d6228b948ce056de0bcdec2603c8e89d3727", "html_url": "https://github.com/rust-lang/rust/commit/e114d6228b948ce056de0bcdec2603c8e89d3727"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a7b8c2f373a9eff0ca61116cd8e63207ec891716", "filename": "library/core/src/hint.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2/library%2Fcore%2Fsrc%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2/library%2Fcore%2Fsrc%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhint.rs?ref=caeb5544ecd9dba4d67b68b8c1b32d8132c6d5f2", "patch": "@@ -108,7 +108,8 @@ pub fn spin_loop() {\n /// Note however, that `black_box` is only (and can only be) provided on a \"best-effort\" basis. The\n /// extent to which it can block optimisations may vary depending upon the platform and code-gen\n /// backend used. Programs cannot rely on `black_box` for *correctness* in any way.\n-#[inline]\n+#[cfg_attr(not(miri), inline)]\n+#[cfg_attr(miri, inline(never))]\n #[unstable(feature = \"test\", issue = \"50297\")]\n #[allow(unreachable_code)] // this makes #[cfg] a bit easier below.\n pub fn black_box<T>(dummy: T) -> T {"}]}