{"sha": "7248f67f1b5062c99fd9a1972c932cb79c590910", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNDhmNjdmMWI1MDYyYzk5ZmQ5YTE5NzJjOTMyY2I3OWM1OTA5MTA=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-04-25T22:34:31Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-04-25T23:13:45Z"}, "message": "Build the rustc-src tarball before the rust-src component", "tree": {"sha": "3c79ab0928edd7cc3903e39564190e3bcf93817f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c79ab0928edd7cc3903e39564190e3bcf93817f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7248f67f1b5062c99fd9a1972c932cb79c590910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7248f67f1b5062c99fd9a1972c932cb79c590910", "html_url": "https://github.com/rust-lang/rust/commit/7248f67f1b5062c99fd9a1972c932cb79c590910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7248f67f1b5062c99fd9a1972c932cb79c590910/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b4c911581099e247a68b3a8adc782d778f5190b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b4c911581099e247a68b3a8adc782d778f5190b", "html_url": "https://github.com/rust-lang/rust/commit/2b4c911581099e247a68b3a8adc782d778f5190b"}], "stats": {"total": 60, "additions": 33, "deletions": 27}, "files": [{"sha": "e8c9a96b2214f4e4f49b31067174e349f961a0cd", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 33, "deletions": 27, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/7248f67f1b5062c99fd9a1972c932cb79c590910/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7248f67f1b5062c99fd9a1972c932cb79c590910/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=7248f67f1b5062c99fd9a1972c932cb79c590910", "patch": "@@ -369,13 +369,11 @@ pub fn rust_src(build: &Build) {\n \n     println!(\"Dist src\");\n \n-    let name = pkgname(build, \"rust-src\");\n-    let image = tmpdir(build).join(format!(\"{}-image\", name));\n-    let _ = fs::remove_dir_all(&image);\n-\n-    let dst = image.join(\"lib/rustlib/src\");\n-    let dst_src = dst.join(\"rust\");\n-    t!(fs::create_dir_all(&dst_src));\n+    // Make sure that the root folder of tarball has the correct name\n+    let plain_name = format!(\"rustc-{}-src\", build.rust_package_vers());\n+    let plain_dst_src = tmpdir(build).join(&plain_name);\n+    let _ = fs::remove_dir_all(&plain_dst_src);\n+    t!(fs::create_dir_all(&plain_dst_src));\n \n     // This is the set of root paths which will become part of the source package\n     let src_files = [\n@@ -424,13 +422,13 @@ pub fn rust_src(build: &Build) {\n \n     // Copy the directories using our filter\n     for item in &src_dirs {\n-        let dst = &dst_src.join(item);\n+        let dst = &plain_dst_src.join(item);\n         t!(fs::create_dir(dst));\n         cp_filtered(&build.src.join(item), dst, &filter_fn);\n     }\n     // Copy the files normally\n     for item in &src_files {\n-        copy(&build.src.join(item), &dst_src.join(item));\n+        copy(&build.src.join(item), &plain_dst_src.join(item));\n     }\n \n     // If we're building from git sources, we need to vendor a complete distribution.\n@@ -455,10 +453,35 @@ pub fn rust_src(build: &Build) {\n         // Vendor all Cargo dependencies\n         let mut cmd = Command::new(&build.cargo);\n         cmd.arg(\"vendor\")\n-           .current_dir(&dst_src.join(\"src\"));\n+           .current_dir(&plain_dst_src.join(\"src\"));\n         build.run(&mut cmd);\n     }\n \n+    // Create the version file\n+    write_file(&plain_dst_src.join(\"version\"), build.rust_version().as_bytes());\n+\n+    // Create plain source tarball\n+    let tarball = rust_src_location(build);\n+    if let Some(dir) = tarball.parent() {\n+        t!(fs::create_dir_all(dir));\n+    }\n+    let mut cmd = Command::new(\"tar\");\n+    cmd.arg(\"-czf\").arg(sanitize_sh(&tarball))\n+       .arg(&plain_name)\n+       .current_dir(tmpdir(build));\n+    build.run(&mut cmd);\n+\n+\n+    let name = pkgname(build, \"rust-src\");\n+    let image = tmpdir(build).join(format!(\"{}-image\", name));\n+    let _ = fs::remove_dir_all(&image);\n+\n+    let dst = image.join(\"lib/rustlib/src\");\n+    let dst_src = dst.join(\"rust\");\n+    t!(fs::create_dir_all(&dst_src));\n+\n+    cp_r(&plain_dst_src, &dst_src);\n+\n     // Create source tarball in rust-installer format\n     let mut cmd = Command::new(SH_CMD);\n     cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n@@ -473,23 +496,6 @@ pub fn rust_src(build: &Build) {\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n     build.run(&mut cmd);\n \n-    // Rename directory, so that root folder of tarball has the correct name\n-    let plain_name = format!(\"rustc-{}-src\", build.rust_package_vers());\n-    let plain_dst_src = tmpdir(build).join(&plain_name);\n-    let _ = fs::remove_dir_all(&plain_dst_src);\n-    t!(fs::create_dir_all(&plain_dst_src));\n-    cp_r(&dst_src, &plain_dst_src);\n-\n-    // Create the version file\n-    write_file(&plain_dst_src.join(\"version\"), build.rust_version().as_bytes());\n-\n-    // Create plain source tarball\n-    let mut cmd = Command::new(\"tar\");\n-    cmd.arg(\"-czf\").arg(sanitize_sh(&rust_src_location(build)))\n-       .arg(&plain_name)\n-       .current_dir(tmpdir(build));\n-    build.run(&mut cmd);\n-\n     t!(fs::remove_dir_all(&image));\n     t!(fs::remove_dir_all(&plain_dst_src));\n }"}]}