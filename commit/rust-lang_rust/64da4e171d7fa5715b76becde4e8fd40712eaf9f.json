{"sha": "64da4e171d7fa5715b76becde4e8fd40712eaf9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZGE0ZTE3MWQ3ZmE1NzE1Yjc2YmVjZGU0ZThmZDQwNzEyZWFmOWY=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-04-10T01:06:01Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-04-10T01:06:01Z"}, "message": "fmt: Assume that we'll only ever see 32 or 64 bit pointers", "tree": {"sha": "4995c5742fb53bdd9eaec27c0a2f0ac07cae0341", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4995c5742fb53bdd9eaec27c0a2f0ac07cae0341"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64da4e171d7fa5715b76becde4e8fd40712eaf9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64da4e171d7fa5715b76becde4e8fd40712eaf9f", "html_url": "https://github.com/rust-lang/rust/commit/64da4e171d7fa5715b76becde4e8fd40712eaf9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64da4e171d7fa5715b76becde4e8fd40712eaf9f/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8bb08037f9ea7295feb5740a16a6dc1dd810f33", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8bb08037f9ea7295feb5740a16a6dc1dd810f33", "html_url": "https://github.com/rust-lang/rust/commit/d8bb08037f9ea7295feb5740a16a6dc1dd810f33"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "67781b73ae23c8b76e8941aa33dc84034a6d2182", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64da4e171d7fa5715b76becde4e8fd40712eaf9f/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64da4e171d7fa5715b76becde4e8fd40712eaf9f/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=64da4e171d7fa5715b76becde4e8fd40712eaf9f", "patch": "@@ -861,8 +861,7 @@ impl<T> Pointer for *const T {\n                 // The formats need two extra bytes, for the 0x\n                 if cfg!(target_pointer_width = \"32\") {\n                     f.width = Some(10);\n-                }\n-                if cfg!(target_pointer_width = \"64\") {\n+                } else {\n                     f.width = Some(18);\n                 }\n             }"}, {"sha": "96f31891f2f34bbea5d042a635f3f6abd3a11f08", "filename": "src/test/run-pass/fmt-pointer-trait.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64da4e171d7fa5715b76becde4e8fd40712eaf9f/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64da4e171d7fa5715b76becde4e8fd40712eaf9f/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs?ref=64da4e171d7fa5715b76becde4e8fd40712eaf9f", "patch": "@@ -26,8 +26,7 @@ fn main() {\n     if cfg!(target_pointer_width = \"32\") {\n         assert_eq!(format!(\"{:#p}\", p),\n                    \"0x00000000\");\n-    }\n-    if cfg!(target_pointer_width = \"64\") {\n+    } else {\n         assert_eq!(format!(\"{:#p}\", p),\n                    \"0x0000000000000000\");\n     }"}, {"sha": "3a7af0976441927fe03799d32ce185bb6bd16b40", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64da4e171d7fa5715b76becde4e8fd40712eaf9f/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64da4e171d7fa5715b76becde4e8fd40712eaf9f/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=64da4e171d7fa5715b76becde4e8fd40712eaf9f", "patch": "@@ -75,8 +75,7 @@ pub fn main() {\n     if cfg!(target_pointer_width = \"32\") {\n         t!(format!(\"{:#p}\", 0x1234 as *const isize), \"0x00001234\");\n         t!(format!(\"{:#p}\", 0x1234 as *mut isize), \"0x00001234\");\n-    }\n-    if cfg!(target_pointer_width = \"64\") {\n+    } else {\n         t!(format!(\"{:#p}\", 0x1234 as *const isize), \"0x0000000000001234\");\n         t!(format!(\"{:#p}\", 0x1234 as *mut isize), \"0x0000000000001234\");\n     }"}]}