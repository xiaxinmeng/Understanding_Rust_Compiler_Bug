{"sha": "c313647a95fdf9b27980959ea658a1d39f367ecc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTM2NDdhOTVmZGY5YjI3OTgwOTU5ZWE2NThhMWQzOWYzNjdlY2M=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-28T07:43:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-28T07:43:23Z"}, "message": "Rollup merge of #57987 - parched:va-args, r=joshtriplett\n\nFix some AArch64 typos\n\ncc @dlrobertson", "tree": {"sha": "94cdf0ddc4f00d6c22b55eb8340909a5cb71b469", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94cdf0ddc4f00d6c22b55eb8340909a5cb71b469"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c313647a95fdf9b27980959ea658a1d39f367ecc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcnHscCRBK7hj4Ov3rIwAAdHIIAKauvUiRPl5nduslj84SqCdQ\nlpJWTh1rd3rCvDVLjaU5TIXlqLe1JV9Hmd9CDKJFPq21FD++c9yhpTrbHhl/fU3E\ne8/EkXjC0S1j+eVW74xPMXSR7Mmbhv4S2X3MD6uvPD13yMkIyuR0mbca+PCY2vw6\nuFw/WjrhxPeg9DvyZiqu3a1C2dEOAtXdlxEpqIU4IOnJYRBAZkKr0zaMFOsemQtb\nP3EZsMwSjpoELmrLFBfd8GynPYtIDqS6mp0Xyfzg3LR3E8JyerLGP01sAdHiFu2f\nGSAhe2kW50F9AWOqCU74OCCRqNJeLUsLBc01TxmQuFODhUrrjjotggrrTkckdfo=\n=HS+S\n-----END PGP SIGNATURE-----\n", "payload": "tree 94cdf0ddc4f00d6c22b55eb8340909a5cb71b469\nparent d20e0002725d2b3efff23c97450806b3517ba804\nparent 62c159e500dac61dd6f20c8a50f1b1570ed481ee\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553759003 +0100\ncommitter GitHub <noreply@github.com> 1553759003 +0100\n\nRollup merge of #57987 - parched:va-args, r=joshtriplett\n\nFix some AArch64 typos\n\ncc @dlrobertson\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c313647a95fdf9b27980959ea658a1d39f367ecc", "html_url": "https://github.com/rust-lang/rust/commit/c313647a95fdf9b27980959ea658a1d39f367ecc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c313647a95fdf9b27980959ea658a1d39f367ecc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d20e0002725d2b3efff23c97450806b3517ba804", "url": "https://api.github.com/repos/rust-lang/rust/commits/d20e0002725d2b3efff23c97450806b3517ba804", "html_url": "https://github.com/rust-lang/rust/commit/d20e0002725d2b3efff23c97450806b3517ba804"}, {"sha": "62c159e500dac61dd6f20c8a50f1b1570ed481ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/62c159e500dac61dd6f20c8a50f1b1570ed481ee", "html_url": "https://github.com/rust-lang/rust/commit/62c159e500dac61dd6f20c8a50f1b1570ed481ee"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "231a1f199bdd69557ec44fc5fc61bacab9936c8c", "filename": "src/libcore/ffi.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c313647a95fdf9b27980959ea658a1d39f367ecc/src%2Flibcore%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c313647a95fdf9b27980959ea658a1d39f367ecc/src%2Flibcore%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fffi.rs?ref=c313647a95fdf9b27980959ea658a1d39f367ecc", "patch": "@@ -47,7 +47,7 @@ impl fmt::Debug for c_void {\n /// Basic implementation of a `va_list`.\n #[cfg(any(all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"),\n               not(target_arch = \"x86_64\")),\n-          all(target_arch = \"aarch4\", target_os = \"ios\"),\n+          all(target_arch = \"aarch64\", target_os = \"ios\"),\n           windows))]\n #[unstable(feature = \"c_variadic\",\n            reason = \"the `c_variadic` feature has not been properly tested on \\\n@@ -59,6 +59,7 @@ extern {\n \n #[cfg(any(all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"),\n               not(target_arch = \"x86_64\")),\n+          all(target_arch = \"aarch64\", target_os = \"ios\"),\n           windows))]\n impl fmt::Debug for VaListImpl {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -67,11 +68,11 @@ impl fmt::Debug for VaListImpl {\n }\n \n /// AArch64 ABI implementation of a `va_list`. See the\n-/// [Aarch64 Procedure Call Standard] for more details.\n+/// [AArch64 Procedure Call Standard] for more details.\n ///\n /// [AArch64 Procedure Call Standard]:\n /// http://infocenter.arm.com/help/topic/com.arm.doc.ihi0055b/IHI0055B_aapcs64.pdf\n-#[cfg(all(target_arch = \"aarch64\", not(windows)))]\n+#[cfg(all(target_arch = \"aarch64\", not(target_os = \"ios\"), not(windows)))]\n #[repr(C)]\n #[derive(Debug)]\n #[unstable(feature = \"c_variadic\",\n@@ -193,14 +194,14 @@ impl<'a> VaList<'a> {\n             where F: for<'copy> FnOnce(VaList<'copy>) -> R {\n         #[cfg(any(all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"),\n                       not(target_arch = \"x86_64\")),\n-                  all(target_arch = \"aarch4\", target_os = \"ios\"),\n+                  all(target_arch = \"aarch64\", target_os = \"ios\"),\n                   windows))]\n         let mut ap = va_copy(self);\n         #[cfg(all(any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-                  not(windows)))]\n+                  not(windows), not(all(target_arch = \"aarch64\", target_os = \"ios\"))))]\n         let mut ap_inner = va_copy(self);\n         #[cfg(all(any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-                  not(windows)))]\n+                  not(windows), not(all(target_arch = \"aarch64\", target_os = \"ios\"))))]\n         let mut ap = VaList(&mut ap_inner);\n         let ret = f(VaList(ap.0));\n         va_end(&mut ap);\n@@ -216,10 +217,11 @@ extern \"rust-intrinsic\" {\n     /// Copies the current location of arglist `src` to the arglist `dst`.\n     #[cfg(any(all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"),\n                   not(target_arch = \"x86_64\")),\n+              all(target_arch = \"aarch64\", target_os = \"ios\"),\n               windows))]\n     fn va_copy<'a>(src: &VaList<'a>) -> VaList<'a>;\n     #[cfg(all(any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-              not(windows)))]\n+              not(windows), not(all(target_arch = \"aarch64\", target_os = \"ios\"))))]\n     fn va_copy(src: &VaList) -> VaListImpl;\n \n     /// Loads an argument of type `T` from the `va_list` `ap` and increment the"}, {"sha": "7fc17d17f99df4c4a0e4d512d8e4c1e2f81c304b", "filename": "src/librustc_codegen_llvm/va_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c313647a95fdf9b27980959ea658a1d39f367ecc/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c313647a95fdf9b27980959ea658a1d39f367ecc/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fva_arg.rs?ref=c313647a95fdf9b27980959ea658a1d39f367ecc", "patch": "@@ -108,12 +108,12 @@ pub(super) fn emit_va_arg(\n             emit_ptr_va_arg(bx, addr, target_ty, false,\n                             Align::from_bytes(4).unwrap(), true)\n         }\n-        // Windows Aarch64\n+        // Windows AArch64\n         (\"aarch64\", true) => {\n             emit_ptr_va_arg(bx, addr, target_ty, false,\n                             Align::from_bytes(8).unwrap(), false)\n         }\n-        // iOS Aarch64\n+        // iOS AArch64\n         (\"aarch64\", _) if target.target_os == \"ios\" => {\n             emit_ptr_va_arg(bx, addr, target_ty, false,\n                             Align::from_bytes(8).unwrap(), true)"}]}