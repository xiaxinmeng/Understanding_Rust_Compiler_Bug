{"sha": "cc4ff8f4d169562ff4ae22b94197a191215e6d56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNGZmOGY0ZDE2OTU2MmZmNGFlMjJiOTQxOTdhMTkxMjE1ZTZkNTY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-07-29T16:05:50Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-07-29T16:30:03Z"}, "message": "Use a free error code", "tree": {"sha": "585b6abef7031de552df4cb7fe64846ea3a47700", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/585b6abef7031de552df4cb7fe64846ea3a47700"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc4ff8f4d169562ff4ae22b94197a191215e6d56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc4ff8f4d169562ff4ae22b94197a191215e6d56", "html_url": "https://github.com/rust-lang/rust/commit/cc4ff8f4d169562ff4ae22b94197a191215e6d56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc4ff8f4d169562ff4ae22b94197a191215e6d56/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9285a61413c8872e912ad7fbb147db0d098afc0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9285a61413c8872e912ad7fbb147db0d098afc0b", "html_url": "https://github.com/rust-lang/rust/commit/9285a61413c8872e912ad7fbb147db0d098afc0b"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "0016c406b375f21915fc1cfbb75349ffacba62e9", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -821,7 +821,7 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                     debug!(\"err_out_of_scope: opt_yield_span = {:?}\", yield_span);\n                     struct_span_err!(self.tcx.sess,\n                                      error_span,\n-                                     E0624,\n+                                     E0626,\n                                      \"borrow may still be in use when generator yields\")\n                         .span_label(yield_span, \"possible yield occurs here\")\n                         .emit();"}, {"sha": "5d8998b332dc6beac5b5f13519268b2d31e21cb0", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -1183,11 +1183,11 @@ x.x = Some(&y);\n ```\n \"##,\n \n-E0624: r##\"\n+E0626: r##\"\n This error occurs because a borrow in a generator persists across a\n yield point.\n \n-```compile_fail,E0624\n+```compile_fail,E0626\n # #![feature(generators, generator_trait)]\n # use std::ops::Generator;\n let mut b = || {\n@@ -1222,7 +1222,7 @@ in those cases, something like the `Rc` or `Arc` types may be useful.\n \n This error also frequently arises with iteration:\n \n-```compile_fail,E0624\n+```compile_fail,E0626\n # #![feature(generators, generator_trait)]\n # use std::ops::Generator;\n let mut b = || {"}, {"sha": "67ffca69efaff3e1c498dd6221535132f21b92fb", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -3975,7 +3975,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     self.check_expr_coercable_to_type(&value, ty);\n                 }\n                 None => {\n-                    struct_span_err!(self.tcx.sess, expr.span, E0623,\n+                    struct_span_err!(self.tcx.sess, expr.span, E0624,\n                                  \"yield statement outside of generator literal\").emit();\n                 }\n             }"}, {"sha": "7c410b111c2f0989b9786363e760841612ccc12a", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -4667,5 +4667,5 @@ register_diagnostics! {\n     E0588, // packed struct cannot transitively contain a `[repr(align)]` struct\n     E0592, // duplicate definitions with name `{}`\n //  E0613, // Removed (merged with E0609)\n-    E0623, // yield statement outside of generator literal\n+    E0624, // yield statement outside of generator literal\n }"}, {"sha": "157f896820906fac6b5891061f6c080cf165f87d", "filename": "src/test/ui/generator/yield-in-args-rev.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-args-rev.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-args-rev.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-args-rev.stderr?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -1,4 +1,4 @@\n-error[E0624]: borrow may still be in use when generator yields\n+error[E0626]: borrow may still be in use when generator yields\n   --> $DIR/yield-in-args-rev.rs:20:21\n    |\n 20 |         foo(yield, &b); //~ ERROR"}, {"sha": "06561853dee8cbc3019d5587531111ba31f7811a", "filename": "src/test/ui/generator/yield-in-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-in-args.stderr?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -1,4 +1,4 @@\n-error[E0624]: borrow may still be in use when generator yields\n+error[E0626]: borrow may still be in use when generator yields\n   --> $DIR/yield-in-args.rs:18:14\n    |\n 18 |         foo(&b, yield); //~ ERROR"}, {"sha": "ea55e032e47611d84e2ff80320ca9f7c5ee21d77", "filename": "src/test/ui/generator/yield-while-iterating.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-iterating.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-iterating.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-iterating.stderr?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -1,4 +1,4 @@\n-error[E0624]: borrow may still be in use when generator yields\n+error[E0626]: borrow may still be in use when generator yields\n   --> $DIR/yield-while-iterating.rs:22:19\n    |\n 22 |         for p in &x { //~ ERROR"}, {"sha": "46363e5919d374df92de2a93d85e2cabe3ad008e", "filename": "src/test/ui/generator/yield-while-local-borrowed.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-local-borrowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc4ff8f4d169562ff4ae22b94197a191215e6d56/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-local-borrowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-local-borrowed.stderr?ref=cc4ff8f4d169562ff4ae22b94197a191215e6d56", "patch": "@@ -1,12 +1,12 @@\n-error[E0624]: borrow may still be in use when generator yields\n+error[E0626]: borrow may still be in use when generator yields\n   --> $DIR/yield-while-local-borrowed.rs:22:18\n    |\n 22 |         let a = &3; //~ ERROR\n    |                  ^\n 23 |         yield();\n    |         ------- possible yield occurs here\n \n-error[E0624]: borrow may still be in use when generator yields\n+error[E0626]: borrow may still be in use when generator yields\n   --> $DIR/yield-while-local-borrowed.rs:48:22\n    |\n 48 |             let b = &a; //~ ERROR"}]}