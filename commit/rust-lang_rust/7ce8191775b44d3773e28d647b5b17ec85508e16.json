{"sha": "7ce8191775b44d3773e28d647b5b17ec85508e16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZTgxOTE3NzViNDRkMzc3M2UyOGQ2NDdiNWIxN2VjODU1MDhlMTY=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-03-17T00:51:49Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-03-26T13:36:50Z"}, "message": "Stabilize i128_type", "tree": {"sha": "5deee52a2014042bb5999f0bccb57b7b37ddd3d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5deee52a2014042bb5999f0bccb57b7b37ddd3d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ce8191775b44d3773e28d647b5b17ec85508e16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce8191775b44d3773e28d647b5b17ec85508e16", "html_url": "https://github.com/rust-lang/rust/commit/7ce8191775b44d3773e28d647b5b17ec85508e16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ce8191775b44d3773e28d647b5b17ec85508e16/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e4603f99066eaf2c1cf19ac3afbac9057b1e177", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e4603f99066eaf2c1cf19ac3afbac9057b1e177", "html_url": "https://github.com/rust-lang/rust/commit/5e4603f99066eaf2c1cf19ac3afbac9057b1e177"}], "stats": {"total": 184, "additions": 37, "deletions": 147}, "files": [{"sha": "09685d1bb40b0c5449251157f617afeaf3220e97", "filename": "src/liballoc/benches/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Fliballoc%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Fliballoc%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -10,7 +10,7 @@\n \n #![deny(warnings)]\n \n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(rand)]\n #![feature(repr_simd)]\n #![feature(test)]"}, {"sha": "19d64d8fea9ecbed5765eaa59b85cfd578c12fed", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -97,7 +97,7 @@\n #![feature(from_ref)]\n #![feature(fundamental)]\n #![feature(generic_param_attrs)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(iter_rfold)]\n #![feature(lang_items)]\n #![feature(needs_allocator)]"}, {"sha": "11fecde395164379c1314376c98fdef125d31a9a", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -78,7 +78,7 @@\n #![feature(doc_spotlight)]\n #![feature(fn_must_use)]\n #![feature(fundamental)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![cfg_attr(stage0, feature(inclusive_range_syntax))]\n #![feature(intrinsics)]\n #![feature(iterator_flatten)]"}, {"sha": "9ff42a6d4ea27f6da02b2db8b79ae2f9615b11ad", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -1635,8 +1635,7 @@ impl i64 {\n #[lang = \"i128\"]\n impl i128 {\n     int_impl! { i128, i128, u128, 128, -170141183460469231731687303715884105728,\n-        170141183460469231731687303715884105727, \"#![feature(i128_type)]\n-#![feature(i128)]\n+        170141183460469231731687303715884105727, \"#![feature(i128)]\n # fn main() {\n \", \"\n # }\" }\n@@ -3493,8 +3492,7 @@ impl u64 {\n \n #[lang = \"u128\"]\n impl u128 {\n-    uint_impl! { u128, u128, 128, 340282366920938463463374607431768211455, \"#![feature(i128_type)]\n-#![feature(i128)]\n+    uint_impl! { u128, u128, 128, 340282366920938463463374607431768211455, \"#![feature(i128)]\n \n # fn main() {\n \", \""}, {"sha": "0b70f692403676c6093ccc282448518b63bbcf9e", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -23,7 +23,7 @@\n #![feature(fmt_internals)]\n #![feature(hashmap_internals)]\n #![feature(iterator_step_by)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![cfg_attr(stage0, feature(inclusive_range_syntax))]\n #![feature(iterator_try_fold)]\n #![feature(iterator_flatten)]"}, {"sha": "716a2cc6cbb11f24ff0a9fcdd7cf583a9a476330", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -34,7 +34,7 @@\n        test(no_crate_inject, attr(deny(warnings))),\n        test(attr(allow(dead_code, deprecated, unused_variables, unused_mut))))]\n \n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(rustc_private)]\n #![feature(staged_api)]\n #![feature(lang_items)]"}, {"sha": "061044cdf143cb0ec5e792ec8a8b44d4851f962d", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -53,7 +53,7 @@\n #![feature(from_ref)]\n #![feature(fs_read_write)]\n #![feature(i128)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![cfg_attr(stage0, feature(inclusive_range_syntax))]\n #![cfg_attr(windows, feature(libc))]\n #![feature(match_default_bindings)]"}, {"sha": "2ee7bea84765c42b6987affaea7ea37b969176c8", "filename": "src/librustc_apfloat/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_apfloat%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_apfloat%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -46,8 +46,8 @@\n #![deny(warnings)]\n #![forbid(unsafe_code)]\n \n-#![feature(i128_type)]\n #![cfg_attr(stage0, feature(slice_patterns))]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(try_from)]\n \n // See librustc_cratesio_shim/Cargo.toml for a comment explaining this."}, {"sha": "627d79724b28a463568723c97dedc96728eaa13d", "filename": "src/librustc_apfloat/tests/ieee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_apfloat%2Ftests%2Fieee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_apfloat%2Ftests%2Fieee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Ftests%2Fieee.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n \n #[macro_use]\n extern crate rustc_apfloat;"}, {"sha": "2620448927d86e5f283537ff44b67f6fe40dd5c6", "filename": "src/librustc_const_eval/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_const_eval%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_const_eval%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -23,7 +23,7 @@\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(macro_lifetime_matcher)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(from_ref)]\n \n extern crate arena;"}, {"sha": "a53055c7ce7173ed2e653aa4fc62d115ec6c01e9", "filename": "src/librustc_const_math/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_const_math%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_const_math%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -20,7 +20,7 @@\n #![deny(warnings)]\n \n #![feature(i128)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n \n extern crate rustc_apfloat;\n "}, {"sha": "01f91e37db8414f4444e4fdc95879cef976cecaf", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -26,7 +26,7 @@\n #![feature(unboxed_closures)]\n #![feature(fn_traits)]\n #![feature(unsize)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(i128)]\n #![cfg_attr(stage0, feature(conservative_impl_trait))]\n #![feature(specialization)]"}, {"sha": "37ae64cef572562f1467ca98c75e93e5de0096e2", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -18,7 +18,7 @@\n #![feature(range_contains)]\n #![cfg_attr(unix, feature(libc))]\n #![cfg_attr(stage0, feature(conservative_impl_trait))]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(optin_builtin_traits)]\n \n extern crate atty;"}, {"sha": "5a33f566e903a393bc97754628c47f36101a6e20", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -17,7 +17,7 @@\n \n #![cfg_attr(stage0, feature(conservative_impl_trait))]\n #![feature(fs_read_write)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![cfg_attr(stage0, feature(inclusive_range_syntax))]\n #![feature(specialization)]\n "}, {"sha": "d024adad9d0305af87d052541c06f26fd7934a8e", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -27,7 +27,7 @@\n #![cfg_attr(test, feature(test))]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(macro_vis_matcher)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "4af5ec9ae08ea0d023e23e1516d9f36b5899644b", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -16,7 +16,7 @@\n #![feature(box_patterns)]\n #![cfg_attr(stage0, feature(conservative_impl_trait))]\n #![feature(fs_read_write)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(libc)]\n #![feature(macro_lifetime_matcher)]\n #![feature(proc_macro_internals)]"}, {"sha": "a1f096b2a382acd85894e2523a13a93cc9b7392a", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -27,7 +27,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(decl_macro)]\n #![feature(dyn_trait)]\n #![feature(fs_read_write)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![cfg_attr(stage0, feature(inclusive_range_syntax))]\n #![feature(macro_vis_matcher)]\n #![feature(match_default_bindings)]"}, {"sha": "01eda71e9b6c67c70e28e8666da4b4af6566f42b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -3117,17 +3117,6 @@ impl<'a> Resolver<'a> {\n                        self.primitive_type_table.primitive_types\n                            .contains_key(&path[0].node.name) => {\n                 let prim = self.primitive_type_table.primitive_types[&path[0].node.name];\n-                match prim {\n-                    TyUint(UintTy::U128) | TyInt(IntTy::I128) => {\n-                        if !self.session.features_untracked().i128_type {\n-                            emit_feature_err(&self.session.parse_sess,\n-                                                \"i128_type\", span, GateIssue::Language,\n-                                                \"128-bit type is unstable\");\n-\n-                        }\n-                    }\n-                    _ => {}\n-                }\n                 PathResolution::with_unresolved_segments(Def::PrimTy(prim), path.len() - 1)\n             }\n             PathResult::Module(module) => PathResolution::new(module.def().unwrap()),"}, {"sha": "d89d19db63e2a5cdcece236a4a46c593a4cd23be", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -24,7 +24,7 @@\n #![feature(custom_attribute)]\n #![feature(fs_read_write)]\n #![allow(unused_attributes)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(i128)]\n #![cfg_attr(stage0, feature(inclusive_range_syntax))]\n #![feature(libc)]"}, {"sha": "99de124c6e1ad7fb510965230fda017e7468f255", "filename": "src/librustc_trans_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_trans_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_trans_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -21,7 +21,7 @@\n #![feature(box_syntax)]\n #![feature(custom_attribute)]\n #![allow(unused_attributes)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n #![cfg_attr(stage0, feature(conservative_impl_trait))]"}, {"sha": "8b3d5af3edd021e68a07d5b062e10f449b231c80", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -86,7 +86,7 @@ This API is completely unstable and subject to change.\n #![feature(refcell_replace_swap)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_patterns)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![cfg_attr(stage0, feature(never_type))]\n \n #[macro_use] extern crate log;"}, {"sha": "ee95252346223fa86d2869822a8b2d41b302767d", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -23,7 +23,7 @@ Core encoding and decoding interfaces.\n \n #![feature(box_syntax)]\n #![feature(core_intrinsics)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(specialization)]\n #![cfg_attr(test, feature(test))]\n "}, {"sha": "3cc5d7b81c3a3dd687c8162a5fd349f5aaeffd54", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -270,7 +270,7 @@\n #![feature(hashmap_internals)]\n #![feature(heap_api)]\n #![feature(i128)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(int_error_internals)]\n #![feature(integer_atomics)]\n #![feature(into_cow)]"}, {"sha": "4e3c77d5e46594ff58b1f6de40c8a7dabcdca8ff", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -303,9 +303,6 @@ declare_features! (\n     // `extern \"ptx-*\" fn()`\n     (active, abi_ptx, \"1.15.0\", None, None),\n \n-    // The `i128` type\n-    (active, i128_type, \"1.16.0\", Some(35118), None),\n-\n     // The `repr(i128)` annotation for enums\n     (active, repr128, \"1.16.0\", Some(35118), None),\n \n@@ -564,6 +561,8 @@ declare_features! (\n     (accepted, universal_impl_trait, \"1.26.0\", Some(34511), None),\n     // Allows `impl Trait` in function return types.\n     (accepted, conservative_impl_trait, \"1.26.0\", Some(34511), None),\n+    // The `i128` type\n+    (accepted, i128_type, \"1.26.0\", Some(35118), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must\n@@ -1641,18 +1640,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                                   e.span,\n                                   \"yield syntax is experimental\");\n             }\n-            ast::ExprKind::Lit(ref lit) => {\n-                if let ast::LitKind::Int(_, ref ty) = lit.node {\n-                    match *ty {\n-                        ast::LitIntType::Signed(ast::IntTy::I128) |\n-                        ast::LitIntType::Unsigned(ast::UintTy::U128) => {\n-                            gate_feature_post!(&self, i128_type, e.span,\n-                                               \"128-bit integers are not stable\");\n-                        }\n-                        _ => {}\n-                    }\n-                }\n-            }\n             ast::ExprKind::Catch(_) => {\n                 gate_feature_post!(&self, catch_expr, e.span, \"`catch` expression is experimental\");\n             }"}, {"sha": "2218b396685136e0eb685bec17256fbd6a161198", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -24,7 +24,7 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(match_default_bindings)]\n #![feature(non_exhaustive)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(const_atomic_usize_new)]\n #![feature(rustc_attrs)]\n "}, {"sha": "eb345200f413db0ce24ee7ae43521d58f9098484", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -21,7 +21,7 @@\n \n #![feature(const_fn)]\n #![feature(custom_attribute)]\n-#![feature(i128_type)]\n+#![cfg_attr(stage0, feature(i128_type))]\n #![feature(optin_builtin_traits)]\n #![allow(unused_attributes)]\n #![feature(specialization)]"}, {"sha": "87ebaaeec320cb4c94baa86b79feb96b6d58578b", "filename": "src/test/codegen/unchecked-float-casts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fcodegen%2Funchecked-float-casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fcodegen%2Funchecked-float-casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funchecked-float-casts.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -14,7 +14,6 @@\n // -Z saturating-float-casts is not enabled.\n \n #![crate_type = \"lib\"]\n-#![feature(i128_type)]\n \n // CHECK-LABEL: @f32_to_u32\n #[no_mangle]"}, {"sha": "d7586b1aa4b10a138f02efeb9946b894f8f45b9e", "filename": "src/test/mir-opt/lower_128bit_debug_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -15,7 +15,6 @@\n \n // compile-flags: -Z lower_128bit_ops=yes -C debug_assertions=yes\n \n-#![feature(i128_type)]\n #![feature(const_fn)]\n \n static TEST_SIGNED: i128 = const_signed(-222);"}, {"sha": "341682debeb350524835b5cc7abbf3a9aabf884e", "filename": "src/test/mir-opt/lower_128bit_test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -15,7 +15,6 @@\n \n // compile-flags: -Z lower_128bit_ops=yes -C debug_assertions=no\n \n-#![feature(i128_type)]\n #![feature(const_fn)]\n \n static TEST_SIGNED: i128 = const_signed(-222);"}, {"sha": "f84432abbfa0b13b13527a2262a2a60615cebd01", "filename": "src/test/run-pass/float-int-invalid-const-cast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Ffloat-int-invalid-const-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Ffloat-int-invalid-const-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-int-invalid-const-cast.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -10,7 +10,6 @@\n \n // ignore-emscripten no i128 support\n \n-#![feature(i128_type)]\n #![deny(const_err)]\n \n use std::{f32, f64};"}, {"sha": "edf278cbf64a5d4a6f0fe73d0490426e3617cefa", "filename": "src/test/run-pass/i128-ffi.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fi128-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fi128-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fi128-ffi.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -15,8 +15,6 @@\n // ignore-windows\n // ignore-32bit\n \n-#![feature(i128_type)]\n-\n #[link(name = \"rust_test_helpers\", kind = \"static\")]\n extern \"C\" {\n     fn identity(f: u128) -> u128;"}, {"sha": "baf3b3399849a9143c9545c592c7f2d8551c787a", "filename": "src/test/run-pass/i128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fi128.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -12,7 +12,7 @@\n \n // compile-flags: -Z borrowck=compare\n \n-#![feature(i128_type, test)]\n+#![feature(test)]\n \n extern crate test;\n use test::black_box as b;"}, {"sha": "7a8ff1befc7f079cffedf66b6beede6a0d9b6ac2", "filename": "src/test/run-pass/intrinsics-integer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-emscripten no i128 support\n \n-#![feature(intrinsics, i128_type)]\n+#![feature(intrinsics)]\n \n mod rusti {\n     extern \"rust-intrinsic\" {"}, {"sha": "e038062ff9ae79edd80c3ebc380a858e5c957b83", "filename": "src/test/run-pass/issue-38763.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fissue-38763.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fissue-38763.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-38763.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-emscripten\n \n-#![feature(i128_type)]\n-\n #[repr(C)]\n pub struct Foo(i128);\n "}, {"sha": "31a3b7233d8cd1f4f66179c0f2e0d612d8c6ae65", "filename": "src/test/run-pass/issue-38987.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fissue-38987.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fissue-38987.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-38987.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(i128_type)]\n \n fn main() {\n     let _ = -0x8000_0000_0000_0000_0000_0000_0000_0000i128;"}, {"sha": "2135b3f8764c005f9d077bb229029d0afae59be5", "filename": "src/test/run-pass/next-power-of-two-overflow-debug.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-debug.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -12,8 +12,6 @@\n // ignore-wasm32-bare compiled with panic=abort by default\n // ignore-emscripten dies with an LLVM error\n \n-#![feature(i128_type)]\n-\n use std::panic;\n \n fn main() {"}, {"sha": "b05c1863d902da1fe4f2687b8dbab394da94d85e", "filename": "src/test/run-pass/next-power-of-two-overflow-ndebug.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-ndebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-ndebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-ndebug.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -11,8 +11,6 @@\n // compile-flags: -C debug_assertions=no\n // ignore-emscripten dies with an LLVM error\n \n-#![feature(i128_type)]\n-\n fn main() {\n     for i in 129..256 {\n         assert_eq!((i as u8).next_power_of_two(), 0);"}, {"sha": "d1a0901bb3d6c6cf39f3bf39afa2aea131d5db7f", "filename": "src/test/run-pass/saturating-float-casts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fsaturating-float-casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fsaturating-float-casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsaturating-float-casts.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -11,7 +11,7 @@\n // Tests saturating float->int casts. See u128-as-f32.rs for the opposite direction.\n // compile-flags: -Z saturating-float-casts\n \n-#![feature(test, i128, i128_type, stmt_expr_attributes)]\n+#![feature(test, i128, stmt_expr_attributes)]\n #![deny(overflowing_literals)]\n extern crate test;\n "}, {"sha": "3531a961befdd67d9ac8e0790275151311e8559a", "filename": "src/test/run-pass/u128-as-f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fu128-as-f32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fu128-as-f32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fu128-as-f32.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-emscripten u128 not supported\n \n-#![feature(test, i128, i128_type)]\n+#![feature(test, i128)]\n #![deny(overflowing_literals)]\n extern crate test;\n "}, {"sha": "d649b3b74d39a451838f8289e616ea76467099f8", "filename": "src/test/run-pass/u128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fu128.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -12,7 +12,7 @@\n \n // compile-flags: -Z borrowck=compare\n \n-#![feature(i128_type, test)]\n+#![feature(test)]\n \n extern crate test;\n use test::black_box as b;"}, {"sha": "ddb49a3e5d92a934d853e1553693a8481035d5f2", "filename": "src/test/ui/feature-gate-i128_type.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5e4603f99066eaf2c1cf19ac3afbac9057b1e177/src%2Ftest%2Fui%2Ffeature-gate-i128_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e4603f99066eaf2c1cf19ac3afbac9057b1e177/src%2Ftest%2Fui%2Ffeature-gate-i128_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-i128_type.rs?ref=5e4603f99066eaf2c1cf19ac3afbac9057b1e177", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn test2() {\n-    0i128; //~ ERROR 128-bit integers are not stable\n-}\n-\n-fn test2_2() {\n-    0u128; //~ ERROR 128-bit integers are not stable\n-}\n-"}, {"sha": "eb3b29f4f5594eed50a9414dfbd9e97849a248ef", "filename": "src/test/ui/feature-gate-i128_type.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5e4603f99066eaf2c1cf19ac3afbac9057b1e177/src%2Ftest%2Fui%2Ffeature-gate-i128_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e4603f99066eaf2c1cf19ac3afbac9057b1e177/src%2Ftest%2Fui%2Ffeature-gate-i128_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-i128_type.stderr?ref=5e4603f99066eaf2c1cf19ac3afbac9057b1e177", "patch": "@@ -1,19 +0,0 @@\n-error[E0658]: 128-bit integers are not stable (see issue #35118)\n-  --> $DIR/feature-gate-i128_type.rs:12:5\n-   |\n-LL |     0i128; //~ ERROR 128-bit integers are not stable\n-   |     ^^^^^\n-   |\n-   = help: add #![feature(i128_type)] to the crate attributes to enable\n-\n-error[E0658]: 128-bit integers are not stable (see issue #35118)\n-  --> $DIR/feature-gate-i128_type.rs:16:5\n-   |\n-LL |     0u128; //~ ERROR 128-bit integers are not stable\n-   |     ^^^^^\n-   |\n-   = help: add #![feature(i128_type)] to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "cd65b9d922337345dcfbc457d10d8e3b8831059c", "filename": "src/test/ui/feature-gate-i128_type2.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -10,20 +10,20 @@\n \n // gate-test-i128_type\n \n-fn test1() -> i128 { //~ ERROR 128-bit type is unstable\n+fn test1() -> i128 {\n     0\n }\n \n-fn test1_2() -> u128 { //~ ERROR 128-bit type is unstable\n+fn test1_2() -> u128 {\n     0\n }\n \n fn test3() {\n-    let x: i128 = 0; //~ ERROR 128-bit type is unstable\n+    let x: i128 = 0;\n }\n \n fn test3_2() {\n-    let x: u128 = 0; //~ ERROR 128-bit type is unstable\n+    let x: u128 = 0;\n }\n \n #[repr(u128)]"}, {"sha": "fe4557899acda1b4946af6285d20fa4319812e9f", "filename": "src/test/ui/feature-gate-i128_type2.stderr", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.stderr?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -1,35 +1,3 @@\n-error[E0658]: 128-bit type is unstable (see issue #35118)\n-  --> $DIR/feature-gate-i128_type2.rs:13:15\n-   |\n-LL | fn test1() -> i128 { //~ ERROR 128-bit type is unstable\n-   |               ^^^^\n-   |\n-   = help: add #![feature(i128_type)] to the crate attributes to enable\n-\n-error[E0658]: 128-bit type is unstable (see issue #35118)\n-  --> $DIR/feature-gate-i128_type2.rs:17:17\n-   |\n-LL | fn test1_2() -> u128 { //~ ERROR 128-bit type is unstable\n-   |                 ^^^^\n-   |\n-   = help: add #![feature(i128_type)] to the crate attributes to enable\n-\n-error[E0658]: 128-bit type is unstable (see issue #35118)\n-  --> $DIR/feature-gate-i128_type2.rs:22:12\n-   |\n-LL |     let x: i128 = 0; //~ ERROR 128-bit type is unstable\n-   |            ^^^^\n-   |\n-   = help: add #![feature(i128_type)] to the crate attributes to enable\n-\n-error[E0658]: 128-bit type is unstable (see issue #35118)\n-  --> $DIR/feature-gate-i128_type2.rs:26:12\n-   |\n-LL |     let x: u128 = 0; //~ ERROR 128-bit type is unstable\n-   |            ^^^^\n-   |\n-   = help: add #![feature(i128_type)] to the crate attributes to enable\n-\n error[E0658]: repr with 128-bit type is unstable (see issue #35118)\n   --> $DIR/feature-gate-i128_type2.rs:30:1\n    |"}, {"sha": "85957831653e723dd463aa0c2b3257f0b05653c5", "filename": "src/test/ui/lint-ctypes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Flint-ctypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Flint-ctypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-ctypes.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![deny(improper_ctypes)]\n-#![feature(libc, i128_type, repr_transparent)]\n+#![feature(libc, repr_transparent)]\n \n extern crate libc;\n "}, {"sha": "30e6fb2883b8b1f86237619f87bea50d7628544d", "filename": "src/test/ui/lint/type-overflow.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce8191775b44d3773e28d647b5b17ec85508e16/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs?ref=7ce8191775b44d3773e28d647b5b17ec85508e16", "patch": "@@ -10,8 +10,6 @@\n \n // must-compile-successfully\n \n-#![feature(i128_type)]\n-\n fn main() {\n     let error = 255i8; //~WARNING literal out of range for i8\n "}]}