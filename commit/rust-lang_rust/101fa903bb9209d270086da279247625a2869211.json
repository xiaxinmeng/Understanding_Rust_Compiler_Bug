{"sha": "101fa903bb9209d270086da279247625a2869211", "node_id": "C_kwDOAAsO6NoAKDEwMWZhOTAzYmI5MjA5ZDI3MDA4NmRhMjc5MjQ3NjI1YTI4NjkyMTE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-04T19:38:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-04T19:38:09Z"}, "message": "Auto merge of #112282 - matthiaskrgr:rollup-1g9w02p, r=matthiaskrgr\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #112247 (rust-lld: add rpath entry to the correct `lib` folder)\n - #112274 (Migrate GUI colors test to original CSS color format)\n - #112277 (Don't require the output from libtest to be valid UTF-8)\n\nFailed merges:\n\n - #112251 (rustdoc: convert `if let Some()` that always matches to variable)\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "6d6bf71eb8fd86c34746171f300bf28c85e4bfdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d6bf71eb8fd86c34746171f300bf28c85e4bfdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/101fa903bb9209d270086da279247625a2869211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/101fa903bb9209d270086da279247625a2869211", "html_url": "https://github.com/rust-lang/rust/commit/101fa903bb9209d270086da279247625a2869211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/101fa903bb9209d270086da279247625a2869211/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc25fbe9844f4c8bddc316685d270a49d7b159b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc25fbe9844f4c8bddc316685d270a49d7b159b9", "html_url": "https://github.com/rust-lang/rust/commit/dc25fbe9844f4c8bddc316685d270a49d7b159b9"}, {"sha": "0716ac9bff804970b0e6326ce943ad70019a6bff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0716ac9bff804970b0e6326ce943ad70019a6bff", "html_url": "https://github.com/rust-lang/rust/commit/0716ac9bff804970b0e6326ce943ad70019a6bff"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "19e595650cf9d5ca43517bf833a9c0e336528d29", "filename": "src/bootstrap/llvm.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/101fa903bb9209d270086da279247625a2869211/src%2Fbootstrap%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101fa903bb9209d270086da279247625a2869211/src%2Fbootstrap%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fllvm.rs?ref=101fa903bb9209d270086da279247625a2869211", "patch": "@@ -834,6 +834,31 @@ impl Step for Lld {\n             }\n         }\n \n+        // LLD is built as an LLVM tool, but is distributed outside of the `llvm-tools` component,\n+        // which impacts where it expects to find LLVM's shared library. This causes #80703.\n+        //\n+        // LLD is distributed at \"$root/lib/rustlib/$host/bin/rust-lld\", but the `libLLVM-*.so` it\n+        // needs is distributed at \"$root/lib\". The default rpath of \"$ORIGIN/../lib\" points at the\n+        // lib path for LLVM tools, not the one for rust binaries.\n+        //\n+        // (The `llvm-tools` component copies the .so there for the other tools, and with that\n+        // component installed, one can successfully invoke `rust-lld` directly without rustup's\n+        // `LD_LIBRARY_PATH` overrides)\n+        //\n+        if builder.config.rpath_enabled(target)\n+            && util::use_host_linker(target)\n+            && builder.config.llvm_link_shared()\n+            && target.contains(\"linux\")\n+        {\n+            // So we inform LLD where it can find LLVM's libraries by adding an rpath entry to the\n+            // expected parent `lib` directory.\n+            //\n+            // Be careful when changing this path, we need to ensure it's quoted or escaped:\n+            // `$ORIGIN` would otherwise be expanded when the `LdFlags` are passed verbatim to\n+            // cmake.\n+            ldflags.push_all(\"-Wl,-rpath,'$ORIGIN/../../../'\");\n+        }\n+\n         configure_cmake(builder, target, &mut cfg, true, ldflags, &[]);\n         configure_llvm(builder, target, &mut cfg);\n "}, {"sha": "06ab820953d0817f1021b1495f9e99af51daac30", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/101fa903bb9209d270086da279247625a2869211/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101fa903bb9209d270086da279247625a2869211/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=101fa903bb9209d270086da279247625a2869211", "patch": "@@ -88,10 +88,10 @@ impl<'a> Renderer<'a> {\n     }\n \n     fn render_all(mut self) {\n-        let mut line = String::new();\n+        let mut line = Vec::new();\n         loop {\n             line.clear();\n-            match self.stdout.read_line(&mut line) {\n+            match self.stdout.read_until(b'\\n', &mut line) {\n                 Ok(_) => {}\n                 Err(err) if err.kind() == std::io::ErrorKind::UnexpectedEof => break,\n                 Err(err) => panic!(\"failed to read output of test runner: {err}\"),\n@@ -100,12 +100,13 @@ impl<'a> Renderer<'a> {\n                 break;\n             }\n \n-            match serde_json::from_str(&line) {\n+            match serde_json::from_slice(&line) {\n                 Ok(parsed) => self.render_message(parsed),\n                 Err(_err) => {\n                     // Handle non-JSON output, for example when --nocapture is passed.\n-                    print!(\"{line}\");\n-                    let _ = std::io::stdout().flush();\n+                    let mut stdout = std::io::stdout();\n+                    stdout.write_all(&line).unwrap();\n+                    let _ = stdout.flush();\n                 }\n             }\n         }"}, {"sha": "413b31282f7c9e710d67c12ad10efaa23cb0878e", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/101fa903bb9209d270086da279247625a2869211/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "raw_url": "https://github.com/rust-lang/rust/raw/101fa903bb9209d270086da279247625a2869211/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version?ref=101fa903bb9209d270086da279247625a2869211", "patch": "@@ -1 +1 @@\n-0.16.5\n\\ No newline at end of file\n+0.16.6\n\\ No newline at end of file"}, {"sha": "4b8337ace3a2f3165be399e635a1bef510af9909", "filename": "tests/rustdoc-gui/sidebar-mobile.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/101fa903bb9209d270086da279247625a2869211/tests%2Frustdoc-gui%2Fsidebar-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/101fa903bb9209d270086da279247625a2869211/tests%2Frustdoc-gui%2Fsidebar-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-mobile.goml?ref=101fa903bb9209d270086da279247625a2869211", "patch": "@@ -73,16 +73,16 @@ define-function: (\n \n call-function: (\"check-colors\", {\n     \"theme\": \"ayu\",\n-    \"color\": \"rgb(197, 197, 197)\",\n-    \"background\": \"rgb(20, 25, 31)\",\n+    \"color\": \"#c5c5c5\",\n+    \"background\": \"#14191f\",\n })\n call-function: (\"check-colors\", {\n     \"theme\": \"dark\",\n-    \"color\": \"rgb(221, 221, 221)\",\n-    \"background\": \"rgb(80, 80, 80)\",\n+    \"color\": \"#ddd\",\n+    \"background\": \"#505050\",\n })\n call-function: (\"check-colors\", {\n     \"theme\": \"light\",\n-    \"color\": \"rgb(0, 0, 0)\",\n-    \"background\": \"rgb(245, 245, 245)\",\n+    \"color\": \"black\",\n+    \"background\": \"#F5F5F5\",\n })"}]}