{"sha": "bb4f888a590b1fe24a386f3f40bad8537c3232a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNGY4ODhhNTkwYjFmZTI0YTM4NmYzZjQwYmFkODUzN2MzMjMyYTk=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-20T02:09:30Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:12Z"}, "message": "return the things under test so they get black_box()'ed", "tree": {"sha": "8288312562bc668903b5177f4b098ed796ecccb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8288312562bc668903b5177f4b098ed796ecccb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb4f888a590b1fe24a386f3f40bad8537c3232a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4f888a590b1fe24a386f3f40bad8537c3232a9", "html_url": "https://github.com/rust-lang/rust/commit/bb4f888a590b1fe24a386f3f40bad8537c3232a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb4f888a590b1fe24a386f3f40bad8537c3232a9/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f700d085a988b1f2a51d80879e9e55bba031008", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f700d085a988b1f2a51d80879e9e55bba031008", "html_url": "https://github.com/rust-lang/rust/commit/2f700d085a988b1f2a51d80879e9e55bba031008"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "870bb3d14026c90a88a1ded0e554196300ffeb25", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bb4f888a590b1fe24a386f3f40bad8537c3232a9/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb4f888a590b1fe24a386f3f40bad8537c3232a9/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=bb4f888a590b1fe24a386f3f40bad8537c3232a9", "patch": "@@ -7,6 +7,7 @@ fn bench_new(b: &mut Bencher) {\n         let v: Vec<u32> = Vec::new();\n         assert_eq!(v.len(), 0);\n         assert_eq!(v.capacity(), 0);\n+        v\n     })\n }\n \n@@ -17,6 +18,7 @@ fn do_bench_with_capacity(b: &mut Bencher, src_len: usize) {\n         let v: Vec<u32> = Vec::with_capacity(src_len);\n         assert_eq!(v.len(), 0);\n         assert_eq!(v.capacity(), src_len);\n+        v\n     })\n }\n \n@@ -47,6 +49,7 @@ fn do_bench_from_fn(b: &mut Bencher, src_len: usize) {\n         let dst = (0..src_len).collect::<Vec<_>>();\n         assert_eq!(dst.len(), src_len);\n         assert!(dst.iter().enumerate().all(|(i, x)| i == *x));\n+        dst\n     })\n }\n \n@@ -77,6 +80,7 @@ fn do_bench_from_elem(b: &mut Bencher, src_len: usize) {\n         let dst: Vec<usize> = repeat(5).take(src_len).collect();\n         assert_eq!(dst.len(), src_len);\n         assert!(dst.iter().all(|x| *x == 5));\n+        dst\n     })\n }\n \n@@ -109,6 +113,7 @@ fn do_bench_from_slice(b: &mut Bencher, src_len: usize) {\n         let dst = src.clone()[..].to_vec();\n         assert_eq!(dst.len(), src_len);\n         assert!(dst.iter().enumerate().all(|(i, x)| i == *x));\n+        dst\n     });\n }\n \n@@ -141,6 +146,7 @@ fn do_bench_from_iter(b: &mut Bencher, src_len: usize) {\n         let dst: Vec<_> = FromIterator::from_iter(src.clone());\n         assert_eq!(dst.len(), src_len);\n         assert!(dst.iter().enumerate().all(|(i, x)| i == *x));\n+        dst\n     });\n }\n \n@@ -175,6 +181,7 @@ fn do_bench_extend(b: &mut Bencher, dst_len: usize, src_len: usize) {\n         dst.extend(src.clone());\n         assert_eq!(dst.len(), dst_len + src_len);\n         assert!(dst.iter().enumerate().all(|(i, x)| i == *x));\n+        dst\n     });\n }\n \n@@ -224,6 +231,7 @@ fn do_bench_extend_from_slice(b: &mut Bencher, dst_len: usize, src_len: usize) {\n         dst.extend_from_slice(&src);\n         assert_eq!(dst.len(), dst_len + src_len);\n         assert!(dst.iter().enumerate().all(|(i, x)| i == *x));\n+        dst\n     });\n }\n \n@@ -271,6 +279,7 @@ fn do_bench_clone(b: &mut Bencher, src_len: usize) {\n         let dst = src.clone();\n         assert_eq!(dst.len(), src_len);\n         assert!(dst.iter().enumerate().all(|(i, x)| i == *x));\n+        dst\n     });\n }\n \n@@ -305,10 +314,10 @@ fn do_bench_clone_from(b: &mut Bencher, times: usize, dst_len: usize, src_len: u\n \n         for _ in 0..times {\n             dst.clone_from(&src);\n-\n             assert_eq!(dst.len(), src_len);\n             assert!(dst.iter().enumerate().all(|(i, x)| dst_len + i == *x));\n         }\n+        dst\n     });\n }\n "}]}