{"sha": "028f1e2e3add764956911a0f2663107cb945c0ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyOGYxZTJlM2FkZDc2NDk1NjkxMWEwZjI2NjMxMDdjYjk0NWMwZWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-17T12:28:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-17T12:28:20Z"}, "message": "Don\\t suggest import itself as a completion for import", "tree": {"sha": "1ae56e06a61a2582c40369fb80164092d98dea91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ae56e06a61a2582c40369fb80164092d98dea91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/028f1e2e3add764956911a0f2663107cb945c0ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/028f1e2e3add764956911a0f2663107cb945c0ec", "html_url": "https://github.com/rust-lang/rust/commit/028f1e2e3add764956911a0f2663107cb945c0ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/028f1e2e3add764956911a0f2663107cb945c0ec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0262c9b9c0f5091106606e959d85b1dc0cdb7e0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0262c9b9c0f5091106606e959d85b1dc0cdb7e0d", "html_url": "https://github.com/rust-lang/rust/commit/0262c9b9c0f5091106606e959d85b1dc0cdb7e0d"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "ad5fdcc4ea47c7d68295c61afbb9aba2ed251381", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/028f1e2e3add764956911a0f2663107cb945c0ec/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/028f1e2e3add764956911a0f2663107cb945c0ec/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=028f1e2e3add764956911a0f2663107cb945c0ec", "patch": "@@ -1,6 +1,10 @@\n //! Completion of names from the current scope, e.g. locals and imported items.\n \n+use hir::ScopeDef;\n+use test_utils::tested_by;\n+\n use crate::completion::{CompletionContext, Completions};\n+use ra_syntax::AstNode;\n \n pub(super) fn complete_unqualified_path(acc: &mut Completions, ctx: &CompletionContext) {\n     if !ctx.is_trivial_path {\n@@ -14,19 +18,53 @@ pub(super) fn complete_unqualified_path(acc: &mut Completions, ctx: &CompletionC\n         return;\n     }\n \n-    ctx.scope().process_all_names(&mut |name, res| acc.add_resolution(ctx, name.to_string(), &res));\n+    ctx.scope().process_all_names(&mut |name, res| {\n+        if ctx.use_item_syntax.is_some() {\n+            if let (ScopeDef::Unknown, Some(name_ref)) = (&res, &ctx.name_ref_syntax) {\n+                if name_ref.syntax().text() == name.to_string().as_str() {\n+                    tested_by!(self_fulfilling_completion);\n+                    return;\n+                }\n+            }\n+        }\n+        acc.add_resolution(ctx, name.to_string(), &res)\n+    });\n }\n \n #[cfg(test)]\n mod tests {\n     use insta::assert_debug_snapshot;\n+    use test_utils::covers;\n \n     use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n \n     fn do_reference_completion(ra_fixture: &str) -> Vec<CompletionItem> {\n         do_completion(ra_fixture, CompletionKind::Reference)\n     }\n \n+    #[test]\n+    fn self_fulfilling_completion() {\n+        covers!(self_fulfilling_completion);\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r#\"\n+                use foo<|>\n+                use std::collections;\n+                \"#,\n+            ),\n+            @r###\"\n+            [\n+                CompletionItem {\n+                    label: \"collections\",\n+                    source_range: [21; 24),\n+                    delete: [21; 24),\n+                    insert: \"collections\",\n+                },\n+            ]\n+            \"###\n+        );\n+    }\n+\n     #[test]\n     fn bind_pat_and_path_ignore_at() {\n         assert_debug_snapshot!("}, {"sha": "eee44e88697537a161cd9485465e2550e35b1cc0", "filename": "crates/ra_ide/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/028f1e2e3add764956911a0f2663107cb945c0ec/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/028f1e2e3add764956911a0f2663107cb945c0ec/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmarks.rs?ref=028f1e2e3add764956911a0f2663107cb945c0ec", "patch": "@@ -8,4 +8,5 @@ test_utils::marks!(\n     test_resolve_parent_module_on_module_decl\n     search_filters_by_range\n     dont_insert_macro_call_parens_unncessary\n+    self_fulfilling_completion\n );"}]}