{"sha": "2f6f0b55fc438764e4e11fb90ecf41ac3a739a67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNmYwYjU1ZmM0Mzg3NjRlNGUxMWZiOTBlY2Y0MWFjM2E3MzlhNjc=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-10-05T07:59:37Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-10-05T07:59:37Z"}, "message": "core: Correct description of cast::forget\n\n'managed' means something different now", "tree": {"sha": "ebd7f9c48116aa79fa7aed379776748b97df4a8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebd7f9c48116aa79fa7aed379776748b97df4a8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f6f0b55fc438764e4e11fb90ecf41ac3a739a67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f6f0b55fc438764e4e11fb90ecf41ac3a739a67", "html_url": "https://github.com/rust-lang/rust/commit/2f6f0b55fc438764e4e11fb90ecf41ac3a739a67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f6f0b55fc438764e4e11fb90ecf41ac3a739a67/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b56287d607a7445a33099f852969099d1cfd790", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b56287d607a7445a33099f852969099d1cfd790", "html_url": "https://github.com/rust-lang/rust/commit/8b56287d607a7445a33099f852969099d1cfd790"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "030f05c6eeaeb0448823c858197ee6ce50ec945f", "filename": "src/libcore/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f6f0b55fc438764e4e11fb90ecf41ac3a739a67/src%2Flibcore%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f6f0b55fc438764e4e11fb90ecf41ac3a739a67/src%2Flibcore%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcast.rs?ref=2f6f0b55fc438764e4e11fb90ecf41ac3a739a67", "patch": "@@ -19,7 +19,7 @@ pub unsafe fn reinterpret_cast<T, U>(src: &T) -> U {\n  * The forget function will take ownership of the provided value but neglect\n  * to run any required cleanup or memory-management operations on it. This\n  * can be used for various acts of magick, particularly when using\n- * reinterpret_cast on managed pointer types.\n+ * reinterpret_cast on pointer types.\n  */\n #[inline(always)]\n pub unsafe fn forget<T>(thing: T) { rusti::forget(move thing); }"}]}