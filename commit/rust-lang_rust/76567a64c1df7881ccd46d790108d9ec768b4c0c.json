{"sha": "76567a64c1df7881ccd46d790108d9ec768b4c0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NTY3YTY0YzFkZjc4ODFjY2Q0NmQ3OTAxMDhkOWVjNzY4YjRjMGM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-04-02T12:09:43Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-04-02T12:09:43Z"}, "message": "Fix parsing of patterns in macros", "tree": {"sha": "848edefe9ed0caf04f41dd6d6caa3a60b2300bdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/848edefe9ed0caf04f41dd6d6caa3a60b2300bdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76567a64c1df7881ccd46d790108d9ec768b4c0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76567a64c1df7881ccd46d790108d9ec768b4c0c", "html_url": "https://github.com/rust-lang/rust/commit/76567a64c1df7881ccd46d790108d9ec768b4c0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76567a64c1df7881ccd46d790108d9ec768b4c0c/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35c1bdb2b44afd11603ec7bff6f31e6b4990699b", "url": "https://api.github.com/repos/rust-lang/rust/commits/35c1bdb2b44afd11603ec7bff6f31e6b4990699b", "html_url": "https://github.com/rust-lang/rust/commit/35c1bdb2b44afd11603ec7bff6f31e6b4990699b"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "62c03f0e12e3b94df8475e7dc25af50151a25a45", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/76567a64c1df7881ccd46d790108d9ec768b4c0c/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76567a64c1df7881ccd46d790108d9ec768b4c0c/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=76567a64c1df7881ccd46d790108d9ec768b4c0c", "patch": "@@ -3160,7 +3160,9 @@ impl<'a> Parser<'a> {\n                 // Parse pattern starting with a path\n                 if self.token.is_plain_ident() && self.look_ahead(1, |t| *t != token::DotDotDot &&\n                         *t != token::OpenDelim(token::Brace) &&\n-                        *t != token::OpenDelim(token::Paren)) {\n+                        *t != token::OpenDelim(token::Paren) &&\n+                        // Contrary to its definition, a plain ident can be followed by :: in macros\n+                        *t != token::ModSep) {\n                     // Plain idents have some extra abilities here compared to general paths\n                     if self.look_ahead(1, |t| *t == token::Not) {\n                         // Parse macro invocation"}]}