{"sha": "06364bd46019bc598d5c8eb16ae1481d57827530", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MzY0YmQ0NjAxOWJjNTk4ZDVjOGViMTZhZTE0ODFkNTc4Mjc1MzA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-07-28T18:27:10Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-07-28T18:27:10Z"}, "message": "Move blanket implementations generation into its own function", "tree": {"sha": "69ffaad25e6256515856ed1ea3aebeb5356a495c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69ffaad25e6256515856ed1ea3aebeb5356a495c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06364bd46019bc598d5c8eb16ae1481d57827530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06364bd46019bc598d5c8eb16ae1481d57827530", "html_url": "https://github.com/rust-lang/rust/commit/06364bd46019bc598d5c8eb16ae1481d57827530", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06364bd46019bc598d5c8eb16ae1481d57827530/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdbb5b946958045e9f3a51224a029637ab1bb087", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdbb5b946958045e9f3a51224a029637ab1bb087", "html_url": "https://github.com/rust-lang/rust/commit/bdbb5b946958045e9f3a51224a029637ab1bb087"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "c30d6817b466404d89e5c75c32f5558522dc4dd7", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/06364bd46019bc598d5c8eb16ae1481d57827530/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06364bd46019bc598d5c8eb16ae1481d57827530/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=06364bd46019bc598d5c8eb16ae1481d57827530", "patch": "@@ -111,30 +111,14 @@ impl<'a, 'tcx, 'rcx> AutoTraitFinder<'a, 'tcx, 'rcx> {\n         }\n     }\n \n-    pub fn get_auto_trait_impls<F>(\n+    pub fn get_blanket_impls<F>(\n         &self,\n         def_id: DefId,\n         def_ctor: &F,\n         name: Option<String>,\n+        generics: &ty::Generics,\n     ) -> Vec<Item>\n     where F: Fn(DefId) -> Def {\n-        if self.cx\n-            .tcx\n-            .get_attrs(def_id)\n-            .lists(\"doc\")\n-            .has_word(\"hidden\")\n-        {\n-            debug!(\n-                \"get_auto_trait_impls(def_id={:?}, def_ctor=...): item has doc('hidden'), \\\n-                 aborting\",\n-                def_id\n-            );\n-            return Vec::new();\n-        }\n-\n-        let tcx = self.cx.tcx;\n-        let generics = self.cx.tcx.generics_of(def_id);\n-\n         let ty = self.cx.tcx.type_of(def_id);\n         let mut traits = Vec::new();\n         if self.cx.access_levels.borrow().is_doc_reachable(def_id) {\n@@ -228,6 +212,32 @@ impl<'a, 'tcx, 'rcx> AutoTraitFinder<'a, 'tcx, 'rcx> {\n                 });\n             }\n         }\n+        traits\n+    }\n+\n+    pub fn get_auto_trait_impls<F>(\n+        &self,\n+        def_id: DefId,\n+        def_ctor: &F,\n+        name: Option<String>,\n+    ) -> Vec<Item>\n+    where F: Fn(DefId) -> Def {\n+        if self.cx\n+            .tcx\n+            .get_attrs(def_id)\n+            .lists(\"doc\")\n+            .has_word(\"hidden\")\n+        {\n+            debug!(\n+                \"get_auto_trait_impls(def_id={:?}, def_ctor=...): item has doc('hidden'), \\\n+                 aborting\",\n+                def_id\n+            );\n+            return Vec::new();\n+        }\n+\n+        let tcx = self.cx.tcx;\n+        let generics = self.cx.tcx.generics_of(def_id);\n \n         debug!(\n             \"get_auto_trait_impls(def_id={:?}, def_ctor=..., generics={:?}\",\n@@ -252,7 +262,7 @@ impl<'a, 'tcx, 'rcx> AutoTraitFinder<'a, 'tcx, 'rcx> {\n                 def_ctor,\n                 tcx.require_lang_item(lang_items::SyncTraitLangItem),\n             ).into_iter())\n-            .chain(traits.into_iter())\n+            .chain(self.get_blanket_impls(def_id, def_ctor, name, &generics).into_iter())\n             .collect();\n \n         debug!("}]}