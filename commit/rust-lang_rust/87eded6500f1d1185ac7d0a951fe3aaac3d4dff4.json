{"sha": "87eded6500f1d1185ac7d0a951fe3aaac3d4dff4", "node_id": "C_kwDOAAsO6NoAKDg3ZWRlZDY1MDBmMWQxMTg1YWM3ZDBhOTUxZmUzYWFhYzNkNGRmZjQ", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-06-21T09:18:27Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-06-23T00:21:04Z"}, "message": "Fix `extra_unused_lifetimes` false positive", "tree": {"sha": "821c8074331bb0a5f69fa7475919012397be4ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/821c8074331bb0a5f69fa7475919012397be4ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87eded6500f1d1185ac7d0a951fe3aaac3d4dff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87eded6500f1d1185ac7d0a951fe3aaac3d4dff4", "html_url": "https://github.com/rust-lang/rust/commit/87eded6500f1d1185ac7d0a951fe3aaac3d4dff4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87eded6500f1d1185ac7d0a951fe3aaac3d4dff4/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9fea1737e34da3afedf4a0d35ea4866ce7f87a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9fea1737e34da3afedf4a0d35ea4866ce7f87a1", "html_url": "https://github.com/rust-lang/rust/commit/f9fea1737e34da3afedf4a0d35ea4866ce7f87a1"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "5c0bd57ac5097bc3137d154d38cb8c539b2738e0", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87eded6500f1d1185ac7d0a951fe3aaac3d4dff4/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87eded6500f1d1185ac7d0a951fe3aaac3d4dff4/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=87eded6500f1d1185ac7d0a951fe3aaac3d4dff4", "patch": "@@ -92,7 +92,9 @@ impl<'tcx> LateLintPass<'tcx> for Lifetimes {\n         if let ItemKind::Fn(ref sig, generics, id) = item.kind {\n             check_fn_inner(cx, sig.decl, Some(id), None, generics, item.span, true);\n         } else if let ItemKind::Impl(impl_) = item.kind {\n-            report_extra_impl_lifetimes(cx, impl_);\n+            if !item.span.from_expansion() {\n+                report_extra_impl_lifetimes(cx, impl_);\n+            }\n         }\n     }\n "}]}