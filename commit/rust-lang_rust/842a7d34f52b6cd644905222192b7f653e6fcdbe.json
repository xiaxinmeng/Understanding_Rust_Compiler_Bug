{"sha": "842a7d34f52b6cd644905222192b7f653e6fcdbe", "node_id": "C_kwDOAAsO6NoAKDg0MmE3ZDM0ZjUyYjZjZDY0NDkwNTIyMjE5MmI3ZjY1M2U2ZmNkYmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-30T21:38:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-30T21:38:26Z"}, "message": "Rollup merge of #102492 - compiler-errors:simplify-deny-assoc-bindings, r=cjgillot\n\nDon't lower assoc bindings just to deny them\n\nSome clean-up: https://github.com/rust-lang/rust/pull/102338#discussion_r981590931", "tree": {"sha": "09a76b8911ef2a55a9ca679e7485ab71f666c5a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09a76b8911ef2a55a9ca679e7485ab71f666c5a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/842a7d34f52b6cd644905222192b7f653e6fcdbe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjN2HSCRBK7hj4Ov3rIwAAsOAIAIr/hdF5BmsDXXVBo2adlFoA\njoKcqEQM6ZUcGYPZP0R/6QuS/hO6it5/SpIfOz8jSkW0CEdI7nZ0GWz/htEqnlPk\nk2va4Om8F5qHq/mnLvmxY8zPT/rYo27ZWx4FZsbI+hlixls63CZIHBlOxRAhr86H\nP6JT28SWB+Qyi1BDZW/B5e7nsajPcxwAniSTZ8ErGt0lE7kGEVVgEGEAETliFpD9\n6aOGbo6kFqbPhlOVlUAp7B43Ljs9ldVla/pwRymFQt5GqQk95/iKQvyXz1SP3Nex\nx8d7I81j8DTwRmkr+VzI4A4jxnyjFnX8Mp8uqMNNEWf8KEJ5XKLoqfMFO9c2zWw=\n=gOQQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 09a76b8911ef2a55a9ca679e7485ab71f666c5a4\nparent 808f197ed40ce0ded9e22ad8806e44c7283ef7b9\nparent 3722ad4c26d650b113353e264a91c7f2ddf324ae\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1664573906 +0200\ncommitter GitHub <noreply@github.com> 1664573906 +0200\n\nRollup merge of #102492 - compiler-errors:simplify-deny-assoc-bindings, r=cjgillot\n\nDon't lower assoc bindings just to deny them\n\nSome clean-up: https://github.com/rust-lang/rust/pull/102338#discussion_r981590931\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/842a7d34f52b6cd644905222192b7f653e6fcdbe", "html_url": "https://github.com/rust-lang/rust/commit/842a7d34f52b6cd644905222192b7f653e6fcdbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/842a7d34f52b6cd644905222192b7f653e6fcdbe/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/808f197ed40ce0ded9e22ad8806e44c7283ef7b9", "html_url": "https://github.com/rust-lang/rust/commit/808f197ed40ce0ded9e22ad8806e44c7283ef7b9"}, {"sha": "3722ad4c26d650b113353e264a91c7f2ddf324ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/3722ad4c26d650b113353e264a91c7f2ddf324ae", "html_url": "https://github.com/rust-lang/rust/commit/3722ad4c26d650b113353e264a91c7f2ddf324ae"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "fbb0c8918d2bd8f678acd2a9943d50faaa78ac7f", "filename": "compiler/rustc_hir_analysis/src/astconv/generics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/842a7d34f52b6cd644905222192b7f653e6fcdbe/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/842a7d34f52b6cd644905222192b7f653e6fcdbe/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs?ref=842a7d34f52b6cd644905222192b7f653e6fcdbe", "patch": "@@ -448,8 +448,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         let infer_lifetimes =\n             (gen_pos != GenericArgPosition::Type || infer_args) && !gen_args.has_lifetime_params();\n \n-        if gen_pos != GenericArgPosition::Type && !gen_args.bindings.is_empty() {\n-            Self::prohibit_assoc_ty_binding(tcx, gen_args.bindings[0].span);\n+        if gen_pos != GenericArgPosition::Type && let Some(b) = gen_args.bindings.first() {\n+            Self::prohibit_assoc_ty_binding(tcx, b.span);\n         }\n \n         let explicit_late_bound ="}, {"sha": "ea6da299b8fc8529f09b6ce7ec659c1d959b72a2", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/842a7d34f52b6cd644905222192b7f653e6fcdbe/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/842a7d34f52b6cd644905222192b7f653e6fcdbe/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=842a7d34f52b6cd644905222192b7f653e6fcdbe", "patch": "@@ -276,9 +276,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             item_segment.infer_args,\n             None,\n         );\n-        let assoc_bindings = self.create_assoc_bindings_for_generic_args(item_segment.args());\n-\n-        if let Some(b) = assoc_bindings.first() {\n+        if let Some(b) = item_segment.args().bindings.first() {\n             Self::prohibit_assoc_ty_binding(self.tcx(), b.span);\n         }\n \n@@ -605,8 +603,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             None,\n         );\n \n-        let assoc_bindings = self.create_assoc_bindings_for_generic_args(item_segment.args());\n-        if let Some(b) = assoc_bindings.first() {\n+        if let Some(b) = item_segment.args().bindings.first() {\n             Self::prohibit_assoc_ty_binding(self.tcx(), b.span);\n         }\n \n@@ -794,8 +791,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             trait_segment,\n             is_impl,\n         );\n-        let assoc_bindings = self.create_assoc_bindings_for_generic_args(trait_segment.args());\n-        if let Some(b) = assoc_bindings.first() {\n+        if let Some(b) = trait_segment.args().bindings.first() {\n             Self::prohibit_assoc_ty_binding(self.tcx(), b.span);\n         }\n         ty::TraitRef::new(trait_def_id, substs)\n@@ -2207,8 +2203,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n         for segment in segments {\n             // Only emit the first error to avoid overloading the user with error messages.\n-            if let [binding, ..] = segment.args().bindings {\n-                Self::prohibit_assoc_ty_binding(self.tcx(), binding.span);\n+            if let Some(b) = segment.args().bindings.first() {\n+                Self::prohibit_assoc_ty_binding(self.tcx(), b.span);\n                 return true;\n             }\n         }"}]}