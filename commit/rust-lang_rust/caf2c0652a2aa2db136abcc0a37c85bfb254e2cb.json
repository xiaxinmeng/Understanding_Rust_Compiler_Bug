{"sha": "caf2c0652a2aa2db136abcc0a37c85bfb254e2cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZjJjMDY1MmEyYWEyZGIxMzZhYmNjMGEzN2M4NWJmYjI1NGUyY2I=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-31T00:47:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T00:47:27Z"}, "message": "Rollup merge of #80945 - sdroege:downcast-send-sync, r=m-ou-se\n\nAdd Box::downcast() for dyn Any + Send + Sync\n\nLooks like a plain omission, but unfortunately I just needed that in my code :)", "tree": {"sha": "6027f0bedd2ae2df2c4967e4e6442a30a4e38856", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6027f0bedd2ae2df2c4967e4e6442a30a4e38856"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caf2c0652a2aa2db136abcc0a37c85bfb254e2cb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFf4gCRBK7hj4Ov3rIwAAdHIIAFEsbVN6UxXRCvTvFKN9YhlG\nnKC00NX3LTapZf0vTNU/eI5GF1kQgo2n/pZ8g/pcMaxK72Czq9rqRH/Ijk9OxkDm\nHh7vaVzpSScjCag12mcrl6+lXWtWVctTV0g+qaf30vsMi6XIIAxIcyc57fyHt4eo\nXP+QfxAX8aEqkbrgVoOIBkBj2YaOWaufzSdESWfcTCOQ7MTsOl6AhYBCUGPaoT9t\nzDQj58EetSUSfcGDAyFUpCFN0uDnfehONAptcCLwosXsU2rhtiRfO8MAAPEvDLIc\nkYDseXB8O+XEIP0YKLuBHTdJeKAP0l9CQcS7b2q1nvuubVYwyWRcrZsS8dh8VMc=\n=VnqN\n-----END PGP SIGNATURE-----\n", "payload": "tree 6027f0bedd2ae2df2c4967e4e6442a30a4e38856\nparent 1e99f26894a766f5861ae2805c13e915e74493f0\nparent 12014d29b89557836a22fa46d74101371d81daf1\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612054047 +0100\ncommitter GitHub <noreply@github.com> 1612054047 +0100\n\nRollup merge of #80945 - sdroege:downcast-send-sync, r=m-ou-se\n\nAdd Box::downcast() for dyn Any + Send + Sync\n\nLooks like a plain omission, but unfortunately I just needed that in my code :)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caf2c0652a2aa2db136abcc0a37c85bfb254e2cb", "html_url": "https://github.com/rust-lang/rust/commit/caf2c0652a2aa2db136abcc0a37c85bfb254e2cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caf2c0652a2aa2db136abcc0a37c85bfb254e2cb/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e99f26894a766f5861ae2805c13e915e74493f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e99f26894a766f5861ae2805c13e915e74493f0", "html_url": "https://github.com/rust-lang/rust/commit/1e99f26894a766f5861ae2805c13e915e74493f0"}, {"sha": "12014d29b89557836a22fa46d74101371d81daf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/12014d29b89557836a22fa46d74101371d81daf1", "html_url": "https://github.com/rust-lang/rust/commit/12014d29b89557836a22fa46d74101371d81daf1"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "949079e5b699c032aad6972e84c918d1c1f59ad2", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/caf2c0652a2aa2db136abcc0a37c85bfb254e2cb/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf2c0652a2aa2db136abcc0a37c85bfb254e2cb/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=caf2c0652a2aa2db136abcc0a37c85bfb254e2cb", "patch": "@@ -1372,6 +1372,39 @@ impl<A: Allocator> Box<dyn Any + Send, A> {\n     }\n }\n \n+impl<A: Allocator> Box<dyn Any + Send + Sync, A> {\n+    #[inline]\n+    #[stable(feature = \"box_send_sync_any_downcast\", since = \"1.51.0\")]\n+    /// Attempt to downcast the box to a concrete type.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::any::Any;\n+    ///\n+    /// fn print_if_string(value: Box<dyn Any + Send + Sync>) {\n+    ///     if let Ok(string) = value.downcast::<String>() {\n+    ///         println!(\"String ({}): {}\", string.len(), string);\n+    ///     }\n+    /// }\n+    ///\n+    /// let my_string = \"Hello World\".to_string();\n+    /// print_if_string(Box::new(my_string));\n+    /// print_if_string(Box::new(0i8));\n+    /// ```\n+    pub fn downcast<T: Any>(self) -> Result<Box<T, A>, Self> {\n+        if self.is::<T>() {\n+            unsafe {\n+                let (raw, alloc): (*mut (dyn Any + Send + Sync), _) =\n+                    Box::into_raw_with_allocator(self);\n+                Ok(Box::from_raw_in(raw as *mut T, alloc))\n+            }\n+        } else {\n+            Err(self)\n+        }\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: fmt::Display + ?Sized, A: Allocator> fmt::Display for Box<T, A> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {"}]}