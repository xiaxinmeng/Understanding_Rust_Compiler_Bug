{"sha": "5166f68754c58a898397e77650ae8817a2cfb9f2", "node_id": "C_kwDOAAsO6NoAKDUxNjZmNjg3NTRjNThhODk4Mzk3ZTc3NjUwYWU4ODE3YTJjZmI5ZjI", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-06T12:46:05Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-12T04:09:27Z"}, "message": "Fix #91489", "tree": {"sha": "b668552f3304814b4d8e9ca0100bb401f038a381", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b668552f3304814b4d8e9ca0100bb401f038a381"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5166f68754c58a898397e77650ae8817a2cfb9f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmG1dfcACgkQbQF6ltjm\nwvmtFxAAtNcgsbxANqflKzhgNBr43vqtWZFkRLwkQcXlaA4HUU8Gqhf1KmCgPfJV\n0Q61Gm9+i7Kl/dVleqXVj2HgLsHOm1mOXE5vLV9emc7rMmicp1ZFdtJF1Pn+JPXY\n9oXikjJdzWYQ3IUc276LydPWxjhrFL1nMACAQZW3U7YWG+LXH52m3fs3RTa9cXN1\n+TPd5a/hhCCclO6Jpu3XDGfLpVjGKQzhBNj46aqRpgBfmlE0Iy3IvCpcw+6P+3DH\nkDi0d9qE/vzCuOscgKBy3c8V4+HQV2z+fh3QT1p73/1CIC6VqP7NjbAgHWq5U9z5\ncv0f7uaX+qgUToL3jDtVhmv+jAcACP1fJ9ogbPD7bf0EsdTinVEgdencW2Qjfh6Z\nAR/8iz720V6hQp71MfDwwR6wBs4seaMF11jn9qHCAvoq++A5F3Klubj/Yuln8otw\n2PbDm1GC3YVlRxoAQvOrsCNd9Qb9mlHtfAFYe0rKwncn02SykZwcPxBxa80WOBB0\n56Fic7FeTBSvXRN4k+f77oqUIFEHOFfCaHdmJA1Gwp5A/Gq5gspWCW5jjXcpY4KC\nkArbxok+ScRjuUWRrTFPkn7nhPIzTPP6o/YIGcZjApRx8arJPqqPEpmzqlMF7t/4\nZSmFRr4faGmOoG45Jw97Bk3y4ewtn/A6yyRM7aUdb9trDl7ajQs=\n=1Z1g\n-----END PGP SIGNATURE-----", "payload": "tree b668552f3304814b4d8e9ca0100bb401f038a381\nparent e70e4d499dd9dd1f7ff3717b9d91ca5dd0757143\nauthor Deadbeef <ent3rm4n@gmail.com> 1638794765 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1639282167 +0800\n\nFix #91489\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5166f68754c58a898397e77650ae8817a2cfb9f2", "html_url": "https://github.com/rust-lang/rust/commit/5166f68754c58a898397e77650ae8817a2cfb9f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5166f68754c58a898397e77650ae8817a2cfb9f2/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70e4d499dd9dd1f7ff3717b9d91ca5dd0757143", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70e4d499dd9dd1f7ff3717b9d91ca5dd0757143", "html_url": "https://github.com/rust-lang/rust/commit/e70e4d499dd9dd1f7ff3717b9d91ca5dd0757143"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "d94df488ccd931cd8e0a966dc124a72ab4a763ec", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5166f68754c58a898397e77650ae8817a2cfb9f2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5166f68754c58a898397e77650ae8817a2cfb9f2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=5166f68754c58a898397e77650ae8817a2cfb9f2", "patch": "@@ -1319,6 +1319,11 @@ impl<'tcx> ParamEnv<'tcx> {\n         self\n     }\n \n+    pub fn without_const(mut self) -> Self {\n+        self.packed.set_tag(ParamTag { constness: hir::Constness::NotConst, ..self.packed.tag() });\n+        self\n+    }\n+\n     /// Returns a new parameter environment with the same clauses, but\n     /// which \"reveals\" the true results of projections in all cases\n     /// (even for associated types that are specializable). This is"}, {"sha": "c87ab0d410cd9c61dd108dc6ad3012e360becd79", "filename": "compiler/rustc_typeck/src/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5166f68754c58a898397e77650ae8817a2cfb9f2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5166f68754c58a898397e77650ae8817a2cfb9f2/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs?ref=5166f68754c58a898397e77650ae8817a2cfb9f2", "patch": "@@ -80,7 +80,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         let generator_types = check_fn(\n             self,\n-            self.param_env,\n+            self.param_env.without_const(),\n             liberated_sig,\n             decl,\n             expr.hir_id,"}, {"sha": "79e62617eadb9a9f48873810114fc1b2fbb55791", "filename": "src/test/ui/rfc-2632-const-trait-impl/non-const-op-in-closure-in-const.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5166f68754c58a898397e77650ae8817a2cfb9f2/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fnon-const-op-in-closure-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5166f68754c58a898397e77650ae8817a2cfb9f2/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fnon-const-op-in-closure-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fnon-const-op-in-closure-in-const.rs?ref=5166f68754c58a898397e77650ae8817a2cfb9f2", "patch": "@@ -0,0 +1,18 @@\n+// check-pass\n+\n+#![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n+\n+trait Convert<T> {\n+    fn to(self) -> T;\n+}\n+\n+impl<A, B> const Convert<B> for A where B: ~const From<A> {\n+    fn to(self) -> B {\n+        B::from(self)\n+    }\n+}\n+\n+const FOO: fn() -> String = || \"foo\".to();\n+\n+fn main() {}\n\\ No newline at end of file"}]}