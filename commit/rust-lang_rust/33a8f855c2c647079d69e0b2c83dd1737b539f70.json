{"sha": "33a8f855c2c647079d69e0b2c83dd1737b539f70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYThmODU1YzJjNjQ3MDc5ZDY5ZTBiMmM4M2RkMTczN2I1MzlmNzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-18T02:06:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-18T02:06:52Z"}, "message": "Make the path and path2 attributes equivalent. Remove some uses", "tree": {"sha": "5c995e8bf86ed61c20c203bac5a5e6f096368019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c995e8bf86ed61c20c203bac5a5e6f096368019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33a8f855c2c647079d69e0b2c83dd1737b539f70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33a8f855c2c647079d69e0b2c83dd1737b539f70", "html_url": "https://github.com/rust-lang/rust/commit/33a8f855c2c647079d69e0b2c83dd1737b539f70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33a8f855c2c647079d69e0b2c83dd1737b539f70/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ff99c27d05322afffbee827d13a6a226430521c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff99c27d05322afffbee827d13a6a226430521c", "html_url": "https://github.com/rust-lang/rust/commit/5ff99c27d05322afffbee827d13a6a226430521c"}], "stats": {"total": 99, "additions": 13, "deletions": 86}, "files": [{"sha": "ae37c160cbad39b272d197a180e9ae6542d46c76", "filename": "src/librustc/rustc.rc", "status": "modified", "additions": 2, "deletions": 58, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Flibrustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Flibrustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Frustc.rc?ref=33a8f855c2c647079d69e0b2c83dd1737b539f70", "patch": "@@ -53,174 +53,121 @@ mod middle {\n     mod trans {\n         #[legacy_exports];\n         #[legacy_exports]\n-        #[path = \"middle/trans/inline.rs\"]\n         mod inline;\n         #[legacy_exports]\n-        #[path = \"middle/trans/monomorphize.rs\"]\n         mod monomorphize;\n         #[legacy_exports]\n-        #[path = \"middle/trans/controlflow.rs\"]\n         mod controlflow;\n         #[legacy_exports]\n-        #[path = \"middle/trans/glue.rs\"]\n         mod glue;\n         #[legacy_exports]\n-        #[path = \"middle/trans/datum.rs\"]\n         mod datum;\n         #[legacy_exports]\n-        #[path = \"middle/trans/callee.rs\"]\n         mod callee;\n         #[legacy_exports]\n-        #[path = \"middle/trans/expr.rs\"]\n         mod expr;\n         #[legacy_exports]\n-        #[path = \"middle/trans/common.rs\"]\n         mod common;\n         #[legacy_exports]\n-        #[path = \"middle/trans/consts.rs\"]\n         mod consts;\n         #[legacy_exports]\n-        #[path = \"middle/trans/type_of.rs\"]\n         mod type_of;\n         #[legacy_exports]\n-        #[path = \"middle/trans/build.rs\"]\n         mod build;\n         #[legacy_exports]\n-        #[path = \"middle/trans/base.rs\"]\n         mod base;\n         #[legacy_exports]\n-        #[path = \"middle/trans/alt.rs\"]\n         mod alt;\n         #[legacy_exports]\n-        #[path = \"middle/trans/uniq.rs\"]\n         mod uniq;\n         #[legacy_exports]\n-        #[path = \"middle/trans/closure.rs\"]\n         mod closure;\n         #[legacy_exports]\n-        #[path = \"middle/trans/tvec.rs\"]\n         mod tvec;\n         #[legacy_exports]\n-        #[path = \"middle/trans/meth.rs\"]\n         mod meth;\n         #[legacy_exports]\n-        #[path = \"middle/trans/foreign.rs\"]\n         mod foreign;\n         #[legacy_exports]\n-        #[path = \"middle/trans/reflect.rs\"]\n         mod reflect;\n         #[legacy_exports]\n-        #[path = \"middle/trans/shape.rs\"]\n         mod shape;\n         #[legacy_exports]\n-        #[path = \"middle/trans/debuginfo.rs\"]\n         mod debuginfo;\n         #[legacy_exports]\n-        #[path = \"middle/trans/type_use.rs\"]\n         mod type_use;\n         #[legacy_exports]\n-        #[path = \"middle/trans/reachable.rs\"]\n         mod reachable;\n-        #[path = \"middle/trans/machine.rs\"]\n         mod machine;\n     }\n     #[legacy_exports]\n-    #[path = \"middle/ty.rs\"]\n     mod ty;\n     #[legacy_exports]\n-    #[path = \"middle/resolve.rs\"]\n     mod resolve;\n-    #[path = \"middle/typeck/mod.rs\"]\n+    #[path2 = \"typeck/mod.rs\"]\n     pub mod typeck;\n     #[legacy_exports]\n-    #[path = \"middle/check_loop.rs\"]\n     mod check_loop;\n     #[legacy_exports]\n-    #[path = \"middle/check_alt.rs\"]\n     mod check_alt;\n     #[legacy_exports]\n-    #[path = \"middle/check_const.rs\"]\n     mod check_const;\n     #[legacy_exports]\n-    #[path = \"middle/lint.rs\"]\n     mod lint;\n-    #[path = \"middle/borrowck/mod.rs\"]\n+    #[path2 = \"borrowck/mod.rs\"]\n     pub mod borrowck;\n     #[legacy_exports]\n-    #[path = \"middle/mem_categorization.rs\"]\n     mod mem_categorization;\n     #[legacy_exports]\n-    #[path = \"middle/liveness.rs\"]\n     mod liveness;\n     #[legacy_exports]\n-    #[path = \"middle/kind.rs\"]\n     mod kind;\n     #[legacy_exports]\n-    #[path = \"middle/freevars.rs\"]\n     mod freevars;\n     #[legacy_exports]\n-    #[path = \"middle/capture.rs\"]\n     mod capture;\n     #[legacy_exports]\n-    #[path = \"middle/pat_util.rs\"]\n     mod pat_util;\n     #[legacy_exports]\n-    #[path = \"middle/region.rs\"]\n     mod region;\n     #[legacy_exports]\n-    #[path = \"middle/const_eval.rs\"]\n     mod const_eval;\n     #[legacy_exports]\n-    #[path = \"middle/astencode.rs\"]\n     mod astencode;\n     #[legacy_exports]\n-    #[path = \"middle/lang_items.rs\"]\n     mod lang_items;\n     #[legacy_exports]\n-    #[path = \"middle/privacy.rs\"]\n     mod privacy;\n-    #[path = \"middle/mode.rs\"]\n     mod mode;\n }\n \n mod front {\n     #[legacy_exports];\n     #[legacy_exports]\n-    #[path = \"front/config.rs\"]\n     mod config;\n     #[legacy_exports]\n-    #[path = \"front/test.rs\"]\n     mod test;\n     #[legacy_exports]\n-    #[path = \"front/core_inject.rs\"]\n     mod core_inject;\n     #[legacy_exports]\n-    #[path = \"front/intrinsic_inject.rs\"]\n     mod intrinsic_inject;\n }\n \n mod back {\n     #[legacy_exports];\n     #[legacy_exports]\n-    #[path = \"back/link.rs\"]\n     mod link;\n     #[legacy_exports]\n-    #[path = \"back/abi.rs\"]\n     mod abi;\n     #[legacy_exports]\n-    #[path = \"back/upcall.rs\"]\n     mod upcall;\n     #[legacy_exports]\n-    #[path = \"back/x86.rs\"]\n     mod x86;\n     #[legacy_exports]\n-    #[path = \"back/x86_64.rs\"]\n     mod x86_64;\n     #[legacy_exports]\n-    #[path = \"back/rpath.rs\"]\n     mod rpath;\n     #[legacy_exports]\n-    #[path = \"back/target_strs.rs\"]\n     mod target_strs;\n }\n \n@@ -233,17 +180,14 @@ mod driver;\n mod util {\n     #[legacy_exports];\n     #[legacy_exports]\n-    #[path = \"util/common.rs\"]\n     mod common;\n     #[legacy_exports]\n-    #[path = \"util/ppaux.rs\"]\n     mod ppaux;\n }\n \n mod lib {\n     #[legacy_exports];\n     #[legacy_exports]\n-    #[path = \"lib/llvm.rs\"]\n     mod llvm;\n }\n "}, {"sha": "d5aec079d168ead9d57ae978e9934b7a75d9854d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=33a8f855c2c647079d69e0b2c83dd1737b539f70", "patch": "@@ -3018,7 +3018,7 @@ impl Parser {\n     fn push_mod_path(id: ident, attrs: ~[ast::attribute]) {\n         let default_path = self.sess.interner.get(id);\n         let file_path = match ::attr::first_attr_value_str_by_name(\n-            attrs, ~\"path2\") {\n+            attrs, ~\"path\") {\n \n             Some(ref d) => (*d),\n             None => copy *default_path\n@@ -3038,13 +3038,14 @@ impl Parser {\n         let prefix = prefix.dir_path();\n         let mod_path = Path(\".\").push_many(self.mod_path_stack);\n         let default_path = self.sess.interner.get(id) + ~\".rs\";\n+        // XXX path2 and path are synonyms. Remove path2 after snapshot\n         let file_path = match ::attr::first_attr_value_str_by_name(\n             outer_attrs, ~\"path2\") {\n \n             Some(ref d) => mod_path.push(*d),\n             None => match ::attr::first_attr_value_str_by_name(\n                 outer_attrs, ~\"path\") {\n-                Some(ref d) => Path(*d),\n+                Some(ref d) => mod_path.push(*d),\n                 None => mod_path.push(default_path)\n             }\n         };"}, {"sha": "50dcf5de63db9e0e32a9430ec6ffe54eb64208c2", "filename": "src/libsyntax/syntax.rc", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Flibsyntax%2Fsyntax.rc", "raw_url": "https://github.com/rust-lang/rust/raw/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Flibsyntax%2Fsyntax.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rc?ref=33a8f855c2c647079d69e0b2c83dd1737b539f70", "patch": "@@ -55,7 +55,7 @@ mod fold;\n mod util {\n     #[legacy_exports];\n     #[legacy_exports]\n-    #[path = \"util/interner.rs\"]\n+    #[path2 = \"interner.rs\"]\n     mod interner;\n }\n \n@@ -65,72 +65,54 @@ mod parse;\n mod print {\n     #[legacy_exports];\n     #[legacy_exports]\n-    #[path = \"print/pp.rs\"]\n     mod pp;\n     #[legacy_exports]\n-    #[path = \"print/pprust.rs\"]\n     mod pprust;\n }\n \n mod ext {\n     #[legacy_exports];\n     #[legacy_exports]\n-    #[path = \"ext/base.rs\"]\n     mod base;\n     #[legacy_exports]\n-    #[path = \"ext/expand.rs\"]\n     mod expand;\n \n-    #[path = \"ext/quote.rs\"]\n     mod quote;\n-    #[path = \"ext/deriving.rs\"]\n     mod deriving;\n \n     #[legacy_exports]\n-    #[path = \"ext/build.rs\"]\n     mod build;\n \n     mod tt {\n         #[legacy_exports];\n         #[legacy_exports]\n-        #[path = \"ext/tt/transcribe.rs\"]\n         mod transcribe;\n         #[legacy_exports]\n-        #[path = \"ext/tt/macro_parser.rs\"]\n         mod macro_parser;\n         #[legacy_exports]\n-        #[path = \"ext/tt/macro_rules.rs\"]\n         mod macro_rules;\n     }\n \n \n     #[legacy_exports]\n-    #[path = \"ext/fmt.rs\"]\n     mod fmt;\n     #[legacy_exports]\n-    #[path = \"ext/env.rs\"]\n     mod env;\n     #[legacy_exports]\n-    #[path = \"ext/concat_idents.rs\"]\n     mod concat_idents;\n     #[legacy_exports]\n-    #[path = \"ext/log_syntax.rs\"]\n     mod log_syntax;\n     #[legacy_exports]\n-    #[path = \"ext/auto_encode.rs\"]\n     mod auto_encode;\n     #[legacy_exports]\n-    #[path = \"ext/auto_serialize.rs\"]\n     mod auto_serialize;\n     #[legacy_exports]\n-    #[path = \"ext/source_util.rs\"]\n     mod source_util;\n \n     #[legacy_exports]\n-    #[path = \"ext/pipes/mod.rs\"]\n+    #[path2 = \"pipes/mod.rs\"]\n     mod pipes;\n \n     #[legacy_exports]\n-    #[path = \"ext/trace_macros.rs\"]\n     mod trace_macros;\n }"}, {"sha": "dd422ecda857f793d62fe860c0080a0d1fee1d7e", "filename": "src/test/run-pass/mod_dir_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs?ref=33a8f855c2c647079d69e0b2c83dd1737b539f70", "patch": "@@ -12,7 +12,7 @@\n // xfail-fast\n \n mod mod_dir_simple {\n-    #[path2 = \"test.rs\"]\n+    #[path = \"test.rs\"]\n     pub mod syrup;\n }\n "}, {"sha": "a47ff1153ea5bd2772d38fdc67f3fde580b56099", "filename": "src/test/run-pass/mod_dir_path2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs?ref=33a8f855c2c647079d69e0b2c83dd1737b539f70", "patch": "@@ -11,9 +11,9 @@\n // xfail-pretty\n // xfail-fast\n \n-#[path2 = \"mod_dir_simple\"]\n+#[path = \"mod_dir_simple\"]\n mod pancakes {\n-    #[path2 = \"test.rs\"]\n+    #[path = \"test.rs\"]\n     pub mod syrup;\n }\n "}, {"sha": "64e3a9e82776fbfe346de4547437be60dea71669", "filename": "src/test/run-pass/mod_dir_path3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs?ref=33a8f855c2c647079d69e0b2c83dd1737b539f70", "patch": "@@ -11,7 +11,7 @@\n // xfail-pretty\n // xfail-fast\n \n-#[path2 = \"mod_dir_simple\"]\n+#[path = \"mod_dir_simple\"]\n mod pancakes {\n     pub mod test;\n }"}, {"sha": "6a50d479e063edfd8039d6e3791bc30308562346", "filename": "src/test/run-pass/mod_dir_path_multi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33a8f855c2c647079d69e0b2c83dd1737b539f70/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs?ref=33a8f855c2c647079d69e0b2c83dd1737b539f70", "patch": "@@ -11,12 +11,12 @@\n // xfail-pretty\n // xfail-fast\n \n-#[path2 = \"mod_dir_simple\"]\n+#[path = \"mod_dir_simple\"]\n mod biscuits {\n     pub mod test;\n }\n \n-#[path2 = \"mod_dir_simple\"]\n+#[path = \"mod_dir_simple\"]\n mod gravy {\n     pub mod test;\n }"}]}