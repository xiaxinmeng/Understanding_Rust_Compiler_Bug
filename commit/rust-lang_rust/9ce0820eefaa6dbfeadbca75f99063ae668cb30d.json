{"sha": "9ce0820eefaa6dbfeadbca75f99063ae668cb30d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZTA4MjBlZWZhYTZkYmZlYWRiY2E3NWY5OTA2M2FlNjY4Y2IzMGQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-14T04:07:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-14T04:07:33Z"}, "message": "Rollup merge of #82804 - alexcrichton:fix-wasi, r=pnkfelix\n\nstd: Fix a bug on the wasm32-wasi target opening files\n\nThis commit fixes an issue pointed out in #82758 where LTO changed the\nbehavior of a program. It turns out that LTO was not at fault here, it\nsimply uncovered an existing bug. The bindings to\n`__wasilibc_find_relpath` assumed that the relative portion of the path\nreturned was always contained within thee input `buf` we passed in. This\nisn't actually the case, however, and sometimes the relative portion of\nthe path may reference a sub-portion of the input string itself.\n\nThe fix here is to use the relative path pointer coming out of\n`__wasilibc_find_relpath` as the source of truth. The `buf` used for\nlocal storage is discarded in this function and the relative path is\ncopied out unconditionally. We might be able to get away with some\n`Cow`-like business or such to avoid the extra allocation, but for now\nthis is probably the easiest patch to fix the original issue.", "tree": {"sha": "759700bd3a4f09c6b3a4640319721f56cbb0bf35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/759700bd3a4f09c6b3a4640319721f56cbb0bf35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ce0820eefaa6dbfeadbca75f99063ae668cb30d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgTYwFCRBK7hj4Ov3rIwAAdHIIAIS2AG0H5zBa1NjmbPf9LeEV\n6CJ20x02B+7jdI50h8YPD/a8FU5N+7e21Hv2YKvLWkz4Mqm0gRz/B5Tfn+T//LSx\nA3r+QkGem0L8RsTBaPfyW/d72ZvQ5JQu8QhXw/4ZdU9hr7H547RpzUIjNqcxjTo8\n55pDZH4G2lAMld8Er4sMvX2UmBgcbwbMhVZhL6hiING82Cb571IK3JR1Ma9zhKfd\nqx62jLdM+unC2+wAdBhMFwpM5guPo2zM8saMPWzOUy0niflNqBcUs4xix3DeKc9k\njNbddGOXXtG95MNGAcwdTD5n4SeIXpPBjbucxJBYBaW6jizsFL+w4/hvv28kPrg=\n=hmVv\n-----END PGP SIGNATURE-----\n", "payload": "tree 759700bd3a4f09c6b3a4640319721f56cbb0bf35\nparent 33614023a186133841322ac9bae70a6123f853f0\nparent d6b06b8a327ff32d083bc0494cc3195d9f8082d2\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615694853 +0900\ncommitter GitHub <noreply@github.com> 1615694853 +0900\n\nRollup merge of #82804 - alexcrichton:fix-wasi, r=pnkfelix\n\nstd: Fix a bug on the wasm32-wasi target opening files\n\nThis commit fixes an issue pointed out in #82758 where LTO changed the\nbehavior of a program. It turns out that LTO was not at fault here, it\nsimply uncovered an existing bug. The bindings to\n`__wasilibc_find_relpath` assumed that the relative portion of the path\nreturned was always contained within thee input `buf` we passed in. This\nisn't actually the case, however, and sometimes the relative portion of\nthe path may reference a sub-portion of the input string itself.\n\nThe fix here is to use the relative path pointer coming out of\n`__wasilibc_find_relpath` as the source of truth. The `buf` used for\nlocal storage is discarded in this function and the relative path is\ncopied out unconditionally. We might be able to get away with some\n`Cow`-like business or such to avoid the extra allocation, but for now\nthis is probably the easiest patch to fix the original issue.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ce0820eefaa6dbfeadbca75f99063ae668cb30d", "html_url": "https://github.com/rust-lang/rust/commit/9ce0820eefaa6dbfeadbca75f99063ae668cb30d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ce0820eefaa6dbfeadbca75f99063ae668cb30d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33614023a186133841322ac9bae70a6123f853f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/33614023a186133841322ac9bae70a6123f853f0", "html_url": "https://github.com/rust-lang/rust/commit/33614023a186133841322ac9bae70a6123f853f0"}, {"sha": "d6b06b8a327ff32d083bc0494cc3195d9f8082d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b06b8a327ff32d083bc0494cc3195d9f8082d2", "html_url": "https://github.com/rust-lang/rust/commit/d6b06b8a327ff32d083bc0494cc3195d9f8082d2"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "63c22136273fb4b9b723b6ab12aa56dc395ff466", "filename": "library/std/src/sys/wasi/fs.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9ce0820eefaa6dbfeadbca75f99063ae668cb30d/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ce0820eefaa6dbfeadbca75f99063ae668cb30d/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs?ref=9ce0820eefaa6dbfeadbca75f99063ae668cb30d", "patch": "@@ -650,13 +650,11 @@ fn open_parent(p: &Path) -> io::Result<(ManuallyDrop<WasiFd>, PathBuf)> {\n                 );\n                 return Err(io::Error::new(io::ErrorKind::Other, msg));\n             }\n-            let len = CStr::from_ptr(buf.as_ptr().cast()).to_bytes().len();\n-            buf.set_len(len);\n-            buf.shrink_to_fit();\n+            let relative = CStr::from_ptr(relative_path).to_bytes().to_vec();\n \n             return Ok((\n                 ManuallyDrop::new(WasiFd::from_raw(fd as u32)),\n-                PathBuf::from(OsString::from_vec(buf)),\n+                PathBuf::from(OsString::from_vec(relative)),\n             ));\n         }\n     }"}]}