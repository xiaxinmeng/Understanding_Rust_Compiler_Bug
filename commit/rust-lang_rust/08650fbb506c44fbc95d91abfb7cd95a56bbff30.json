{"sha": "08650fbb506c44fbc95d91abfb7cd95a56bbff30", "node_id": "C_kwDOAAsO6NoAKDA4NjUwZmJiNTA2YzQ0ZmJjOTVkOTFhYmZiN2NkOTVhNTZiYmZmMzA", "commit": {"author": {"name": "Robin Raymond", "email": "robin@robinraymond.de", "date": "2022-05-14T07:29:02Z"}, "committer": {"name": "Robin Raymond", "email": "robin@robinraymond.de", "date": "2022-06-19T07:23:32Z"}, "message": "*const to NonNull plus documentation", "tree": {"sha": "067367a4e33160f37118d77a6dc83ad16e170c43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/067367a4e33160f37118d77a6dc83ad16e170c43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08650fbb506c44fbc95d91abfb7cd95a56bbff30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08650fbb506c44fbc95d91abfb7cd95a56bbff30", "html_url": "https://github.com/rust-lang/rust/commit/08650fbb506c44fbc95d91abfb7cd95a56bbff30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08650fbb506c44fbc95d91abfb7cd95a56bbff30/comments", "author": {"login": "r-raymond", "id": 17067072, "node_id": "MDQ6VXNlcjE3MDY3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/17067072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r-raymond", "html_url": "https://github.com/r-raymond", "followers_url": "https://api.github.com/users/r-raymond/followers", "following_url": "https://api.github.com/users/r-raymond/following{/other_user}", "gists_url": "https://api.github.com/users/r-raymond/gists{/gist_id}", "starred_url": "https://api.github.com/users/r-raymond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r-raymond/subscriptions", "organizations_url": "https://api.github.com/users/r-raymond/orgs", "repos_url": "https://api.github.com/users/r-raymond/repos", "events_url": "https://api.github.com/users/r-raymond/events{/privacy}", "received_events_url": "https://api.github.com/users/r-raymond/received_events", "type": "User", "site_admin": false}, "committer": {"login": "r-raymond", "id": 17067072, "node_id": "MDQ6VXNlcjE3MDY3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/17067072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r-raymond", "html_url": "https://github.com/r-raymond", "followers_url": "https://api.github.com/users/r-raymond/followers", "following_url": "https://api.github.com/users/r-raymond/following{/other_user}", "gists_url": "https://api.github.com/users/r-raymond/gists{/gist_id}", "starred_url": "https://api.github.com/users/r-raymond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r-raymond/subscriptions", "organizations_url": "https://api.github.com/users/r-raymond/orgs", "repos_url": "https://api.github.com/users/r-raymond/repos", "events_url": "https://api.github.com/users/r-raymond/events{/privacy}", "received_events_url": "https://api.github.com/users/r-raymond/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf1238e799b18f38a9c328b6700434e38f98cec7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1238e799b18f38a9c328b6700434e38f98cec7", "html_url": "https://github.com/rust-lang/rust/commit/cf1238e799b18f38a9c328b6700434e38f98cec7"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "81693a7f5f5cdb0a536e38ec046cd10ab4ad8da4", "filename": "library/std/src/sync/rwlock.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/08650fbb506c44fbc95d91abfb7cd95a56bbff30/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08650fbb506c44fbc95d91abfb7cd95a56bbff30/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs?ref=08650fbb506c44fbc95d91abfb7cd95a56bbff30", "patch": "@@ -4,6 +4,7 @@ mod tests;\n use crate::cell::UnsafeCell;\n use crate::fmt;\n use crate::ops::{Deref, DerefMut};\n+use crate::ptr::NonNull;\n use crate::sync::{poison, LockResult, TryLockError, TryLockResult};\n use crate::sys_common::rwlock as sys;\n \n@@ -101,7 +102,7 @@ unsafe impl<T: ?Sized + Send + Sync> Sync for RwLock<T> {}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[clippy::has_significant_drop]\n pub struct RwLockReadGuard<'a, T: ?Sized + 'a> {\n-    data: *const T,\n+    data: NonNull<T>,\n     inner_lock: &'a sys::MovableRwLock,\n }\n \n@@ -510,15 +511,23 @@ impl<T> From<T> for RwLock<T> {\n }\n \n impl<'rwlock, T: ?Sized> RwLockReadGuard<'rwlock, T> {\n+    /// Create a new instance of `RwLockReadGuard<T>` from a `RwLock<T>`.\n+    ///\n+    /// It is safe to call this function if and only if `lock.inner.read()` (or\n+    /// `lock.inner.try_read()`) has been successfully called before instantiating this object.\n     unsafe fn new(lock: &'rwlock RwLock<T>) -> LockResult<RwLockReadGuard<'rwlock, T>> {\n         poison::map_result(lock.poison.borrow(), |()| RwLockReadGuard {\n+            data: NonNull::new_unchecked(lock.data.get()),\n             inner_lock: &lock.inner,\n-            data: lock.data.get(),\n         })\n     }\n }\n \n impl<'rwlock, T: ?Sized> RwLockWriteGuard<'rwlock, T> {\n+    /// Create a new instance of `RwLockReadGuard<T>` from a `RwLock<T>`.\n+    ///\n+    /// It is safe to call this function if and only if `lock.inner.write()` (or\n+    /// `lock.inner.try_write()`) has been successfully called before instantiating this object.\n     unsafe fn new(lock: &'rwlock RwLock<T>) -> LockResult<RwLockWriteGuard<'rwlock, T>> {\n         poison::map_result(lock.poison.guard(), |guard| RwLockWriteGuard { lock, poison: guard })\n     }\n@@ -557,7 +566,7 @@ impl<T: ?Sized> Deref for RwLockReadGuard<'_, T> {\n     type Target = T;\n \n     fn deref(&self) -> &T {\n-        unsafe { &*self.data }\n+        unsafe { self.data.as_ref() }\n     }\n }\n "}]}