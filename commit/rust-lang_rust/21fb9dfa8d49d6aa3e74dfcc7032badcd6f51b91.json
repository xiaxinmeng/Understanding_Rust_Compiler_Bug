{"sha": "21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZmI5ZGZhOGQ0OWQ2YWEzZTc0ZGZjYzcwMzJiYWRjZDZmNTFiOTE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-03T01:00:57Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-03T01:00:57Z"}, "message": "Use old error when there's partial resolution\n\nThe new error was confusing when there was partial resolution (something\nlike `std::io::nonexistent`); the old one is better for those cases.", "tree": {"sha": "955a0fc9e3f9f31301edfa30c9ee3f89216f2d15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/955a0fc9e3f9f31301edfa30c9ee3f89216f2d15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91", "html_url": "https://github.com/rust-lang/rust/commit/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0193a8871cc2c2cca2de03243097519ce6c910ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/0193a8871cc2c2cca2de03243097519ce6c910ce", "html_url": "https://github.com/rust-lang/rust/commit/0193a8871cc2c2cca2de03243097519ce6c910ce"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "024d333d8710d41a66171f1b909ca34b1ab5bb75", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91", "patch": "@@ -1575,11 +1575,16 @@ fn resolution_failure(\n                         _ => None,\n                     };\n                     // See if this was a module: `[path]` or `[std::io::nope]`\n-                    if let Some(_module) = last_found_module {\n-                        let note = format!(\n-                            \"there is no item named `{}` in scope\",\n-                            unresolved\n-                        );\n+                    if let Some(module) = last_found_module {\n+                        let note = if partial_res.is_some() {\n+                            let module_name = collector.cx.tcx.item_name(module);\n+                            format!(\n+                                \"the module `{}` contains no item named `{}`\",\n+                                module_name, unresolved\n+                            )\n+                        } else {\n+                            format!(\"there is no item named `{}` in scope\", unresolved)\n+                        };\n                         if let Some(span) = sp {\n                             diag.span_label(span, &note);\n                         } else {"}, {"sha": "701fd6991c4accda8a5c943b0e1d957d050216dd", "filename": "src/test/rustdoc-ui/intra-link-errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.rs?ref=21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91", "patch": "@@ -18,11 +18,11 @@\n \n /// [std::io::not::here]\n //~^ ERROR unresolved link\n-//~| NOTE there is no item named `not` in scope\n+//~| NOTE `io` contains no item named `not`\n \n /// [type@std::io::not::here]\n //~^ ERROR unresolved link\n-//~| NOTE there is no item named `not` in scope\n+//~| NOTE `io` contains no item named `not`\n \n /// [std::io::Error::x]\n //~^ ERROR unresolved link"}, {"sha": "8b12c721f78603b61c299d03c4075902d2c29a03", "filename": "src/test/rustdoc-ui/intra-link-errors.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-errors.stderr?ref=21fb9dfa8d49d6aa3e74dfcc7032badcd6f51b91", "patch": "@@ -26,13 +26,13 @@ error: unresolved link to `std::io::not::here`\n   --> $DIR/intra-link-errors.rs:19:6\n    |\n LL | /// [std::io::not::here]\n-   |      ^^^^^^^^^^^^^^^^^^ there is no item named `not` in scope\n+   |      ^^^^^^^^^^^^^^^^^^ the module `io` contains no item named `not`\n \n error: unresolved link to `std::io::not::here`\n   --> $DIR/intra-link-errors.rs:23:6\n    |\n LL | /// [type@std::io::not::here]\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^ there is no item named `not` in scope\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^ the module `io` contains no item named `not`\n \n error: unresolved link to `std::io::Error::x`\n   --> $DIR/intra-link-errors.rs:27:6"}]}