{"sha": "c74e49eab911ce5d55b3692324dea64905323a88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NGU0OWVhYjkxMWNlNWQ1NWIzNjkyMzI0ZGVhNjQ5MDUzMjNhODg=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-02-23T20:16:19Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-04-05T11:35:51Z"}, "message": "Adapted the lint to use the new SpanlessEq", "tree": {"sha": "eab803107de1e7325b7e24b21f0e6b2620b22a1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eab803107de1e7325b7e24b21f0e6b2620b22a1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c74e49eab911ce5d55b3692324dea64905323a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c74e49eab911ce5d55b3692324dea64905323a88", "html_url": "https://github.com/rust-lang/rust/commit/c74e49eab911ce5d55b3692324dea64905323a88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c74e49eab911ce5d55b3692324dea64905323a88/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65ed5a632f5a5fc99a015e7ad0537c401fb61023", "url": "https://api.github.com/repos/rust-lang/rust/commits/65ed5a632f5a5fc99a015e7ad0537c401fb61023", "html_url": "https://github.com/rust-lang/rust/commit/65ed5a632f5a5fc99a015e7ad0537c401fb61023"}], "stats": {"total": 307, "additions": 111, "deletions": 196}, "files": [{"sha": "7a9f299d8e0447b632a3ddf245f59a602c7222cc", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -295,11 +295,21 @@ fn scan_block_for_eq(cx: &LateContext<'tcx>, blocks: &[&Block<'tcx>]) -> (usize,\n         let l_stmts = win[0].stmts;\n         let r_stmts = win[1].stmts;\n \n+        // `SpanlessEq` now keeps track of the locals and is therefore context sensitive clippy#6752.\n+        // The comparison therefor needs to be done in a way that builds the correct context.\n         let mut evaluator = SpanlessEq::new(cx);\n+        let mut evaluator = evaluator.inter_expr();\n+\n         let current_start_eq = count_eq(&mut l_stmts.iter(), &mut r_stmts.iter(), |l, r| evaluator.eq_stmt(l, r));\n-        let current_end_eq = count_eq(&mut l_stmts.iter().rev(), &mut r_stmts.iter().rev(), |l, r| {\n-            evaluator.eq_stmt(l, r)\n-        });\n+\n+        let current_end_eq = {\n+            // We skip the middle statements which can't be equal\n+            let end_comparison_count = l_stmts.len().min(r_stmts.len()) - current_start_eq;\n+            let it1 = l_stmts.iter().skip(l_stmts.len() - end_comparison_count);\n+            let it2 = r_stmts.iter().skip(r_stmts.len() - end_comparison_count);\n+            it1.zip(it2)\n+                .fold(0, |acc, (l, r)| if evaluator.eq_stmt(l, r) { acc + 1 } else { 0 })\n+        };\n         let block_expr_eq = both(&win[0].expr, &win[1].expr, |l, r| evaluator.eq_expr(l, r));\n \n         // IF_SAME_THEN_ELSE\n@@ -458,8 +468,8 @@ fn emit_shared_code_in_if_blocks_lint(\n     // Emit lint\n     if suggestions.len() == 1 {\n         let (place_str, span, sugg) = suggestions.pop().unwrap();\n-        let msg = format!(\"All if blocks contain the same code at the {}\", place_str);\n-        let help = format!(\"Consider moving the {} statements out like this\", place_str);\n+        let msg = format!(\"all if blocks contain the same code at the {}\", place_str);\n+        let help = format!(\"consider moving the {} statements out like this\", place_str);\n         span_lint_and_then(cx, SHARED_CODE_IN_IF_BLOCKS, span, msg.as_str(), |diag| {\n             diag.span_suggestion(span, help.as_str(), sugg, Applicability::Unspecified);\n \n@@ -472,20 +482,20 @@ fn emit_shared_code_in_if_blocks_lint(\n             cx,\n             SHARED_CODE_IN_IF_BLOCKS,\n             start_span,\n-            \"All if blocks contain the same code at the start and the end. Here at the start:\",\n+            \"all if blocks contain the same code at the start and the end. Here at the start\",\n             move |diag| {\n-                diag.span_note(end_span, \"And here at the end:\");\n+                diag.span_note(end_span, \"and here at the end\");\n \n                 diag.span_suggestion(\n                     start_span,\n-                    \"Consider moving the start statements out like this:\",\n+                    \"consider moving the start statements out like this\",\n                     start_sugg,\n                     Applicability::Unspecified,\n                 );\n \n                 diag.span_suggestion(\n                     end_span,\n-                    \"And consider moving the end statements out like this:\",\n+                    \"and consider moving the end statements out like this\",\n                     end_sugg,\n                     Applicability::Unspecified,\n                 );"}, {"sha": "000c249bb0ff5cd6bcc764709da23c75d9004abb", "filename": "clippy_utils/src/hir_utils.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/clippy_utils%2Fsrc%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/clippy_utils%2Fsrc%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fhir_utils.rs?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -58,13 +58,14 @@ impl<'a, 'tcx> SpanlessEq<'a, 'tcx> {\n \n     /// Use this method to wrap comparisons that may involve inter-expression context.\n     /// See `self.locals`.\n-    fn inter_expr(&mut self) -> HirEqInterExpr<'_, 'a, 'tcx> {\n+    pub fn inter_expr(&mut self) -> HirEqInterExpr<'_, 'a, 'tcx> {\n         HirEqInterExpr {\n             inner: self,\n             locals: HirIdMap::default(),\n         }\n     }\n \n+    #[allow(dead_code)]\n     pub fn eq_block(&mut self, left: &Block<'_>, right: &Block<'_>) -> bool {\n         self.inter_expr().eq_block(left, right)\n     }\n@@ -82,7 +83,7 @@ impl<'a, 'tcx> SpanlessEq<'a, 'tcx> {\n     }\n }\n \n-struct HirEqInterExpr<'a, 'b, 'tcx> {\n+pub struct HirEqInterExpr<'a, 'b, 'tcx> {\n     inner: &'a mut SpanlessEq<'b, 'tcx>,\n \n     // When binding are declared, the binding ID in the left expression is mapped to the one on the\n@@ -92,7 +93,7 @@ struct HirEqInterExpr<'a, 'b, 'tcx> {\n }\n \n impl HirEqInterExpr<'_, '_, '_> {\n-    fn eq_stmt(&mut self, left: &Stmt<'_>, right: &Stmt<'_>) -> bool {\n+    pub fn eq_stmt(&mut self, left: &Stmt<'_>, right: &Stmt<'_>) -> bool {\n         match (&left.kind, &right.kind) {\n             (&StmtKind::Local(ref l), &StmtKind::Local(ref r)) => {\n                 self.eq_pat(&l.pat, &r.pat)\n@@ -159,7 +160,7 @@ impl HirEqInterExpr<'_, '_, '_> {\n     }\n \n     #[allow(clippy::similar_names)]\n-    fn eq_expr(&mut self, left: &Expr<'_>, right: &Expr<'_>) -> bool {\n+    pub fn eq_expr(&mut self, left: &Expr<'_>, right: &Expr<'_>) -> bool {\n         if !self.inner.allow_side_effects && differing_macro_contexts(left.span, right.span) {\n             return false;\n         }"}, {"sha": "74b11bac487eb61e4409edd0291022c2660c2f89", "filename": "tests/ui/if_same_then_else.stderr", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fif_same_then_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fif_same_then_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.stderr?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -82,31 +82,5 @@ LL | |         42\n LL | |     };\n    | |_____^\n \n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:95:13\n-   |\n-LL |       if true {\n-   |  _____________^\n-LL | |         let bar = if true { 42 } else { 43 };\n-LL | |\n-LL | |         while foo() {\n-...  |\n-LL | |         bar + 1;\n-LL | |     } else {\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:102:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         //~ ERROR same body as `if` block\n-LL | |         let bar = if true { 42 } else { 43 };\n-LL | |\n-...  |\n-LL | |         bar + 1;\n-LL | |     }\n-   | |_____^\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "a0e636e3a611eb6b640994de79caae651823d12e", "filename": "tests/ui/if_same_then_else2.stderr", "status": "modified", "additions": 3, "deletions": 37, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fif_same_then_else2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fif_same_then_else2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.stderr?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -1,19 +1,5 @@\n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:21:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         //~ ERROR same body as `if` block\n-LL | |         for _ in &[42] {\n-LL | |             let bar: &Option<_> = &Some::<u8>(42);\n-...  |\n-LL | |         }\n-LL | |     }\n-   | |_____^\n-   |\n-   = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n-note: same as this\n-  --> $DIR/if_same_then_else2.rs:12:13\n+  --> $DIR/if_same_then_else2.rs:13:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -33,7 +19,7 @@ LL |       } else {\n    |  ____________^\n LL | |         //~ ERROR same body as `if` block\n LL | |         for _ in &[42] {\n-LL | |             let foo: &Option<_> = &Some::<u8>(42);\n+LL | |             let bar: &Option<_> = &Some::<u8>(42);\n ...  |\n LL | |         }\n LL | |     }\n@@ -115,25 +101,5 @@ LL | |         Ok(\"foo\")?;\n LL | |     }\n    | |_____^\n \n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:122:20\n-   |\n-LL |       } else if true {\n-   |  ____________________^\n-LL | |         let foo = \"\";\n-LL | |         return Ok(&foo[0..]);\n-LL | |     } else {\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else2.rs:125:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         let foo = \"\";\n-LL | |         return Ok(&foo[0..]);\n-LL | |     }\n-   | |_____^\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n "}, {"sha": "7974ea2f59c825b957ff7bfbed632c3dd9f62de4", "filename": "tests/ui/shared_code_in_if_blocks/shared_at_bot.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_bot.rs?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -4,7 +4,6 @@\n // This tests the shared_code_in_if_blocks lint at the end of blocks\n \n fn simple_examples() {\n-    // TODO xFrednet 2021-01-06: Test with const literals at the end\n     let x = 1;\n \n     let _ = if x == 7 {\n@@ -45,8 +44,8 @@ fn simple_examples() {\n         println!(\"This is also eq with the else block\");\n         println!(\"Same end of block\");\n     } else {\n-        println!(\"Same end of block\");\n         println!(\"This is also eq with the else block\");\n+        println!(\"Same end of block\");\n     }\n \n     // Use of outer scope value\n@@ -69,21 +68,11 @@ fn simple_examples() {\n         );\n     }\n \n-    // TODO xFrednet 2021-01.13: Fix lint for `if let`\n-    let index = Some(8);\n-    if let Some(index) = index {\n-        println!(\"The index is: {}\", index);\n-\n-        println!(\"Same end of block\");\n-    } else {\n-        println!(\"Same end of block\");\n-    }\n-\n     if x == 9 {\n         if x == 8 {\n             // No parent!!\n-            println!(\"Hello World\");\n             println!(\"---\");\n+            println!(\"Hello World\");\n         } else {\n             println!(\"Hello World\");\n         }"}, {"sha": "5ecf47bf92063ef3f64a1c14d6309c52af54bb12", "filename": "tests/ui/shared_code_in_if_blocks/shared_at_bot.stderr", "status": "modified", "additions": 42, "deletions": 30, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_bot.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_bot.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_bot.stderr?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -1,5 +1,5 @@\n-error: All if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:31:5\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:30:5\n    |\n LL | /         let result = false;\n LL | |         println!(\"Block end!\");\n@@ -13,16 +13,29 @@ note: the lint level is defined here\n LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly.\n-help: Consider moving the end statements out like this\n+help: consider moving the end statements out like this\n    |\n LL |     }\n LL |     let result = false;\n LL |     println!(\"Block end!\");\n LL |     result;\n    |\n \n-error: All if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:66:5\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:48:5\n+   |\n+LL | /         println!(\"Same end of block\");\n+LL | |     }\n+   | |_____^\n+   |\n+help: consider moving the end statements out like this\n+   |\n+LL |     }\n+LL |     println!(\"Same end of block\");\n+   |\n+\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:65:5\n    |\n LL | /         println!(\n LL | |             \"I'm moveable because I know: `outer_scope_value`: '{}'\",\n@@ -31,7 +44,7 @@ LL | |         );\n LL | |     }\n    | |_____^\n    |\n-help: Consider moving the end statements out like this\n+help: consider moving the end statements out like this\n    |\n LL |     }\n LL |     println!(\n@@ -40,22 +53,21 @@ LL |         outer_scope_value\n LL |     );\n    |\n \n-error: All if blocks contain the same code at the start\n-  --> $DIR/shared_at_bot.rs:83:9\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:77:9\n    |\n-LL | /         if x == 8 {\n-LL | |             // No parent!!\n-LL | |             println!(\"Hello World\");\n-   | |____________________________________^\n+LL | /             println!(\"Hello World\");\n+LL | |         }\n+   | |_________^\n    |\n-help: Consider moving the start statements out like this\n+help: consider moving the end statements out like this\n    |\n+LL |         }\n LL |         println!(\"Hello World\");\n-LL |         if x == 8 {\n    |\n \n-error: All if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:104:5\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:93:5\n    |\n LL | /         let later_used_value = \"A string value\";\n LL | |         println!(\"{}\", later_used_value);\n@@ -64,68 +76,68 @@ LL | |     }\n    | |_____^\n    |\n    = warning: Some moved values might need to be renamed to avoid wrong references.\n-help: Consider moving the end statements out like this\n+help: consider moving the end statements out like this\n    |\n LL |     }\n LL |     let later_used_value = \"A string value\";\n LL |     println!(\"{}\", later_used_value);\n    |\n \n-error: All if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:117:5\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:106:5\n    |\n LL | /         let simple_examples = \"I now identify as a &str :)\";\n LL | |         println!(\"This is the new simple_example: {}\", simple_examples);\n LL | |     }\n    | |_____^\n    |\n    = warning: Some moved values might need to be renamed to avoid wrong references.\n-help: Consider moving the end statements out like this\n+help: consider moving the end statements out like this\n    |\n LL |     }\n LL |     let simple_examples = \"I now identify as a &str :)\";\n LL |     println!(\"This is the new simple_example: {}\", simple_examples);\n    |\n \n-error: All if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:182:5\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:171:5\n    |\n LL | /         x << 2\n LL | |     };\n    | |_____^\n    |\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly.\n-help: Consider moving the end statements out like this\n+help: consider moving the end statements out like this\n    |\n LL |     }\n LL |     x << 2;\n    |\n \n-error: All if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:189:5\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:178:5\n    |\n LL | /         x * 4\n LL | |     }\n    | |_____^\n    |\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly.\n-help: Consider moving the end statements out like this\n+help: consider moving the end statements out like this\n    |\n LL |     }\n LL |     x * 4\n    |\n \n-error: All if blocks contain the same code at the end\n-  --> $DIR/shared_at_bot.rs:201:44\n+error: all if blocks contain the same code at the end\n+  --> $DIR/shared_at_bot.rs:190:44\n    |\n LL |     if x == 17 { b = 1; a = 0x99; } else { a = 0x99; }\n    |                                            ^^^^^^^^^^^\n    |\n-help: Consider moving the end statements out like this\n+help: consider moving the end statements out like this\n    |\n LL |     if x == 17 { b = 1; a = 0x99; } else { }\n LL |     a = 0x99;\n    |\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 9 previous errors\n "}, {"sha": "1ad924aba6a7649c75879f49151d082eb3c691cf", "filename": "tests/ui/shared_code_in_if_blocks/shared_at_top.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_top.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_top.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_top.stderr?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -1,4 +1,4 @@\n-error: All if blocks contain the same code at the start\n+error: all if blocks contain the same code at the start\n   --> $DIR/shared_at_top.rs:10:5\n    |\n LL | /     if true {\n@@ -10,13 +10,13 @@ note: the lint level is defined here\n    |\n LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-help: Consider moving the start statements out like this\n+help: consider moving the start statements out like this\n    |\n LL |     println!(\"Hello World!\");\n LL |     if true {\n    |\n \n-error: All if blocks contain the same code at the start\n+error: all if blocks contain the same code at the start\n   --> $DIR/shared_at_top.rs:19:5\n    |\n LL | /     if x == 0 {\n@@ -26,28 +26,28 @@ LL | |         let _z = y;\n    | |___________________^\n    |\n    = warning: Some moved values might need to be renamed to avoid wrong references.\n-help: Consider moving the start statements out like this\n+help: consider moving the start statements out like this\n    |\n LL |     let y = 9;\n LL |     println!(\"The value y was set to: `{}`\", y);\n LL |     let _z = y;\n LL |     if x == 0 {\n    |\n \n-error: All if blocks contain the same code at the start\n+error: all if blocks contain the same code at the start\n   --> $DIR/shared_at_top.rs:40:5\n    |\n LL | /     let _ = if x == 7 {\n LL | |         let y = 16;\n    | |___________________^\n    |\n-help: Consider moving the start statements out like this\n+help: consider moving the start statements out like this\n    |\n LL |     let y = 16;\n LL |     let _ = if x == 7 {\n    |\n \n-error: All if blocks contain the same code at the start\n+error: all if blocks contain the same code at the start\n   --> $DIR/shared_at_top.rs:58:5\n    |\n LL | /     if x == 10 {\n@@ -56,14 +56,14 @@ LL | |         println!(\"Str: {}\", used_value_name);\n    | |_____________________________________________^\n    |\n    = warning: Some moved values might need to be renamed to avoid wrong references.\n-help: Consider moving the start statements out like this\n+help: consider moving the start statements out like this\n    |\n LL |     let used_value_name = \"Different type\";\n LL |     println!(\"Str: {}\", used_value_name);\n LL |     if x == 10 {\n    |\n \n-error: All if blocks contain the same code at the start\n+error: all if blocks contain the same code at the start\n   --> $DIR/shared_at_top.rs:72:5\n    |\n LL | /     if x == 11 {\n@@ -72,22 +72,22 @@ LL | |         println!(\"I'm also moveable\");\n    | |______________________________________^\n    |\n    = warning: Some moved values might need to be renamed to avoid wrong references.\n-help: Consider moving the start statements out like this\n+help: consider moving the start statements out like this\n    |\n LL |     let can_be_overridden = \"Move me\";\n LL |     println!(\"I'm also moveable\");\n LL |     if x == 11 {\n    |\n \n-error: All if blocks contain the same code at the start\n+error: all if blocks contain the same code at the start\n   --> $DIR/shared_at_top.rs:88:5\n    |\n LL | /     if x == 2020 {\n LL | |         println!(\"This should trigger the `SHARED_CODE_IN_IF_BLOCKS` lint.\");\n LL | |         println!(\"Because `IF_SAME_THEN_ELSE` is allowed here\");\n    | |________________________________________________________________^\n    |\n-help: Consider moving the start statements out like this\n+help: consider moving the start statements out like this\n    |\n LL |     println!(\"This should trigger the `SHARED_CODE_IN_IF_BLOCKS` lint.\");\n LL |     println!(\"Because `IF_SAME_THEN_ELSE` is allowed here\");"}, {"sha": "9f675a20a6d92396bec3c3b3c16d3dbdab212e27", "filename": "tests/ui/shared_code_in_if_blocks/shared_at_top_and_bot.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_top_and_bot.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_top_and_bot.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshared_code_in_if_blocks%2Fshared_at_top_and_bot.stderr?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -1,4 +1,4 @@\n-error: All if blocks contain the same code at the start and the end. Here at the start:\n+error: all if blocks contain the same code at the start and the end. Here at the start\n   --> $DIR/shared_at_top_and_bot.rs:16:5\n    |\n LL | /     if x == 7 {\n@@ -12,26 +12,26 @@ note: the lint level is defined here\n    |\n LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: And here at the end:\n+note: and here at the end\n   --> $DIR/shared_at_top_and_bot.rs:28:5\n    |\n LL | /         let _u = 9;\n LL | |     }\n    | |_____^\n-help: Consider moving the start statements out like this:\n+help: consider moving the start statements out like this\n    |\n LL |     let t = 7;\n LL |     let _overlap_start = t * 2;\n LL |     let _overlap_end = 2 * t;\n LL |     if x == 7 {\n    |\n-help: And consider moving the end statements out like this:\n+help: and consider moving the end statements out like this\n    |\n LL |     }\n LL |     let _u = 9;\n    |\n \n-error: All if blocks contain the same code at the start and the end. Here at the start:\n+error: all if blocks contain the same code at the start and the end. Here at the start\n   --> $DIR/shared_at_top_and_bot.rs:32:5\n    |\n LL | /     if x == 99 {\n@@ -40,29 +40,29 @@ LL | |         let _overlap_start = r;\n LL | |         let _overlap_middle = r * r;\n    | |____________________________________^\n    |\n-note: And here at the end:\n+note: and here at the end\n   --> $DIR/shared_at_top_and_bot.rs:43:5\n    |\n LL | /         let _overlap_end = r * r * r;\n LL | |         let z = \"end\";\n LL | |     }\n    | |_____^\n    = warning: Some moved values might need to be renamed to avoid wrong references.\n-help: Consider moving the start statements out like this:\n+help: consider moving the start statements out like this\n    |\n LL |     let r = 7;\n LL |     let _overlap_start = r;\n LL |     let _overlap_middle = r * r;\n LL |     if x == 99 {\n    |\n-help: And consider moving the end statements out like this:\n+help: and consider moving the end statements out like this\n    |\n LL |     }\n LL |     let _overlap_end = r * r * r;\n LL |     let z = \"end\";\n    |\n \n-error: All if blocks contain the same code at the start and the end. Here at the start:\n+error: all if blocks contain the same code at the start and the end. Here at the start\n   --> $DIR/shared_at_top_and_bot.rs:61:5\n    |\n LL | /     if (x > 7 && y < 13) || (x + y) % 2 == 1 {\n@@ -71,7 +71,7 @@ LL | |         let b = 0xffff00ff;\n LL | |         let e_id = gen_id(a, b);\n    | |________________________________^\n    |\n-note: And here at the end:\n+note: and here at the end\n   --> $DIR/shared_at_top_and_bot.rs:81:5\n    |\n LL | /         let pack = DataPack {\n@@ -83,14 +83,14 @@ LL | |         process_data(pack);\n LL | |     }\n    | |_____^\n    = warning: Some moved values might need to be renamed to avoid wrong references.\n-help: Consider moving the start statements out like this:\n+help: consider moving the start statements out like this\n    |\n LL |     let a = 0xcafe;\n LL |     let b = 0xffff00ff;\n LL |     let e_id = gen_id(a, b);\n LL |     if (x > 7 && y < 13) || (x + y) % 2 == 1 {\n    |\n-help: And consider moving the end statements out like this:\n+help: and consider moving the end statements out like this\n    |\n LL |     }\n LL |     let pack = DataPack {\n@@ -100,51 +100,51 @@ LL |         some_data: vec![0x12, 0x34, 0x56, 0x78, 0x90],\n LL |     };\n  ...\n \n-error: All if blocks contain the same code at the start and the end. Here at the start:\n+error: all if blocks contain the same code at the start and the end. Here at the start\n   --> $DIR/shared_at_top_and_bot.rs:94:5\n    |\n LL | /     let _ = if x == 7 {\n LL | |         let _ = 19;\n    | |___________________^\n    |\n-note: And here at the end:\n+note: and here at the end\n   --> $DIR/shared_at_top_and_bot.rs:103:5\n    |\n LL | /         x << 2\n LL | |     };\n    | |_____^\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly.\n-help: Consider moving the start statements out like this:\n+help: consider moving the start statements out like this\n    |\n LL |     let _ = 19;\n LL |     let _ = if x == 7 {\n    |\n-help: And consider moving the end statements out like this:\n+help: and consider moving the end statements out like this\n    |\n LL |     }\n LL |     x << 2;\n    |\n \n-error: All if blocks contain the same code at the start and the end. Here at the start:\n+error: all if blocks contain the same code at the start and the end. Here at the start\n   --> $DIR/shared_at_top_and_bot.rs:106:5\n    |\n LL | /     if x == 9 {\n LL | |         let _ = 17;\n    | |___________________^\n    |\n-note: And here at the end:\n+note: and here at the end\n   --> $DIR/shared_at_top_and_bot.rs:115:5\n    |\n LL | /         x * 4\n LL | |     }\n    | |_____^\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly.\n-help: Consider moving the start statements out like this:\n+help: consider moving the start statements out like this\n    |\n LL |     let _ = 17;\n LL |     if x == 9 {\n    |\n-help: And consider moving the end statements out like this:\n+help: and consider moving the end statements out like this\n    |\n LL |     }\n LL |     x * 4"}, {"sha": "a564b30cb1cc576d12b82cda5c0c088abe9b9121", "filename": "tests/ui/shared_code_in_if_blocks/valid_if_blocks.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fvalid_if_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fvalid_if_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshared_code_in_if_blocks%2Fvalid_if_blocks.rs?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -109,23 +109,6 @@ fn trigger_other_lint() {\n         let _ = \"This is a string\";\n     }\n \n-    // More complex same blocks\n-    if x == 17 {\n-        #[derive(Debug)]\n-        struct Duck {\n-            num: u64,\n-        };\n-        let pet = Duck { num: 18 };\n-        println!(\"{:?}\", pet);\n-    } else {\n-        #[derive(Debug)]\n-        struct Duck {\n-            num: u64,\n-        };\n-        let pet = Duck { num: 18 };\n-        println!(\"{:?}\", pet);\n-    }\n-\n     // Only same expression\n     let _ = if x == 6 { 7 } else { 7 };\n "}, {"sha": "d290c65822b38c72239c25b98a313857e85433be", "filename": "tests/ui/shared_code_in_if_blocks/valid_if_blocks.stderr", "status": "modified", "additions": 7, "deletions": 27, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fvalid_if_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c74e49eab911ce5d55b3692324dea64905323a88/tests%2Fui%2Fshared_code_in_if_blocks%2Fvalid_if_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshared_code_in_if_blocks%2Fvalid_if_blocks.stderr?ref=c74e49eab911ce5d55b3692324dea64905323a88", "patch": "@@ -25,40 +25,20 @@ LL | |         let _ = \"This is a string\";\n LL | |     }\n    | |_____^\n \n-error: All if blocks contain the same code at the end\n-  --> $DIR/valid_if_blocks.rs:125:5\n-   |\n-LL | /         let pet = Duck { num: 18 };\n-LL | |         println!(\"{:?}\", pet);\n-LL | |     }\n-   | |_____^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/valid_if_blocks.rs:2:36\n-   |\n-LL | #![deny(clippy::if_same_then_else, clippy::shared_code_in_if_blocks)]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-help: Consider moving the end statements out like this\n-   |\n-LL |     }\n-LL |     let pet = Duck { num: 18 };\n-LL |     println!(\"{:?}\", pet);\n-   |\n-\n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:130:23\n+  --> $DIR/valid_if_blocks.rs:113:23\n    |\n LL |     let _ = if x == 6 { 7 } else { 7 };\n    |                       ^^^^^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:130:34\n+  --> $DIR/valid_if_blocks.rs:113:34\n    |\n LL |     let _ = if x == 6 { 7 } else { 7 };\n    |                                  ^^^^^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:136:23\n+  --> $DIR/valid_if_blocks.rs:119:23\n    |\n LL |       } else if x == 68 {\n    |  _______________________^\n@@ -71,7 +51,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:145:12\n+  --> $DIR/valid_if_blocks.rs:128:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -84,7 +64,7 @@ LL | |     };\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:158:23\n+  --> $DIR/valid_if_blocks.rs:141:23\n    |\n LL |       } else if x == 68 {\n    |  _______________________^\n@@ -94,7 +74,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:161:12\n+  --> $DIR/valid_if_blocks.rs:144:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -103,5 +83,5 @@ LL | |         println!(\"I'm a doppelg\u00e4nger\");\n LL | |     }\n    | |_____^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n "}]}