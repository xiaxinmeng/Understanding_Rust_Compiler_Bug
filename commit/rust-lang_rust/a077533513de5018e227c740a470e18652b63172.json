{"sha": "a077533513de5018e227c740a470e18652b63172", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNzc1MzM1MTNkZTUwMThlMjI3Yzc0MGE0NzBlMTg2NTJiNjMxNzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-23T16:07:33Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-23T16:07:33Z"}, "message": "Allow arbitrary self-types", "tree": {"sha": "1b1d109942e916e441136d79b93cd00cd0463bbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b1d109942e916e441136d79b93cd00cd0463bbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a077533513de5018e227c740a470e18652b63172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a077533513de5018e227c740a470e18652b63172", "html_url": "https://github.com/rust-lang/rust/commit/a077533513de5018e227c740a470e18652b63172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a077533513de5018e227c740a470e18652b63172/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d82d1551ee09faa5d46a58c17c40c2515d3f3b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d82d1551ee09faa5d46a58c17c40c2515d3f3b9", "html_url": "https://github.com/rust-lang/rust/commit/8d82d1551ee09faa5d46a58c17c40c2515d3f3b9"}], "stats": {"total": 122, "additions": 104, "deletions": 18}, "files": [{"sha": "7e58e87138a1672c63006fdd99c50151b8021813", "filename": "crates/libsyntax2/src/grammar/params.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fparams.rs?ref=a077533513de5018e227c740a470e18652b63172", "patch": "@@ -94,20 +94,33 @@ fn value_parameter(p: &mut Parser, flavor: Flavor) {\n //     fn d(&'a mut self, x: i32) {}\n // }\n fn self_param(p: &mut Parser) {\n-    let la1 = p.nth(1);\n-    let la2 = p.nth(2);\n-    let la3 = p.nth(3);\n-    let n_toks = match (p.current(), la1, la2, la3) {\n-        (SELF_KW, _, _, _) => 1,\n-        (AMP, SELF_KW, _, _) => 2,\n-        (AMP, MUT_KW, SELF_KW, _) => 3,\n-        (AMP, LIFETIME, SELF_KW, _) => 3,\n-        (AMP, LIFETIME, MUT_KW, SELF_KW) => 4,\n-        _ => return,\n-    };\n-    let m = p.start();\n-    for _ in 0..n_toks {\n+    let m;\n+    if p.at(SELF_KW) {\n+        m = p.start();\n         p.bump();\n+        // test arb_self_types\n+        // impl S {\n+        //     fn a(self: &Self) {}\n+        //     fn b(self: Box<Self>) {}\n+        // }\n+        if p.at(COLON) {\n+            types::ascription(p);\n+        }\n+    } else {\n+        let la1 = p.nth(1);\n+        let la2 = p.nth(2);\n+        let la3 = p.nth(3);\n+        let n_toks = match (p.current(), la1, la2, la3) {\n+            (AMP, SELF_KW, _, _) => 2,\n+            (AMP, MUT_KW, SELF_KW, _) => 3,\n+            (AMP, LIFETIME, SELF_KW, _) => 3,\n+            (AMP, LIFETIME, MUT_KW, SELF_KW) => 4,\n+            _ => return,\n+        };\n+        m = p.start();\n+        for _ in 0..n_toks {\n+            p.bump();\n+        }\n     }\n     m.complete(p, SELF_PARAM);\n     if !p.at(R_PAREN) {"}, {"sha": "f0c8cc3a8e4bda6c741dae0bc3af9e013365e8fe", "filename": "crates/libsyntax2/tests/data/parser/inline/0058_type_arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0058_type_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0058_type_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0058_type_arg.rs?ref=a077533513de5018e227c740a470e18652b63172", "patch": "@@ -1 +1 @@\n-type A = B<'static, i32, Item=u64>;\n+type A = B<'static, i32, Item=u64>"}, {"sha": "297456ec4c4494d054185e8932f434507a600bb9", "filename": "crates/libsyntax2/tests/data/parser/inline/0058_type_arg.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0058_type_arg.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0058_type_arg.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0058_type_arg.txt?ref=a077533513de5018e227c740a470e18652b63172", "patch": "@@ -1,5 +1,5 @@\n-FILE@[0; 36)\n-  TYPE_DEF@[0; 35)\n+FILE@[0; 35)\n+  TYPE_DEF@[0; 34)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)\n@@ -36,5 +36,5 @@ FILE@[0; 36)\n                     NAME_REF@[30; 33)\n                       IDENT@[30; 33) \"u64\"\n             R_ANGLE@[33; 34)\n-    SEMI@[34; 35)\n-  WHITESPACE@[35; 36)\n+            err: `expected SEMI`\n+  WHITESPACE@[34; 35)"}, {"sha": "2bf2a69f6fed636f56f611a56424521e8c4e0e84", "filename": "crates/libsyntax2/tests/data/parser/inline/0104_arb_self_types.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0104_arb_self_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0104_arb_self_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0104_arb_self_types.rs?ref=a077533513de5018e227c740a470e18652b63172", "patch": "@@ -0,0 +1,4 @@\n+impl S {\n+    fn a(self: &Self) {}\n+    fn b(self: Box<Self>) {}\n+}"}, {"sha": "41e3505fef260d6e1dccc9282422c69c0a3cfd48", "filename": "crates/libsyntax2/tests/data/parser/inline/0104_arb_self_types.txt", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0104_arb_self_types.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a077533513de5018e227c740a470e18652b63172/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0104_arb_self_types.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Finline%2F0104_arb_self_types.txt?ref=a077533513de5018e227c740a470e18652b63172", "patch": "@@ -0,0 +1,69 @@\n+FILE@[0; 65)\n+  IMPL_ITEM@[0; 64)\n+    IMPL_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    PATH_TYPE@[5; 6)\n+      PATH@[5; 6)\n+        PATH_SEGMENT@[5; 6)\n+          NAME_REF@[5; 6)\n+            IDENT@[5; 6) \"S\"\n+    WHITESPACE@[6; 7)\n+    L_CURLY@[7; 8)\n+    WHITESPACE@[8; 13)\n+    FN_DEF@[13; 33)\n+      FN_KW@[13; 15)\n+      WHITESPACE@[15; 16)\n+      NAME@[16; 17)\n+        IDENT@[16; 17) \"a\"\n+      PARAM_LIST@[17; 30)\n+        L_PAREN@[17; 18)\n+        SELF_PARAM@[18; 29)\n+          SELF_KW@[18; 22)\n+          COLON@[22; 23)\n+          WHITESPACE@[23; 24)\n+          REFERENCE_TYPE@[24; 29)\n+            AMP@[24; 25)\n+            PATH_TYPE@[25; 29)\n+              PATH@[25; 29)\n+                PATH_SEGMENT@[25; 29)\n+                  NAME_REF@[25; 29)\n+                    IDENT@[25; 29) \"Self\"\n+        R_PAREN@[29; 30)\n+      WHITESPACE@[30; 31)\n+      BLOCK_EXPR@[31; 33)\n+        L_CURLY@[31; 32)\n+        R_CURLY@[32; 33)\n+    WHITESPACE@[33; 38)\n+    FN_DEF@[38; 62)\n+      FN_KW@[38; 40)\n+      WHITESPACE@[40; 41)\n+      NAME@[41; 42)\n+        IDENT@[41; 42) \"b\"\n+      PARAM_LIST@[42; 59)\n+        L_PAREN@[42; 43)\n+        SELF_PARAM@[43; 58)\n+          SELF_KW@[43; 47)\n+          COLON@[47; 48)\n+          WHITESPACE@[48; 49)\n+          PATH_TYPE@[49; 58)\n+            PATH@[49; 58)\n+              PATH_SEGMENT@[49; 58)\n+                NAME_REF@[49; 52)\n+                  IDENT@[49; 52) \"Box\"\n+                TYPE_ARG_LIST@[52; 58)\n+                  L_ANGLE@[52; 53)\n+                  TYPE_ARG@[53; 57)\n+                    PATH_TYPE@[53; 57)\n+                      PATH@[53; 57)\n+                        PATH_SEGMENT@[53; 57)\n+                          NAME_REF@[53; 57)\n+                            IDENT@[53; 57) \"Self\"\n+                  R_ANGLE@[57; 58)\n+        R_PAREN@[58; 59)\n+      WHITESPACE@[59; 60)\n+      BLOCK_EXPR@[60; 62)\n+        L_CURLY@[60; 61)\n+        R_CURLY@[61; 62)\n+    WHITESPACE@[62; 63)\n+    R_CURLY@[63; 64)\n+  WHITESPACE@[64; 65)"}]}