{"sha": "79cc5099b1825dae5507e74a09b6f6eb913667c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5Y2M1MDk5YjE4MjVkYWU1NTA3ZTc0YTA5YjZmNmViOTEzNjY3Yzg=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-29T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-29T17:09:53Z"}, "message": "Use RwLock instead of Lock for SourceMap::files", "tree": {"sha": "18fa5f5de07ad36f81faed4f7bd402a958ae6008", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18fa5f5de07ad36f81faed4f7bd402a958ae6008"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79cc5099b1825dae5507e74a09b6f6eb913667c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79cc5099b1825dae5507e74a09b6f6eb913667c8", "html_url": "https://github.com/rust-lang/rust/commit/79cc5099b1825dae5507e74a09b6f6eb913667c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79cc5099b1825dae5507e74a09b6f6eb913667c8/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2661a4edb90773b22bab3af31fa12a25963c1b01", "url": "https://api.github.com/repos/rust-lang/rust/commits/2661a4edb90773b22bab3af31fa12a25963c1b01", "html_url": "https://github.com/rust-lang/rust/commit/2661a4edb90773b22bab3af31fa12a25963c1b01"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "26706cd2b1b770333f5a77ae607a17cf0ebcca3e", "filename": "compiler/rustc_data_structures/src/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79cc5099b1825dae5507e74a09b6f6eb913667c8/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79cc5099b1825dae5507e74a09b6f6eb913667c8/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs?ref=79cc5099b1825dae5507e74a09b6f6eb913667c8", "patch": "@@ -512,7 +512,7 @@ impl<T: Clone> Clone for Lock<T> {\n     }\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, Default)]\n pub struct RwLock<T>(InnerRwLock<T>);\n \n impl<T> RwLock<T> {"}, {"sha": "f067cdb730864f40224b90b9172e9f5635b13134", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79cc5099b1825dae5507e74a09b6f6eb913667c8/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79cc5099b1825dae5507e74a09b6f6eb913667c8/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=79cc5099b1825dae5507e74a09b6f6eb913667c8", "patch": "@@ -12,7 +12,7 @@ pub use crate::*;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::StableHasher;\n-use rustc_data_structures::sync::{AtomicU32, Lock, LockGuard, Lrc, MappedLockGuard};\n+use rustc_data_structures::sync::{AtomicU32, Lrc, MappedReadGuard, ReadGuard, RwLock};\n use std::cmp;\n use std::convert::TryFrom;\n use std::hash::Hash;\n@@ -168,7 +168,7 @@ pub struct SourceMap {\n     /// The address space below this value is currently used by the files in the source map.\n     used_address_space: AtomicU32,\n \n-    files: Lock<SourceMapFiles>,\n+    files: RwLock<SourceMapFiles>,\n     file_loader: Box<dyn FileLoader + Sync + Send>,\n     // This is used to apply the file path remapping as specified via\n     // `--remap-path-prefix` to all `SourceFile`s allocated within this `SourceMap`.\n@@ -236,8 +236,8 @@ impl SourceMap {\n \n     // By returning a `MonotonicVec`, we ensure that consumers cannot invalidate\n     // any existing indices pointing into `files`.\n-    pub fn files(&self) -> MappedLockGuard<'_, monotonic::MonotonicVec<Lrc<SourceFile>>> {\n-        LockGuard::map(self.files.borrow(), |files| &mut files.source_files)\n+    pub fn files(&self) -> MappedReadGuard<'_, monotonic::MonotonicVec<Lrc<SourceFile>>> {\n+        ReadGuard::map(self.files.borrow(), |files| &files.source_files)\n     }\n \n     pub fn source_file_by_stable_id("}]}