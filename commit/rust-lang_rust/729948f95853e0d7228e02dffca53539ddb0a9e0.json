{"sha": "729948f95853e0d7228e02dffca53539ddb0a9e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyOTk0OGY5NTg1M2UwZDcyMjhlMDJkZmZjYTUzNTM5ZGRiMGE5ZTA=", "commit": {"author": {"name": "Luxko", "email": "liarluxlux@gmail.com", "date": "2017-02-23T07:50:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-23T07:50:16Z"}, "message": "Update exception-safety.md", "tree": {"sha": "b9aa71fb74643142ee17184879294ff10823dfe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9aa71fb74643142ee17184879294ff10823dfe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/729948f95853e0d7228e02dffca53539ddb0a9e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/729948f95853e0d7228e02dffca53539ddb0a9e0", "html_url": "https://github.com/rust-lang/rust/commit/729948f95853e0d7228e02dffca53539ddb0a9e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/729948f95853e0d7228e02dffca53539ddb0a9e0/comments", "author": {"login": "DaseinPhaos", "id": 11028753, "node_id": "MDQ6VXNlcjExMDI4NzUz", "avatar_url": "https://avatars.githubusercontent.com/u/11028753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DaseinPhaos", "html_url": "https://github.com/DaseinPhaos", "followers_url": "https://api.github.com/users/DaseinPhaos/followers", "following_url": "https://api.github.com/users/DaseinPhaos/following{/other_user}", "gists_url": "https://api.github.com/users/DaseinPhaos/gists{/gist_id}", "starred_url": "https://api.github.com/users/DaseinPhaos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DaseinPhaos/subscriptions", "organizations_url": "https://api.github.com/users/DaseinPhaos/orgs", "repos_url": "https://api.github.com/users/DaseinPhaos/repos", "events_url": "https://api.github.com/users/DaseinPhaos/events{/privacy}", "received_events_url": "https://api.github.com/users/DaseinPhaos/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84ca464f9c731b07a68cb264ecd37c9aacc2e475", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ca464f9c731b07a68cb264ecd37c9aacc2e475", "html_url": "https://github.com/rust-lang/rust/commit/84ca464f9c731b07a68cb264ecd37c9aacc2e475"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a3cbc6abd69cc98023f139e408d15aab03007dc8", "filename": "src/doc/nomicon/src/exception-safety.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/729948f95853e0d7228e02dffca53539ddb0a9e0/src%2Fdoc%2Fnomicon%2Fsrc%2Fexception-safety.md", "raw_url": "https://github.com/rust-lang/rust/raw/729948f95853e0d7228e02dffca53539ddb0a9e0/src%2Fdoc%2Fnomicon%2Fsrc%2Fexception-safety.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fsrc%2Fexception-safety.md?ref=729948f95853e0d7228e02dffca53539ddb0a9e0", "patch": "@@ -137,7 +137,7 @@ If Rust had `try` and `finally` like in Java, we could do the following:\n bubble_up(heap, index):\n     let elem = heap[index]\n     try:\n-        while index != 0 && element < heap[parent(index)]:\n+ \u00a0 \u00a0 \u00a0 \u00a0while index != 0 && elem < heap[parent(index)]:\n             heap[index] = heap[parent(index)]\n             index = parent(index)\n     finally:"}]}