{"sha": "6eadfc34591ff477b7dbfea44738c9eaccc83e92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYWRmYzM0NTkxZmY0NzdiN2RiZmVhNDQ3MzhjOWVhY2NjODNlOTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-01T09:39:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-01T09:39:28Z"}, "message": "Rollup merge of #64032 - andjo403:codegen-units, r=Mark-Simulacrum\n\nrustdoc use -Ccodegen-units=1 by default for test compile\n\nas the test is small we do not want split up in multiple codegen units\nand also as there is multiple test running at the same time this\nwill reduce the number of concurrent threads\n\ntested the test time with `./x.py test src/libcore --doc`\nfor my 16 core 32 thread cpu i get about 6% faster execution\nand my 2 core 4 thread cpu I get about 10% faster execution\n\ncc #63638\n r? @Mark-Simulacrum", "tree": {"sha": "bd826ff5610621196a3e5f34fc8a24c3323dba50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd826ff5610621196a3e5f34fc8a24c3323dba50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eadfc34591ff477b7dbfea44738c9eaccc83e92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJda5HQCRBK7hj4Ov3rIwAAdHIIAHc5if55XY0rlxfq8CL0dQqb\nc+naai+HvdgOwJio5R5mmkEET6dwYZYC2V2qUKmIl0JIJTtZgKuro5kU/MgrWo8L\nmQB8vh0CM8JpB5IomWr8QE6zb6Z73+5KO2O/EgTEDf8jZ5dhgj96PVuFAlTLpFbn\n35DPpsPFULdzMf8CG48FYqsPFr6cpwSh/0gAtLVtDilf3OzRx1hiK7IRUyRWBb+O\nYPQcHGYwJbmIz/BDY3Lf8gOitcYnXqM5959q5hvNd233ZTPDYjVsGYFEyVGA18gv\neQ9/thIzNhlMh1FES3xNwwDnnelCN+SCgges+LU9gHvoUs+PgUH6ziVpXcjH6is=\n=NAKH\n-----END PGP SIGNATURE-----\n", "payload": "tree bd826ff5610621196a3e5f34fc8a24c3323dba50\nparent bccf49ffc824fa55d8e60c4ff1868bb105c096e5\nparent 0b478e6d46f273041ea7a4e048083d7d4e54c8fe\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567330768 +0200\ncommitter GitHub <noreply@github.com> 1567330768 +0200\n\nRollup merge of #64032 - andjo403:codegen-units, r=Mark-Simulacrum\n\nrustdoc use -Ccodegen-units=1 by default for test compile\n\nas the test is small we do not want split up in multiple codegen units\nand also as there is multiple test running at the same time this\nwill reduce the number of concurrent threads\n\ntested the test time with `./x.py test src/libcore --doc`\nfor my 16 core 32 thread cpu i get about 6% faster execution\nand my 2 core 4 thread cpu I get about 10% faster execution\n\ncc #63638\n r? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eadfc34591ff477b7dbfea44738c9eaccc83e92", "html_url": "https://github.com/rust-lang/rust/commit/6eadfc34591ff477b7dbfea44738c9eaccc83e92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eadfc34591ff477b7dbfea44738c9eaccc83e92/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bccf49ffc824fa55d8e60c4ff1868bb105c096e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bccf49ffc824fa55d8e60c4ff1868bb105c096e5", "html_url": "https://github.com/rust-lang/rust/commit/bccf49ffc824fa55d8e60c4ff1868bb105c096e5"}, {"sha": "0b478e6d46f273041ea7a4e048083d7d4e54c8fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b478e6d46f273041ea7a4e048083d7d4e54c8fe", "html_url": "https://github.com/rust-lang/rust/commit/0b478e6d46f273041ea7a4e048083d7d4e54c8fe"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "88397aacac149118eee7313f409be854e63afa9d", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6eadfc34591ff477b7dbfea44738c9eaccc83e92/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eadfc34591ff477b7dbfea44738c9eaccc83e92/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=6eadfc34591ff477b7dbfea44738c9eaccc83e92", "patch": "@@ -263,6 +263,7 @@ fn run_test(\n     for extern_str in &options.extern_strs {\n         compiler.arg(\"--extern\").arg(&extern_str);\n     }\n+    compiler.arg(\"-Ccodegen-units=1\");\n     for codegen_options_str in &options.codegen_options_strs {\n         compiler.arg(\"-C\").arg(&codegen_options_str);\n     }"}]}