{"sha": "ef566acb8ed48213957b720b6689f99e3ce08420", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNTY2YWNiOGVkNDgyMTM5NTdiNzIwYjY2ODlmOTllM2NlMDg0MjA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-06T03:58:23Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-06T04:16:28Z"}, "message": "handle the case where multiple instances of same error are expected on the same line", "tree": {"sha": "952fc928cf042533cb4a0062d5c78f09414d1247", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/952fc928cf042533cb4a0062d5c78f09414d1247"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef566acb8ed48213957b720b6689f99e3ce08420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef566acb8ed48213957b720b6689f99e3ce08420", "html_url": "https://github.com/rust-lang/rust/commit/ef566acb8ed48213957b720b6689f99e3ce08420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef566acb8ed48213957b720b6689f99e3ce08420/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2577bd9df312a4002222570a86676192b6026d64", "url": "https://api.github.com/repos/rust-lang/rust/commits/2577bd9df312a4002222570a86676192b6026d64", "html_url": "https://github.com/rust-lang/rust/commit/2577bd9df312a4002222570a86676192b6026d64"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "94e55f363ea9cd966c92045a33f2676f877608e3", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef566acb8ed48213957b720b6689f99e3ce08420/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef566acb8ed48213957b720b6689f99e3ce08420/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=ef566acb8ed48213957b720b6689f99e3ce08420", "patch": "@@ -246,7 +246,7 @@ fn check_expected_errors(expected_errors: [errors::expected_error],\n     // is the ending point, and * represents ANSI color codes.\n     for line: str in str::split_char(procres.stderr, '\\n') {\n         let mut was_expected = false;\n-        vec::iteri(expected_errors) {|i, ee|\n+        for vec::eachi(expected_errors) {|i, ee|\n             if !found_flags[i] {\n                 #debug[\"prefix=%s ee.kind=%s ee.msg=%s line=%s\",\n                        prefixes[i], ee.kind, ee.msg, line];\n@@ -255,6 +255,7 @@ fn check_expected_errors(expected_errors: [errors::expected_error],\n                     str::contains(line, ee.msg)) {\n                     found_flags[i] = true;\n                     was_expected = true;\n+                    break;\n                 }\n             }\n         }"}]}