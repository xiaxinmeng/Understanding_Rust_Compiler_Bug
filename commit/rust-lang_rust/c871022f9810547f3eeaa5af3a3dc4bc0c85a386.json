{"sha": "c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NzEwMjJmOTgxMDU0N2YzZWVhYTVhZjNhM2RjNGJjMGM4NWEzODY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T11:08:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T11:08:46Z"}, "message": "item-macros", "tree": {"sha": "71d74bbc3872c7cf5f0731639c196a81c93b9eee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71d74bbc3872c7cf5f0731639c196a81c93b9eee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "html_url": "https://github.com/rust-lang/rust/commit/c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b513e94d88c8702a051acf4d58c0335c9aed9db2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b513e94d88c8702a051acf4d58c0335c9aed9db2", "html_url": "https://github.com/rust-lang/rust/commit/b513e94d88c8702a051acf4d58c0335c9aed9db2"}], "stats": {"total": 167, "additions": 151, "deletions": 16}, "files": [{"sha": "0a79eeb957098c77f09ebdfdb182f446ed264895", "filename": "src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "patch": "@@ -109,6 +109,8 @@ Grammar(\n         \"TRAIT_ITEM\",\n         \"IMPL_ITEM\",\n         \"TYPE_ITEM\",\n+        \"MACRO_CALL\",\n+        \"TOKEN_TREE\",\n \n         \"PAREN_TYPE\",\n         \"TUPLE_TYPE\","}, {"sha": "8f766901e1b85493c7c594158c1c466e3db2f1e3", "filename": "src/grammar/items/mod.rs", "status": "modified", "additions": 70, "deletions": 8, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fmod.rs?ref=c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "patch": "@@ -5,27 +5,43 @@ mod structs;\n mod traits;\n mod use_item;\n \n+// test mod_contents\n+// fn foo() {}\n+// macro_rules! foo {}\n+// foo::bar!();\n+// super::baz! {}\n+// struct S;\n pub(super) fn mod_contents(p: &mut Parser, stop_on_r_curly: bool) {\n     attributes::inner_attributes(p);\n     while !p.at(EOF) && !(stop_on_r_curly && p.at(R_CURLY)) {\n-        item(p, stop_on_r_curly)\n+        item_or_macro(p, stop_on_r_curly)\n     }\n }\n \n-pub(super) fn item(p: &mut Parser, stop_on_r_curly: bool) {\n+pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool) {\n     let m = p.start();\n     match maybe_item(p) {\n         MaybeItem::Item(kind) => {\n             m.complete(p, kind);\n         }\n         MaybeItem::None => {\n-            m.abandon(p);\n-            if p.at(L_CURLY) {\n-                error_block(p, \"expected an item\");\n-            } else if !p.at(EOF) && !(stop_on_r_curly && p.at(R_CURLY)) {\n-                p.err_and_bump(\"expected an item\");\n+            if paths::is_path_start(p) {\n+                match macro_call(p) {\n+                    MacroFlavor::Curly => (),\n+                    MacroFlavor::NonCurly => {\n+                        p.expect(SEMI);\n+                    }\n+                }\n+                m.complete(p, MACRO_CALL);\n             } else {\n-                p.error(\"expected an item\");\n+                m.abandon(p);\n+                if p.at(L_CURLY) {\n+                    error_block(p, \"expected an item\");\n+                } else if !p.at(EOF) && !(stop_on_r_curly && p.at(R_CURLY)) {\n+                    p.err_and_bump(\"expected an item\");\n+                } else {\n+                    p.error(\"expected an item\");\n+                }\n             }\n         }\n         MaybeItem::Modifiers => {\n@@ -260,3 +276,49 @@ fn mod_item(p: &mut Parser) {\n         }\n     }\n }\n+\n+enum MacroFlavor {\n+    Curly,\n+    NonCurly,\n+}\n+\n+fn macro_call(p: &mut Parser) -> MacroFlavor {\n+    assert!(paths::is_path_start(p));\n+    paths::use_path(p);\n+    p.expect(EXCL);\n+    p.eat(IDENT);\n+    let flavor = match p.current() {\n+        L_CURLY => {\n+            token_tree(p);\n+            MacroFlavor::Curly\n+        }\n+        L_PAREN | L_BRACK => {\n+            token_tree(p);\n+            MacroFlavor::NonCurly\n+        }\n+        _ => {\n+            p.error(\"expected `{`, `[`, `(`\");\n+            MacroFlavor::NonCurly\n+        },\n+    };\n+\n+    flavor\n+}\n+\n+fn token_tree(p: &mut Parser) {\n+    let closing_paren_kind = match p.current() {\n+        L_CURLY => R_CURLY,\n+        L_PAREN => R_PAREN,\n+        L_BRACK => R_BRACK,\n+        _ => unreachable!(),\n+    };\n+    p.bump();\n+    while !p.at(EOF) && !p.at(closing_paren_kind) {\n+        match p.current() {\n+            L_CURLY | L_PAREN | L_BRACK => token_tree(p),\n+            R_CURLY | R_PAREN | R_BRACK => p.err_and_bump(\"unmatched brace\"),\n+            _ => p.bump()\n+        }\n+    };\n+    p.expect(closing_paren_kind);\n+}"}, {"sha": "7c09353716297d92c932322ad5a728ecdde76716", "filename": "src/grammar/items/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Ftraits.rs?ref=c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "patch": "@@ -45,7 +45,7 @@ pub(super) fn impl_item(p: &mut Parser) {\n     //     fn bar(&self) {}\n     // }\n     while !p.at(EOF) && !p.at(R_CURLY) {\n-        item(p, true);\n+        item_or_macro(p, true);\n     }\n     p.expect(R_CURLY);\n }"}, {"sha": "8ac13fd63105d5472ea90235b8f82a23fe0c590a", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "patch": "@@ -103,6 +103,8 @@ pub enum SyntaxKind {\n     TRAIT_ITEM,\n     IMPL_ITEM,\n     TYPE_ITEM,\n+    MACRO_CALL,\n+    TOKEN_TREE,\n     PAREN_TYPE,\n     TUPLE_TYPE,\n     NEVER_TYPE,\n@@ -322,6 +324,8 @@ impl SyntaxKind {\n             TRAIT_ITEM => &SyntaxInfo { name: \"TRAIT_ITEM\" },\n             IMPL_ITEM => &SyntaxInfo { name: \"IMPL_ITEM\" },\n             TYPE_ITEM => &SyntaxInfo { name: \"TYPE_ITEM\" },\n+            MACRO_CALL => &SyntaxInfo { name: \"MACRO_CALL\" },\n+            TOKEN_TREE => &SyntaxInfo { name: \"TOKEN_TREE\" },\n             PAREN_TYPE => &SyntaxInfo { name: \"PAREN_TYPE\" },\n             TUPLE_TYPE => &SyntaxInfo { name: \"TUPLE_TYPE\" },\n             NEVER_TYPE => &SyntaxInfo { name: \"NEVER_TYPE\" },"}, {"sha": "62ca3108044cd7a6d897bebd73594c20e02f7956", "filename": "tests/data/parser/err/0008_item_block_recovery.txt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Ferr%2F0008_item_block_recovery.txt?ref=c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "patch": "@@ -13,15 +13,15 @@ FILE@[0; 95)\n       WHITESPACE@[10; 11)\n       R_CURLY@[11; 12)\n       WHITESPACE@[12; 14)\n-      err: `expected an item`\n-  ERROR@[14; 17)\n-    IDENT@[14; 17) \"bar\"\n-    err: `expected an item`\n-  ERROR@[17; 18)\n+  MACRO_CALL@[14; 20)\n+    PATH@[14; 17)\n+      PATH_SEGMENT@[14; 17)\n+        NAME_REF@[14; 17)\n+          IDENT@[14; 17) \"bar\"\n+          err: `expected EXCL`\n     L_PAREN@[17; 18)\n-    err: `expected an item`\n-  ERROR@[18; 20)\n     R_PAREN@[18; 19)\n+    err: `expected SEMI`\n     WHITESPACE@[19; 20)\n     err: `expected an item`\n   ERROR@[20; 82)"}, {"sha": "24a15c5c5c9439044f43eede7c46935e1a4cd72c", "filename": "tests/data/parser/inline/0078_mod_contents.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/tests%2Fdata%2Fparser%2Finline%2F0078_mod_contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/tests%2Fdata%2Fparser%2Finline%2F0078_mod_contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0078_mod_contents.rs?ref=c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "patch": "@@ -0,0 +1,5 @@\n+fn foo() {}\n+macro_rules! foo {}\n+foo::bar!();\n+super::baz! {}\n+struct S;"}, {"sha": "4f97c3ee31a98fbefd591368d496246147006636", "filename": "tests/data/parser/inline/0078_mod_contents.txt", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/tests%2Fdata%2Fparser%2Finline%2F0078_mod_contents.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c871022f9810547f3eeaa5af3a3dc4bc0c85a386/tests%2Fdata%2Fparser%2Finline%2F0078_mod_contents.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0078_mod_contents.txt?ref=c871022f9810547f3eeaa5af3a3dc4bc0c85a386", "patch": "@@ -0,0 +1,62 @@\n+FILE@[0; 70)\n+  FN_ITEM@[0; 12)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 12)\n+      L_CURLY@[9; 10)\n+      R_CURLY@[10; 11)\n+      WHITESPACE@[11; 12)\n+  MACRO_CALL@[12; 32)\n+    PATH@[12; 23)\n+      PATH_SEGMENT@[12; 23)\n+        NAME_REF@[12; 23)\n+          IDENT@[12; 23) \"macro_rules\"\n+    EXCL@[23; 24)\n+    WHITESPACE@[24; 25)\n+    IDENT@[25; 28) \"foo\"\n+    WHITESPACE@[28; 29)\n+    L_CURLY@[29; 30)\n+    R_CURLY@[30; 31)\n+    WHITESPACE@[31; 32)\n+  MACRO_CALL@[32; 45)\n+    PATH@[32; 40)\n+      PATH@[32; 35)\n+        PATH_SEGMENT@[32; 35)\n+          NAME_REF@[32; 35)\n+            IDENT@[32; 35) \"foo\"\n+      COLONCOLON@[35; 37)\n+      PATH_SEGMENT@[37; 40)\n+        NAME_REF@[37; 40)\n+          IDENT@[37; 40) \"bar\"\n+    EXCL@[40; 41)\n+    L_PAREN@[41; 42)\n+    R_PAREN@[42; 43)\n+    SEMI@[43; 44)\n+    WHITESPACE@[44; 45)\n+  MACRO_CALL@[45; 60)\n+    PATH@[45; 55)\n+      PATH@[45; 50)\n+        PATH_SEGMENT@[45; 50)\n+          SUPER_KW@[45; 50)\n+      COLONCOLON@[50; 52)\n+      PATH_SEGMENT@[52; 55)\n+        NAME_REF@[52; 55)\n+          IDENT@[52; 55) \"baz\"\n+    EXCL@[55; 56)\n+    WHITESPACE@[56; 57)\n+    L_CURLY@[57; 58)\n+    R_CURLY@[58; 59)\n+    WHITESPACE@[59; 60)\n+  STRUCT_ITEM@[60; 70)\n+    STRUCT_KW@[60; 66)\n+    NAME@[66; 68)\n+      WHITESPACE@[66; 67)\n+      IDENT@[67; 68) \"S\"\n+    SEMI@[68; 69)\n+    WHITESPACE@[69; 70)"}]}