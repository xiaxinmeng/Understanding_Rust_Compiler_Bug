{"sha": "b5255b4534856e25cd96b1041000837d65cc51a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MjU1YjQ1MzQ4NTZlMjVjZDk2YjEwNDEwMDA4MzdkNjVjYzUxYTY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T18:42:24Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T18:42:24Z"}, "message": "Shrink size of glue calls. Wins a few tens of kb on rustc.", "tree": {"sha": "75e7d6674b2c2b4f5a900efabb33b994147339f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75e7d6674b2c2b4f5a900efabb33b994147339f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5255b4534856e25cd96b1041000837d65cc51a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5255b4534856e25cd96b1041000837d65cc51a6", "html_url": "https://github.com/rust-lang/rust/commit/b5255b4534856e25cd96b1041000837d65cc51a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5255b4534856e25cd96b1041000837d65cc51a6/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07d355d1afe0ff832e78f496bc98337c22822752", "url": "https://api.github.com/repos/rust-lang/rust/commits/07d355d1afe0ff832e78f496bc98337c22822752", "html_url": "https://github.com/rust-lang/rust/commit/07d355d1afe0ff832e78f496bc98337c22822752"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "e3587bdd0d1fea5fbbc44f00bccb71667a93fba4", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5255b4534856e25cd96b1041000837d65cc51a6/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/b5255b4534856e25cd96b1041000837d65cc51a6/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=b5255b4534856e25cd96b1041000837d65cc51a6", "patch": "@@ -1798,8 +1798,6 @@ let trans_visitor\n       (clo:Il.cell option)\n       : unit =\n     let inner dst cloptr =\n-      let scratch = next_vreg_cell Il.voidptr_t in\n-      let pop _ = emit (Il.Pop scratch) in\n         for i = ((Array.length args) - 1) downto 0\n         do\n           emit (Il.Push (Il.Cell args.(i)))\n@@ -1808,10 +1806,8 @@ let trans_visitor\n         emit (Il.Push (Il.Cell abi.Abi.abi_tp_cell));\n         emit (Il.Push dst);\n         call_code code;\n-        pop ();\n-        pop ();\n-        pop ();\n-        Array.iter (fun _ -> pop()) args;\n+        add_to (Il.Reg (abi.Abi.abi_sp_reg, word_sty))\n+          (imm (Int64.mul word_sz (Int64.of_int (3 + (Array.length args)))));\n     in\n     let cloptr =\n       match clo with"}]}