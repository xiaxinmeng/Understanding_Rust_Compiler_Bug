{"sha": "5527c5dc060754d7ca17c19886bc357ef29ec8fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MjdjNWRjMDYwNzU0ZDdjYTE3YzE5ODg2YmMzNTdlZjI5ZWM4ZmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-01T04:41:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-01T04:41:46Z"}, "message": "auto merge of #14561 : jakub-/rust/issue-11319, r=alexcrichton\n\nFixes #11319", "tree": {"sha": "e031f586a35917898e354d8e34b4bfac15db6740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e031f586a35917898e354d8e34b4bfac15db6740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5527c5dc060754d7ca17c19886bc357ef29ec8fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5527c5dc060754d7ca17c19886bc357ef29ec8fc", "html_url": "https://github.com/rust-lang/rust/commit/5527c5dc060754d7ca17c19886bc357ef29ec8fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5527c5dc060754d7ca17c19886bc357ef29ec8fc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee97698f854f42b4921ac7dca9cbeaaf2decae98", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee97698f854f42b4921ac7dca9cbeaaf2decae98", "html_url": "https://github.com/rust-lang/rust/commit/ee97698f854f42b4921ac7dca9cbeaaf2decae98"}, {"sha": "b64046a5b072a34a0940785a9301669a2ea00031", "url": "https://api.github.com/repos/rust-lang/rust/commits/b64046a5b072a34a0940785a9301669a2ea00031", "html_url": "https://github.com/rust-lang/rust/commit/b64046a5b072a34a0940785a9301669a2ea00031"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "54b673b0b982fef571918ab2a6d23fa8b4ec33f9", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=5527c5dc060754d7ca17c19886bc357ef29ec8fc", "patch": "@@ -87,7 +87,7 @@ pub fn check_match(fcx: &FnCtxt,\n         result_ty =\n             infer::common_supertype(\n                 fcx.infcx(),\n-                infer::MatchExpression(expr.span),\n+                infer::MatchExpressionArm(expr.span, arm.body.span),\n                 true, // result_ty is \"expected\" here\n                 result_ty,\n                 bty);"}, {"sha": "c5c3e90d5eabf131708f0b9fe6df2e3e8eb84edf", "filename": "src/librustc/middle/typeck/infer/error_reporting.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ferror_reporting.rs?ref=5527c5dc060754d7ca17c19886bc357ef29ec8fc", "patch": "@@ -346,7 +346,7 @@ impl<'a> ErrorReporting for InferCtxt<'a> {\n             infer::ExprAssignable(_) => \"mismatched types\",\n             infer::RelateTraitRefs(_) => \"mismatched traits\",\n             infer::RelateSelfType(_) => \"mismatched types\",\n-            infer::MatchExpression(_) => \"match arms have incompatible types\",\n+            infer::MatchExpressionArm(_, _) => \"match arms have incompatible types\",\n             infer::IfExpression(_) => \"if and else have incompatible types\",\n         };\n \n@@ -356,6 +356,12 @@ impl<'a> ErrorReporting for InferCtxt<'a> {\n                  message_root_str,\n                  expected_found_str,\n                  ty::type_err_to_str(self.tcx, terr)).as_slice());\n+\n+        match trace.origin {\n+            infer::MatchExpressionArm(_, arm_span) =>\n+                self.tcx.sess.span_note(arm_span, \"match arm with an incompatible type\"),\n+            _ => ()\n+        }\n     }\n \n     fn report_and_explain_type_error(&self,\n@@ -1281,7 +1287,7 @@ impl<'a> ErrorReportingHelpers for InferCtxt<'a> {\n                     infer::RelateSelfType(_) => {\n                         format!(\"type matches impl\")\n                     }\n-                    infer::MatchExpression(_) => {\n+                    infer::MatchExpressionArm(_, _) => {\n                         format!(\"match arms have compatible types\")\n                     }\n                     infer::IfExpression(_) => {"}, {"sha": "e81e2713cd4875be24842dfa9155b09183445be0", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=5527c5dc060754d7ca17c19886bc357ef29ec8fc", "patch": "@@ -116,8 +116,8 @@ pub enum TypeOrigin {\n     // Relating trait refs when resolving vtables\n     RelateSelfType(Span),\n \n-    // Computing common supertype in a match expression\n-    MatchExpression(Span),\n+    // Computing common supertype in the arms of a match expression\n+    MatchExpressionArm(Span, Span),\n \n     // Computing common supertype in an if expression\n     IfExpression(Span),\n@@ -831,7 +831,7 @@ impl TypeOrigin {\n             Misc(span) => span,\n             RelateTraitRefs(span) => span,\n             RelateSelfType(span) => span,\n-            MatchExpression(span) => span,\n+            MatchExpressionArm(match_span, _) => match_span,\n             IfExpression(span) => span,\n         }\n     }\n@@ -853,8 +853,8 @@ impl Repr for TypeOrigin {\n             RelateSelfType(a) => {\n                 format!(\"RelateSelfType({})\", a.repr(tcx))\n             }\n-            MatchExpression(a) => {\n-                format!(\"MatchExpression({})\", a.repr(tcx))\n+            MatchExpressionArm(a, b) => {\n+                format!(\"MatchExpressionArm({}, {})\", a.repr(tcx), b.repr(tcx))\n             }\n             IfExpression(a) => {\n                 format!(\"IfExpression({})\", a.repr(tcx))"}, {"sha": "1d9250305ef49f9652ca480a4c65a190586f2c2a", "filename": "src/test/compile-fail/issue-11319.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Ftest%2Fcompile-fail%2Fissue-11319.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5527c5dc060754d7ca17c19886bc357ef29ec8fc/src%2Ftest%2Fcompile-fail%2Fissue-11319.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11319.rs?ref=5527c5dc060754d7ca17c19886bc357ef29ec8fc", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    match Some(10) {\n+    //~^ ERROR match arms have incompatible types: expected `bool` but found `()`\n+        Some(5) => false,\n+        Some(2) => true,\n+        None    => (), //~ NOTE match arm with an incompatible type\n+        _       => true\n+    }\n+}"}]}