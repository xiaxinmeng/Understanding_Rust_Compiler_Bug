{"sha": "7b1916d25347913fce3e336517ef22025ccd875f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMTkxNmQyNTM0NzkxM2ZjZTNlMzM2NTE3ZWYyMjAyNWNjZDg3NWY=", "commit": {"author": {"name": "petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-05-19T16:43:33Z"}, "committer": {"name": "petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-05-20T10:03:18Z"}, "message": "Fix panic in lint for out of range literals", "tree": {"sha": "ff507429d6f650bbd328e01e6c5d0fb239c7eacf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff507429d6f650bbd328e01e6c5d0fb239c7eacf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b1916d25347913fce3e336517ef22025ccd875f", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1916d25347913fce3e336517ef22025ccd875f", "html_url": "https://github.com/rust-lang/rust/commit/7b1916d25347913fce3e336517ef22025ccd875f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b1916d25347913fce3e336517ef22025ccd875f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d718f236dfdb086099d6147895416422aae4283", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d718f236dfdb086099d6147895416422aae4283", "html_url": "https://github.com/rust-lang/rust/commit/6d718f236dfdb086099d6147895416422aae4283"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "bb449de2e8cb96b2b90f4d1fa18f9c3f54f643f4", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b1916d25347913fce3e336517ef22025ccd875f/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1916d25347913fce3e336517ef22025ccd875f/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=7b1916d25347913fce3e336517ef22025ccd875f", "patch": "@@ -206,8 +206,8 @@ impl LintPass for TypeLimits {\n                                 let (min, max) = int_ty_range(int_type);\n                                 let negative = self.negated_expr_id == e.id;\n \n-                                if (negative && v > min.wrapping_neg() as u64) ||\n-                                   (!negative && v > (max.abs() as u64)) {\n+                                if (negative && min != i64::MIN && v > -min as u64) ||\n+                                   (!negative && v > max as u64) {\n                                     cx.span_lint(OVERFLOWING_LITERALS, e.span,\n                                                  &*format!(\"literal out of range for {:?}\", t));\n                                     return;"}]}