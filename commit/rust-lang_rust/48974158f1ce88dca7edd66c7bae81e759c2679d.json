{"sha": "48974158f1ce88dca7edd66c7bae81e759c2679d", "node_id": "C_kwDOAAsO6NoAKDQ4OTc0MTU4ZjFjZTg4ZGNhN2VkZDY2YzdiYWU4MWU3NTljMjY3OWQ", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-12-13T15:06:57Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-12-13T15:06:57Z"}, "message": "Adjust wording for review", "tree": {"sha": "3be646b52e4bc20050839bd8069e444e84e9c630", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3be646b52e4bc20050839bd8069e444e84e9c630"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48974158f1ce88dca7edd66c7bae81e759c2679d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48974158f1ce88dca7edd66c7bae81e759c2679d", "html_url": "https://github.com/rust-lang/rust/commit/48974158f1ce88dca7edd66c7bae81e759c2679d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48974158f1ce88dca7edd66c7bae81e759c2679d/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cbd0dcf9372814cacc43d1860fce8bd36c44489", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cbd0dcf9372814cacc43d1860fce8bd36c44489", "html_url": "https://github.com/rust-lang/rust/commit/7cbd0dcf9372814cacc43d1860fce8bd36c44489"}], "stats": {"total": 63, "additions": 33, "deletions": 30}, "files": [{"sha": "1404bc271673eb41d518c639cf787f052fd809ef", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48974158f1ce88dca7edd66c7bae81e759c2679d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48974158f1ce88dca7edd66c7bae81e759c2679d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=48974158f1ce88dca7edd66c7bae81e759c2679d", "patch": "@@ -487,9 +487,12 @@ fn check_gat_where_clauses(\n             );\n \n             let bound = if clauses.len() > 1 { \"these bounds are\" } else { \"this bound is\" };\n-            err.note(&format!(\"{} required to ensure that impls have maximum flexibility\", bound));\n+            err.note(&format!(\n+                \"{} currently required to ensure that impls have maximum flexibility\",\n+                bound\n+            ));\n             err.note(\n-                \"see issue #87479 \\\n+                \"we are soliciting feedback, see issue #87479 \\\n                  <https://github.com/rust-lang/rust/issues/87479> \\\n                  for more information\",\n             );"}, {"sha": "d4b2267d3ddc713e8796b6b47074b80ee5225d36", "filename": "src/test/ui/generic-associated-types/issue-86787.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48974158f1ce88dca7edd66c7bae81e759c2679d/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48974158f1ce88dca7edd66c7bae81e759c2679d/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86787.stderr?ref=48974158f1ce88dca7edd66c7bae81e759c2679d", "patch": "@@ -6,8 +6,8 @@ LL |     type TRef<'a>;\n    |                  |\n    |                  help: add the required where clause: `where Self: 'a`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: aborting due to previous error\n "}, {"sha": "3b9146ad875a34b36394f4b81e72910f92c8be0a", "filename": "src/test/ui/generic-associated-types/self-outlives-lint.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/48974158f1ce88dca7edd66c7bae81e759c2679d/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48974158f1ce88dca7edd66c7bae81e759c2679d/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.stderr?ref=48974158f1ce88dca7edd66c7bae81e759c2679d", "patch": "@@ -6,8 +6,8 @@ LL |     type Item<'x>;\n    |                  |\n    |                  help: add the required where clause: `where Self: 'x`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Out`\n   --> $DIR/self-outlives-lint.rs:25:5\n@@ -17,8 +17,8 @@ LL |     type Out<'x>;\n    |                 |\n    |                 help: add the required where clause: `where T: 'x`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Out`\n   --> $DIR/self-outlives-lint.rs:39:5\n@@ -28,8 +28,8 @@ LL |     type Out<'x>;\n    |                 |\n    |                 help: add the required where clause: `where T: 'x`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bounds on `Out`\n   --> $DIR/self-outlives-lint.rs:46:5\n@@ -39,8 +39,8 @@ LL |     type Out<'x, 'y>;\n    |                     |\n    |                     help: add the required where clauses: `where T: 'x, U: 'y`\n    |\n-   = note: these bounds are required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: these bounds are currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Out`\n   --> $DIR/self-outlives-lint.rs:61:5\n@@ -50,8 +50,8 @@ LL |     type Out<'x, D>;\n    |                    |\n    |                    help: add the required where clause: `where D: 'x`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Out`\n   --> $DIR/self-outlives-lint.rs:77:5\n@@ -61,8 +61,8 @@ LL |     type Out<'x, D>;\n    |                    |\n    |                    help: add the required where clause: `where D: 'x`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Out`\n   --> $DIR/self-outlives-lint.rs:92:5\n@@ -72,8 +72,8 @@ LL |     type Out<'x, D>;\n    |                    |\n    |                    help: add the required where clause: `where D: 'x`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bounds on `Bar`\n   --> $DIR/self-outlives-lint.rs:114:5\n@@ -83,8 +83,8 @@ LL |     type Bar<'b>;\n    |                 |\n    |                 help: add the required where clauses: `where Self: 'a, Self: 'b`\n    |\n-   = note: these bounds are required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: these bounds are currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Bar`\n   --> $DIR/self-outlives-lint.rs:122:5\n@@ -94,8 +94,8 @@ LL |     type Bar<'b>;\n    |                 |\n    |                 help: add the required where clause: `where Self: 'b`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Bar`\n   --> $DIR/self-outlives-lint.rs:129:5\n@@ -105,8 +105,8 @@ LL |     type Bar<'b>;\n    |                 |\n    |                 help: add the required where clause: `where Self: 'b`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Iterator`\n   --> $DIR/self-outlives-lint.rs:143:5\n@@ -116,8 +116,8 @@ LL |     type Iterator<'a>: Iterator<Item = Self::Item<'a>>;\n    |                                                       |\n    |                                                       help: add the required where clause: `where Self: 'a`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Bar`\n   --> $DIR/self-outlives-lint.rs:151:5\n@@ -127,8 +127,8 @@ LL |     type Bar<'a, 'b>;\n    |                     |\n    |                     help: add the required where clause: `where 'b: 'a`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: missing required bound on `Fut`\n   --> $DIR/self-outlives-lint.rs:167:5\n@@ -138,8 +138,8 @@ LL |     type Fut<'out>;\n    |                   |\n    |                   help: add the required where clause: `where 'ctx: 'out`\n    |\n-   = note: this bound is required to ensure that impls have maximum flexibility\n-   = note: see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n+   = note: this bound is currently required to ensure that impls have maximum flexibility\n+   = note: we are soliciting feedback, see issue #87479 <https://github.com/rust-lang/rust/issues/87479> for more information\n \n error: aborting due to 13 previous errors\n "}]}