{"sha": "275deacc4c4befb1d73ae04db88d80edd724a4ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NWRlYWNjNGM0YmVmYjFkNzNhZTA0ZGI4OGQ4MGVkZDcyNGE0ZWQ=", "commit": {"author": {"name": "Danilo Bargen", "email": "mail@dbrgn.ch", "date": "2018-12-14T09:53:19Z"}, "committer": {"name": "Danilo Bargen", "email": "mail@dbrgn.ch", "date": "2018-12-14T09:53:19Z"}, "message": "Fix docs path to PermissionsExt", "tree": {"sha": "a5fd1a29ee9bf250dd43659326c9af51740f3884", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5fd1a29ee9bf250dd43659326c9af51740f3884"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/275deacc4c4befb1d73ae04db88d80edd724a4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/275deacc4c4befb1d73ae04db88d80edd724a4ed", "html_url": "https://github.com/rust-lang/rust/commit/275deacc4c4befb1d73ae04db88d80edd724a4ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/275deacc4c4befb1d73ae04db88d80edd724a4ed/comments", "author": {"login": "dbrgn", "id": 105168, "node_id": "MDQ6VXNlcjEwNTE2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dbrgn", "id": 105168, "node_id": "MDQ6VXNlcjEwNTE2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "664ede88faf57b8fc09715fc66cd9e46490ce64d", "url": "https://api.github.com/repos/rust-lang/rust/commits/664ede88faf57b8fc09715fc66cd9e46490ce64d", "html_url": "https://github.com/rust-lang/rust/commit/664ede88faf57b8fc09715fc66cd9e46490ce64d"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "edcfdd9e5348336c2764ab4fb7607c465542e656", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/275deacc4c4befb1d73ae04db88d80edd724a4ed/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/275deacc4c4befb1d73ae04db88d80edd724a4ed/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=275deacc4c4befb1d73ae04db88d80edd724a4ed", "patch": "@@ -195,9 +195,10 @@ pub struct OpenOptions(fs_imp::OpenOptions);\n /// This module only currently provides one bit of information, [`readonly`],\n /// which is exposed on all currently supported platforms. Unix-specific\n /// functionality, such as mode bits, is available through the\n-/// `os::unix::PermissionsExt` trait.\n+/// [`PermissionsExt`] trait.\n ///\n /// [`readonly`]: struct.Permissions.html#method.readonly\n+/// [`PermissionsExt`]: ../os/unix/fs/trait.PermissionsExt.html\n #[derive(Clone, PartialEq, Eq, Debug)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Permissions(fs_imp::FilePermissions);"}]}