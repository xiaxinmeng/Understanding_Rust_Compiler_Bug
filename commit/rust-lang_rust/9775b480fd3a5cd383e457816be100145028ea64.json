{"sha": "9775b480fd3a5cd383e457816be100145028ea64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NzViNDgwZmQzYTVjZDM4M2U0NTc4MTZiZTEwMDE0NTAyOGVhNjQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-08T23:32:13Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-01-08T23:32:13Z"}, "message": "add spawn_connected", "tree": {"sha": "815b761050739941c6954f33f28d056c2b4bc377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/815b761050739941c6954f33f28d056c2b4bc377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9775b480fd3a5cd383e457816be100145028ea64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9775b480fd3a5cd383e457816be100145028ea64", "html_url": "https://github.com/rust-lang/rust/commit/9775b480fd3a5cd383e457816be100145028ea64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9775b480fd3a5cd383e457816be100145028ea64/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91cd57e87284009ea3af6c3366d9a38f4770849b", "url": "https://api.github.com/repos/rust-lang/rust/commits/91cd57e87284009ea3af6c3366d9a38f4770849b", "html_url": "https://github.com/rust-lang/rust/commit/91cd57e87284009ea3af6c3366d9a38f4770849b"}], "stats": {"total": 79, "additions": 66, "deletions": 13}, "files": [{"sha": "afc9d7837126ab33213b8d428ec613f26631ffe4", "filename": "src/libcore/task.rs", "status": "modified", "additions": 47, "deletions": 13, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/9775b480fd3a5cd383e457816be100145028ea64/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9775b480fd3a5cd383e457816be100145028ea64/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=9775b480fd3a5cd383e457816be100145028ea64", "patch": "@@ -46,6 +46,9 @@ export tr_failure;\n export get_task;\n export spawn;\n export spawn_joinable;\n+export spawn_connected;\n+export connected_fn;\n+export connected_task;\n \n #[abi = \"rust-intrinsic\"]\n native mod rusti {\n@@ -190,27 +193,58 @@ tag task_notification {\n }\n \n /*\n-type connected_fn<ToCh, FrCh> = sendfn(comm::chan<FrCh>, comm::port<ToCh>);\n+Type: connected_fn\n+\n+The prototype for a connected child task function.  Such a function will be\n+supplied with a channel to send messages to the parent and a port to receive\n+messages from the parent. The type parameter `ToCh` is the type for messages\n+sent from the parent to the child and `FrCh` is the type for messages sent\n+from the child to the parent. */\n+type connected_fn<ToCh, FrCh> = sendfn(comm::port<ToCh>, comm::chan<FrCh>);\n+\n+/*\n+Type: connected_fn\n+\n+The result type of <spawn_connected>\n+*/\n type connected_task<ToCh, FrCh> = {\n-    port: comm::port<FrCh>,\n-    chan: comm::chan<ToCh>,\n+    from_child: comm::port<FrCh>,\n+    to_child: comm::chan<ToCh>,\n     task: task\n };\n+\n+/*\n+Function: spawn_connected\n+\n+Spawns a child task along with a port/channel for exchanging messages\n+with the parent task.  The type `ToCh` represents messages sent to the child\n+and `FrCh` messages received from the child.\n+\n+Parameters:\n+\n+f - the child function to execute\n+\n+Returns:\n+\n+The new child task along with the port to receive messages and the channel\n+to send messages.\n+*/\n fn spawn_connected<ToCh:send, FrCh:send>(f: connected_fn<ToCh, FrCh>)\n-    -> connected_fn {\n-    let from_child_port = comm::port<FrCh>();\n+    -> connected_task<ToCh,FrCh> {\n+    let from_child_port = comm::port::<FrCh>();\n     let from_child_chan = comm::chan(from_child_port);\n-    let get_to_child_port = comm::port<comm::chan<ToCh>>();\n-    let get_to_child_chan = comm::chan(to_child_port);\n+    let get_to_child_port = comm::port::<comm::chan<ToCh>>();\n+    let get_to_child_chan = comm::chan(get_to_child_port);\n     let child_task = spawn(sendfn[move f]() {\n-        let to_child_port = comm::port<ToCh>();\n-        comm::send(get_to_child_chan, to_child_port);\n-        f(from_child_chan, to_child_port);\n+        let to_child_port = comm::port::<ToCh>();\n+        comm::send(get_to_child_chan, comm::chan(to_child_port));\n+        f(to_child_port, from_child_chan);\n     });\n-    let to_child_chan = comm::recv(get_out);\n-    ret {port: from_child_port, chan: to_child_chan, task: child_task};\n+    let to_child_chan = comm::recv(get_to_child_port);\n+    ret {from_child: from_child_port,\n+         to_child: to_child_chan,\n+         task: child_task};\n }\n-*/\n \n /* Section: Operations */\n "}, {"sha": "021dee4bc9853a494a69fe195701a492f65bb78b", "filename": "src/test/stdtest/task.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9775b480fd3a5cd383e457816be100145028ea64/src%2Ftest%2Fstdtest%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9775b480fd3a5cd383e457816be100145028ea64/src%2Ftest%2Fstdtest%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ftask.rs?ref=9775b480fd3a5cd383e457816be100145028ea64", "patch": "@@ -57,3 +57,22 @@ fn spawn_polymorphic() {\n     task::spawn {|| foo(true);};\n     task::spawn {|| foo(42);};\n }\n+\n+#[test]\n+fn spawn_connected_stringifier() {\n+    fn stringifer(p: comm::port<uint>, ch: comm::chan<str>) {\n+        let u = 1u;\n+        while u != 0u {\n+            u = comm::recv(p);\n+            comm::send(ch, uint::to_str(u, 10u));\n+        }\n+    }\n+\n+    let ch = task::spawn_connected(stringifer);\n+    comm::send(ch.to_child, 22u);\n+    assert \"22\" == comm::recv(ch.from_child);\n+    comm::send(ch.to_child, 44u);\n+    assert \"44\" == comm::recv(ch.from_child);\n+    comm::send(ch.to_child, 0u);\n+    assert \"0\" == comm::recv(ch.from_child);\n+}\n\\ No newline at end of file"}]}