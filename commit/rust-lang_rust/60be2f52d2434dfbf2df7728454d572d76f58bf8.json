{"sha": "60be2f52d2434dfbf2df7728454d572d76f58bf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYmUyZjUyZDI0MzRkZmJmMmRmNzcyODQ1NGQ1NzJkNzZmNThiZjg=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-01T04:43:46Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-06T02:21:13Z"}, "message": "Replace #[phase] with #[plugin] / #[macro_use] / #[no_link]", "tree": {"sha": "b6ebc58ca4d544ed39d224c4eaf0f80b900066f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6ebc58ca4d544ed39d224c4eaf0f80b900066f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60be2f52d2434dfbf2df7728454d572d76f58bf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60be2f52d2434dfbf2df7728454d572d76f58bf8", "html_url": "https://github.com/rust-lang/rust/commit/60be2f52d2434dfbf2df7728454d572d76f58bf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60be2f52d2434dfbf2df7728454d572d76f58bf8/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f314e2c4ea48c2027e627fdfca821bb6e0012e59", "url": "https://api.github.com/repos/rust-lang/rust/commits/f314e2c4ea48c2027e627fdfca821bb6e0012e59", "html_url": "https://github.com/rust-lang/rust/commit/f314e2c4ea48c2027e627fdfca821bb6e0012e59"}], "stats": {"total": 599, "additions": 363, "deletions": 236}, "files": [{"sha": "ee6bc0b4fa88bd8f20fce32e21f4835a8ddb6281", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -15,7 +15,14 @@\n \n extern crate test;\n extern crate getopts;\n-#[phase(plugin, link)] extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n \n extern crate regex;\n "}, {"sha": "ad271d230904e3a3fa629a4971d4c58066c6c700", "filename": "src/grammar/verify.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fgrammar%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fgrammar%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fverify.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,15 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs, phase, macro_rules)]\n+#![feature(globs, plugin, macro_rules)]\n \n extern crate syntax;\n extern crate rustc;\n \n-#[phase(link)]\n extern crate regex;\n \n-#[phase(link, plugin)]\n+#[macro_use]\n extern crate log;\n \n use std::collections::HashMap;"}, {"sha": "001e02f9c0dd5c29cc91e2f0f25ecd51b4697e86", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -68,14 +68,33 @@\n #![feature(lang_items, phase, unsafe_destructor, default_type_params, old_orphan_check)]\n #![feature(associated_types)]\n \n+#[cfg(stage0)]\n #[phase(plugin, link)]\n extern crate core;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate core;\n+\n extern crate libc;\n \n // Allow testing this library\n \n-#[cfg(test)] #[phase(plugin, link)] extern crate std;\n-#[cfg(test)] #[phase(plugin, link)] extern crate log;\n+#[cfg(all(test, stage0))]\n+#[phase(plugin, link)]\n+extern crate std;\n+\n+#[cfg(all(test, not(stage0)))]\n+#[macro_use]\n+extern crate std;\n+\n+#[cfg(all(test, stage0))]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(all(test, not(stage0)))]\n+#[macro_use]\n+extern crate log;\n \n // Heaps provided for low-level allocation strategies\n "}, {"sha": "7352c71e6797e43f01779364f91ebb9bd92512c6", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -29,15 +29,34 @@\n #![feature(associated_types)]\n #![no_std]\n \n-#[phase(plugin, link)] extern crate core;\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate core;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate core;\n+\n extern crate unicode;\n extern crate alloc;\n \n #[cfg(test)] extern crate test;\n \n-#[cfg(test)] #[phase(plugin, link)] extern crate std;\n-#[cfg(test)] #[phase(plugin, link)] extern crate log;\n+#[cfg(all(test, stage0))]\n+#[phase(plugin, link)]\n+extern crate std;\n+\n+#[cfg(all(test, not(stage0)))]\n+#[macro_use]\n+extern crate std;\n+\n+#[cfg(all(test, stage0))]\n+#[phase(plugin, link)]\n+extern crate log;\n \n+#[cfg(all(test, not(stage0)))]\n+#[macro_use]\n+extern crate log;\n \n pub use binary_heap::BinaryHeap;\n pub use bitv::Bitv;"}, {"sha": "744606d80553cd30ddc0d465e61541390b0916ce", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -21,9 +21,9 @@\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n-#![feature(phase, unboxed_closures)]\n+#![feature(unboxed_closures)]\n \n-#[cfg(test)] #[phase(plugin, link)] extern crate log;\n+#[cfg(test)] #[macro_use] extern crate log;\n \n extern crate libc;\n "}, {"sha": "18077795e245f16dda711c3bc2c62a0373e86d83", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -85,11 +85,11 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![feature(globs, phase, slicing_syntax)]\n+#![feature(globs, slicing_syntax)]\n #![feature(unboxed_closures)]\n #![deny(missing_docs)]\n \n-#[cfg(test)] #[phase(plugin, link)] extern crate log;\n+#[cfg(test)] #[macro_use] extern crate log;\n \n use self::Name::*;\n use self::HasArg::*;"}, {"sha": "df85e89efd17c5a805f46094b1766e0ba76be7e7", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -13,8 +13,7 @@\n //! # Examples\n //!\n //! ```\n-//! #![feature(phase)]\n-//! #[phase(plugin, link)] extern crate log;\n+//! #[macro_use] extern crate log;\n //!\n //! fn main() {\n //!     debug!(\"this is a debug {}\", \"message\");"}, {"sha": "5249e971439cddc2af07df55748bf657ffb5e552", "filename": "src/liblog/macros.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fliblog%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Fliblog%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fmacros.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -19,8 +19,7 @@\n /// # Example\n ///\n /// ```\n-/// #![feature(phase)]\n-/// #[phase(plugin, link)] extern crate log;\n+/// #[macro_use] extern crate log;\n ///\n /// fn main() {\n ///     log!(log::WARN, \"this is a warning {}\", \"message\");\n@@ -68,8 +67,7 @@ macro_rules! log {\n /// # Example\n ///\n /// ```\n-/// #![feature(phase)]\n-/// #[phase(plugin, link)] extern crate log;\n+/// #[macro_use] extern crate log;\n ///\n /// fn main() {\n ///     let error = 3u;\n@@ -94,8 +92,7 @@ macro_rules! error {\n /// # Example\n ///\n /// ```\n-/// #![feature(phase)]\n-/// #[phase(plugin, link)] extern crate log;\n+/// #[macro_use] extern crate log;\n ///\n /// fn main() {\n ///     let code = 3u;\n@@ -119,8 +116,7 @@ macro_rules! warn {\n /// # Example\n ///\n /// ```\n-/// #![feature(phase)]\n-/// #[phase(plugin, link)] extern crate log;\n+/// #[macro_use] extern crate log;\n ///\n /// fn main() {\n ///     let ret = 3i;\n@@ -146,8 +142,7 @@ macro_rules! info {\n /// # Example\n ///\n /// ```\n-/// #![feature(phase)]\n-/// #[phase(plugin, link)] extern crate log;\n+/// #[macro_use] extern crate log;\n ///\n /// fn main() {\n ///     debug!(\"x = {x}, y = {y}\", x=10i, y=20i);\n@@ -170,8 +165,7 @@ macro_rules! debug {\n /// # Example\n ///\n /// ```\n-/// #![feature(phase)]\n-/// #[phase(plugin, link)] extern crate log;\n+/// #[macro_use] extern crate log;\n ///\n /// struct Point { x: int, y: int }\n /// fn some_expensive_computation() -> Point { Point { x: 1, y: 2 } }"}, {"sha": "4017d8d57c075ffeafcefb6936a7f645d808cc9b", "filename": "src/librand/lib.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -29,11 +29,29 @@\n #![no_std]\n #![experimental]\n \n+#[cfg(stage0)]\n #[phase(plugin, link)]\n extern crate core;\n \n-#[cfg(test)] #[phase(plugin, link)] extern crate std;\n-#[cfg(test)] #[phase(plugin, link)] extern crate log;\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate core;\n+\n+#[cfg(all(test, stage0))]\n+#[phase(plugin, link)]\n+extern crate std;\n+\n+#[cfg(all(test, not(stage0)))]\n+#[macro_use]\n+extern crate std;\n+\n+#[cfg(all(test, stage0))]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(all(test, not(stage0)))]\n+#[macro_use]\n+extern crate log;\n \n use core::prelude::*;\n "}, {"sha": "e57542a6d14de1c1e2e08f91d51fe59ed594dc0f", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -30,7 +30,14 @@\n \n extern crate serialize;\n \n-#[phase(plugin, link)] extern crate log;\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n #[cfg(test)] extern crate test;\n \n pub use self::EbmlEncoderTag::*;"}, {"sha": "0084be49b561904534e693d4b69e736ab96f5eff", "filename": "src/libregex/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibregex%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibregex%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -24,7 +24,7 @@\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![allow(unknown_features)]\n-#![feature(macro_rules, phase, slicing_syntax, globs)]\n+#![feature(macro_rules, slicing_syntax, globs)]\n #![feature(unboxed_closures)]\n #![feature(associated_types)]\n #![deny(missing_docs)]"}, {"sha": "3ed712b15dfdcdb4eba468811aaff5a1634d3a42", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -40,8 +40,22 @@ extern crate rustc_back;\n extern crate serialize;\n extern crate rbml;\n extern crate collections;\n-#[phase(plugin, link)] extern crate log;\n-#[phase(plugin, link)] extern crate syntax;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate syntax;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate syntax;\n \n extern crate \"serialize\" as rustc_serialize; // used by deriving\n "}, {"sha": "c7a8457c6d24a428b962e9f011589f5f85a6cea3", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -89,12 +89,7 @@ fn warn_if_multiple_versions(diag: &SpanHandler, cstore: &CStore) {\n }\n \n fn should_link(i: &ast::ViewItem) -> bool {\n-    i.attrs.iter().all(|attr| {\n-        attr.name().get() != \"phase\" ||\n-            attr.meta_item_list().map_or(false, |phases| {\n-                attr::contains_name(phases[], \"link\")\n-            })\n-    })\n+    !attr::contains_name(i.attrs[], \"no_link\")\n }\n \n struct CrateInfo {"}, {"sha": "d17ef199aa1bd32dacc57c76fd57f8be9a8058b3", "filename": "src/librustc/plugin/load.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Fplugin%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Fplugin%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fplugin%2Fload.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -84,26 +84,36 @@ impl<'a, 'v> Visitor<'v> for PluginLoader<'a> {\n             _ => return,\n         }\n \n-        let mut plugin_phase = false;\n-        for attr in vi.attrs.iter().filter(|a| a.check_name(\"phase\")) {\n-            let phases = attr.meta_item_list().unwrap_or(&[]);\n-            if attr::contains_name(phases, \"plugin\") {\n-                plugin_phase = true;\n+        // Parse the attributes relating to macro / plugin loading.\n+        let mut load_macros = false;\n+        let mut load_registrar = false;\n+        for attr in vi.attrs.iter() {\n+            let mut used = true;\n+            match attr.name().get() {\n+                \"phase\" => {\n+                    self.sess.span_err(attr.span, \"#[phase] is deprecated; use \\\n+                                       #[macro_use], #[plugin], and/or #[no_link]\");\n+                }\n+                \"plugin\" => load_registrar = true,\n+                \"macro_use\" => load_macros = true,\n+                _ => used = false,\n             }\n-            if attr::contains_name(phases, \"syntax\") {\n-                plugin_phase = true;\n-                self.sess.span_warn(attr.span,\n-                    \"phase(syntax) is a deprecated synonym for phase(plugin)\");\n+            if used {\n+                attr::mark_used(attr);\n             }\n         }\n \n         let mut macros = vec![];\n         let mut registrar = None;\n \n-        if plugin_phase {\n+        if load_macros || load_registrar {\n             let pmd = self.reader.read_plugin_metadata(vi);\n-            macros = pmd.exported_macros();\n-            registrar = pmd.plugin_registrar();\n+            if load_macros {\n+                macros = pmd.exported_macros();\n+            }\n+            if load_registrar {\n+                registrar = pmd.plugin_registrar();\n+            }\n         }\n \n         self.plugins.macros.extend(macros.into_iter());"}, {"sha": "fd8873454b4d983fe21831454c17fe083744075e", "filename": "src/librustc/plugin/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Fplugin%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc%2Fplugin%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fplugin%2Fmod.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -43,14 +43,14 @@\n //! To use a plugin while compiling another crate:\n //!\n //! ```rust\n-//! #![feature(phase)]\n+//! #![feature(plugin)]\n //!\n-//! #[phase(plugin)]\n+//! #[plugin]\n //! extern crate myplugin;\n //! ```\n //!\n-//! If you also need the plugin crate available at runtime, use\n-//! `phase(plugin, link)`.\n+//! If you don't need the plugin crate available at runtime, use\n+//! `#[no_link]` as well.\n //!\n //! See [the compiler plugin guide](../../guide-plugin.html)\n //! for more examples."}, {"sha": "238c84e88a9e0178fb37d9e17ffca8fd71535ee5", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -34,8 +34,14 @@\n #![feature(unboxed_closures)]\n #![feature(old_orphan_check)]\n \n+#[cfg(stage0)]\n #[phase(plugin, link)]\n extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n extern crate syntax;\n extern crate serialize;\n "}, {"sha": "0600ddba01897e1e257848c6533ca51b90c9c67a", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -24,8 +24,21 @@\n #![feature(old_orphan_check)]\n #![allow(non_camel_case_types)]\n \n-#[phase(plugin, link)] extern crate log;\n-#[phase(plugin, link)] extern crate syntax;\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate syntax;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate syntax;\n \n // for \"clarity\", rename the graphviz crate to dot; graphviz within `borrowck`\n // refers to the borrowck-specific graphviz adapter traits."}, {"sha": "a43ee3e6d338d676a0a0d943d3a063bae0f9e889", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -39,11 +39,25 @@ extern crate rustc_borrowck;\n extern crate rustc_resolve;\n extern crate rustc_trans;\n extern crate rustc_typeck;\n-#[phase(plugin, link)] extern crate log;\n-#[phase(plugin, link)] extern crate syntax;\n extern crate serialize;\n extern crate \"rustc_llvm\" as llvm;\n \n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate syntax;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate syntax;\n+\n pub use syntax::diagnostic;\n \n use rustc_trans::back::link;"}, {"sha": "2237ec53ea17779eb19a336c0950a2aa942741ca", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -20,8 +20,21 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(associated_types)]\n \n-#[phase(plugin, link)] extern crate log;\n-#[phase(plugin, link)] extern crate syntax;\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate syntax;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate syntax;\n \n extern crate rustc;\n "}, {"sha": "705fecf4d198eec8b7590c53b659c719dbf93fdf", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -37,11 +37,25 @@ extern crate graphviz;\n extern crate libc;\n extern crate rustc;\n extern crate rustc_back;\n-#[phase(plugin, link)] extern crate log;\n-#[phase(plugin, link)] extern crate syntax;\n extern crate serialize;\n extern crate \"rustc_llvm\" as llvm;\n \n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate syntax;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate syntax;\n+\n pub use rustc::session;\n pub use rustc::metadata;\n pub use rustc::middle;"}, {"sha": "7206a71001be27ee37d8a4ce772049adc629e724", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -77,8 +77,21 @@ This API is completely unstable and subject to change.\n #![feature(unboxed_closures)]\n #![allow(non_camel_case_types)]\n \n-#[phase(plugin, link)] extern crate log;\n-#[phase(plugin, link)] extern crate syntax;\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate syntax;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate syntax;\n \n extern crate arena;\n extern crate rustc;"}, {"sha": "6e42c50f974c51f2a4748db95d47c78a2ddf9fbe", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -32,7 +32,14 @@ extern crate rustc_driver;\n extern crate serialize;\n extern crate syntax;\n extern crate \"test\" as testing;\n-#[phase(plugin, link)] extern crate log;\n+\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n \n extern crate \"serialize\" as rustc_serialize; // used by deriving\n "}, {"sha": "8fe15f00ded73e55f60285fd6720e192686b49fb", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -31,8 +31,14 @@ Core encoding and decoding interfaces.\n #[cfg(test)]\n extern crate test;\n \n+#[cfg(stage0)]\n #[phase(plugin, link)]\n extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n extern crate unicode;\n \n extern crate collections;"}, {"sha": "3eda6d3374ed989b37fd584517d74f590081b6f1", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -120,12 +120,30 @@\n #![macro_reexport(assert, assert_eq, debug_assert, debug_assert_eq,\n     unreachable, unimplemented, write, writeln, vec)]\n \n-#[cfg(test)] #[phase(plugin, link)] extern crate log;\n+#[cfg(all(test, stage0))]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(all(test, not(stage0)))]\n+#[macro_use]\n+extern crate log;\n \n+#[cfg(stage0)]\n #[phase(plugin, link)]\n extern crate core;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate core;\n+\n+#[cfg(stage0)]\n #[phase(plugin, link)]\n extern crate \"collections\" as core_collections;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate \"collections\" as core_collections;\n+\n extern crate \"rand\" as core_rand;\n extern crate alloc;\n extern crate unicode;"}, {"sha": "e41fef4e7787073bdb8dd14f74e44636131567f9", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -44,7 +44,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"non_ascii_idents\", Active),\n     (\"thread_local\", Active),\n     (\"link_args\", Active),\n-    (\"phase\", Active),\n+    (\"phase\", Active),  // NOTE(stage0): switch to Removed after next snapshot\n     (\"plugin_registrar\", Active),\n     (\"log_syntax\", Active),\n     (\"trace_macros\", Active),\n@@ -74,6 +74,8 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"if_let\", Accepted),\n     (\"while_let\", Accepted),\n \n+    (\"plugin\", Active),\n+\n     // A temporary feature gate used to enable parser extensions needed\n     // to bootstrap fix for #5723.\n     (\"issue_5723_bootstrap\", Accepted),\n@@ -163,22 +165,6 @@ struct MacroVisitor<'a> {\n }\n \n impl<'a, 'v> Visitor<'v> for MacroVisitor<'a> {\n-    fn visit_view_item(&mut self, i: &ast::ViewItem) {\n-        match i.node {\n-            ast::ViewItemExternCrate(..) => {\n-                for attr in i.attrs.iter() {\n-                    if attr.name().get() == \"phase\"{\n-                        self.context.gate_feature(\"phase\", attr.span,\n-                                          \"compile time crate loading is \\\n-                                           experimental and possibly buggy\");\n-                    }\n-                }\n-            },\n-            _ => { }\n-        }\n-        visit::walk_view_item(self, i)\n-    }\n-\n     fn visit_mac(&mut self, macro: &ast::Mac) {\n         let ast::MacInvocTT(ref path, _, _) = macro.node;\n         let id = path.segments.last().unwrap().identifier;\n@@ -241,10 +227,10 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n             }\n             ast::ViewItemExternCrate(..) => {\n                 for attr in i.attrs.iter() {\n-                    if attr.name().get() == \"phase\"{\n-                        self.gate_feature(\"phase\", attr.span,\n-                                          \"compile time crate loading is \\\n-                                           experimental and possibly buggy\");\n+                    if attr.check_name(\"plugin\") {\n+                        self.gate_feature(\"plugin\", attr.span,\n+                                          \"compiler plugins are experimental \\\n+                                           and possibly buggy\");\n                     }\n                 }\n             }"}, {"sha": "774a9f61cf9af92c8667abc7327f7902dd1238d5", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -31,11 +31,18 @@\n \n extern crate arena;\n extern crate fmt_macros;\n-#[phase(plugin, link)] extern crate log;\n extern crate serialize;\n extern crate term;\n extern crate libc;\n \n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n+\n extern crate \"serialize\" as rustc_serialize; // used by deriving\n \n pub mod util {"}, {"sha": "4ef7eb97a218946e8c16b2b24d70c91d7617aff4", "filename": "src/libsyntax/std_inject.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibsyntax%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibsyntax%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fstd_inject.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -65,12 +65,8 @@ impl<'a> fold::Folder for StandardLibraryInjector<'a> {\n                                            Some((actual_crate_name, ast::CookedStr)),\n                                            ast::DUMMY_NODE_ID),\n             attrs: vec!(\n-                attr::mk_attr_outer(attr::mk_attr_id(), attr::mk_list_item(\n-                        InternedString::new(\"phase\"),\n-                        vec!(\n-                            attr::mk_word_item(InternedString::new(\"plugin\")),\n-                            attr::mk_word_item(InternedString::new(\"link\")\n-                        ))))),\n+                attr::mk_attr_outer(attr::mk_attr_id(), attr::mk_word_item(\n+                        InternedString::new(\"macro_use\")))),\n             vis: ast::Inherited,\n             span: DUMMY_SP\n         });\n@@ -82,16 +78,6 @@ impl<'a> fold::Folder for StandardLibraryInjector<'a> {\n         // don't add #![no_std] here, that will block the prelude injection later.\n         // Add it during the prelude injection instead.\n \n-        // Add #![feature(phase)] here, because we use #[phase] on extern crate std.\n-        let feat_phase_attr = attr::mk_attr_inner(attr::mk_attr_id(),\n-                                                  attr::mk_list_item(\n-                                  InternedString::new(\"feature\"),\n-                                  vec![attr::mk_word_item(InternedString::new(\"phase\"))],\n-                              ));\n-        // std_inject runs after feature checking so manually mark this attr\n-        attr::mark_used(&feat_phase_attr);\n-        krate.attrs.push(feat_phase_attr);\n-\n         krate\n     }\n }"}, {"sha": "dd42bede13ac3e69d8f35850bad010214a9e9e24", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -52,7 +52,13 @@\n \n #![deny(missing_docs)]\n \n-#[phase(plugin, link)] extern crate log;\n+#[cfg(stage0)]\n+#[phase(plugin, link)]\n+extern crate log;\n+\n+#[cfg(not(stage0))]\n+#[macro_use]\n+extern crate log;\n \n pub use terminfo::TerminfoTerminal;\n #[cfg(windows)]"}, {"sha": "18c253bcf01a86ccd6aee2cf580d6b9836e1b160", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -32,7 +32,7 @@\n        html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n \n #![allow(unknown_features)]\n-#![feature(asm, macro_rules, phase, globs, slicing_syntax)]\n+#![feature(asm, macro_rules, globs, slicing_syntax)]\n #![feature(unboxed_closures, default_type_params)]\n #![feature(old_orphan_check)]\n "}, {"sha": "5510d3e2e0df18386d82ee8c10183186d608ea70", "filename": "src/test/auxiliary/issue-13560-3.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-13560-3.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,8 +11,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"rlib\"]\n-#![feature(phase)]\n \n-#[phase(plugin)] extern crate \"issue-13560-1\" as t1;\n-#[phase(plugin, link)] extern crate \"issue-13560-2\" as t2;\n+#[macro_use] #[no_link] extern crate \"issue-13560-1\" as t1;\n+#[macro_use] extern crate \"issue-13560-2\" as t2;\n "}, {"sha": "097a5827fc4be1fe937301a2e97da7c71837a616", "filename": "src/test/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_group_plugin_test.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,12 +10,12 @@\n \n // force-host\n \n-#![feature(phase, plugin_registrar)]\n+#![feature(plugin_registrar)]\n \n extern crate syntax;\n \n // Load rustc as a plugin to get macros\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate rustc;\n \n use syntax::ast;"}, {"sha": "01ef08c475234c3a402dd66648755eed2ce5c3ef", "filename": "src/test/auxiliary/lint_plugin_test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_plugin_test.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,12 +10,12 @@\n \n // force-host\n \n-#![feature(phase, plugin_registrar)]\n+#![feature(plugin_registrar)]\n \n extern crate syntax;\n \n // Load rustc as a plugin to get macros\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate rustc;\n \n use syntax::ast;"}, {"sha": "bf4ab975cedd8c97a66dfd89a45a30488e732cdf", "filename": "src/test/auxiliary/logging_right_crate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase)]\n-#[phase(plugin, link)] extern crate log;\n+#[macro_use] extern crate log;\n \n pub fn foo<T>() {\n     fn death() -> int { panic!() }"}, {"sha": "f54e5e5c4e122984aeeaa9a36e3b64725062c564", "filename": "src/test/auxiliary/macro_reexport_2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_reexport_2.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -9,9 +9,8 @@\n // except according to those terms.\n \n #![crate_type = \"dylib\"]\n-#![feature(phase)]\n \n #![macro_reexport(reexported)]\n \n-#[phase(plugin)]\n+#[macro_use] #[no_link]\n extern crate macro_reexport_1;"}, {"sha": "39462fdc1e528b8dfce72d33d0fd2d910a31caba", "filename": "src/test/auxiliary/weak-lang-items.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fweak-lang-items.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -14,10 +14,9 @@\n // it hasn't been defined just yet. Make sure we don't explode.\n \n #![no_std]\n-#![feature(phase)]\n #![crate_type = \"rlib\"]\n \n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate core;\n \n struct A;"}, {"sha": "0a6c197f5ed31972ee977b7b06b6406187747189", "filename": "src/test/bench/shootout-regex-dna.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -41,7 +41,7 @@\n // ignore-stage1\n // ignore-cross-compile #12102\n \n-#![feature(macro_rules, phase, slicing_syntax)]\n+#![feature(macro_rules, plugin, slicing_syntax)]\n \n extern crate regex;\n "}, {"sha": "89090d5f38abec32d8f37c5c97a1d09402a86d0a", "filename": "src/test/compile-fail-fulldeps/gated-plugin.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fgated-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fgated-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fgated-plugin.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,8 +11,8 @@\n // aux-build:macro_crate_test.rs\n // ignore-stage1\n \n-#[phase(plugin)]\n-//~^ ERROR compile time crate loading is experimental and possibly buggy\n+#[plugin] #[no_link]\n+//~^ ERROR compiler plugins are experimental and possibly buggy\n extern crate macro_crate_test;\n \n fn main() {}", "previous_filename": "src/test/compile-fail-fulldeps/gated-phase.rs"}, {"sha": "11ae55639596201edee9e5ead41537e9dc11c74d", "filename": "src/test/compile-fail-fulldeps/lint-group-plugin-deny-cmdline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-group-plugin-deny-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-group-plugin-deny-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-group-plugin-deny-cmdline.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,9 @@\n // ignore-stage1\n // compile-flags: -D lint-me\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_group_plugin_test;\n \n fn lintme() { } //~ ERROR item is named 'lintme'"}, {"sha": "62007d6575a8db289fb27f98bf68d0db83601146", "filename": "src/test/compile-fail-fulldeps/lint-plugin-deny-attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-deny-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-deny-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-deny-attr.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,10 +11,10 @@\n // aux-build:lint_plugin_test.rs\n // ignore-stage1\n \n-#![feature(phase)]\n+#![feature(plugin)]\n #![deny(test_lint)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_plugin_test;\n \n fn lintme() { } //~ ERROR item is named 'lintme'"}, {"sha": "da51c047f57e1109cbb2f2d9c65f4a576fdcee8c", "filename": "src/test/compile-fail-fulldeps/lint-plugin-deny-cmdline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-deny-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-deny-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-deny-cmdline.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,9 @@\n // ignore-stage1\n // compile-flags: -D test-lint\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_plugin_test;\n \n fn lintme() { } //~ ERROR item is named 'lintme'"}, {"sha": "cf51958b53d8bec9304640e2cf4fd589675d6a7d", "filename": "src/test/compile-fail-fulldeps/lint-plugin-forbid-attrs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-forbid-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-forbid-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-forbid-attrs.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,10 +11,10 @@\n // aux-build:lint_plugin_test.rs\n // ignore-stage1\n \n-#![feature(phase)]\n+#![feature(plugin)]\n #![forbid(test_lint)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_plugin_test;\n \n fn lintme() { } //~ ERROR item is named 'lintme'"}, {"sha": "9a36143f65c6ad33e6a183faf953d864317126e2", "filename": "src/test/compile-fail-fulldeps/lint-plugin-forbid-cmdline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-forbid-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-forbid-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Flint-plugin-forbid-cmdline.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,9 @@\n // ignore-stage1\n // compile-flags: -F test-lint\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_plugin_test;\n \n fn lintme() { } //~ ERROR item is named 'lintme'"}, {"sha": "46eb4d4b2eff1d7e8d116f209845128ab0fb63a6", "filename": "src/test/compile-fail-fulldeps/macro-crate-cannot-read-embedded-ident.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-cannot-read-embedded-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-cannot-read-embedded-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-cannot-read-embedded-ident.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -20,9 +20,9 @@\n // editors, so instead he made a macro that expands into the embedded\n // ident form.\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate macro_crate_test;\n \n fn main() {"}, {"sha": "adcdba04cc7823dcb62068d6524d20852e91683f", "filename": "src/test/compile-fail-fulldeps/macro-crate-doesnt-resolve.rs", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,7 @@\n // ignore-stage1\n // ignore-android\n \n-#![feature(phase)]\n-\n-#[phase(plugin)]\n+#[macro_use] #[no_link]\n extern crate macro_crate_test;\n \n fn main() {", "previous_filename": "src/test/compile-fail-fulldeps/phase-syntax-doesnt-resolve.rs"}, {"sha": "1f44ac7cf9cae0f7604b30e8743a3242a8c6fb33", "filename": "src/test/compile-fail-fulldeps/macro-crate-rlib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-rlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-rlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-rlib.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -14,8 +14,8 @@\n // ignore-android\n // ignore-cross-compile gives a different error message\n \n-#![feature(phase)]\n-#[phase(plugin)] extern crate rlib_crate_test;\n+#![feature(plugin)]\n+#[plugin] #[no_link] extern crate rlib_crate_test;\n //~^ ERROR: plugin crate `rlib_crate_test` only found in rlib format, but must be available in dylib format\n \n fn main() {}"}, {"sha": "b5ff8b715563288616a5a0fc5637dd56e100cd13", "filename": "src/test/compile-fail-fulldeps/macro-crate-unexported-macro.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unexported-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unexported-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unexported-macro.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,7 @@\n // ignore-stage1\n // ignore-android\n \n-#![feature(phase)]\n-\n-#[phase(plugin)]\n+#[macro_use] #[no_link]\n extern crate macro_crate_test;\n \n fn main() {"}, {"sha": "65657eea1efb0e0b2871a80758bf80d21d0a9798", "filename": "src/test/compile-fail-fulldeps/macro-crate-unknown-crate.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unknown-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unknown-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unknown-crate.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase)]\n-\n-#[phase(plugin)]\n+#[macro_use] #[no_link]\n extern crate doesnt_exist; //~ ERROR can't find crate\n \n fn main() {}"}, {"sha": "cff2e5eaf8786226904552cc21d2699d59383beb", "filename": "src/test/compile-fail-fulldeps/plugin-MacroRulesTT.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fplugin-MacroRulesTT.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail-fulldeps%2Fplugin-MacroRulesTT.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fplugin-MacroRulesTT.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -13,9 +13,9 @@\n // ignore-android\n // error-pattern: plugin tried to register a new MacroRulesTT\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate macro_crate_MacroRulesTT;\n \n fn main() { }"}, {"sha": "1401494d987a28af300ad026f11f02a1c5b7afa8", "filename": "src/test/compile-fail/deprecated-phase.rs", "status": "renamed", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Fdeprecated-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Fdeprecated-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdeprecated-phase.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,11 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-#![feature(phase)]\n-\n-#[phase(plugin)]\n-use std::mem;\n+#[phase(blah)]\n+//~^ ERROR #[phase] is deprecated\n+extern crate foo;\n \n fn main() {}\n-", "previous_filename": "src/test/run-pass/phase-use-ignored.rs"}, {"sha": "6f75181c31cbc4bc0712581f148200859f9a3465", "filename": "src/test/compile-fail/fail-no-dead-code-core.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Ffail-no-dead-code-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Ffail-no-dead-code-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffail-no-dead-code-core.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,11 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase)]\n #![deny(dead_code)]\n #![allow(unreachable_code)]\n \n-#[phase(link, plugin)] extern crate core;\n+#[macro_use] extern crate core;\n \n \n fn foo() { //~ ERROR function is never used"}, {"sha": "87bdb15f6edf7786f4ccb1b0cf209793865a18f3", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -13,7 +13,7 @@\n // aux-build:stability_cfg1.rs\n // aux-build:stability_cfg2.rs\n \n-#![feature(globs, phase)]\n+#![feature(globs)]\n #![deny(unstable)]\n #![deny(deprecated)]\n #![deny(experimental)]\n@@ -23,7 +23,7 @@ mod cross_crate {\n     extern crate stability_cfg1;\n     extern crate stability_cfg2; //~ ERROR: use of experimental item\n \n-    #[phase(plugin, link)]\n+    #[macro_use]\n     extern crate lint_stability; //~ ERROR: use of unmarked item\n     use self::lint_stability::*;\n "}, {"sha": "a9c2b6a942c658dab4e09a84e3752eba44cf51db", "filename": "src/test/compile-fail/no-link.rs", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Fno-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fcompile-fail%2Fno-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-link.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,12 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase)]\n-\n-//~ WARNING phase(syntax) is a deprecated synonym for phase(plugin)\n-#[phase(syntax, link)]\n-extern crate log;\n+#[no_link]\n+extern crate libc;\n \n fn main() {\n-    debug!(\"foo\");\n+    unsafe {\n+        libc::abs(0);  //~ ERROR Use of undeclared type or module `libc`\n+                      //~^ ERROR unresolved name `libc::abs`\n+    }\n }", "previous_filename": "src/test/run-pass/deprecated-phase-syntax.rs"}, {"sha": "500305f597075a6048b1ebaaf9f70ef489fff19e", "filename": "src/test/pretty/issue-4264.pp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fpretty%2Fissue-4264.pp", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Fpretty%2Fissue-4264.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.pp?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -1,7 +1,6 @@\n-#![feature(phase)]\n #![no_std]\n #![feature(globs)]\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate \"std\" as std;\n #[prelude_import]\n use std::prelude::v1::*;"}, {"sha": "fd7c3f8cc0e4b346713e2854ff1d97d8ea09402d", "filename": "src/test/run-fail/rt-set-exit-status-panic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-fail%2Frt-set-exit-status-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-fail%2Frt-set-exit-status-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-panic.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,8 +10,7 @@\n \n // error-pattern:whatever\n \n-#![feature(phase)]\n-#[phase(plugin, link)] extern crate log;\n+#[macro_use] extern crate log;\n use std::os;\n \n fn main() {"}, {"sha": "446ef6f97e2972cb5e25156ad11fbc075d586148", "filename": "src/test/run-fail/rt-set-exit-status-panic2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-fail%2Frt-set-exit-status-panic2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-fail%2Frt-set-exit-status-panic2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-panic2.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,8 +10,7 @@\n \n // error-pattern:whatever\n \n-#![feature(phase)]\n-#[phase(plugin, link)] extern crate log;\n+#[macro_use] extern crate log;\n use std::os;\n use std::thread::Thread;\n "}, {"sha": "39ece8a464a6fe8c77600ca6f9eacab0cb27196b", "filename": "src/test/run-fail/rt-set-exit-status.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,8 +10,7 @@\n \n // error-pattern:whatever\n \n-#![feature(phase)]\n-#[phase(plugin, link)] extern crate log;\n+#[macro_use] extern crate log;\n use std::os;\n \n fn main() {"}, {"sha": "11e042c8c4a067da2747cf79f23418486b78b420", "filename": "src/test/run-make/extern-diff-internal-name/test.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Ftest.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase)]\n-\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate foo;\n \n fn main() {"}, {"sha": "a38b2cfb9628772d560e5b4703d021578b196551", "filename": "src/test/run-make/lto-syntax-extension/main.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-make%2Flto-syntax-extension%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-make%2Flto-syntax-extension%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-syntax-extension%2Fmain.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase)]\n-\n extern crate lib;\n-#[phase(plugin, link)] extern crate log;\n+#[macro_use] extern crate log;\n \n fn main() {}"}, {"sha": "11e7da770291a309e45b0d675bc92a1e237a80a8", "filename": "src/test/run-pass-fulldeps/issue_16723_multiple_items_syntax_ext.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,9 @@\n // ignore-stage1\n // ignore-android\n // aux-build:issue_16723_multiple_items_syntax_ext.rs\n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)] extern crate issue_16723_multiple_items_syntax_ext;\n+#[plugin] #[no_link] extern crate issue_16723_multiple_items_syntax_ext;\n \n multiple_items!();\n "}, {"sha": "7615b25f9e40cacab27a0915db68c4ca523800ce", "filename": "src/test/run-pass-fulldeps/lint-group-plugin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-group-plugin.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,9 @@\n // ignore-stage1\n // ignore-pretty\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_group_plugin_test;\n \n fn lintme() { } //~ WARNING item is named 'lintme'"}, {"sha": "7144d2b0f1e7162ac22652f586b82f78ad6bcba0", "filename": "src/test/run-pass-fulldeps/lint-plugin-cmdline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin-cmdline.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,9 @@\n // ignore-stage1\n // compile-flags: -A test-lint\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_plugin_test;\n \n fn lintme() { }"}, {"sha": "d11242f4fe643e92f07282bc0b898bf7a52b1c82", "filename": "src/test/run-pass-fulldeps/lint-plugin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flint-plugin.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,9 @@\n // ignore-stage1\n // ignore-pretty\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate lint_plugin_test;\n \n fn lintme() { } //~ WARNING item is named 'lintme'"}, {"sha": "a8762234ad996db102285f217f5ec591b8c7f9b6", "filename": "src/test/run-pass-fulldeps/macro-crate-does-hygiene-work.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-does-hygiene-work.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-does-hygiene-work.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-does-hygiene-work.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -14,9 +14,9 @@\n // Issue #15750: a macro that internally parses its input and then\n // uses `quote_expr!` to rearrange it should be hygiene-preserving.\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate macro_crate_test;\n \n fn main() {"}, {"sha": "d943cf0457b4feace6006a53515159ba934fa64e", "filename": "src/test/run-pass-fulldeps/macro-crate-outlive-expansion-phase.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-outlive-expansion-phase.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,9 @@\n // aux-build:plugin_crate_outlive_expansion_phase.rs\n // ignore-stage1\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate plugin_crate_outlive_expansion_phase;\n \n pub fn main() {}"}, {"sha": "4ffb8a3f74d4f0769bd368dc443ab267d595fd9b", "filename": "src/test/run-pass-fulldeps/macro-crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,9 @@\n // aux-build:macro_crate_test.rs\n // ignore-stage1\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[macro_use] #[plugin] #[no_link]\n extern crate macro_crate_test;\n \n #[into_foo]"}, {"sha": "518d02e3d75bbc6c12657d619211c607b7fe1da1", "filename": "src/test/run-pass-fulldeps/plugin-link-does-resolve.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-link-does-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-link-does-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-link-does-resolve.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -15,9 +15,9 @@\n // macro_crate_test will not compile on a cross-compiled target because\n // libsyntax is not compiled for it.\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin, link)]\n+#[plugin]\n extern crate macro_crate_test;\n \n fn main() {", "previous_filename": "src/test/run-pass-fulldeps/phase-syntax-link-does-resolve.rs"}, {"sha": "d76766094ed773d40974da44a142b0ff8b728116", "filename": "src/test/run-pass-fulldeps/roman-numerals-macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Froman-numerals-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Froman-numerals-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Froman-numerals-macro.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,9 @@\n // aux-build:roman_numerals.rs\n // ignore-stage1\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate roman_numerals;\n \n pub fn main() {"}, {"sha": "1c74c8ad08eec0bb64bfbbc338853b7f9bdb7d97", "filename": "src/test/run-pass-fulldeps/syntax-extension-with-dll-deps.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-with-dll-deps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-with-dll-deps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-with-dll-deps.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,9 @@\n // aux-build:syntax-extension-with-dll-deps-2.rs\n // ignore-stage1\n \n-#![feature(phase)]\n+#![feature(plugin)]\n \n-#[phase(plugin)]\n+#[plugin] #[no_link]\n extern crate \"syntax-extension-with-dll-deps-2\" as extension;\n \n fn main() {"}, {"sha": "e3e004105076244cb945a09ffdb4aa86a249212d", "filename": "src/test/run-pass/capturing-logging.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,7 @@\n // ignore-android (FIXME #11419)\n // exec-env:RUST_LOG=info\n \n-#![feature(phase)]\n-\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate log;\n \n use log::{set_logger, Logger, LogRecord};"}, {"sha": "e3bdbeb169295e7a8d9236af7726f6da72b95af1", "filename": "src/test/run-pass/conditional-debug-macro-off.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-debug-macro-off.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,8 +11,7 @@\n // compile-flags: --cfg ndebug\n // exec-env:RUST_LOG=conditional-debug-macro-off=4\n \n-#![feature(phase)]\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate log;\n \n pub fn main() {"}, {"sha": "f983f233ee35680e8697439ab39d43e9fab1e40b", "filename": "src/test/run-pass/issue-14330.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fissue-14330.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fissue-14330.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14330.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase)]\n-\n-#[phase(plugin, link)] extern crate \"std\" as std2;\n+#[macro_use] extern crate \"std\" as std2;\n \n fn main() {}"}, {"sha": "262d9b21eb48bddd57815f6d246e26151037ef4a", "filename": "src/test/run-pass/logging-enabled-debug.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,8 +11,7 @@\n // compile-flags:--cfg ndebug\n // exec-env:RUST_LOG=logging-enabled-debug=debug\n \n-#![feature(phase)]\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate log;\n \n pub fn main() {"}, {"sha": "372cdc401b54929ee084e12cbf7bcb88a16caf89", "filename": "src/test/run-pass/logging-enabled.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,8 +10,7 @@\n \n // exec-env:RUST_LOG=logging-enabled=info\n \n-#![feature(phase)]\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate log;\n \n pub fn main() {"}, {"sha": "0f13df644a1f7760d69da0eefbc4901ffd259b52", "filename": "src/test/run-pass/logging-separate-lines.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,7 @@\n // ignore-windows\n // exec-env:RUST_LOG=debug\n \n-#![feature(phase)]\n-\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate log;\n \n use std::io::Command;"}, {"sha": "7505fa6e6841afbb37d63a03f2e7bc4866c86e89", "filename": "src/test/run-pass/macro-crate-def-only.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-def-only.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,9 +10,7 @@\n \n // aux-build:macro_crate_def_only.rs\n \n-#![feature(phase)]\n-\n-#[phase(plugin)]\n+#[macro_use] #[no_link]\n extern crate macro_crate_def_only;\n \n pub fn main() {"}, {"sha": "cb919297b04064c2ef0042157ad8bf89c07cb322", "filename": "src/test/run-pass/macro-crate-nonterminal-renamed.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,7 @@\n // aux-build:macro_crate_nonterminal.rs\n // ignore-stage1\n \n-#![feature(phase)]\n-\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate \"macro_crate_nonterminal\" as new_name;\n \n pub fn main() {"}, {"sha": "9882f806a9eea7744c76721fcae5e0e8dbcb1914", "filename": "src/test/run-pass/macro-crate-nonterminal.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,7 @@\n // aux-build:macro_crate_nonterminal.rs\n // ignore-stage1\n \n-#![feature(phase)]\n-\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate macro_crate_nonterminal;\n \n pub fn main() {"}, {"sha": "ef22410751c0c860045e2830ed4921c80a4b052a", "filename": "src/test/run-pass/macro-export-inner-module.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-export-inner-module.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -11,9 +11,7 @@\n //aux-build:macro_export_inner_module.rs\n //ignore-stage1\n \n-#![feature(phase)]\n-\n-#[phase(plugin)]\n+#[macro_use] #[no_link]\n extern crate macro_export_inner_module;\n \n pub fn main() {"}, {"sha": "9701610cbd9645f522c8a31899c2376fb0bf0b12", "filename": "src/test/run-pass/macro-reexport.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,9 +12,7 @@\n // aux-build:macro_reexport_2.rs\n // ignore-stage1\n \n-#![feature(phase)]\n-\n-#[phase(plugin)]\n+#[macro_use] #[no_link]\n extern crate macro_reexport_2;\n \n fn main() {"}, {"sha": "95f90ebbf8edf89589de19a82bdbe021e07bd91c", "filename": "src/test/run-pass/rust-log-filter.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Frust-log-filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Frust-log-filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frust-log-filter.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -10,8 +10,7 @@\n \n // exec-env:RUST_LOG=rust-log-filter/f.o\n \n-#![feature(phase)]\n-#[phase(plugin,link)]\n+#[macro_use]\n extern crate log;\n \n use std::sync::mpsc::{channel, Sender, Receiver};"}, {"sha": "7d226aa9420320b95bd35e40c88735d9b6a83834", "filename": "src/test/run-pass/tcp-stress.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-stress.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -12,8 +12,7 @@\n // ignore-android needs extra network permissions\n // exec-env:RUST_LOG=debug\n \n-#![feature(phase)]\n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate log;\n extern crate libc;\n "}, {"sha": "c04afffb120379dbaefb59ae3e429939a0666cbd", "filename": "src/test/run-pass/vec-macro-no-std.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60be2f52d2434dfbf2df7728454d572d76f58bf8/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs?ref=60be2f52d2434dfbf2df7728454d572d76f58bf8", "patch": "@@ -8,14 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(phase, lang_items)]\n+#![feature(lang_items)]\n #![no_std]\n \n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate core;\n extern crate libc;\n \n-#[phase(plugin, link)]\n+#[macro_use]\n extern crate collections;\n \n use core::option::Option::Some;"}]}