{"sha": "ba5d7a66e847f5713633cb792c379a11b774e21f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNWQ3YTY2ZTg0N2Y1NzEzNjMzY2I3OTJjMzc5YTExYjc3NGUyMWY=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-12-17T22:28:01Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-01-20T09:55:16Z"}, "message": "Implement Debug for ptr::Shared and ptr::Unique.\n\nFixes https://github.com/rust-lang/rust/issues/46755.", "tree": {"sha": "66ed831a8a97b13db2229c0b4c3864694fe1e561", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66ed831a8a97b13db2229c0b4c3864694fe1e561"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba5d7a66e847f5713633cb792c379a11b774e21f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba5d7a66e847f5713633cb792c379a11b774e21f", "html_url": "https://github.com/rust-lang/rust/commit/ba5d7a66e847f5713633cb792c379a11b774e21f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba5d7a66e847f5713633cb792c379a11b774e21f/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "816d765716f25b0008049d89a0e41f0a48d03c78", "url": "https://api.github.com/repos/rust-lang/rust/commits/816d765716f25b0008049d89a0e41f0a48d03c78", "html_url": "https://github.com/rust-lang/rust/commit/816d765716f25b0008049d89a0e41f0a48d03c78"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "4da51a3312854ab62f6012736c190d90276d641c", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ba5d7a66e847f5713633cb792c379a11b774e21f/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba5d7a66e847f5713633cb792c379a11b774e21f/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=ba5d7a66e847f5713633cb792c379a11b774e21f", "patch": "@@ -2330,7 +2330,6 @@ impl<T: ?Sized> PartialOrd for *mut T {\n ///\n /// Unlike `*mut T`, `Unique<T>` is covariant over `T`. This should always be correct\n /// for any type which upholds Unique's aliasing requirements.\n-#[allow(missing_debug_implementations)]\n #[unstable(feature = \"unique\", reason = \"needs an RFC to flesh out design\",\n            issue = \"27730\")]\n pub struct Unique<T: ?Sized> {\n@@ -2343,6 +2342,13 @@ pub struct Unique<T: ?Sized> {\n     _marker: PhantomData<T>,\n }\n \n+#[unstable(feature = \"unique\", issue = \"27730\")]\n+impl<T: ?Sized> fmt::Debug for Unique<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"{:p}\", self.as_ptr())\n+    }\n+}\n+\n /// `Unique` pointers are `Send` if `T` is `Send` because the data they\n /// reference is unaliased. Note that this aliasing invariant is\n /// unenforced by the type system; the abstraction using the\n@@ -2463,13 +2469,19 @@ impl<'a, T: ?Sized> From<&'a T> for Unique<T> {\n /// Usually this won't be necessary; covariance is correct for most safe abstractions,\n /// such as Box, Rc, Arc, Vec, and LinkedList. This is the case because they\n /// provide a public API that follows the normal shared XOR mutable rules of Rust.\n-#[allow(missing_debug_implementations)]\n #[unstable(feature = \"shared\", reason = \"needs an RFC to flesh out design\",\n            issue = \"27730\")]\n pub struct Shared<T: ?Sized> {\n     pointer: NonZero<*const T>,\n }\n \n+#[unstable(feature = \"shared\", issue = \"27730\")]\n+impl<T: ?Sized> fmt::Debug for Shared<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"{:p}\", self.as_ptr())\n+    }\n+}\n+\n /// `Shared` pointers are not `Send` because the data they reference may be aliased.\n // NB: This impl is unnecessary, but should provide better error messages.\n #[unstable(feature = \"shared\", issue = \"27730\")]"}]}