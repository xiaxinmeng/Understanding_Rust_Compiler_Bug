{"sha": "274e75cd82ac8b94c655e1cba9194f82c47f73d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NGU3NWNkODJhYzhiOTRjNjU1ZTFjYmE5MTk0ZjgyYzQ3ZjczZDc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-31T21:43:49Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-01T04:13:55Z"}, "message": "implement container::Container for SmallIntMap", "tree": {"sha": "c226fd3a8203b2724fac962a758367dc41b8ffdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c226fd3a8203b2724fac962a758367dc41b8ffdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274e75cd82ac8b94c655e1cba9194f82c47f73d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274e75cd82ac8b94c655e1cba9194f82c47f73d7", "html_url": "https://github.com/rust-lang/rust/commit/274e75cd82ac8b94c655e1cba9194f82c47f73d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274e75cd82ac8b94c655e1cba9194f82c47f73d7/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aee79294699153ac7da9d2e5d076192c6eee3238", "url": "https://api.github.com/repos/rust-lang/rust/commits/aee79294699153ac7da9d2e5d076192c6eee3238", "html_url": "https://github.com/rust-lang/rust/commit/aee79294699153ac7da9d2e5d076192c6eee3238"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "ec35aa85bbe58675bc8377cd2375b2516d4b4571", "filename": "src/libstd/smallintmap.rs", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/274e75cd82ac8b94c655e1cba9194f82c47f73d7/src%2Flibstd%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274e75cd82ac8b94c655e1cba9194f82c47f73d7/src%2Flibstd%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsmallintmap.rs?ref=274e75cd82ac8b94c655e1cba9194f82c47f73d7", "patch": "@@ -14,9 +14,9 @@\n  */\n #[forbid(deprecated_mode)];\n \n-use map;\n use map::StdMap;\n \n+use core::container::{Container, Mutable, Map, Set};\n use core::dvec::DVec;\n use core::ops;\n use core::option::{Some, None};\n@@ -80,9 +80,9 @@ pub pure fn contains_key<T: Copy>(self: SmallIntMap<T>, key: uint) -> bool {\n     return !find(self, key).is_none();\n }\n \n-/// Implements the map::map interface for smallintmap\n-impl<V: Copy> SmallIntMap<V>: map::StdMap<uint, V> {\n-    pure fn size() -> uint {\n+impl<V> SmallIntMap<V>: Container {\n+    /// Return the number of elements in the map\n+    pure fn len(&self) -> uint {\n         let mut sz = 0u;\n         for self.v.each |item| {\n             match *item {\n@@ -92,6 +92,14 @@ impl<V: Copy> SmallIntMap<V>: map::StdMap<uint, V> {\n         }\n         sz\n     }\n+\n+    /// Return true if the map contains no elements\n+    pure fn is_empty(&self) -> bool { self.len() == 0 }\n+}\n+\n+/// Implements the map::map interface for smallintmap\n+impl<V: Copy> SmallIntMap<V>: StdMap<uint, V> {\n+    pure fn size() -> uint { self.len() }\n     #[inline(always)]\n     fn insert(key: uint, value: V) -> bool {\n         let exists = contains_key(self, key);\n@@ -165,8 +173,8 @@ impl<V: Copy> SmallIntMap<V>: ops::Index<uint, V> {\n }\n \n /// Cast the given smallintmap to a map::map\n-pub fn as_map<V: Copy>(s: SmallIntMap<V>) -> map::StdMap<uint, V> {\n-    s as map::StdMap::<uint, V>\n+pub fn as_map<V: Copy>(s: SmallIntMap<V>) -> StdMap<uint, V> {\n+    s as StdMap::<uint, V>\n }\n \n #[cfg(test)]\n@@ -176,6 +184,22 @@ mod tests {\n     use core::option::None;\n     use core::option;\n \n+    #[test]\n+    fn test_len() {\n+        let mut map = mk();\n+        assert map.len() == 0;\n+        assert map.is_empty();\n+        map.insert(5, 20);\n+        assert map.len() == 1;\n+        assert !map.is_empty();\n+        map.insert(11, 12);\n+        assert map.len() == 2;\n+        assert !map.is_empty();\n+        map.insert(14, 22);\n+        assert map.len() == 3;\n+        assert !map.is_empty();\n+    }\n+\n     #[test]\n     fn test_insert_with_key() {\n         let map: SmallIntMap<uint> = mk();"}]}