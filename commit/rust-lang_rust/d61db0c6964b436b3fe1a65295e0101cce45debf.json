{"sha": "d61db0c6964b436b3fe1a65295e0101cce45debf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MWRiMGM2OTY0YjQzNmIzZmUxYTY1Mjk1ZTAxMDFjY2U0NWRlYmY=", "commit": {"author": {"name": "Chase Southwood", "email": "chase.southwood@gmail.com", "date": "2014-12-19T20:30:51Z"}, "committer": {"name": "Chase Southwood", "email": "chase.southwood@gmail.com", "date": "2014-12-19T21:04:36Z"}, "message": "Implement resize for Vec\n\nThis commit adds `resize` to `Vec` in accordance with RFC 509.", "tree": {"sha": "e8e1b42cd10154b9e219f26dddcceb46f878ec57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8e1b42cd10154b9e219f26dddcceb46f878ec57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d61db0c6964b436b3fe1a65295e0101cce45debf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d61db0c6964b436b3fe1a65295e0101cce45debf", "html_url": "https://github.com/rust-lang/rust/commit/d61db0c6964b436b3fe1a65295e0101cce45debf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d61db0c6964b436b3fe1a65295e0101cce45debf/comments", "author": {"login": "csouth3", "id": 6758080, "node_id": "MDQ6VXNlcjY3NTgwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6758080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csouth3", "html_url": "https://github.com/csouth3", "followers_url": "https://api.github.com/users/csouth3/followers", "following_url": "https://api.github.com/users/csouth3/following{/other_user}", "gists_url": "https://api.github.com/users/csouth3/gists{/gist_id}", "starred_url": "https://api.github.com/users/csouth3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csouth3/subscriptions", "organizations_url": "https://api.github.com/users/csouth3/orgs", "repos_url": "https://api.github.com/users/csouth3/repos", "events_url": "https://api.github.com/users/csouth3/events{/privacy}", "received_events_url": "https://api.github.com/users/csouth3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csouth3", "id": 6758080, "node_id": "MDQ6VXNlcjY3NTgwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6758080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csouth3", "html_url": "https://github.com/csouth3", "followers_url": "https://api.github.com/users/csouth3/followers", "following_url": "https://api.github.com/users/csouth3/following{/other_user}", "gists_url": "https://api.github.com/users/csouth3/gists{/gist_id}", "starred_url": "https://api.github.com/users/csouth3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csouth3/subscriptions", "organizations_url": "https://api.github.com/users/csouth3/orgs", "repos_url": "https://api.github.com/users/csouth3/repos", "events_url": "https://api.github.com/users/csouth3/events{/privacy}", "received_events_url": "https://api.github.com/users/csouth3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c2ed31aeb66b2662933200dbfd661a573b1f49", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c2ed31aeb66b2662933200dbfd661a573b1f49", "html_url": "https://github.com/rust-lang/rust/commit/95c2ed31aeb66b2662933200dbfd661a573b1f49"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "7452022dd5a1ecb55b3b635e90c7dc11f80bb9a5", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d61db0c6964b436b3fe1a65295e0101cce45debf/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d61db0c6964b436b3fe1a65295e0101cce45debf/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=d61db0c6964b436b3fe1a65295e0101cce45debf", "patch": "@@ -412,6 +412,33 @@ impl<T: Clone> Vec<T> {\n         }\n     }\n \n+    /// Resizes the `Vec` in-place so that `len()` is equal to `new_len`.\n+    ///\n+    /// Calls either `extend()` or `truncate()` depending on whether `new_len`\n+    /// is larger than the current value of `len()` or not.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// let mut vec = vec![\"hello\"];\n+    /// vec.resize(3, \"world\");\n+    /// assert_eq!(vec, vec![\"hello\", \"world\", \"world\"]);\n+    ///\n+    /// let mut vec = vec![1i, 2, 3, 4];\n+    /// vec.resize(2, 0);\n+    /// assert_eq!(vec, vec![1, 2]);\n+    /// ```\n+    #[unstable = \"matches collection reform specification; waiting for dust to settle\"]\n+    pub fn resize(&mut self, new_len: uint, value: T) {\n+        let len = self.len();\n+\n+        if new_len > len {\n+            self.extend(repeat(value).take(new_len - len));\n+        } else {\n+            self.truncate(new_len);\n+        }\n+    }\n+\n     /// Partitions a vector based on a predicate.\n     ///\n     /// Clones the elements of the vector, partitioning them into two `Vec<T>`s"}]}