{"sha": "47aaf79554744162601f6cdc5fabd6fd05acb2db", "node_id": "C_kwDOAAsO6NoAKDQ3YWFmNzk1NTQ3NDQxNjI2MDFmNmNkYzVmYWJkNmZkMDVhY2IyZGI", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-01-26T23:58:45Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-01-27T00:27:46Z"}, "message": "Add documentation about `BorrowedFd::to_owned`.\n\nFollowing up on #88564, this adds documentation explaining why\n`BorrowedFd::to_owned` returns another `BorrowedFd` rather than an\n`OwnedFd`. And similar for `BorrowedHandle` and `BorrowedSocket`.", "tree": {"sha": "34ad4168761797424704ca235e9c50ec6faf2b07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34ad4168761797424704ca235e9c50ec6faf2b07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47aaf79554744162601f6cdc5fabd6fd05acb2db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47aaf79554744162601f6cdc5fabd6fd05acb2db", "html_url": "https://github.com/rust-lang/rust/commit/47aaf79554744162601f6cdc5fabd6fd05acb2db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47aaf79554744162601f6cdc5fabd6fd05acb2db/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6abb6385b2cb7249f67b9b3ce7522527767dd907", "url": "https://api.github.com/repos/rust-lang/rust/commits/6abb6385b2cb7249f67b9b3ce7522527767dd907", "html_url": "https://github.com/rust-lang/rust/commit/6abb6385b2cb7249f67b9b3ce7522527767dd907"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "6a2f804551df66d6d094dbc7edd15cce5193cf54", "filename": "library/std/src/os/fd/owned.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47aaf79554744162601f6cdc5fabd6fd05acb2db/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47aaf79554744162601f6cdc5fabd6fd05acb2db/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs?ref=47aaf79554744162601f6cdc5fabd6fd05acb2db", "patch": "@@ -21,6 +21,10 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// descriptor, so it can be used in FFI in places where a file descriptor is\n /// passed as an argument, it is not captured or consumed, and it never has the\n /// value `-1`.\n+///\n+/// This type's `.to_owned()` implementation returns another `BorrowedFd`\n+/// rather than an `OwnedFd`. It just makes a trivial copy of the raw file\n+/// descriptor, which is then borrowed under the same lifetime.\n #[derive(Copy, Clone)]\n #[repr(transparent)]\n #[rustc_layout_scalar_valid_range_start(0)]"}, {"sha": "f7a67a54a1d7b06bd5cbc2d26fa527650f6a281a", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47aaf79554744162601f6cdc5fabd6fd05acb2db/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47aaf79554744162601f6cdc5fabd6fd05acb2db/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=47aaf79554744162601f6cdc5fabd6fd05acb2db", "patch": "@@ -28,6 +28,10 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// And, it *may* have the value `NULL` (0), which can occur when consoles are\n /// detached from processes, or when `windows_subsystem` is used.\n ///\n+/// This type's `.to_owned()` implementation returns another `BorrowedHandle`\n+/// rather than an `OwnedHandle`. It just makes a trivial copy of the raw\n+/// handle, which is then borrowed under the same lifetime.\n+///\n /// [here]: https://devblogs.microsoft.com/oldnewthing/20040302-00/?p=40443\n #[derive(Copy, Clone)]\n #[repr(transparent)]"}, {"sha": "a7c8eef93d89147c2056b8f1498326c5a093c3f0", "filename": "library/std/src/os/windows/io/socket.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47aaf79554744162601f6cdc5fabd6fd05acb2db/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47aaf79554744162601f6cdc5fabd6fd05acb2db/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs?ref=47aaf79554744162601f6cdc5fabd6fd05acb2db", "patch": "@@ -21,6 +21,10 @@ use crate::sys::cvt;\n /// so it can be used in FFI in places where a socket is passed as an argument,\n /// it is not captured or consumed, and it never has the value\n /// `INVALID_SOCKET`.\n+///\n+/// This type's `.to_owned()` implementation returns another `BorrowedSocket`\n+/// rather than an `OwnedSocket`. It just makes a trivial copy of the raw\n+/// socket, which is then borrowed under the same lifetime.\n #[derive(Copy, Clone)]\n #[repr(transparent)]\n #[rustc_layout_scalar_valid_range_start(0)]"}]}