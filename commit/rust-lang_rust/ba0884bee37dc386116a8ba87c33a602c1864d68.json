{"sha": "ba0884bee37dc386116a8ba87c33a602c1864d68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMDg4NGJlZTM3ZGMzODYxMTZhOGJhODdjMzNhNjAyYzE4NjRkNjg=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-15T22:41:20Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-16T10:36:17Z"}, "message": "rustup https://github.com/rust-lang/rust/pull/68944", "tree": {"sha": "2cdbe871989cf48bb5418e731fcf34e3f0e5c013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cdbe871989cf48bb5418e731fcf34e3f0e5c013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba0884bee37dc386116a8ba87c33a602c1864d68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba0884bee37dc386116a8ba87c33a602c1864d68", "html_url": "https://github.com/rust-lang/rust/commit/ba0884bee37dc386116a8ba87c33a602c1864d68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba0884bee37dc386116a8ba87c33a602c1864d68/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8bcdac9de7882cbbffa7e02341ca32870d54017", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8bcdac9de7882cbbffa7e02341ca32870d54017", "html_url": "https://github.com/rust-lang/rust/commit/d8bcdac9de7882cbbffa7e02341ca32870d54017"}], "stats": {"total": 116, "additions": 58, "deletions": 58}, "files": [{"sha": "b6fb6fdd2cc04aa95b6c87299f2b08139b4942be", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -256,7 +256,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ExprVisitor<'a, 'tcx> {\n \n         walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "56b4e5522f4e07b07b068147e03ec7668247d1c1", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -66,7 +66,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ExVisitor<'a, 'tcx> {\n         }\n         walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "b580240be175774013f7a8e28e85b230659f192b", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -457,7 +457,7 @@ impl<'a, 'tcx> Visitor<'tcx> for NonminimalBoolVisitor<'a, 'tcx> {\n             _ => walk_expr(self, e),\n         }\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -491,7 +491,7 @@ impl<'a, 'tcx> Visitor<'tcx> for NotSimplificationVisitor<'a, 'tcx> {\n \n         walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "fcab459018848c5539438e6ead9cb67f4f6c008d", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -156,7 +156,7 @@ impl<'tcx> Visitor<'tcx> for CCHelper {\n             _ => {},\n         }\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "ed870850a8c4fe48803d1d331eac880ccf01accb", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -148,7 +148,7 @@ impl_lint_pass!(DocMarkdown => [DOC_MARKDOWN, MISSING_SAFETY_DOC, MISSING_ERRORS\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DocMarkdown {\n     fn check_crate(&mut self, cx: &LateContext<'a, 'tcx>, krate: &'tcx hir::Crate<'_>) {\n-        check_attrs(cx, &self.valid_idents, &krate.attrs);\n+        check_attrs(cx, &self.valid_idents, &krate.item.attrs);\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx hir::Item<'_>) {"}, {"sha": "88647be02641a4650f520e8275af7ff05790e035", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -181,7 +181,7 @@ impl<'a, 'tcx, 'b> Visitor<'tcx> for InsertVisitor<'a, 'tcx, 'b> {\n             walk_expr(self, expr);\n         }\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "db55e5ed141efb6903aa09e93a91c2acb9133f73", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -92,7 +92,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n }\n \n // TODO: Replace with Map::is_argument(..) when it's fixed\n-fn is_argument(map: &rustc::hir::map::Map<'_>, id: HirId) -> bool {\n+fn is_argument(map: rustc::hir::map::Map<'_>, id: HirId) -> bool {\n     match map.find(id) {\n         Some(Node::Binding(_)) => (),\n         _ => return false,\n@@ -136,7 +136,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n     fn mutate(&mut self, cmt: &Place<'tcx>) {\n         if cmt.projections.is_empty() {\n             let map = &self.cx.tcx.hir();\n-            if is_argument(map, cmt.hir_id) {\n+            if is_argument(*map, cmt.hir_id) {\n                 // Skip closure arguments\n                 let parent_id = map.get_parent_node(cmt.hir_id);\n                 if let Some(Node::Expr(..)) = map.find(map.get_parent_node(parent_id)) {"}, {"sha": "9292dba3bd253c12d6b2404abac7ea3b150cca65", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -158,7 +158,7 @@ impl<'a, 'tcx> Visitor<'tcx> for DivergenceVisitor<'a, 'tcx> {\n     fn visit_block(&mut self, _: &'tcx Block<'_>) {\n         // don't continue over blocks, LateLintPass already does that\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -341,7 +341,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ReadVisitor<'a, 'tcx> {\n \n         walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "5ed7fd49f472110ad4ced1639d635771549dbf33", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -85,7 +85,7 @@ fn lint_impl_body<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, impl_span: Span, impl_it\n             intravisit::walk_expr(self, expr);\n         }\n \n-        fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+        fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n             NestedVisitorMap::None\n         }\n     }"}, {"sha": "23e3371c5fb613fd9609d30a3ce3f75b48b53d4b", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -561,7 +561,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for DerefVisitor<'a, 'tcx> {\n         intravisit::walk_expr(self, expr);\n     }\n \n-    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {\n         intravisit::NestedVisitorMap::None\n     }\n }\n@@ -624,7 +624,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for StaticMutVisitor<'a, 'tcx> {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {\n         intravisit::NestedVisitorMap::None\n     }\n }"}, {"sha": "d5343852208b87d4d833867580b5229dc9fa2709", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -158,7 +158,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for UsedVisitor<'a, 'tcx> {\n         }\n         intravisit::walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {\n         intravisit::NestedVisitorMap::None\n     }\n }"}, {"sha": "a9408e369b396afdfaa806d6e4ba169c19b79fce", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -407,7 +407,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n         }\n         walk_ty(self, ty);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -479,7 +479,7 @@ impl<'tcx> Visitor<'tcx> for LifetimeChecker {\n             walk_generic_param(self, param)\n         }\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -522,7 +522,7 @@ impl<'tcx> Visitor<'tcx> for BodyLifetimeChecker {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "bd71d68848d6e6d1321e842e7c528d397a072ce7", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -1712,7 +1712,7 @@ impl<'a, 'tcx> Visitor<'tcx> for LocalUsedVisitor<'a, 'tcx> {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -1885,7 +1885,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n         }\n         self.prefer_mutable = old;\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -1942,7 +1942,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VarUsedAfterLoopVisitor<'a, 'tcx> {\n         }\n         walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -2084,7 +2084,7 @@ impl<'a, 'tcx> Visitor<'tcx> for IncrementVisitor<'a, 'tcx> {\n         }\n         walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -2176,8 +2176,8 @@ impl<'a, 'tcx> Visitor<'tcx> for InitializeVisitor<'a, 'tcx> {\n         walk_expr(self, expr);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::OnlyBodies(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }\n }\n \n@@ -2312,7 +2312,7 @@ impl<'tcx> Visitor<'tcx> for LoopNestVisitor {\n         walk_pat(self, pat)\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -2398,7 +2398,7 @@ impl<'a, 'tcx> Visitor<'tcx> for HasBreakOrReturnVisitor {\n         walk_expr(self, expr);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -2449,7 +2449,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VarCollectorVisitor<'a, 'tcx> {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "7109cd5cf914a7c052d1d9e2a322ab8a7bbe6aaf", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -1545,7 +1545,7 @@ fn lint_or_fun_call<'a, 'tcx>(\n             }\n         }\n \n-        fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<'_, Self::Map> {\n+        fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {\n             intravisit::NestedVisitorMap::None\n         }\n     }\n@@ -3453,7 +3453,7 @@ fn contains_return(expr: &hir::Expr<'_>) -> bool {\n             }\n         }\n \n-        fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<'_, Self::Map> {\n+        fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {\n             intravisit::NestedVisitorMap::None\n         }\n     }"}, {"sha": "c40ab7beba442e4bbf13dff49fbfb0b8d8e9719d", "filename": "clippy_lints/src/methods/option_map_unwrap_or.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -99,8 +99,8 @@ impl<'a, 'tcx> Visitor<'tcx> for UnwrapVisitor<'a, 'tcx> {\n         walk_path(self, path);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::All(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::All(self.cx.tcx.hir())\n     }\n }\n \n@@ -121,8 +121,8 @@ impl<'a, 'tcx> Visitor<'tcx> for MapExprVisitor<'a, 'tcx> {\n         walk_path(self, path);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::All(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::All(self.cx.tcx.hir())\n     }\n }\n "}, {"sha": "ee6c6ef12e569aac9a62a48ea58c60eb5a2cd841", "filename": "clippy_lints/src/methods/unnecessary_filter_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -136,7 +136,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ReturnVisitor<'a, 'tcx> {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "88467f3057f52e4d8df7268bc25f26121c723f15", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -125,7 +125,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n     }\n \n     fn check_crate(&mut self, cx: &LateContext<'a, 'tcx>, krate: &'tcx hir::Crate<'_>) {\n-        self.check_missing_docs_attrs(cx, &krate.attrs, krate.span, \"crate\");\n+        self.check_missing_docs_attrs(cx, &krate.item.attrs, krate.item.span, \"crate\");\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, it: &'tcx hir::Item<'_>) {"}, {"sha": "70061f2aa83b32e402c9cf3296e7e50b031dd132", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -108,7 +108,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for MutVisitor<'a, 'tcx> {\n \n         intravisit::walk_ty(self, ty);\n     }\n-    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> intravisit::NestedVisitorMap<Self::Map> {\n         intravisit::NestedVisitorMap::None\n     }\n }"}, {"sha": "75225fa8c42b02fe741cc13f3177817ddcb51878", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -155,7 +155,7 @@ impl<'a, 'tcx> Visitor<'tcx> for MutArgVisitor<'a, 'tcx> {\n         walk_expr(self, expr)\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::OnlyBodies(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }\n }"}, {"sha": "61dc7d1c9c5adad0ff462c9a74d64cc1da61d20f", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -318,7 +318,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VectorInitializationVisitor<'a, 'tcx> {\n         walk_expr(self, expr);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "e39a7b5e2ab6023275c72e18dc30d3753422640c", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -197,7 +197,7 @@ impl<'a, 'tcx> Visitor<'tcx> for BinaryExprVisitor {\n \n         walk_expr(self, expr);\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "d44aa492508a15ccb005fce81a25934f8dd55541", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -1554,7 +1554,7 @@ impl<'tcx> Visitor<'tcx> for TypeComplexityVisitor {\n         walk_ty(self, ty);\n         self.nest -= sub_nest;\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -2309,7 +2309,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ImplicitHasherTypeVisitor<'a, 'tcx> {\n         walk_ty(self, t);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -2386,8 +2386,8 @@ impl<'a, 'b, 'tcx> Visitor<'tcx> for ImplicitHasherConstructorVisitor<'a, 'b, 't\n         walk_expr(self, e);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::OnlyBodies(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }\n }\n "}, {"sha": "8579fd73fbb75322bbea7dea35d7b015430d23b2", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -107,7 +107,7 @@ impl<'a, 'tcx> Visitor<'tcx> for UnusedSelfVisitor<'a, 'tcx> {\n         walk_path(self, path);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::OnlyBodies(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }\n }"}, {"sha": "767b48d4a0963c125a0e0ef736e64a33f043fae3", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -185,8 +185,8 @@ impl<'a, 'tcx> Visitor<'tcx> for UnwrappableVariablesVisitor<'a, 'tcx> {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::OnlyBodies(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }\n }\n "}, {"sha": "e1316fa0a3db04e9288c00ba0b7c83d42b345cb7", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -113,7 +113,7 @@ impl<'a, 'tcx> Visitor<'tcx> for TraitImplTyVisitor<'a, 'tcx> {\n         walk_ty(self, t)\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -275,7 +275,7 @@ impl<'a, 'tcx> Visitor<'tcx> for UseSelfVisitor<'a, 'tcx> {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::All(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::All(self.cx.tcx.hir())\n     }\n }"}, {"sha": "e95c45852ac2fe5c92a25d5f3cc35164fa7e8afa", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -689,7 +689,7 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "7dbb0d5a9ab820238d15295f193d68c09c04e734", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -299,8 +299,8 @@ impl<'a, 'tcx> Visitor<'tcx> for LintCollector<'a, 'tcx> {\n             self.output.insert(path.segments[0].ident.name);\n         }\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n-        NestedVisitorMap::All(&self.cx.tcx.hir())\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::All(self.cx.tcx.hir())\n     }\n }\n "}, {"sha": "62c47f0afd1de1a105f683cd5155efe861c84168", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -479,7 +479,7 @@ impl<'tcx> Visitor<'tcx> for ContainsName {\n             self.result = true;\n         }\n     }\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }\n@@ -1355,7 +1355,7 @@ pub fn is_must_use_func_call(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> bool\n }\n \n pub fn is_no_std_crate(krate: &Crate<'_>) -> bool {\n-    krate.attrs.iter().any(|attr| {\n+    krate.item.attrs.iter().any(|attr| {\n         if let ast::AttrKind::Normal(ref attr) = attr.kind {\n             attr.path == symbol::sym::no_std\n         } else {"}, {"sha": "238c2277a932bb02ed3f6a263db6669d24349a00", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -78,7 +78,7 @@ impl<'a, 'tcx> Visitor<'tcx> for PtrCloneVisitor<'a, 'tcx> {\n         walk_expr(self, expr);\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}, {"sha": "7cde18fdb3b49ef82bf395aada8e6e2dc8bf025b", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0884bee37dc386116a8ba87c33a602c1864d68/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=ba0884bee37dc386116a8ba87c33a602c1864d68", "patch": "@@ -93,7 +93,7 @@ impl<'tcx> Visitor<'tcx> for UsedVisitor {\n         }\n     }\n \n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<'_, Self::Map> {\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n         NestedVisitorMap::None\n     }\n }"}]}