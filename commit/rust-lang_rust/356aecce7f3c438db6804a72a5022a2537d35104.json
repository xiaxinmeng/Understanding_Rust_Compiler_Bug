{"sha": "356aecce7f3c438db6804a72a5022a2537d35104", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NmFlY2NlN2YzYzQzOGRiNjgwNGE3MmE1MDIyYTI1MzdkMzUxMDQ=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T04:25:46Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Add a FIXME.", "tree": {"sha": "0b3683ed5c3a71dc49f13879a4015322550117bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b3683ed5c3a71dc49f13879a4015322550117bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/356aecce7f3c438db6804a72a5022a2537d35104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/356aecce7f3c438db6804a72a5022a2537d35104", "html_url": "https://github.com/rust-lang/rust/commit/356aecce7f3c438db6804a72a5022a2537d35104", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/356aecce7f3c438db6804a72a5022a2537d35104/comments", "author": null, "committer": null, "parents": [{"sha": "207c6e7fa74758a64104c2d77218e263d92cf1c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/207c6e7fa74758a64104c2d77218e263d92cf1c6", "html_url": "https://github.com/rust-lang/rust/commit/207c6e7fa74758a64104c2d77218e263d92cf1c6"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "27e99808529047888fe4770c7c09b3505c45cd41", "filename": "src/shims/thread.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/356aecce7f3c438db6804a72a5022a2537d35104/src%2Fshims%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/356aecce7f3c438db6804a72a5022a2537d35104/src%2Fshims%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fthread.rs?ref=356aecce7f3c438db6804a72a5022a2537d35104", "patch": "@@ -55,6 +55,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let this = self.eval_context_mut();\n \n         if !this.is_null(this.read_scalar(retval)?.not_undef()?)? {\n+            // FIXME: implement reading the thread function's return place.\n             throw_unsup_format!(\"Miri supports pthread_join only with retval==NULL\");\n         }\n "}]}