{"sha": "82444aa753180c9c13028066ae9ddc4933dc610d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNDQ0YWE3NTMxODBjOWMxMzAyODA2NmFlOWRkYzQ5MzNkYzYxMGQ=", "commit": {"author": {"name": "mandeep", "email": "mandeep@users.noreply.github.com", "date": "2018-10-05T22:22:19Z"}, "committer": {"name": "mandeep", "email": "mandeep@users.noreply.github.com", "date": "2018-10-05T22:22:19Z"}, "message": "Add doc comments about safest way to initialize a vector of zeros", "tree": {"sha": "e168f9e433875c21937552cd07ecbdb1994e8433", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e168f9e433875c21937552cd07ecbdb1994e8433"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82444aa753180c9c13028066ae9ddc4933dc610d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82444aa753180c9c13028066ae9ddc4933dc610d", "html_url": "https://github.com/rust-lang/rust/commit/82444aa753180c9c13028066ae9ddc4933dc610d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82444aa753180c9c13028066ae9ddc4933dc610d/comments", "author": {"login": "mandeep", "id": 10521687, "node_id": "MDQ6VXNlcjEwNTIxNjg3", "avatar_url": "https://avatars.githubusercontent.com/u/10521687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mandeep", "html_url": "https://github.com/mandeep", "followers_url": "https://api.github.com/users/mandeep/followers", "following_url": "https://api.github.com/users/mandeep/following{/other_user}", "gists_url": "https://api.github.com/users/mandeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/mandeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mandeep/subscriptions", "organizations_url": "https://api.github.com/users/mandeep/orgs", "repos_url": "https://api.github.com/users/mandeep/repos", "events_url": "https://api.github.com/users/mandeep/events{/privacy}", "received_events_url": "https://api.github.com/users/mandeep/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mandeep", "id": 10521687, "node_id": "MDQ6VXNlcjEwNTIxNjg3", "avatar_url": "https://avatars.githubusercontent.com/u/10521687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mandeep", "html_url": "https://github.com/mandeep", "followers_url": "https://api.github.com/users/mandeep/followers", "following_url": "https://api.github.com/users/mandeep/following{/other_user}", "gists_url": "https://api.github.com/users/mandeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/mandeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mandeep/subscriptions", "organizations_url": "https://api.github.com/users/mandeep/orgs", "repos_url": "https://api.github.com/users/mandeep/repos", "events_url": "https://api.github.com/users/mandeep/events{/privacy}", "received_events_url": "https://api.github.com/users/mandeep/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2155f27b640c14d2f518a4585f7419ab9a334374", "url": "https://api.github.com/repos/rust-lang/rust/commits/2155f27b640c14d2f518a4585f7419ab9a334374", "html_url": "https://github.com/rust-lang/rust/commit/2155f27b640c14d2f518a4585f7419ab9a334374"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "3188de512662c9290deafc77bc3b39fbdc4d3f75", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/82444aa753180c9c13028066ae9ddc4933dc610d/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82444aa753180c9c13028066ae9ddc4933dc610d/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=82444aa753180c9c13028066ae9ddc4933dc610d", "patch": "@@ -120,7 +120,9 @@ use raw_vec::RawVec;\n /// assert_eq!(vec, [1, 2, 3, 4]);\n /// ```\n ///\n-/// It can also initialize each element of a `Vec<T>` with a given value:\n+/// It can also initialize each element of a `Vec<T>` with a given value.\n+/// Initializing a `Vec<T>` in this manner is the most efficient and safest way to allocate a\n+/// vector of zeros as previously zeroed memory is requested from the operating system:\n ///\n /// ```\n /// let vec = vec![0; 5];"}]}