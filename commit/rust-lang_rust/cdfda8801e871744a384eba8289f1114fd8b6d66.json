{"sha": "cdfda8801e871744a384eba8289f1114fd8b6d66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZmRhODgwMWU4NzE3NDRhMzg0ZWJhODI4OWYxMTE0ZmQ4YjZkNjY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-28T09:36:31Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-28T09:36:31Z"}, "message": "Absolute paths", "tree": {"sha": "6ca56ead3557fca96e60175b217fdfa8ecf925c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ca56ead3557fca96e60175b217fdfa8ecf925c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdfda8801e871744a384eba8289f1114fd8b6d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdfda8801e871744a384eba8289f1114fd8b6d66", "html_url": "https://github.com/rust-lang/rust/commit/cdfda8801e871744a384eba8289f1114fd8b6d66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdfda8801e871744a384eba8289f1114fd8b6d66/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9070a055def9df90f7e50531dab176c30804011a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9070a055def9df90f7e50531dab176c30804011a", "html_url": "https://github.com/rust-lang/rust/commit/9070a055def9df90f7e50531dab176c30804011a"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "1532050522a2053591b7f410c6ca04518f6e4a63", "filename": "src/imports.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cdfda8801e871744a384eba8289f1114fd8b6d66/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdfda8801e871744a384eba8289f1114fd8b6d66/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=cdfda8801e871744a384eba8289f1114fd8b6d66", "patch": "@@ -28,17 +28,20 @@ impl<'a> FmtVisitor<'a> {\n                             path: &ast::Path,\n                             path_list: &[ast::PathListItem],\n                             vp_span: Span) -> String {\n-        // FIXME remove unused imports\n-\n         // FIXME check indentation\n         let l_loc = self.codemap.lookup_char_pos(vp_span.lo);\n \n         let path_str = pprust::path_to_string(&path);\n \n-        // 3 = :: + {\n-        let indent = l_loc.col.0 + path_str.len() + 3;\n+\n+        // 1 = {\n+        let mut indent = l_loc.col.0 + path_str.len() + 1;\n+        if path_str.len() > 0 {\n+            // 2 = ::\n+            indent += 2;\n+        }\n         // 2 = } + ;\n-        let used_width = indent + path_str.len() + 2;\n+        let used_width = indent + 2;\n         let budget = if used_width >= IDEAL_WIDTH {\n             if used_width < MAX_WIDTH {\n                 MAX_WIDTH - used_width\n@@ -82,6 +85,10 @@ impl<'a> FmtVisitor<'a> {\n             }\n         })).collect();\n \n-        format!(\"use {}::{{{}}};\", path_str, write_list(&items, &fmt))\n+        if path_str.len() == 0 {\n+            format!(\"use {{{}}};\", write_list(&items, &fmt))\n+        } else {\n+            format!(\"use {}::{{{}}};\", path_str, write_list(&items, &fmt))\n+        }\n     }\n }"}]}