{"sha": "561511e62813840e930ff60e6918ccaea4f00f00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MTUxMWU2MjgxMzg0MGU5MzBmZjYwZTY5MThjY2FlYTRmMDBmMDA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T06:08:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-15T18:10:53Z"}, "message": "core: Channels are just port ids", "tree": {"sha": "f76bb5d3da66998dab48f86a68eae29d80aad14b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f76bb5d3da66998dab48f86a68eae29d80aad14b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/561511e62813840e930ff60e6918ccaea4f00f00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/561511e62813840e930ff60e6918ccaea4f00f00", "html_url": "https://github.com/rust-lang/rust/commit/561511e62813840e930ff60e6918ccaea4f00f00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/561511e62813840e930ff60e6918ccaea4f00f00/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c414b78afed76f63adf4e7538f04b6231f177236", "url": "https://api.github.com/repos/rust-lang/rust/commits/c414b78afed76f63adf4e7538f04b6231f177236", "html_url": "https://github.com/rust-lang/rust/commit/c414b78afed76f63adf4e7538f04b6231f177236"}], "stats": {"total": 44, "additions": 17, "deletions": 27}, "files": [{"sha": "8d10ab8850d87233f660d2b58d35157f8ad1fd89", "filename": "src/libcore/comm.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/561511e62813840e930ff60e6918ccaea4f00f00/src%2Flibcore%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/561511e62813840e930ff60e6918ccaea4f00f00/src%2Flibcore%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcomm.rs?ref=561511e62813840e930ff60e6918ccaea4f00f00", "patch": "@@ -38,10 +38,9 @@ enum rust_port {}\n \n #[abi = \"cdecl\"]\n native mod rustrt {\n-    fn get_task_id() -> task_id;\n-    fn chan_id_send<T: send>(t: *sys::type_desc,\n-                            target_task: task_id, target_port: port_id,\n-                            data: T) -> libc::uintptr_t;\n+    fn rust_port_id_send<T: send>(t: *sys::type_desc,\n+                                  target_port: port_id,\n+                                  data: T) -> libc::uintptr_t;\n \n     fn new_port(unit_sz: libc::size_t) -> *rust_port;\n     fn del_port(po: *rust_port);\n@@ -63,7 +62,6 @@ native mod rusti {\n     fn call_with_retptr<T: send>(&&f: fn@(*uint)) -> T;\n }\n \n-type task_id = int;\n type port_id = int;\n \n // It's critical that this only have one variant, so it has a record\n@@ -79,7 +77,7 @@ data will be silently dropped.  Channels may be duplicated and\n themselves transmitted over other channels.\n \"]\n enum chan<T: send> {\n-    chan_t(task_id, port_id)\n+    chan_t(port_id)\n }\n \n resource port_ptr<T: send>(po: *rust_port) {\n@@ -119,8 +117,8 @@ Sends data over a channel. The sent data is moved into the channel,\n whereupon the caller loses access to it.\n \"]\n fn send<T: send>(ch: chan<T>, -data: T) {\n-    let chan_t(t, p) = ch;\n-    let res = rustrt::chan_id_send(sys::get_type_desc::<T>(), t, p, data);\n+    let chan_t(p) = ch;\n+    let res = rustrt::rust_port_id_send(sys::get_type_desc::<T>(), p, data);\n     if res != 0u unsafe {\n         // Data sent successfully\n         unsafe::leak(data);\n@@ -217,7 +215,7 @@ Constructs a channel. The channel is bound to the port used to\n construct it.\n \"]\n fn chan<T: send>(p: port<T>) -> chan<T> {\n-    chan_t(rustrt::get_task_id(), rustrt::get_port_id(***p))\n+    chan_t(rustrt::get_port_id(***p))\n }\n \n #[test]"}, {"sha": "b7abcdd9c265f7364ef7f487f3bb564147c59ed1", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=561511e62813840e930ff60e6918ccaea4f00f00", "patch": "@@ -444,8 +444,8 @@ rust_new_task_in_sched(rust_sched_id id) {\n }\n \n extern \"C\" CDECL void\n-rust_task_config_notify(rust_task *target, chan_handle *chan) {\n-    target->config_notify(*chan);\n+rust_task_config_notify(rust_task *target, rust_port_id *port) {\n+    target->config_notify(*port);\n }\n \n extern \"C\" rust_task *\n@@ -503,13 +503,11 @@ get_port_id(rust_port *port) {\n }\n \n extern \"C\" CDECL uintptr_t\n-chan_id_send(type_desc *t, rust_task_id target_task_id,\n-             rust_port_id target_port_id, void *sptr) {\n+rust_port_id_send(type_desc *t, rust_port_id target_port_id, void *sptr) {\n     bool sent = false;\n     rust_task *task = rust_task_thread::get_task();\n \n-    LOG(task, comm, \"chan_id_send task: 0x%\" PRIxPTR\n-        \" port: 0x%\" PRIxPTR, (uintptr_t) target_task_id,\n+    LOG(task, comm, \"rust_port_id*_send port: 0x%\" PRIxPTR,\n         (uintptr_t) target_port_id);\n \n     rust_port *port = task->kernel->get_port_by_id(target_port_id);"}, {"sha": "651488b2ebee5020f48863ee9bfb43a7a1c84709", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=561511e62813840e930ff60e6918ccaea4f00f00", "patch": "@@ -475,7 +475,7 @@ rust_task::notify(bool success) {\n     // FIXME (1078) Do this in rust code\n     if(notify_enabled) {\n         rust_port *target_port =\n-            kernel->get_port_by_id(notify_chan.port);\n+            kernel->get_port_by_id(notify_port);\n         if(target_port) {\n             task_notification msg;\n             msg.id = id;\n@@ -719,9 +719,9 @@ rust_task::delete_all_stacks() {\n }\n \n void\n-rust_task::config_notify(chan_handle chan) {\n+rust_task::config_notify(rust_port_id port) {\n     notify_enabled = true;\n-    notify_chan = chan;\n+    notify_port = port;\n }\n \n /*"}, {"sha": "37b3a76e720ddb53b082970c399a283c5d638414", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=561511e62813840e930ff60e6918ccaea4f00f00", "patch": "@@ -18,12 +18,6 @@\n #include \"rust_stack.h\"\n #include \"rust_port_selector.h\"\n \n-// Corresponds to the rust chan (currently _chan) type.\n-struct chan_handle {\n-    rust_task_id task;\n-    rust_port_id port;\n-};\n-\n struct rust_box;\n \n struct frame_glue_fns {\n@@ -56,7 +50,7 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     rust_task_id id;\n     bool notify_enabled;\n-    chan_handle notify_chan;\n+    rust_port_id notify_port;\n \n     context ctx;\n     stk_seg *stk;\n@@ -209,7 +203,7 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     void check_stack_canary();\n     void delete_all_stacks();\n \n-    void config_notify(chan_handle chan);\n+    void config_notify(rust_port_id port);\n \n     void call_on_c_stack(void *args, void *fn_ptr);\n     void call_on_rust_stack(void *args, void *fn_ptr);"}, {"sha": "4cec37ee347745c86b4946c57402f770df8b24cb", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/561511e62813840e930ff60e6918ccaea4f00f00/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=561511e62813840e930ff60e6918ccaea4f00f00", "patch": "@@ -1,4 +1,3 @@\n-chan_id_send\n check_claims\n debug_box\n debug_fn\n@@ -16,6 +15,7 @@ new_port\n new_task\n port_recv\n precise_time_ns\n+rust_port_id_send\n rust_port_select\n rand_free\n rand_new"}]}