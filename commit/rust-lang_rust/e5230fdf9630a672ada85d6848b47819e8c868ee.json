{"sha": "e5230fdf9630a672ada85d6848b47819e8c868ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MjMwZmRmOTYzMGE2NzJhZGE4NWQ2ODQ4YjQ3ODE5ZThjODY4ZWU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-08T12:36:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-08T12:36:26Z"}, "message": "Rollup merge of #78843 - tmiasko:inline-trace, r=wesleywiser\n\nLess verbose debug logging from inlining integrator\n\nThe inlining integrator produces relatively verbose and uninteresting\nlogs.  Move them from a debug log level to a trace level, so that they\ncan be easily isolated from others.", "tree": {"sha": "e805b08569697031239c8d8064837f3a89cb9ecb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e805b08569697031239c8d8064837f3a89cb9ecb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5230fdf9630a672ada85d6848b47819e8c868ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfp+ZLCRBK7hj4Ov3rIwAAdHIIAHq5rjfPqV7SEONS1Q4RQPJJ\nUfi41NYnD+urGlfXfw4mM4Jg+q1DvhDV6dfomKSnsp/020HSCgeJVZBkBU8Oyjcx\nBQpqaGDJE37ntfRxdApLhj4VT9L6pfZoJ/p53OLpfyYZaG8RBlOeOITOvIRrlHMR\nQr92C1IRps9cAPcwMpbkmiJRSmMRdXOikYAMIluV6xOY61mixtF6+8oKwazqk8WY\nXX3twgofzbTanVXgnFhPj8XAOu/9Xff5REVEXTHYFy2tJLy4xFcDObmLpC8pB8xj\nZirBu5ZSeJ5Q7cwRDNJFmlVPslMYst1SfsKCqtjMtHhkMFcwBnbjiSmrz4ltx3I=\n=nOLL\n-----END PGP SIGNATURE-----\n", "payload": "tree e805b08569697031239c8d8064837f3a89cb9ecb\nparent cb90042049e9d3e88c128d1e5e39fa09c82b993e\nparent 425675da426e825ab879c202ca27a0705497559a\nauthor Mara Bos <m-ou.se@m-ou.se> 1604838986 +0100\ncommitter GitHub <noreply@github.com> 1604838986 +0100\n\nRollup merge of #78843 - tmiasko:inline-trace, r=wesleywiser\n\nLess verbose debug logging from inlining integrator\n\nThe inlining integrator produces relatively verbose and uninteresting\nlogs.  Move them from a debug log level to a trace level, so that they\ncan be easily isolated from others.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5230fdf9630a672ada85d6848b47819e8c868ee", "html_url": "https://github.com/rust-lang/rust/commit/e5230fdf9630a672ada85d6848b47819e8c868ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5230fdf9630a672ada85d6848b47819e8c868ee/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb90042049e9d3e88c128d1e5e39fa09c82b993e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb90042049e9d3e88c128d1e5e39fa09c82b993e", "html_url": "https://github.com/rust-lang/rust/commit/cb90042049e9d3e88c128d1e5e39fa09c82b993e"}, {"sha": "425675da426e825ab879c202ca27a0705497559a", "url": "https://api.github.com/repos/rust-lang/rust/commits/425675da426e825ab879c202ca27a0705497559a", "html_url": "https://github.com/rust-lang/rust/commit/425675da426e825ab879c202ca27a0705497559a"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f3d2ab9590e9b9dc0ff56585dca80531c5f45934", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5230fdf9630a672ada85d6848b47819e8c868ee/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5230fdf9630a672ada85d6848b47819e8c868ee/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=e5230fdf9630a672ada85d6848b47819e8c868ee", "patch": "@@ -425,7 +425,7 @@ impl Inliner<'tcx> {\n                 }\n \n                 let dest = if dest_needs_borrow(destination.0) {\n-                    debug!(\"creating temp for return destination\");\n+                    trace!(\"creating temp for return destination\");\n                     let dest = Rvalue::Ref(\n                         self.tcx.lifetimes.re_erased,\n                         BorrowKind::Mut { allow_two_phase_borrow: false },\n@@ -633,7 +633,7 @@ impl Inliner<'tcx> {\n             }\n         }\n \n-        debug!(\"creating temp for argument {:?}\", arg);\n+        trace!(\"creating temp for argument {:?}\", arg);\n         // Otherwise, create a temporary for the arg\n         let arg = Rvalue::Use(arg);\n \n@@ -703,19 +703,19 @@ impl<'a, 'tcx> Integrator<'a, 'tcx> {\n                 Local::new(self.new_locals.start.index() + (idx - self.args.len()))\n             }\n         };\n-        debug!(\"mapping local `{:?}` to `{:?}`\", local, new);\n+        trace!(\"mapping local `{:?}` to `{:?}`\", local, new);\n         new\n     }\n \n     fn map_scope(&self, scope: SourceScope) -> SourceScope {\n         let new = SourceScope::new(self.new_scopes.start.index() + scope.index());\n-        debug!(\"mapping scope `{:?}` to `{:?}`\", scope, new);\n+        trace!(\"mapping scope `{:?}` to `{:?}`\", scope, new);\n         new\n     }\n \n     fn map_block(&self, block: BasicBlock) -> BasicBlock {\n         let new = BasicBlock::new(self.new_blocks.start.index() + block.index());\n-        debug!(\"mapping block `{:?}` to `{:?}`\", block, new);\n+        trace!(\"mapping block `{:?}` to `{:?}`\", block, new);\n         new\n     }\n }"}]}