{"sha": "abf6f4781f906a50c800f38db6e95a693d804865", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZjZmNDc4MWY5MDZhNTBjODAwZjM4ZGI2ZTk1YTY5M2Q4MDQ4NjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-17T10:36:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-18T10:09:00Z"}, "message": "Forward entire ptr used for dealloaction to machine\n\nAlso, demote some debug! to trace!", "tree": {"sha": "bb1cf06fd487e6877a515e4251ec3d4c23206808", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb1cf06fd487e6877a515e4251ec3d4c23206808"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abf6f4781f906a50c800f38db6e95a693d804865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abf6f4781f906a50c800f38db6e95a693d804865", "html_url": "https://github.com/rust-lang/rust/commit/abf6f4781f906a50c800f38db6e95a693d804865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abf6f4781f906a50c800f38db6e95a693d804865/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1279a59c9fa4b7edb23a269c46249f8497aad73c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1279a59c9fa4b7edb23a269c46249f8497aad73c", "html_url": "https://github.com/rust-lang/rust/commit/1279a59c9fa4b7edb23a269c46249f8497aad73c"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "102dda9f17e3bcd41d8820aa786e6aedf62e1d98", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=abf6f4781f906a50c800f38db6e95a693d804865", "patch": "@@ -358,11 +358,11 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n                 // and it also rounds up to alignment, which we want to avoid,\n                 // as the unsized field's alignment could be smaller.\n                 assert!(!layout.ty.is_simd());\n-                debug!(\"DST layout: {:?}\", layout);\n+                trace!(\"DST layout: {:?}\", layout);\n \n                 let sized_size = layout.fields.offset(layout.fields.count() - 1);\n                 let sized_align = layout.align;\n-                debug!(\n+                trace!(\n                     \"DST {} statically sized prefix size: {:?} align: {:?}\",\n                     layout.ty,\n                     sized_size,"}, {"sha": "a3e52919f02cda32a7a483d7252030c8911cdce2", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=abf6f4781f906a50c800f38db6e95a693d804865", "patch": "@@ -194,7 +194,7 @@ pub trait Machine<'a, 'mir, 'tcx>: Sized {\n     #[inline]\n     fn memory_deallocated(\n         _alloc: &mut Allocation<Self::PointerTag, Self::AllocExtra>,\n-        _id: AllocId,\n+        _ptr: Pointer<Self::PointerTag>,\n     ) -> EvalResult<'tcx> {\n         Ok(())\n     }"}, {"sha": "9febcceae068e60f90d4dd4b68b0b35c059b6fe1", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=abf6f4781f906a50c800f38db6e95a693d804865", "patch": "@@ -190,7 +190,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n         size_and_align: Option<(Size, Align)>,\n         kind: MemoryKind<M::MemoryKinds>,\n     ) -> EvalResult<'tcx> {\n-        debug!(\"deallocating: {}\", ptr.alloc_id);\n+        trace!(\"deallocating: {}\", ptr.alloc_id);\n \n         if ptr.offset.bytes() != 0 {\n             return err!(DeallocateNonBasePtr);\n@@ -232,7 +232,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n         }\n \n         // Let the machine take some extra action\n-        M::memory_deallocated(&mut alloc, ptr.alloc_id)?;\n+        M::memory_deallocated(&mut alloc, ptr)?;\n \n         // Don't forget to remember size and align of this now-dead allocation\n         let old = self.dead_alloc_map.insert("}, {"sha": "a2d4eee2842c7ce7a6fc5fa31733ebf5dfdf3f74", "filename": "src/librustc_mir/interpret/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf6f4781f906a50c800f38db6e95a693d804865/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs?ref=abf6f4781f906a50c800f38db6e95a693d804865", "patch": "@@ -26,7 +26,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         ty: Ty<'tcx>,\n         poly_trait_ref: ty::PolyExistentialTraitRef<'tcx>,\n     ) -> EvalResult<'tcx, Pointer<M::PointerTag>> {\n-        debug!(\"get_vtable(trait_ref={:?})\", poly_trait_ref);\n+        trace!(\"get_vtable(trait_ref={:?})\", poly_trait_ref);\n \n         let (ty, poly_trait_ref) = self.tcx.erase_regions(&(ty, poly_trait_ref));\n "}]}