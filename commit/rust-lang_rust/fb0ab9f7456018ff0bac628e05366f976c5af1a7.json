{"sha": "fb0ab9f7456018ff0bac628e05366f976c5af1a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMGFiOWY3NDU2MDE4ZmYwYmFjNjI4ZTA1MzY2Zjk3NmM1YWYxYTc=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-08T06:27:38Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-12T08:05:00Z"}, "message": "Keep SyntaxNodePtr::range private", "tree": {"sha": "681abdb0ab856c42a586d8851c9708a7ec6f8b88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/681abdb0ab856c42a586d8851c9708a7ec6f8b88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb0ab9f7456018ff0bac628e05366f976c5af1a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb0ab9f7456018ff0bac628e05366f976c5af1a7", "html_url": "https://github.com/rust-lang/rust/commit/fb0ab9f7456018ff0bac628e05366f976c5af1a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb0ab9f7456018ff0bac628e05366f976c5af1a7/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66cea8cbaa3320653e760e7b4ce839e055976acf", "url": "https://api.github.com/repos/rust-lang/rust/commits/66cea8cbaa3320653e760e7b4ce839e055976acf", "html_url": "https://github.com/rust-lang/rust/commit/66cea8cbaa3320653e760e7b4ce839e055976acf"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "dfe98571e718a1168f1bf042deba9cc633b6cd7c", "filename": "crates/hir_ty/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs?ref=fb0ab9f7456018ff0bac628e05366f976c5af1a7", "patch": "@@ -267,7 +267,7 @@ impl fmt::Display for CaseType {\n #[derive(Debug)]\n pub struct IncorrectCase {\n     pub file: HirFileId,\n-    pub ident: SyntaxNodePtr,\n+    pub ident: AstPtr<ast::Name>,\n     pub expected_case: CaseType,\n     pub ident_type: String,\n     pub ident_text: String,\n@@ -290,7 +290,7 @@ impl Diagnostic for IncorrectCase {\n     }\n \n     fn display_source(&self) -> InFile<SyntaxNodePtr> {\n-        InFile::new(self.file, self.ident.clone())\n+        InFile::new(self.file, self.ident.clone().into())\n     }\n \n     fn as_any(&self) -> &(dyn Any + Send + 'static) {"}, {"sha": "f987636fe57a18ce1efe9682f01a17574bf681bc", "filename": "crates/hir_ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=fb0ab9f7456018ff0bac628e05366f976c5af1a7", "patch": "@@ -213,12 +213,21 @@ impl<'a, 'b> DeclValidator<'a, 'b> {\n         for param_to_rename in fn_param_replacements {\n             // We assume that parameters in replacement are in the same order as in the\n             // actual params list, but just some of them (ones that named correctly) are skipped.\n-            let ast_ptr = loop {\n+            let ast_ptr: ast::Name = loop {\n                 match fn_params_iter.next() {\n                     Some(element)\n                         if pat_equals_to_name(element.pat(), &param_to_rename.current_name) =>\n                     {\n-                        break element.pat().unwrap()\n+                        if let ast::Pat::IdentPat(pat) = element.pat().unwrap() {\n+                            break pat.name().unwrap();\n+                        } else {\n+                            // This is critical. If we consider this parameter the expected one,\n+                            // it **must** have a name.\n+                            panic!(\n+                                \"Pattern {:?} equals to expected replacement {:?}, but has no name\",\n+                                element, param_to_rename\n+                            );\n+                        }\n                     }\n                     Some(_) => {}\n                     None => {"}, {"sha": "b47fe046911ae8b1a216acfdd29082bf9ddaf98e", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=fb0ab9f7456018ff0bac628e05366f976c5af1a7", "patch": "@@ -104,8 +104,11 @@ impl DiagnosticWithFix for MissingOkInTailExpr {\n \n impl DiagnosticWithFix for IncorrectCase {\n     fn fix(&self, sema: &Semantics<RootDatabase>) -> Option<Fix> {\n+        let root = sema.db.parse_or_expand(self.file)?;\n+        let name_node = self.ident.to_node(&root);\n+\n         let file_id = self.file.original_file(sema.db);\n-        let offset = self.ident.text_range().start();\n+        let offset = name_node.syntax().text_range().start();\n         let file_position = FilePosition { file_id, offset };\n \n         let rename_changes = rename_with_semantics(sema, file_position, &self.suggested_text)?;"}, {"sha": "d3fb7a5d98f1e8717d70c20ac2eb22d247c9b0e0", "filename": "crates/syntax/src/ptr.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fsyntax%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0ab9f7456018ff0bac628e05366f976c5af1a7/crates%2Fsyntax%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fptr.rs?ref=fb0ab9f7456018ff0bac628e05366f976c5af1a7", "patch": "@@ -23,10 +23,6 @@ impl SyntaxNodePtr {\n         SyntaxNodePtr { range: node.text_range(), kind: node.kind() }\n     }\n \n-    pub fn text_range(&self) -> TextRange {\n-        self.range.clone()\n-    }\n-\n     pub fn to_node(&self, root: &SyntaxNode) -> SyntaxNode {\n         assert!(root.parent().is_none());\n         successors(Some(root.clone()), |node| {"}]}