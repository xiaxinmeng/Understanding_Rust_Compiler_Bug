{"sha": "b7de7973b221acb2ce900a04c11320a16fc884fb", "node_id": "C_kwDOAAsO6NoAKGI3ZGU3OTczYjIyMWFjYjJjZTkwMGEwNGMxMTMyMGExNmZjODg0ZmI", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-12-11T18:13:16Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-12-11T18:13:16Z"}, "message": "Don't emit shared files when scraping dependencies", "tree": {"sha": "8fcd1d310e5e65a9db8d0498c34df16ffc6c5f69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fcd1d310e5e65a9db8d0498c34df16ffc6c5f69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7de7973b221acb2ce900a04c11320a16fc884fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7de7973b221acb2ce900a04c11320a16fc884fb", "html_url": "https://github.com/rust-lang/rust/commit/b7de7973b221acb2ce900a04c11320a16fc884fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7de7973b221acb2ce900a04c11320a16fc884fb/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9a37ad0d995c71518629b032f8e816e1efa8bca", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9a37ad0d995c71518629b032f8e816e1efa8bca", "html_url": "https://github.com/rust-lang/rust/commit/b9a37ad0d995c71518629b032f8e816e1efa8bca"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "155bd324c39942e366afc3b1e24401ffd0ebf40e", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7de7973b221acb2ce900a04c11320a16fc884fb/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7de7973b221acb2ce900a04c11320a16fc884fb/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=b7de7973b221acb2ce900a04c11320a16fc884fb", "patch": "@@ -282,7 +282,10 @@ crate struct RenderOptions {\n     crate emit: Vec<EmitType>,\n     /// If `true`, HTML source pages will generate links for items to their definition.\n     crate generate_link_to_definition: bool,\n+    /// Set of function-call locations to include as examples\n     crate call_locations: AllCallLocations,\n+    /// If `true`, Context::init will not emit shared files.\n+    crate no_emit_shared: bool,\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n@@ -753,6 +756,7 @@ impl Options {\n                 emit,\n                 generate_link_to_definition,\n                 call_locations,\n+                no_emit_shared: false,\n             },\n             crate_name,\n             output_format,"}, {"sha": "bae02bb7457edce3e93ab7ef7598bdc02f28c20e", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b7de7973b221acb2ce900a04c11320a16fc884fb/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7de7973b221acb2ce900a04c11320a16fc884fb/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=b7de7973b221acb2ce900a04c11320a16fc884fb", "patch": "@@ -405,6 +405,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             show_type_layout,\n             generate_link_to_definition,\n             call_locations,\n+            no_emit_shared,\n             ..\n         } = options;\n \n@@ -525,13 +526,16 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             sources::render(&mut cx, &krate)?;\n         }\n \n-        // Build our search index\n-        let index = build_index(&krate, &mut Rc::get_mut(&mut cx.shared).unwrap().cache, tcx);\n+        if !no_emit_shared {\n+            // Build our search index\n+            let index = build_index(&krate, &mut Rc::get_mut(&mut cx.shared).unwrap().cache, tcx);\n+\n+            // Write shared runs within a flock; disable thread dispatching of IO temporarily.\n+            Rc::get_mut(&mut cx.shared).unwrap().fs.set_sync_only(true);\n+            write_shared(&cx, &krate, index, &md_opts)?;\n+            Rc::get_mut(&mut cx.shared).unwrap().fs.set_sync_only(false);\n+        }\n \n-        // Write shared runs within a flock; disable thread dispatching of IO temporarily.\n-        Rc::get_mut(&mut cx.shared).unwrap().fs.set_sync_only(true);\n-        write_shared(&cx, &krate, index, &md_opts)?;\n-        Rc::get_mut(&mut cx.shared).unwrap().fs.set_sync_only(false);\n         Ok((cx, krate))\n     }\n "}, {"sha": "6809551fcfd9a2a3ad9bce09140248fdee7f319a", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7de7973b221acb2ce900a04c11320a16fc884fb/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7de7973b221acb2ce900a04c11320a16fc884fb/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=b7de7973b221acb2ce900a04c11320a16fc884fb", "patch": "@@ -223,13 +223,14 @@ where\n \n crate fn run(\n     krate: clean::Crate,\n-    renderopts: config::RenderOptions,\n+    mut renderopts: config::RenderOptions,\n     cache: formats::cache::Cache,\n     tcx: TyCtxt<'_>,\n     options: ScrapeExamplesOptions,\n ) -> interface::Result<()> {\n     let inner = move || -> Result<(), String> {\n         // Generates source files for examples\n+        renderopts.no_emit_shared = true;\n         let (cx, _) = Context::init(krate, renderopts, cache, tcx).map_err(|e| e.to_string())?;\n \n         // Collect CrateIds corresponding to provided target crates"}]}