{"sha": "c9816be35a1bcdef915498939a1f62c18dee1c04", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ODE2YmUzNWExYmNkZWY5MTU0OTg5MzlhMWY2MmMxOGRlZTFjMDQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-11-25T16:18:31Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-11-25T16:19:20Z"}, "message": "vec: add missing out-of-memory check\n\nCloses #19305", "tree": {"sha": "00506ded21a20085f070f19928dd121450137b95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00506ded21a20085f070f19928dd121450137b95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9816be35a1bcdef915498939a1f62c18dee1c04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9816be35a1bcdef915498939a1f62c18dee1c04", "html_url": "https://github.com/rust-lang/rust/commit/c9816be35a1bcdef915498939a1f62c18dee1c04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9816be35a1bcdef915498939a1f62c18dee1c04/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ca6d1840818e4a8977d00ed62cf0e8e0e5d193", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ca6d1840818e4a8977d00ed62cf0e8e0e5d193", "html_url": "https://github.com/rust-lang/rust/commit/48ca6d1840818e4a8977d00ed62cf0e8e0e5d193"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "e239125244f17744bb15f42ec463d1a0e400ec3a", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9816be35a1bcdef915498939a1f62c18dee1c04/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9816be35a1bcdef915498939a1f62c18dee1c04/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=c9816be35a1bcdef915498939a1f62c18dee1c04", "patch": "@@ -165,6 +165,7 @@ impl<T> Vec<T> {\n             let size = capacity.checked_mul(mem::size_of::<T>())\n                                .expect(\"capacity overflow\");\n             let ptr = unsafe { allocate(size, mem::min_align_of::<T>()) };\n+            if ptr.is_null() { ::alloc::oom() }\n             Vec { ptr: ptr as *mut T, len: 0, cap: capacity }\n         }\n     }"}]}