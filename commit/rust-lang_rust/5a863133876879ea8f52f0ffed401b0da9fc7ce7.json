{"sha": "5a863133876879ea8f52f0ffed401b0da9fc7ce7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhODYzMTMzODc2ODc5ZWE4ZjUyZjBmZmVkNDAxYjBkYTlmYzdjZTc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T23:07:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T23:07:08Z"}, "message": "rustdoc: Write markdown for native mods and fns", "tree": {"sha": "614f0bac3b2e741c66a81afccdda41ac160be2ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/614f0bac3b2e741c66a81afccdda41ac160be2ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a863133876879ea8f52f0ffed401b0da9fc7ce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a863133876879ea8f52f0ffed401b0da9fc7ce7", "html_url": "https://github.com/rust-lang/rust/commit/5a863133876879ea8f52f0ffed401b0da9fc7ce7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a863133876879ea8f52f0ffed401b0da9fc7ce7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16010058a64a8c0f2db064a365550e3dc5b88171", "url": "https://api.github.com/repos/rust-lang/rust/commits/16010058a64a8c0f2db064a365550e3dc5b88171", "html_url": "https://github.com/rust-lang/rust/commit/16010058a64a8c0f2db064a365550e3dc5b88171"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "aaddb9663cbb9d76f8368181205e83eac6960cd1", "filename": "src/rustdoc/markdown_pass.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5a863133876879ea8f52f0ffed401b0da9fc7ce7/src%2Frustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a863133876879ea8f52f0ffed401b0da9fc7ce7/src%2Frustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_pass.rs?ref=5a863133876879ea8f52f0ffed401b0da9fc7ce7", "patch": "@@ -133,7 +133,7 @@ fn write_mod_contents(\n     for itemtag in doc.items {\n         alt itemtag {\n           doc::modtag(moddoc) { write_mod(ctxt, moddoc) }\n-          doc::nmodtag(_) { fail }\n+          doc::nmodtag(nmoddoc) { write_nmod(ctxt, nmoddoc) }\n           doc::fntag(fndoc) { write_fn(ctxt, fndoc) }\n           doc::consttag(constdoc) { write_const(ctxt, constdoc) }\n           doc::enumtag(enumdoc) { write_enum(ctxt, enumdoc) }\n@@ -157,6 +157,27 @@ fn should_write_crate_description() {\n     assert str::contains(markdown, \"this is the crate\");\n }\n \n+fn write_nmod(ctxt: ctxt, doc: doc::nmoddoc) {\n+    write_brief(ctxt, doc.brief());\n+    write_desc(ctxt, doc.desc());\n+\n+    for fndoc in doc.fns {\n+        write_fn(ctxt, fndoc);\n+    }\n+}\n+\n+#[test]\n+fn should_write_native_mods() {\n+    let markdown = test::render(\"#[doc = \\\"test\\\"] native mod a { }\");\n+    assert str::contains(markdown, \"test\");\n+}\n+\n+#[test]\n+fn should_write_native_fns() {\n+    let markdown = test::render(\"native mod a { #[doc = \\\"test\\\"] fn a(); }\");\n+    assert str::contains(markdown, \"test\");\n+}\n+\n fn write_fn(\n     ctxt: ctxt,\n     doc: doc::fndoc"}]}