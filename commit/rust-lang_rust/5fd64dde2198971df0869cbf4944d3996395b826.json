{"sha": "5fd64dde2198971df0869cbf4944d3996395b826", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZDY0ZGRlMjE5ODk3MWRmMDg2OWNiZjQ5NDRkMzk5NjM5NWI4MjY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-02-05T17:04:25Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-02-14T18:17:53Z"}, "message": "Simplified logic and corrected shallow to deep.", "tree": {"sha": "f47f5182dea6a40485ab6f4395bf9a2ed49daad2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f47f5182dea6a40485ab6f4395bf9a2ed49daad2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fd64dde2198971df0869cbf4944d3996395b826", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlqEfVEACgkQAXYLT59T\n8VR14g//WfTRnQyiR3h2Qqdb3klgOmi9R+QgW0kx3JLxTLzpO+UAFbG/TZZUYsm2\nE9zqKmnFNTgbeVdcF0Yusz3eMMYmD1VKFAo/hifg+TMrAPu2dpbtuJlhsFA+xRBD\nzjaWdtRXEyoW8KYptZ98g0CYrR2546SJ/Rvfw6Q5yNSd3k8fBsY70bAxiugpyBqm\nPpAmL3O8CyG3cPx0MzHS6J3G6a2KSJgHgr75RrObUxDsxnxR3d44xSkpzE/xAFCi\nyHpdP4NgUvJEDhJbS05oPGAN2OOk4Dmc+c8MLGViL+r6YOjDhB0GKa95Ds3/bc2G\nXZfRI8da+E3sC6PBTw0ZatppT4dItFC4oV2f6szhLrOQDO/kITlJ0TprvWfNMydT\nNP4R/dphlUwYeFkslfed8LeRhJacyRMuqMph28wuRoGUyAlx+SdeSmZ7EbsW/k9N\nm5mvJknn2wP4ec+I1fl8GznnIG1r1Ne9HBMJn5b3c/KDlQCgTRfyeh7esxIZnHkt\n9u8tSZc4yXpR5LQl6r/GIcGjrYCDgCLlfgm40lkyreoeSTjzAh1iCBpkMRRIMiQ+\n5piKdX+EbUG032XPOQUkp1ooNi4pcCuvYiCd31EhiaJNlw4e5sQYXXlvCESANIbc\nTW7ezLlM/mkDDicfAbbrLhnFMSriPD93pzk5aOGjWuG5MSp34Fo=\n=vv/e\n-----END PGP SIGNATURE-----", "payload": "tree f47f5182dea6a40485ab6f4395bf9a2ed49daad2\nparent e7f328ea574bbfc3e927be01eb5f7b66bae5a578\nauthor David Wood <david@davidtw.co> 1517850265 +0000\ncommitter David Wood <david@davidtw.co> 1518632273 +0000\n\nSimplified logic and corrected shallow to deep.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd64dde2198971df0869cbf4944d3996395b826", "html_url": "https://github.com/rust-lang/rust/commit/5fd64dde2198971df0869cbf4944d3996395b826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fd64dde2198971df0869cbf4944d3996395b826/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7f328ea574bbfc3e927be01eb5f7b66bae5a578", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7f328ea574bbfc3e927be01eb5f7b66bae5a578", "html_url": "https://github.com/rust-lang/rust/commit/e7f328ea574bbfc3e927be01eb5f7b66bae5a578"}], "stats": {"total": 40, "additions": 11, "deletions": 29}, "files": [{"sha": "46f94f2388ffe305e67014d4acf6013c3fd369cc", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 11, "deletions": 29, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5fd64dde2198971df0869cbf4944d3996395b826/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd64dde2198971df0869cbf4944d3996395b826/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=5fd64dde2198971df0869cbf4944d3996395b826", "patch": "@@ -727,35 +727,17 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             // See #47703.\n             ty::TyAdt(def, substs) if def.is_struct() && !def.has_dtor(self.tcx) => {\n                 for (index, field) in def.all_fields().enumerate() {\n-                    let field_ty = field.ty(self.tcx, substs);\n-                    let proj = Projection {\n-                        base: drop_place.clone(),\n-                        elem: ProjectionElem::Field(Field::new(index), field_ty),\n-                    };\n-                    let place = Place::Projection(Box::new(proj));\n-\n-                    match field_ty.sty {\n-                        // It may be the case that this issue occurs with a struct within a\n-                        // struct, so we recurse to handle that.\n-                        ty::TyAdt(def, _) if def.is_struct() && !def.has_dtor(self.tcx) => {\n-                            self.visit_terminator_drop(\n-                                loc,\n-                                term,\n-                                flow_state,\n-                                &place,\n-                                span,\n-                            );\n-                        },\n-                        _ => {\n-                            self.access_place(\n-                                ContextKind::Drop.new(loc),\n-                                (&place, span),\n-                                (Shallow(None), Write(WriteKind::StorageDeadOrDrop)),\n-                                LocalMutationIsAllowed::Yes,\n-                                flow_state,\n-                            );\n-                        },\n-                    }\n+                    let place = drop_place.clone();\n+                    let place = place.field(Field::new(index), field.ty(self.tcx, substs));\n+                    let place = place.deref();\n+\n+                    self.visit_terminator_drop(\n+                        loc,\n+                        term,\n+                        flow_state,\n+                        &place,\n+                        span,\n+                    );\n                 }\n             },\n             _ => {"}]}