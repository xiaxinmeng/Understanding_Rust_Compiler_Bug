{"sha": "89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "node_id": "C_kwDOAAsO6NoAKDg5ZmRlNGFiZjJjNjg5YzBhZDVhMDljYzQyM2EwYTdiZTQ3NWQ2ZWU", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-02-18T19:05:30Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-02-18T19:05:30Z"}, "message": "Add placeholders, remove name suggesting", "tree": {"sha": "87e38184807d89fee07be1629c1cab988b697937", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e38184807d89fee07be1629c1cab988b697937"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmPxIXoACgkQTTgXC1ov\nwzQX1BAAsdEAhBdW4uAYtp/kGj1dDT93OdOjg9FvPt00HhNf/JEF2j3qj5OAJyaY\nnZ5+musgj1/T/toG98zPSH6KG8mEeNcr+MK/nKq2NVR6HdWx8boKhq7dz1faPWzY\nwwxw2Bg6g34AKdKs/uY4IjmPV2FJJ4zpKvuSSx58xGFf9gtioUmn+3F3PR6FhBlJ\n4RhwXx4ver2SF1LtYIuwQgz4HHKm/EYYYeK1LXXIiDW7iIZzyw4OHF8xAeJQC4ts\nGnq6J0wsHz5FZl/oq46V+Tk7/PO1dBks0s1m6VHPZgpZcBjlBrekBPLFeEEj5tOn\nMvPrEg/YlotxZbNVIXbweIGMiPdeoGiGQlXEVRZLSO9wQ73vqJeT1DftzVFvDLhS\nyRzJYDiM6KphijIlbg7buvRUmwLsX7tAMjOKIBi0erXLKCLlhn2hYthp+xDpjyzA\nHDWvR795pR+Wi1+tRzA4cWtcV2op1orwT9NAUvzoWVB3GLXPxJ1RqehFfbmvR/Od\nGviMIfRHMNgfR5uOjfqmx6tBrpVuQ2E/snRIOiHWCxKiizifQeEjhztn1a95y9hD\nOin7BzTSdptw5RQrKtm4dPX3SVv2KElvZS2EQiaUi91udRGWLvm0LcNTuVmqUcgI\n13BqSPbUgjuCWsg5AYodwy9kfwiVIdtdB+LUKq235G/BQwAgfok=\n=C6HZ\n-----END PGP SIGNATURE-----", "payload": "tree 87e38184807d89fee07be1629c1cab988b697937\nparent 6ef34bf009343a398b3d04850c5f0784329ebe99\nauthor blyxyas <blyxyas@gmail.com> 1676747130 +0100\ncommitter blyxyas <blyxyas@gmail.com> 1676747130 +0100\n\nAdd placeholders, remove name suggesting\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "html_url": "https://github.com/rust-lang/rust/commit/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ef34bf009343a398b3d04850c5f0784329ebe99", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ef34bf009343a398b3d04850c5f0784329ebe99", "html_url": "https://github.com/rust-lang/rust/commit/6ef34bf009343a398b3d04850c5f0784329ebe99"}], "stats": {"total": 42, "additions": 9, "deletions": 33}, "files": [{"sha": "2811a73f6c18947cfde5fa935c51bc8fd7f38a30", "filename": "clippy_lints/src/functions/impl_trait_in_params.rs", "status": "modified", "additions": 5, "deletions": 29, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee/clippy_lints%2Fsrc%2Ffunctions%2Fimpl_trait_in_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee/clippy_lints%2Fsrc%2Ffunctions%2Fimpl_trait_in_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fimpl_trait_in_params.rs?ref=89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::{diagnostics::span_lint_and_then, is_in_test_function};\n \n-use rustc_hir::{intravisit::FnKind, Body, Generics, HirId};\n+use rustc_hir::{intravisit::FnKind, Body, HirId};\n use rustc_lint::LateContext;\n use rustc_span::Span;\n \n@@ -19,13 +19,12 @@ pub(super) fn check_fn<'tcx>(cx: &LateContext<'_>, kind: &'tcx FnKind<'_>, body:\n                         param.span,\n                         \"'`impl Trait` used as a function parameter'\",\n                         |diag| {\n-                            let next_letter = next_valid_letter(generics);\n                             if let Some(gen_span) = generics.span_for_param_suggestion() {\n                                 diag.span_suggestion_with_style(\n                                     gen_span,\n                                     \"add a type paremeter\",\n-                                    format!(\", {next_letter}: {}\", &param.name.ident().as_str()[5..]),\n-                                    rustc_errors::Applicability::MaybeIncorrect,\n+                                    format!(\", {{ /* Generic name */ }}: {}\", &param.name.ident().as_str()[5..]),\n+                                    rustc_errors::Applicability::HasPlaceholders,\n                                     rustc_errors::SuggestionStyle::ShowAlways,\n                                 );\n                             } else {\n@@ -37,8 +36,8 @@ pub(super) fn check_fn<'tcx>(cx: &LateContext<'_>, kind: &'tcx FnKind<'_>, body:\n                                         ident.span.parent(),\n                                     ),\n                                     \"add a type paremeter\",\n-                                    format!(\"<{next_letter}: {}>\", &param.name.ident().as_str()[5..]),\n-                                    rustc_errors::Applicability::MaybeIncorrect,\n+                                    format!(\"<{{ /* Generic name */ }}: {}>\", &param.name.ident().as_str()[5..]),\n+                                    rustc_errors::Applicability::HasPlaceholders,\n                                     rustc_errors::SuggestionStyle::ShowAlways,\n                                 );\n                             }\n@@ -49,26 +48,3 @@ pub(super) fn check_fn<'tcx>(cx: &LateContext<'_>, kind: &'tcx FnKind<'_>, body:\n         }\n     }\n }\n-\n-fn next_valid_letter(generics: &Generics<'_>) -> char {\n-    let mut generics_names = Vec::new();\n-\n-    generics.params.iter().for_each(|param| {\n-        generics_names.push(param.name.ident().as_str().to_owned());\n-    });\n-\n-    // If T exists, try with U, then with V, and so on...\n-    let mut current_letter = 84u32; // ASCII code for \"T\"\n-    while generics_names.contains(&String::from(char::from_u32(current_letter).unwrap())) {\n-        current_letter += 1;\n-        if current_letter == 91 {\n-            // ASCII code for \"Z\"\n-            current_letter = 65;\n-        } else if current_letter == 83 {\n-            // ASCII \"S\"\n-            current_letter = 97; // \"a\"\n-        };\n-    }\n-\n-    char::from_u32(current_letter).unwrap()\n-}"}, {"sha": "acfcc21445ebcbaae7225f261276f4a14b3335db", "filename": "tests/ui/impl_trait_in_params.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee/tests%2Fui%2Fimpl_trait_in_params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee/tests%2Fui%2Fimpl_trait_in_params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl_trait_in_params.stderr?ref=89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "patch": "@@ -7,8 +7,8 @@ LL | pub fn a(_: impl Trait) {}\n    = note: `-D clippy::impl-trait-in-params` implied by `-D warnings`\n help: add a type paremeter\n    |\n-LL | pub fn a<T: Trait>(_: impl Trait) {}\n-   |         ++++++++++\n+LL | pub fn a<{ /* Generic name */ }: Trait>(_: impl Trait) {}\n+   |         +++++++++++++++++++++++++++++++\n \n error: '`impl Trait` used as a function parameter'\n   --> $DIR/impl_trait_in_params.rs:9:29\n@@ -18,8 +18,8 @@ LL | pub fn c<C: Trait>(_: C, _: impl Trait) {}\n    |\n help: add a type paremeter\n    |\n-LL | pub fn c<C: Trait, T: Trait>(_: C, _: impl Trait) {}\n-   |                  ++++++++++\n+LL | pub fn c<C: Trait, { /* Generic name */ }: Trait>(_: C, _: impl Trait) {}\n+   |                  +++++++++++++++++++++++++++++++\n \n error: aborting due to 2 previous errors\n "}]}