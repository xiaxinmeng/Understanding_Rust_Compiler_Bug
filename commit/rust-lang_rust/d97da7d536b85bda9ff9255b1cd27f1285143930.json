{"sha": "d97da7d536b85bda9ff9255b1cd27f1285143930", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5N2RhN2Q1MzZiODViZGE5ZmY5MjU1YjFjZDI3ZjEyODUxNDM5MzA=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-09T19:55:36Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-29T11:08:06Z"}, "message": "Minor refactoring", "tree": {"sha": "ce7f7e4335989ba2d095822d2a9f3726a97118bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce7f7e4335989ba2d095822d2a9f3726a97118bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d97da7d536b85bda9ff9255b1cd27f1285143930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d97da7d536b85bda9ff9255b1cd27f1285143930", "html_url": "https://github.com/rust-lang/rust/commit/d97da7d536b85bda9ff9255b1cd27f1285143930", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d97da7d536b85bda9ff9255b1cd27f1285143930/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba76092c2ef771f4b4463ec5e879f12194e59ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba76092c2ef771f4b4463ec5e879f12194e59ec5", "html_url": "https://github.com/rust-lang/rust/commit/ba76092c2ef771f4b4463ec5e879f12194e59ec5"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "1ab5f19c2e2a3f812823428b2938896849bde86e", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d97da7d536b85bda9ff9255b1cd27f1285143930/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97da7d536b85bda9ff9255b1cd27f1285143930/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=d97da7d536b85bda9ff9255b1cd27f1285143930", "patch": "@@ -145,26 +145,23 @@ pub fn compile_input(trans: Box<TransCrate>,\n         let output_paths = generated_output_paths(sess, &outputs, &crate_name);\n \n         // Ensure the source file isn't accidentally overwritten during compilation.\n-        match *input_path {\n-            Some(ref input_path) => {\n-                if sess.opts.will_create_output_file() {\n-                    if output_contains_path(&output_paths, input_path) {\n-                        sess.err(&format!(\n-                            \"the input file \\\"{}\\\" would be overwritten by the generated \\\n-                            executable\",\n-                            input_path.display()));\n-                        return Err(CompileIncomplete::Stopped);\n-                    }\n-                    if let Some(dir_path) = output_conflicts_with_dir(&output_paths) {\n-                        sess.err(&format!(\n-                            \"the generated executable for the input file \\\"{}\\\" conflicts with the \\\n-                            existing directory \\\"{}\\\"\",\n-                            input_path.display(), dir_path.display()));\n-                        return Err(CompileIncomplete::Stopped);\n-                    }\n+        if let Some(ref input_path) = *input_path {\n+            if sess.opts.will_create_output_file() {\n+                if output_contains_path(&output_paths, input_path) {\n+                    sess.err(&format!(\n+                        \"the input file \\\"{}\\\" would be overwritten by the generated \\\n+                        executable\",\n+                        input_path.display()));\n+                    return Err(CompileIncomplete::Stopped);\n                 }\n-            },\n-            None => {}\n+                if let Some(dir_path) = output_conflicts_with_dir(&output_paths) {\n+                    sess.err(&format!(\n+                        \"the generated executable for the input file \\\"{}\\\" conflicts with the \\\n+                        existing directory \\\"{}\\\"\",\n+                        input_path.display(), dir_path.display()));\n+                    return Err(CompileIncomplete::Stopped);\n+                }\n+            }\n         }\n \n         write_out_deps(sess, &outputs, &output_paths);"}]}