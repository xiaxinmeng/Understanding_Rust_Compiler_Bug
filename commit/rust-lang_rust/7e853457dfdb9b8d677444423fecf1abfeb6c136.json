{"sha": "7e853457dfdb9b8d677444423fecf1abfeb6c136", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlODUzNDU3ZGZkYjliOGQ2Nzc0NDQ0MjNmZWNmMWFiZmViNmMxMzY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-30T07:55:04Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-30T07:55:04Z"}, "message": "Move simplified_ty from trans to semant and use it a few places.", "tree": {"sha": "a65a03b959c1a3a321e53e5170417eb8ac35a59d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a65a03b959c1a3a321e53e5170417eb8ac35a59d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e853457dfdb9b8d677444423fecf1abfeb6c136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e853457dfdb9b8d677444423fecf1abfeb6c136", "html_url": "https://github.com/rust-lang/rust/commit/7e853457dfdb9b8d677444423fecf1abfeb6c136", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e853457dfdb9b8d677444423fecf1abfeb6c136/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "861423989dc4855ef16f42c5e439b26dd8010b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/861423989dc4855ef16f42c5e439b26dd8010b00", "html_url": "https://github.com/rust-lang/rust/commit/861423989dc4855ef16f42c5e439b26dd8010b00"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "cb11991fd9350c505445bf145c981568c937f23b", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7e853457dfdb9b8d677444423fecf1abfeb6c136/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7e853457dfdb9b8d677444423fecf1abfeb6c136/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=7e853457dfdb9b8d677444423fecf1abfeb6c136", "patch": "@@ -1066,12 +1066,19 @@ let check_concrete params thing =\n   else bug () \"unhandled parametric binding\"\n ;;\n \n+let rec simplified_ty (t:Ast.ty) : Ast.ty =\n+  match t with\n+      Ast.TY_exterior t\n+    | Ast.TY_mutable t\n+    | Ast.TY_constrained (t, _) -> simplified_ty t\n+    | _ -> t\n+;;\n \n let project_type\n     (base_ty:Ast.ty)\n     (comp:Ast.lval_component)\n     : Ast.ty =\n-  match (base_ty, comp) with\n+  match (simplified_ty base_ty, comp) with\n       (Ast.TY_rec elts, Ast.COMP_named (Ast.COMP_ident id)) ->\n         begin\n           match atab_search elts id with"}, {"sha": "e33e3ed4f11d418c3436eec79658cf8ab13d764a", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7e853457dfdb9b8d677444423fecf1abfeb6c136/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7e853457dfdb9b8d677444423fecf1abfeb6c136/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=7e853457dfdb9b8d677444423fecf1abfeb6c136", "patch": "@@ -1887,12 +1887,12 @@ let trans_visitor\n     in\n       match expr with\n           Ast.EXPR_binary (binop, a, b) ->\n-            assert (is_prim_type (atom_type cx a));\n-            assert (is_prim_type (atom_type cx b));\n+            assert (is_prim_type (simplified_ty (atom_type cx a)));\n+            assert (is_prim_type (simplified_ty (atom_type cx b)));\n             trans_binary binop (trans_atom a) (trans_atom b)\n \n         | Ast.EXPR_unary (unop, a) ->\n-            assert (is_prim_type (atom_type cx a));\n+            assert (is_prim_type (simplified_ty (atom_type cx a)));\n             let src = trans_atom a in\n             let bits = Il.operand_bits word_bits src in\n             let dst = Il.Reg (Il.next_vreg (emitter()), Il.ValTy bits) in\n@@ -2218,13 +2218,6 @@ let trans_visitor\n   and exterior_rc_cell (cell:Il.cell) : Il.cell =\n     exterior_ctrl_cell cell Abi.exterior_rc_slot_field_refcnt\n \n-  and simplified_ty t =\n-    match t with\n-        Ast.TY_exterior t\n-      | Ast.TY_mutable t\n-      | Ast.TY_constrained (t, _) -> simplified_ty t\n-      | _ -> t\n-\n   and exterior_allocation_size\n       (ty:Ast.ty)\n       : Il.operand =\n@@ -4074,7 +4067,7 @@ let trans_visitor\n \n \n   and trans_log id a =\n-    match atom_type cx a with\n+    match simplified_ty (atom_type cx a) with\n         (* NB: If you extend this, be sure to update the\n          * typechecking code in type.ml as well. *)\n         Ast.TY_str -> trans_log_str a"}]}