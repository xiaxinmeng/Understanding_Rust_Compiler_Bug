{"sha": "38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZDI4N2ZlY2QzODVhYThmODljZWMxODIyZjdmNmEzMGJmZDk2Y2I=", "commit": {"author": {"name": "Michael A. Plikk", "email": "michael@aptoma.com", "date": "2018-09-02T21:07:55Z"}, "committer": {"name": "Michael A. Plikk", "email": "michael@aptoma.com", "date": "2018-09-05T17:46:49Z"}, "message": "Add lint for misstyped literal casting", "tree": {"sha": "63ca23879d9b02593743baf224fc5b8fbc33bacb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63ca23879d9b02593743baf224fc5b8fbc33bacb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "html_url": "https://github.com/rust-lang/rust/commit/38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/comments", "author": {"login": "mipli", "id": 795482, "node_id": "MDQ6VXNlcjc5NTQ4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/795482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mipli", "html_url": "https://github.com/mipli", "followers_url": "https://api.github.com/users/mipli/followers", "following_url": "https://api.github.com/users/mipli/following{/other_user}", "gists_url": "https://api.github.com/users/mipli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mipli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mipli/subscriptions", "organizations_url": "https://api.github.com/users/mipli/orgs", "repos_url": "https://api.github.com/users/mipli/repos", "events_url": "https://api.github.com/users/mipli/events{/privacy}", "received_events_url": "https://api.github.com/users/mipli/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mipli", "id": 795482, "node_id": "MDQ6VXNlcjc5NTQ4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/795482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mipli", "html_url": "https://github.com/mipli", "followers_url": "https://api.github.com/users/mipli/followers", "following_url": "https://api.github.com/users/mipli/following{/other_user}", "gists_url": "https://api.github.com/users/mipli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mipli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mipli/subscriptions", "organizations_url": "https://api.github.com/users/mipli/orgs", "repos_url": "https://api.github.com/users/mipli/repos", "events_url": "https://api.github.com/users/mipli/events{/privacy}", "received_events_url": "https://api.github.com/users/mipli/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "131c8f86b2b712d4d9b00f486b6c67f97782228a", "url": "https://api.github.com/repos/rust-lang/rust/commits/131c8f86b2b712d4d9b00f486b6c67f97782228a", "html_url": "https://github.com/rust-lang/rust/commit/131c8f86b2b712d4d9b00f486b6c67f97782228a"}], "stats": {"total": 163, "additions": 145, "deletions": 18}, "files": [{"sha": "a2a83118ee8167e5fc60862e073becd3340d298b", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "patch": "@@ -645,6 +645,7 @@ All notable changes to this project will be documented in this file.\n [`cmp_owned`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#cmp_owned\n [`collapsible_if`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#collapsible_if\n [`const_static_lifetime`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#const_static_lifetime\n+[`copy_iterator`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#copy_iterator\n [`crosspointer_transmute`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#crosspointer_transmute\n [`cyclomatic_complexity`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#cyclomatic_complexity\n [`decimal_literal_representation`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#decimal_literal_representation\n@@ -748,6 +749,7 @@ All notable changes to this project will be documented in this file.\n [`misrefactored_assign_op`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#misrefactored_assign_op\n [`missing_docs_in_private_items`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#missing_docs_in_private_items\n [`missing_inline_in_public_items`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#missing_inline_in_public_items\n+[`mistyped_literal_suffixes`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#mistyped_literal_suffixes\n [`mixed_case_hex_literals`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#mixed_case_hex_literals\n [`module_inception`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#module_inception\n [`modulo_one`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#modulo_one\n@@ -800,6 +802,7 @@ All notable changes to this project will be documented in this file.\n [`print_with_newline`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#print_with_newline\n [`println_empty_string`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#println_empty_string\n [`ptr_arg`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#ptr_arg\n+[`ptr_offset_with_cast`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n [`pub_enum_variant_names`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#pub_enum_variant_names\n [`question_mark`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#question_mark\n [`range_minus_one`]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#range_minus_one"}, {"sha": "c94b181cb031d494a111fae9bb49bab93983609c", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "patch": "@@ -9,7 +9,7 @@ We are currently in the process of discussing Clippy 1.0 via the RFC process in\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 273 lints included in this crate!](https://rust-lang-nursery.github.io/rust-clippy/master/index.html)\n+[There are 275 lints included in this crate!](https://rust-lang-nursery.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "e668513c4a0d4e20480136c6fcc12c99257e2994", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "patch": "@@ -543,6 +543,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         lifetimes::NEEDLESS_LIFETIMES,\n         literal_representation::INCONSISTENT_DIGIT_GROUPING,\n         literal_representation::LARGE_DIGIT_GROUPS,\n+        literal_representation::MISTYPED_LITERAL_SUFFIXES,\n         literal_representation::UNREADABLE_LITERAL,\n         loops::EMPTY_LOOP,\n         loops::EXPLICIT_COUNTER_LOOP,\n@@ -869,6 +870,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         infinite_iter::INFINITE_ITER,\n         inline_fn_without_body::INLINE_FN_WITHOUT_BODY,\n         invalid_ref::INVALID_REF,\n+        literal_representation::MISTYPED_LITERAL_SUFFIXES,\n         loops::FOR_LOOP_OVER_OPTION,\n         loops::FOR_LOOP_OVER_RESULT,\n         loops::ITER_NEXT_LOOP,"}, {"sha": "349878960f4e4d013138f4127dab095b4c7cb002", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 69, "deletions": 16, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "patch": "@@ -26,6 +26,26 @@ declare_clippy_lint! {\n     \"long integer literal without underscores\"\n }\n \n+/// **What it does:** Warns for mistyped suffix in literals\n+///\n+/// **Why is this bad?** This is most probably a typo\n+///\n+/// **Known problems:**\n+///\t\t- Recommends a signed suffix, even though the number might be too big and an unsigned\n+///\t\tsuffix is required\n+///\t\t- Does not match on `_128` since that is a valid grouping for decimal and octal numbers\n+///\n+/// **Example:**\n+///\n+/// ```rust\n+/// 2_32\n+/// ```\n+declare_clippy_lint! {\n+    pub MISTYPED_LITERAL_SUFFIXES,\n+    correctness,\n+    \"mistyped literal suffix\"\n+}\n+\n /// **What it does:** Warns if an integral or floating-point constant is\n /// grouped inconsistently with underscores.\n ///\n@@ -137,16 +157,22 @@ impl<'a> DigitInfo<'a> {\n \n         let mut last_d = '\\0';\n         for (d_idx, d) in sans_prefix.char_indices() {\n-            if !float && (d == 'i' || d == 'u') || float && (d == 'f' || d == 'e' || d == 'E') {\n-                let suffix_start = if last_d == '_' { d_idx - 1 } else { d_idx };\n-                let (digits, suffix) = sans_prefix.split_at(suffix_start);\n-                return Self {\n-                    digits,\n-                    radix,\n-                    prefix,\n-                    suffix: Some(suffix),\n-                    float,\n-                };\n+            let suffix_start = if last_d == '_' {\n+                d_idx - 1\n+            } else {\n+                d_idx\n+            };\n+            let (digits, suffix) = sans_prefix.split_at(suffix_start);\n+            if !float && (d == 'i' || d == 'u') ||\n+                float && (d == 'f' || d == 'e' || d == 'E') ||\n+                !float && is_mistyped_suffix(suffix) {\n+                    return Self {\n+                        digits,\n+                        radix,\n+                        prefix,\n+                        suffix: Some(suffix),\n+                        float,\n+                    };\n             }\n             last_d = d\n         }\n@@ -161,7 +187,7 @@ impl<'a> DigitInfo<'a> {\n         }\n     }\n \n-    /// Returns digits grouped in a sensible way.\n+    /// Returns literal formatted in a sensible way.\n     crate fn grouping_hint(&self) -> String {\n         let group_size = self.radix.suggest_grouping();\n         if self.digits.contains('.') {\n@@ -211,11 +237,18 @@ impl<'a> DigitInfo<'a> {\n             if self.radix == Radix::Hexadecimal && nb_digits_to_fill != 0 {\n                 hint = format!(\"{:0>4}{}\", &hint[..nb_digits_to_fill], &hint[nb_digits_to_fill..]);\n             }\n+            let suffix_hint = match self.suffix {\n+                Some(suffix) if is_mistyped_suffix(suffix) => {\n+                    format!(\"_i{}\", &suffix[1..])\n+                },\n+                Some(suffix) => suffix.to_string(),\n+                None => String::new()\n+            };\n             format!(\n                 \"{}{}{}\",\n                 self.prefix.unwrap_or(\"\"),\n                 hint,\n-                self.suffix.unwrap_or(\"\")\n+                suffix_hint\n             )\n         }\n     }\n@@ -226,11 +259,22 @@ enum WarningType {\n     InconsistentDigitGrouping,\n     LargeDigitGroups,\n     DecimalRepresentation,\n+    MistypedLiteralSuffix\n }\n \n impl WarningType {\n     crate fn display(&self, grouping_hint: &str, cx: &EarlyContext<'_>, span: syntax_pos::Span) {\n         match self {\n+            WarningType::MistypedLiteralSuffix => {\n+                span_lint_and_sugg(\n+                    cx,\n+                    MISTYPED_LITERAL_SUFFIXES,\n+                    span,\n+                    \"mistyped literal suffix\",\n+                    \"did you mean to write\",\n+                    grouping_hint.to_string()\n+                )\n+            },\n             WarningType::UnreadableLiteral => span_lint_and_sugg(\n                 cx,\n                 UNREADABLE_LITERAL,\n@@ -303,7 +347,7 @@ impl LiteralDigitGrouping {\n                     if char::to_digit(firstch, 10).is_some();\n                     then {\n                         let digit_info = DigitInfo::new(&src, false);\n-                        let _ = Self::do_lint(digit_info.digits).map_err(|warning_type| {\n+                        let _ = Self::do_lint(digit_info.digits, digit_info.suffix).map_err(|warning_type| {\n                             warning_type.display(&digit_info.grouping_hint(), cx, lit.span)\n                         });\n                     }\n@@ -325,12 +369,12 @@ impl LiteralDigitGrouping {\n \n                         // Lint integral and fractional parts separately, and then check consistency of digit\n                         // groups if both pass.\n-                        let _ = Self::do_lint(parts[0])\n+                        let _ = Self::do_lint(parts[0], None)\n                             .map(|integral_group_size| {\n                                 if parts.len() > 1 {\n                                     // Lint the fractional part of literal just like integral part, but reversed.\n                                     let fractional_part = &parts[1].chars().rev().collect::<String>();\n-                                    let _ = Self::do_lint(fractional_part)\n+                                    let _ = Self::do_lint(fractional_part, None)\n                                         .map(|fractional_group_size| {\n                                             let consistent = Self::parts_consistent(integral_group_size,\n                                                                                     fractional_group_size,\n@@ -373,7 +417,12 @@ impl LiteralDigitGrouping {\n \n     /// Performs lint on `digits` (no decimal point) and returns the group\n     /// size on success or `WarningType` when emitting a warning.\n-    fn do_lint(digits: &str) -> Result<usize, WarningType> {\n+    fn do_lint(digits: &str, suffix: Option<&str>) -> Result<usize, WarningType> {\n+        if let Some(suffix) = suffix {\n+            if is_mistyped_suffix(suffix) {\n+                return Err(WarningType::MistypedLiteralSuffix);\n+            }\n+        }\n         // Grab underscore indices with respect to the units digit.\n         let underscore_positions: Vec<usize> = digits\n             .chars()\n@@ -504,3 +553,7 @@ impl LiteralRepresentation {\n         Ok(())\n     }\n }\n+\n+fn is_mistyped_suffix(suffix: &str) -> bool {\n+    [\"_8\", \"_16\", \"_32\", \"_64\"].contains(&suffix)\n+}"}, {"sha": "7a9efaeec84596bac3315a94a33b5be21e2667dd", "filename": "tests/ui/literals.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/tests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/tests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.rs?ref=38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "patch": "@@ -43,4 +43,15 @@ fn main() {\n     let fail11 = 0xabcdeff;\n     let fail12 = 0xabcabcabcabcabcabc;\n     let fail13 = 0x1_23456_78901_usize;\n+\n+    let fail14 = 2_32;\n+    let fail15 = 4_64;\n+    let fail16 = 7_8;\n+    let fail17 = 23_16;\n+    let ok18 = 23_128;\n+    let fail19 = 12_3456_21;\n+    let fail20 = 2__8;\n+    let fail21 = 4___16;\n+    let fail22 = 3__4___23;\n+    let fail23 = 3__16___23;\n }"}, {"sha": "bd2d1f818310c276311c672401ad56eb7ed6c6b9", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 59, "deletions": 1, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38d287fecd385aa8f89cec1822f7f6a30bfd96cb/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=38d287fecd385aa8f89cec1822f7f6a30bfd96cb", "patch": "@@ -120,5 +120,63 @@ error: digit groups should be smaller\n    |\n    = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n-error: aborting due to 16 previous errors\n+error: mistyped literal suffix\n+  --> $DIR/literals.rs:47:18\n+   |\n+47 |     let fail14 = 2_32;\n+   |                  ^^^^ help: did you mean to write: `2_i32`\n+   |\n+   = note: #[deny(clippy::mistyped_literal_suffixes)] on by default\n+\n+error: mistyped literal suffix\n+  --> $DIR/literals.rs:48:18\n+   |\n+48 |     let fail15 = 4_64;\n+   |                  ^^^^ help: did you mean to write: `4_i64`\n+\n+error: mistyped literal suffix\n+  --> $DIR/literals.rs:49:18\n+   |\n+49 |     let fail16 = 7_8;\n+   |                  ^^^ help: did you mean to write: `7_i8`\n+\n+error: mistyped literal suffix\n+  --> $DIR/literals.rs:50:18\n+   |\n+50 |     let fail17 = 23_16;\n+   |                  ^^^^^ help: did you mean to write: `23_i16`\n+\n+error: digits grouped inconsistently by underscores\n+  --> $DIR/literals.rs:52:18\n+   |\n+52 |     let fail19 = 12_3456_21;\n+   |                  ^^^^^^^^^^ help: consider: `12_345_621`\n+   |\n+   = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n+\n+error: mistyped literal suffix\n+  --> $DIR/literals.rs:53:18\n+   |\n+53 |     let fail20 = 2__8;\n+   |                  ^^^^ help: did you mean to write: `2_i8`\n+\n+error: mistyped literal suffix\n+  --> $DIR/literals.rs:54:18\n+   |\n+54 |     let fail21 = 4___16;\n+   |                  ^^^^^^ help: did you mean to write: `4_i16`\n+\n+error: digits grouped inconsistently by underscores\n+  --> $DIR/literals.rs:55:18\n+   |\n+55 |     let fail22 = 3__4___23;\n+   |                  ^^^^^^^^^ help: consider: `3_423`\n+\n+error: digits grouped inconsistently by underscores\n+  --> $DIR/literals.rs:56:18\n+   |\n+56 |     let fail23 = 3__16___23;\n+   |                  ^^^^^^^^^^ help: consider: `31_623`\n+\n+error: aborting due to 25 previous errors\n "}]}