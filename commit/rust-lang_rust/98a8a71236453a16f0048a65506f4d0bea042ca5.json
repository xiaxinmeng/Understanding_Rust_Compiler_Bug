{"sha": "98a8a71236453a16f0048a65506f4d0bea042ca5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YThhNzEyMzY0NTNhMTZmMDA0OGE2NTUwNmY0ZDBiZWEwNDJjYTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-26T22:21:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-26T22:21:59Z"}, "message": "Auto merge of #31876 - ollie27:win_fill_bytes, r=brson\n\nCryptGenRandom takes a DWORD (u32) for the length so it only supports\nwriting u32::MAX bytes at a time.\n\nCasting the length from a usize caused truncation meaning the whole\nbuffer was not always filled.\n\ncc #31841\n\nThis is the same as rust-lang-nursery/rand#99. I think it's a good idea to keep the implementations in sync.\n\nr? @alexcrichton", "tree": {"sha": "8330302b253e4f26f4d5ec8f942bd5157e3cdaaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8330302b253e4f26f4d5ec8f942bd5157e3cdaaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98a8a71236453a16f0048a65506f4d0bea042ca5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98a8a71236453a16f0048a65506f4d0bea042ca5", "html_url": "https://github.com/rust-lang/rust/commit/98a8a71236453a16f0048a65506f4d0bea042ca5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98a8a71236453a16f0048a65506f4d0bea042ca5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64b4b6d6c6ab98261ebf4349bf7064d69b117964", "url": "https://api.github.com/repos/rust-lang/rust/commits/64b4b6d6c6ab98261ebf4349bf7064d69b117964", "html_url": "https://github.com/rust-lang/rust/commit/64b4b6d6c6ab98261ebf4349bf7064d69b117964"}, {"sha": "ac3cc33fee5e0f576cc9f04f7df40cd5d968be43", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac3cc33fee5e0f576cc9f04f7df40cd5d968be43", "html_url": "https://github.com/rust-lang/rust/commit/ac3cc33fee5e0f576cc9f04f7df40cd5d968be43"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "10e3d45f9d5eb8813bbfa72b59661a7c93e5f732", "filename": "src/libstd/sys/windows/rand.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/98a8a71236453a16f0048a65506f4d0bea042ca5/src%2Flibstd%2Fsys%2Fwindows%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98a8a71236453a16f0048a65506f4d0bea042ca5/src%2Flibstd%2Fsys%2Fwindows%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Frand.rs?ref=98a8a71236453a16f0048a65506f4d0bea042ca5", "patch": "@@ -48,13 +48,17 @@ impl Rng for OsRng {\n         unsafe { mem::transmute(v) }\n     }\n     fn fill_bytes(&mut self, v: &mut [u8]) {\n-        let ret = unsafe {\n-            c::CryptGenRandom(self.hcryptprov, v.len() as c::DWORD,\n-                              v.as_mut_ptr())\n-        };\n-        if ret == 0 {\n-            panic!(\"couldn't generate random bytes: {}\",\n-                   io::Error::last_os_error());\n+        // CryptGenRandom takes a DWORD (u32) for the length so we need to\n+        // split up the buffer.\n+        for slice in v.chunks_mut(<c::DWORD>::max_value() as usize) {\n+            let ret = unsafe {\n+                c::CryptGenRandom(self.hcryptprov, slice.len() as c::DWORD,\n+                                  slice.as_mut_ptr())\n+            };\n+            if ret == 0 {\n+                panic!(\"couldn't generate random bytes: {}\",\n+                       io::Error::last_os_error());\n+            }\n         }\n     }\n }"}]}