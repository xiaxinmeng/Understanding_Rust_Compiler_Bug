{"sha": "d361efac2639fa9dd7f6195e4276a728b8875d7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNjFlZmFjMjYzOWZhOWRkN2Y2MTk1ZTQyNzZhNzI4Yjg4NzVkN2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-21T04:49:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-21T04:49:00Z"}, "message": "Auto merge of #43318 - jhjourdan:jh/fix_weak_cound_MAX, r=alexcrichton\n\nFix in weak_count in Arc in the case the weak count is locked.\n\nIn the case the weak count was locked, the weak_count function could\nreturn usize::MAX. We need to test this condition manually.", "tree": {"sha": "30994df2e955eb884b436abbbbc07760e0668818", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30994df2e955eb884b436abbbbc07760e0668818"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d361efac2639fa9dd7f6195e4276a728b8875d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d361efac2639fa9dd7f6195e4276a728b8875d7a", "html_url": "https://github.com/rust-lang/rust/commit/d361efac2639fa9dd7f6195e4276a728b8875d7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d361efac2639fa9dd7f6195e4276a728b8875d7a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3c8433ebb4a1acf125cae34ebd910869c894ebd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c8433ebb4a1acf125cae34ebd910869c894ebd", "html_url": "https://github.com/rust-lang/rust/commit/e3c8433ebb4a1acf125cae34ebd910869c894ebd"}, {"sha": "8416713240e11e898872f5028f927997f3754696", "url": "https://api.github.com/repos/rust-lang/rust/commits/8416713240e11e898872f5028f927997f3754696", "html_url": "https://github.com/rust-lang/rust/commit/8416713240e11e898872f5028f927997f3754696"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "85c7efb7ac50c1b5f79d3bc1f939e30a71fa2ae8", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d361efac2639fa9dd7f6195e4276a728b8875d7a/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d361efac2639fa9dd7f6195e4276a728b8875d7a/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=d361efac2639fa9dd7f6195e4276a728b8875d7a", "patch": "@@ -453,7 +453,10 @@ impl<T: ?Sized> Arc<T> {\n     #[inline]\n     #[stable(feature = \"arc_counts\", since = \"1.15.0\")]\n     pub fn weak_count(this: &Self) -> usize {\n-        this.inner().weak.load(SeqCst) - 1\n+        let cnt = this.inner().weak.load(SeqCst);\n+        // If the weak count is currently locked, the value of the\n+        // count was 0 just before taking the lock.\n+        if cnt == usize::MAX { 0 } else { cnt - 1 }\n     }\n \n     /// Gets the number of strong (`Arc`) pointers to this value.\n@@ -1498,6 +1501,25 @@ mod tests {\n         assert!(Arc::ptr_eq(&five, &same_five));\n         assert!(!Arc::ptr_eq(&five, &other_five));\n     }\n+\n+    #[test]\n+    #[cfg_attr(target_os = \"emscripten\", ignore)]\n+    fn test_weak_count_locked() {\n+        let mut a = Arc::new(atomic::AtomicBool::new(false));\n+        let a2 = a.clone();\n+        let t = thread::spawn(move || {\n+            for _i in 0..1000000 {\n+                Arc::get_mut(&mut a);\n+            }\n+            a.store(true, SeqCst);\n+        });\n+\n+        while !a2.load(SeqCst) {\n+            let n = Arc::weak_count(&a2);\n+            assert!(n < 2, \"bad weak count: {}\", n);\n+        }\n+        t.join().unwrap();\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}