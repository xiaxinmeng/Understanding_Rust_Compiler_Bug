{"sha": "288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "node_id": "C_kwDOAAsO6NoAKDI4ODMxMjQ2M2UyZGJmYWMxNWI1YmEyZGJiYzJkMDE1ZDVkZmI2ODM", "commit": {"author": {"name": "Charalampos Mitrodimas", "email": "charmitro@gmail.com", "date": "2023-05-30T18:29:04Z"}, "committer": {"name": "Charalampos Mitrodimas", "email": "charmitro@gmail.com", "date": "2023-05-30T18:29:04Z"}, "message": "[`wildcard_imports`] Modules that contain `prelude` are also allowed\n\nThis commit fixes #10846 by checking if the path segment contains the\nword \"prelude\".\n\nSigned-off-by: Charalampos Mitrodimas <charmitro@gmail.com>", "tree": {"sha": "50c0d865d4c7324933c4e8b948db0edff6984c1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50c0d865d4c7324933c4e8b948db0edff6984c1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "html_url": "https://github.com/rust-lang/rust/commit/288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/comments", "author": {"login": "charmitro", "id": 15256083, "node_id": "MDQ6VXNlcjE1MjU2MDgz", "avatar_url": "https://avatars.githubusercontent.com/u/15256083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charmitro", "html_url": "https://github.com/charmitro", "followers_url": "https://api.github.com/users/charmitro/followers", "following_url": "https://api.github.com/users/charmitro/following{/other_user}", "gists_url": "https://api.github.com/users/charmitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/charmitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charmitro/subscriptions", "organizations_url": "https://api.github.com/users/charmitro/orgs", "repos_url": "https://api.github.com/users/charmitro/repos", "events_url": "https://api.github.com/users/charmitro/events{/privacy}", "received_events_url": "https://api.github.com/users/charmitro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "charmitro", "id": 15256083, "node_id": "MDQ6VXNlcjE1MjU2MDgz", "avatar_url": "https://avatars.githubusercontent.com/u/15256083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charmitro", "html_url": "https://github.com/charmitro", "followers_url": "https://api.github.com/users/charmitro/followers", "following_url": "https://api.github.com/users/charmitro/following{/other_user}", "gists_url": "https://api.github.com/users/charmitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/charmitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charmitro/subscriptions", "organizations_url": "https://api.github.com/users/charmitro/orgs", "repos_url": "https://api.github.com/users/charmitro/repos", "events_url": "https://api.github.com/users/charmitro/events{/privacy}", "received_events_url": "https://api.github.com/users/charmitro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "423f081089e6c8610d5edb7fc59cd16661c43de8", "url": "https://api.github.com/repos/rust-lang/rust/commits/423f081089e6c8610d5edb7fc59cd16661c43de8", "html_url": "https://github.com/rust-lang/rust/commit/423f081089e6c8610d5edb7fc59cd16661c43de8"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "b6e4cd22789f9e918944713e08041ed5fd0449d1", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "patch": "@@ -65,8 +65,9 @@ declare_clippy_lint! {\n     /// This can lead to confusing error messages at best and to unexpected behavior at worst.\n     ///\n     /// ### Exceptions\n-    /// Wildcard imports are allowed from modules named `prelude`. Many crates (including the standard library)\n-    /// provide modules named \"prelude\" specifically designed for wildcard import.\n+    /// Wildcard imports are allowed from modules that their name contains `prelude`. Many crates\n+    /// (including the standard library) provide modules named \"prelude\" specifically designed\n+    /// for wildcard import.\n     ///\n     /// `use super::*` is allowed in test modules. This is defined as any module with \"test\" in the name.\n     ///\n@@ -212,7 +213,9 @@ impl WildcardImports {\n // Allow \"...prelude::..::*\" imports.\n // Many crates have a prelude, and it is imported as a glob by design.\n fn is_prelude_import(segments: &[PathSegment<'_>]) -> bool {\n-    segments.iter().any(|ps| ps.ident.name == sym::prelude)\n+    segments\n+        .iter()\n+        .any(|ps| ps.ident.name.as_str().contains(sym::prelude.as_str()))\n }\n \n // Allow \"super::*\" imports in tests."}, {"sha": "44f49c080cdd6fdcb901c8b4948782a9f10b367c", "filename": "tests/ui/auxiliary/wildcard_imports_helper.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fauxiliary%2Fwildcard_imports_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fauxiliary%2Fwildcard_imports_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fwildcard_imports_helper.rs?ref=288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "patch": "@@ -25,3 +25,9 @@ pub mod prelude {\n         pub struct PreludeModAnywhere;\n     }\n }\n+\n+pub mod extern_prelude {\n+    pub mod v1 {\n+        pub struct ExternPreludeModAnywhere;\n+    }\n+}"}, {"sha": "733bbcfbcefab5e9db422f0cd7b8091fe8919ffb", "filename": "tests/ui/wildcard_imports.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fwildcard_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fwildcard_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.fixed?ref=288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "patch": "@@ -24,6 +24,7 @@ use wildcard_imports_helper::inner::inner_for_self_import::inner_extern_bar;\n use wildcard_imports_helper::{ExternA, extern_foo};\n \n use std::io::prelude::*;\n+use wildcard_imports_helper::extern_prelude::v1::*;\n use wildcard_imports_helper::prelude::v1::*;\n \n struct ReadFoo;\n@@ -81,6 +82,7 @@ fn main() {\n     let _ = inner_struct_mod::C;\n     let _ = ExternA;\n     let _ = PreludeModAnywhere;\n+    let _ = ExternPreludeModAnywhere;\n \n     double_struct_import_test!();\n     double_struct_import_test!();"}, {"sha": "4acdd374bdeca85d08188866264009ca3929fe04", "filename": "tests/ui/wildcard_imports.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.rs?ref=288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "patch": "@@ -24,6 +24,7 @@ use wildcard_imports_helper::inner::inner_for_self_import::*;\n use wildcard_imports_helper::*;\n \n use std::io::prelude::*;\n+use wildcard_imports_helper::extern_prelude::v1::*;\n use wildcard_imports_helper::prelude::v1::*;\n \n struct ReadFoo;\n@@ -81,6 +82,7 @@ fn main() {\n     let _ = inner_struct_mod::C;\n     let _ = ExternA;\n     let _ = PreludeModAnywhere;\n+    let _ = ExternPreludeModAnywhere;\n \n     double_struct_import_test!();\n     double_struct_import_test!();"}, {"sha": "235be2d57081b353228bd9211fc22ab134864c0e", "filename": "tests/ui/wildcard_imports.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fwildcard_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/288312463e2dbfac15b5ba2dbbc2d015d5dfb683/tests%2Fui%2Fwildcard_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.stderr?ref=288312463e2dbfac15b5ba2dbbc2d015d5dfb683", "patch": "@@ -37,93 +37,93 @@ LL | use wildcard_imports_helper::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:95:13\n+  --> $DIR/wildcard_imports.rs:97:13\n    |\n LL |         use crate::fn_mod::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `crate::fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:101:75\n+  --> $DIR/wildcard_imports.rs:103:75\n    |\n LL |         use wildcard_imports_helper::inner::inner_for_self_import::{self, *};\n    |                                                                           ^ help: try: `inner_extern_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:102:13\n+  --> $DIR/wildcard_imports.rs:104:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:113:20\n+  --> $DIR/wildcard_imports.rs:115:20\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                    ^^^^^^^^ help: try: `inner::inner_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:113:30\n+  --> $DIR/wildcard_imports.rs:115:30\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                              ^^^^^^^^^ help: try: `inner2::inner_bar`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:120:13\n+  --> $DIR/wildcard_imports.rs:122:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternExportedEnum, ExternExportedStruct, extern_exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:149:9\n+  --> $DIR/wildcard_imports.rs:151:9\n    |\n LL |     use crate::in_fn_test::*;\n    |         ^^^^^^^^^^^^^^^^^^^^ help: try: `crate::in_fn_test::{ExportedEnum, ExportedStruct, exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:158:9\n+  --> $DIR/wildcard_imports.rs:160:9\n    |\n LL |     use crate:: in_fn_test::  * ;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate:: in_fn_test::exported`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:159:9\n+  --> $DIR/wildcard_imports.rs:161:9\n    |\n LL |       use crate:: fn_mod::\n    |  _________^\n LL | |         *;\n    | |_________^ help: try: `crate:: fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:170:13\n+  --> $DIR/wildcard_imports.rs:172:13\n    |\n LL |         use super::*;\n    |             ^^^^^^^^ help: try: `super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:205:17\n+  --> $DIR/wildcard_imports.rs:207:17\n    |\n LL |             use super::*;\n    |                 ^^^^^^^^ help: try: `super::insidefoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:213:13\n+  --> $DIR/wildcard_imports.rs:215:13\n    |\n LL |         use super_imports::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:222:17\n+  --> $DIR/wildcard_imports.rs:224:17\n    |\n LL |             use super::super::*;\n    |                 ^^^^^^^^^^^^^^^ help: try: `super::super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:231:13\n+  --> $DIR/wildcard_imports.rs:233:13\n    |\n LL |         use super::super::super_imports::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `super::super::super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:239:13\n+  --> $DIR/wildcard_imports.rs:241:13\n    |\n LL |         use super::*;\n    |             ^^^^^^^^ help: try: `super::foofoo`"}]}