{"sha": "b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYzdlNjRkZTBkMmE3ZGZiMTcyOTQ5YzRkMWNiMDFlZTE0NDAyNWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-02T22:32:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-02T22:32:44Z"}, "message": "Rollup merge of #84818 - ABouttefeux:enum-suggest, r=jackh726\n\nsuggestion for unit enum variant when matched with a patern\n\nresolve #84700\n\nadd suggestion for code like\n```rust\nenum FarmAnimal {\n    Worm,\n    Cow,\n    Bull,\n    Chicken { num_eggs: usize },\n    Dog (String),\n}\n\nfn what_does_the_animal_say(animal: &FarmAnimal) {\n\n    let noise = match animal {\n        FarmAnimal::Cow(_) => \"moo\".to_string(),\n        _ => todo!()\n    };\n\n    println!(\"{:?} says: {:?}\", animal, noise);\n}\n```\n\n```\nerror[E0532]: expected tuple struct or tuple variant, found unit variant `FarmAnimal::Cow`\n  --> $DIR/issue-84700.rs:15:9\n   |\nLL |     Cow,\n   |     --- `FarmAnimal::Cow` defined here\n...\nLL |         FarmAnimal::Cow(_) => \"moo\".to_string(),\n   |         ^^^^^^^^^^^^^^^^^^ help: use this syntax instead: `FarmAnimal::Cow`\n   ```", "tree": {"sha": "d87128ca52e4f13850b5cd26d85bfa0445d3b662", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d87128ca52e4f13850b5cd26d85bfa0445d3b662"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjyiNCRBK7hj4Ov3rIwAAfGAIAHnhmBKd0CFD8bYAB0aIHxML\nc3Lo0Z18Vwnwu7pEcBu28RtH4aG4ybLPIPbpVDe42EI7TeJ7N7P27bw15GYsJOWN\nO8QxSvba3WH7lmuSiHyPqG/PoqljQmIVQU5eUrpTGP2z5dgYFuX35cOGc8+ldRJv\nIzweFDvlU/nZAPDXhOsFZACzlgreroQgrCs9x/0MDPwWReeRCGL0b9rl8zAw57kt\nPdrpR9EjZ/BhH0mxIGCS6otOErlFBy0QnbtGVG3QLYabpr39DEHpSVuw1yI38r/+\n2wEWkvRwn9/x7WuZWdOIm74TNoqkxo6shKma+wTKy77zu/SYH552Y97TARtThUM=\n=ubv5\n-----END PGP SIGNATURE-----\n", "payload": "tree d87128ca52e4f13850b5cd26d85bfa0445d3b662\nparent 37ce3321ebcc901d15583b5b0266d945130e123b\nparent 5cc21d9051e421cab8ca271115b9a6d5ea927679\nauthor Dylan DPC <dylan.dpc@gmail.com> 1619994764 +0200\ncommitter GitHub <noreply@github.com> 1619994764 +0200\n\nRollup merge of #84818 - ABouttefeux:enum-suggest, r=jackh726\n\nsuggestion for unit enum variant when matched with a patern\n\nresolve #84700\n\nadd suggestion for code like\n```rust\nenum FarmAnimal {\n    Worm,\n    Cow,\n    Bull,\n    Chicken { num_eggs: usize },\n    Dog (String),\n}\n\nfn what_does_the_animal_say(animal: &FarmAnimal) {\n\n    let noise = match animal {\n        FarmAnimal::Cow(_) => \"moo\".to_string(),\n        _ => todo!()\n    };\n\n    println!(\"{:?} says: {:?}\", animal, noise);\n}\n```\n\n```\nerror[E0532]: expected tuple struct or tuple variant, found unit variant `FarmAnimal::Cow`\n  --> $DIR/issue-84700.rs:15:9\n   |\nLL |     Cow,\n   |     --- `FarmAnimal::Cow` defined here\n...\nLL |         FarmAnimal::Cow(_) => \"moo\".to_string(),\n   |         ^^^^^^^^^^^^^^^^^^ help: use this syntax instead: `FarmAnimal::Cow`\n   ```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "html_url": "https://github.com/rust-lang/rust/commit/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ce3321ebcc901d15583b5b0266d945130e123b", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ce3321ebcc901d15583b5b0266d945130e123b", "html_url": "https://github.com/rust-lang/rust/commit/37ce3321ebcc901d15583b5b0266d945130e123b"}, {"sha": "5cc21d9051e421cab8ca271115b9a6d5ea927679", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc21d9051e421cab8ca271115b9a6d5ea927679", "html_url": "https://github.com/rust-lang/rust/commit/5cc21d9051e421cab8ca271115b9a6d5ea927679"}], "stats": {"total": 228, "additions": 193, "deletions": 35}, "files": [{"sha": "7561b3df3af70841d2b436f12115018614048950", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -819,6 +819,19 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n             _ => false,\n         };\n \n+        let find_span = |source: &PathSource<'_>, err: &mut DiagnosticBuilder<'_>| {\n+            match source {\n+                PathSource::Expr(Some(Expr { span, kind: ExprKind::Call(_, _), .. }))\n+                | PathSource::TupleStruct(span, _) => {\n+                    // We want the main underline to cover the suggested code as well for\n+                    // cleaner output.\n+                    err.set_span(*span);\n+                    *span\n+                }\n+                _ => span,\n+            }\n+        };\n+\n         let mut bad_struct_syntax_suggestion = |def_id: DefId| {\n             let (followed_by_brace, closing_brace) = self.followed_by_brace(span);\n \n@@ -862,18 +875,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                     }\n                 }\n                 PathSource::Expr(_) | PathSource::TupleStruct(..) | PathSource::Pat => {\n-                    let span = match &source {\n-                        PathSource::Expr(Some(Expr {\n-                            span, kind: ExprKind::Call(_, _), ..\n-                        }))\n-                        | PathSource::TupleStruct(span, _) => {\n-                            // We want the main underline to cover the suggested code as well for\n-                            // cleaner output.\n-                            err.set_span(*span);\n-                            *span\n-                        }\n-                        _ => span,\n-                    };\n+                    let span = find_span(&source, err);\n                     if let Some(span) = self.def_span(def_id) {\n                         err.span_label(span, &format!(\"`{}` defined here\", path_str));\n                     }\n@@ -1047,6 +1049,23 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n             ) if ns == ValueNS => {\n                 bad_struct_syntax_suggestion(def_id);\n             }\n+            (Res::Def(DefKind::Ctor(_, CtorKind::Const), def_id), _) if ns == ValueNS => {\n+                match source {\n+                    PathSource::Expr(_) | PathSource::TupleStruct(..) | PathSource::Pat => {\n+                        let span = find_span(&source, err);\n+                        if let Some(span) = self.def_span(def_id) {\n+                            err.span_label(span, &format!(\"`{}` defined here\", path_str));\n+                        }\n+                        err.span_suggestion(\n+                            span,\n+                            &format!(\"use this syntax instead\"),\n+                            format!(\"{path_str}\"),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n+                    _ => return false,\n+                }\n+            }\n             (Res::Def(DefKind::Ctor(_, CtorKind::Fn), def_id), _) if ns == ValueNS => {\n                 if let Some(span) = self.def_span(def_id) {\n                     err.span_label(span, &format!(\"`{}` defined here\", path_str));"}, {"sha": "a704e1fae497cb0065dc867d0a29d43214806921", "filename": "src/test/ui/empty/empty-struct-unit-pat.stderr", "status": "modified", "additions": 86, "deletions": 16, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -1,84 +1,154 @@\n error[E0532]: expected tuple struct or tuple variant, found unit struct `Empty2`\n   --> $DIR/empty-struct-unit-pat.rs:21:9\n    |\n+LL | struct Empty2;\n+   | -------------- `Empty2` defined here\n+...\n LL |         Empty2() => ()\n-   |         ^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   |         ^^^^^^^^\n    | \n   ::: $DIR/auxiliary/empty-struct.rs:3:1\n    |\n LL | pub struct XEmpty6();\n    | --------------------- similarly named tuple struct `XEmpty6` defined here\n+   |\n+help: use this syntax instead\n+   |\n+LL |         Empty2 => ()\n+   |         ^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6() => ()\n+   |         ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `XEmpty2`\n   --> $DIR/empty-struct-unit-pat.rs:24:9\n    |\n LL |         XEmpty2() => ()\n-   |         ^^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   |         ^^^^^^^^^\n    | \n-  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n    |\n+LL | pub struct XEmpty2;\n+   | ------------------- `XEmpty2` defined here\n LL | pub struct XEmpty6();\n    | --------------------- similarly named tuple struct `XEmpty6` defined here\n+   |\n+help: use this syntax instead\n+   |\n+LL |         XEmpty2 => ()\n+   |         ^^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6() => ()\n+   |         ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Empty2`\n   --> $DIR/empty-struct-unit-pat.rs:28:9\n    |\n+LL | struct Empty2;\n+   | -------------- `Empty2` defined here\n+...\n LL |         Empty2(..) => ()\n-   |         ^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   |         ^^^^^^^^^^\n    | \n   ::: $DIR/auxiliary/empty-struct.rs:3:1\n    |\n LL | pub struct XEmpty6();\n    | --------------------- similarly named tuple struct `XEmpty6` defined here\n+   |\n+help: use this syntax instead\n+   |\n+LL |         Empty2 => ()\n+   |         ^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6(..) => ()\n+   |         ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `XEmpty2`\n   --> $DIR/empty-struct-unit-pat.rs:32:9\n    |\n LL |         XEmpty2(..) => ()\n-   |         ^^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   |         ^^^^^^^^^^^\n    | \n-  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n    |\n+LL | pub struct XEmpty2;\n+   | ------------------- `XEmpty2` defined here\n LL | pub struct XEmpty6();\n    | --------------------- similarly named tuple struct `XEmpty6` defined here\n+   |\n+help: use this syntax instead\n+   |\n+LL |         XEmpty2 => ()\n+   |         ^^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6(..) => ()\n+   |         ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::Empty4`\n   --> $DIR/empty-struct-unit-pat.rs:37:9\n    |\n+LL |     Empty4\n+   |     ------ `E::Empty4` defined here\n+...\n LL |         E::Empty4() => ()\n-   |         ^^^^^^^^^ not a tuple struct or tuple variant\n+   |         ^^^^^^^^^^^ help: use this syntax instead: `E::Empty4`\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `XE::XEmpty4`\n   --> $DIR/empty-struct-unit-pat.rs:41:9\n    |\n LL |         XE::XEmpty4() => (),\n-   |         ^^^^-------\n-   |             |\n-   |             help: a tuple variant with a similar name exists: `XEmpty5`\n+   |         ^^^^^^^^^^^^^\n    | \n-  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+  ::: $DIR/auxiliary/empty-struct.rs:7:5\n    |\n+LL |     XEmpty4,\n+   |     ------- `XE::XEmpty4` defined here\n LL |     XEmpty5(),\n    |     --------- similarly named tuple variant `XEmpty5` defined here\n+   |\n+help: use this syntax instead\n+   |\n+LL |         XE::XEmpty4 => (),\n+   |         ^^^^^^^^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |         XE::XEmpty5() => (),\n+   |             ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::Empty4`\n   --> $DIR/empty-struct-unit-pat.rs:46:9\n    |\n+LL |     Empty4\n+   |     ------ `E::Empty4` defined here\n+...\n LL |         E::Empty4(..) => ()\n-   |         ^^^^^^^^^ not a tuple struct or tuple variant\n+   |         ^^^^^^^^^^^^^ help: use this syntax instead: `E::Empty4`\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `XE::XEmpty4`\n   --> $DIR/empty-struct-unit-pat.rs:50:9\n    |\n LL |         XE::XEmpty4(..) => (),\n-   |         ^^^^-------\n-   |             |\n-   |             help: a tuple variant with a similar name exists: `XEmpty5`\n+   |         ^^^^^^^^^^^^^^^\n    | \n-  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+  ::: $DIR/auxiliary/empty-struct.rs:7:5\n    |\n+LL |     XEmpty4,\n+   |     ------- `XE::XEmpty4` defined here\n LL |     XEmpty5(),\n    |     --------- similarly named tuple variant `XEmpty5` defined here\n+   |\n+help: use this syntax instead\n+   |\n+LL |         XE::XEmpty4 => (),\n+   |         ^^^^^^^^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |         XE::XEmpty5(..) => (),\n+   |             ^^^^^^^\n \n error: aborting due to 8 previous errors\n "}, {"sha": "bf125a8942edf904636de5c92da05a30865db05a", "filename": "src/test/ui/issues/issue-32004.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -21,8 +21,11 @@ LL |         Foo::Baz => {}\n error[E0532]: expected tuple struct or tuple variant, found unit struct `S`\n   --> $DIR/issue-32004.rs:16:9\n    |\n+LL | struct S;\n+   | --------- `S` defined here\n+...\n LL |         S(()) => {}\n-   |         ^ not a tuple struct or tuple variant\n+   |         ^^^^^ help: use this syntax instead: `S`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "57783d75ba182e1c81448782ffc2a8231e4cb150", "filename": "src/test/ui/issues/issue-pr29383.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fissues%2Fissue-pr29383.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fissues%2Fissue-pr29383.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-pr29383.stderr?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -1,14 +1,20 @@\n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::A`\n   --> $DIR/issue-pr29383.rs:9:14\n    |\n+LL |     A,\n+   |     - `E::A` defined here\n+...\n LL |         Some(E::A(..)) => {}\n-   |              ^^^^ not a tuple struct or tuple variant\n+   |              ^^^^^^^^ help: use this syntax instead: `E::A`\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::B`\n   --> $DIR/issue-pr29383.rs:11:14\n    |\n+LL |     B,\n+   |     - `E::B` defined here\n+...\n LL |         Some(E::B(..)) => {}\n-   |              ^^^^ not a tuple struct or tuple variant\n+   |              ^^^^^^^^ help: use this syntax instead: `E::B`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ba32d0e99a47165c06007adb4f55a926c22976f0", "filename": "src/test/ui/match/match-pattern-field-mismatch-2.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch-2.stderr?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -1,8 +1,11 @@\n error[E0532]: expected tuple struct or tuple variant, found unit variant `Color::NoColor`\n   --> $DIR/match-pattern-field-mismatch-2.rs:12:11\n    |\n+LL |         NoColor,\n+   |         ------- `Color::NoColor` defined here\n+...\n LL |           Color::NoColor(_) => { }\n-   |           ^^^^^^^^^^^^^^ not a tuple struct or tuple variant\n+   |           ^^^^^^^^^^^^^^^^^ help: use this syntax instead: `Color::NoColor`\n \n error: aborting due to previous error\n "}, {"sha": "44d6a854b3db6d90ddc35f48484c2f66566660e6", "filename": "src/test/ui/pattern/pattern-error-continue.stderr", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -9,11 +9,21 @@ error[E0532]: expected tuple struct or tuple variant, found unit variant `A::D`\n    |\n LL |     B(isize, isize),\n    |     --------------- similarly named tuple variant `B` defined here\n+LL |     C(isize, isize, isize),\n+LL |     D\n+   |     - `A::D` defined here\n ...\n LL |         A::D(_) => (),\n-   |         ^^^-\n-   |            |\n-   |            help: a tuple variant with a similar name exists: `B`\n+   |         ^^^^^^^\n+   |\n+help: use this syntax instead\n+   |\n+LL |         A::D => (),\n+   |         ^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |         A::B(_) => (),\n+   |            ^\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n   --> $DIR/pattern-error-continue.rs:17:9"}, {"sha": "a27169fdbb2d5e7b918108bc2654c2ccf54a89a8", "filename": "src/test/ui/suggestions/issue-84700.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84700.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84700.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84700.rs?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -0,0 +1,26 @@\n+// test for suggestion on fieldless enum variant\n+\n+#[derive(PartialEq, Debug)]\n+enum FarmAnimal {\n+    Worm,\n+    Cow,\n+    Bull,\n+    Chicken { num_eggs: usize },\n+    Dog (String),\n+}\n+\n+fn what_does_the_animal_say(animal: &FarmAnimal) {\n+\n+    let noise = match animal {\n+        FarmAnimal::Cow(_) => \"moo\".to_string(),\n+        //~^ ERROR expected tuple struct or tuple variant, found unit variant `FarmAnimal::Cow`\n+        FarmAnimal::Chicken(_) => \"cluck, cluck!\".to_string(),\n+        //~^ ERROR expected tuple struct or tuple variant, found struct variant `FarmAnimal::Chicken`\n+        FarmAnimal::Dog{..} => \"woof!\".to_string(),\n+        _ => todo!()\n+    };\n+\n+    println!(\"{:?} says: {:?}\", animal, noise);\n+}\n+\n+fn main() {}"}, {"sha": "b36d8aba36d30a5c114ca91d1c8d216f96e0d5ae", "filename": "src/test/ui/suggestions/issue-84700.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84700.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7e64de0d2a7dfb172949c4d1cb01ee144025b/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84700.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84700.stderr?ref=b0c7e64de0d2a7dfb172949c4d1cb01ee144025b", "patch": "@@ -0,0 +1,21 @@\n+error[E0532]: expected tuple struct or tuple variant, found unit variant `FarmAnimal::Cow`\n+  --> $DIR/issue-84700.rs:15:9\n+   |\n+LL |     Cow,\n+   |     --- `FarmAnimal::Cow` defined here\n+...\n+LL |         FarmAnimal::Cow(_) => \"moo\".to_string(),\n+   |         ^^^^^^^^^^^^^^^^^^ help: use this syntax instead: `FarmAnimal::Cow`\n+\n+error[E0532]: expected tuple struct or tuple variant, found struct variant `FarmAnimal::Chicken`\n+  --> $DIR/issue-84700.rs:17:9\n+   |\n+LL |     Chicken { num_eggs: usize },\n+   |     --------------------------- `FarmAnimal::Chicken` defined here\n+...\n+LL |         FarmAnimal::Chicken(_) => \"cluck, cluck!\".to_string(),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ help: use struct pattern syntax instead: `FarmAnimal::Chicken { num_eggs }`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0532`."}]}