{"sha": "973cf632d37b55095d1ff47b62de43c1864c4115", "node_id": "C_kwDOAAsO6NoAKDk3M2NmNjMyZDM3YjU1MDk1ZDFmZjQ3YjYyZGU0M2MxODY0YzQxMTU", "commit": {"author": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-03T18:08:19Z"}, "committer": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-05T08:04:42Z"}, "message": "Remove unsupported types in primitive_to_ty conversion, add FIXME note", "tree": {"sha": "caa6c165402068553f5f893a96693d63ee54ee81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caa6c165402068553f5f893a96693d63ee54ee81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/973cf632d37b55095d1ff47b62de43c1864c4115", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYxDoXUzfgu5d8FXXuroRW98MWYoFAmHVURoACgkQuroRW98M\nWYq2GQ//XqNvBA0xnFMMNLReiWbNRzCfF0wkX25UMgyd2i8CxqswvMbRadjxKriF\nmlu+UighPPC6/hUQTYm3gPvXtSogk4IfFXdB7ND/f6XJQI+9H3jK9A4NDxjgj2nM\n8x0B8vk8fo6LzIc0zy2A37CJ24lfJ9jCuXRw/7iZ8q7WvH2z8wS6GcMwhEACNfhU\ndHZlY8Pvo/BstBW0GcRH2RRL2eU5Pl55et8NHMhVZ8WWInO8hOKSjAO8/wCoMaK+\nn2F/QkCCJi6iG2/0IUX2H7Hugsmx/bw+LFHZE2qaqpOh2EXF8pSPSmpkbM5pVo2y\nz7aG1kHW6t5a6Z++VO0siqDZpHb/742CxkVXRqedCr9Ql2qrlUEF0pGpkg8LqD0S\nLg7uGTPxHSWyTWxGzsuhDyeRheYxTknhsSuKDJGMwmo4DvP152jddNYQSCkzvjya\nZCXTGDXvC3my8bMoswtnbCygPpNwb/vTwYrRnDJdiv4I3UijCBhOfhiXMk2pwohO\nXWuvwj1Po2kB2x/F74z/xqTJBCAWwq96B0J2cLDqYKfUqHRfEFEMybsy8nKoWlK+\nvC3Z0R+X3ATFuJahlCj/VfhluTWi4zodATz+BuAEUhGVKw15ybjBdvJ3it/DUsxI\n+4Nkm0C2Vx9fYq5hm30lomxYGN1435UV/xaEzOQYdAZjxMqml9s=\n=50w9\n-----END PGP SIGNATURE-----", "payload": "tree caa6c165402068553f5f893a96693d63ee54ee81\nparent 19419f3771cf5478be137643d2f8a967f6ef088d\nauthor Mahdi Dibaiee <mdibaiee@pm.me> 1641233299 +0000\ncommitter Mahdi Dibaiee <mdibaiee@pm.me> 1641369882 +0000\n\nRemove unsupported types in primitive_to_ty conversion, add FIXME note\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/973cf632d37b55095d1ff47b62de43c1864c4115", "html_url": "https://github.com/rust-lang/rust/commit/973cf632d37b55095d1ff47b62de43c1864c4115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/973cf632d37b55095d1ff47b62de43c1864c4115/comments", "author": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19419f3771cf5478be137643d2f8a967f6ef088d", "url": "https://api.github.com/repos/rust-lang/rust/commits/19419f3771cf5478be137643d2f8a967f6ef088d", "html_url": "https://github.com/rust-lang/rust/commit/19419f3771cf5478be137643d2f8a967f6ef088d"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "7953008628204f3e72b0ff460d14b7260e06ff3d", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/973cf632d37b55095d1ff47b62de43c1864c4115/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973cf632d37b55095d1ff47b62de43c1864c4115/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=973cf632d37b55095d1ff47b62de43c1864c4115", "patch": "@@ -625,6 +625,9 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n         use PrimitiveType::*;\n         let tcx = self.cx.tcx;\n \n+        // FIXME: Only simple types are supported here, see if we can support\n+        // other types such as Tuple, Array, Slice, etc.\n+        // See https://github.com/rust-lang/rust/issues/90703#issuecomment-1004263455\n         Some(tcx.mk_ty(match prim {\n             Bool => ty::Bool,\n             Str => ty::Str,\n@@ -644,14 +647,6 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n             U64 => ty::Uint(ty::UintTy::U64),\n             U128 => ty::Uint(ty::UintTy::U128),\n             Usize => ty::Uint(ty::UintTy::Usize),\n-            //ty::Tuple(tys) if tys.is_empty() => Res::Primitive(Unit),\n-            //ty::Tuple(_) => Res::Primitive(Tuple),\n-            //ty::Array(..) => Res::Primitive(Array),\n-            //ty::Slice(_) => Res::Primitive(Slice),\n-            //ty::RawPtr(_) => Res::Primitive(RawPointer),\n-            //ty::Ref(..) => Res::Primitive(Reference),\n-            //ty::FnDef(..) => panic!(\"type alias to a function definition\"),\n-            //ty::FnPtr(_) => Res::Primitive(Fn),\n             _ => return None,\n         }))\n     }"}]}