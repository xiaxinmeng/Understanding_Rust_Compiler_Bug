{"sha": "bd16aac903357e30e1e3d3fe8390d6a6e2b7434c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMTZhYWM5MDMzNTdlMzBlMWUzZDNmZTgzOTBkNmE2ZTJiNzQzNGM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-22T11:44:59Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-22T11:44:59Z"}, "message": "Fix inconsistency in ordering of patterns during alt compilation\n\nCloses #1153", "tree": {"sha": "04e250cc44e36f63ac2a38bd0fc92b07261cffeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04e250cc44e36f63ac2a38bd0fc92b07261cffeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd16aac903357e30e1e3d3fe8390d6a6e2b7434c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd16aac903357e30e1e3d3fe8390d6a6e2b7434c", "html_url": "https://github.com/rust-lang/rust/commit/bd16aac903357e30e1e3d3fe8390d6a6e2b7434c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd16aac903357e30e1e3d3fe8390d6a6e2b7434c/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d6a74f020dba8d25c21670bdcf7bdf8744bffaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6a74f020dba8d25c21670bdcf7bdf8744bffaf", "html_url": "https://github.com/rust-lang/rust/commit/5d6a74f020dba8d25c21670bdcf7bdf8744bffaf"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "84eebc9b94db50bc978a669872cd7cfda01d8422", "filename": "src/comp/middle/trans_alt.rs", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/bd16aac903357e30e1e3d3fe8390d6a6e2b7434c/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd16aac903357e30e1e3d3fe8390d6a6e2b7434c/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs?ref=bd16aac903357e30e1e3d3fe8390d6a6e2b7434c", "patch": "@@ -91,10 +91,9 @@ fn assoc(key: str, list: bind_map) -> option::t<ValueRef> {\n type match_branch =\n     @{pats: [@ast::pat],\n       bound: bind_map,\n-      data:\n-          @{body: BasicBlockRef,\n-            guard: option::t<@ast::expr>,\n-            id_map: ast_util::pat_id_map}};\n+      data: @{body: BasicBlockRef,\n+              guard: option::t<@ast::expr>,\n+              id_map: ast_util::pat_id_map}};\n type match = [match_branch];\n \n fn matches_always(p: @ast::pat) -> bool {\n@@ -114,18 +113,15 @@ fn enter_match(m: match, col: uint, val: ValueRef, e: enter_pat) -> match {\n     for br: match_branch in m {\n         alt e(br.pats[col]) {\n           some(sub) {\n-            let pats =\n-                vec::slice(br.pats, 0u, col) + sub +\n-                    vec::slice(br.pats, col + 1u, vec::len(br.pats));\n-            let new_br =\n-                @{pats: pats,\n-                  bound:\n-                      alt br.pats[col].node {\n-                        ast::pat_bind(name) {\n-                          br.bound + [{ident: name, val: val}]\n-                        }\n-                        _ { br.bound }\n-                      } with *br};\n+            let pats = sub + vec::slice(br.pats, 0u, col) +\n+                vec::slice(br.pats, col + 1u, vec::len(br.pats));\n+            let new_br = @{pats: pats,\n+                           bound: alt br.pats[col].node {\n+                             ast::pat_bind(name) {\n+                               br.bound + [{ident: name, val: val}]\n+                             }\n+                             _ { br.bound }\n+                           } with *br};\n             result += [new_br];\n           }\n           none. { }\n@@ -386,7 +382,6 @@ fn compile_submatch(bcx: @block_ctxt, m: match, vals: [ValueRef], f: mk_fail,\n     let ccx = bcx.fcx.lcx.ccx;\n     let pat_id = 0;\n     for br: match_branch in m {\n-\n         // Find a real id (we're adding placeholder wildcard patterns, but\n         // each column is guaranteed to have at least one real pattern)\n         if pat_id == 0 { pat_id = br.pats[col].id; }"}]}