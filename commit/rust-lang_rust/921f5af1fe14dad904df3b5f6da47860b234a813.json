{"sha": "921f5af1fe14dad904df3b5f6da47860b234a813", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMWY1YWYxZmUxNGRhZDkwNGRmM2I1ZjZkYTQ3ODYwYjIzNGE4MTM=", "commit": {"author": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-10T18:20:11Z"}, "committer": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-10T18:20:11Z"}, "message": "ensure that integers cast to pointers will never point at a valid alloc, not even the zst alloc", "tree": {"sha": "67782f494727a26ba5a36d8b1e06aea0945e9c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67782f494727a26ba5a36d8b1e06aea0945e9c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/921f5af1fe14dad904df3b5f6da47860b234a813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/921f5af1fe14dad904df3b5f6da47860b234a813", "html_url": "https://github.com/rust-lang/rust/commit/921f5af1fe14dad904df3b5f6da47860b234a813", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/921f5af1fe14dad904df3b5f6da47860b234a813/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4301ea7eb7569881e2250a00098d119d053c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4301ea7eb7569881e2250a00098d119d053c14", "html_url": "https://github.com/rust-lang/rust/commit/2d4301ea7eb7569881e2250a00098d119d053c14"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "52662218ffa5b60adea6342f17263ba7114c71a4", "filename": "src/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/921f5af1fe14dad904df3b5f6da47860b234a813/src%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921f5af1fe14dad904df3b5f6da47860b234a813/src%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ferror.rs?ref=921f5af1fe14dad904df3b5f6da47860b234a813", "patch": "@@ -61,7 +61,7 @@ impl<'tcx> Error for EvalError<'tcx> {\n             EvalError::DanglingPointerDeref =>\n                 \"dangling pointer was dereferenced\",\n             EvalError::InvalidFunctionPointer =>\n-                \"tried to use a pointer as a function pointer\",\n+                \"tried to use an integer pointer as a function pointer\",\n             EvalError::InvalidBool =>\n                 \"invalid boolean value read\",\n             EvalError::InvalidDiscriminant =>"}, {"sha": "1ddcee34722a168dd003e8e8fe61d579f3844bbb", "filename": "src/interpreter/terminator/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/921f5af1fe14dad904df3b5f6da47860b234a813/src%2Finterpreter%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921f5af1fe14dad904df3b5f6da47860b234a813/src%2Finterpreter%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fmod.rs?ref=921f5af1fe14dad904df3b5f6da47860b234a813", "patch": "@@ -639,7 +639,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 };\n                 let drop_fn = self.memory.read_ptr(vtable)?;\n                 // some values don't need to call a drop impl, so the value is null\n-                if !drop_fn.points_to_zst() {\n+                if drop_fn != Pointer::from_int(0) {\n                     let (def_id, substs, ty) = self.memory.get_fn(drop_fn.alloc_id)?;\n                     let fn_sig = self.tcx.erase_late_bound_regions_and_normalize(&ty.sig);\n                     let real_ty = fn_sig.inputs[0];"}, {"sha": "a83ed98a37e32f0e0cefd9684196648048047ff5", "filename": "src/memory.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/921f5af1fe14dad904df3b5f6da47860b234a813/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921f5af1fe14dad904df3b5f6da47860b234a813/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=921f5af1fe14dad904df3b5f6da47860b234a813", "patch": "@@ -73,7 +73,7 @@ impl Pointer {\n     // FIXME(solson): Integer pointers should use u64, not usize. Target pointers can be larger\n     // than host usize.\n     pub fn from_int(i: usize) -> Self {\n-        Pointer::new(ZST_ALLOC_ID, i)\n+        Pointer::new(NEVER_ALLOC_ID, i)\n     }\n \n     pub fn zst_ptr() -> Self {\n@@ -290,7 +290,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n             Some(alloc) => Ok(alloc),\n             None => match self.functions.get(&id) {\n                 Some(_) => Err(EvalError::DerefFunctionPointer),\n-                None if id == ZST_ALLOC_ID => Err(EvalError::InvalidMemoryAccess),\n+                None if id == NEVER_ALLOC_ID || id == ZST_ALLOC_ID => Err(EvalError::InvalidMemoryAccess),\n                 None => Err(EvalError::DanglingPointerDeref),\n             }\n         }\n@@ -302,7 +302,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n             Some(alloc) => Ok(alloc),\n             None => match self.functions.get(&id) {\n                 Some(_) => Err(EvalError::DerefFunctionPointer),\n-                None if id == ZST_ALLOC_ID => Err(EvalError::InvalidMemoryAccess),\n+                None if id == NEVER_ALLOC_ID || id == ZST_ALLOC_ID => Err(EvalError::InvalidMemoryAccess),\n                 None => Err(EvalError::DanglingPointerDeref),\n             }\n         }"}, {"sha": "e14f875c022e3fabd4a06ae5e1fd25551be267fe", "filename": "tests/run-pass/assume_bug.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/921f5af1fe14dad904df3b5f6da47860b234a813/tests%2Frun-pass%2Fassume_bug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921f5af1fe14dad904df3b5f6da47860b234a813/tests%2Frun-pass%2Fassume_bug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fassume_bug.rs?ref=921f5af1fe14dad904df3b5f6da47860b234a813", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    vec![()].into_iter();\n+}"}]}