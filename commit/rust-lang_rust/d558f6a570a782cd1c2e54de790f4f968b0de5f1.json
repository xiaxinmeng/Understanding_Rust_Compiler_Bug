{"sha": "d558f6a570a782cd1c2e54de790f4f968b0de5f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NThmNmE1NzBhNzgyY2QxYzJlNTRkZTc5MGY0Zjk2OGIwZGU1ZjE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-10T19:03:26Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-10T19:03:26Z"}, "message": "Fix invalid bounding box", "tree": {"sha": "f5d820bda1bf8c9346658dde3fd8ce8f5f31bc92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5d820bda1bf8c9346658dde3fd8ce8f5f31bc92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d558f6a570a782cd1c2e54de790f4f968b0de5f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d558f6a570a782cd1c2e54de790f4f968b0de5f1", "html_url": "https://github.com/rust-lang/rust/commit/d558f6a570a782cd1c2e54de790f4f968b0de5f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d558f6a570a782cd1c2e54de790f4f968b0de5f1/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3250057da983fa4d5bfd0799adaa41cb038f0e25", "url": "https://api.github.com/repos/rust-lang/rust/commits/3250057da983fa4d5bfd0799adaa41cb038f0e25", "html_url": "https://github.com/rust-lang/rust/commit/3250057da983fa4d5bfd0799adaa41cb038f0e25"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e24e8719133a987574b2d9def7200801d42a9b93", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d558f6a570a782cd1c2e54de790f4f968b0de5f1/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d558f6a570a782cd1c2e54de790f4f968b0de5f1/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=d558f6a570a782cd1c2e54de790f4f968b0de5f1", "patch": "@@ -182,7 +182,7 @@ impl CodeSuggestion {\n \n                 // Find the bounding span.\n                 let lo = substitution.parts.iter().map(|part| part.span.lo()).min().unwrap();\n-                let hi = substitution.parts.iter().map(|part| part.span.hi()).min().unwrap();\n+                let hi = substitution.parts.iter().map(|part| part.span.hi()).max().unwrap();\n                 let bounding_span = Span::with_root_ctxt(lo, hi);\n                 let lines = cm.span_to_lines(bounding_span).unwrap();\n                 assert!(!lines.lines.is_empty());"}]}