{"sha": "4764d98223bfca20e10d87a80b11f658aab01906", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NjRkOTgyMjNiZmNhMjBlMTBkODdhODBiMTFmNjU4YWFiMDE5MDY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-09-29T08:33:25Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-09-29T08:33:25Z"}, "message": "Restore `if let`s replaced with `for`s", "tree": {"sha": "4e8c77ed36a04045883320720ff0f1327740655b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e8c77ed36a04045883320720ff0f1327740655b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4764d98223bfca20e10d87a80b11f658aab01906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4764d98223bfca20e10d87a80b11f658aab01906", "html_url": "https://github.com/rust-lang/rust/commit/4764d98223bfca20e10d87a80b11f658aab01906", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4764d98223bfca20e10d87a80b11f658aab01906/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4744d56846c0ed137c0a59fcc8ade8078e3a3431", "url": "https://api.github.com/repos/rust-lang/rust/commits/4744d56846c0ed137c0a59fcc8ade8078e3a3431", "html_url": "https://github.com/rust-lang/rust/commit/4744d56846c0ed137c0a59fcc8ade8078e3a3431"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "149b734884634005fe90cc994a214e0e2284a362", "filename": "src/librustc_front/visit.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4764d98223bfca20e10d87a80b11f658aab01906/src%2Flibrustc_front%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4764d98223bfca20e10d87a80b11f658aab01906/src%2Flibrustc_front%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fvisit.rs?ref=4764d98223bfca20e10d87a80b11f658aab01906", "patch": "@@ -336,7 +336,7 @@ pub fn walk_ty<'v, V: Visitor<'v>>(visitor: &mut V, typ: &'v Ty) {\n             walk_list!(visitor, visit_lifetime_def, &function_declaration.lifetimes);\n         }\n         TyPath(ref maybe_qself, ref path) => {\n-            for qself in maybe_qself {\n+            if let Some(ref qself) = *maybe_qself {\n                 visitor.visit_ty(&qself.ty);\n             }\n             visitor.visit_path(path, typ.id);\n@@ -408,7 +408,7 @@ pub fn walk_pat<'v, V: Visitor<'v>>(visitor: &mut V, pattern: &'v Pat) {\n     match pattern.node {\n         PatEnum(ref path, ref opt_children) => {\n             visitor.visit_path(path, pattern.id);\n-            for children in opt_children {\n+            if let Some(ref children) = *opt_children {\n                 walk_list!(visitor, visit_pat, children);\n             }\n         }\n@@ -723,7 +723,7 @@ pub fn walk_expr<'v, V: Visitor<'v>>(visitor: &mut V, expression: &'v Expr) {\n             walk_list!(visitor, visit_expr, end);\n         }\n         ExprPath(ref maybe_qself, ref path) => {\n-            for qself in maybe_qself {\n+            if let Some(ref qself) = *maybe_qself {\n                 visitor.visit_ty(&qself.ty);\n             }\n             visitor.visit_path(path, expression.id)"}, {"sha": "67e4927a52fca0cc5fac71bccc52c6329b120510", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4764d98223bfca20e10d87a80b11f658aab01906/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4764d98223bfca20e10d87a80b11f658aab01906/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=4764d98223bfca20e10d87a80b11f658aab01906", "patch": "@@ -353,7 +353,7 @@ pub fn walk_ty<'v, V: Visitor<'v>>(visitor: &mut V, typ: &'v Ty) {\n             walk_list!(visitor, visit_lifetime_def, &function_declaration.lifetimes);\n         }\n         TyPath(ref maybe_qself, ref path) => {\n-            for qself in maybe_qself {\n+            if let Some(ref qself) = *maybe_qself {\n                 visitor.visit_ty(&qself.ty);\n             }\n             visitor.visit_path(path, typ.id);\n@@ -428,7 +428,7 @@ pub fn walk_pat<'v, V: Visitor<'v>>(visitor: &mut V, pattern: &'v Pat) {\n     match pattern.node {\n         PatEnum(ref path, ref opt_children) => {\n             visitor.visit_path(path, pattern.id);\n-            for children in opt_children {\n+            if let Some(ref children) = *opt_children {\n                 walk_list!(visitor, visit_pat, children);\n             }\n         }\n@@ -767,7 +767,7 @@ pub fn walk_expr<'v, V: Visitor<'v>>(visitor: &mut V, expression: &'v Expr) {\n             walk_list!(visitor, visit_expr, end);\n         }\n         ExprPath(ref maybe_qself, ref path) => {\n-            for qself in maybe_qself {\n+            if let Some(ref qself) = *maybe_qself {\n                 visitor.visit_ty(&qself.ty);\n             }\n             visitor.visit_path(path, expression.id)"}]}