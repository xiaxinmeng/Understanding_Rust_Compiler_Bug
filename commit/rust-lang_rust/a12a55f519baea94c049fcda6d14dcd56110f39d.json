{"sha": "a12a55f519baea94c049fcda6d14dcd56110f39d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMmE1NWY1MTliYWVhOTRjMDQ5ZmNkYTZkMTRkY2Q1NjExMGYzOWQ=", "commit": {"author": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-03T13:40:32Z"}, "committer": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-03T13:40:32Z"}, "message": "item_attrs", "tree": {"sha": "cebc18db208b38f272427210e5b01387fbde2fb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cebc18db208b38f272427210e5b01387fbde2fb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a12a55f519baea94c049fcda6d14dcd56110f39d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a12a55f519baea94c049fcda6d14dcd56110f39d", "html_url": "https://github.com/rust-lang/rust/commit/a12a55f519baea94c049fcda6d14dcd56110f39d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a12a55f519baea94c049fcda6d14dcd56110f39d/comments", "author": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "html_url": "https://github.com/rust-lang/rust/commit/4d7c0b68cf2df93158747180bef0c7c6724e4dd3"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "fb8678ce93eae793c9dca06d04ee682542bb7654", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=a12a55f519baea94c049fcda6d14dcd56110f39d", "patch": "@@ -157,6 +157,7 @@ pub enum DepNode<D: Clone + Debug> {\n     ItemBodyNestedBodies(D),\n     ConstIsRvaluePromotableToStatic(D),\n     IsMirAvailable(D),\n+    ItemAttrs(D),\n }\n \n impl<D: Clone + Debug> DepNode<D> {\n@@ -267,6 +268,7 @@ impl<D: Clone + Debug> DepNode<D> {\n             DefSpan(ref d) => op(d).map(DefSpan),\n             Stability(ref d) => op(d).map(Stability),\n             Deprecation(ref d) => op(d).map(Deprecation),\n+            ItemAttrs(ref d) => op(d).map(ItemAttrs),\n             ItemBodyNestedBodies(ref d) => op(d).map(ItemBodyNestedBodies),\n             ConstIsRvaluePromotableToStatic(ref d) => op(d).map(ConstIsRvaluePromotableToStatic),\n             IsMirAvailable(ref d) => op(d).map(IsMirAvailable),"}, {"sha": "e30b4b2818e5e22e26503a19c6c3e9fa9391e7ba", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=a12a55f519baea94c049fcda6d14dcd56110f39d", "patch": "@@ -182,7 +182,6 @@ pub trait CrateStore {\n     fn visibility(&self, def: DefId) -> ty::Visibility;\n     fn visible_parent_map<'a>(&'a self) -> ::std::cell::Ref<'a, DefIdMap<DefId>>;\n     fn item_generics_cloned(&self, def: DefId) -> ty::Generics;\n-    fn item_attrs(&self, def_id: DefId) -> Rc<[ast::Attribute]>;\n     fn fn_arg_names(&self, did: DefId) -> Vec<ast::Name>;\n \n     // trait info\n@@ -309,7 +308,6 @@ impl CrateStore for DummyCrateStore {\n     }\n     fn item_generics_cloned(&self, def: DefId) -> ty::Generics\n         { bug!(\"item_generics_cloned\") }\n-    fn item_attrs(&self, def_id: DefId) -> Rc<[ast::Attribute]> { bug!(\"item_attrs\") }\n     fn fn_arg_names(&self, did: DefId) -> Vec<ast::Name> { bug!(\"fn_arg_names\") }\n \n     // trait info"}, {"sha": "948df617867512e0e7179b7b35c6fe5effdaedf1", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=a12a55f519baea94c049fcda6d14dcd56110f39d", "patch": "@@ -34,6 +34,7 @@ use std::ops::Deref;\n use std::rc::Rc;\n use syntax_pos::{Span, DUMMY_SP};\n use syntax::attr;\n+use syntax::ast;\n use syntax::symbol::Symbol;\n \n pub trait Key: Clone + Hash + Eq + Debug {\n@@ -334,6 +335,12 @@ impl<'tcx> QueryDescription for queries::deprecation<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::item_attrs<'tcx> {\n+    fn describe(_: TyCtxt, _: DefId) -> String {\n+        bug!(\"item_attrs\")\n+    }\n+}\n+\n impl<'tcx> QueryDescription for queries::item_body_nested_bodies<'tcx> {\n     fn describe(tcx: TyCtxt, def_id: DefId) -> String {\n         format!(\"nested item bodies of `{}`\", tcx.item_path_str(def_id))\n@@ -783,6 +790,7 @@ define_maps! { <'tcx>\n     [] def_span: DefSpan(DefId) -> Span,\n     [] stability: Stability(DefId) -> Option<attr::Stability>,\n     [] deprecation: Deprecation(DefId) -> Option<attr::Deprecation>,\n+    [] item_attrs: ItemAttrs(DefId) -> Rc<[ast::Attribute]>,\n     [] item_body_nested_bodies: ItemBodyNestedBodies(DefId) -> Rc<BTreeMap<hir::BodyId, hir::Body>>,\n     [] const_is_rvalue_promotable_to_static: ConstIsRvaluePromotableToStatic(DefId) -> bool,\n     [] is_mir_available: IsMirAvailable(DefId) -> bool,"}, {"sha": "3cc250f0814efa351fdc7a4d90990cdf27d84c17", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=a12a55f519baea94c049fcda6d14dcd56110f39d", "patch": "@@ -2357,7 +2357,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         if let Some(id) = self.hir.as_local_node_id(did) {\n             Attributes::Borrowed(self.hir.attrs(id))\n         } else {\n-            Attributes::Owned(self.sess.cstore.item_attrs(did))\n+            Attributes::Owned(self.item_attrs(did))\n         }\n     }\n "}, {"sha": "c7a52922e2a0997224f41fffc873e5c0fab60446", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a55f519baea94c049fcda6d14dcd56110f39d/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=a12a55f519baea94c049fcda6d14dcd56110f39d", "patch": "@@ -113,6 +113,7 @@ provide! { <'tcx> tcx, def_id, cdata\n     def_span => { cdata.get_span(def_id.index, &tcx.sess) }\n     stability => { cdata.get_stability(def_id.index) }\n     deprecation => { cdata.get_deprecation(def_id.index) }\n+    item_attrs => { cdata.get_item_attrs(def_id.index) }\n     item_body_nested_bodies => {\n         let map: BTreeMap<_, _> = cdata.entry(def_id.index).ast.into_iter().flat_map(|ast| {\n             ast.decode(cdata).nested_bodies.decode(cdata).map(|body| (body.id(), body))\n@@ -145,12 +146,6 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(def.krate).get_generics(def.index)\n     }\n \n-    fn item_attrs(&self, def_id: DefId) -> Rc<[ast::Attribute]>\n-    {\n-        self.dep_graph.read(DepNode::MetaData(def_id));\n-        self.get_crate_data(def_id.krate).get_item_attrs(def_id.index)\n-    }\n-\n     fn fn_arg_names(&self, did: DefId) -> Vec<ast::Name>\n     {\n         // FIXME(#38501) We've skipped a `read` on the `HirBody` of"}]}