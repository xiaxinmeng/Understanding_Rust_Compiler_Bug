{"sha": "1363cdaec9984269fc421cbc910f1f520b669f21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNjNjZGFlYzk5ODQyNjlmYzQyMWNiYzkxMGYxZjUyMGI2NjlmMjE=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-01-26T15:51:10Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-01-26T21:49:17Z"}, "message": "Remove unnecessary LLVMRustPersonalityFn binding\n\nLLVM Core C bindings provide this function for all the versions back to what we support (3.7), and\nhelps to avoid this unnecessary builder->function transition every time. Also a negative diff.", "tree": {"sha": "ace8bf4d17be458e6b36523f434c37fba5b5bf3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ace8bf4d17be458e6b36523f434c37fba5b5bf3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1363cdaec9984269fc421cbc910f1f520b669f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1363cdaec9984269fc421cbc910f1f520b669f21", "html_url": "https://github.com/rust-lang/rust/commit/1363cdaec9984269fc421cbc910f1f520b669f21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1363cdaec9984269fc421cbc910f1f520b669f21/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07fe04c1e2d66cfc351ffa69157facc7d8a819cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/07fe04c1e2d66cfc351ffa69157facc7d8a819cd", "html_url": "https://github.com/rust-lang/rust/commit/07fe04c1e2d66cfc351ffa69157facc7d8a819cd"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "58b2017ceb66e8a7dd562e7369ca72578f63feba", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=1363cdaec9984269fc421cbc910f1f520b669f21", "patch": "@@ -804,7 +804,7 @@ extern \"C\" {\n                                     Name: *const c_char)\n                                     -> ValueRef;\n     pub fn LLVMRustAddHandler(CatchSwitch: ValueRef, Handler: BasicBlockRef);\n-    pub fn LLVMRustSetPersonalityFn(B: BuilderRef, Pers: ValueRef);\n+    pub fn LLVMSetPersonalityFn(Func: ValueRef, Pers: ValueRef);\n \n     // Add a case to the switch instruction\n     pub fn LLVMAddCase(Switch: ValueRef, OnVal: ValueRef, Dest: BasicBlockRef);"}, {"sha": "c113716ca5c74295339868d95bda27492dbcc0d3", "filename": "src/librustc_trans/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Flibrustc_trans%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Flibrustc_trans%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbuilder.rs?ref=1363cdaec9984269fc421cbc910f1f520b669f21", "patch": "@@ -1107,7 +1107,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n \n     pub fn set_personality_fn(&self, personality: ValueRef) {\n         unsafe {\n-            llvm::LLVMRustSetPersonalityFn(self.llbuilder, personality);\n+            llvm::LLVMSetPersonalityFn(self.llfn(), personality);\n         }\n     }\n "}, {"sha": "30c138310da9c501d158ba856ecd2b6890540a82", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=1363cdaec9984269fc421cbc910f1f520b669f21", "patch": "@@ -319,7 +319,9 @@ pub fn trans_mir<'a, 'tcx: 'a>(\n     mircx.cleanup_kinds.iter_enumerated().map(|(bb, cleanup_kind)| {\n         if let CleanupKind::Funclet = *cleanup_kind {\n             let bcx = mircx.get_builder(bb);\n-            bcx.set_personality_fn(mircx.ccx.eh_personality());\n+            unsafe {\n+                llvm::LLVMSetPersonalityFn(mircx.llfn, mircx.ccx.eh_personality());\n+            }\n             if base::wants_msvc_seh(ccx.sess()) {\n                 return Some(Funclet::new(bcx.cleanup_pad(None, &[])));\n             }"}, {"sha": "34ee7d552f346f7ad1b578a75c905971917b5cb3", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1363cdaec9984269fc421cbc910f1f520b669f21/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=1363cdaec9984269fc421cbc910f1f520b669f21", "patch": "@@ -1082,14 +1082,6 @@ extern \"C\" void LLVMRustAddHandler(LLVMValueRef CatchSwitchRef,\n #endif\n }\n \n-extern \"C\" void LLVMRustSetPersonalityFn(LLVMBuilderRef B,\n-                                         LLVMValueRef Personality) {\n-#if LLVM_VERSION_GE(3, 8)\n-  unwrap(B)->GetInsertBlock()->getParent()->setPersonalityFn(\n-      cast<Function>(unwrap(Personality)));\n-#endif\n-}\n-\n #if LLVM_VERSION_GE(3, 8)\n extern \"C\" OperandBundleDef *LLVMRustBuildOperandBundleDef(const char *Name,\n                                                            LLVMValueRef *Inputs,"}]}