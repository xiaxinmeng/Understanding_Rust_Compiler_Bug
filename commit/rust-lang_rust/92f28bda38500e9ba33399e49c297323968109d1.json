{"sha": "92f28bda38500e9ba33399e49c297323968109d1", "node_id": "C_kwDOAAsO6NoAKDkyZjI4YmRhMzg1MDBlOWJhMzMzOTllNDljMjk3MzIzOTY4MTA5ZDE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-03T13:44:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-03T13:44:19Z"}, "message": "Rollup merge of #92409 - bjorn3:libtest_cleanups, r=m-ou-se\n\nCouple of libtest cleanups\n\nRemove the unnecessary `TDynBenchFn` trait and remove a couple of unused attributes and feature gates.", "tree": {"sha": "00faf3b2c50cc70f6f5c7d843f4e463c56ecf902", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00faf3b2c50cc70f6f5c7d843f4e463c56ecf902"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92f28bda38500e9ba33399e49c297323968109d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0v20CRBK7hj4Ov3rIwAAezoIAJeizPvWtYDCK9AeDkRZm9N4\nW6Bnrl/PYLJ6T9rIrzm1Ovf2rmeE9mrA6NV/DiFIQTmVZ3DqPyD0XFmpMmJL8IbM\n9/rtvQKxysF1uur/WLU601CKCXRclPD4Y3SNlY773Ga861YdDWUaGTm4ZAZpugsS\n9tZxU6otFw9B6LHiOkCEztDXAOVaZ/9/q0EgMxLOkBpdhd5gG5L7P2ZkLwBijQLd\n53P3mEfl2AVlhtz9uqaFkWXOMjRQD4/rV9MC0c15vOgbqGXyWmPcyw8+yUbZ4RLv\nITP8lGqL+B6hlo51z15FgJULp0FzxLWnk4b16GmmxZyJA3SpADMUbr7sOG5rd2E=\n=2mns\n-----END PGP SIGNATURE-----\n", "payload": "tree 00faf3b2c50cc70f6f5c7d843f4e463c56ecf902\nparent 0335b7bca935efa2b25a6996f6209f7e8c2c4713\nparent e015b9ee80af5cf0386e02477ec8c339e3801e64\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641217459 +0100\ncommitter GitHub <noreply@github.com> 1641217459 +0100\n\nRollup merge of #92409 - bjorn3:libtest_cleanups, r=m-ou-se\n\nCouple of libtest cleanups\n\nRemove the unnecessary `TDynBenchFn` trait and remove a couple of unused attributes and feature gates.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92f28bda38500e9ba33399e49c297323968109d1", "html_url": "https://github.com/rust-lang/rust/commit/92f28bda38500e9ba33399e49c297323968109d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92f28bda38500e9ba33399e49c297323968109d1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0335b7bca935efa2b25a6996f6209f7e8c2c4713", "url": "https://api.github.com/repos/rust-lang/rust/commits/0335b7bca935efa2b25a6996f6209f7e8c2c4713", "html_url": "https://github.com/rust-lang/rust/commit/0335b7bca935efa2b25a6996f6209f7e8c2c4713"}, {"sha": "e015b9ee80af5cf0386e02477ec8c339e3801e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/e015b9ee80af5cf0386e02477ec8c339e3801e64", "html_url": "https://github.com/rust-lang/rust/commit/e015b9ee80af5cf0386e02477ec8c339e3801e64"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "608e587cf34f3351a9befa9ab8a74d64b2c54d3c", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/92f28bda38500e9ba33399e49c297323968109d1/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92f28bda38500e9ba33399e49c297323968109d1/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=92f28bda38500e9ba33399e49c297323968109d1", "patch": "@@ -13,20 +13,12 @@\n // running tests while providing a base that other test frameworks may\n // build off of.\n \n-// N.B., this is also specified in this crate's Cargo.toml, but librustc_ast contains logic specific to\n-// this crate, which relies on this attribute (rather than the value of `--crate-name` passed by\n-// cargo) to detect this crate.\n-\n-#![crate_name = \"test\"]\n #![unstable(feature = \"test\", issue = \"50297\")]\n #![doc(test(attr(deny(warnings))))]\n-#![feature(libc)]\n-#![feature(rustc_private)]\n #![feature(nll)]\n #![feature(available_parallelism)]\n #![feature(bench_black_box)]\n #![feature(internal_output_capture)]\n-#![feature(panic_unwind)]\n #![feature(staged_api)]\n #![feature(termination_trait_lib)]\n #![feature(test)]\n@@ -444,8 +436,8 @@ pub fn convert_benchmarks_to_tests(tests: Vec<TestDescAndFn>) -> Vec<TestDescAnd\n         .into_iter()\n         .map(|x| {\n             let testfn = match x.testfn {\n-                DynBenchFn(bench) => DynTestFn(Box::new(move || {\n-                    bench::run_once(|b| __rust_begin_short_backtrace(|| bench.run(b)))\n+                DynBenchFn(benchfn) => DynTestFn(Box::new(move || {\n+                    bench::run_once(|b| __rust_begin_short_backtrace(|| benchfn(b)))\n                 })),\n                 StaticBenchFn(benchfn) => DynTestFn(Box::new(move || {\n                     bench::run_once(|b| __rust_begin_short_backtrace(|| benchfn(b)))\n@@ -544,11 +536,9 @@ pub fn run_test(\n         TestRunOpts { strategy, nocapture: opts.nocapture, concurrency, time: opts.time_options };\n \n     match testfn {\n-        DynBenchFn(bencher) => {\n+        DynBenchFn(benchfn) => {\n             // Benchmarks aren't expected to panic, so we run them all in-process.\n-            crate::bench::benchmark(id, desc, monitor_ch, opts.nocapture, |harness| {\n-                bencher.run(harness)\n-            });\n+            crate::bench::benchmark(id, desc, monitor_ch, opts.nocapture, benchfn);\n             None\n         }\n         StaticBenchFn(benchfn) => {"}, {"sha": "40b05704b40cb830e79f6b2174c60ead573ac644", "filename": "library/test/src/stats.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/92f28bda38500e9ba33399e49c297323968109d1/library%2Ftest%2Fsrc%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92f28bda38500e9ba33399e49c297323968109d1/library%2Ftest%2Fsrc%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fstats.rs?ref=92f28bda38500e9ba33399e49c297323968109d1", "patch": "@@ -1,5 +1,4 @@\n #![allow(missing_docs)]\n-#![allow(deprecated)] // Float\n \n use std::mem;\n "}, {"sha": "37bb38fb0df4efb64d557d31d515e83cd2a7183d", "filename": "library/test/src/types.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/92f28bda38500e9ba33399e49c297323968109d1/library%2Ftest%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92f28bda38500e9ba33399e49c297323968109d1/library%2Ftest%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftypes.rs?ref=92f28bda38500e9ba33399e49c297323968109d1", "patch": "@@ -74,11 +74,6 @@ impl fmt::Display for TestName {\n     }\n }\n \n-/// Represents a benchmark function.\n-pub trait TDynBenchFn: Send {\n-    fn run(&self, harness: &mut Bencher);\n-}\n-\n // A function that runs a test. If the function returns successfully,\n // the test succeeds; if the function panics then the test fails. We\n // may need to come up with a more clever definition of test in order\n@@ -87,7 +82,7 @@ pub enum TestFn {\n     StaticTestFn(fn()),\n     StaticBenchFn(fn(&mut Bencher)),\n     DynTestFn(Box<dyn FnOnce() + Send>),\n-    DynBenchFn(Box<dyn TDynBenchFn + 'static>),\n+    DynBenchFn(Box<dyn Fn(&mut Bencher) + Send>),\n }\n \n impl TestFn {"}]}