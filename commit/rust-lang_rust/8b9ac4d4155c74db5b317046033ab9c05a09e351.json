{"sha": "8b9ac4d4155c74db5b317046033ab9c05a09e351", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiOWFjNGQ0MTU1Yzc0ZGI1YjMxNzA0NjAzM2FiOWMwNWEwOWUzNTE=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-19T11:16:12Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-03-03T20:16:08Z"}, "message": "Add test for underflow in specialized Zip's size_hint", "tree": {"sha": "a96c02aaef17b61c5d5baa527a677f236c193fa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a96c02aaef17b61c5d5baa527a677f236c193fa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b9ac4d4155c74db5b317046033ab9c05a09e351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b9ac4d4155c74db5b317046033ab9c05a09e351", "html_url": "https://github.com/rust-lang/rust/commit/8b9ac4d4155c74db5b317046033ab9c05a09e351", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b9ac4d4155c74db5b317046033ab9c05a09e351/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66a260617a88ed1ad55a46f03c5a90d5ad3004d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/66a260617a88ed1ad55a46f03c5a90d5ad3004d3", "html_url": "https://github.com/rust-lang/rust/commit/66a260617a88ed1ad55a46f03c5a90d5ad3004d3"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "a5977103929527bcd7e636eb7ae5cfd42878fca5", "filename": "library/core/tests/iter/adapters/zip.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8b9ac4d4155c74db5b317046033ab9c05a09e351/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b9ac4d4155c74db5b317046033ab9c05a09e351/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fzip.rs?ref=8b9ac4d4155c74db5b317046033ab9c05a09e351", "patch": "@@ -245,3 +245,23 @@ fn test_double_ended_zip() {\n     assert_eq!(it.next_back(), Some((3, 3)));\n     assert_eq!(it.next(), None);\n }\n+\n+#[test]\n+fn test_issue_82282() {\n+    fn overflowed_zip(arr: &[i32]) -> impl Iterator<Item = (i32, &())> {\n+        static UNIT_EMPTY_ARR: [(); 0] = [];\n+\n+        let mapped = arr.into_iter().map(|i| *i);\n+        let mut zipped = mapped.zip(UNIT_EMPTY_ARR.iter());\n+        zipped.next();\n+        zipped\n+    }\n+\n+    let arr = [1, 2, 3];\n+    let zip = overflowed_zip(&arr).zip(overflowed_zip(&arr));\n+\n+    assert_eq!(zip.size_hint(), (0, Some(0)));\n+    for _ in zip {\n+        panic!();\n+    }\n+}"}]}