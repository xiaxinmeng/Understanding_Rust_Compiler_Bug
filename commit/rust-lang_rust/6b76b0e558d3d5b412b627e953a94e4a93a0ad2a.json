{"sha": "6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNzZiMGU1NThkM2Q1YjQxMmI2MjdlOTUzYTk0ZTRhOTNhMGFkMmE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-22T10:13:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-23T19:25:27Z"}, "message": "explain what we are testing in mutable_const", "tree": {"sha": "9af77f3ba0d72609543d0b732493f9761444b640", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9af77f3ba0d72609543d0b732493f9761444b640"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "html_url": "https://github.com/rust-lang/rust/commit/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6463ecfe766c60c6dd671725f0ac52e88004f6c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6463ecfe766c60c6dd671725f0ac52e88004f6c9", "html_url": "https://github.com/rust-lang/rust/commit/6463ecfe766c60c6dd671725f0ac52e88004f6c9"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "5cc8808be5dc13ccbed087c648afedd5ad7b10de", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs?ref=6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "patch": "@@ -1,19 +1,27 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n+// normalize-stderr-test \"alloc[0-9]+\" -> \"allocN\"\n \n #![feature(const_raw_ptr_deref)]\n #![feature(const_mut_refs)]\n-#![deny(const_err)] // FIXME: ICEs with allow! See #71316.\n+#![deny(const_err)] // The `allow` variant is tested by `mutable_const2`.\n+//~^ NOTE lint level\n+// Here we check that even though `MUTABLE_BEHIND_RAW` is created from a mutable\n+// allocation, we intern that allocation as *immutable* and reject writes to it.\n+// We avoid the `delay_span_bug` ICE by having compilation fail via the `deny` above.\n \n use std::cell::UnsafeCell;\n \n // make sure we do not just intern this as mutable\n const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n //~^ WARN: skipping const checks\n \n-const MUTATING_BEHIND_RAW: () = {\n+const MUTATING_BEHIND_RAW: () = { //~ NOTE\n     // Test that `MUTABLE_BEHIND_RAW` is actually immutable, by doing this at const time.\n     unsafe {\n         *MUTABLE_BEHIND_RAW = 99 //~ ERROR any use of this value will cause an error\n+        //~^ NOTE: which is read-only\n+        // FIXME would be good to match more of the error message here, but looks like we\n+        // normalize *after* checking the annoations here.\n     }\n };\n "}, {"sha": "34993247fca80c2aec65fdbf36a595a0528dc531", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.stderr", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr?ref=6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "patch": "@@ -1,25 +1,26 @@\n warning: skipping const checks\n-  --> $DIR/mutable_const.rs:10:38\n+  --> $DIR/mutable_const.rs:15:38\n    |\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    |                                      ^^^^^^^^^^^^^^^^^^^^\n \n error: any use of this value will cause an error\n-  --> $DIR/mutable_const.rs:16:9\n+  --> $DIR/mutable_const.rs:21:9\n    |\n LL | / const MUTATING_BEHIND_RAW: () = {\n LL | |     // Test that `MUTABLE_BEHIND_RAW` is actually immutable, by doing this at const time.\n LL | |     unsafe {\n LL | |         *MUTABLE_BEHIND_RAW = 99\n-   | |         ^^^^^^^^^^^^^^^^^^^^^^^^ writing to alloc2 which is read-only\n+   | |         ^^^^^^^^^^^^^^^^^^^^^^^^ writing to allocN which is read-only\n+...  |\n LL | |     }\n LL | | };\n    | |__-\n    |\n note: the lint level is defined here\n-  --> $DIR/mutable_const.rs:5:9\n+  --> $DIR/mutable_const.rs:6:9\n    |\n-LL | #![deny(const_err)] // FIXME: ICEs with allow! See #71316.\n+LL | #![deny(const_err)] // The `allow` variant is tested by `mutable_const2`.\n    |         ^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted"}, {"sha": "c2c7fb18e2a630ffb92f199b974e45a59a3b2ec0", "filename": "src/test/ui/consts/miri_unleashed/mutable_const2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const2.rs?ref=6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "patch": "@@ -3,7 +3,7 @@\n // rustc-env:RUST_BACKTRACE=0\n // normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n // normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n-// normalize-stderr-test \"interpret/intern.rs:[0-9]*:[0-9]*\" -> \"interpret/intern.rs:LL:CC\"\n+// normalize-stderr-test \"interpret/intern.rs:[0-9]+:[0-9]+\" -> \"interpret/intern.rs:LL:CC\"\n \n #![feature(const_raw_ptr_deref)]\n #![feature(const_mut_refs)]"}, {"sha": "9d8d5f513c76babf6a95c579f53be6b32e1d39b6", "filename": "src/test/ui/consts/miri_unleashed/mutable_references_ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b76b0e558d3d5b412b627e953a94e4a93a0ad2a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references_ice.rs?ref=6b76b0e558d3d5b412b627e953a94e4a93a0ad2a", "patch": "@@ -3,7 +3,7 @@\n // rustc-env:RUST_BACKTRACE=0\n // normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n // normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n-// normalize-stderr-test \"interpret/intern.rs:[0-9]*:[0-9]*\" -> \"interpret/intern.rs:LL:CC\"\n+// normalize-stderr-test \"interpret/intern.rs:[0-9]+:[0-9]+\" -> \"interpret/intern.rs:LL:CC\"\n \n #![allow(const_err)]\n "}]}