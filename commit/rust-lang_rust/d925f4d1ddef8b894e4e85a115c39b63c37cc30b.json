{"sha": "d925f4d1ddef8b894e4e85a115c39b63c37cc30b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MjVmNGQxZGRlZjhiODk0ZTRlODVhMTE1YzM5YjYzYzM3Y2MzMGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T21:51:33Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T21:51:33Z"}, "message": "fix truncated comment", "tree": {"sha": "710817272146582e83ea7ae0206d33ad41ea49f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/710817272146582e83ea7ae0206d33ad41ea49f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d925f4d1ddef8b894e4e85a115c39b63c37cc30b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d925f4d1ddef8b894e4e85a115c39b63c37cc30b", "html_url": "https://github.com/rust-lang/rust/commit/d925f4d1ddef8b894e4e85a115c39b63c37cc30b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d925f4d1ddef8b894e4e85a115c39b63c37cc30b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f549fe4fe4cef6d97982dbc891969285e436e73", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f549fe4fe4cef6d97982dbc891969285e436e73", "html_url": "https://github.com/rust-lang/rust/commit/4f549fe4fe4cef6d97982dbc891969285e436e73"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "9e88a632f5c3dc833d10733bfe4858c2b7fee395", "filename": "src/librustc_mir/borrow_check/nll/type_check/input_output.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d925f4d1ddef8b894e4e85a115c39b63c37cc30b/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d925f4d1ddef8b894e4e85a115c39b63c37cc30b/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Finput_output.rs?ref=d925f4d1ddef8b894e4e85a115c39b63c37cc30b", "patch": "@@ -134,7 +134,10 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n                 None\n             });\n \n-        // Finally\n+        // Finally, if we instantiated the anon types successfully, we\n+        // have to solve any bounds (e.g., `-> impl Iterator` needs to\n+        // prove that `T: Iterator` where `T` is the type we\n+        // instantiated it with).\n         if let Some(anon_type_map) = anon_type_map {\n             self.fully_perform_op(start_position.at_self(), |_cx| {\n                 infcx.constrain_anon_types(&anon_type_map, universal_regions);"}]}