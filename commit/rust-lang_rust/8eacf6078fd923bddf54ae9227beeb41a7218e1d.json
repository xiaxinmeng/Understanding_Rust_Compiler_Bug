{"sha": "8eacf6078fd923bddf54ae9227beeb41a7218e1d", "node_id": "C_kwDOAAsO6NoAKDhlYWNmNjA3OGZkOTIzYmRkZjU0YWU5MjI3YmVlYjQxYTcyMThlMWQ", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-04-01T11:47:01Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-04-01T11:47:01Z"}, "message": "update comment", "tree": {"sha": "b8ce40ccca5f011d5205f1a3a7a3bfd3f2dd9c9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8ce40ccca5f011d5205f1a3a7a3bfd3f2dd9c9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8eacf6078fd923bddf54ae9227beeb41a7218e1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8eacf6078fd923bddf54ae9227beeb41a7218e1d", "html_url": "https://github.com/rust-lang/rust/commit/8eacf6078fd923bddf54ae9227beeb41a7218e1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8eacf6078fd923bddf54ae9227beeb41a7218e1d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "796b82837116462377167b16a6d7627250aaa1b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/796b82837116462377167b16a6d7627250aaa1b0", "html_url": "https://github.com/rust-lang/rust/commit/796b82837116462377167b16a6d7627250aaa1b0"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "7c3d08b26bf54e38d46cf769f9306bdd793329a5", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8eacf6078fd923bddf54ae9227beeb41a7218e1d/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8eacf6078fd923bddf54ae9227beeb41a7218e1d/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=8eacf6078fd923bddf54ae9227beeb41a7218e1d", "patch": "@@ -292,8 +292,7 @@ pub enum ObligationCauseCode<'tcx> {\n         trait_item_def_id: DefId,\n     },\n \n-    /// Checking that this expression can be assigned where it needs to be\n-    // FIXME(eddyb) #11161 is the original Expr required?\n+    /// Checking that this expression can be assigned to its target.\n     ExprAssignable,\n \n     /// Computing common supertype in the arms of a match expression"}]}