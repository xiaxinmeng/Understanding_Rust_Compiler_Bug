{"sha": "ae60f9c59289adf8e46b2b3152f618caffc74bf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNjBmOWM1OTI4OWFkZjhlNDZiMmIzMTUyZjYxOGNhZmZjNzRiZjQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-09T17:24:48Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-09T17:24:48Z"}, "message": "rollup merge of #19592: jbranchaud/add-btreemap-iter-doctest\n\nI'm interested in including doctests for `BTreeMap`'s `iter_mut` and `into_iter` methods in this PR as well, but I am not sure of the best way to demonstrate/test what they do for the doctests.", "tree": {"sha": "ad591c0f23114beb7a1eaf82f24141eb37e060f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad591c0f23114beb7a1eaf82f24141eb37e060f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae60f9c59289adf8e46b2b3152f618caffc74bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae60f9c59289adf8e46b2b3152f618caffc74bf4", "html_url": "https://github.com/rust-lang/rust/commit/ae60f9c59289adf8e46b2b3152f618caffc74bf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae60f9c59289adf8e46b2b3152f618caffc74bf4/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ef9e980f8b7b584b001ef4e703fc8b2a1ab27a", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ef9e980f8b7b584b001ef4e703fc8b2a1ab27a", "html_url": "https://github.com/rust-lang/rust/commit/63ef9e980f8b7b584b001ef4e703fc8b2a1ab27a"}, {"sha": "9cb26e2db052601db95e242c7c29caa744886b11", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cb26e2db052601db95e242c7c29caa744886b11", "html_url": "https://github.com/rust-lang/rust/commit/9cb26e2db052601db95e242c7c29caa744886b11"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "86eaa04b3e2e381835761058b7ace660a5281bf1", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ae60f9c59289adf8e46b2b3152f618caffc74bf4/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae60f9c59289adf8e46b2b3152f618caffc74bf4/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=ae60f9c59289adf8e46b2b3152f618caffc74bf4", "patch": "@@ -1026,6 +1026,24 @@ impl<'a, K: Ord, V> OccupiedEntry<'a, K, V> {\n \n impl<K, V> BTreeMap<K, V> {\n     /// Gets an iterator over the entries of the map.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::BTreeMap;\n+    ///\n+    /// let mut map = BTreeMap::new();\n+    /// map.insert(1u, \"a\");\n+    /// map.insert(2u, \"b\");\n+    /// map.insert(3u, \"c\");\n+    ///\n+    /// for (key, value) in map.iter() {\n+    ///     println!(\"{}: {}\", key, value);\n+    /// }\n+    ///\n+    /// let (first_key, first_value) = map.iter().next().unwrap();\n+    /// assert_eq!((*first_key, *first_value), (1u, \"a\"));\n+    /// ```\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n     pub fn iter<'a>(&'a self) -> Entries<'a, K, V> {\n         let len = self.len();"}]}