{"sha": "3e9747af497d826aa863e5d47830d7cfc80d94d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOTc0N2FmNDk3ZDgyNmFhODYzZTVkNDc4MzBkN2NmYzgwZDk0ZDI=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-05-16T19:39:25Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-05-17T10:46:08Z"}, "message": "De-emph minimized spans, add better debugging output", "tree": {"sha": "dad24eff98726d0b951b1237ccde55afbd892f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dad24eff98726d0b951b1237ccde55afbd892f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e9747af497d826aa863e5d47830d7cfc80d94d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e9747af497d826aa863e5d47830d7cfc80d94d2", "html_url": "https://github.com/rust-lang/rust/commit/3e9747af497d826aa863e5d47830d7cfc80d94d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e9747af497d826aa863e5d47830d7cfc80d94d2/comments", "author": null, "committer": null, "parents": [{"sha": "ae1e73affed86261c25d78a83559ece534bbde21", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1e73affed86261c25d78a83559ece534bbde21", "html_url": "https://github.com/rust-lang/rust/commit/ae1e73affed86261c25d78a83559ece534bbde21"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "a758be71c47e8fa447d97a9333bbf69167839a85", "filename": "src/libsyntax/errors/emitter.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Flibsyntax%2Ferrors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Flibsyntax%2Ferrors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Femitter.rs?ref=3e9747af497d826aa863e5d47830d7cfc80d94d2", "patch": "@@ -526,6 +526,10 @@ impl Destination {\n             }\n             Style::OldSkoolNote => {\n                 self.start_attr(term::Attr::Bold)?;\n+                self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_GREEN))?;\n+            }\n+            Style::OldSkoolNoteText => {\n+                self.start_attr(term::Attr::Bold)?;\n             }\n             Style::UnderlinePrimary | Style::LabelPrimary => {\n                 self.start_attr(term::Attr::Bold)?;"}, {"sha": "188e676e7dff6d41d82d7f1681e6efb77d7eea6d", "filename": "src/libsyntax/errors/snippet/mod.rs", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs?ref=3e9747af497d826aa863e5d47830d7cfc80d94d2", "patch": "@@ -58,6 +58,9 @@ struct Annotation {\n     /// Is this annotation derived from primary span\n     is_primary: bool,\n \n+    /// Is this a large span minimized down to a smaller span\n+    is_minimized: bool,\n+\n     /// Optional label to display adjacent to the annotation.\n     label: Option<String>,\n }\n@@ -90,6 +93,7 @@ pub enum Style {\n     UnderlineSecondary,\n     LabelPrimary,\n     LabelSecondary,\n+    OldSkoolNoteText,\n     OldSkoolNote,\n     NoStyle,\n }\n@@ -383,10 +387,10 @@ impl FileInfo {\n         // Basically, although this loses information, multi-line spans just\n         // never look good.\n \n-        let (line, start_col, mut end_col) = if lines.len() == 1 {\n-            (lines[0].line_index, lines[0].start_col, lines[0].end_col)\n+        let (line, start_col, mut end_col, is_minimized) = if lines.len() == 1 {\n+            (lines[0].line_index, lines[0].start_col, lines[0].end_col, false)\n         } else {\n-            (lines[0].line_index, lines[0].start_col, CharPos(lines[0].start_col.0 + 1))\n+            (lines[0].line_index, lines[0].start_col, CharPos(lines[0].start_col.0 + 1), true)\n         };\n \n         // Watch out for \"empty spans\". If we get a span like 6..6, we\n@@ -402,6 +406,7 @@ impl FileInfo {\n         self.lines[index].push_annotation(start_col,\n                                           end_col,\n                                           is_primary,\n+                                          is_minimized,\n                                           label);\n     }\n \n@@ -498,6 +503,7 @@ impl FileInfo {\n                     match self.primary_span {\n                         Some(span) => {\n                             let lo = codemap.lookup_char_pos(span.lo);\n+                            let hi = codemap.lookup_char_pos(span.hi);\n                             //Before each secondary line in old skool-mode, print the label\n                             //as an old-style note\n                             if !line.annotations[0].is_primary {\n@@ -507,14 +513,15 @@ impl FileInfo {\n                                             text: lo.file.name.clone(),\n                                             style: Style::FileNameStyle,\n                                         }, StyledString {\n-                                            text: format!(\":{}:{}: \", lo.line, lo.col.0 + 1),\n+                                            text: format!(\":{}:{}: {}:{} \", lo.line, lo.col.0 + 1,\n+                                                hi.line, hi.col.0+1),\n                                             style: Style::LineAndColumn,\n                                         }, StyledString {\n                                             text: format!(\"note: \"),\n-                                            style: Style::LabelSecondary,\n+                                            style: Style::OldSkoolNote,\n                                         }, StyledString {\n                                             text: format!(\"{}\", ann),\n-                                            style: Style::OldSkoolNote,\n+                                            style: Style::OldSkoolNoteText,\n                                         }],\n                                         kind: RenderedLineKind::Annotations,\n                                     });\n@@ -621,15 +628,15 @@ impl FileInfo {\n                             if annotation.is_primary {\n                                 Style::UnderlinePrimary\n                             } else {\n-                                Style::UnderlineSecondary\n+                                Style::OldSkoolNote\n                             });\n                     }\n                     else {\n                         styled_buffer.putc(1, p, '~',\n                             if annotation.is_primary {\n                                 Style::UnderlinePrimary\n                             } else {\n-                                Style::UnderlineSecondary\n+                                Style::OldSkoolNote\n                             });\n                     }\n                 }\n@@ -638,10 +645,14 @@ impl FileInfo {\n                 for p in annotation.start_col .. annotation.end_col {\n                     if annotation.is_primary {\n                         styled_buffer.putc(1, p, '^', Style::UnderlinePrimary);\n-                        styled_buffer.set_style(0, p, Style::UnderlinePrimary);\n+                        if !annotation.is_minimized {\n+                            styled_buffer.set_style(0, p, Style::UnderlinePrimary);\n+                        }\n                     } else {\n                         styled_buffer.putc(1, p, '-', Style::UnderlineSecondary);\n-                        styled_buffer.set_style(0, p, Style::UnderlineSecondary);\n+                        if !annotation.is_minimized {\n+                            styled_buffer.set_style(0, p, Style::UnderlineSecondary);\n+                        }\n                     }\n                 }\n             }\n@@ -842,11 +853,13 @@ impl Line {\n                        start: CharPos,\n                        end: CharPos,\n                        is_primary: bool,\n+                       is_minimized: bool,\n                        label: Option<String>) {\n         self.annotations.push(Annotation {\n             start_col: start.0,\n             end_col: end.0,\n             is_primary: is_primary,\n+            is_minimized: is_minimized,\n             label: label,\n         });\n     }"}, {"sha": "665f304d69fa90825dd3c0c56f9b66b686047497", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=3e9747af497d826aa863e5d47830d7cfc80d94d2", "patch": "@@ -12,6 +12,7 @@ use errors::{Error, ErrorKind};\n use rustc_serialize::json;\n use std::str::FromStr;\n use std::path::Path;\n+use runtest::{fatal_proc_rec, ProcRes};\n \n // These structs are a subset of the ones found in\n // `syntax::errors::json`.\n@@ -55,13 +56,13 @@ struct DiagnosticCode {\n     explanation: Option<String>,\n }\n \n-pub fn parse_output(file_name: &str, output: &str) -> Vec<Error> {\n+pub fn parse_output(file_name: &str, output: &str, proc_res: &ProcRes) -> Vec<Error> {\n     output.lines()\n-          .flat_map(|line| parse_line(file_name, line))\n+          .flat_map(|line| parse_line(file_name, line, output, proc_res))\n           .collect()\n }\n \n-fn parse_line(file_name: &str, line: &str) -> Vec<Error> {\n+fn parse_line(file_name: &str, line: &str, output: &str, proc_res: &ProcRes) -> Vec<Error> {\n     // The compiler sometimes intermingles non-JSON stuff into the\n     // output.  This hack just skips over such lines. Yuck.\n     if line.chars().next() == Some('{') {\n@@ -72,7 +73,9 @@ fn parse_line(file_name: &str, line: &str) -> Vec<Error> {\n                 expected_errors\n             }\n             Err(error) => {\n-                panic!(\"failed to decode compiler output as json: `{}`\", error);\n+                fatal_proc_rec(None, &format!(\n+                    \"failed to decode compiler output as json: `{}`\\noutput: {}\\nline: {}\",\n+                    error, line, output), proc_res);\n             }\n         }\n     } else {"}, {"sha": "208057a423b2abff440f6c0fbc71bc6b6001edd2", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e9747af497d826aa863e5d47830d7cfc80d94d2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=3e9747af497d826aa863e5d47830d7cfc80d94d2", "patch": "@@ -1001,7 +1001,7 @@ actual:\\n\\\n         let expect_note = expected_errors.iter().any(|ee| ee.kind == Some(ErrorKind::Note));\n \n         // Parse the JSON output from the compiler and extract out the messages.\n-        let actual_errors = json::parse_output(&file_name, &proc_res.stderr);\n+        let actual_errors = json::parse_output(&file_name, &proc_res.stderr, &proc_res);\n         let mut unexpected = 0;\n         let mut not_found = 0;\n         let mut found = vec![false; expected_errors.len()];\n@@ -1528,7 +1528,7 @@ actual:\\n\\\n         self.error(err); panic!();\n     }\n \n-    fn fatal_proc_rec(&self, err: &str, proc_res: &ProcRes) -> ! {\n+    pub fn fatal_proc_rec(&self, err: &str, proc_res: &ProcRes) -> ! {\n         self.error(err);\n         print!(\"\\\n             status: {}\\n\\\n@@ -2197,7 +2197,7 @@ struct ProcArgs {\n     args: Vec<String>,\n }\n \n-struct ProcRes {\n+pub struct ProcRes {\n     status: Status,\n     stdout: String,\n     stderr: String,"}]}