{"sha": "898dfc680f22b0b07eb569384c5e947d2922d0d5", "node_id": "C_kwDOAAsO6NoAKDg5OGRmYzY4MGYyMmIwYjA3ZWI1NjkzODRjNWU5NDdkMjkyMmQwZDU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-05-26T21:53:14Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-05-26T22:25:37Z"}, "message": "Correctly handle multiple re-exports of bang macros at the same level", "tree": {"sha": "e208cc7ac846485d619f31f39325a880eda6d31b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e208cc7ac846485d619f31f39325a880eda6d31b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/898dfc680f22b0b07eb569384c5e947d2922d0d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/898dfc680f22b0b07eb569384c5e947d2922d0d5", "html_url": "https://github.com/rust-lang/rust/commit/898dfc680f22b0b07eb569384c5e947d2922d0d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/898dfc680f22b0b07eb569384c5e947d2922d0d5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c908d1e4decdb0a6db8280a48baa64f8344acab7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c908d1e4decdb0a6db8280a48baa64f8344acab7", "html_url": "https://github.com/rust-lang/rust/commit/c908d1e4decdb0a6db8280a48baa64f8344acab7"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "eb813af779ef66f402ea1ce4b8c218b7320853c7", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/898dfc680f22b0b07eb569384c5e947d2922d0d5/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898dfc680f22b0b07eb569384c5e947d2922d0d5/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=898dfc680f22b0b07eb569384c5e947d2922d0d5", "patch": "@@ -305,16 +305,22 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             return false;\n         }\n \n-        if !self.view_item_stack.insert(res_did) {\n+        let is_bang_macro = matches!(\n+            tcx.hir().get_by_def_id(res_did),\n+            Node::Item(&hir::Item { kind: hir::ItemKind::Macro(_, MacroKind::Bang), .. })\n+        );\n+\n+        if !self.view_item_stack.insert(res_did) && !is_bang_macro {\n             return false;\n         }\n \n         let ret = match tcx.hir().get_by_def_id(res_did) {\n             // Bang macros are handled a bit on their because of how they are handled by the\n             // compiler. If they have `#[doc(hidden)]` and the re-export doesn't have\n             // `#[doc(inline)]`, then we don't inline it.\n-            Node::Item(&hir::Item { kind: hir::ItemKind::Macro(_, MacroKind::Bang), .. })\n-                if !please_inline\n+            Node::Item(_)\n+                if is_bang_macro\n+                    && !please_inline\n                     && renamed.is_some()\n                     && self.cx.tcx.is_doc_hidden(ori_res_did) =>\n             {"}, {"sha": "47a21e39462251473ebb9fd6e72eb7166df16ece", "filename": "tests/rustdoc/reexport-hidden-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898dfc680f22b0b07eb569384c5e947d2922d0d5/tests%2Frustdoc%2Freexport-hidden-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898dfc680f22b0b07eb569384c5e947d2922d0d5/tests%2Frustdoc%2Freexport-hidden-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-hidden-macro.rs?ref=898dfc680f22b0b07eb569384c5e947d2922d0d5", "patch": "@@ -5,6 +5,7 @@\n \n // @has 'foo/index.html'\n // @has - '//*[@id=\"main-content\"]//a[@href=\"macro.Macro2.html\"]' 'Macro2'\n+// @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n \n // @has 'foo/macro.Macro2.html'\n // @has - '//*[@class=\"docblock\"]' 'Displayed'\n@@ -15,7 +16,6 @@ macro_rules! foo {\n     () => {};\n }\n \n-// @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n pub use crate::foo as Macro;\n /// Displayed\n #[doc(inline)]"}, {"sha": "b733716c22a3b65f62c8a7f21436b184ffbf11ea", "filename": "tests/rustdoc/reexport-of-doc-hidden.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/898dfc680f22b0b07eb569384c5e947d2922d0d5/tests%2Frustdoc%2Freexport-of-doc-hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898dfc680f22b0b07eb569384c5e947d2922d0d5/tests%2Frustdoc%2Freexport-of-doc-hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-of-doc-hidden.rs?ref=898dfc680f22b0b07eb569384c5e947d2922d0d5", "patch": "@@ -0,0 +1,42 @@\n+// This test ensures that all re-exports of doc hidden elements are displayed.\n+\n+#![crate_name = \"foo\"]\n+\n+#[doc(hidden)]\n+pub struct Bar;\n+\n+#[macro_export]\n+#[doc(hidden)]\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+// @has 'foo/index.html'\n+// @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n+pub use crate::foo as Macro;\n+// @has - '//*[@id=\"reexport.Macro2\"]/code' 'pub use crate::foo as Macro2;'\n+pub use crate::foo as Macro2;\n+// @has - '//*[@id=\"reexport.Boo\"]/code' 'pub use crate::Bar as Boo;'\n+pub use crate::Bar as Boo;\n+// @has - '//*[@id=\"reexport.Boo2\"]/code' 'pub use crate::Bar as Boo2;'\n+pub use crate::Bar as Boo2;\n+\n+pub fn fofo() {}\n+\n+// @has - '//*[@id=\"reexport.f1\"]/code' 'pub use crate::fofo as f1;'\n+pub use crate::fofo as f1;\n+// @has - '//*[@id=\"reexport.f2\"]/code' 'pub use crate::fofo as f2;'\n+pub use crate::fofo as f2;\n+\n+pub mod sub {\n+    // @has 'foo/sub/index.html'\n+    // @has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n+    pub use crate::foo as Macro;\n+    // @has - '//*[@id=\"reexport.Macro2\"]/code' 'pub use crate::foo as Macro2;'\n+    pub use crate::foo as Macro2;\n+\n+    // @has - '//*[@id=\"reexport.f1\"]/code' 'pub use crate::fofo as f1;'\n+    pub use crate::fofo as f1;\n+    // @has - '//*[@id=\"reexport.f2\"]/code' 'pub use crate::fofo as f2;'\n+    pub use crate::fofo as f2;\n+}"}]}