{"sha": "268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2OGE5ZmU1ZmIzZTZhYzFmNWJjM2YxYTc3ODRkYTc1MWNiNTZhZjg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T20:22:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T20:53:33Z"}, "message": "Initialize unique box locals from other locals\n\nIssue #409", "tree": {"sha": "82c169280a0966fe3c44ec6e238c8a56550761db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82c169280a0966fe3c44ec6e238c8a56550761db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "html_url": "https://github.com/rust-lang/rust/commit/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d5136df9f9ead38745e35752abdb59d5ce4991f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5136df9f9ead38745e35752abdb59d5ce4991f", "html_url": "https://github.com/rust-lang/rust/commit/5d5136df9f9ead38745e35752abdb59d5ce4991f"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "555236e6415a1a57d2e80b6bdab3f4781164f619", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "patch": "@@ -2030,11 +2030,11 @@ fn copy_val_no_check(cx: @block_ctxt, action: copy_action, dst: ValueRef,\n         ret take_ty(bcx, dst, t);\n     }\n     if ty::type_is_unique_box(ccx.tcx, t) {\n-        //let bcx = cx;\n+        let bcx = cx;\n         // FIXME (409): Write a test and uncomment\n         //if action == DROP_EXISTING { bcx = drop_ty(cx, dst, t); }\n-        //ret trans_uniq::copy_val(bcx, dst, src, t);\n-        fail;\n+        check trans_uniq::type_is_unique_box(bcx, t);\n+        ret trans_uniq::copy_val(bcx, dst, src, t);\n     }\n     if type_is_structural_or_param(ccx.tcx, t) || ty::type_is_vec(ccx.tcx, t)\n         {"}, {"sha": "a26e322472327e36284ac2b0a3802e49c3eadb16", "filename": "src/comp/middle/trans_uniq.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs?ref=268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "patch": "@@ -15,7 +15,7 @@ import trans::{\n     new_sub_block_ctxt\n };\n \n-export trans_uniq, make_free_glue, type_is_unique_box;\n+export trans_uniq, make_free_glue, type_is_unique_box, copy_val;\n \n pure fn type_is_unique_box(bcx: @block_ctxt, ty: ty::t) -> bool {\n     unchecked {\n@@ -35,6 +35,8 @@ fn trans_uniq(cx: @block_ctxt, contents: @ast::expr,\n     let content_ty = content_ty(bcx, uniq_ty);\n     let {bcx, val: llptr} = alloc_uniq(bcx, uniq_ty);\n \n+    add_clean_temp(bcx, llptr, uniq_ty);\n+\n     bcx = move_val_if_temp(bcx, INIT, llptr, lv,\n                            content_ty);\n \n@@ -56,8 +58,6 @@ fn alloc_uniq(cx: @block_ctxt, uniq_ty: ty::t)\n     bcx = r.bcx;\n     let llptr = r.val;\n \n-    add_clean_temp(bcx, llptr, uniq_ty);\n-\n     ret rslt(bcx, llptr);\n }\n \n@@ -86,4 +86,18 @@ fn content_ty(bcx: @block_ctxt, t: ty::t)\n     alt ty::struct(bcx_tcx(bcx), t) {\n       ty::ty_uniq({ty: ct, _}) { ct }\n     }\n+}\n+\n+fn copy_val(cx: @block_ctxt, dst: ValueRef, src: ValueRef,\n+            ty: ty::t) : type_is_unique_box(cx, ty) -> @block_ctxt {\n+\n+    let content_ty = content_ty(cx, ty);\n+    let {bcx, val: llptr} = alloc_uniq(cx, ty);\n+    Store(bcx, llptr, dst);\n+\n+    let src = Load(bcx, src);\n+    let dst = Load(bcx, dst);\n+    let bcx = trans::copy_val(bcx, INIT, dst, src, content_ty);\n+    Store(bcx, src, llptr);\n+    ret bcx;\n }\n\\ No newline at end of file"}, {"sha": "d9808b6f50d31b9d31c950fa60d9adf91ed62bdf", "filename": "src/test/run-pass/unique-decl-init-copy.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Ftest%2Frun-pass%2Funique-decl-init-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Ftest%2Frun-pass%2Funique-decl-init-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-decl-init-copy.rs?ref=268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    let i = ~mutable 1;\n+    // Should be a copy\n+    let j = i;\n+    *i = 2;\n+    *j = 3;\n+    assert *i == 2;\n+    assert *j == 3;\n+}\n\\ No newline at end of file"}, {"sha": "d8c6447396c072cc74f7d2aa46c0d5a903e71b09", "filename": "src/test/run-pass/unique-decl-init.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Ftest%2Frun-pass%2Funique-decl-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8/src%2Ftest%2Frun-pass%2Funique-decl-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-decl-init.rs?ref=268a9fe5fb3e6ac1f5bc3f1a7784da751cb56af8", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let i = ~1;\n+    let j = i;\n+    assert *j == 1;\n+}\n\\ No newline at end of file"}]}