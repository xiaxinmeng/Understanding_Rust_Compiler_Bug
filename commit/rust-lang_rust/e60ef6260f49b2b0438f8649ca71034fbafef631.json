{"sha": "e60ef6260f49b2b0438f8649ca71034fbafef631", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MGVmNjI2MGY0OWIyYjA0MzhmODY0OWNhNzEwMzRmYmFmZWY2MzE=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-31T13:39:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-31T18:04:38Z"}, "message": "Fix typos", "tree": {"sha": "76bcd8e2251e708325a9e30cbb14cfc83e1b939f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76bcd8e2251e708325a9e30cbb14cfc83e1b939f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e60ef6260f49b2b0438f8649ca71034fbafef631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e60ef6260f49b2b0438f8649ca71034fbafef631", "html_url": "https://github.com/rust-lang/rust/commit/e60ef6260f49b2b0438f8649ca71034fbafef631", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e60ef6260f49b2b0438f8649ca71034fbafef631/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3068af79ffd23656ff2d46ac92d9192ce6c813fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3068af79ffd23656ff2d46ac92d9192ce6c813fb", "html_url": "https://github.com/rust-lang/rust/commit/3068af79ffd23656ff2d46ac92d9192ce6c813fb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6dc89cb43f133cd31d6244b289489fdd867b924b", "filename": "crates/ra_analysis/src/syntax_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e60ef6260f49b2b0438f8649ca71034fbafef631/crates%2Fra_analysis%2Fsrc%2Fsyntax_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e60ef6260f49b2b0438f8649ca71034fbafef631/crates%2Fra_analysis%2Fsrc%2Fsyntax_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsyntax_ptr.rs?ref=e60ef6260f49b2b0438f8649ca71034fbafef631", "patch": "@@ -23,7 +23,7 @@ fn resolve_syntax_ptr(db: &impl SyntaxDatabase, ptr: SyntaxPtr) -> SyntaxNode {\n }\n \n /// SyntaxPtr is a cheap `Copy` id which identifies a particular syntax node,\n-/// without retainig syntax tree in memory. You need to explicitelly `resovle`\n+/// without retaining syntax tree in memory. You need to explicitly `resolve`\n /// `SyntaxPtr` to get a `SyntaxNode`\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub(crate) struct SyntaxPtr {\n@@ -80,7 +80,7 @@ impl LocalSyntaxPtr {\n             }\n             curr = curr.children()\n                 .find(|it| self.range.is_subrange(&it.range()))\n-                .unwrap_or_else(|| panic!(\"can't resovle local ptr to SyntaxNode: {:?}\", self))\n+                .unwrap_or_else(|| panic!(\"can't resolve local ptr to SyntaxNode: {:?}\", self))\n         }\n     }\n }"}]}