{"sha": "ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZTBhNzFiOWViYzlkOGM4N2EwNmRiZDk1Y2E0MWVmN2E0ZjkzZTQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-01-29T19:47:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-02-03T16:52:57Z"}, "message": "Remove incorrect `delay_span_bug`\n\nThe following code is supposed to compile\n\n```rust\nuse std::ops::BitOr;\n\npub trait IntWrapper {\n    type InternalStorage;\n}\n\nimpl<T> BitOr for dyn IntWrapper<InternalStorage = T>\nwhere\n    Self: Sized,\n    T: BitOr + BitOr<Output = T>,\n{\n    type Output = Self;\n    fn bitor(self, _other: Self) -> Self {\n        todo!()\n    }\n}\n```\n\nBefore this change it would ICE. In #70998 the removed logic was added\nto provide better suggestions, and the `delay_span_bug` guard was added\nto  protect against a potential logic error when returning traits. As it\nhappens, there are cases, like the one above, where traits can indeed be\nreturned, so valid code was being rejected.\n\nFix #80207.", "tree": {"sha": "3bc3ba685de954507a34943f6f275cba674925a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bc3ba685de954507a34943f6f275cba674925a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "html_url": "https://github.com/rust-lang/rust/commit/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81f5811f96fe750ab28c15219d1b0dba6b1dc90", "url": "https://api.github.com/repos/rust-lang/rust/commits/b81f5811f96fe750ab28c15219d1b0dba6b1dc90", "html_url": "https://github.com/rust-lang/rust/commit/b81f5811f96fe750ab28c15219d1b0dba6b1dc90"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "9c8b09823e5db8fc6912c9ad8880f692b4ecd6f8", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "patch": "@@ -192,7 +192,6 @@ pub(super) fn check_fn<'a, 'tcx>(\n         // possible cases.\n         fcx.check_expr(&body.value);\n         fcx.require_type_is_sized(declared_ret_ty, decl.output.span(), traits::SizedReturnType);\n-        tcx.sess.delay_span_bug(decl.output.span(), \"`!Sized` return type\");\n     } else {\n         fcx.require_type_is_sized(declared_ret_ty, decl.output.span(), traits::SizedReturnType);\n         fcx.check_return_expr(&body.value);"}, {"sha": "75430da1482398b111a8e4a1dd2a780ebe9aa0da", "filename": "src/test/ui/typeck/issue-80207-unsized-return.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4/src%2Ftest%2Fui%2Ftypeck%2Fissue-80207-unsized-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4/src%2Ftest%2Fui%2Ftypeck%2Fissue-80207-unsized-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-80207-unsized-return.rs?ref=ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "patch": "@@ -0,0 +1,20 @@\n+// check-pass\n+\n+trait Foo {\n+    fn do_stuff() -> Self;\n+}\n+\n+trait Bar {\n+    type Output;\n+}\n+\n+impl<T> Foo for dyn Bar<Output = T>\n+where\n+    Self: Sized,\n+{\n+    fn do_stuff() -> Self {\n+        todo!()\n+    }\n+}\n+\n+fn main() {}"}]}