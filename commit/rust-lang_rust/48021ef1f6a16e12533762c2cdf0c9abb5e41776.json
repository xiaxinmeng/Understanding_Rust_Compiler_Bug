{"sha": "48021ef1f6a16e12533762c2cdf0c9abb5e41776", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MDIxZWYxZjZhMTZlMTI1MzM3NjJjMmNkZjBjOWFiYjVlNDE3NzY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-04T18:21:14Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-04T18:21:14Z"}, "message": "Fix horrible rule-hijacking bug that was causing compile-fail targets to trigger honest compile attempts.", "tree": {"sha": "c811c34b9ff01cd7bc16146edcc32fd5dada5fa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c811c34b9ff01cd7bc16146edcc32fd5dada5fa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48021ef1f6a16e12533762c2cdf0c9abb5e41776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48021ef1f6a16e12533762c2cdf0c9abb5e41776", "html_url": "https://github.com/rust-lang/rust/commit/48021ef1f6a16e12533762c2cdf0c9abb5e41776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48021ef1f6a16e12533762c2cdf0c9abb5e41776/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "456398a403514a13f1df5485b3b13a0719800708", "url": "https://api.github.com/repos/rust-lang/rust/commits/456398a403514a13f1df5485b3b13a0719800708", "html_url": "https://github.com/rust-lang/rust/commit/456398a403514a13f1df5485b3b13a0719800708"}], "stats": {"total": 47, "additions": 14, "deletions": 33}, "files": [{"sha": "64185eeb52fe07d0ab1ca1be981c26171c16d0c2", "filename": "mk/tests.mk", "status": "modified", "additions": 14, "deletions": 33, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/48021ef1f6a16e12533762c2cdf0c9abb5e41776/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/48021ef1f6a16e12533762c2cdf0c9abb5e41776/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=48021ef1f6a16e12533762c2cdf0c9abb5e41776", "patch": "@@ -95,12 +95,6 @@ TEST_RFAIL_OUTS_STAGE1 = \\\n TEST_RFAIL_OUTS_STAGE2 = \\\n   $(TEST_RFAIL_EXES_STAGE0:.stage2$(X)=.stage2.out)\n \n-TEST_RFAIL_TMPS_STAGE0 = \\\n-  $(TEST_RFAIL_EXES_STAGE0:.stage0$(X)=.stage0$(X).tmp)\n-TEST_RFAIL_TMPS_STAGE1 = \\\n-  $(TEST_RFAIL_EXES_STAGE1:.stage1$(X)=.stage1$(X).tmp)\n-TEST_RFAIL_TMPS_STAGE2 = \\\n-  $(TEST_RFAIL_EXES_STAGE2:.stage2$(X)=.stage2$(X).tmp)\n \n TEST_CFAIL_CRATES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RC))\n TEST_CFAIL_CRATES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(CFAIL_RC))\n@@ -109,29 +103,15 @@ TEST_CFAIL_SOURCES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RS))\n TEST_CFAIL_SOURCES_STAGE1 = $(filter-out $(TEST_XFAILS_STAGE1), $(CFAIL_RS))\n TEST_CFAIL_SOURCES_STAGE2 = $(filter-out $(TEST_XFAILS_STAGE2), $(CFAIL_RS))\n \n-TEST_CFAIL_EXES_STAGE0 = \\\n-  $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE0:.rc=.stage0$(X))) \\\n-  $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE0:.rs=.stage0$(X)))\n-TEST_CFAIL_EXES_STAGE1 = \\\n-  $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE1:.rc=.stage1$(X))) \\\n-  $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE1:.rs=.stage1$(X)))\n-TEST_CFAIL_EXES_STAGE2 = \\\n-  $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE2:.rc=.stage2$(X))) \\\n-  $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE2:.rs=.stage2$(X)))\n-\n TEST_CFAIL_OUTS_STAGE0 = \\\n-  $(TEST_CFAIL_EXES_STAGE0:.stage0$(X)=.stage0.out)\n+  $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE0:.rc=.stage0.out)) \\\n+  $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE0:.rs=.stage0.out))\n TEST_CFAIL_OUTS_STAGE1 = \\\n-  $(TEST_CFAIL_EXES_STAGE1:.stage1$(X)=.stage1.out)\n+  $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE1:.rc=.stage1.out)) \\\n+  $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE1:.rs=.stage1.out))\n TEST_CFAIL_OUTS_STAGE2 = \\\n-  $(TEST_CFAIL_EXES_STAGE0:.stage2$(X)=.stage2.out)\n-\n-TEST_CFAIL_TMPS_STAGE0 = \\\n-  $(TEST_CFAIL_EXES_STAGE0:.stage0$(X)=.stage0$(X).tmp)\n-TEST_CFAIL_TMPS_STAGE1 = \\\n-  $(TEST_CFAIL_EXES_STAGE1:.stage1$(X)=.stage1$(X).tmp)\n-TEST_CFAIL_TMPS_STAGE0 = \\\n-  $(TEST_CFAIL_EXES_STAGE2:.stage2$(X)=.stage2$(X).tmp)\n+  $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE2:.rc=.stage2.out)) \\\n+  $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE2:.rs=.stage2.out))\n \n \n ALL_TEST_CRATES =  $(TEST_CFAIL_CRATES_STAGE0) \\\n@@ -163,6 +143,7 @@ check_nocompile: $(TEST_CFAIL_OUTS_STAGE0) \\\n                  $(TEST_CFAIL_OUTS_STAGE1) \\\n                  $(TEST_CFAIL_OUTS_STAGE2)\n \n+\n check: tidy \\\n        $(TEST_RPASS_EXES_STAGE0) $(TEST_RFAIL_EXES_STAGE0) \\\n        $(TEST_RPASS_OUTS_STAGE0) $(TEST_RFAIL_OUTS_STAGE0) \\\n@@ -265,7 +246,7 @@ test/bench/99-bottles/%.out.tmp: test/bench/99-bottles/%$(X) \\\n test/run-fail/%.out.tmp: test/run-fail/%$(X) \\\n                          rt/$(CFG_RUNTIME)\n \t$(Q)rm -f $<.tmp\n-\t@$(call E, run: $@)\n+\t@$(call E, run-fail: $@)\n \t$(Q)grep -q error-pattern $(S)src/test/run-fail/$(basename $*).rs\n \t$(Q)rm -f $@\n \t$(Q)$(call CFG_RUN_TEST, $<) >$@ 2>&1 ; X=$$? ; \\\n@@ -275,25 +256,25 @@ test/run-fail/%.out.tmp: test/run-fail/%$(X) \\\n         | cut -d : -f 2- | tr -d '\\n\\r')\" $@\n \n test/compile-fail/%.stage0.out.tmp: test/compile-fail/%.rs $(SREQ0)\n-\t@$(call E, compile [stage0]: $@)\n+\t@$(call E, compile-fail [stage0]: $@)\n \t$(Q)grep -q error-pattern $<\n \t$(Q)rm -f $@\n-\t$(STAGE0) -o $(@:.out=$(X)) $< >$@ 2>&1; test $$? -ne 0\n+\t$(STAGE0) -c -o $(@:.o=$(X)) $< >$@ 2>&1; test $$? -ne 0\n \t$(Q)grep --text --quiet \\\n       \"$$(grep error-pattern $< | cut -d : -f 2- | tr -d '\\n\\r')\" $@\n \n test/compile-fail/%.stage1.out.tmp: test/compile-fail/%.rs $(SREQ1)\n-\t@$(call E, compile [stage1]: $@)\n+\t@$(call E, compile-fail [stage1]: $@)\n \t$(Q)grep -q error-pattern $<\n \t$(Q)rm -f $@\n-\t$(STAGE1) -o $(@:.out=$(X)) $< >$@ 2>&1; test $$? -ne 0\n+\t$(STAGE1) -c -o $(@:.o=$(X)) $< >$@ 2>&1; test $$? -ne 0\n \t$(Q)grep --text --quiet \\\n       \"$$(grep error-pattern $< | cut -d : -f 2- | tr -d '\\n\\r')\" $@\n \n test/compile-fail/%.stage2.out.tmp: test/compile-fail/%.rs $(SREQ2)\n-\t@$(call E, compile [stage2]: $@)\n+\t@$(call E, compile-fail [stage2]: $@)\n \t$(Q)grep -q error-pattern $<\n \t$(Q)rm -f $@\n-\t$(STAGE2) -o $(@:.out=$(X)) $< >$@ 2>&1; test $$? -ne 0\n+\t$(STAGE2) -c -o $(@:.o=$(X)) $< >$@ 2>&1; test $$? -ne 0\n \t$(Q)grep --text --quiet \\\n       \"$$(grep error-pattern $< | cut -d : -f 2- | tr -d '\\n\\r')\" $@"}]}