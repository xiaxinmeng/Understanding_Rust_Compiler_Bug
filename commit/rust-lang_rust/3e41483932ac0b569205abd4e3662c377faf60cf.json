{"sha": "3e41483932ac0b569205abd4e3662c377faf60cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNDE0ODM5MzJhYzBiNTY5MjA1YWJkNGUzNjYyYzM3N2ZhZjYwY2Y=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-29T22:05:03Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-29T22:10:30Z"}, "message": "Remove `.clone()`", "tree": {"sha": "755e5f9cdceb08150b4a2dd5fcbdfa0f37e9d630", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/755e5f9cdceb08150b4a2dd5fcbdfa0f37e9d630"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e41483932ac0b569205abd4e3662c377faf60cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e41483932ac0b569205abd4e3662c377faf60cf", "html_url": "https://github.com/rust-lang/rust/commit/3e41483932ac0b569205abd4e3662c377faf60cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e41483932ac0b569205abd4e3662c377faf60cf/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cb73da9499938e6f09736e4b6fba33474c3ce9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb73da9499938e6f09736e4b6fba33474c3ce9c", "html_url": "https://github.com/rust-lang/rust/commit/3cb73da9499938e6f09736e4b6fba33474c3ce9c"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "2f42f877ca58eb9748398858c337a1917b2bca2e", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3e41483932ac0b569205abd4e3662c377faf60cf/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e41483932ac0b569205abd4e3662c377faf60cf/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=3e41483932ac0b569205abd4e3662c377faf60cf", "patch": "@@ -43,11 +43,11 @@ pub enum PathResolution {\n }\n \n impl PathResolution {\n-    fn in_type_ns(self) -> Option<TypeNs> {\n+    fn in_type_ns(&self) -> Option<TypeNs> {\n         match self {\n-            PathResolution::Def(ModuleDef::Adt(adt)) => Some(TypeNs::AdtId(adt.into())),\n+            PathResolution::Def(ModuleDef::Adt(adt)) => Some(TypeNs::AdtId((*adt).into())),\n             PathResolution::Def(ModuleDef::BuiltinType(builtin)) => {\n-                Some(TypeNs::BuiltinType(builtin))\n+                Some(TypeNs::BuiltinType(*builtin))\n             }\n             PathResolution::Def(ModuleDef::Const(_)) => None,\n             PathResolution::Def(ModuleDef::EnumVariant(_)) => None,\n@@ -56,16 +56,16 @@ impl PathResolution {\n             PathResolution::Def(ModuleDef::Static(_)) => None,\n             PathResolution::Def(ModuleDef::Trait(_)) => None,\n             PathResolution::Def(ModuleDef::TypeAlias(alias)) => {\n-                Some(TypeNs::TypeAliasId(alias.into()))\n+                Some(TypeNs::TypeAliasId((*alias).into()))\n             }\n             PathResolution::Local(_) => None,\n-            PathResolution::TypeParam(param) => Some(TypeNs::GenericParam(param.into())),\n-            PathResolution::SelfType(impl_def) => Some(TypeNs::SelfType(impl_def.into())),\n+            PathResolution::TypeParam(param) => Some(TypeNs::GenericParam((*param).into())),\n+            PathResolution::SelfType(impl_def) => Some(TypeNs::SelfType((*impl_def).into())),\n             PathResolution::Macro(_) => None,\n             PathResolution::AssocItem(AssocItem::Const(_)) => None,\n             PathResolution::AssocItem(AssocItem::Function(_)) => None,\n             PathResolution::AssocItem(AssocItem::TypeAlias(alias)) => {\n-                Some(TypeNs::TypeAliasId(alias.into()))\n+                Some(TypeNs::TypeAliasId((*alias).into()))\n             }\n         }\n     }\n@@ -77,7 +77,7 @@ impl PathResolution {\n         db: &dyn HirDatabase,\n         mut cb: impl FnMut(TypeAlias) -> Option<R>,\n     ) -> Option<R> {\n-        if let Some(res) = self.clone().in_type_ns() {\n+        if let Some(res) = self.in_type_ns() {\n             associated_type_shorthand_candidates(db, res, |_, _, id| cb(id.into()))\n         } else {\n             None"}]}