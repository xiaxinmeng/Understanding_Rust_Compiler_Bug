{"sha": "76d04af71a64e9c79ea21c8d4b956ef0591e3c61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZDA0YWY3MWE2NGU5Yzc5ZWEyMWM4ZDRiOTU2ZWYwNTkxZTNjNjE=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-08-08T18:46:06Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-08-08T19:01:19Z"}, "message": "In decoder, rename class_member_id to item_def_id.", "tree": {"sha": "720b4150bab42d4cc34c0e40385cfbd0e78778ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/720b4150bab42d4cc34c0e40385cfbd0e78778ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d04af71a64e9c79ea21c8d4b956ef0591e3c61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d04af71a64e9c79ea21c8d4b956ef0591e3c61", "html_url": "https://github.com/rust-lang/rust/commit/76d04af71a64e9c79ea21c8d4b956ef0591e3c61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d04af71a64e9c79ea21c8d4b956ef0591e3c61/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c86c1e71fd17d88f0d3ffdf31987db5876dcd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/19c86c1e71fd17d88f0d3ffdf31987db5876dcd2", "html_url": "https://github.com/rust-lang/rust/commit/19c86c1e71fd17d88f0d3ffdf31987db5876dcd2"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "d9567fd1b70af58b9bbe681d908c3ac425b95016", "filename": "src/rustc/metadata/decoder.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/76d04af71a64e9c79ea21c8d4b956ef0591e3c61/src%2Frustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d04af71a64e9c79ea21c8d4b956ef0591e3c61/src%2Frustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fdecoder.rs?ref=76d04af71a64e9c79ea21c8d4b956ef0591e3c61", "patch": "@@ -122,8 +122,7 @@ fn item_parent_item(d: ebml::doc) -> option<ast::def_id> {\n     none\n }\n \n-// XXX: This has nothing to do with classes.\n-fn class_member_id(d: ebml::doc, cdata: cmd) -> ast::def_id {\n+fn item_def_id(d: ebml::doc, cdata: cmd) -> ast::def_id {\n     let tagdoc = ebml::get_doc(d, tag_def_id);\n     return translate_def_id(cdata, ebml::with_doc_data(tagdoc,\n                                                     |d| parse_def_id(d)));\n@@ -358,7 +357,7 @@ fn get_class_method(cdata: cmd, id: ast::node_id,\n                               when looking up method %s\", *name})\n     };\n     for ebml::tagged_docs(cls_items, tag_item_trait_method) |mid| {\n-        let m_did = class_member_id(mid, cdata);\n+        let m_did = item_def_id(mid, cdata);\n         if item_name(mid) == name {\n             found = some(m_did);\n         }\n@@ -432,7 +431,7 @@ fn each_path(cdata: cmd, f: fn(path_entry) -> bool) {\n                                                      ~\"::\");\n             if name != ~\"\" {\n                 // Extract the def ID.\n-                let def_id = class_member_id(item_doc, cdata);\n+                let def_id = item_def_id(item_doc, cdata);\n \n                 // Construct the def for this item.\n                 debug!{\"(each_path) yielding explicit item: %s\", name};\n@@ -467,7 +466,7 @@ fn each_path(cdata: cmd, f: fn(path_entry) -> bool) {\n             let path = item_name(path_doc);\n \n             // Extract the def ID.\n-            let def_id = class_member_id(path_doc, cdata);\n+            let def_id = item_def_id(path_doc, cdata);\n \n             // Get the item.\n             match maybe_find_item(def_id.node, items) {\n@@ -738,7 +737,7 @@ fn get_class_members(cdata: cmd, id: ast::node_id,\n        let f = item_family(an_item);\n        if p(f) {\n           let name = item_name(an_item);\n-          let did = class_member_id(an_item, cdata);\n+          let did = item_def_id(an_item, cdata);\n           let mt = field_mutability(an_item);\n           vec::push(result, {ident: name, id: did, vis:\n                   family_to_visibility(f), mutability: mt});"}]}