{"sha": "504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNGVjOGIwMGRlYzc1MjdiZmQxZjRiZTc4MjIzYzlmZDhiNjQ4M2M=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-18T19:22:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-18T20:09:50Z"}, "message": "Rename some vec upcalls and trans functions from vec* to evec*", "tree": {"sha": "fefd4560ea3a03f8930cf080792665e33e451ec0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fefd4560ea3a03f8930cf080792665e33e451ec0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "html_url": "https://github.com/rust-lang/rust/commit/504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7903daf86fc73a0b56d3ff0b1541d79f3540700e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7903daf86fc73a0b56d3ff0b1541d79f3540700e", "html_url": "https://github.com/rust-lang/rust/commit/7903daf86fc73a0b56d3ff0b1541d79f3540700e"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "40e365612d67e44f970d83270394c7b9dd631da5", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "patch": "@@ -37,7 +37,7 @@ type upcalls =\n      shared_free: ValueRef,\n      mark: ValueRef,\n      new_str: ValueRef,\n-     vec_append: ValueRef,\n+     evec_append: ValueRef,\n      get_type_desc: ValueRef,\n      ivec_resize: ValueRef,\n      ivec_spill: ValueRef,\n@@ -83,8 +83,8 @@ fn declare_upcalls(_tn: type_names, tydesc_type: TypeRef,\n           shared_free: dv(\"shared_free\", ~[T_ptr(T_i8())]),\n           mark: d(\"mark\", ~[T_ptr(T_i8())], T_int()),\n           new_str: d(\"new_str\", ~[T_ptr(T_i8()), T_size_t()], T_ptr(T_str())),\n-          vec_append:\n-              d(\"vec_append\",\n+          evec_append:\n+              d(\"evec_append\",\n                 ~[T_ptr(tydesc_type), T_ptr(tydesc_type),\n                   T_ptr(T_opaque_vec_ptr()), T_opaque_vec_ptr(), T_bool()],\n                 T_void()),"}, {"sha": "8814e29da759ba3325970aadb61fa2df4441cb3a", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "patch": "@@ -2542,7 +2542,8 @@ fn trans_compare(cx: &@block_ctxt, op: ast::binop,\n     }\n }\n \n-fn trans_vec_append(cx: &@block_ctxt, t: &ty::t, lhs: ValueRef, rhs: ValueRef)\n+fn trans_evec_append(cx: &@block_ctxt, t: &ty::t,\n+                     lhs: ValueRef, rhs: ValueRef)\n    -> result {\n     let elt_ty = ty::sequence_element_type(bcx_tcx(cx), t);\n     let skip_null = C_bool(false);\n@@ -2563,7 +2564,7 @@ fn trans_vec_append(cx: &@block_ctxt, t: &ty::t, lhs: ValueRef, rhs: ValueRef)\n     let dst = bcx.build.PointerCast(lhs, T_ptr(T_opaque_vec_ptr()));\n     let src = bcx.build.PointerCast(rhs, T_opaque_vec_ptr());\n     ret rslt(bcx,\n-             bcx.build.Call(bcx_ccx(cx).upcalls.vec_append,\n+             bcx.build.Call(bcx_ccx(cx).upcalls.evec_append,\n                             ~[cx.fcx.lltaskptr, llvec_tydesc.val,\n                               llelt_tydesc.val, dst, src, skip_null]));\n }\n@@ -3170,12 +3171,13 @@ mod ivec {\n     }\n }\n \n-fn trans_vec_add(cx: &@block_ctxt, t: &ty::t, lhs: ValueRef, rhs: ValueRef) ->\n+fn trans_evec_add(cx: &@block_ctxt, t: &ty::t,\n+                  lhs: ValueRef, rhs: ValueRef) ->\n    result {\n     let r = alloc_ty(cx, t);\n     let tmp = r.val;\n     r = copy_val(r.bcx, INIT, tmp, lhs, t);\n-    let bcx = trans_vec_append(r.bcx, t, tmp, rhs).bcx;\n+    let bcx = trans_evec_append(r.bcx, t, tmp, rhs).bcx;\n     tmp = load_if_immediate(bcx, tmp, t);\n     add_clean_temp(cx, tmp, t);\n     ret rslt(bcx, tmp);\n@@ -3209,7 +3211,7 @@ fn trans_eager_binop(cx: &@block_ctxt, op: ast::binop, lhs: ValueRef,\n             if ty::sequence_is_interior(bcx_tcx(cx), intype) {\n                 ret ivec::trans_add(cx, intype, lhs, rhs);\n             }\n-            ret trans_vec_add(cx, intype, lhs, rhs);\n+            ret trans_evec_add(cx, intype, lhs, rhs);\n         }\n         if is_float {\n             ret rslt(cx, cx.build.FAdd(lhs, rhs));\n@@ -5028,7 +5030,7 @@ fn trans_expr_out(cx: &@block_ctxt, e: &@ast::expr, output: out_method) ->\n                     ret ivec::trans_append(rhs_res.bcx, t, lhs_res.res.val,\n                                            rhs_res.val);\n                 }\n-                ret trans_vec_append(rhs_res.bcx, t, lhs_res.res.val,\n+                ret trans_evec_append(rhs_res.bcx, t, lhs_res.res.val,\n                                      rhs_res.val);\n               }\n               _ { }"}, {"sha": "82c7dd108f43a7c77ed91cef0856e55b9ffc536d", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "patch": "@@ -308,8 +308,8 @@ copy_elements(rust_task *task, type_desc *elem_t,\n }\n \n extern \"C\" CDECL void\n-upcall_vec_append(rust_task *task, type_desc *t, type_desc *elem_t,\n-                  rust_vec **dst_ptr, rust_vec *src, bool skip_null)\n+upcall_evec_append(rust_task *task, type_desc *t, type_desc *elem_t,\n+                   rust_vec **dst_ptr, rust_vec *src, bool skip_null)\n {\n     LOG_UPCALL_ENTRY(task);\n     rust_vec *dst = *dst_ptr;\n@@ -338,6 +338,12 @@ upcall_vec_append(rust_task *task, type_desc *t, type_desc *elem_t,\n     *dst_ptr = new_vec;\n }\n \n+// FIXME: Transitional. Please remove.\n+extern \"C\" CDECL void\n+upcall_vec_append(rust_task *task, type_desc *t, type_desc *elem_t,\n+                  rust_vec **dst_ptr, rust_vec *src, bool skip_null) {\n+    upcall_evec_append(task, t, elem_t, dst_ptr, src, skip_null);\n+}\n \n extern \"C\" CDECL type_desc *\n upcall_get_type_desc(rust_task *task,"}, {"sha": "ec3cb60c6c2b5234e7daab21a0e056f91a431b9d", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/504ec8b00dec7527bfd1f4be78223c9fd8b6483c/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=504ec8b00dec7527bfd1f4be78223c9fd8b6483c", "patch": "@@ -102,5 +102,6 @@ upcall_new_str\n upcall_shared_malloc\n upcall_shared_free\n upcall_sleep\n+upcall_evec_append\n upcall_vec_append\n upcall_yield"}]}