{"sha": "e34621c24ee3e5dd9b060d04633ec4ee5f47fe40", "node_id": "C_kwDOAAsO6NoAKGUzNDYyMWMyNGVlM2U1ZGQ5YjA2MGQwNDYzM2VjNGVlNWY0N2ZlNDA", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-02T01:38:15Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-07T23:24:03Z"}, "message": "Folding revamp.\n\nThis commit makes type folding more like the way chalk does it.\n\nCurrently, `TypeFoldable` has `fold_with` and `super_fold_with` methods.\n- `fold_with` is the standard entry point, and defaults to calling\n  `super_fold_with`.\n- `super_fold_with` does the actual work of traversing a type.\n- For a few types of interest (`Ty`, `Region`, etc.) `fold_with` instead\n  calls into a `TypeFolder`, which can then call back into\n  `super_fold_with`.\n\nWith the new approach, `TypeFoldable` has `fold_with` and\n`TypeSuperFoldable` has `super_fold_with`.\n- `fold_with` is still the standard entry point, *and* it does the\n  actual work of traversing a type, for all types except types of\n  interest.\n- `super_fold_with` is only implemented for the types of interest.\n\nBenefits of the new model.\n- I find it easier to understand. The distinction between types of\n  interest and other types is clearer, and `super_fold_with` doesn't\n  exist for most types.\n- With the current model is easy to get confused and implement a\n  `super_fold_with` method that should be left defaulted. (Some of the\n  precursor commits fixed such cases.)\n- With the current model it's easy to call `super_fold_with` within\n  `TypeFolder` impls where `fold_with` should be called. The new\n  approach makes this mistake impossible, and this commit fixes a number\n  of such cases.\n- It's potentially faster, because it avoids the `fold_with` ->\n  `super_fold_with` call in all cases except types of interest. A lot of\n  the time the compile would inline those away, but not necessarily\n  always.", "tree": {"sha": "7bebd4e72fd3d30abe6ee40b4bacb8efebf0a8d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bebd4e72fd3d30abe6ee40b4bacb8efebf0a8d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e34621c24ee3e5dd9b060d04633ec4ee5f47fe40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e34621c24ee3e5dd9b060d04633ec4ee5f47fe40", "html_url": "https://github.com/rust-lang/rust/commit/e34621c24ee3e5dd9b060d04633ec4ee5f47fe40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e34621c24ee3e5dd9b060d04633ec4ee5f47fe40/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34f283968322f58c0fbc97d7a67547061bc8b772", "url": "https://api.github.com/repos/rust-lang/rust/commits/34f283968322f58c0fbc97d7a67547061bc8b772", "html_url": "https://github.com/rust-lang/rust/commit/34f283968322f58c0fbc97d7a67547061bc8b772"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "27678c8ba3c469af9d7af04de25d90bb3c6639e6", "filename": "clippy_lints/src/unit_types/let_unit_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e34621c24ee3e5dd9b060d04633ec4ee5f47fe40/clippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e34621c24ee3e5dd9b060d04633ec4ee5f47fe40/clippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs?ref=e34621c24ee3e5dd9b060d04633ec4ee5f47fe40", "patch": "@@ -7,7 +7,7 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{Expr, ExprKind, PatKind, Stmt, StmtKind};\n use rustc_lint::{LateContext, LintContext};\n use rustc_middle::lint::in_external_macro;\n-use rustc_middle::ty::{self, Ty, TypeFoldable, TypeVisitor};\n+use rustc_middle::ty::{self, Ty, TypeFoldable, TypeSuperFoldable, TypeVisitor};\n \n use super::LET_UNIT_VALUE;\n "}]}