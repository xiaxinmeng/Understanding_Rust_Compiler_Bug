{"sha": "d1556550f83b7b8e9dd42c80ab6e08a632dfd256", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNTU2NTUwZjgzYjdiOGU5ZGQ0MmM4MGFiNmUwOGE2MzJkZmQyNTY=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-11-13T16:32:30Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-11-16T19:19:06Z"}, "message": "Rename the module", "tree": {"sha": "df9014780b0475523b05b93900855fa0385d3543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df9014780b0475523b05b93900855fa0385d3543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1556550f83b7b8e9dd42c80ab6e08a632dfd256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1556550f83b7b8e9dd42c80ab6e08a632dfd256", "html_url": "https://github.com/rust-lang/rust/commit/d1556550f83b7b8e9dd42c80ab6e08a632dfd256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1556550f83b7b8e9dd42c80ab6e08a632dfd256/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e050fc3eba251f3debf964c7779c522e5639cd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e050fc3eba251f3debf964c7779c522e5639cd8", "html_url": "https://github.com/rust-lang/rust/commit/0e050fc3eba251f3debf964c7779c522e5639cd8"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "4abb101564d0a641524c7f72053b5b232a36da94", "filename": "crates/completion/src/completions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1556550f83b7b8e9dd42c80ab6e08a632dfd256/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1556550f83b7b8e9dd42c80ab6e08a632dfd256/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions.rs?ref=d1556550f83b7b8e9dd42c80ab6e08a632dfd256", "patch": "@@ -13,7 +13,7 @@ pub(crate) mod postfix;\n pub(crate) mod macro_in_item_position;\n pub(crate) mod trait_impl;\n pub(crate) mod mod_;\n-pub(crate) mod complete_magic;\n+pub(crate) mod magic;\n \n use hir::{ModPath, ScopeDef, Type};\n "}, {"sha": "34fc358470d585e80b67e4f06122a59499915f0a", "filename": "crates/completion/src/completions/magic.rs", "status": "renamed", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1556550f83b7b8e9dd42c80ab6e08a632dfd256/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fmagic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1556550f83b7b8e9dd42c80ab6e08a632dfd256/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fmagic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fmagic.rs?ref=d1556550f83b7b8e9dd42c80ab6e08a632dfd256", "patch": "@@ -11,7 +11,7 @@ use crate::{context::CompletionContext, item::CompletionKind, CompletionItem, Co\n \n use super::Completions;\n \n-// TODO kb when typing, completes partial results, need to rerun manually to see the proper ones\n+// TODO kb add a setting toggle for this feature?\n pub(crate) fn complete_magic(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     if !(ctx.is_trivial_path || ctx.is_pat_binding_or_const) {\n         return None;\n@@ -20,8 +20,6 @@ pub(crate) fn complete_magic(acc: &mut Completions, ctx: &CompletionContext) ->\n     let anchor = ctx.name_ref_syntax.as_ref()?;\n     let import_scope = ImportScope::find_insert_use_container(anchor.syntax(), &ctx.sema)?;\n \n-    // TODO kb consider heuristics, such as \"don't show `hash_map` import if `HashMap` is the import for completion\"\n-    // also apply completion ordering\n     let potential_import_name = ctx.token.to_string();\n \n     let possible_imports = ctx\n@@ -34,8 +32,6 @@ pub(crate) fn complete_magic(acc: &mut Completions, ctx: &CompletionContext) ->\n                 Either::Left(module_def) => current_module.find_use_path(ctx.db, module_def),\n                 Either::Right(macro_def) => current_module.find_use_path(ctx.db, macro_def),\n             }?;\n-            // TODO kb need to omit braces when there are some already.\n-            // maybe remove braces completely?\n             Some((use_path, additional_completion(ctx.db, import_candidate)))\n         })\n         .filter_map(|(mod_path, additional_completion)| {", "previous_filename": "crates/completion/src/completions/complete_magic.rs"}]}