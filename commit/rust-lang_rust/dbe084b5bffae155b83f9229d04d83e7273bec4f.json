{"sha": "dbe084b5bffae155b83f9229d04d83e7273bec4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZTA4NGI1YmZmYWUxNTViODNmOTIyOWQwNGQ4M2U3MjczYmVjNGY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-20T00:00:49Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-20T07:13:12Z"}, "message": "Rollup merge of #23447 - kjpgit:kjp/pointerexample, r=steveklabnik\n\n These two borrowing examples were confusing/misleading.  This changes it\nto more clearly show how you _can_ borrow a box, and also uses & instead\nof &*.", "tree": {"sha": "d15613196de70e7db246c01d59fd51f4d6763ccb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d15613196de70e7db246c01d59fd51f4d6763ccb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbe084b5bffae155b83f9229d04d83e7273bec4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe084b5bffae155b83f9229d04d83e7273bec4f", "html_url": "https://github.com/rust-lang/rust/commit/dbe084b5bffae155b83f9229d04d83e7273bec4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbe084b5bffae155b83f9229d04d83e7273bec4f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ceb26b48c0949fdc34feb1e190c4771db898af1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ceb26b48c0949fdc34feb1e190c4771db898af1", "html_url": "https://github.com/rust-lang/rust/commit/1ceb26b48c0949fdc34feb1e190c4771db898af1"}, {"sha": "5429f9440548378c0beb56e890f4b6afe693ae2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5429f9440548378c0beb56e890f4b6afe693ae2b", "html_url": "https://github.com/rust-lang/rust/commit/5429f9440548378c0beb56e890f4b6afe693ae2b"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "39106aaf85751c3efeb31b2ce6ebf8357a302879", "filename": "src/doc/trpl/pointers.md", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/dbe084b5bffae155b83f9229d04d83e7273bec4f/src%2Fdoc%2Ftrpl%2Fpointers.md", "raw_url": "https://github.com/rust-lang/rust/raw/dbe084b5bffae155b83f9229d04d83e7273bec4f/src%2Fdoc%2Ftrpl%2Fpointers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fpointers.md?ref=dbe084b5bffae155b83f9229d04d83e7273bec4f", "patch": "@@ -561,38 +561,40 @@ fn main() {\n In this case, Rust knows that `x` is being *borrowed* by the `add_one()`\n function, and since it's only reading the value, allows it.\n \n-We can borrow `x` multiple times, as long as it's not simultaneous:\n+We can borrow `x` as read-only multiple times, even simultaneously:\n \n ```{rust}\n-fn add_one(x: &i32) -> i32 {\n-    *x + 1\n+fn add(x: &i32, y: &i32) -> i32 {\n+    *x + *y\n }\n \n fn main() {\n     let x = Box::new(5);\n \n-    println!(\"{}\", add_one(&*x));\n-    println!(\"{}\", add_one(&*x));\n-    println!(\"{}\", add_one(&*x));\n+    println!(\"{}\", add(&x, &x));\n+    println!(\"{}\", add(&x, &x));\n }\n ```\n \n-Or as long as it's not a mutable borrow. This will error:\n+We can mutably borrow `x` multiple times, but only if x itself is mutable, and\n+it may not be *simultaneously* borrowed: \n \n ```{rust,ignore}\n-fn add_one(x: &mut i32) -> i32 {\n-    *x + 1\n+fn increment(x: &mut i32) {\n+    *x += 1;\n }\n \n fn main() {\n-    let x = Box::new(5);\n+    // If variable x is not \"mut\", this will not compile\n+    let mut x = Box::new(5);\n \n-    println!(\"{}\", add_one(&*x)); // error: cannot borrow immutable dereference\n-                                  // of `&`-pointer as mutable\n+    increment(&mut x);\n+    increment(&mut x);\n+    println!(\"{}\", x);\n }\n ```\n \n-Notice we changed the signature of `add_one()` to request a mutable reference.\n+Notice the signature of `increment()` requests a mutable reference.\n \n ## Best practices\n "}]}