{"sha": "fa3368bc71611f071489a3a5183bd572bc6f4022", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMzM2OGJjNzE2MTFmMDcxNDg5YTNhNTE4M2JkNTcyYmM2ZjQwMjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-24T00:03:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-24T00:18:01Z"}, "message": "rustdoc: Prune undocumented return values", "tree": {"sha": "cab5648186c1206d78999379dcb1323c4f01b8e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cab5648186c1206d78999379dcb1323c4f01b8e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa3368bc71611f071489a3a5183bd572bc6f4022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3368bc71611f071489a3a5183bd572bc6f4022", "html_url": "https://github.com/rust-lang/rust/commit/fa3368bc71611f071489a3a5183bd572bc6f4022", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa3368bc71611f071489a3a5183bd572bc6f4022/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d3544d10e1fd44fd3e3d300e7c56917ed4a305", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305", "html_url": "https://github.com/rust-lang/rust/commit/a7d3544d10e1fd44fd3e3d300e7c56917ed4a305"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "433ed1ff839c19094eab3ea36f298a6ddbf05c8b", "filename": "src/rustdoc/prune_undoc_pass.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fa3368bc71611f071489a3a5183bd572bc6f4022/src%2Frustdoc%2Fprune_undoc_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3368bc71611f071489a3a5183bd572bc6f4022/src%2Frustdoc%2Fprune_undoc_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_undoc_pass.rs?ref=fa3368bc71611f071489a3a5183bd572bc6f4022", "patch": "@@ -53,6 +53,14 @@ fn fold_fn(\n             } else {\n                 none\n             }\n+        },\n+        return: {\n+            ty: if option::is_some(doc.return.desc) {\n+                doc.return.ty\n+            } else {\n+                none\n+            }\n+            with doc.return\n         }\n         with *doc\n     };\n@@ -85,6 +93,17 @@ fn should_not_elide_fns_with_documented_arguments() {\n     assert vec::is_not_empty(*doc.topmod.fns);\n }\n \n+#[test]\n+fn should_elide_undocumented_return_values() {\n+    let source = \"#[doc = \\\"fonz\\\"] fn a() -> int { }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = tystr_pass::mk_pass()(srv, doc);\n+    let doc = attr_pass::mk_pass()(srv, doc);\n+    let doc = run(srv, doc);\n+    assert doc.topmod.fns[0].return.ty == none;\n+}\n+\n fn fold_modlist(\n     fold: fold::fold<ctxt>,\n     list: doc::modlist"}]}