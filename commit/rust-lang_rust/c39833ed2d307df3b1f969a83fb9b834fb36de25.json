{"sha": "c39833ed2d307df3b1f969a83fb9b834fb36de25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTgzM2VkMmQzMDdkZjNiMWY5NjlhODNmYjliODM0ZmIzNmRlMjU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-06T03:30:34Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-06T03:30:34Z"}, "message": "Rollup merge of #23070 - krdln:fix-stat-arm, r=alexcrichton\n\n This separates definitions of struct stat and other typedefs between Android and Linux on ARM (Android has a non-standard one). This makes functions such as `File::metadata()` work correctly and makes one able to check file's size. All tests from std (and also run-pass: stat.rs) now pass on ARM Linux. Fixes #20007.", "tree": {"sha": "a73545d85cdfdef9d36e4845ee70724773c7f286", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a73545d85cdfdef9d36e4845ee70724773c7f286"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c39833ed2d307df3b1f969a83fb9b834fb36de25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c39833ed2d307df3b1f969a83fb9b834fb36de25", "html_url": "https://github.com/rust-lang/rust/commit/c39833ed2d307df3b1f969a83fb9b834fb36de25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c39833ed2d307df3b1f969a83fb9b834fb36de25/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a12c038a5a27403a72274af2fa603abe157da3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a12c038a5a27403a72274af2fa603abe157da3d", "html_url": "https://github.com/rust-lang/rust/commit/7a12c038a5a27403a72274af2fa603abe157da3d"}, {"sha": "29938fff3802243bdfe9a12860384d8eade20a7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/29938fff3802243bdfe9a12860384d8eade20a7a", "html_url": "https://github.com/rust-lang/rust/commit/29938fff3802243bdfe9a12860384d8eade20a7a"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "c0b9b67758eeeee09f764a8395c02008dbdfc655", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c39833ed2d307df3b1f969a83fb9b834fb36de25/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c39833ed2d307df3b1f969a83fb9b834fb36de25/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=c39833ed2d307df3b1f969a83fb9b834fb36de25", "patch": "@@ -383,7 +383,8 @@ pub mod types {\n                       target_arch = \"mips\",\n                       target_arch = \"mipsel\",\n                       target_arch = \"powerpc\",\n-                      target_arch = \"le32\"))]\n+                      target_arch = \"le32\",\n+                      all(target_arch = \"arm\", not(target_os = \"android\"))))]\n             pub mod posix88 {\n                 pub type off_t = i32;\n                 pub type dev_t = u64;\n@@ -395,7 +396,7 @@ pub mod types {\n                 pub type mode_t = u32;\n                 pub type ssize_t = i32;\n             }\n-            #[cfg(target_arch = \"arm\")]\n+            #[cfg(all(target_arch = \"arm\", target_os = \"android\"))]\n             pub mod posix88 {\n                 pub type off_t = i32;\n                 pub type dev_t = u32;\n@@ -409,7 +410,8 @@ pub mod types {\n             }\n             #[cfg(any(target_arch = \"x86\",\n                       target_arch = \"le32\",\n-                      target_arch = \"powerpc\"))]\n+                      target_arch = \"powerpc\",\n+                      all(target_arch = \"arm\", not(target_os = \"android\"))))]\n             pub mod posix01 {\n                 use types::os::arch::c95::{c_short, c_long, time_t};\n                 use types::os::arch::posix88::{dev_t, gid_t, ino_t};\n@@ -455,7 +457,7 @@ pub mod types {\n                     pub __size: [u32; 9]\n                 }\n             }\n-            #[cfg(target_arch = \"arm\")]\n+            #[cfg(all(target_arch = \"arm\", target_os = \"android\"))]\n             pub mod posix01 {\n                 use types::os::arch::c95::{c_uchar, c_uint, c_ulong, time_t};\n                 use types::os::arch::c99::{c_longlong, c_ulonglong};"}]}