{"sha": "ae95005ecc453560cf49377583fb6c41fd10ca8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOTUwMDVlY2M0NTM1NjBjZjQ5Mzc3NTgzZmI2YzQxZmQxMGNhOGI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-22T00:45:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-22T00:45:33Z"}, "message": "Rollup merge of #77976 - oliviacrain:issue-77915-fix, r=matthewjasper\n\nMark inout asm! operands as used in liveness pass\n\nVariables used in `inout` operands in inline assembly (that is, they're used as both input and output to some arbitrary assembly instruction) are being marked as read and written, but are not marked as being used in the RWU table during the liveness pass. This can result in such expressions triggering an unused variable lint warning. This is incorrect behavior- reads without uses are currently only used for compound assignments. We conservatively assume that an `inout` operand is being read and used in the context of the assembly instruction.\n\nCloses #77915", "tree": {"sha": "01f78d8646b724c91502edca05d1a6731e2e11b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01f78d8646b724c91502edca05d1a6731e2e11b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae95005ecc453560cf49377583fb6c41fd10ca8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfkNYtCRBK7hj4Ov3rIwAAdHIIAJ02o0jfXlA9reqdNGdMQJMT\nhEnAJnakC/VHw4A9NvSPhthj7y7TznsgviFyFVg+xGoFSiSy1xiPCaHIxulRX1Mn\nV7SNdfd1lfGIyqAC/XMxQml3Dbk3+dI5J8DD6dNDY2VoiiLuGsatRX4r7+sa60wC\nmXcM+sseMCHt2IzL+15PD6XfrSWIU4jzxpFB/J5kmPQP+2y502Vwjxez+/cilfIx\niUNJeO5r4PodM7K41m6DPOKrV5r7sc1V22qVp/lV9HfrHTnkK6couzQrGqdevTN8\n3rX0vLSdEcRFp0IRac1qtHoj87HjLFwdlQldkd4gPVsNq7SuKXQQ3qF6wwnUEJc=\n=63o6\n-----END PGP SIGNATURE-----\n", "payload": "tree 01f78d8646b724c91502edca05d1a6731e2e11b7\nparent 813066c4429e7582b08dbf3af2c12a5f2e1b2a16\nparent dc29c7a72f63dcad65e5ec3899a0eb114798bdfd\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603327533 +0900\ncommitter GitHub <noreply@github.com> 1603327533 +0900\n\nRollup merge of #77976 - oliviacrain:issue-77915-fix, r=matthewjasper\n\nMark inout asm! operands as used in liveness pass\n\nVariables used in `inout` operands in inline assembly (that is, they're used as both input and output to some arbitrary assembly instruction) are being marked as read and written, but are not marked as being used in the RWU table during the liveness pass. This can result in such expressions triggering an unused variable lint warning. This is incorrect behavior- reads without uses are currently only used for compound assignments. We conservatively assume that an `inout` operand is being read and used in the context of the assembly instruction.\n\nCloses #77915\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae95005ecc453560cf49377583fb6c41fd10ca8b", "html_url": "https://github.com/rust-lang/rust/commit/ae95005ecc453560cf49377583fb6c41fd10ca8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae95005ecc453560cf49377583fb6c41fd10ca8b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "html_url": "https://github.com/rust-lang/rust/commit/813066c4429e7582b08dbf3af2c12a5f2e1b2a16"}, {"sha": "dc29c7a72f63dcad65e5ec3899a0eb114798bdfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc29c7a72f63dcad65e5ec3899a0eb114798bdfd", "html_url": "https://github.com/rust-lang/rust/commit/dc29c7a72f63dcad65e5ec3899a0eb114798bdfd"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "7288015e170293f2170263909f0918088939be60", "filename": "compiler/rustc_passes/src/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae95005ecc453560cf49377583fb6c41fd10ca8b/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae95005ecc453560cf49377583fb6c41fd10ca8b/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs?ref=ae95005ecc453560cf49377583fb6c41fd10ca8b", "patch": "@@ -1174,7 +1174,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                             }\n                         }\n                         hir::InlineAsmOperand::InOut { expr, .. } => {\n-                            succ = self.write_place(expr, succ, ACC_READ | ACC_WRITE);\n+                            succ = self.write_place(expr, succ, ACC_READ | ACC_WRITE | ACC_USE);\n                         }\n                         hir::InlineAsmOperand::SplitInOut { out_expr, .. } => {\n                             if let Some(expr) = out_expr {"}, {"sha": "b51da0e0d8cdd5945f9a0308794287cdaeb76b82", "filename": "src/test/ui/liveness/liveness-asm.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/ae95005ecc453560cf49377583fb6c41fd10ca8b/src%2Ftest%2Fui%2Fliveness%2Fliveness-asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae95005ecc453560cf49377583fb6c41fd10ca8b/src%2Ftest%2Fui%2Fliveness%2Fliveness-asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-asm.rs?ref=ae95005ecc453560cf49377583fb6c41fd10ca8b", "patch": "@@ -0,0 +1,44 @@\n+// Ensure inout asm! operands are marked as used by the liveness pass\n+\n+// only-x86_64\n+// check-pass\n+\n+#![feature(asm)]\n+#![allow(dead_code)]\n+#![warn(unused_assignments)]\n+#![warn(unused_variables)]\n+\n+// Test the single inout case\n+unsafe fn f1(mut src: *const u8) {\n+    asm!(\"/*{0}*/\", inout(reg) src); //~ WARN value assigned to `src` is never read\n+}\n+\n+unsafe fn f2(mut src: *const u8) -> *const u8 {\n+    asm!(\"/*{0}*/\", inout(reg) src);\n+    src\n+}\n+\n+// Test the split inout case\n+unsafe fn f3(mut src: *const u8) {\n+    asm!(\"/*{0}*/\", inout(reg) src => src); //~ WARN value assigned to `src` is never read\n+}\n+\n+unsafe fn f4(mut src: *const u8) -> *const u8 {\n+    asm!(\"/*{0}*/\", inout(reg) src => src);\n+    src\n+}\n+\n+// Tests the use of field projections\n+struct S {\n+    field: *mut u8,\n+}\n+\n+unsafe fn f5(src: &mut S) {\n+    asm!(\"/*{0}*/\", inout(reg) src.field);\n+}\n+\n+unsafe fn f6(src: &mut S) {\n+    asm!(\"/*{0}*/\", inout(reg) src.field => src.field);\n+}\n+\n+fn main() {}"}, {"sha": "f385d7a8065b62174eecda05984a0d5a01bfe0dc", "filename": "src/test/ui/liveness/liveness-asm.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ae95005ecc453560cf49377583fb6c41fd10ca8b/src%2Ftest%2Fui%2Fliveness%2Fliveness-asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae95005ecc453560cf49377583fb6c41fd10ca8b/src%2Ftest%2Fui%2Fliveness%2Fliveness-asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-asm.stderr?ref=ae95005ecc453560cf49377583fb6c41fd10ca8b", "patch": "@@ -0,0 +1,23 @@\n+warning: value assigned to `src` is never read\n+  --> $DIR/liveness-asm.rs:13:32\n+   |\n+LL |     asm!(\"/*{0}*/\", inout(reg) src);\n+   |                                ^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/liveness-asm.rs:8:9\n+   |\n+LL | #![warn(unused_assignments)]\n+   |         ^^^^^^^^^^^^^^^^^^\n+   = help: maybe it is overwritten before being read?\n+\n+warning: value assigned to `src` is never read\n+  --> $DIR/liveness-asm.rs:23:39\n+   |\n+LL |     asm!(\"/*{0}*/\", inout(reg) src => src);\n+   |                                       ^^^\n+   |\n+   = help: maybe it is overwritten before being read?\n+\n+warning: 2 warnings emitted\n+"}]}