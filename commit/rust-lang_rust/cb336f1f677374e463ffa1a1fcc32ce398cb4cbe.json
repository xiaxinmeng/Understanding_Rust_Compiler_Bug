{"sha": "cb336f1f677374e463ffa1a1fcc32ce398cb4cbe", "node_id": "C_kwDOAAsO6NoAKGNiMzM2ZjFmNjc3Mzc0ZTQ2M2ZmYTFhMWZjYzMyY2UzOThjYjRjYmU", "commit": {"author": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-10-27T01:18:04Z"}, "committer": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-10-27T02:30:15Z"}, "message": "Reverting switching test to no_std and adjust output after rebase.", "tree": {"sha": "eb3fcceb4541ec69374ba65692aa4913dfe1d1c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb3fcceb4541ec69374ba65692aa4913dfe1d1c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe", "html_url": "https://github.com/rust-lang/rust/commit/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41ef3643596440f459cfd6ec1b4997f9d123dc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41ef3643596440f459cfd6ec1b4997f9d123dc2", "html_url": "https://github.com/rust-lang/rust/commit/e41ef3643596440f459cfd6ec1b4997f9d123dc2"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "ccfab263bd48ea4c56d8cec004c74ba1d64ba2cb", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=cb336f1f677374e463ffa1a1fcc32ce398cb4cbe", "patch": "@@ -1823,7 +1823,6 @@ crate fn show_candidates(\n         let instead = if instead { \" instead\" } else { \"\" };\n         let mut msg = format!(\"consider importing {} {}{}\", determiner, kind, instead);\n \n-        // Issue notes\n         for note in accessible_path_strings.iter().map(|cand| cand.3.as_ref()).flatten() {\n             err.note(note);\n         }"}, {"sha": "f03b42bbe47518d95f4202d66e3736e046cc532d", "filename": "src/test/ui/suggestions/suggest-tryinto-edition-change.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.rs?ref=cb336f1f677374e463ffa1a1fcc32ce398cb4cbe", "patch": "@@ -2,28 +2,30 @@\n // Edition 2021 change\n // edition:2018\n \n-// We mark this no_std to avoid emitting suggestions for both `std` and `core` traits. These were\n-// inconsistently ordered between CI and at least one local build, causing test failures.\n-#![no_std]\n-#![crate_type = \"lib\"]\n-\n-pub fn test() {\n-    let _i: Result<i16, _> = 0_i32.try_into();\n+fn test() {\n+    let _i: i16 = 0_i32.try_into().unwrap();\n     //~^ ERROR no method named `try_into` found for type `i32` in the current scope\n     //~| NOTE method not found in `i32`\n-    //~| NOTE 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n+    //~| NOTE 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n \n-    let _i: Result<i16, _> = TryFrom::try_from(0_i32);\n+    let _i: i16 = TryFrom::try_from(0_i32).unwrap();\n     //~^ ERROR failed to resolve: use of undeclared type\n     //~| NOTE not found in this scope\n+    //~| NOTE 'std::convert::TryFrom' is included in the prelude starting in Edition 2021\n     //~| NOTE 'core::convert::TryFrom' is included in the prelude starting in Edition 2021\n \n-    let _i: Result<i16, _> = TryInto::try_into(0_i32);\n+    let _i: i16 = TryInto::try_into(0_i32).unwrap();\n     //~^ ERROR failed to resolve: use of undeclared type\n     //~| NOTE not found in this scope\n+    //~| NOTE 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n     //~| NOTE 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n \n-    let _i: () = FromIterator::from_iter(core::iter::empty());\n+    let _v: Vec<_> = FromIterator::from_iter(&[1]);\n     //~^ ERROR failed to resolve: use of undeclared type\n+    //~| NOTE 'std::iter::FromIterator' is included in the prelude starting in Edition 2021\n     //~| NOTE 'core::iter::FromIterator' is included in the prelude starting in Edition 2021\n }\n+\n+fn main() {\n+    test();\n+}"}, {"sha": "86f48716b16b50df0ea6f1dcb8af619f0c537363", "filename": "src/test/ui/suggestions/suggest-tryinto-edition-change.stderr", "status": "modified", "additions": 28, "deletions": 19, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cb336f1f677374e463ffa1a1fcc32ce398cb4cbe/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.stderr?ref=cb336f1f677374e463ffa1a1fcc32ce398cb4cbe", "patch": "@@ -1,64 +1,73 @@\n error[E0433]: failed to resolve: use of undeclared type `TryFrom`\n-  --> $DIR/suggest-tryinto-edition-change.rs:16:30\n+  --> $DIR/suggest-tryinto-edition-change.rs:11:19\n    |\n-LL |     let _i: Result<i16, _> = TryFrom::try_from(0_i32);\n-   |                              ^^^^^^^ not found in this scope\n+LL |     let _i: i16 = TryFrom::try_from(0_i32).unwrap();\n+   |                   ^^^^^^^ not found in this scope\n    |\n+   = note: 'std::convert::TryFrom' is included in the prelude starting in Edition 2021\n    = note: 'core::convert::TryFrom' is included in the prelude starting in Edition 2021\n-help: consider importing this trait\n+help: consider importing one of these items\n    |\n LL | use core::convert::TryFrom;\n    |\n+LL | use std::convert::TryFrom;\n+   |\n \n error[E0433]: failed to resolve: use of undeclared type `TryInto`\n-  --> $DIR/suggest-tryinto-edition-change.rs:21:30\n+  --> $DIR/suggest-tryinto-edition-change.rs:17:19\n    |\n-LL |     let _i: Result<i16, _> = TryInto::try_into(0_i32);\n-   |                              ^^^^^^^ not found in this scope\n+LL |     let _i: i16 = TryInto::try_into(0_i32).unwrap();\n+   |                   ^^^^^^^ not found in this scope\n    |\n+   = note: 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n    = note: 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n-help: consider importing this trait\n+help: consider importing one of these items\n    |\n LL | use core::convert::TryInto;\n    |\n+LL | use std::convert::TryInto;\n+   |\n \n error[E0433]: failed to resolve: use of undeclared type `FromIterator`\n-  --> $DIR/suggest-tryinto-edition-change.rs:26:18\n+  --> $DIR/suggest-tryinto-edition-change.rs:23:22\n    |\n-LL |     let _i: () = FromIterator::from_iter(core::iter::empty());\n-   |                  ^^^^^^^^^^^^\n+LL |     let _v: Vec<_> = FromIterator::from_iter(&[1]);\n+   |                      ^^^^^^^^^^^^\n    |\n   ::: $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL | pub trait IntoIterator {\n    | ---------------------- similarly named trait `IntoIterator` defined here\n    |\n+   = note: 'std::iter::FromIterator' is included in the prelude starting in Edition 2021\n    = note: 'core::iter::FromIterator' is included in the prelude starting in Edition 2021\n help: a trait with a similar name exists\n    |\n-LL |     let _i: () = IntoIterator::from_iter(core::iter::empty());\n-   |                  ~~~~~~~~~~~~\n-help: consider importing this trait\n+LL |     let _v: Vec<_> = IntoIterator::from_iter(&[1]);\n+   |                      ~~~~~~~~~~~~\n+help: consider importing one of these items\n    |\n LL | use core::iter::FromIterator;\n    |\n+LL | use std::iter::FromIterator;\n+   |\n \n error[E0599]: no method named `try_into` found for type `i32` in the current scope\n-  --> $DIR/suggest-tryinto-edition-change.rs:11:36\n+  --> $DIR/suggest-tryinto-edition-change.rs:6:25\n    |\n-LL |     let _i: Result<i16, _> = 0_i32.try_into();\n-   |                                    ^^^^^^^^ method not found in `i32`\n+LL |     let _i: i16 = 0_i32.try_into().unwrap();\n+   |                         ^^^^^^^^ method not found in `i32`\n    |\n   ::: $SRC_DIR/core/src/convert/mod.rs:LL:COL\n    |\n LL |     fn try_into(self) -> Result<T, Self::Error>;\n    |        -------- the method is available for `i32` here\n    |\n    = help: items from traits can only be used if the trait is in scope\n-   = note: 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n+   = note: 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n help: the following trait is implemented but not in scope; perhaps add a `use` for it:\n    |\n-LL | use core::convert::TryInto;\n+LL | use std::convert::TryInto;\n    |\n \n error: aborting due to 4 previous errors"}]}