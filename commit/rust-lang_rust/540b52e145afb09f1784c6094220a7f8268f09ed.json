{"sha": "540b52e145afb09f1784c6094220a7f8268f09ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MGI1MmUxNDVhZmIwOWYxNzg0YzYwOTQyMjBhN2Y4MjY4ZjA5ZWQ=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2017-02-08T09:23:09Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-03-10T00:55:39Z"}, "message": "Fix recursion depth counting in `layout`", "tree": {"sha": "a388e1dd9ab7eaea0ba117e1ae7e2f6fbe70d1d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a388e1dd9ab7eaea0ba117e1ae7e2f6fbe70d1d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/540b52e145afb09f1784c6094220a7f8268f09ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/540b52e145afb09f1784c6094220a7f8268f09ed", "html_url": "https://github.com/rust-lang/rust/commit/540b52e145afb09f1784c6094220a7f8268f09ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/540b52e145afb09f1784c6094220a7f8268f09ed/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d708a4072a9fa35be3cb6a1e74557925507ba606", "url": "https://api.github.com/repos/rust-lang/rust/commits/d708a4072a9fa35be3cb6a1e74557925507ba606", "html_url": "https://github.com/rust-lang/rust/commit/d708a4072a9fa35be3cb6a1e74557925507ba606"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "a81c3a177f8854070966720631c65aac9e59c62e", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/540b52e145afb09f1784c6094220a7f8268f09ed/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540b52e145afb09f1784c6094220a7f8268f09ed/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=540b52e145afb09f1784c6094220a7f8268f09ed", "patch": "@@ -654,11 +654,12 @@ impl<'a, 'tcx> ty::TyS<'tcx> {\n         }\n \n         tcx.layout_depth.set(depth+1);\n-        let layout = Layout::compute_uncached(self, infcx)?;\n+        let layout = Layout::compute_uncached(self, infcx);\n+        tcx.layout_depth.set(depth);\n+        let layout = layout?;\n         if can_cache {\n             tcx.layout_cache.borrow_mut().insert(self, layout);\n         }\n-        tcx.layout_depth.set(depth);\n         Ok(layout)\n     }\n "}]}