{"sha": "897199a0fbe01ab6f7e7f8096656603e238e85a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NzE5OWEwZmJlMDFhYjZmN2U3ZjgwOTY2NTY2MDNlMjM4ZTg1YTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-26T19:00:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-26T19:00:35Z"}, "message": "Auto merge of #33191 - alexcrichton:rustdoc-create-dir-all-racy, r=steveklabnik\n\nrustdoc: Handle concurrent mkdir requests\n\nIt's likely that `rustdoc` as a tool is run concurrently in the same output\n(e.g. documenting multiple crates as Cargo does), in which case it needs to\nhandle concurrent calls to `fs::create_dir`.", "tree": {"sha": "d4a22878b590a621c6c9d033a613b1031fe3a5c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4a22878b590a621c6c9d033a613b1031fe3a5c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/897199a0fbe01ab6f7e7f8096656603e238e85a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/897199a0fbe01ab6f7e7f8096656603e238e85a2", "html_url": "https://github.com/rust-lang/rust/commit/897199a0fbe01ab6f7e7f8096656603e238e85a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/897199a0fbe01ab6f7e7f8096656603e238e85a2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01a0207919a384b63fb23221d5e92e3e97a26e46", "url": "https://api.github.com/repos/rust-lang/rust/commits/01a0207919a384b63fb23221d5e92e3e97a26e46", "html_url": "https://github.com/rust-lang/rust/commit/01a0207919a384b63fb23221d5e92e3e97a26e46"}, {"sha": "36d9ee3da983a318f958077dbc68ba1adfae98b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/36d9ee3da983a318f958077dbc68ba1adfae98b8", "html_url": "https://github.com/rust-lang/rust/commit/36d9ee3da983a318f958077dbc68ba1adfae98b8"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "b7d459381eda0a3176fcd8e9a77c1e9c3299841a", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/897199a0fbe01ab6f7e7f8096656603e238e85a2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897199a0fbe01ab6f7e7f8096656603e238e85a2/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=897199a0fbe01ab6f7e7f8096656603e238e85a2", "patch": "@@ -820,13 +820,16 @@ fn write(dst: PathBuf, contents: &[u8]) -> Result<(), Error> {\n     Ok(try_err!(try_err!(File::create(&dst), &dst).write_all(contents), &dst))\n }\n \n-/// Makes a directory on the filesystem, failing the thread if an error occurs and\n-/// skipping if the directory already exists.\n+/// Makes a directory on the filesystem, failing the thread if an error occurs\n+/// and skipping if the directory already exists.\n+///\n+/// Note that this also handles races as rustdoc is likely to be run\n+/// concurrently against another invocation.\n fn mkdir(path: &Path) -> io::Result<()> {\n-    if !path.exists() {\n-        fs::create_dir(path)\n-    } else {\n-        Ok(())\n+    match fs::create_dir(path) {\n+        Ok(()) => Ok(()),\n+        Err(ref e) if e.kind() == io::ErrorKind::AlreadyExists => Ok(()),\n+        Err(e) => Err(e)\n     }\n }\n "}]}