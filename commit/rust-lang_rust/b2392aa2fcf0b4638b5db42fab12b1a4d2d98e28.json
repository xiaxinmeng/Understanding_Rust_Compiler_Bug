{"sha": "b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMzkyYWEyZmNmMGI0NjM4YjVkYjQyZmFiMTJiMWE0ZDJkOThlMjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-12T14:23:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-12T14:23:27Z"}, "message": "dont ICE in case of invalid drop fn", "tree": {"sha": "624cc81786a715cfb11456f753e9caa6ed87ac45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/624cc81786a715cfb11456f753e9caa6ed87ac45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28", "html_url": "https://github.com/rust-lang/rust/commit/b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f284f8b4be3a899bf2ecc03e2a1589f486b62a9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f284f8b4be3a899bf2ecc03e2a1589f486b62a9f", "html_url": "https://github.com/rust-lang/rust/commit/f284f8b4be3a899bf2ecc03e2a1589f486b62a9f"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "916ea3dc393e98294a6b43221c57ed48c07754a8", "filename": "src/librustc_mir/interpret/traits.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs?ref=b2392aa2fcf0b4638b5db42fab12b1a4d2d98e28", "patch": "@@ -140,7 +140,18 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let fn_sig = drop_instance.ty(*self.tcx).fn_sig(*self.tcx);\n         let fn_sig = self.tcx.normalize_erasing_late_bound_regions(self.param_env, &fn_sig);\n         // The drop function takes `*mut T` where `T` is the type being dropped, so get that.\n-        let ty = fn_sig.inputs()[0].builtin_deref(true).unwrap().ty;\n+        let args = fn_sig.inputs();\n+        if args.len() != 1 {\n+            throw_ub_format!(\n+                \"drop fn should have 1 argument, but signature is {:?}\", fn_sig\n+            );\n+        }\n+        let ty = args[0].builtin_deref(true)\n+            .ok_or_else(|| err_ub_format!(\n+                \"drop fn argument type {} is not a pointer type\",\n+                args[0]\n+            ))?\n+            .ty;\n         Ok((drop_instance, ty))\n     }\n "}]}