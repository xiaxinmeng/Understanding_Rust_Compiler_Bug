{"sha": "a87bec51485feb491f7b1b80c06a29d86ebaf681", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4N2JlYzUxNDg1ZmViNDkxZjdiMWI4MGMwNmEyOWQ4NmViYWY2ODE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-10T14:35:06Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-10T14:35:06Z"}, "message": "Move `AttrId` back into `hir_def`", "tree": {"sha": "f1097192c4e96a97031f31fd7077c08161676c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1097192c4e96a97031f31fd7077c08161676c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a87bec51485feb491f7b1b80c06a29d86ebaf681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a87bec51485feb491f7b1b80c06a29d86ebaf681", "html_url": "https://github.com/rust-lang/rust/commit/a87bec51485feb491f7b1b80c06a29d86ebaf681", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a87bec51485feb491f7b1b80c06a29d86ebaf681/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07cea5e709f8232b27de646cee67bf1d3f7279c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/07cea5e709f8232b27de646cee67bf1d3f7279c9", "html_url": "https://github.com/rust-lang/rust/commit/07cea5e709f8232b27de646cee67bf1d3f7279c9"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "469811ce85f3587a9396f81fb5f832954b45dd9a", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=a87bec51485feb491f7b1b80c06a29d86ebaf681", "patch": "@@ -9,7 +9,7 @@ use std::{\n use base_db::CrateId;\n use cfg::{CfgExpr, CfgOptions};\n use either::Either;\n-use hir_expand::{hygiene::Hygiene, name::AsName, AstId, AttrId, InFile};\n+use hir_expand::{hygiene::Hygiene, name::AsName, AstId, InFile};\n use itertools::Itertools;\n use la_arena::ArenaMap;\n use mbe::ast_to_token_tree;\n@@ -615,6 +615,9 @@ impl DocsRangeMap {\n     }\n }\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n+pub struct AttrId(pub u32);\n+\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct Attr {\n     pub(crate) id: AttrId,"}, {"sha": "869e0280ecd92976907ce31e7e8ef5c0a0140ee2", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=a87bec51485feb491f7b1b80c06a29d86ebaf681", "patch": "@@ -62,14 +62,14 @@ use hir_expand::{\n     ast_id_map::FileAstId,\n     eager::{expand_eager_macro, ErrorEmitted, ErrorSink},\n     hygiene::Hygiene,\n-    AstId, AttrId, FragmentKind, HirFileId, InFile, MacroCallId, MacroCallKind, MacroDefId,\n-    MacroDefKind,\n+    AstId, FragmentKind, HirFileId, InFile, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n use la_arena::Idx;\n use nameres::DefMap;\n use path::ModPath;\n use syntax::ast;\n \n+use crate::attr::AttrId;\n use crate::builtin_type::BuiltinType;\n use item_tree::{\n     Const, Enum, Function, Impl, ItemTreeId, ItemTreeNode, ModItem, Static, Struct, Trait,\n@@ -753,7 +753,7 @@ fn derive_macro_as_call_id(\n             MacroCallKind::Derive {\n                 ast_id: item_attr.ast_id,\n                 derive_name: last_segment.to_string(),\n-                derive_attr,\n+                derive_attr_index: derive_attr.0,\n             },\n         )\n         .into();"}, {"sha": "adfb78c942f8c34c32909b40595175f44ed0da75", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=a87bec51485feb491f7b1b80c06a29d86ebaf681", "patch": "@@ -13,14 +13,14 @@ use hir_expand::{\n     builtin_macro::find_builtin_macro,\n     name::{AsName, Name},\n     proc_macro::ProcMacroExpander,\n-    AttrId, FragmentKind, HirFileId, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n+    FragmentKind, HirFileId, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n use hir_expand::{InFile, MacroCallLoc};\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::ast;\n \n use crate::{\n-    attr::Attrs,\n+    attr::{AttrId, Attrs},\n     db::DefDatabase,\n     derive_macro_as_call_id,\n     intern::Interned,"}, {"sha": "b6a6d602f7f2727ab65498b0a63a556a8bef7e10", "filename": "crates/hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=a87bec51485feb491f7b1b80c06a29d86ebaf681", "patch": "@@ -269,7 +269,7 @@ mod tests {\n     use expect_test::{expect, Expect};\n     use name::AsName;\n \n-    use crate::{test_db::TestDB, AstId, AttrId, MacroCallId, MacroCallKind, MacroCallLoc};\n+    use crate::{test_db::TestDB, AstId, MacroCallId, MacroCallKind, MacroCallLoc};\n \n     use super::*;\n \n@@ -320,7 +320,7 @@ $0\n             kind: MacroCallKind::Derive {\n                 ast_id,\n                 derive_name: name.to_string(),\n-                derive_attr: AttrId(0),\n+                derive_attr_index: 0,\n             },\n         };\n "}, {"sha": "57e08eeb0b2b5febd9d5a5284fc405be2afb0d83", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87bec51485feb491f7b1b80c06a29d86ebaf681/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=a87bec51485feb491f7b1b80c06a29d86ebaf681", "patch": "@@ -293,12 +293,9 @@ pub struct MacroCallLoc {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum MacroCallKind {\n     FnLike { ast_id: AstId<ast::MacroCall>, fragment: FragmentKind },\n-    Derive { ast_id: AstId<ast::Item>, derive_name: String, derive_attr: AttrId },\n+    Derive { ast_id: AstId<ast::Item>, derive_name: String, derive_attr_index: u32 },\n }\n \n-#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub struct AttrId(pub u32);\n-\n impl MacroCallKind {\n     fn file_id(&self) -> HirFileId {\n         match self {"}]}