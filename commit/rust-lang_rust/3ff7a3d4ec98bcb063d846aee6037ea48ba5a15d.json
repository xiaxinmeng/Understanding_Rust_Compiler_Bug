{"sha": "3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZjdhM2Q0ZWM5OGJjYjA2M2Q4NDZhZWU2MDM3ZWE0OGJhNWExNWQ=", "commit": {"author": {"name": "Julian Orth", "email": "ju.orth@gmail.com", "date": "2014-10-09T21:20:56Z"}, "committer": {"name": "Julian Orth", "email": "ju.orth@gmail.com", "date": "2014-10-12T12:08:54Z"}, "message": "add intmax", "tree": {"sha": "3702bcbeab98123b00e53d72f6ff04eac9712f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3702bcbeab98123b00e53d72f6ff04eac9712f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d", "comment_count": 12, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d", "html_url": "https://github.com/rust-lang/rust/commit/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d/comments", "author": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d056f94b75e1c9ad5d72bd8081d6aa5e323848", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d056f94b75e1c9ad5d72bd8081d6aa5e323848", "html_url": "https://github.com/rust-lang/rust/commit/79d056f94b75e1c9ad5d72bd8081d6aa5e323848"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "f2cf5265aee6bb98450b996220afee24c8626265", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d", "patch": "@@ -103,6 +103,7 @@ pub use types::os::arch::c95::{c_ushort, clock_t, ptrdiff_t, c_schar};\n pub use types::os::arch::c95::{size_t, time_t, suseconds_t};\n pub use types::os::arch::c99::{c_longlong, c_ulonglong};\n pub use types::os::arch::c99::{intptr_t, uintptr_t};\n+pub use types::os::arch::c99::{intmax_t, uintmax_t};\n pub use types::os::arch::posix88::{dev_t, ino_t, mode_t};\n pub use types::os::arch::posix88::{off_t, pid_t, ssize_t};\n \n@@ -533,6 +534,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i32;\n                 pub type uintptr_t = u32;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             #[cfg(any(target_arch = \"x86\",\n                       target_arch = \"mips\",\n@@ -740,6 +743,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -973,6 +978,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -1186,6 +1193,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -1426,6 +1435,9 @@ pub mod types {\n                 pub type uintptr_t = u32;\n                 #[cfg(target_arch = \"x86_64\")]\n                 pub type uintptr_t = u64;\n+\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n \n             pub mod posix88 {\n@@ -1815,6 +1827,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i32;\n                 pub type uintptr_t = u32;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -1916,6 +1930,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;"}]}