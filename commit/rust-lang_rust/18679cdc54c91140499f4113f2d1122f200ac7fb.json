{"sha": "18679cdc54c91140499f4113f2d1122f200ac7fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4Njc5Y2RjNTRjOTExNDA0OTlmNDExM2YyZDExMjJmMjAwYWM3ZmI=", "commit": {"author": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-04T09:32:22Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-04T09:49:59Z"}, "message": "adding HasParamEnv trait", "tree": {"sha": "ea12f273891d55bc33bc347f7097e3247c518b12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea12f273891d55bc33bc347f7097e3247c518b12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18679cdc54c91140499f4113f2d1122f200ac7fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18679cdc54c91140499f4113f2d1122f200ac7fb", "html_url": "https://github.com/rust-lang/rust/commit/18679cdc54c91140499f4113f2d1122f200ac7fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18679cdc54c91140499f4113f2d1122f200ac7fb/comments", "author": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8802dc037eb2fa84692588bc026bd550554e282b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8802dc037eb2fa84692588bc026bd550554e282b", "html_url": "https://github.com/rust-lang/rust/commit/8802dc037eb2fa84692588bc026bd550554e282b"}], "stats": {"total": 71, "additions": 49, "deletions": 22}, "files": [{"sha": "d4b93ed4785025cd5284aa7a9b6bc2731876ad77", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -1662,9 +1662,20 @@ impl ty::query::TyCtxtAt<'a, 'tcx, '_> {\n     }\n }\n \n+pub trait HasParamEnv<'tcx> {\n+    fn param_env(&self) -> ty::ParamEnv<'tcx>;\n+}\n+\n+impl<'tcx, C> HasParamEnv<'tcx> for LayoutCx<'tcx, C> {\n+    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n+        self.param_env\n+    }\n+}\n+\n impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n     where C: LayoutOf<Ty = Ty<'tcx>> + HasTyCtxt<'tcx>,\n-          C::TyLayout: MaybeResult<TyLayout<'tcx>>\n+          C::TyLayout: MaybeResult<TyLayout<'tcx>>,\n+          C: HasParamEnv<'tcx>\n {\n     type ParamEnv = ty::ParamEnv<'tcx>;\n \n@@ -1960,15 +1971,6 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n             }\n         }\n     }\n-\n-    fn is_freeze(\n-        this: TyLayout<'tcx>,\n-        cx: &C,\n-        param_env: Self::ParamEnv,\n-    )-> bool {\n-        this.ty.is_freeze(cx.tcx(), param_env, DUMMY_SP)\n-    }\n-\n }\n \n struct Niche {"}, {"sha": "bc2bb97a19e5471f5a8e6e5739eca5d200f8fe8f", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -66,6 +66,12 @@ impl ty::layout::HasTyCtxt<'tcx> for Builder<'_, '_, 'tcx> {\n     }\n }\n \n+impl ty::layout::HasParamEnv<'tcx> for Builder<'_, '_, 'tcx> {\n+    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n+        self.cx.param_env()\n+    }\n+}\n+\n impl ty::layout::LayoutOf for Builder<'_, '_, 'tcx> {\n     type Ty = Ty<'tcx>;\n     type TyLayout = TyLayout<'tcx>;"}, {"sha": "a225a11e94db049ea6469ce93e67ebdf2a9d7e72", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -15,7 +15,7 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc::mir::mono::Stats;\n use rustc::session::config::{self, DebugInfo};\n use rustc::session::Session;\n-use rustc::ty::layout::{LayoutError, LayoutOf, PointeeInfo, Size, TyLayout, VariantIdx};\n+use rustc::ty::layout::{LayoutError, LayoutOf, PointeeInfo, Size, TyLayout, VariantIdx, HasParamEnv};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashMap;\n use rustc_target::spec::{HasTargetSpec, Target};\n@@ -861,3 +861,9 @@ impl LayoutOf for CodegenCx<'ll, 'tcx> {\n             })\n     }\n }\n+\n+impl<'tcx, 'll> HasParamEnv<'tcx> for CodegenCx<'ll, 'tcx> {\n+    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n+        panic!(\"asd\")\n+    }\n+}"}, {"sha": "a3f99cd869e28f5851aebc854d63d57dc9c175da", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -10,7 +10,7 @@ use crate::mir::operand::OperandRef;\n use crate::mir::place::PlaceRef;\n use crate::MemFlags;\n use rustc::ty::Ty;\n-use rustc::ty::layout::{Align, Size};\n+use rustc::ty::layout::{Align, Size, HasParamEnv};\n use std::ops::Range;\n use std::iter::TrustedLen;\n \n@@ -29,6 +29,8 @@ pub trait BuilderMethods<'a, 'tcx: 'a>:\n     + IntrinsicCallMethods<'tcx>\n     + AsmBuilderMethods<'tcx>\n     + StaticBuilderMethods<'tcx>\n+    + HasParamEnv<'tcx>\n+\n {\n     fn new_block<'b>(cx: &'a Self::CodegenCx, llfn: Self::Value, name: &'b str) -> Self;\n     fn with_cx(cx: &'a Self::CodegenCx) -> Self;"}, {"sha": "8c336b11a5d0abf00fb165326d287d63b3a1a784", "filename": "src/librustc_codegen_ssa/traits/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -41,6 +41,8 @@ pub use self::type_::{\n     ArgTypeMethods, BaseTypeMethods, DerivedTypeMethods, LayoutTypeMethods, TypeMethods,\n };\n pub use self::write::{ModuleBufferMethods, ThinBufferMethods, WriteBackendMethods};\n+use rustc::ty::layout::{HasParamEnv};\n+\n \n use std::fmt;\n \n@@ -58,6 +60,7 @@ pub trait CodegenMethods<'tcx>:\n     + DeclareMethods<'tcx>\n     + AsmMethods<'tcx>\n     + PreDefineMethods<'tcx>\n+    + HasParamEnv<'tcx>\n {\n }\n \n@@ -72,6 +75,7 @@ impl<'tcx, T> CodegenMethods<'tcx> for T where\n         + DeclareMethods<'tcx>\n         + AsmMethods<'tcx>\n         + PreDefineMethods<'tcx>\n+        + HasParamEnv<'tcx>\n {\n }\n \n@@ -85,5 +89,6 @@ pub trait HasCodegen<'tcx>:\n             Type = Self::Type,\n             Funclet = Self::Funclet,\n             DIScope = Self::DIScope,\n-        >;\n+        >\n+        + HasParamEnv<'tcx>;\n }"}, {"sha": "db827afdb94f4481096d600aa8db0cd5ec599e9d", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -175,6 +175,14 @@ impl<'a, 'mir, 'tcx, M> layout::HasTyCtxt<'tcx> for InterpretCx<'a, 'mir, 'tcx,\n     }\n }\n \n+impl<'a, 'mir, 'tcx, M> layout::HasParamEnv<'tcx> for InterpretCx<'a, 'mir, 'tcx, M>\n+    where M: Machine<'a, 'mir, 'tcx>\n+{\n+    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n+        self.param_env\n+    }\n+}\n+\n impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> LayoutOf\n     for InterpretCx<'a, 'mir, 'tcx, M>\n {"}, {"sha": "7041a5593abbfe861d664f081f1fd74be0cdd81c", "filename": "src/librustc_passes/layout_test.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_passes%2Flayout_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_passes%2Flayout_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flayout_test.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -7,6 +7,7 @@ use rustc::ty::layout::HasTyCtxt;\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::layout::TargetDataLayout;\n use rustc::ty::layout::TyLayout;\n+use rustc::ty::layout::HasParamEnv;\n use rustc::ty::ParamEnv;\n use rustc::ty::Ty;\n use rustc::ty::TyCtxt;\n@@ -122,6 +123,12 @@ impl<'me, 'tcx> HasTyCtxt<'tcx> for UnwrapLayoutCx<'me, 'tcx> {\n     }\n }\n \n+impl<'me, 'tcx> HasParamEnv<'tcx> for UnwrapLayoutCx<'me, 'tcx> {\n+    fn param_env(&self) -> ParamEnv<'tcx> {\n+        self.param_env\n+    }\n+}\n+\n impl<'me, 'tcx> HasDataLayout for UnwrapLayoutCx<'me, 'tcx> {\n     fn data_layout(&self) -> &TargetDataLayout {\n         self.tcx.data_layout()"}, {"sha": "d69b4b6d2bdcaad0ae372ca9402ca3d2a59bce67", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18679cdc54c91140499f4113f2d1122f200ac7fb/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=18679cdc54c91140499f4113f2d1122f200ac7fb", "patch": "@@ -947,11 +947,6 @@ pub trait TyLayoutMethods<'a, C: LayoutOf<Ty = Self>>: Sized {\n         offset: Size,\n         param_env: Self::ParamEnv,\n     ) -> Option<PointeeInfo>;\n-    fn is_freeze(\n-        this: TyLayout<'a, Self>,\n-        cx: &C,\n-        param_env: Self::ParamEnv,\n-    )-> bool;\n }\n \n impl<'a, Ty> TyLayout<'a, Ty> {\n@@ -969,10 +964,6 @@ impl<'a, Ty> TyLayout<'a, Ty> {\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> {\n         Ty::pointee_info_at(self, cx, offset, param_env)\n     }\n-    pub fn is_freeze<C>(self, cx: &C, param_env: Ty::ParamEnv) -> bool\n-    where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> {\n-        Ty::is_freeze(self, cx, param_env)\n-    }\n }\n \n impl<'a, Ty> TyLayout<'a, Ty> {"}]}