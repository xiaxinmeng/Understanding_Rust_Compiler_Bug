{"sha": "612febcc4bec60dba58472269c2cf30860315a3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMmZlYmNjNGJlYzYwZGJhNTg0NzIyNjljMmNmMzA4NjAzMTVhM2Q=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-17T14:45:09Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-19T22:02:28Z"}, "message": "explain why we can use raw", "tree": {"sha": "74fda6c1666e7846eff83e03769a5453e0e8288f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74fda6c1666e7846eff83e03769a5453e0e8288f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/612febcc4bec60dba58472269c2cf30860315a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/612febcc4bec60dba58472269c2cf30860315a3d", "html_url": "https://github.com/rust-lang/rust/commit/612febcc4bec60dba58472269c2cf30860315a3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/612febcc4bec60dba58472269c2cf30860315a3d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c462e44c13ce33359dc50dbeb4f60ef552acd438", "url": "https://api.github.com/repos/rust-lang/rust/commits/c462e44c13ce33359dc50dbeb4f60ef552acd438", "html_url": "https://github.com/rust-lang/rust/commit/c462e44c13ce33359dc50dbeb4f60ef552acd438"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "59083413582469f231b98054250fce80ca0fc2b7", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/612febcc4bec60dba58472269c2cf30860315a3d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/612febcc4bec60dba58472269c2cf30860315a3d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=612febcc4bec60dba58472269c2cf30860315a3d", "patch": "@@ -597,6 +597,10 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         } else {\n             self.param_env\n         };\n+        // We use `const_eval_raw` here, and get an unvalidated result.  That is okay:\n+        // Our result will later be validated anyway, and there seems no good reason\n+        // to have to fail early here.  This is also more consistent with\n+        // `Memory::get_static_alloc` which has to use `const_eval_raw` to avoid cycles.\n         let val = self.tcx.const_eval_raw(param_env.and(gid)).map_err(|err| {\n             match err {\n                 ErrorHandled::Reported => EvalErrorKind::ReferencedConstant,"}]}