{"sha": "fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjOTM1YzEwZjg2ZWM3NDE0ZjZiN2M5NDY2YzZhM2I4Y2M0NjI1ZWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T14:13:42Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T14:13:42Z"}, "message": "print errors in one central location", "tree": {"sha": "50df00d3973d57deb793ac13acc801be4d9a7b47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50df00d3973d57deb793ac13acc801be4d9a7b47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWXmWAAoJEFbW7qD8Z6xGKmMP/RAWma4DAPQDI3h4mbhnyPgE\nooVF54iRzeYOXFJ9aEHun1ngakP7s8/vHuIgPBKtEjsb/vx/BDJFxv+/0oNlmbjq\n42G6SFamrfLbso7bbM8R5/QmoqoxE99M6N7ATJ19jkwpJB/XBTB5qA/7/uj7fqER\nCBh8/vcxwg8tJOTw77y3P5EnZ5o1M0S4oiSCkkBoI3tBUvAt7GFFH2movQOUoxnn\nqp0c6CFazXg7REsm0KIhV+y0U5w3bT8TyTQhsnCtfwc79wocia8EiAxHf0R0gfVS\nh8T0qkFGhcDNVwg8EY9hC9ZueJDb/slOtKdT00XqoZAM/qZTk8nDarGFMhi0m4o4\nkmYDppu3U1KVVBytNldRX01ihXgQh/zvYFJ6EO7WwsfNCsqHpk1tBinuku+6XUTt\nFIkSsnMrhPkUm5Wes4B2kCd2izL5FjA11vfuIp2LhHAeYP32eN/+TqDNv7df97hH\nsA6iKJXa1YwOyodaWq8iT/l4fCr3N1dMLIAhRDeXPQc1nKh11Ziu1KSyxYXy+V61\nUXz4rSNl6njSRyHOmf/l/xPs9YsxEJ0B434ZCgCIkk+9WeD9z62ibDV6UPLFHGi1\nQu2oBY7C+qH4+kSi2k6jz9oOKNmg/ujRcjSdsAbTTs2tvomzJnwUvUCK7zs798j2\neZpyZulnbrTNXxVs2pbr\n=+7s1\n-----END PGP SIGNATURE-----", "payload": "tree 50df00d3973d57deb793ac13acc801be4d9a7b47\nparent ba9e25b2eb932e87d02aedefae867f5f768a66cc\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465481622 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465481622 +0200\n\nprint errors in one central location"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "html_url": "https://github.com/rust-lang/rust/commit/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba9e25b2eb932e87d02aedefae867f5f768a66cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba9e25b2eb932e87d02aedefae867f5f768a66cc", "html_url": "https://github.com/rust-lang/rust/commit/ba9e25b2eb932e87d02aedefae867f5f768a66cc"}], "stats": {"total": 20, "additions": 4, "deletions": 16}, "files": [{"sha": "8ac86e3ad1349490743028485e3f48c1c37700e0", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "patch": "@@ -322,7 +322,7 @@ impl<'a, 'tcx> GlobalEvalContext<'a, 'tcx> {\n \n     #[inline(never)]\n     #[cold]\n-    fn report(&self, e: &EvalError) {\n+    fn report(&self, e: EvalError) {\n         let stmt = self.frame().stmt;\n         let block = self.basic_block();\n         let span = if stmt < block.statements.len() {\n@@ -347,13 +347,6 @@ impl<'a, 'tcx> GlobalEvalContext<'a, 'tcx> {\n         err.emit();\n     }\n \n-    fn maybe_report<T>(&self, r: EvalResult<T>) -> EvalResult<T> {\n-        if let Err(ref e) = r {\n-            self.report(e);\n-        }\n-        r\n-    }\n-\n     fn run(&mut self) -> EvalResult<()> {\n         let mut stepper = stepper::Stepper::new(self);\n         while stepper.step()? {}\n@@ -1435,10 +1428,7 @@ pub fn interpret_start_points<'a, 'tcx>(\n                         gecx.memory.dump(return_ptr.alloc_id);\n                     },\n                     Ok(None) => warn!(\"diverging function returned\"),\n-                    Err(_e) => {\n-                        // TODO(solson): Detect whether the error was already reported or not.\n-                        // tcx.sess.err(&e.to_string());\n-                    }\n+                    Err(e) => gecx.report(e),\n                 }\n             }\n         }"}, {"sha": "c73a46c84492673c280f6ba5bf92588bbec9a19a", "filename": "src/interpreter/stepper.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef/src%2Finterpreter%2Fstepper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef/src%2Finterpreter%2Fstepper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstepper.rs?ref=fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "patch": "@@ -32,8 +32,7 @@ impl<'fncx, 'a, 'tcx> Stepper<'fncx, 'a, 'tcx> {\n     fn statement(&mut self, stmt: &mir::Statement<'tcx>) -> EvalResult<()> {\n         trace!(\"{:?}\", stmt);\n         let mir::StatementKind::Assign(ref lvalue, ref rvalue) = stmt.kind;\n-        let result = self.gecx.eval_assignment(lvalue, rvalue);\n-        self.gecx.maybe_report(result)?;\n+        self.gecx.eval_assignment(lvalue, rvalue)?;\n         self.gecx.frame_mut().stmt += 1;\n         Ok(())\n     }\n@@ -42,8 +41,7 @@ impl<'fncx, 'a, 'tcx> Stepper<'fncx, 'a, 'tcx> {\n         // after a terminator we go to a new block\n         self.gecx.frame_mut().stmt = 0;\n         trace!(\"{:?}\", terminator.kind);\n-        let result = self.gecx.eval_terminator(terminator);\n-        self.gecx.maybe_report(result)?;\n+        self.gecx.eval_terminator(terminator)?;\n         if !self.gecx.stack.is_empty() {\n             trace!(\"// {:?}\", self.gecx.frame().next_block);\n         }"}]}