{"sha": "5c4adbe1e12c804a03146e351e06f666f0fe1fdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNGFkYmUxZTEyYzgwNGEwMzE0NmUzNTFlMDZmNjY2ZjBmZTFmZGY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-13T14:32:48Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-16T03:08:47Z"}, "message": "Add all tier 1 platforms to supported platforms for \"if-available\"\n\n... and update the comment in `config.toml.example`", "tree": {"sha": "771b5b1d2c37bc4c40cbc14d469a1598ec91f98b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/771b5b1d2c37bc4c40cbc14d469a1598ec91f98b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c4adbe1e12c804a03146e351e06f666f0fe1fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4adbe1e12c804a03146e351e06f666f0fe1fdf", "html_url": "https://github.com/rust-lang/rust/commit/5c4adbe1e12c804a03146e351e06f666f0fe1fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c4adbe1e12c804a03146e351e06f666f0fe1fdf/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67660704229ba03d9b305bd938cd1f8f0bf65d11", "url": "https://api.github.com/repos/rust-lang/rust/commits/67660704229ba03d9b305bd938cd1f8f0bf65d11", "html_url": "https://github.com/rust-lang/rust/commit/67660704229ba03d9b305bd938cd1f8f0bf65d11"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "55b20adabd0451d4dac3312ff5c3da080ceda7f6", "filename": "config.toml.example", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c4adbe1e12c804a03146e351e06f666f0fe1fdf/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/5c4adbe1e12c804a03146e351e06f666f0fe1fdf/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=5c4adbe1e12c804a03146e351e06f666f0fe1fdf", "patch": "@@ -35,9 +35,11 @@ changelog-seen = 2\n # Unless you're developing for a target where Rust CI doesn't build a compiler\n # toolchain or changing LLVM locally, you probably want to set this to true.\n #\n-# It's currently false by default due to being newly added; please file bugs if\n-# enabling this did not work for you on x86_64-unknown-linux-gnu.\n-# Other target triples are currently not supported; see #77084.\n+# This is false by default so that distributions don't unexpectedly download\n+# LLVM from the internet.\n+#\n+# All tier 1 targets are currently supported; set this to `\"if-supported\"` if\n+# you are not sure whether you're on a tier 1 target.\n #\n # We also currently only support this when building LLVM for the build triple.\n #"}, {"sha": "5350c9eefe75353837d397101b13397cda3dd5d6", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5c4adbe1e12c804a03146e351e06f666f0fe1fdf/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/5c4adbe1e12c804a03146e351e06f666f0fe1fdf/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=5c4adbe1e12c804a03146e351e06f666f0fe1fdf", "patch": "@@ -465,8 +465,21 @@ def download_stage0(self):\n \n     def downloading_llvm(self):\n         opt = self.get_toml('download-ci-llvm', 'llvm')\n+        # This is currently all tier 1 targets (since others may not have CI\n+        # artifacts)\n+        # https://doc.rust-lang.org/rustc/platform-support.html#tier-1\n+        supported_platforms = [\n+            \"aarch64-unknown-linux-gnu\",\n+            \"i686-pc-windows-gnu\",\n+            \"i686-pc-windows-msvc\",\n+            \"i686-unknown-linux-gnu\",\n+            \"x86_64-unknown-linux-gnu\",\n+            \"x86_64-apple-darwin\",\n+            \"x86_64-pc-windows-gnu\",\n+            \"x86_64-pc-windows-msvc\",\n+        ]\n         return opt == \"true\" \\\n-            or (opt == \"if-available\" and self.build == \"x86_64-unknown-linux-gnu\")\n+            or (opt == \"if-available\" and self.build in supported_platforms)\n \n     def _download_stage0_helper(self, filename, pattern, tarball_suffix, date=None):\n         if date is None:"}]}