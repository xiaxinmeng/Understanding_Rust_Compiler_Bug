{"sha": "4e73d90ce0f32d685f97080a784a30502b073711", "node_id": "C_kwDOAAsO6NoAKDRlNzNkOTBjZTBmMzJkNjg1Zjk3MDgwYTc4NGEzMDUwMmIwNzM3MTE", "commit": {"author": {"name": "Martin Nordholts", "email": "enselic@gmail.com", "date": "2022-07-19T19:23:17Z"}, "committer": {"name": "Martin Nordholts", "email": "enselic@gmail.com", "date": "2022-07-19T20:43:39Z"}, "message": "rustdoc-json: De-duplicate `FromWithTcx<clean::Import>`", "tree": {"sha": "513844ce05bc50da1b458b1255a62b503604a995", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/513844ce05bc50da1b458b1255a62b503604a995"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e73d90ce0f32d685f97080a784a30502b073711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e73d90ce0f32d685f97080a784a30502b073711", "html_url": "https://github.com/rust-lang/rust/commit/4e73d90ce0f32d685f97080a784a30502b073711", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e73d90ce0f32d685f97080a784a30502b073711/comments", "author": {"login": "Enselic", "id": 115040, "node_id": "MDQ6VXNlcjExNTA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/115040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enselic", "html_url": "https://github.com/Enselic", "followers_url": "https://api.github.com/users/Enselic/followers", "following_url": "https://api.github.com/users/Enselic/following{/other_user}", "gists_url": "https://api.github.com/users/Enselic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enselic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enselic/subscriptions", "organizations_url": "https://api.github.com/users/Enselic/orgs", "repos_url": "https://api.github.com/users/Enselic/repos", "events_url": "https://api.github.com/users/Enselic/events{/privacy}", "received_events_url": "https://api.github.com/users/Enselic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Enselic", "id": 115040, "node_id": "MDQ6VXNlcjExNTA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/115040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enselic", "html_url": "https://github.com/Enselic", "followers_url": "https://api.github.com/users/Enselic/followers", "following_url": "https://api.github.com/users/Enselic/following{/other_user}", "gists_url": "https://api.github.com/users/Enselic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enselic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enselic/subscriptions", "organizations_url": "https://api.github.com/users/Enselic/orgs", "repos_url": "https://api.github.com/users/Enselic/repos", "events_url": "https://api.github.com/users/Enselic/events{/privacy}", "received_events_url": "https://api.github.com/users/Enselic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96c2df810b0b681fee63cae11ca63844792b6190", "url": "https://api.github.com/repos/rust-lang/rust/commits/96c2df810b0b681fee63cae11ca63844792b6190", "html_url": "https://github.com/rust-lang/rust/commit/96c2df810b0b681fee63cae11ca63844792b6190"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "791553631ae6ff1d1ae7a8be2fc07910bf7cfb50", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4e73d90ce0f32d685f97080a784a30502b073711/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e73d90ce0f32d685f97080a784a30502b073711/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=4e73d90ce0f32d685f97080a784a30502b073711", "patch": "@@ -679,24 +679,18 @@ impl FromWithTcx<clean::Variant> for Variant {\n impl FromWithTcx<clean::Import> for Import {\n     fn from_tcx(import: clean::Import, tcx: TyCtxt<'_>) -> Self {\n         use clean::ImportKind::*;\n-        match import.kind {\n-            Simple(s) => Import {\n-                source: import.source.path.whole_name(),\n-                name: s.to_string(),\n-                id: import.source.did.map(ItemId::from).map(|i| from_item_id(i, tcx)),\n-                glob: false,\n-            },\n-            Glob => Import {\n-                source: import.source.path.whole_name(),\n-                name: import\n-                    .source\n-                    .path\n-                    .last_opt()\n-                    .unwrap_or_else(|| Symbol::intern(\"*\"))\n-                    .to_string(),\n-                id: import.source.did.map(ItemId::from).map(|i| from_item_id(i, tcx)),\n-                glob: true,\n-            },\n+        let (name, glob) = match import.kind {\n+            Simple(s) => (s.to_string(), false),\n+            Glob => (\n+                import.source.path.last_opt().unwrap_or_else(|| Symbol::intern(\"*\")).to_string(),\n+                true,\n+            ),\n+        };\n+        Import {\n+            source: import.source.path.whole_name(),\n+            name,\n+            id: import.source.did.map(ItemId::from).map(|i| from_item_id(i, tcx)),\n+            glob,\n         }\n     }\n }"}]}