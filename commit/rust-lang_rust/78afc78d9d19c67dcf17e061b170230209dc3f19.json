{"sha": "78afc78d9d19c67dcf17e061b170230209dc3f19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YWZjNzhkOWQxOWM2N2RjZjE3ZTA2MWIxNzAyMzAyMDlkYzNmMTk=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-02T05:32:17Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-02T05:32:17Z"}, "message": "Rollup merge of #30971 - SDX2000:docfixes, r=steveklabnik\n\nUpdated documentation to clarify the difference between `and_then` and `map`. This also explains why we need `and_then` in addition to `map`. Please look at the diff for more information.\n\nr?  @alexcrichton", "tree": {"sha": "0a04590b07707fe35760244c6fef6f6bbde38111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a04590b07707fe35760244c6fef6f6bbde38111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78afc78d9d19c67dcf17e061b170230209dc3f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78afc78d9d19c67dcf17e061b170230209dc3f19", "html_url": "https://github.com/rust-lang/rust/commit/78afc78d9d19c67dcf17e061b170230209dc3f19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78afc78d9d19c67dcf17e061b170230209dc3f19/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4a249fcab3d495e75110aa78cea6b637f303509", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4a249fcab3d495e75110aa78cea6b637f303509", "html_url": "https://github.com/rust-lang/rust/commit/a4a249fcab3d495e75110aa78cea6b637f303509"}, {"sha": "0922d7e68f3186aa57751af26f3342b1837a5140", "url": "https://api.github.com/repos/rust-lang/rust/commits/0922d7e68f3186aa57751af26f3342b1837a5140", "html_url": "https://github.com/rust-lang/rust/commit/0922d7e68f3186aa57751af26f3342b1837a5140"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "73875704ecaf788ce0d54cce34b04b4b2549acb3", "filename": "src/doc/book/error-handling.md", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/78afc78d9d19c67dcf17e061b170230209dc3f19/src%2Fdoc%2Fbook%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/78afc78d9d19c67dcf17e061b170230209dc3f19/src%2Fdoc%2Fbook%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ferror-handling.md?ref=78afc78d9d19c67dcf17e061b170230209dc3f19", "patch": "@@ -356,11 +356,28 @@ fn file_name(file_path: &str) -> Option<&str> {\n ```\n \n You might think that we could use the `map` combinator to reduce the case\n-analysis, but its type doesn't quite fit. Namely, `map` takes a function that\n-does something only with the inner value. The result of that function is then\n-*always* [rewrapped with `Some`](#code-option-map). Instead, we need something\n-like `map`, but which allows the caller to return another `Option`. Its generic\n-implementation is even simpler than `map`:\n+analysis, but its type doesn't quite fit...\n+\n+```rust,ignore\n+fn file_path_ext(file_path: &str) -> Option<&str> {\n+    file_name(file_path).map(|x| extension(x)) //Compilation error\n+}\n+```\n+\n+The `map` function here wraps the value returned by the `extension` function\n+inside an `Option<_>` and since the `extension` function itself returns an\n+`Option<&str>` the expression `file_name(file_path).map(|x| extension(x))`\n+actually returns an `Option<Option<&str>>`.\n+\n+But since `file_path_ext` just returns `Option<&str>` (and not\n+`Option<Option<&str>>`) we get a compilation error.\n+\n+The result of the function taken by map as input is *always* [rewrapped with\n+`Some`](#code-option-map). Instead, we need something like `map`, but which\n+allows the caller to return a `Option<_>` directly without wrapping it in\n+another `Option<_>`.\n+\n+Its generic implementation is even simpler than `map`:\n \n ```rust\n fn and_then<F, T, A>(option: Option<T>, f: F) -> Option<A>\n@@ -382,6 +399,10 @@ fn file_path_ext(file_path: &str) -> Option<&str> {\n }\n ```\n \n+Side note: Since `and_then` essentially works like `map` but returns an\n+`Option<_>` instead of an `Option<Option<_>>` it is known as `flatmap` in some\n+other languages.\n+\n The `Option` type has many other combinators [defined in the standard\n library][5]. It is a good idea to skim this list and familiarize\n yourself with what's available\u2014they can often reduce case analysis"}]}