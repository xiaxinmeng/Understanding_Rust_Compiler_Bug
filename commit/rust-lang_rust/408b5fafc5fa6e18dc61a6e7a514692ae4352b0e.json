{"sha": "408b5fafc5fa6e18dc61a6e7a514692ae4352b0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOGI1ZmFmYzVmYTZlMThkYzYxYTZlN2E1MTQ2OTJhZTQzNTJiMGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-14T15:26:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T15:26:10Z"}, "message": "Merge #5375\n\n5375: Use more explicit type for save registration r=matklad a=kjeremy\n\nThis was introduced in the latest lsp-types\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "d7fb2f09eddfc0eeaba2daa984eff1c97ab7e604", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7fb2f09eddfc0eeaba2daa984eff1c97ab7e604"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDc6SCRBK7hj4Ov3rIwAAdHIIAIJPeQLIaUKsa8croB/CB2ef\njYzlXJbqCNHcJ5CCTmS6Mp2hcPJCCrU2KobNrWVEnhEegmAsgreBsdcDbVDbaFTz\na1yc1ZMulydXBZIPTxY3PkVxTQpctPKkZyVXDk+H1hEw0BMzUskSfBAhJ5bVlQnO\nWlUopmq1CsgT4khzpLyiY1suEuCDatRMlvvFWLptSRlF398gLawSRFZjq029Rp6R\nBJQJaq5YUPXSub/zl1LkNeSPKXxpG7TGreqNygn6J7lmsGjbkVVEzAY/t0LUdK7l\n5xOQ9XosA1qonBbme4znIYr75Tv/CooH93PTYINMk7PN48LUYvjng8jtyZSfM38=\n=irFo\n-----END PGP SIGNATURE-----\n", "payload": "tree d7fb2f09eddfc0eeaba2daa984eff1c97ab7e604\nparent 5d17dfee2f042e33672c17710eaa2d36278599a3\nparent 2257a48cd36c61f887b881edf44df7fd260a52fc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1594740370 +0000\ncommitter GitHub <noreply@github.com> 1594740370 +0000\n\nMerge #5375\n\n5375: Use more explicit type for save registration r=matklad a=kjeremy\n\nThis was introduced in the latest lsp-types\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e", "html_url": "https://github.com/rust-lang/rust/commit/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d17dfee2f042e33672c17710eaa2d36278599a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d17dfee2f042e33672c17710eaa2d36278599a3", "html_url": "https://github.com/rust-lang/rust/commit/5d17dfee2f042e33672c17710eaa2d36278599a3"}, {"sha": "2257a48cd36c61f887b881edf44df7fd260a52fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2257a48cd36c61f887b881edf44df7fd260a52fc", "html_url": "https://github.com/rust-lang/rust/commit/2257a48cd36c61f887b881edf44df7fd260a52fc"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "11eb9a8233872d6962317f588a8c701364a4d94c", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=408b5fafc5fa6e18dc61a6e7a514692ae4352b0e", "patch": "@@ -712,9 +712,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.76.0\"\n+version = \"0.76.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"af5586f0631c7f7826c3ea39377c326d7b4623138be7ab1204dab22e47717449\"\n+checksum = \"55cfa1593e04985972e018890b2e1a9ed25c71efc800067fbf0990a9432421c8\"\n dependencies = [\n  \"base64\",\n  \"bitflags\","}, {"sha": "5afcc2d87ac69ff4db81e75c874f5ccd6924caa2", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/408b5fafc5fa6e18dc61a6e7a514692ae4352b0e/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=408b5fafc5fa6e18dc61a6e7a514692ae4352b0e", "patch": "@@ -122,29 +122,33 @@ impl GlobalState {\n             );\n         };\n \n-        let registration_options = lsp_types::TextDocumentRegistrationOptions {\n-            document_selector: Some(vec![\n-                lsp_types::DocumentFilter {\n-                    language: None,\n-                    scheme: None,\n-                    pattern: Some(\"**/*.rs\".into()),\n-                },\n-                lsp_types::DocumentFilter {\n-                    language: None,\n-                    scheme: None,\n-                    pattern: Some(\"**/Cargo.toml\".into()),\n-                },\n-                lsp_types::DocumentFilter {\n-                    language: None,\n-                    scheme: None,\n-                    pattern: Some(\"**/Cargo.lock\".into()),\n-                },\n-            ]),\n+        let save_registration_options = lsp_types::TextDocumentSaveRegistrationOptions {\n+            include_text: Some(false),\n+            text_document_registration_options: lsp_types::TextDocumentRegistrationOptions {\n+                document_selector: Some(vec![\n+                    lsp_types::DocumentFilter {\n+                        language: None,\n+                        scheme: None,\n+                        pattern: Some(\"**/*.rs\".into()),\n+                    },\n+                    lsp_types::DocumentFilter {\n+                        language: None,\n+                        scheme: None,\n+                        pattern: Some(\"**/Cargo.toml\".into()),\n+                    },\n+                    lsp_types::DocumentFilter {\n+                        language: None,\n+                        scheme: None,\n+                        pattern: Some(\"**/Cargo.lock\".into()),\n+                    },\n+                ]),\n+            },\n         };\n+\n         let registration = lsp_types::Registration {\n             id: \"textDocument/didSave\".to_string(),\n             method: \"textDocument/didSave\".to_string(),\n-            register_options: Some(serde_json::to_value(registration_options).unwrap()),\n+            register_options: Some(serde_json::to_value(save_registration_options).unwrap()),\n         };\n         self.send_request::<lsp_types::request::RegisterCapability>(\n             lsp_types::RegistrationParams { registrations: vec![registration] },"}]}