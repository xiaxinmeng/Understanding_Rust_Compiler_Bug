{"sha": "5e827bd948ea206328b126345ab8e909978b3b9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlODI3YmQ5NDhlYTIwNjMyOGIxMjYzNDVhYjhlOTA5OTc4YjNiOWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-21T13:59:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-21T13:59:03Z"}, "message": "Merge #3668\n\n3668: disable invert-if assist for if-let r=matklad a=JoshMcguigan\n\nFixes #3281 \r\n\r\nThis disables the invert-if assist for if-let expressions, fixing the bug reported in #3281.\r\n\r\nWhile in the exact case reported in #3281, `if let Some(_) = foo { ...`, it would be possible to invert the if-let pattern, in most cases it will not be possible, so disabling this assist for if-let expressions seems reasonable. \n\nCo-authored-by: Josh Mcguigan <joshmcg88@gmail.com>", "tree": {"sha": "a1a078720ff5a1f3fef051e97ad016f572e9e01a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1a078720ff5a1f3fef051e97ad016f572e9e01a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e827bd948ea206328b126345ab8e909978b3b9b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJedh2nCRBK7hj4Ov3rIwAAdHIIAFh0Uc6uTgJf16mi3G/xbi6w\nWXgdSaUzDZzMZE+z2owcllLzqs6rwTuCAcXV3n8DL1Dus+OXPhCWBsjh/7DNbz2t\nStVE6YThi/EbHW5BZD2KAr4HRqiiGO1TBNyytaLlgnM/2pm/sG5qOQmXbcMcpRPE\ncDAWSubK/Dyap5pwIfU1WRbTd1RxxeZs1Dkp00lV2SIs7V/2waYnGxRlaFh09Bhk\ndS0o13bIpNvePfDXt/v2Sr07F3WxfhmAVPYxmtt6ZKVJ8Na7M4IwE1+2F5PBqxhO\np0wLHvtmnuAhD5lsXPBFKHiiVr401/71C60VbYY7uar8TRGD4Nicg6YLaCYm4Es=\n=cUxY\n-----END PGP SIGNATURE-----\n", "payload": "tree a1a078720ff5a1f3fef051e97ad016f572e9e01a\nparent 10867336e627f84a4886592c0a2764f5105bd0ce\nparent c3702a6b7143ca6e6186f3c0c07589ddd71b20fb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1584799143 +0000\ncommitter GitHub <noreply@github.com> 1584799143 +0000\n\nMerge #3668\n\n3668: disable invert-if assist for if-let r=matklad a=JoshMcguigan\n\nFixes #3281 \r\n\r\nThis disables the invert-if assist for if-let expressions, fixing the bug reported in #3281.\r\n\r\nWhile in the exact case reported in #3281, `if let Some(_) = foo { ...`, it would be possible to invert the if-let pattern, in most cases it will not be possible, so disabling this assist for if-let expressions seems reasonable. \n\nCo-authored-by: Josh Mcguigan <joshmcg88@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e827bd948ea206328b126345ab8e909978b3b9b", "html_url": "https://github.com/rust-lang/rust/commit/5e827bd948ea206328b126345ab8e909978b3b9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e827bd948ea206328b126345ab8e909978b3b9b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10867336e627f84a4886592c0a2764f5105bd0ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/10867336e627f84a4886592c0a2764f5105bd0ce", "html_url": "https://github.com/rust-lang/rust/commit/10867336e627f84a4886592c0a2764f5105bd0ce"}, {"sha": "c3702a6b7143ca6e6186f3c0c07589ddd71b20fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3702a6b7143ca6e6186f3c0c07589ddd71b20fb", "html_url": "https://github.com/rust-lang/rust/commit/c3702a6b7143ca6e6186f3c0c07589ddd71b20fb"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "4c57168687f3216bb286330a94b09fe6d55c2576", "filename": "crates/ra_assists/src/handlers/invert_if.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5e827bd948ea206328b126345ab8e909978b3b9b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e827bd948ea206328b126345ab8e909978b3b9b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs?ref=5e827bd948ea206328b126345ab8e909978b3b9b", "patch": "@@ -33,6 +33,11 @@ pub(crate) fn invert_if(ctx: AssistCtx) -> Option<Assist> {\n         return None;\n     }\n \n+    // This assist should not apply for if-let.\n+    if expr.condition()?.pat().is_some() {\n+        return None;\n+    }\n+\n     let cond = expr.condition()?.expr()?;\n     let then_node = expr.then_branch()?.syntax().clone();\n \n@@ -90,4 +95,12 @@ mod tests {\n     fn invert_if_doesnt_apply_with_cursor_not_on_if() {\n         check_assist_not_applicable(invert_if, \"fn f() { if !<|>cond { 3 * 2 } else { 1 } }\")\n     }\n+\n+    #[test]\n+    fn invert_if_doesnt_apply_with_if_let() {\n+        check_assist_not_applicable(\n+            invert_if,\n+            \"fn f() { i<|>f let Some(_) = Some(1) { 1 } else { 0 } }\",\n+        )\n+    }\n }"}]}