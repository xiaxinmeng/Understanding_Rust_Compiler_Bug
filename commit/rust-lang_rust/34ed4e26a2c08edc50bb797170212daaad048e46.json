{"sha": "34ed4e26a2c08edc50bb797170212daaad048e46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZWQ0ZTI2YTJjMDhlZGM1MGJiNzk3MTcwMjEyZGFhYWQwNDhlNDY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-08-28T19:27:10Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-08-30T22:48:37Z"}, "message": "std: Add a file-renaming function to std::os", "tree": {"sha": "6ee791b15ee0acd40c0b841d7571ad19dd6c7e86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ee791b15ee0acd40c0b841d7571ad19dd6c7e86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34ed4e26a2c08edc50bb797170212daaad048e46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34ed4e26a2c08edc50bb797170212daaad048e46", "html_url": "https://github.com/rust-lang/rust/commit/34ed4e26a2c08edc50bb797170212daaad048e46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34ed4e26a2c08edc50bb797170212daaad048e46/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8464ee04a423808bf110640adf5c9c4952b1f9cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8464ee04a423808bf110640adf5c9c4952b1f9cf", "html_url": "https://github.com/rust-lang/rust/commit/8464ee04a423808bf110640adf5c9c4952b1f9cf"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "914081627880731be515a1be690509c7459051b0", "filename": "src/libstd/os.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/34ed4e26a2c08edc50bb797170212daaad048e46/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ed4e26a2c08edc50bb797170212daaad048e46/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=34ed4e26a2c08edc50bb797170212daaad048e46", "patch": "@@ -1002,6 +1002,18 @@ pub fn remove_file(p: &Path) -> bool {\n     }\n }\n \n+/// Renames an existing file or directory\n+pub fn rename_file(old: &Path, new: &Path) -> bool {\n+    #[fixed_stack_segment]; #[inline(never)];\n+    unsafe {\n+       do old.with_c_str |old_buf| {\n+            do new.with_c_str |new_buf| {\n+                libc::rename(old_buf, new_buf) == (0 as c_int)\n+            }\n+       }\n+    }\n+}\n+\n #[cfg(unix)]\n /// Returns the platform-specific value of errno\n pub fn errno() -> int {"}, {"sha": "6079168838585a097012fe2a43898d03bf41f530", "filename": "src/test/run-pass/rename-directory.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/34ed4e26a2c08edc50bb797170212daaad048e46/src%2Ftest%2Frun-pass%2Frename-directory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ed4e26a2c08edc50bb797170212daaad048e46/src%2Ftest%2Frun-pass%2Frename-directory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frename-directory.rs?ref=34ed4e26a2c08edc50bb797170212daaad048e46", "patch": "@@ -0,0 +1,57 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This test can't be a unit test in std,\n+// because it needs mkdtemp, which is in extra\n+\n+// xfail-fast\n+extern mod extra;\n+\n+use extra::tempfile::mkdtemp;\n+use std::os;\n+use std::libc;\n+use std::libc::*;\n+\n+fn rename_directory() {\n+    #[fixed_stack_segment];\n+    unsafe {\n+        static U_RWX: i32 = (S_IRUSR | S_IWUSR | S_IXUSR) as i32;\n+\n+        let tmpdir = mkdtemp(&os::tmpdir(), \"rename_directory\").expect(\"rename_directory failed\");\n+        let old_path = tmpdir.push_many([\"foo\", \"bar\", \"baz\"]);\n+        assert!(os::mkdir_recursive(&old_path, U_RWX));\n+        let test_file = &old_path.push(\"temp.txt\");\n+\n+        /* Write the temp input file */\n+        let ostream = do test_file.to_str().with_c_str |fromp| {\n+            do \"w+b\".with_c_str |modebuf| {\n+                libc::fopen(fromp, modebuf)\n+            }\n+        };\n+        assert!((ostream as uint != 0u));\n+        let s = ~\"hello\";\n+        do \"hello\".with_c_str |buf| {\n+            let write_len = libc::fwrite(buf as *c_void,\n+                                         1u as size_t,\n+                                         (s.len() + 1u) as size_t,\n+                                         ostream);\n+            assert_eq!(write_len, (s.len() + 1) as size_t)\n+        }\n+        assert_eq!(libc::fclose(ostream), (0u as c_int));\n+\n+        let new_path = tmpdir.push_many([\"quux\", \"blat\"]);\n+        assert!(os::mkdir_recursive(&new_path, U_RWX));\n+        assert!(os::rename_file(&old_path, &new_path.push(\"newdir\")));\n+        assert!(os::path_is_dir(&new_path.push(\"newdir\")));\n+        assert!(os::path_exists(&new_path.push_many([\"newdir\", \"temp.txt\"])));\n+    }\n+}\n+\n+fn main() { rename_directory() }"}]}