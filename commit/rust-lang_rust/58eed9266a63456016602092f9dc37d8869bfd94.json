{"sha": "58eed9266a63456016602092f9dc37d8869bfd94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZWVkOTI2NmE2MzQ1NjAxNjYwMjA5MmY5ZGMzN2Q4ODY5YmZkOTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-14T18:00:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-14T18:00:53Z"}, "message": "Auto merge of #31642 - rkruppe:rm-regex-script, r=alexcrichton\n\nThis file was probably forgotten when libregex moved out of tree. The rust-lang-nursery/regex repo has a nigh-identical file in its script/ folder.", "tree": {"sha": "463de0e1ebff2b8cd6a8711c77117ac065ba8ab2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/463de0e1ebff2b8cd6a8711c77117ac065ba8ab2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58eed9266a63456016602092f9dc37d8869bfd94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58eed9266a63456016602092f9dc37d8869bfd94", "html_url": "https://github.com/rust-lang/rust/commit/58eed9266a63456016602092f9dc37d8869bfd94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58eed9266a63456016602092f9dc37d8869bfd94/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "004c4b4b7d581f54365bc621a23106e970120f99", "url": "https://api.github.com/repos/rust-lang/rust/commits/004c4b4b7d581f54365bc621a23106e970120f99", "html_url": "https://github.com/rust-lang/rust/commit/004c4b4b7d581f54365bc621a23106e970120f99"}, {"sha": "14e8af410023a7de0ac46249f01288297c88388b", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e8af410023a7de0ac46249f01288297c88388b", "html_url": "https://github.com/rust-lang/rust/commit/14e8af410023a7de0ac46249f01288297c88388b"}], "stats": {"total": 109, "additions": 0, "deletions": 109}, "files": [{"sha": "ea7f51c86f81754141e47940abe12ae2445863e2", "filename": "src/etc/regex-match-tests.py", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/004c4b4b7d581f54365bc621a23106e970120f99/src%2Fetc%2Fregex-match-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/004c4b4b7d581f54365bc621a23106e970120f99/src%2Fetc%2Fregex-match-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fregex-match-tests.py?ref=004c4b4b7d581f54365bc621a23106e970120f99", "patch": "@@ -1,109 +0,0 @@\n-#!/usr/bin/env python2\n-\n-# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-from __future__ import absolute_import, division, print_function\n-import argparse\n-import datetime\n-import os.path as path\n-\n-\n-def print_tests(tests):\n-    print('\\n'.join([test_tostr(t) for t in tests]))\n-\n-\n-def read_tests(f):\n-    basename, _ = path.splitext(path.basename(f))\n-    tests = []\n-    for lineno, line in enumerate(open(f), 1):\n-        fields = filter(None, map(str.strip, line.split('\\t')))\n-        if not (4 <= len(fields) <= 5) \\\n-           or 'E' not in fields[0] or fields[0][0] == '#':\n-            continue\n-\n-        opts, pat, text, sgroups = fields[0:4]\n-        groups = []  # groups as integer ranges\n-        if sgroups == 'NOMATCH':\n-            groups = [None]\n-        elif ',' in sgroups:\n-            noparen = map(lambda s: s.strip('()'), sgroups.split(')('))\n-            for g in noparen:\n-                s, e = map(str.strip, g.split(','))\n-                if s == '?' and e == '?':\n-                    groups.append(None)\n-                else:\n-                    groups.append((int(s), int(e)))\n-        else:\n-            # This skips tests that should result in an error.\n-            # There aren't many, so I think we can just capture those\n-            # manually. Possibly fix this in future.\n-            continue\n-\n-        if pat == 'SAME':\n-            pat = tests[-1][1]\n-        if '$' in opts:\n-            pat = pat.decode('string_escape')\n-            text = text.decode('string_escape')\n-        if 'i' in opts:\n-            pat = '(?i)%s' % pat\n-\n-        name = '%s_%d' % (basename, lineno)\n-        tests.append((name, pat, text, groups))\n-    return tests\n-\n-\n-def test_tostr(t):\n-    lineno, pat, text, groups = t\n-    options = map(group_tostr, groups)\n-    return 'mat!{match_%s, r\"%s\", r\"%s\", %s}' \\\n-           % (lineno, pat, '' if text == \"NULL\" else text, ', '.join(options))\n-\n-\n-def group_tostr(g):\n-    if g is None:\n-        return 'None'\n-    else:\n-        return 'Some((%d, %d))' % (g[0], g[1])\n-\n-\n-if __name__ == '__main__':\n-    parser = argparse.ArgumentParser(\n-        description='Generate match tests from an AT&T POSIX test file.')\n-    aa = parser.add_argument\n-    aa('files', nargs='+',\n-       help='A list of dat AT&T POSIX test files. See src/libregexp/testdata')\n-    args = parser.parse_args()\n-\n-    tests = []\n-    for f in args.files:\n-        tests += read_tests(f)\n-\n-    tpl = '''// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-tidy-linelength\n-\n-// DO NOT EDIT. Automatically generated by 'src/etc/regexp-match-tests'\n-// on {date}.\n-'''\n-    print(tpl.format(date=str(datetime.datetime.now())))\n-\n-    for f in args.files:\n-        print('// Tests from %s' % path.basename(f))\n-        print_tests(read_tests(f))\n-        print('')"}]}