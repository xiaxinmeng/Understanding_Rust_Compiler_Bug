{"sha": "12af36a5c4638755be622c220efadffb1864f2ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYWYzNmE1YzQ2Mzg3NTViZTYyMmMyMjBlZmFkZmZiMTg2NGYyYWI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-08-01T20:02:10Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-08-03T22:00:27Z"}, "message": "Update tests for new spans for nll errors involving closures", "tree": {"sha": "6fe769ea63a0e1f2160a7e81cec74a37759aee18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fe769ea63a0e1f2160a7e81cec74a37759aee18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12af36a5c4638755be622c220efadffb1864f2ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12af36a5c4638755be622c220efadffb1864f2ab", "html_url": "https://github.com/rust-lang/rust/commit/12af36a5c4638755be622c220efadffb1864f2ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12af36a5c4638755be622c220efadffb1864f2ab/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5639e2173b2506ed540ca4a563f0e63731e56bcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5639e2173b2506ed540ca4a563f0e63731e56bcb", "html_url": "https://github.com/rust-lang/rust/commit/5639e2173b2506ed540ca4a563f0e63731e56bcb"}], "stats": {"total": 314, "additions": 184, "deletions": 130}, "files": [{"sha": "6186c3839193d0dd3aa23c038fd71befd8371997", "filename": "src/test/ui/borrowck/borrowck-closures-two-mut.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-two-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-two-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-two-mut.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -77,11 +77,11 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time (Mir)\n   --> $DIR/borrowck-closures-two-mut.rs:24:24\n    |\n LL |     let c1 = to_fn_mut(|| x = 4);\n-   |                        -- - previous borrow occurs due to use of `x` in closure\n+   |                        -- - first borrow occurs due to use of `x` in closure\n    |                        |\n    |                        first mutable borrow occurs here\n LL |     let c2 = to_fn_mut(|| x = 5); //~ ERROR cannot borrow `x` as mutable more than once\n-   |                        ^^ - borrow occurs due to use of `x` in closure\n+   |                        ^^ - second borrow occurs due to use of `x` in closure\n    |                        |\n    |                        second mutable borrow occurs here\n LL |     //~| ERROR cannot borrow `x` as mutable more than once\n@@ -92,11 +92,11 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time (Mir)\n   --> $DIR/borrowck-closures-two-mut.rs:36:24\n    |\n LL |     let c1 = to_fn_mut(|| set(&mut x));\n-   |                        --          - previous borrow occurs due to use of `x` in closure\n+   |                        --          - first borrow occurs due to use of `x` in closure\n    |                        |\n    |                        first mutable borrow occurs here\n LL |     let c2 = to_fn_mut(|| set(&mut x)); //~ ERROR cannot borrow `x` as mutable more than once\n-   |                        ^^          - borrow occurs due to use of `x` in closure\n+   |                        ^^          - second borrow occurs due to use of `x` in closure\n    |                        |\n    |                        second mutable borrow occurs here\n LL |     //~| ERROR cannot borrow `x` as mutable more than once\n@@ -107,11 +107,11 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time (Mir)\n   --> $DIR/borrowck-closures-two-mut.rs:44:24\n    |\n LL |     let c1 = to_fn_mut(|| x = 5);\n-   |                        -- - previous borrow occurs due to use of `x` in closure\n+   |                        -- - first borrow occurs due to use of `x` in closure\n    |                        |\n    |                        first mutable borrow occurs here\n LL |     let c2 = to_fn_mut(|| set(&mut x)); //~ ERROR cannot borrow `x` as mutable more than once\n-   |                        ^^          - borrow occurs due to use of `x` in closure\n+   |                        ^^          - second borrow occurs due to use of `x` in closure\n    |                        |\n    |                        second mutable borrow occurs here\n LL |     //~| ERROR cannot borrow `x` as mutable more than once\n@@ -122,11 +122,11 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time (Mir)\n   --> $DIR/borrowck-closures-two-mut.rs:52:24\n    |\n LL |     let c1 = to_fn_mut(|| x = 5);\n-   |                        -- - previous borrow occurs due to use of `x` in closure\n+   |                        -- - first borrow occurs due to use of `x` in closure\n    |                        |\n    |                        first mutable borrow occurs here\n LL |     let c2 = to_fn_mut(|| { let _y = to_fn_mut(|| set(&mut x)); }); // (nested closure)\n-   |                        ^^                                  - borrow occurs due to use of `x` in closure\n+   |                        ^^                                  - second borrow occurs due to use of `x` in closure\n    |                        |\n    |                        second mutable borrow occurs here\n ...\n@@ -137,11 +137,11 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time (Mir)\n   --> $DIR/borrowck-closures-two-mut.rs:65:24\n    |\n LL |     let c1 = to_fn_mut(|| set(&mut *x.f));\n-   |                        --           - previous borrow occurs due to use of `x` in closure\n+   |                        --           - first borrow occurs due to use of `x` in closure\n    |                        |\n    |                        first mutable borrow occurs here\n LL |     let c2 = to_fn_mut(|| set(&mut *x.f));\n-   |                        ^^           - borrow occurs due to use of `x` in closure\n+   |                        ^^           - second borrow occurs due to use of `x` in closure\n    |                        |\n    |                        second mutable borrow occurs here\n ..."}, {"sha": "426419a7b3b7f830a10d2aeb87a2a388846010d1", "filename": "src/test/ui/borrowck/borrowck-escaping-closure-error-1.nll.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-escaping-closure-error-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-escaping-closure-error-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-escaping-closure-error-1.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -1,8 +1,10 @@\n error[E0597]: `books` does not live long enough\n-  --> $DIR/borrowck-escaping-closure-error-1.rs:23:11\n+  --> $DIR/borrowck-escaping-closure-error-1.rs:23:14\n    |\n LL |     spawn(|| books.push(4));\n-   |           ^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |           -- ^^^^^ borrowed value does not live long enough\n+   |           |\n+   |           value captured here\n LL |     //~^ ERROR E0373\n LL | }\n    | - `books` dropped here while still borrowed"}, {"sha": "d5f3a0ed6d82eb082c216adb23b729492dc288fe", "filename": "src/test/ui/borrowck/borrowck-escaping-closure-error-2.nll.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-escaping-closure-error-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-escaping-closure-error-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-escaping-closure-error-2.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -1,8 +1,10 @@\n error[E0597]: `books` does not live long enough\n-  --> $DIR/borrowck-escaping-closure-error-2.rs:21:14\n+  --> $DIR/borrowck-escaping-closure-error-2.rs:21:17\n    |\n LL |     Box::new(|| books.push(4))\n-   |              ^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |              -- ^^^^^ borrowed value does not live long enough\n+   |              |\n+   |              value captured here\n LL |     //~^ ERROR E0373\n LL | }\n    | - `books` dropped here while still borrowed"}, {"sha": "6f4823326ffa6a0abf9d2db4c240d96bdb00eb5a", "filename": "src/test/ui/error-codes/E0504.nll.stderr", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Ferror-codes%2FE0504.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Ferror-codes%2FE0504.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0504.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -1,17 +1,16 @@\n error[E0505]: cannot move out of `fancy_num` because it is borrowed\n   --> $DIR/E0504.rs:19:13\n    |\n-LL |       let fancy_ref = &fancy_num;\n-   |                       ---------- borrow of `fancy_num` occurs here\n+LL |     let fancy_ref = &fancy_num;\n+   |                     ---------- borrow of `fancy_num` occurs here\n LL | \n-LL |       let x = move || {\n-   |  _____________^\n-LL | |         println!(\"child function: {}\", fancy_num.num); //~ ERROR E0504\n-LL | |     };\n-   | |_____^ move out of `fancy_num` occurs here\n+LL |     let x = move || {\n+   |             ^^^^^^^ move out of `fancy_num` occurs here\n+LL |         println!(\"child function: {}\", fancy_num.num); //~ ERROR E0504\n+   |                                        --------- move occurs due to use in closure\n ...\n-LL |       println!(\"main function: {}\", fancy_ref.num);\n-   |                                     ------------- borrow later used here\n+LL |     println!(\"main function: {}\", fancy_ref.num);\n+   |                                   ------------- borrow later used here\n \n error: aborting due to previous error\n "}, {"sha": "a7e6c9f2b3371b7c54e40c88da02248888e1de7d", "filename": "src/test/ui/issue-11192.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-11192.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-11192.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11192.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -5,7 +5,7 @@ LL |     let mut test = |foo: &Foo| {\n    |                    ----------- mutable borrow occurs here\n LL |         println!(\"access {}\", foo.x);\n LL |         ptr = box Foo { x: ptr.x + 1 };\n-   |         --- previous borrow occurs due to use of `ptr` in closure\n+   |         --- first borrow occurs due to use of `ptr` in closure\n ...\n LL |     test(&*ptr);\n    |     -----^^^^^-"}, {"sha": "bf4fed06dee215faba00bfa586893ea5786e76c7", "filename": "src/test/ui/issue-11873.nll.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-11873.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-11873.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11873.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -2,7 +2,9 @@ error[E0505]: cannot move out of `v` because it is borrowed\n   --> $DIR/issue-11873.rs:14:14\n    |\n LL |     let mut f = || v.push(2);\n-   |                 ------------ borrow of `v` occurs here\n+   |                 -- - borrow occurs due to use in closure\n+   |                 |\n+   |                 borrow of `v` occurs here\n LL |     let _w = v; //~ ERROR: cannot move out of `v`\n    |              ^ move out of `v` occurs here\n LL | "}, {"sha": "8acdc73bf0e6867c0f44c8f7ad31a43b333f17ae", "filename": "src/test/ui/issue-18783.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-18783.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-18783.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18783.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -2,11 +2,11 @@ error[E0499]: cannot borrow `y` as mutable more than once at a time\n   --> $DIR/issue-18783.rs:17:21\n    |\n LL |     c.push(Box::new(|| y = 0));\n-   |                     -- - previous borrow occurs due to use of `y` in closure\n+   |                     -- - first borrow occurs due to use of `y` in closure\n    |                     |\n    |                     first mutable borrow occurs here\n LL |     c.push(Box::new(|| y = 0));\n-   |                     ^^ - borrow occurs due to use of `y` in closure\n+   |                     ^^ - second borrow occurs due to use of `y` in closure\n    |                     |\n    |                     second mutable borrow occurs here\n LL | //~^ ERROR cannot borrow `y` as mutable more than once at a time\n@@ -17,11 +17,11 @@ error[E0499]: cannot borrow `y` as mutable more than once at a time\n   --> $DIR/issue-18783.rs:26:29\n    |\n LL |     Push::push(&c, Box::new(|| y = 0));\n-   |                             -- - previous borrow occurs due to use of `y` in closure\n+   |                             -- - first borrow occurs due to use of `y` in closure\n    |                             |\n    |                             first mutable borrow occurs here\n LL |     Push::push(&c, Box::new(|| y = 0));\n-   |                             ^^ - borrow occurs due to use of `y` in closure\n+   |                             ^^ - second borrow occurs due to use of `y` in closure\n    |                             |\n    |                             second mutable borrow occurs here\n LL | //~^ ERROR cannot borrow `y` as mutable more than once at a time"}, {"sha": "e35f443548d90f8f75b2aff6a86cf35eb9bc7a6b", "filename": "src/test/ui/issue-24357.nll.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-24357.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-24357.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-24357.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -2,7 +2,9 @@ error[E0382]: use of moved value: `x`\n   --> $DIR/issue-24357.rs:16:12\n    |\n LL |    let f = move || { let y = x; };\n-   |            ---------------------- value moved here\n+   |            -------           - variable moved due to use in closure\n+   |            |\n+   |            value moved into closure here\n LL |    //~^ NOTE value moved (into closure) here\n LL |    let z = x;\n    |            ^ value used here after move"}, {"sha": "91c51bcd0582502f20de9d41e8ebd434d9cc2a60", "filename": "src/test/ui/issue-27282-move-match-input-into-guard.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-27282-move-match-input-into-guard.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-27282-move-match-input-into-guard.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-27282-move-match-input-into-guard.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -1,11 +1,13 @@\n error[E0505]: cannot move out of `b` because it is borrowed\n-  --> $DIR/issue-27282-move-match-input-into-guard.rs:26:16\n+  --> $DIR/issue-27282-move-match-input-into-guard.rs:26:17\n    |\n LL |     match b {\n    |           - borrow of `b` occurs here\n LL |         &mut false => {},\n LL |         _ if { (|| { let bar = b; *bar = false; })();\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ move out of `b` occurs here\n+   |                 ^^             - move occurs due to use in closure\n+   |                 |\n+   |                 move out of `b` occurs here\n ...\n LL |         &mut true => { println!(\"You might think we should get here\"); },\n    |         --------- borrow later used here\n@@ -14,7 +16,9 @@ error[E0382]: use of moved value: `*b`\n   --> $DIR/issue-27282-move-match-input-into-guard.rs:29:14\n    |\n LL |         _ if { (|| { let bar = b; *bar = false; })();\n-   |                ----------------------------------- value moved here\n+   |                 --             - variable moved due to use in closure\n+   |                 |\n+   |                 value moved into closure here\n ...\n LL |         &mut true => { println!(\"You might think we should get here\"); },\n    |              ^^^^ value used here after move"}, {"sha": "a9d9651fb2a35e45bfc89b600b2d642d19a62650", "filename": "src/test/ui/issue-27282-mutate-before-diverging-arm-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-27282-mutate-before-diverging-arm-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-27282-mutate-before-diverging-arm-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-27282-mutate-before-diverging-arm-1.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -5,7 +5,7 @@ LL |     match x {\n    |           - borrow occurs here\n ...\n LL |             (|| { *x = None; drop(force_fn_once); })();\n-   |              ^^    - borrow occurs due to use of `x` in closure\n+   |              ^^    - second borrow occurs due to use of `x` in closure\n    |              |\n    |              closure construction occurs here\n ..."}, {"sha": "582d0fd678c07f56eb4d6f1d3a2caeec2de7ac20", "filename": "src/test/ui/issue-27282-mutate-before-diverging-arm-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-27282-mutate-before-diverging-arm-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-27282-mutate-before-diverging-arm-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-27282-mutate-before-diverging-arm-2.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -5,7 +5,7 @@ LL |     match x {\n    |           - borrow occurs here\n ...\n LL |                 (|| { *x = None; drop(force_fn_once); })();\n-   |                  ^^    - borrow occurs due to use of `x` in closure\n+   |                  ^^    - second borrow occurs due to use of `x` in closure\n    |                  |\n    |                  closure construction occurs here\n ..."}, {"sha": "4ccd24fa4592141da4799057f4c26a3cc9978ccd", "filename": "src/test/ui/issue-4335.nll.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-4335.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-4335.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-4335.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -5,10 +5,12 @@ LL |     id(Box::new(|| *v))\n    |                    ^^ cannot move out of captured variable in an `FnMut` closure\n \n error[E0597]: `v` does not live long enough\n-  --> $DIR/issue-4335.rs:16:17\n+  --> $DIR/issue-4335.rs:16:21\n    |\n LL |     id(Box::new(|| *v))\n-   |                 ^^^^^ borrowed value does not live long enough\n+   |                 --  ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL | }\n    | - `v` dropped here while still borrowed"}, {"sha": "3ca2f39470da7a9471329906606684029a327c01", "filename": "src/test/ui/issue-6801.nll.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-6801.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fissue-6801.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-6801.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -2,7 +2,9 @@ error[E0505]: cannot move out of `x` because it is borrowed\n   --> $DIR/issue-6801.rs:29:13\n    |\n LL |       let sq =  || { *x * *x };\n-   |                 -------------- borrow of `x` occurs here\n+   |                 --    - borrow occurs due to use in closure\n+   |                 |\n+   |                 borrow of `x` occurs here\n LL | \n LL |       twice(x); //~ ERROR: cannot move out of\n    |             ^ move out of `x` occurs here"}, {"sha": "16385ca2499cc46f81c49130009fe706faec94a2", "filename": "src/test/ui/nll/closure-captures.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-captures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-captures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-captures.rs?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -13,7 +13,7 @@\n #![allow(unused)]\n #![feature(nll)]\n \n-// Should have one error per assigment\n+// Should have one error per assignment\n \n fn one_closure(x: i32) {\n     ||"}, {"sha": "ce44903e6e6a84505b32f849b6d670f03a2503f3", "filename": "src/test/ui/nll/closure-requirements/escape-upvar-nested.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-nested.rs?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -27,8 +27,8 @@ fn test() {\n     {\n         let y = 22;\n \n-        let mut closure = || { //~ ERROR `y` does not live long enough [E0597]\n-            let mut closure1 = || p = &y;\n+        let mut closure = || {\n+            let mut closure1 = || p = &y; //~ ERROR `y` does not live long enough [E0597]\n             closure1();\n         };\n "}, {"sha": "ed2ae2f27b57b643e596f79c6cda6dbdb18db594", "filename": "src/test/ui/nll/closure-requirements/escape-upvar-nested.stderr", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-nested.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -1,7 +1,7 @@\n note: External requirements\n   --> $DIR/escape-upvar-nested.rs:31:32\n    |\n-LL |             let mut closure1 = || p = &y;\n+LL |             let mut closure1 = || p = &y; //~ ERROR `y` does not live long enough [E0597]\n    |                                ^^^^^^^^^\n    |\n    = note: defining type: DefId(0/1:10 ~ escape_upvar_nested[317d]::test[0]::{{closure}}[0]::{{closure}}[0]) with closure substs [\n@@ -16,9 +16,9 @@ LL |             let mut closure1 = || p = &y;\n note: External requirements\n   --> $DIR/escape-upvar-nested.rs:30:27\n    |\n-LL |           let mut closure = || { //~ ERROR `y` does not live long enough [E0597]\n+LL |           let mut closure = || {\n    |  ___________________________^\n-LL | |             let mut closure1 = || p = &y;\n+LL | |             let mut closure1 = || p = &y; //~ ERROR `y` does not live long enough [E0597]\n LL | |             closure1();\n LL | |         };\n    | |_________^\n@@ -47,20 +47,18 @@ LL | | }\n    = note: defining type: DefId(0/0:3 ~ escape_upvar_nested[317d]::test[0]) with substs []\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/escape-upvar-nested.rs:30:27\n+  --> $DIR/escape-upvar-nested.rs:31:40\n    |\n-LL |           let mut closure = || { //~ ERROR `y` does not live long enough [E0597]\n-   |  ___________________________^\n-LL | |             let mut closure1 = || p = &y;\n-LL | |             closure1();\n-LL | |         };\n-   | |_________^ borrowed value does not live long enough\n+LL |         let mut closure = || {\n+   |                           -- value captured here\n+LL |             let mut closure1 = || p = &y; //~ ERROR `y` does not live long enough [E0597]\n+   |                                        ^ borrowed value does not live long enough\n ...\n-LL |       }\n-   |       - `y` dropped here while still borrowed\n+LL |     }\n+   |     - `y` dropped here while still borrowed\n LL | \n-LL |       deref(p);\n-   |             - borrow later used here\n+LL |     deref(p);\n+   |           - borrow later used here\n \n error: aborting due to previous error\n "}, {"sha": "8db56deeb1f7ae83dbb4482708fa314d7ec1dba0", "filename": "src/test/ui/nll/closure-requirements/escape-upvar-ref.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-upvar-ref.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -28,10 +28,12 @@ LL | | }\n    = note: defining type: DefId(0/0:3 ~ escape_upvar_ref[317d]::test[0]) with substs []\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/escape-upvar-ref.rs:33:27\n+  --> $DIR/escape-upvar-ref.rs:33:35\n    |\n LL |         let mut closure = || p = &y;\n-   |                           ^^^^^^^^^ borrowed value does not live long enough\n+   |                           --      ^ borrowed value does not live long enough\n+   |                           |\n+   |                           value captured here\n ...\n LL |     }\n    |     - `y` dropped here while still borrowed"}, {"sha": "2ecfe03e7de6250e2e60b50a1360f20ce5bf1b3e", "filename": "src/test/ui/nll/issue-51268.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fissue-51268.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fnll%2Fissue-51268.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51268.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -8,7 +8,7 @@ LL |            self.thing.bar(|| {\n    | ||\n LL | ||         //~^ ERROR cannot borrow `self.thing` as mutable because it is also borrowed as immutable [E0502]\n LL | ||             &self.number;\n-   | ||              ---- previous borrow occurs due to use of `self` in closure\n+   | ||              ---- first borrow occurs due to use of `self` in closure\n LL | ||         });\n    | ||          ^\n    | ||__________|"}, {"sha": "d0d6bd4c78570c08bd349033b32a4855d9f205e6", "filename": "src/test/ui/region-borrow-params-issue-29793-small.nll.stderr", "status": "modified", "additions": 80, "deletions": 40, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fregion-borrow-params-issue-29793-small.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fregion-borrow-params-issue-29793-small.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregion-borrow-params-issue-29793-small.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -1,44 +1,54 @@\n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:19:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:19:34\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------        ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |      - `x` dropped here while still borrowed\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:19:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:19:45\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------                   ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |      - `y` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:34:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:34:34\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------        ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |      - `x` dropped here while still borrowed\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:34:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:34:45\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------                   ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |      - `y` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:65:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:65:34\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------        ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |     - `x` dropped here while still borrowed\n@@ -50,10 +60,12 @@ LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |          ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:65:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:65:45\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------                   ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |     - `y` dropped here while still borrowed\n@@ -65,10 +77,12 @@ LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |          ^^\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:76:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:76:34\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------        ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |     - `x` dropped here while still borrowed\n@@ -80,10 +94,12 @@ LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |          ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:76:17\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:76:45\n    |\n LL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                 ---------                   ^ borrowed value does not live long enough\n+   |                 |\n+   |                 value captured here\n ...\n LL |     };\n    |     - `y` dropped here while still borrowed\n@@ -95,10 +111,12 @@ LL |     fn g<'a>(x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |          ^^\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:100:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:100:38\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------        ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `x` dropped here while still borrowed\n@@ -110,10 +128,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:100:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:100:49\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------                   ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `y` dropped here while still borrowed\n@@ -125,10 +145,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:114:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:114:38\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------        ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `x` dropped here while still borrowed\n@@ -140,10 +162,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:114:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:114:49\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------                   ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `y` dropped here while still borrowed\n@@ -155,10 +179,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:142:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:142:38\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------        ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `x` dropped here while still borrowed\n@@ -170,10 +196,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:142:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:142:49\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------                   ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `y` dropped here while still borrowed\n@@ -185,10 +213,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:157:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:157:38\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------        ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `x` dropped here while still borrowed\n@@ -200,10 +230,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:157:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:157:49\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------                   ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `y` dropped here while still borrowed\n@@ -215,10 +247,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:185:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:185:38\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------        ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `x` dropped here while still borrowed\n@@ -230,10 +264,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:185:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:185:49\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------                   ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `y` dropped here while still borrowed\n@@ -245,10 +281,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:199:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:199:38\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------        ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `x` dropped here while still borrowed\n@@ -260,10 +298,12 @@ LL |         fn g<'a>(&self, x: usize, y:usize) -> Box<Fn(bool) -> usize + 'a> {\n    |              ^^\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/region-borrow-params-issue-29793-small.rs:199:21\n+  --> $DIR/region-borrow-params-issue-29793-small.rs:199:49\n    |\n LL |             let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n+   |                     ---------                   ^ borrowed value does not live long enough\n+   |                     |\n+   |                     value captured here\n ...\n LL |         }\n    |         - `y` dropped here while still borrowed"}, {"sha": "1b5bb7d5007798038855dcb2287971fb8a05df2b", "filename": "src/test/ui/regions-nested-fns-2.nll.stderr", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fregions-nested-fns-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fregions-nested-fns-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions-nested-fns-2.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -1,13 +1,14 @@\n error[E0597]: `y` does not live long enough\n-  --> $DIR/regions-nested-fns-2.rs:16:9\n+  --> $DIR/regions-nested-fns-2.rs:18:25\n    |\n-LL | /         |z| {\n-LL | |             //~^ ERROR E0373\n-LL | |             if false { &y } else { z }\n-LL | |         });\n-   | |_________^ borrowed value does not live long enough\n-LL |   }\n-   |   - `y` dropped here while still borrowed\n+LL |         |z| {\n+   |         --- value captured here\n+LL |             //~^ ERROR E0373\n+LL |             if false { &y } else { z }\n+   |                         ^ borrowed value does not live long enough\n+LL |         });\n+LL | }\n+   | - `y` dropped here while still borrowed\n    |\n    = note: borrowed value must be valid for the static lifetime...\n "}, {"sha": "c7dbc043cdaee3fa78e23f7525645f50516e5a44", "filename": "src/test/ui/span/borrowck-call-is-borrow-issue-12224.nll.stderr", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -8,7 +8,7 @@ LL |       f(Box::new(|| {\n    | |\n LL | |     //~^ ERROR: cannot borrow `f` as mutable more than once\n LL | |         f((Box::new(|| {})))\n-   | |         - borrow occurs due to use of `f` in closure\n+   | |         - second borrow occurs due to use of `f` in closure\n LL | |     }));\n    | |_______- borrow later used here\n \n@@ -37,18 +37,17 @@ LL |         foo(f);\n error[E0505]: cannot move out of `f` because it is borrowed\n   --> $DIR/borrowck-call-is-borrow-issue-12224.rs:65:16\n    |\n-LL |        f(Box::new(|a| {\n-   |   _____-__________^\n-   |  |     |\n-   |  |_____borrow of `f` occurs here\n-   | ||\n-LL | ||         foo(f);\n-LL | ||         //~^ ERROR cannot move `f` into closure because it is borrowed\n-LL | ||         //~| ERROR cannot move out of captured outer variable in an `FnMut` closure\n-LL | ||     }), 3);\n-   | ||_____^____- borrow later used here\n-   |  |_____|\n-   |        move out of `f` occurs here\n+LL |       f(Box::new(|a| {\n+   |       -          ^^^ move out of `f` occurs here\n+   |       |\n+   |  _____borrow of `f` occurs here\n+   | |\n+LL | |         foo(f);\n+   | |             - move occurs due to use in closure\n+LL | |         //~^ ERROR cannot move `f` into closure because it is borrowed\n+LL | |         //~| ERROR cannot move out of captured outer variable in an `FnMut` closure\n+LL | |     }), 3);\n+   | |__________- borrow later used here\n \n error: aborting due to 5 previous errors\n "}, {"sha": "c14cb7098933f1bb782ab318850ee7de21f81918", "filename": "src/test/ui/span/send-is-not-static-ensures-scoping.nll.stderr", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/12af36a5c4638755be622c220efadffb1864f2ab/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.nll.stderr?ref=12af36a5c4638755be622c220efadffb1864f2ab", "patch": "@@ -11,19 +11,18 @@ LL |     bad.join();\n    |     --- borrow later used here\n \n error[E0597]: `y` does not live long enough\n-  --> $DIR/send-is-not-static-ensures-scoping.rs:29:16\n+  --> $DIR/send-is-not-static-ensures-scoping.rs:30:22\n    |\n-LL |           scoped(|| {\n-   |  ________________^\n-LL | |             let _z = y;\n-LL | |             //~^ ERROR `y` does not live long enough\n-LL | |         })\n-   | |_________^ borrowed value does not live long enough\n-LL |       };\n-   |       - `y` dropped here while still borrowed\n+LL |         scoped(|| {\n+   |                -- value captured here\n+LL |             let _z = y;\n+   |                      ^ borrowed value does not live long enough\n+...\n+LL |     };\n+   |     - `y` dropped here while still borrowed\n LL | \n-LL |       bad.join();\n-   |       --- borrow later used here\n+LL |     bad.join();\n+   |     --- borrow later used here\n \n error: aborting due to 2 previous errors\n "}]}