{"sha": "cf7ada217c8ac63367b184afd9fffaff30f6ed44", "node_id": "C_kwDOAAsO6NoAKGNmN2FkYTIxN2M4YWM2MzM2N2IxODRhZmQ5ZmZmYWZmMzBmNmVkNDQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-03T22:29:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-03T22:29:54Z"}, "message": "Auto merge of #109911 - JohnTitor:rollup-7gjiqim, r=JohnTitor\n\nRollup of 6 pull requests\n\nSuccessful merges:\n\n - #109783 (Update contributing links for rustc-dev-guide changes)\n - #109883 (Add links to <cell.rs>)\n - #109889 (Update book, rustc-dev-guide, rust-by-example)\n - #109896 (Never consider int and float vars for `FnPtr` candidates)\n - #109902 (Add async-await test for #107414)\n - #109903 (Add Chris Denton to `.mailmap`)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "1fd0db0ad9e186ee1758e4f5d7f61fc6fa5753e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fd0db0ad9e186ee1758e4f5d7f61fc6fa5753e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf7ada217c8ac63367b184afd9fffaff30f6ed44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf7ada217c8ac63367b184afd9fffaff30f6ed44", "html_url": "https://github.com/rust-lang/rust/commit/cf7ada217c8ac63367b184afd9fffaff30f6ed44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf7ada217c8ac63367b184afd9fffaff30f6ed44/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48829ea74bcb8808f9af5cbb1173f01ff865ff1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/48829ea74bcb8808f9af5cbb1173f01ff865ff1d", "html_url": "https://github.com/rust-lang/rust/commit/48829ea74bcb8808f9af5cbb1173f01ff865ff1d"}, {"sha": "b691507b73555432aa7c4d7fa302586967688f73", "url": "https://api.github.com/repos/rust-lang/rust/commits/b691507b73555432aa7c4d7fa302586967688f73", "html_url": "https://github.com/rust-lang/rust/commit/b691507b73555432aa7c4d7fa302586967688f73"}], "stats": {"total": 68, "additions": 54, "deletions": 14}, "files": [{"sha": "92be31747501e83187c06706d3d5be1909f331a2", "filename": ".mailmap", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/.mailmap", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/.mailmap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.mailmap?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -102,6 +102,7 @@ Carol Willing <carolcode@willingconsulting.com>\n Chandler Deng <chandde@microsoft.com>\n Charles Lew <crlf0710@gmail.com> CrLF0710 <crlf0710@gmail.com>\n Chris C Cerami <chrisccerami@users.noreply.github.com> Chris C Cerami <chrisccerami@gmail.com>\n+Chris Denton <chris@chrisdenton.dev> Chris Denton <ChrisDenton@users.noreply.github.com>\n Chris Gregory <czipperz@gmail.com>\n Chris Pardy <chrispardy36@gmail.com>\n Chris Pressey <cpressey@gmail.com>"}, {"sha": "dfaa70bb9db005a2d79c5064f57d95640e2af079", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -33,7 +33,6 @@ find a mentor! You can learn more about asking questions and getting help in the\n Did a compiler error message tell you to come here? If you want to create an ICE report,\n refer to [this section][contributing-bug-reports] and [open an issue][issue template].\n \n-[Contributing to Rust]: https://rustc-dev-guide.rust-lang.org/contributing.html#contributing-to-rust\n [rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/\n [std-dev-guide]: https://std-dev-guide.rust-lang.org/\n [contributing-bug-reports]: https://rustc-dev-guide.rust-lang.org/contributing.html#bug-reports"}, {"sha": "090312338e00967e6496a2d141c4756fb0379f7e", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -998,8 +998,14 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             | ty::Alias(..)\n             | ty::Param(..)\n             | ty::Bound(..)\n-            | ty::Error(_) => {}\n-            ty::Infer(_) => {\n+            | ty::Error(_)\n+            | ty::Infer(\n+                ty::InferTy::IntVar(_)\n+                | ty::InferTy::FloatVar(_)\n+                | ty::InferTy::FreshIntTy(_)\n+                | ty::InferTy::FreshFloatTy(_),\n+            ) => {}\n+            ty::Infer(ty::InferTy::TyVar(_) | ty::InferTy::FreshTy(_)) => {\n                 candidates.ambiguous = true;\n             }\n         }"}, {"sha": "b58e62536d604edc425ec6e620d7acd9f6a55b2f", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -177,14 +177,14 @@ struct TraitObligationStack<'prev, 'tcx> {\n }\n \n struct SelectionCandidateSet<'tcx> {\n-    // A list of candidates that definitely apply to the current\n-    // obligation (meaning: types unify).\n+    /// A list of candidates that definitely apply to the current\n+    /// obligation (meaning: types unify).\n     vec: Vec<SelectionCandidate<'tcx>>,\n \n-    // If `true`, then there were candidates that might or might\n-    // not have applied, but we couldn't tell. This occurs when some\n-    // of the input types are type variables, in which case there are\n-    // various \"builtin\" rules that might or might not trigger.\n+    /// If `true`, then there were candidates that might or might\n+    /// not have applied, but we couldn't tell. This occurs when some\n+    /// of the input types are type variables, in which case there are\n+    /// various \"builtin\" rules that might or might not trigger.\n     ambiguous: bool,\n }\n "}, {"sha": "d728dc038176c3199f234a2efd6e57fe65bebd58", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -1816,7 +1816,7 @@ impl<T: ?Sized + fmt::Display> fmt::Display for RefMut<'_, T> {\n /// `UnsafeCell<T>` opts-out of the immutability guarantee for `&T`: a shared reference\n /// `&UnsafeCell<T>` may point to data that is being mutated. This is called \"interior mutability\".\n ///\n-/// All other types that allow internal mutability, such as `Cell<T>` and `RefCell<T>`, internally\n+/// All other types that allow internal mutability, such as [`Cell<T>`] and [`RefCell<T>`], internally\n /// use `UnsafeCell` to wrap their data.\n ///\n /// Note that only the immutability guarantee for shared references is affected by `UnsafeCell`. The"}, {"sha": "0510ca84c2ce6bf93c4ccf9248756e9e4fd00b12", "filename": "src/doc/book", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -1 +1 @@\n-Subproject commit 21a2ed14f4480dab62438dcc1130291bebc65379\n+Subproject commit 0510ca84c2ce6bf93c4ccf9248756e9e4fd00b12"}, {"sha": "ba84bf35d0f17d404003349309201654d25f61af", "filename": "src/doc/rust-by-example", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust-by-example?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -1 +1 @@\n-Subproject commit cfbfd648ce33926c3490f24de9a5b56cce404b88\n+Subproject commit ba84bf35d0f17d404003349309201654d25f61af"}, {"sha": "fca8af6c154c6cde2512f1331cf2704f214a818e", "filename": "src/doc/rustc-dev-guide", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-dev-guide?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -1 +1 @@\n-Subproject commit d08baa166b463537229eeb737c4ccadabd83cf78\n+Subproject commit fca8af6c154c6cde2512f1331cf2704f214a818e"}, {"sha": "0ab4f5ade9815ba3a428e90cc1fc66b64acf59af", "filename": "tests/ui/async-await/missed-capture-issue-107414.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/tests%2Fui%2Fasync-await%2Fmissed-capture-issue-107414.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/tests%2Fui%2Fasync-await%2Fmissed-capture-issue-107414.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fmissed-capture-issue-107414.rs?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+// edition:2018\n+\n+fn main() {}\n+\n+struct StructA {}\n+struct StructB {}\n+\n+impl StructA {\n+    fn fn_taking_struct_b(&self, struct_b: &StructB) -> bool {\n+        true\n+    }\n+}\n+\n+async fn get_struct_a_async() -> StructA {\n+    StructA {}\n+}\n+\n+async fn ice() {\n+    match Some(StructB {}) {\n+        Some(struct_b) if get_struct_a_async().await.fn_taking_struct_b(&struct_b) => {}\n+        _ => {}\n+    }\n+}"}, {"sha": "eec7da044c0d50c089051ca311707d4410e5ed5f", "filename": "tests/ui/fn/fn-ptr-trait-int-float-infer-var.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/tests%2Fui%2Ffn%2Ffn-ptr-trait-int-float-infer-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/tests%2Fui%2Ffn%2Ffn-ptr-trait-int-float-infer-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn%2Ffn-ptr-trait-int-float-infer-var.rs?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -0,0 +1,10 @@\n+// check-pass\n+trait MyCmp {\n+    fn cmp(&self) {}\n+}\n+impl MyCmp for f32 {}\n+\n+fn main() {\n+    // Ensure that `impl<F: FnPtr> Ord for F` is never considered for int and float infer vars.\n+    0.0.cmp();\n+}"}, {"sha": "20a8be283b990f0961b8490660105b07dcd9caa3", "filename": "triagebot.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf7ada217c8ac63367b184afd9fffaff30f6ed44/triagebot.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cf7ada217c8ac63367b184afd9fffaff30f6ed44/triagebot.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/triagebot.toml?ref=cf7ada217c8ac63367b184afd9fffaff30f6ed44", "patch": "@@ -482,7 +482,7 @@ message = \"This PR changes src/bootstrap/defaults/config.codegen.toml. If approp\n \n [assign]\n warn_non_default_branch = true\n-contributing_url = \"https://rustc-dev-guide.rust-lang.org/contributing.html\"\n+contributing_url = \"https://rustc-dev-guide.rust-lang.org/getting-started.html\"\n \n [assign.adhoc_groups]\n compiler-team = ["}]}