{"sha": "27ddbf4d168875605295c8bdc145c5026188de27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZGRiZjRkMTY4ODc1NjA1Mjk1YzhiZGMxNDVjNTAyNjE4OGRlMjc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-11T21:49:15Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-08-12T22:03:44Z"}, "message": "Avoid closures in the default <Zip as ZipImpl>::next", "tree": {"sha": "85fb8f56e38079a21409d356f2bac1472260af96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85fb8f56e38079a21409d356f2bac1472260af96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27ddbf4d168875605295c8bdc145c5026188de27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27ddbf4d168875605295c8bdc145c5026188de27", "html_url": "https://github.com/rust-lang/rust/commit/27ddbf4d168875605295c8bdc145c5026188de27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27ddbf4d168875605295c8bdc145c5026188de27/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ef95ff4a68ffbeaec09900c5980bfe20ca250c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef95ff4a68ffbeaec09900c5980bfe20ca250c1", "html_url": "https://github.com/rust-lang/rust/commit/9ef95ff4a68ffbeaec09900c5980bfe20ca250c1"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "430ceacdd9fab674aad4b958263f1326c2c0b099", "filename": "src/libcore/iter/adapters/zip.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/27ddbf4d168875605295c8bdc145c5026188de27/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ddbf4d168875605295c8bdc145c5026188de27/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fzip.rs?ref=27ddbf4d168875605295c8bdc145c5026188de27", "patch": "@@ -94,11 +94,9 @@ impl<A, B> ZipImpl<A, B> for Zip<A, B>\n \n     #[inline]\n     default fn next(&mut self) -> Option<(A::Item, B::Item)> {\n-        self.a.next().and_then(|x| {\n-            self.b.next().and_then(|y| {\n-                Some((x, y))\n-            })\n-        })\n+        let x = self.a.next()?;\n+        let y = self.b.next()?;\n+        Some((x, y))\n     }\n \n     #[inline]"}]}