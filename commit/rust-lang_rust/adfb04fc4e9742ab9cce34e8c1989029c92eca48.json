{"sha": "adfb04fc4e9742ab9cce34e8c1989029c92eca48", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZmIwNGZjNGU5NzQyYWI5Y2NlMzRlOGMxOTg5MDI5YzkyZWNhNDg=", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-01-30T07:03:35Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-01-30T18:04:19Z"}, "message": "Edit rustc_typeck top-level docs\n\nEdit punctuation and wording in note on type variables\nvs. type parameters.\n\nAlso add missing punctuation and two inter-doc links.", "tree": {"sha": "6c3a843deb80d9a319d6443f8e636b3ec1e8c4a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c3a843deb80d9a319d6443f8e636b3ec1e8c4a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adfb04fc4e9742ab9cce34e8c1989029c92eca48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adfb04fc4e9742ab9cce34e8c1989029c92eca48", "html_url": "https://github.com/rust-lang/rust/commit/adfb04fc4e9742ab9cce34e8c1989029c92eca48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adfb04fc4e9742ab9cce34e8c1989029c92eca48/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fa9b58a37587d60252c6bef4b86c05027cdcd1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fa9b58a37587d60252c6bef4b86c05027cdcd1a", "html_url": "https://github.com/rust-lang/rust/commit/9fa9b58a37587d60252c6bef4b86c05027cdcd1a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "dc3e3b4e738392b99938667b32ae5cc8dc9eed3b", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/adfb04fc4e9742ab9cce34e8c1989029c92eca48/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfb04fc4e9742ab9cce34e8c1989029c92eca48/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=adfb04fc4e9742ab9cce34e8c1989029c92eca48", "patch": "@@ -52,13 +52,13 @@ The types of top-level items, which never contain unbound type\n variables, are stored directly into the `tcx` typeck_results.\n \n N.B., a type variable is not the same thing as a type parameter.  A\n-type variable is rather an \"instance\" of a type parameter: that is,\n-given a generic function `fn foo<T>(t: T)`: while checking the\n+type variable is an instance of a type parameter. That is,\n+given a generic function `fn foo<T>(t: T)`, while checking the\n function `foo`, the type `ty_param(0)` refers to the type `T`, which\n-is treated in abstract.  When `foo()` is called, however, `T` will be\n+is treated in abstract. However, when `foo()` is called, `T` will be\n substituted for a fresh type variable `N`.  This variable will\n eventually be resolved to some concrete type (which might itself be\n-type parameter).\n+a type parameter).\n \n */\n "}, {"sha": "a5bdfb573628c9c43137aba6e4878e7995b69bd4", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adfb04fc4e9742ab9cce34e8c1989029c92eca48/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfb04fc4e9742ab9cce34e8c1989029c92eca48/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=adfb04fc4e9742ab9cce34e8c1989029c92eca48", "patch": "@@ -7,9 +7,9 @@ The type checker is responsible for:\n 1. Determining the type of each expression.\n 2. Resolving methods and traits.\n 3. Guaranteeing that most type rules are met. (\"Most?\", you say, \"why most?\"\n-   Well, dear reader, read on)\n+   Well, dear reader, read on.)\n \n-The main entry point is `check_crate()`. Type checking operates in\n+The main entry point is [`check_crate()`]. Type checking operates in\n several major phases:\n \n 1. The collect phase first passes over all items and determines their\n@@ -25,7 +25,7 @@ several major phases:\n    containing function).  Inference is used to supply types wherever\n    they are unknown. The actual checking of a function itself has\n    several phases (check, regionck, writeback), as discussed in the\n-   documentation for the `check` module.\n+   documentation for the [`check`] module.\n \n The type checker is defined into various submodules which are documented\n independently:"}]}