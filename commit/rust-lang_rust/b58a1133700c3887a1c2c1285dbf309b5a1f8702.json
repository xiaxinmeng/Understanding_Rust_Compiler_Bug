{"sha": "b58a1133700c3887a1c2c1285dbf309b5a1f8702", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OGExMTMzNzAwYzM4ODdhMWMyYzEyODVkYmYzMDliNWExZjg3MDI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-03-22T06:56:51Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-03-22T06:56:51Z"}, "message": "Use `UseSegment::Slf` or `UseSegment::Super` when appropriate\n\nCurrently we `UseSegment::Ident` for all of the segments except the last.\nE.g. `use super::foo::bar::self;` will be\n`[Ident(\"super\"), Ident(\"foo\"), Ident(\"bar\"), Self(None)]`.\nin the current implementation. I think that this should be\n`[Super(None), Ident(\"foo\"), Ident(\"bar\"), Self(None)]`.\ninstead.\n\nI noticed this because some tests failed after updating\n`rustc-ap-syntax` to 73.0.0.", "tree": {"sha": "d1cff803ebcb7ad7d3eae905a38de8fa3459599a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1cff803ebcb7ad7d3eae905a38de8fa3459599a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b58a1133700c3887a1c2c1285dbf309b5a1f8702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b58a1133700c3887a1c2c1285dbf309b5a1f8702", "html_url": "https://github.com/rust-lang/rust/commit/b58a1133700c3887a1c2c1285dbf309b5a1f8702", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b58a1133700c3887a1c2c1285dbf309b5a1f8702/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "846f4f21db34b252b5e42c7a841f14624c643280", "url": "https://api.github.com/repos/rust-lang/rust/commits/846f4f21db34b252b5e42c7a841f14624c643280", "html_url": "https://github.com/rust-lang/rust/commit/846f4f21db34b252b5e42c7a841f14624c643280"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "38d2a09bd08341bffb3804b8865e4e3a96930e4a", "filename": "src/reorder.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b58a1133700c3887a1c2c1285dbf309b5a1f8702/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b58a1133700c3887a1c2c1285dbf309b5a1f8702/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=b58a1133700c3887a1c2c1285dbf309b5a1f8702", "patch": "@@ -299,16 +299,24 @@ impl UseSegment {\n             _ => self.clone(),\n         }\n     }\n+\n+    fn from_path_segment(path_seg: &ast::PathSegment) -> UseSegment {\n+        let name = path_seg.identifier.name.as_str();\n+        if name == \"self\" {\n+            UseSegment::Slf(None)\n+        } else if name == \"super\" {\n+            UseSegment::Super(None)\n+        } else {\n+            UseSegment::Ident((*name).to_owned(), None)\n+        }\n+    }\n }\n \n impl UseTree {\n     fn from_ast(a: &ast::UseTree) -> UseTree {\n         let mut result = UseTree { path: vec![] };\n         for p in &a.prefix.segments {\n-            result.path.push(UseSegment::Ident(\n-                (*p.identifier.name.as_str()).to_owned(),\n-                None,\n-            ));\n+            result.path.push(UseSegment::from_path_segment(p));\n         }\n         match a.kind {\n             UseTreeKind::Glob => {"}]}