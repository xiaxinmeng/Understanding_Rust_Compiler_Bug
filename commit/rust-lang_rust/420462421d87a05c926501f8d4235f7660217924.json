{"sha": "420462421d87a05c926501f8d4235f7660217924", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMDQ2MjQyMWQ4N2EwNWM5MjY1MDFmOGQ0MjM1Zjc2NjAyMTc5MjQ=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-02T19:12:59Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-02T19:12:59Z"}, "message": "vscode extension cleanup: migrate to prefer-const tslint rule", "tree": {"sha": "681e88118603403c70de2e92d2a3cf3502bff2a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/681e88118603403c70de2e92d2a3cf3502bff2a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/420462421d87a05c926501f8d4235f7660217924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/420462421d87a05c926501f8d4235f7660217924", "html_url": "https://github.com/rust-lang/rust/commit/420462421d87a05c926501f8d4235f7660217924", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/420462421d87a05c926501f8d4235f7660217924/comments", "author": null, "committer": null, "parents": [{"sha": "d06e02dd13e7cf10d53203620592aa0e85d808c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d06e02dd13e7cf10d53203620592aa0e85d808c0", "html_url": "https://github.com/rust-lang/rust/commit/d06e02dd13e7cf10d53203620592aa0e85d808c0"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "71113d374ebb6e908e7884cd665690aaf79d72b3", "filename": "editors/code/src/color_theme.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fcolor_theme.ts", "raw_url": "https://github.com/rust-lang/rust/raw/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fcolor_theme.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcolor_theme.ts?ref=420462421d87a05c926501f8d4235f7660217924", "patch": "@@ -69,7 +69,7 @@ function loadThemeNamed(themeName: string): ColorTheme {\n         );\n     }\n \n-    let themePaths = vscode.extensions.all\n+    const themePaths = vscode.extensions.all\n         .filter(isTheme)\n         .flatMap(ext => {\n             return ext.packageJSON.contributes.themes"}, {"sha": "4501809e2ef2c149700d5acc03114cce840c2f4d", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=420462421d87a05c926501f8d4235f7660217924", "patch": "@@ -21,7 +21,7 @@ function collectGarbage(ctx: Ctx): Cmd {\n \n function showReferences(ctx: Ctx): Cmd {\n     return (uri: string, position: lc.Position, locations: lc.Location[]) => {\n-        let client = ctx.client;\n+        const client = ctx.client;\n         if (client) {\n             vscode.commands.executeCommand(\n                 'editor.action.showReferences',"}, {"sha": "b882a8e52f7f72eaafd6ebd7c8e1da130c565a57", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=420462421d87a05c926501f8d4235f7660217924", "patch": "@@ -20,7 +20,7 @@ export class Ctx {\n     }\n \n     async restartServer() {\n-        let old = this.client;\n+        const old = this.client;\n         if (old) {\n             await old.stop();\n         }"}, {"sha": "3d190c3ad71c437f981f9b12f7b88cdcd58e219f", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=420462421d87a05c926501f8d4235f7660217924", "patch": "@@ -40,7 +40,7 @@ export function activateHighlighting(ctx: Ctx) {\n         async (editor: vscode.TextEditor | undefined) => {\n             if (!editor || editor.document.languageId !== 'rust') return;\n             if (!ctx.config.highlightingOn) return;\n-            let client = ctx.client;\n+            const client = ctx.client;\n             if (!client) return;\n \n             const params: lc.TextDocumentIdentifier = {\n@@ -106,7 +106,7 @@ class Highlighter {\n     }\n \n     public setHighlights(editor: vscode.TextEditor, highlights: Decoration[]) {\n-        let client = this.ctx.client;\n+        const client = this.ctx.client;\n         if (!client) return;\n         // Initialize decorations if necessary\n         //\n@@ -175,7 +175,7 @@ function initDecorations(): Map<string, vscode.TextEditorDecorationType> {\n     const res = new Map();\n     TAG_TO_SCOPES.forEach((scopes, tag) => {\n         if (!scopes) throw `unmapped tag: ${tag}`;\n-        let rule = theme.lookup(scopes);\n+        const rule = theme.lookup(scopes);\n         const decor = createDecorationFromTextmate(rule);\n         res.set(tag, decor);\n     });"}, {"sha": "ae75101831f79a69847bd2dea5c4c6e609cadac1", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=420462421d87a05c926501f8d4235f7660217924", "patch": "@@ -127,13 +127,13 @@ class HintsUpdater {\n     }\n \n     private async queryHints(documentUri: string): Promise<InlayHint[] | null> {\n-        let client = this.ctx.client;\n+        const client = this.ctx.client;\n         if (!client) return null;\n         const request: InlayHintsParams = {\n             textDocument: { uri: documentUri },\n         };\n-        let tokenSource = new vscode.CancellationTokenSource();\n-        let prev = this.pending.get(documentUri);\n+        const tokenSource = new vscode.CancellationTokenSource();\n+        const prev = this.pending.get(documentUri);\n         if (prev) prev.cancel();\n         this.pending.set(documentUri, tokenSource);\n         try {"}, {"sha": "0df11b2f1bf0230da91ed09b2eb17d861c96db0c", "filename": "editors/code/tslint.json", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Ftslint.json", "raw_url": "https://github.com/rust-lang/rust/raw/420462421d87a05c926501f8d4235f7660217924/editors%2Fcode%2Ftslint.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftslint.json?ref=420462421d87a05c926501f8d4235f7660217924", "patch": "@@ -3,6 +3,7 @@\n         \"semicolon\": [\n             true,\n             \"always\"\n-        ]\n+        ],\n+        \"prefer-const\": true\n     }\n }"}]}