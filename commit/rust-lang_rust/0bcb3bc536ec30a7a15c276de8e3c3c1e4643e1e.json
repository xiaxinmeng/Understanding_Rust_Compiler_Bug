{"sha": "0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiY2IzYmM1MzZlYzMwYTdhMTVjMjc2ZGU4ZTNjM2MxZTQ2NDNlMWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-27T18:52:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-27T19:48:09Z"}, "message": "libsyntax: Parse visibility modifiers before foreign items", "tree": {"sha": "bd3133605438f04e932a5b90d8cb737a3f89247a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd3133605438f04e932a5b90d8cb737a3f89247a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e", "html_url": "https://github.com/rust-lang/rust/commit/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e7411e6209b10d99bc37c084c8ac45fbb706431", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e7411e6209b10d99bc37c084c8ac45fbb706431", "html_url": "https://github.com/rust-lang/rust/commit/7e7411e6209b10d99bc37c084c8ac45fbb706431"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "3e62d0b3ab777f586c2ecb9d62ffbe3a5e2b5be7", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e", "patch": "@@ -1485,7 +1485,8 @@ type foreign_item =\n      attrs: ~[attribute],\n      node: foreign_item_,\n      id: node_id,\n-     span: span};\n+     span: span,\n+     vis: visibility};\n \n #[auto_serialize]\n enum foreign_item_ {"}, {"sha": "4f3dafcb21b9bedcc66bdbda91c6ae7a36d2f16e", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e", "patch": "@@ -203,7 +203,8 @@ fn noop_fold_foreign_item(&&ni: @foreign_item, fld: ast_fold)\n                 }\n               },\n           id: fld.new_id(ni.id),\n-          span: fld.new_span(ni.span)};\n+          span: fld.new_span(ni.span),\n+          vis: ni.vis};\n }\n \n fn noop_fold_item(&&i: @item, fld: ast_fold) -> Option<@item> {"}, {"sha": "513dce193cc4de31e6b405aadcae0b8eae77c34e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=0bcb3bc536ec30a7a15c276de8e3c3c1e4643e1e", "patch": "@@ -2940,7 +2940,8 @@ impl parser {\n         (id, item_mod(m), Some(inner_attrs.inner))\n     }\n \n-    fn parse_item_foreign_fn(+attrs: ~[attribute]) -> @foreign_item {\n+    fn parse_item_foreign_fn(vis: ast::visibility,\n+                             +attrs: ~[attribute]) -> @foreign_item {\n         let lo = self.span.lo;\n         let purity = self.parse_fn_purity();\n         let t = self.parse_fn_header();\n@@ -2951,10 +2952,12 @@ impl parser {\n                  attrs: attrs,\n                  node: foreign_item_fn(decl, purity, t.tps),\n                  id: self.get_id(),\n-                 span: mk_sp(lo, hi)};\n+                 span: mk_sp(lo, hi),\n+                 vis: vis};\n     }\n \n-    fn parse_item_foreign_const(+attrs: ~[attribute]) -> @foreign_item {\n+    fn parse_item_foreign_const(vis: ast::visibility,\n+                                +attrs: ~[attribute]) -> @foreign_item {\n         let lo = self.span.lo;\n         self.expect_keyword(~\"const\");\n         let ident = self.parse_ident();\n@@ -2966,7 +2969,8 @@ impl parser {\n                  attrs: attrs,\n                  node: foreign_item_const(move ty),\n                  id: self.get_id(),\n-                 span: mk_sp(lo, hi)};\n+                 span: mk_sp(lo, hi),\n+                 vis: vis};\n     }\n \n     fn parse_fn_purity() -> purity {\n@@ -2982,10 +2986,11 @@ impl parser {\n     }\n \n     fn parse_foreign_item(+attrs: ~[attribute]) -> @foreign_item {\n+        let vis = self.parse_visibility();\n         if self.is_keyword(~\"const\") {\n-            self.parse_item_foreign_const(move attrs)\n+            self.parse_item_foreign_const(vis, move attrs)\n         } else {\n-            self.parse_item_foreign_fn(move attrs)\n+            self.parse_item_foreign_fn(vis, move attrs)\n         }\n     }\n "}]}