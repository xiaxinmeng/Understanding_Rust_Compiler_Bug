{"sha": "bd46953f0b52063859ec5c276e93b7fd4f06aa2a", "node_id": "C_kwDOAAsO6NoAKGJkNDY5NTNmMGI1MjA2Mzg1OWVjNWMyNzZlOTNiN2ZkNGYwNmFhMmE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-11T22:31:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-11T22:31:53Z"}, "message": "Rollup merge of #91780 - cjgillot:localize, r=Mark-Simulacrum\n\nRemove hir::Node::hir_id.\n\nSmall cleanup.", "tree": {"sha": "04c99224f44a353255637ac4765dded2b5934d47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04c99224f44a353255637ac4765dded2b5934d47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd46953f0b52063859ec5c276e93b7fd4f06aa2a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhtSbZCRBK7hj4Ov3rIwAAoyYIAExRkqmpRSup5G4XETh+Z5d0\n4niVuEHz3VubVql7LmOPFnipMWQSMFxqCUqyU8SqOEBACItHlA8gsrCtUXmSbPhS\nqulgl9wAtSD6ajkM8xOe9AsiofPs6Za39akN41lXhWAtLxzcSjFpnxGW8KM3jnJg\ndjiTNEYRSqGde+E/sqiRdQG+jxBXNZ3jZ1rRoITrSt4UqYbpf06I52hbbFj3KnrL\nIOVSE8euVqYXUIRNFRnrD1iUeIYiVa1N7zyKxzlsTacQ493eLrbsJvtyQfm4vDen\nIGRMy2e4jGPfcECVd3HkqpD0ztoeU5a4F0o3JxOaU0l4o63SQPsN1oMyvaeORJs=\n=Uwww\n-----END PGP SIGNATURE-----\n", "payload": "tree 04c99224f44a353255637ac4765dded2b5934d47\nparent 72b6a91fe732ab9b4438fab3b7d454e359a4bae1\nparent 67ada7abeff96ac84510b8c723554105c2ac8a68\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639261913 +0100\ncommitter GitHub <noreply@github.com> 1639261913 +0100\n\nRollup merge of #91780 - cjgillot:localize, r=Mark-Simulacrum\n\nRemove hir::Node::hir_id.\n\nSmall cleanup.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd46953f0b52063859ec5c276e93b7fd4f06aa2a", "html_url": "https://github.com/rust-lang/rust/commit/bd46953f0b52063859ec5c276e93b7fd4f06aa2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd46953f0b52063859ec5c276e93b7fd4f06aa2a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "html_url": "https://github.com/rust-lang/rust/commit/72b6a91fe732ab9b4438fab3b7d454e359a4bae1"}, {"sha": "67ada7abeff96ac84510b8c723554105c2ac8a68", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ada7abeff96ac84510b8c723554105c2ac8a68", "html_url": "https://github.com/rust-lang/rust/commit/67ada7abeff96ac84510b8c723554105c2ac8a68"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "9a8bc2efbfa4628b3caaa8d1aa9284020fdff613", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bd46953f0b52063859ec5c276e93b7fd4f06aa2a/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd46953f0b52063859ec5c276e93b7fd4f06aa2a/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=bd46953f0b52063859ec5c276e93b7fd4f06aa2a", "patch": "@@ -3210,34 +3210,6 @@ impl<'hir> Node<'hir> {\n         }\n     }\n \n-    pub fn hir_id(&self) -> Option<HirId> {\n-        match self {\n-            Node::Item(Item { def_id, .. })\n-            | Node::TraitItem(TraitItem { def_id, .. })\n-            | Node::ImplItem(ImplItem { def_id, .. })\n-            | Node::ForeignItem(ForeignItem { def_id, .. }) => Some(HirId::make_owner(*def_id)),\n-            Node::Field(FieldDef { hir_id, .. })\n-            | Node::AnonConst(AnonConst { hir_id, .. })\n-            | Node::Expr(Expr { hir_id, .. })\n-            | Node::Stmt(Stmt { hir_id, .. })\n-            | Node::Ty(Ty { hir_id, .. })\n-            | Node::Binding(Pat { hir_id, .. })\n-            | Node::Pat(Pat { hir_id, .. })\n-            | Node::Arm(Arm { hir_id, .. })\n-            | Node::Block(Block { hir_id, .. })\n-            | Node::Local(Local { hir_id, .. })\n-            | Node::Lifetime(Lifetime { hir_id, .. })\n-            | Node::Param(Param { hir_id, .. })\n-            | Node::Infer(InferArg { hir_id, .. })\n-            | Node::GenericParam(GenericParam { hir_id, .. }) => Some(*hir_id),\n-            Node::TraitRef(TraitRef { hir_ref_id, .. }) => Some(*hir_ref_id),\n-            Node::PathSegment(PathSegment { hir_id, .. }) => *hir_id,\n-            Node::Variant(Variant { id, .. }) => Some(*id),\n-            Node::Ctor(variant) => variant.ctor_hir_id(),\n-            Node::Crate(_) | Node::Visibility(_) => None,\n-        }\n-    }\n-\n     /// Returns `Constness::Const` when this node is a const fn/impl/item.\n     pub fn constness_for_typeck(&self) -> Constness {\n         match self {"}]}