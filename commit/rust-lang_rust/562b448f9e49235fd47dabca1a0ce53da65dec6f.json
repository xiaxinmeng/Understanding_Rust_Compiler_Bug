{"sha": "562b448f9e49235fd47dabca1a0ce53da65dec6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MmI0NDhmOWU0OTIzNWZkNDdkYWJjYTFhMGNlNTNkYTY1ZGVjNmY=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T13:36:13Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T13:36:13Z"}, "message": "Merge #458\n\n458: dont reexport module id r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "10880ed345f52646376e634a70b4f767cefea8bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10880ed345f52646376e634a70b4f767cefea8bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/562b448f9e49235fd47dabca1a0ce53da65dec6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/562b448f9e49235fd47dabca1a0ce53da65dec6f", "html_url": "https://github.com/rust-lang/rust/commit/562b448f9e49235fd47dabca1a0ce53da65dec6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/562b448f9e49235fd47dabca1a0ce53da65dec6f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "958c2a2d639130042d927ef6bfa58e82f839314f", "url": "https://api.github.com/repos/rust-lang/rust/commits/958c2a2d639130042d927ef6bfa58e82f839314f", "html_url": "https://github.com/rust-lang/rust/commit/958c2a2d639130042d927ef6bfa58e82f839314f"}, {"sha": "544c63b58e3d571257239fd87036f1b6818e3b14", "url": "https://api.github.com/repos/rust-lang/rust/commits/544c63b58e3d571257239fd87036f1b6818e3b14", "html_url": "https://github.com/rust-lang/rust/commit/544c63b58e3d571257239fd87036f1b6818e3b14"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "56e14fac128078d31148b269cdc39cf51337a3da", "filename": "crates/ra_hir/src/code_model_impl/module.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs?ref=562b448f9e49235fd47dabca1a0ce53da65dec6f", "patch": "@@ -3,7 +3,8 @@ use ra_syntax::{ast, SyntaxNode, AstNode, TreePtr};\n \n use crate::{\n     Module, ModuleSource, Problem,\n-    Crate, DefId, DefLoc, DefKind, Name, Path, PathKind, PerNs, Def, ModuleId,\n+    Crate, DefId, DefLoc, DefKind, Name, Path, PathKind, PerNs, Def,\n+    module_tree::ModuleId,\n     nameres::ModuleScope,\n     db::HirDatabase,\n };"}, {"sha": "3db75777814e8e2968520cdac62d0f8dfe354b2c", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=562b448f9e49235fd47dabca1a0ce53da65dec6f", "patch": "@@ -2,7 +2,10 @@ use ra_db::{SourceRootId, LocationIntener, Cancelable, FileId};\n use ra_syntax::{TreePtr, SyntaxKind, SyntaxNode, SourceFile, AstNode, ast};\n use ra_arena::{Arena, RawId, impl_arena_id};\n \n-use crate::{HirDatabase, PerNs, ModuleId, Def, Function, Struct, Enum, ImplBlock, Crate};\n+use crate::{\n+    HirDatabase, PerNs, Def, Function, Struct, Enum, ImplBlock, Crate,\n+    module_tree::ModuleId,\n+};\n \n use crate::code_model_api::Module;\n "}, {"sha": "f8ac28cf706d5ff75511921122295e2b6c3d8136", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=562b448f9e49235fd47dabca1a0ce53da65dec6f", "patch": "@@ -47,7 +47,6 @@ pub use self::{\n     name::Name,\n     ids::{HirFileId, DefId, DefLoc, MacroCallId, MacroCallLoc},\n     macros::{MacroDef, MacroInput, MacroExpansion},\n-    module_tree::ModuleId,\n     nameres::{ItemMap, PerNs, Namespace, Resolution},\n     function::{Function, FnSignature, FnScopes, ScopesWithSyntaxMapping},\n     ty::Ty,"}, {"sha": "82222d1adfb8e14dadf4dbda61b1485215cab363", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/562b448f9e49235fd47dabca1a0ce53da65dec6f/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=562b448f9e49235fd47dabca1a0ce53da65dec6f", "patch": "@@ -6,22 +6,23 @@ use relative_path::RelativePath;\n use test_utils::assert_eq_text;\n \n use crate::{\n-    self as hir,\n+    ItemMap, Resolution,\n     db::HirDatabase,\n     mock::MockDatabase,\n+    module_tree::ModuleId,\n };\n \n-fn item_map(fixture: &str) -> (Arc<hir::ItemMap>, hir::ModuleId) {\n+fn item_map(fixture: &str) -> (Arc<ItemMap>, ModuleId) {\n     let (db, pos) = MockDatabase::with_position(fixture);\n     let source_root = db.file_source_root(pos.file_id);\n-    let module = hir::source_binder::module_from_position(&db, pos)\n+    let module = crate::source_binder::module_from_position(&db, pos)\n         .unwrap()\n         .unwrap();\n     let module_id = module.def_id.loc(&db).module_id;\n     (db.item_map(source_root).unwrap(), module_id)\n }\n \n-fn check_module_item_map(map: &hir::ItemMap, module_id: hir::ModuleId, expected: &str) {\n+fn check_module_item_map(map: &ItemMap, module_id: ModuleId, expected: &str) {\n     let mut lines = map.per_module[&module_id]\n         .items\n         .iter()\n@@ -37,7 +38,7 @@ fn check_module_item_map(map: &hir::ItemMap, module_id: hir::ModuleId, expected:\n         .join(\"\\n\");\n     assert_eq_text!(&expected, &actual);\n \n-    fn dump_resolution(resolution: &hir::Resolution) -> &'static str {\n+    fn dump_resolution(resolution: &Resolution) -> &'static str {\n         match (\n             resolution.def_id.types.is_some(),\n             resolution.def_id.values.is_some(),\n@@ -181,7 +182,7 @@ fn item_map_across_crates() {\n     db.set_crate_graph(crate_graph);\n \n     let source_root = db.file_source_root(main_id);\n-    let module = hir::source_binder::module_from_file_id(&db, main_id)\n+    let module = crate::source_binder::module_from_file_id(&db, main_id)\n         .unwrap()\n         .unwrap();\n     let module_id = module.def_id.loc(&db).module_id;"}]}