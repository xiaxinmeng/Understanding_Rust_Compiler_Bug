{"sha": "b506d966a3e413f0d8f3a2fc470f941d7d8c471d", "node_id": "C_kwDOAAsO6NoAKGI1MDZkOTY2YTNlNDEzZjBkOGYzYTJmYzQ3MGY5NDFkN2Q4YzQ3MWQ", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-14T08:18:28Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-14T08:18:28Z"}, "message": "implement review suggestions", "tree": {"sha": "37c190ef038618a7b93e9ffa11d1382c2ef76113", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37c190ef038618a7b93e9ffa11d1382c2ef76113"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b506d966a3e413f0d8f3a2fc470f941d7d8c471d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEINUdoc4Vb1yVx04IZ6vxb7Ds2HAFAmQ5DF4ACgkQZ6vxb7Ds\n2HChVBAAt2sJtHhHYWilFDg+/Usgblwd/I8f3N0Bx4Vlhi7HSE65r2PXIyFgIpW9\nFAzDnTA9yIf+ud2DiIg0dRI+MuVMR3auJJpkDiDVJ2jwgN3ssrGSDfWR8U15iHd3\ngHm9d7zQNonGmOjk+IKiNyroWTpF73GxDX5U9kJfbfYmnfD5BCMfqbZjVoGQIHlu\ne8WlupCQdhYORQwg8/dqhI8nNVmwl5GFHM+zsmA0k+9a6X0rlxaR4IkkUuGF8qYj\n8mySx0hExbDjy2LATX1suWjjKKj9iLkrkX/WD5ON8JEVzUWu/7k57gT85fAea76U\nHzM4f5qyACkdD5rogpXATG90ADfM/vZHIYfhZte7NCxp1UudhdMVkhBU7qiLeyAy\nY+vKF1DzfN4F8JwfkxfOTrjU7kYoaAFp6Ji8zPS47UjbXldEZEvUYgPDQKPFnMiL\ny835Lpo+1ubahTPVer+njBn/uxLFgJkU2iNYv3xKVnDX8FKVpHRlUyF/KSQppclG\nWfej9jS0MPzL2vF8zv9bazFXC7SVmpCwDOeRmaQwKKzjOzsEJTfiBeIkpggZlHIb\n3yEOg2HMwwPrVKXLTU3d61DaDpvzHSNRSp2ESKzSrFzzPh/pOSnIsZms4na6TLnO\n39+/aNLZkNuQSpgvTv11iZxsvE87t6hZuhXM2aNIrn8jrpPLT9M=\n=522l\n-----END PGP SIGNATURE-----", "payload": "tree 37c190ef038618a7b93e9ffa11d1382c2ef76113\nparent ecf2a9b75ec591db6e89f4bde391b87f35c2ea08\nauthor Ezra Shaw <ezrasure@outlook.com> 1681460308 +1200\ncommitter Ezra Shaw <ezrasure@outlook.com> 1681460308 +1200\n\nimplement review suggestions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b506d966a3e413f0d8f3a2fc470f941d7d8c471d", "html_url": "https://github.com/rust-lang/rust/commit/b506d966a3e413f0d8f3a2fc470f941d7d8c471d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b506d966a3e413f0d8f3a2fc470f941d7d8c471d/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08", "html_url": "https://github.com/rust-lang/rust/commit/ecf2a9b75ec591db6e89f4bde391b87f35c2ea08"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "5b8d9e7f0f75350c1b60a32d770900a14df92e54", "filename": "compiler/rustc_trait_selection/src/traits/outlives_bounds.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b506d966a3e413f0d8f3a2fc470f941d7d8c471d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b506d966a3e413f0d8f3a2fc470f941d7d8c471d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs?ref=b506d966a3e413f0d8f3a2fc470f941d7d8c471d", "patch": "@@ -56,11 +56,12 @@ impl<'a, 'tcx: 'a> InferCtxtExt<'a, 'tcx> for InferCtxt<'tcx> {\n         let ty = self.resolve_vars_if_possible(ty);\n         let ty = OpportunisticRegionResolver::new(self).fold_ty(ty);\n \n-        // We must avoid processing constrained lifetime variables in implied\n+        // We must avoid processing unconstrained lifetime variables in implied\n         // bounds. See #110161 for context.\n+        assert!(!ty.has_non_region_infer());\n         if ty.needs_infer() {\n             self.tcx.sess.delay_span_bug(\n-                self.tcx.source_span_untracked(body_id),\n+                self.tcx.def_span(body_id),\n                 \"skipped implied_outlives_bounds due to unconstrained lifetimes\",\n             );\n             return vec![];"}, {"sha": "e52c8356b52b3171b9f2f8d7400852e96fc1ec69", "filename": "tests/ui/implied-bounds/issue-110161.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b506d966a3e413f0d8f3a2fc470f941d7d8c471d/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b506d966a3e413f0d8f3a2fc470f941d7d8c471d/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs?ref=b506d966a3e413f0d8f3a2fc470f941d7d8c471d", "patch": "@@ -3,22 +3,24 @@\n \n // compile-flags: --crate-type=lib\n \n-trait Trait {\n+trait LtTrait {\n     type Ty;\n }\n \n // erroneous `Ty` impl\n-impl Trait for () {\n+impl LtTrait for () {\n //~^ ERROR not all trait items implemented, missing: `Ty` [E0046]\n }\n \n // `'lt` is not constrained by the erroneous `Ty`\n-impl<'lt, T> Trait for Box<T>\n+impl<'lt, T> LtTrait for Box<T>\n where\n-    T: Trait<Ty = &'lt ()>,\n+    T: LtTrait<Ty = &'lt ()>,\n {\n     type Ty = &'lt ();\n }\n \n // unconstrained lifetime appears in implied bounds\n-fn test(_: <Box<()> as Trait>::Ty) {}\n+fn test(_: <Box<()> as LtTrait>::Ty) {}\n+\n+fn test2<'x>(_: &'x <Box<()> as LtTrait>::Ty) {}"}, {"sha": "9e0188694ed9c2790c8c546cff944404c14f6270", "filename": "tests/ui/implied-bounds/issue-110161.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b506d966a3e413f0d8f3a2fc470f941d7d8c471d/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b506d966a3e413f0d8f3a2fc470f941d7d8c471d/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr?ref=b506d966a3e413f0d8f3a2fc470f941d7d8c471d", "patch": "@@ -4,8 +4,8 @@ error[E0046]: not all trait items implemented, missing: `Ty`\n LL |     type Ty;\n    |     ------- `Ty` from trait\n ...\n-LL | impl Trait for () {\n-   | ^^^^^^^^^^^^^^^^^ missing `Ty` in implementation\n+LL | impl LtTrait for () {\n+   | ^^^^^^^^^^^^^^^^^^^ missing `Ty` in implementation\n \n error: aborting due to previous error\n "}]}