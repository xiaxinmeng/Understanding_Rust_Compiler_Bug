{"sha": "34a912933323aa343ffa016b19c6e73155a26431", "node_id": "C_kwDOAAsO6NoAKDM0YTkxMjkzMzMyM2FhMzQzZmZhMDE2YjE5YzZlNzMxNTVhMjY0MzE", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-05-11T09:15:28Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-05-11T12:13:05Z"}, "message": "fix: `column!()` and `line!()` built-in macros return u32", "tree": {"sha": "c9cf8ed4aafdce2d28a2041365edc7f455046ac4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9cf8ed4aafdce2d28a2041365edc7f455046ac4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34a912933323aa343ffa016b19c6e73155a26431", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmRc29EACgkQ4laYqTBY\nYXFmNA//XCz9TyVug+a+Up8B4wWoYp7lmARb0A1m9qR0YUI3e2FCUYK0f/x/5niB\nJdOrYyjBSUWLrNL5ozrN/ngEFmi9snegFvkOYb/WW0yUATfG8w6yuoYW+RB3aDwH\n9x7j6h8ubVgcoCc8RFsruo1df4uFBz9qhMUhWMHxpQBQxl+iJoGnXFJ2+Ta+YfJV\nW2//fGaRJ1iWd7IVlxmoMXebVmzi6BNlh3nVvI9PljDdJE5jGhFfmwxy85pHgTiO\nziB3RoiAbXmu5dk1g436t63R8masKA7Vsj0dA5mLnN7HN2vHn46EKFtEcBLJ+Lq7\nRv4AtqfldhGnf2ZAyP5tc3FkSBU4KCzCgDo2204a5r/77QcKlIu8KOyibmMbKfHr\nG8xGztPoQMSuT/lyR/HuKH6UQzFbmHXuhz/syAeQurZ0aLGFPh/tqNGZ9mfV5x3s\n5lSsVfutO3IslvyvbfZsY9eR1m9qh5t3SClUuWctN9Jgs/gxENP+byxGXrDP63eG\nPy7yX0lEQ7YYC8C5SyGBsXCqWO4himruOvmn29dx3Tja5w+8kK4ORA3go8dyF1EB\no8Z0lUzU6DTC8jj+4t8i2Lf/5iUq4Cz2BRdtqmQg1XBEeOyBleOV6zvCrsvEQUbI\npRRD0CQII2b7s7Ix2QkiVpUYTm3B9wOUjb1ni8R21EM6Zrcyrmc=\n=ENE+\n-----END PGP SIGNATURE-----", "payload": "tree c9cf8ed4aafdce2d28a2041365edc7f455046ac4\nparent a0a78601413f27d93f91044eff4979a1d76a13c5\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1683796528 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1683807185 +0900\n\nfix: `column!()` and `line!()` built-in macros return u32\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34a912933323aa343ffa016b19c6e73155a26431", "html_url": "https://github.com/rust-lang/rust/commit/34a912933323aa343ffa016b19c6e73155a26431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34a912933323aa343ffa016b19c6e73155a26431/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0a78601413f27d93f91044eff4979a1d76a13c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a78601413f27d93f91044eff4979a1d76a13c5", "html_url": "https://github.com/rust-lang/rust/commit/a0a78601413f27d93f91044eff4979a1d76a13c5"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "6cb741dac719fc2b7bd4dcdf3346bfe4e8aed49f", "filename": "crates/hir-def/src/macro_expansion_tests/builtin_fn_macro.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs?ref=34a912933323aa343ffa016b19c6e73155a26431", "patch": "@@ -13,12 +13,12 @@ macro_rules! column {() => {}}\n \n fn main() { column!(); }\n \"#,\n-        expect![[r##\"\n+        expect![[r#\"\n #[rustc_builtin_macro]\n macro_rules! column {() => {}}\n \n-fn main() { 0; }\n-\"##]],\n+fn main() { 0 as u32; }\n+\"#]],\n     );\n }\n \n@@ -31,12 +31,12 @@ macro_rules! line {() => {}}\n \n fn main() { line!() }\n \"#,\n-        expect![[r##\"\n+        expect![[r#\"\n #[rustc_builtin_macro]\n macro_rules! line {() => {}}\n \n-fn main() { 0 }\n-\"##]],\n+fn main() { 0 as u32 }\n+\"#]],\n     );\n }\n "}, {"sha": "c056c077a56838738dded1b01d7edeef8741b148", "filename": "crates/hir-def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=34a912933323aa343ffa016b19c6e73155a26431", "patch": "@@ -922,7 +922,7 @@ macro_rules! m {\n \n fn bar() -> &'a Baz<u8> {}\n \n-fn bar() -> extern \"Rust\"fn() -> Ret {}\n+fn bar() -> extern \"Rust\" fn() -> Ret {}\n \"#]],\n     );\n }\n@@ -1333,7 +1333,7 @@ macro_rules! matches {\n }\n fn main() {\n     match 0 {\n-        0|1if true =>true , _=>false\n+        0|1 if true =>true , _=>false\n     };\n }\n  \"#]],"}, {"sha": "0909d8c835443e00fe721d1e090e4c7e0082166b", "filename": "crates/hir-def/src/macro_expansion_tests/mbe/matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs?ref=34a912933323aa343ffa016b19c6e73155a26431", "patch": "@@ -73,7 +73,7 @@ fn main() {\n macro_rules! asi { ($($stmt:stmt)*) => ($($stmt)*); }\n \n fn main() {\n-    let a = 2let b = 5drop(b-a)println!(\"{}\", a+b)\n+    let a = 2 let b = 5 drop(b-a)println!(\"{}\", a+b)\n }\n \"#]],\n     )"}, {"sha": "d8e4a4dcc7c2b231501963e35434a2656690964a", "filename": "crates/hir-def/src/macro_expansion_tests/mbe/regression.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs?ref=34a912933323aa343ffa016b19c6e73155a26431", "patch": "@@ -297,55 +297,55 @@ macro_rules! impl_fn_for_zst  {\n \n #[derive(Clone)] struct CharEscapeDebugContinue;\n impl Fn<(char, )> for CharEscapeDebugContinue {\n-    #[inline] extern \"rust-call\"fn call(&self , (c, ): (char, )) -> char::EscapeDebug { {\n+    #[inline] extern \"rust-call\" fn call(&self , (c, ): (char, )) -> char::EscapeDebug { {\n             c.escape_debug_ext(false )\n         }\n     }\n }\n impl FnMut<(char, )> for CharEscapeDebugContinue {\n-    #[inline] extern \"rust-call\"fn call_mut(&mut self , (c, ): (char, )) -> char::EscapeDebug {\n+    #[inline] extern \"rust-call\" fn call_mut(&mut self , (c, ): (char, )) -> char::EscapeDebug {\n         Fn::call(&*self , (c, ))\n     }\n }\n impl FnOnce<(char, )> for CharEscapeDebugContinue {\n     type Output = char::EscapeDebug;\n-    #[inline] extern \"rust-call\"fn call_once(self , (c, ): (char, )) -> char::EscapeDebug {\n+    #[inline] extern \"rust-call\" fn call_once(self , (c, ): (char, )) -> char::EscapeDebug {\n         Fn::call(&self , (c, ))\n     }\n }\n #[derive(Clone)] struct CharEscapeUnicode;\n impl Fn<(char, )> for CharEscapeUnicode {\n-    #[inline] extern \"rust-call\"fn call(&self , (c, ): (char, )) -> char::EscapeUnicode { {\n+    #[inline] extern \"rust-call\" fn call(&self , (c, ): (char, )) -> char::EscapeUnicode { {\n             c.escape_unicode()\n         }\n     }\n }\n impl FnMut<(char, )> for CharEscapeUnicode {\n-    #[inline] extern \"rust-call\"fn call_mut(&mut self , (c, ): (char, )) -> char::EscapeUnicode {\n+    #[inline] extern \"rust-call\" fn call_mut(&mut self , (c, ): (char, )) -> char::EscapeUnicode {\n         Fn::call(&*self , (c, ))\n     }\n }\n impl FnOnce<(char, )> for CharEscapeUnicode {\n     type Output = char::EscapeUnicode;\n-    #[inline] extern \"rust-call\"fn call_once(self , (c, ): (char, )) -> char::EscapeUnicode {\n+    #[inline] extern \"rust-call\" fn call_once(self , (c, ): (char, )) -> char::EscapeUnicode {\n         Fn::call(&self , (c, ))\n     }\n }\n #[derive(Clone)] struct CharEscapeDefault;\n impl Fn<(char, )> for CharEscapeDefault {\n-    #[inline] extern \"rust-call\"fn call(&self , (c, ): (char, )) -> char::EscapeDefault { {\n+    #[inline] extern \"rust-call\" fn call(&self , (c, ): (char, )) -> char::EscapeDefault { {\n             c.escape_default()\n         }\n     }\n }\n impl FnMut<(char, )> for CharEscapeDefault {\n-    #[inline] extern \"rust-call\"fn call_mut(&mut self , (c, ): (char, )) -> char::EscapeDefault {\n+    #[inline] extern \"rust-call\" fn call_mut(&mut self , (c, ): (char, )) -> char::EscapeDefault {\n         Fn::call(&*self , (c, ))\n     }\n }\n impl FnOnce<(char, )> for CharEscapeDefault {\n     type Output = char::EscapeDefault;\n-    #[inline] extern \"rust-call\"fn call_once(self , (c, ): (char, )) -> char::EscapeDefault {\n+    #[inline] extern \"rust-call\" fn call_once(self , (c, ): (char, )) -> char::EscapeDefault {\n         Fn::call(&self , (c, ))\n     }\n }\n@@ -833,7 +833,7 @@ macro_rules! rgb_color {\n /* parse error: expected SEMICOLON */\n /* parse error: expected expression, item or let statement */\n pub fn new() {\n-    let _ = 0as u32<<(8+8);\n+    let _ = 0 as u32<<(8+8);\n }\n // MACRO_ITEMS@0..31\n //   FN@0..31"}, {"sha": "a59a3dc81ef05e123d29312aeacb035b9d4ae16c", "filename": "crates/hir-def/src/macro_expansion_tests/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmod.rs?ref=34a912933323aa343ffa016b19c6e73155a26431", "patch": "@@ -280,6 +280,7 @@ fn pretty_print_macro_expansion(expn: SyntaxNode, map: Option<&TokenMap>) -> Str\n         let curr_kind = token.kind();\n         let space = match (prev_kind, curr_kind) {\n             _ if prev_kind.is_trivia() || curr_kind.is_trivia() => \"\",\n+            _ if prev_kind.is_literal() && !curr_kind.is_punct() => \" \",\n             (T!['{'], T!['}']) => \"\",\n             (T![=], _) | (_, T![=]) => \" \",\n             (_, T!['{']) => \" \","}, {"sha": "9c8dc4ed1fca761a9b0f371e374b748cf3cabf44", "filename": "crates/hir-expand/src/builtin_fn_macro.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs?ref=34a912933323aa343ffa016b19c6e73155a26431", "patch": "@@ -135,9 +135,8 @@ fn line_expand(\n     _tt: &tt::Subtree,\n ) -> ExpandResult<tt::Subtree> {\n     // dummy implementation for type-checking purposes\n-    let line_num = 0;\n     let expanded = quote! {\n-        #line_num\n+        0 as u32\n     };\n \n     ExpandResult::ok(expanded)\n@@ -179,9 +178,8 @@ fn column_expand(\n     _tt: &tt::Subtree,\n ) -> ExpandResult<tt::Subtree> {\n     // dummy implementation for type-checking purposes\n-    let col_num = 0;\n     let expanded = quote! {\n-        #col_num\n+        0 as u32\n     };\n \n     ExpandResult::ok(expanded)"}, {"sha": "9377a3a5f26ac53798ca97900416bed12e359581", "filename": "crates/hir-ty/src/tests/macros.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34a912933323aa343ffa016b19c6e73155a26431/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs?ref=34a912933323aa343ffa016b19c6e73155a26431", "patch": "@@ -661,8 +661,9 @@ fn infer_builtin_macros_line() {\n         \"#,\n         expect![[r#\"\n             !0..1 '0': i32\n+            !0..6 '0asu32': u32\n             63..87 '{     ...!(); }': ()\n-            73..74 'x': i32\n+            73..74 'x': u32\n         \"#]],\n     );\n }\n@@ -699,8 +700,9 @@ fn infer_builtin_macros_column() {\n         \"#,\n         expect![[r#\"\n             !0..1 '0': i32\n+            !0..6 '0asu32': u32\n             65..91 '{     ...!(); }': ()\n-            75..76 'x': i32\n+            75..76 'x': u32\n         \"#]],\n     );\n }"}]}