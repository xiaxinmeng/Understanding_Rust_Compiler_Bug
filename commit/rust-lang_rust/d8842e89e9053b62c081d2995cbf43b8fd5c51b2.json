{"sha": "d8842e89e9053b62c081d2995cbf43b8fd5c51b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ODQyZTg5ZTkwNTNiNjJjMDgxZDI5OTVjYmY0M2I4ZmQ1YzUxYjI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-22T12:13:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-22T12:13:18Z"}, "message": "Merge #4899\n\n4899: don't complete top level attrs inside nested attrs and add better labels r=matklad a=bnjjj\n\nclose #4890\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "c4c4c7f99efdcd289038fbd91dc7578dc7a494a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4c4c7f99efdcd289038fbd91dc7578dc7a494a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8842e89e9053b62c081d2995cbf43b8fd5c51b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe8KBeCRBK7hj4Ov3rIwAAdHIIACxC8fTop5MH6O5jwdadKthp\nPfgsaH9P8wvo9BoI5fMkak+I9hDA2hZsqbrqib9NIuCSdPqAd6t3qhWzQao9B+cA\nn8//N3SeREowV7zFsU3loxbtKh/TctZ2qyW24KKDfZJDzHPxqm7fl17/ECEO804W\nnrbxN7qHvYy7ttX/wAfpmY0MdXd1fD2BqDqm7Cd16Zji8JPqnbaB7+qEty9yEj6Q\neM+yh6fC95YF40Vpq4LzGDhTG2IhCPzu/j0x1wxttA3mNp63HhKfIK1tvecR9C2F\nMqqoihe8D/wh2IwHReD5Wquj8mn8rbS11emp+Od2N9//t/4TPjsbisRwEg23lgY=\n=VxXJ\n-----END PGP SIGNATURE-----\n", "payload": "tree c4c4c7f99efdcd289038fbd91dc7578dc7a494a2\nparent d144d69d2eded43a59c8edb59419b1b9e85c10a5\nparent 5aad6c9fa69915c4810a8e93d793d76de211f2ca\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1592827998 +0000\ncommitter GitHub <noreply@github.com> 1592827998 +0000\n\nMerge #4899\n\n4899: don't complete top level attrs inside nested attrs and add better labels r=matklad a=bnjjj\n\nclose #4890\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8842e89e9053b62c081d2995cbf43b8fd5c51b2", "html_url": "https://github.com/rust-lang/rust/commit/d8842e89e9053b62c081d2995cbf43b8fd5c51b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8842e89e9053b62c081d2995cbf43b8fd5c51b2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d144d69d2eded43a59c8edb59419b1b9e85c10a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d144d69d2eded43a59c8edb59419b1b9e85c10a5", "html_url": "https://github.com/rust-lang/rust/commit/d144d69d2eded43a59c8edb59419b1b9e85c10a5"}, {"sha": "5aad6c9fa69915c4810a8e93d793d76de211f2ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aad6c9fa69915c4810a8e93d793d76de211f2ca", "html_url": "https://github.com/rust-lang/rust/commit/5aad6c9fa69915c4810a8e93d793d76de211f2ca"}], "stats": {"total": 278, "additions": 206, "deletions": 72}, "files": [{"sha": "ade17a1ff5e75425b22bc4b6860c58e99e9f831a", "filename": "crates/ra_ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 206, "deletions": 72, "changes": 278, "blob_url": "https://github.com/rust-lang/rust/blob/d8842e89e9053b62c081d2995cbf43b8fd5c51b2/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8842e89e9053b62c081d2995cbf43b8fd5c51b2/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=d8842e89e9053b62c081d2995cbf43b8fd5c51b2", "patch": "@@ -20,6 +20,7 @@ pub(super) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext)\n         {\n             complete_derive(acc, ctx, token_tree)\n         }\n+        (_, Some(ast::AttrInput::TokenTree(_token_tree))) => {}\n         _ => complete_attribute_start(acc, ctx, attribute),\n     }\n     Some(())\n@@ -34,6 +35,10 @@ fn complete_attribute_start(acc: &mut Completions, ctx: &CompletionContext, attr\n         )\n         .kind(CompletionItemKind::Attribute);\n \n+        if let Some(lookup) = attr_completion.lookup {\n+            item = item.lookup_by(lookup);\n+        }\n+\n         match (attr_completion.snippet, ctx.config.snippet_cap) {\n             (Some(snippet), Some(cap)) => {\n                 item = item.insert_snippet(cap, snippet);\n@@ -49,84 +54,160 @@ fn complete_attribute_start(acc: &mut Completions, ctx: &CompletionContext, attr\n \n struct AttrCompletion {\n     label: &'static str,\n+    lookup: Option<&'static str>,\n     snippet: Option<&'static str>,\n     should_be_inner: bool,\n }\n \n const ATTRIBUTES: &[AttrCompletion] = &[\n-    AttrCompletion { label: \"allow\", snippet: Some(\"allow(${0:lint})\"), should_be_inner: false },\n     AttrCompletion {\n-        label: \"cfg_attr\",\n+        label: \"allow(\u2026)\",\n+        snippet: Some(\"allow(${0:lint})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"allow\"),\n+    },\n+    AttrCompletion {\n+        label: \"cfg_attr(\u2026)\",\n         snippet: Some(\"cfg_attr(${1:predicate}, ${0:attr})\"),\n         should_be_inner: false,\n+        lookup: Some(\"cfg_attr\"),\n     },\n-    AttrCompletion { label: \"cfg\", snippet: Some(\"cfg(${0:predicate})\"), should_be_inner: false },\n-    AttrCompletion { label: \"deny\", snippet: Some(\"deny(${0:lint})\"), should_be_inner: false },\n     AttrCompletion {\n-        label: \"deprecated\",\n+        label: \"cfg(\u2026)\",\n+        snippet: Some(\"cfg(${0:predicate})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"cfg\"),\n+    },\n+    AttrCompletion {\n+        label: \"deny(\u2026)\",\n+        snippet: Some(\"deny(${0:lint})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"deny\"),\n+    },\n+    AttrCompletion {\n+        label: r#\"deprecated = \"\u2026\"\"#,\n         snippet: Some(r#\"deprecated = \"${0:reason}\"\"#),\n         should_be_inner: false,\n+        lookup: Some(\"deprecated\"),\n     },\n     AttrCompletion {\n-        label: \"derive\",\n+        label: \"derive(\u2026)\",\n         snippet: Some(r#\"derive(${0:Debug})\"#),\n         should_be_inner: false,\n+        lookup: Some(\"derive\"),\n+    },\n+    AttrCompletion {\n+        label: r#\"doc = \"\u2026\"\"#,\n+        snippet: Some(r#\"doc = \"${0:docs}\"\"#),\n+        should_be_inner: false,\n+        lookup: Some(\"doc\"),\n+    },\n+    AttrCompletion {\n+        label: \"feature(\u2026)\",\n+        snippet: Some(\"feature(${0:flag})\"),\n+        should_be_inner: true,\n+        lookup: Some(\"feature\"),\n+    },\n+    AttrCompletion {\n+        label: \"forbid(\u2026)\",\n+        snippet: Some(\"forbid(${0:lint})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"forbid\"),\n     },\n-    AttrCompletion { label: \"doc\", snippet: Some(r#\"doc = \"${0:docs}\"\"#), should_be_inner: false },\n-    AttrCompletion { label: \"feature\", snippet: Some(\"feature(${0:flag})\"), should_be_inner: true },\n-    AttrCompletion { label: \"forbid\", snippet: Some(\"forbid(${0:lint})\"), should_be_inner: false },\n     // FIXME: resolve through macro resolution?\n-    AttrCompletion { label: \"global_allocator\", snippet: None, should_be_inner: true },\n-    AttrCompletion { label: \"ignore\", snippet: Some(\"ignore(${0:lint})\"), should_be_inner: false },\n-    AttrCompletion { label: \"inline\", snippet: Some(\"inline(${0:lint})\"), should_be_inner: false },\n     AttrCompletion {\n-        label: \"link_name\",\n+        label: \"global_allocator\",\n+        snippet: None,\n+        should_be_inner: true,\n+        lookup: None,\n+    },\n+    AttrCompletion {\n+        label: \"ignore(\u2026)\",\n+        snippet: Some(\"ignore(${0:lint})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"ignore\"),\n+    },\n+    AttrCompletion {\n+        label: \"inline(\u2026)\",\n+        snippet: Some(\"inline(${0:lint})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"inline\"),\n+    },\n+    AttrCompletion {\n+        label: r#\"link_name = \"\u2026\"\"#,\n         snippet: Some(r#\"link_name = \"${0:symbol_name}\"\"#),\n         should_be_inner: false,\n+        lookup: Some(\"link_name\"),\n     },\n-    AttrCompletion { label: \"link\", snippet: None, should_be_inner: false },\n-    AttrCompletion { label: \"macro_export\", snippet: None, should_be_inner: false },\n-    AttrCompletion { label: \"macro_use\", snippet: None, should_be_inner: false },\n+    AttrCompletion { label: \"link\", snippet: None, should_be_inner: false, lookup: None },\n+    AttrCompletion { label: \"macro_export\", snippet: None, should_be_inner: false, lookup: None },\n+    AttrCompletion { label: \"macro_use\", snippet: None, should_be_inner: false, lookup: None },\n     AttrCompletion {\n-        label: \"must_use\",\n+        label: r#\"must_use = \"\u2026\"\"#,\n         snippet: Some(r#\"must_use = \"${0:reason}\"\"#),\n         should_be_inner: false,\n+        lookup: Some(\"must_use\"),\n     },\n-    AttrCompletion { label: \"no_mangle\", snippet: None, should_be_inner: false },\n-    AttrCompletion { label: \"no_std\", snippet: None, should_be_inner: true },\n-    AttrCompletion { label: \"non_exhaustive\", snippet: None, should_be_inner: false },\n-    AttrCompletion { label: \"panic_handler\", snippet: None, should_be_inner: true },\n-    AttrCompletion { label: \"path\", snippet: Some(\"path =\\\"${0:path}\\\"\"), should_be_inner: false },\n-    AttrCompletion { label: \"proc_macro\", snippet: None, should_be_inner: false },\n-    AttrCompletion { label: \"proc_macro_attribute\", snippet: None, should_be_inner: false },\n+    AttrCompletion { label: \"no_mangle\", snippet: None, should_be_inner: false, lookup: None },\n+    AttrCompletion { label: \"no_std\", snippet: None, should_be_inner: true, lookup: None },\n+    AttrCompletion { label: \"non_exhaustive\", snippet: None, should_be_inner: false, lookup: None },\n+    AttrCompletion { label: \"panic_handler\", snippet: None, should_be_inner: true, lookup: None },\n     AttrCompletion {\n-        label: \"proc_macro_derive\",\n+        label: \"path = \\\"\u2026\\\"\",\n+        snippet: Some(\"path =\\\"${0:path}\\\"\"),\n+        should_be_inner: false,\n+        lookup: Some(\"path\"),\n+    },\n+    AttrCompletion { label: \"proc_macro\", snippet: None, should_be_inner: false, lookup: None },\n+    AttrCompletion {\n+        label: \"proc_macro_attribute\",\n+        snippet: None,\n+        should_be_inner: false,\n+        lookup: None,\n+    },\n+    AttrCompletion {\n+        label: \"proc_macro_derive(\u2026)\",\n         snippet: Some(\"proc_macro_derive(${0:Trait})\"),\n         should_be_inner: false,\n+        lookup: Some(\"proc_macro_derive\"),\n     },\n     AttrCompletion {\n-        label: \"recursion_limit\",\n+        label: \"recursion_limit = \u2026\",\n         snippet: Some(\"recursion_limit = ${0:128}\"),\n         should_be_inner: true,\n+        lookup: Some(\"recursion_limit\"),\n+    },\n+    AttrCompletion {\n+        label: \"repr(\u2026)\",\n+        snippet: Some(\"repr(${0:C})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"repr\"),\n     },\n-    AttrCompletion { label: \"repr\", snippet: Some(\"repr(${0:C})\"), should_be_inner: false },\n     AttrCompletion {\n-        label: \"should_panic\",\n+        label: \"should_panic(\u2026)\",\n         snippet: Some(r#\"should_panic(expected = \"${0:reason}\")\"#),\n         should_be_inner: false,\n+        lookup: Some(\"should_panic\"),\n     },\n     AttrCompletion {\n-        label: \"target_feature\",\n+        label: r#\"target_feature = \"\u2026\"\"#,\n         snippet: Some(\"target_feature = \\\"${0:feature}\\\"\"),\n         should_be_inner: false,\n+        lookup: Some(\"target_feature\"),\n+    },\n+    AttrCompletion { label: \"test\", snippet: None, should_be_inner: false, lookup: None },\n+    AttrCompletion { label: \"used\", snippet: None, should_be_inner: false, lookup: None },\n+    AttrCompletion {\n+        label: \"warn(\u2026)\",\n+        snippet: Some(\"warn(${0:lint})\"),\n+        should_be_inner: false,\n+        lookup: Some(\"warn\"),\n     },\n-    AttrCompletion { label: \"test\", snippet: None, should_be_inner: false },\n-    AttrCompletion { label: \"used\", snippet: None, should_be_inner: false },\n-    AttrCompletion { label: \"warn\", snippet: Some(\"warn(${0:lint})\"), should_be_inner: false },\n     AttrCompletion {\n-        label: \"windows_subsystem\",\n+        label: r#\"windows_subsystem = \"\u2026\"\"#,\n         snippet: Some(r#\"windows_subsystem = \"${0:subsystem}\"\"#),\n         should_be_inner: true,\n+        lookup: Some(\"windows_subsystem\"),\n     },\n ];\n \n@@ -414,74 +495,84 @@ mod tests {\n             @r###\"\n         [\n             CompletionItem {\n-                label: \"allow\",\n+                label: \"allow(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"allow(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"allow\",\n             },\n             CompletionItem {\n-                label: \"cfg\",\n+                label: \"cfg(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"cfg(${0:predicate})\",\n                 kind: Attribute,\n+                lookup: \"cfg\",\n             },\n             CompletionItem {\n-                label: \"cfg_attr\",\n+                label: \"cfg_attr(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"cfg_attr(${1:predicate}, ${0:attr})\",\n                 kind: Attribute,\n+                lookup: \"cfg_attr\",\n             },\n             CompletionItem {\n-                label: \"deny\",\n+                label: \"deny(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"deny(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"deny\",\n             },\n             CompletionItem {\n-                label: \"deprecated\",\n+                label: \"deprecated = \\\"\u2026\\\"\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"deprecated = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n+                lookup: \"deprecated\",\n             },\n             CompletionItem {\n-                label: \"derive\",\n+                label: \"derive(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"derive(${0:Debug})\",\n                 kind: Attribute,\n+                lookup: \"derive\",\n             },\n             CompletionItem {\n-                label: \"doc\",\n+                label: \"doc = \\\"\u2026\\\"\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"doc = \\\"${0:docs}\\\"\",\n                 kind: Attribute,\n+                lookup: \"doc\",\n             },\n             CompletionItem {\n-                label: \"forbid\",\n+                label: \"forbid(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"forbid(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"forbid\",\n             },\n             CompletionItem {\n-                label: \"ignore\",\n+                label: \"ignore(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"ignore(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"ignore\",\n             },\n             CompletionItem {\n-                label: \"inline\",\n+                label: \"inline(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"inline(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"inline\",\n             },\n             CompletionItem {\n                 label: \"link\",\n@@ -491,11 +582,12 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"link_name\",\n+                label: \"link_name = \\\"\u2026\\\"\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"link_name = \\\"${0:symbol_name}\\\"\",\n                 kind: Attribute,\n+                lookup: \"link_name\",\n             },\n             CompletionItem {\n                 label: \"macro_export\",\n@@ -512,11 +604,12 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"must_use\",\n+                label: \"must_use = \\\"\u2026\\\"\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"must_use = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n+                lookup: \"must_use\",\n             },\n             CompletionItem {\n                 label: \"no_mangle\",\n@@ -533,11 +626,12 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"path\",\n+                label: \"path = \\\"\u2026\\\"\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"path =\\\"${0:path}\\\"\",\n                 kind: Attribute,\n+                lookup: \"path\",\n             },\n             CompletionItem {\n                 label: \"proc_macro\",\n@@ -554,32 +648,36 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"proc_macro_derive\",\n+                label: \"proc_macro_derive(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"proc_macro_derive(${0:Trait})\",\n                 kind: Attribute,\n+                lookup: \"proc_macro_derive\",\n             },\n             CompletionItem {\n-                label: \"repr\",\n+                label: \"repr(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"repr(${0:C})\",\n                 kind: Attribute,\n+                lookup: \"repr\",\n             },\n             CompletionItem {\n-                label: \"should_panic\",\n+                label: \"should_panic(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"should_panic(expected = \\\"${0:reason}\\\")\",\n                 kind: Attribute,\n+                lookup: \"should_panic\",\n             },\n             CompletionItem {\n-                label: \"target_feature\",\n+                label: \"target_feature = \\\"\u2026\\\"\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"target_feature = \\\"${0:feature}\\\"\",\n                 kind: Attribute,\n+                lookup: \"target_feature\",\n             },\n             CompletionItem {\n                 label: \"test\",\n@@ -596,17 +694,32 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"warn\",\n+                label: \"warn(\u2026)\",\n                 source_range: 19..19,\n                 delete: 19..19,\n                 insert: \"warn(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"warn\",\n             },\n         ]\n         \"###\n         );\n     }\n \n+    #[test]\n+    fn test_attribute_completion_inside_nested_attr() {\n+        assert_debug_snapshot!(\n+        do_attr_completion(\n+                r\"\n+                #[allow(<|>)]\n+                \",\n+        ),\n+            @r###\"\n+        []\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn test_inner_attribute_completion() {\n         assert_debug_snapshot!(\n@@ -618,67 +731,76 @@ mod tests {\n             @r###\"\n         [\n             CompletionItem {\n-                label: \"allow\",\n+                label: \"allow(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"allow(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"allow\",\n             },\n             CompletionItem {\n-                label: \"cfg\",\n+                label: \"cfg(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"cfg(${0:predicate})\",\n                 kind: Attribute,\n+                lookup: \"cfg\",\n             },\n             CompletionItem {\n-                label: \"cfg_attr\",\n+                label: \"cfg_attr(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"cfg_attr(${1:predicate}, ${0:attr})\",\n                 kind: Attribute,\n+                lookup: \"cfg_attr\",\n             },\n             CompletionItem {\n-                label: \"deny\",\n+                label: \"deny(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"deny(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"deny\",\n             },\n             CompletionItem {\n-                label: \"deprecated\",\n+                label: \"deprecated = \\\"\u2026\\\"\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"deprecated = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n+                lookup: \"deprecated\",\n             },\n             CompletionItem {\n-                label: \"derive\",\n+                label: \"derive(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"derive(${0:Debug})\",\n                 kind: Attribute,\n+                lookup: \"derive\",\n             },\n             CompletionItem {\n-                label: \"doc\",\n+                label: \"doc = \\\"\u2026\\\"\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"doc = \\\"${0:docs}\\\"\",\n                 kind: Attribute,\n+                lookup: \"doc\",\n             },\n             CompletionItem {\n-                label: \"feature\",\n+                label: \"feature(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"feature(${0:flag})\",\n                 kind: Attribute,\n+                lookup: \"feature\",\n             },\n             CompletionItem {\n-                label: \"forbid\",\n+                label: \"forbid(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"forbid(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"forbid\",\n             },\n             CompletionItem {\n                 label: \"global_allocator\",\n@@ -688,18 +810,20 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"ignore\",\n+                label: \"ignore(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"ignore(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"ignore\",\n             },\n             CompletionItem {\n-                label: \"inline\",\n+                label: \"inline(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"inline(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"inline\",\n             },\n             CompletionItem {\n                 label: \"link\",\n@@ -709,11 +833,12 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"link_name\",\n+                label: \"link_name = \\\"\u2026\\\"\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"link_name = \\\"${0:symbol_name}\\\"\",\n                 kind: Attribute,\n+                lookup: \"link_name\",\n             },\n             CompletionItem {\n                 label: \"macro_export\",\n@@ -730,11 +855,12 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"must_use\",\n+                label: \"must_use = \\\"\u2026\\\"\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"must_use = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n+                lookup: \"must_use\",\n             },\n             CompletionItem {\n                 label: \"no_mangle\",\n@@ -765,11 +891,12 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"path\",\n+                label: \"path = \\\"\u2026\\\"\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"path =\\\"${0:path}\\\"\",\n                 kind: Attribute,\n+                lookup: \"path\",\n             },\n             CompletionItem {\n                 label: \"proc_macro\",\n@@ -786,39 +913,44 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"proc_macro_derive\",\n+                label: \"proc_macro_derive(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"proc_macro_derive(${0:Trait})\",\n                 kind: Attribute,\n+                lookup: \"proc_macro_derive\",\n             },\n             CompletionItem {\n-                label: \"recursion_limit\",\n+                label: \"recursion_limit = \u2026\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"recursion_limit = ${0:128}\",\n                 kind: Attribute,\n+                lookup: \"recursion_limit\",\n             },\n             CompletionItem {\n-                label: \"repr\",\n+                label: \"repr(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"repr(${0:C})\",\n                 kind: Attribute,\n+                lookup: \"repr\",\n             },\n             CompletionItem {\n-                label: \"should_panic\",\n+                label: \"should_panic(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"should_panic(expected = \\\"${0:reason}\\\")\",\n                 kind: Attribute,\n+                lookup: \"should_panic\",\n             },\n             CompletionItem {\n-                label: \"target_feature\",\n+                label: \"target_feature = \\\"\u2026\\\"\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"target_feature = \\\"${0:feature}\\\"\",\n                 kind: Attribute,\n+                lookup: \"target_feature\",\n             },\n             CompletionItem {\n                 label: \"test\",\n@@ -835,18 +967,20 @@ mod tests {\n                 kind: Attribute,\n             },\n             CompletionItem {\n-                label: \"warn\",\n+                label: \"warn(\u2026)\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"warn(${0:lint})\",\n                 kind: Attribute,\n+                lookup: \"warn\",\n             },\n             CompletionItem {\n-                label: \"windows_subsystem\",\n+                label: \"windows_subsystem = \\\"\u2026\\\"\",\n                 source_range: 20..20,\n                 delete: 20..20,\n                 insert: \"windows_subsystem = \\\"${0:subsystem}\\\"\",\n                 kind: Attribute,\n+                lookup: \"windows_subsystem\",\n             },\n         ]\n         \"###"}]}