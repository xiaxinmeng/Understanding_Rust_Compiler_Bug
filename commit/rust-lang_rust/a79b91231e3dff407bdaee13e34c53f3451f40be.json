{"sha": "a79b91231e3dff407bdaee13e34c53f3451f40be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3OWI5MTIzMWUzZGZmNDA3YmRhZWUxM2UzNGM1M2YzNDUxZjQwYmU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-28T08:38:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-28T08:38:48Z"}, "message": "Rollup merge of #55252 - SimonSapin:maybeuninit-new, r=bluss\n\nAdd MaybeUninit::new\n\nSometimes it *is* initialized!", "tree": {"sha": "3a4845568b1f71f046060c5f4bb6cbde7397bbee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a4845568b1f71f046060c5f4bb6cbde7397bbee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a79b91231e3dff407bdaee13e34c53f3451f40be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb1XWYCRBK7hj4Ov3rIwAAdHIIAFxqP5SyrbEAUNfDZxUgXBSh\n1VHJWx79CoxqBSMrAR9HA5epEg40V0BdQ4KQ2sV6pis1Jf769xT8eyCqgWQbBENT\niWiqo4yQNUFGfwzJ+DMyz/xca+fTyREZOw6486aJ9wTR08WozAgXR5oC8BmoMH53\nAF682bOHcNqjFh8ppBmjLNx7pgiwcLLx7cPX0ebdp1TX+S75zONLxrGMHmip98Kh\n/qSB/S0n+o4X3bOg5if4GTXq9Sb8LeSspe4SvXyTyR50JAAowizwOWCji9AvYsoc\nQvyxwV46/zxgTjIy9wKB9RLfBgkTLv7+Gm5YoLHaiwH+tfP8AVmkk++iE6AE7e8=\n=0FaT\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a4845568b1f71f046060c5f4bb6cbde7397bbee\nparent 409382e100ab6b2434f194b37e7b691867d671ba\nparent ac186354354e6032c34ad95ce22d526371729cb6\nauthor kennytm <kennytm@gmail.com> 1540715928 +0800\ncommitter GitHub <noreply@github.com> 1540715928 +0800\n\nRollup merge of #55252 - SimonSapin:maybeuninit-new, r=bluss\n\nAdd MaybeUninit::new\n\nSometimes it *is* initialized!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a79b91231e3dff407bdaee13e34c53f3451f40be", "html_url": "https://github.com/rust-lang/rust/commit/a79b91231e3dff407bdaee13e34c53f3451f40be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a79b91231e3dff407bdaee13e34c53f3451f40be/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409382e100ab6b2434f194b37e7b691867d671ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/409382e100ab6b2434f194b37e7b691867d671ba", "html_url": "https://github.com/rust-lang/rust/commit/409382e100ab6b2434f194b37e7b691867d671ba"}, {"sha": "ac186354354e6032c34ad95ce22d526371729cb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac186354354e6032c34ad95ce22d526371729cb6", "html_url": "https://github.com/rust-lang/rust/commit/ac186354354e6032c34ad95ce22d526371729cb6"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "06727d8292d367e422f89d87542a82413d80cc0e", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a79b91231e3dff407bdaee13e34c53f3451f40be/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79b91231e3dff407bdaee13e34c53f3451f40be/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=a79b91231e3dff407bdaee13e34c53f3451f40be", "patch": "@@ -82,6 +82,7 @@\n #![feature(const_fn)]\n #![feature(const_int_ops)]\n #![feature(const_fn_union)]\n+#![feature(const_manually_drop_new)]\n #![feature(custom_attribute)]\n #![feature(doc_cfg)]\n #![feature(doc_spotlight)]"}, {"sha": "a955e0e662a6c4e2545067357c148f48009c461f", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a79b91231e3dff407bdaee13e34c53f3451f40be/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a79b91231e3dff407bdaee13e34c53f3451f40be/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=a79b91231e3dff407bdaee13e34c53f3451f40be", "patch": "@@ -1021,6 +1021,15 @@ pub union MaybeUninit<T> {\n }\n \n impl<T> MaybeUninit<T> {\n+    /// Create a new `MaybeUninit` initialized with the given value.\n+    ///\n+    /// Note that dropping a `MaybeUninit` will never call `T`'s drop code.\n+    /// It is your responsibility to make sure `T` gets dropped if it got initialized.\n+    #[unstable(feature = \"maybe_uninit\", issue = \"53491\")]\n+    pub const fn new(val: T) -> MaybeUninit<T> {\n+        MaybeUninit { value: ManuallyDrop::new(val) }\n+    }\n+\n     /// Create a new `MaybeUninit` in an uninitialized state.\n     ///\n     /// Note that dropping a `MaybeUninit` will never call `T`'s drop code."}]}