{"sha": "16c0a84510648d25b8310a9c2c8ce27c417fb28f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YzBhODQ1MTA2NDhkMjViODMxMGE5YzJjOGNlMjdjNDE3ZmIyOGY=", "commit": {"author": {"name": "asquared31415", "email": "34665709+asquared31415@users.noreply.github.com", "date": "2021-09-06T07:35:37Z"}, "committer": {"name": "asquared31415", "email": "34665709+asquared31415@users.noreply.github.com", "date": "2021-09-14T19:59:55Z"}, "message": "Fix ICE when `start` lang item has wrong generics", "tree": {"sha": "1a6c7e9eec394c4a116a4c2f23d12787b5c01a41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a6c7e9eec394c4a116a4c2f23d12787b5c01a41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16c0a84510648d25b8310a9c2c8ce27c417fb28f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16c0a84510648d25b8310a9c2c8ce27c417fb28f", "html_url": "https://github.com/rust-lang/rust/commit/16c0a84510648d25b8310a9c2c8ce27c417fb28f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16c0a84510648d25b8310a9c2c8ce27c417fb28f/comments", "author": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "committer": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c0f80d6081092faff801542dd82f0e2420152b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c0f80d6081092faff801542dd82f0e2420152b", "html_url": "https://github.com/rust-lang/rust/commit/c3c0f80d6081092faff801542dd82f0e2420152b"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "9e323c3e93c7046be3b177feb6b20c92d2829721", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16c0a84510648d25b8310a9c2c8ce27c417fb28f/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16c0a84510648d25b8310a9c2c8ce27c417fb28f/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=16c0a84510648d25b8310a9c2c8ce27c417fb28f", "patch": "@@ -299,7 +299,7 @@ language_item_table! {\n     Oom,                     sym::oom,                 oom,                        Target::Fn,             GenericRequirement::None;\n     AllocLayout,             sym::alloc_layout,        alloc_layout,               Target::Struct,         GenericRequirement::None;\n \n-    Start,                   sym::start,               start_fn,                   Target::Fn,             GenericRequirement::None;\n+    Start,                   sym::start,               start_fn,                   Target::Fn,             GenericRequirement::Exact(1);\n \n     EhPersonality,           sym::eh_personality,      eh_personality,             Target::Fn,             GenericRequirement::None;\n     EhCatchTypeinfo,         sym::eh_catch_typeinfo,   eh_catch_typeinfo,          Target::Static,         GenericRequirement::None;"}, {"sha": "83fdc452a3b130d1c92cd12145123135bd1a1ce6", "filename": "src/test/run-make-fulldeps/target-specs/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16c0a84510648d25b8310a9c2c8ce27c417fb28f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16c0a84510648d25b8310a9c2c8ce27c417fb28f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Ffoo.rs?ref=16c0a84510648d25b8310a9c2c8ce27c417fb28f", "patch": "@@ -11,7 +11,7 @@ trait Sized {}\n auto trait Freeze {}\n \n #[lang = \"start\"]\n-fn start(_main: *const u8, _argc: isize, _argv: *const *const u8) -> isize {\n+fn start<T>(_main: *const u8, _argc: isize, _argv: *const *const u8) -> isize {\n     0\n }\n "}, {"sha": "c0b958f2bf22195d1880bd50af08b8d4e6af5bd4", "filename": "src/test/ui/lang-items/lang-item-generic-requirements.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/16c0a84510648d25b8310a9c2c8ce27c417fb28f/src%2Ftest%2Fui%2Flang-items%2Flang-item-generic-requirements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16c0a84510648d25b8310a9c2c8ce27c417fb28f/src%2Ftest%2Fui%2Flang-items%2Flang-item-generic-requirements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flang-items%2Flang-item-generic-requirements.rs?ref=16c0a84510648d25b8310a9c2c8ce27c417fb28f", "patch": "@@ -1,9 +1,8 @@\n-// Checks whether declaring a lang item with the wrong number\n-// of generic arguments crashes the compiler (issue #83893, #87573, and part of #9307).\n+// Checks that declaring a lang item with the wrong number\n+// of generic arguments errors rather than crashing (issue #83893, #87573, part of #9307, #79559).\n \n #![feature(lang_items, no_core)]\n #![no_core]\n-#![crate_type = \"lib\"]\n \n #[lang = \"sized\"]\n trait MySized {}\n@@ -26,6 +25,14 @@ struct MyPhantomData<T, U>;\n //~^ ERROR parameter `T` is never used\n //~| ERROR parameter `U` is never used\n \n+// When the `start` lang item is missing generics very odd things can happen, especially when\n+// it comes to cross-crate monomorphization\n+#[lang = \"start\"]\n+//~^ ERROR `start` language item must be applied to a function with 1 generic argument [E0718]\n+fn start(_: *const u8, _: isize, _: *const *const u8) -> isize {\n+    0\n+}\n+\n fn ice() {\n     // Use add\n     let r = 5;\n@@ -42,3 +49,6 @@ fn ice() {\n     // Use phantomdata\n     let _ = MyPhantomData::<(), i32>;\n }\n+\n+// use `start`\n+fn main() {}"}, {"sha": "df5a77850f14d866d6cccd22d1c8b8d9e87cc3dd", "filename": "src/test/ui/lang-items/lang-item-generic-requirements.stderr", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/16c0a84510648d25b8310a9c2c8ce27c417fb28f/src%2Ftest%2Fui%2Flang-items%2Flang-item-generic-requirements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16c0a84510648d25b8310a9c2c8ce27c417fb28f/src%2Ftest%2Fui%2Flang-items%2Flang-item-generic-requirements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flang-items%2Flang-item-generic-requirements.stderr?ref=16c0a84510648d25b8310a9c2c8ce27c417fb28f", "patch": "@@ -1,13 +1,13 @@\n error[E0718]: `add` language item must be applied to a trait with 1 generic argument\n-  --> $DIR/lang-item-generic-requirements.rs:11:1\n+  --> $DIR/lang-item-generic-requirements.rs:10:1\n    |\n LL | #[lang = \"add\"]\n    | ^^^^^^^^^^^^^^^\n LL | trait MyAdd<'a, T> {}\n    |            ------- this trait has 2 generic arguments\n \n error[E0718]: `drop_in_place` language item must be applied to a function with at least 1 generic argument\n-  --> $DIR/lang-item-generic-requirements.rs:15:1\n+  --> $DIR/lang-item-generic-requirements.rs:14:1\n    |\n LL | #[lang = \"drop_in_place\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -16,24 +16,33 @@ LL | fn my_ptr_drop() {}\n    |               - this function has 0 generic arguments\n \n error[E0718]: `index` language item must be applied to a trait with 1 generic argument\n-  --> $DIR/lang-item-generic-requirements.rs:19:1\n+  --> $DIR/lang-item-generic-requirements.rs:18:1\n    |\n LL | #[lang = \"index\"]\n    | ^^^^^^^^^^^^^^^^^\n LL | trait MyIndex<'a, T> {}\n    |              ------- this trait has 2 generic arguments\n \n error[E0718]: `phantom_data` language item must be applied to a struct with 1 generic argument\n-  --> $DIR/lang-item-generic-requirements.rs:23:1\n+  --> $DIR/lang-item-generic-requirements.rs:22:1\n    |\n LL | #[lang = \"phantom_data\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n LL |\n LL | struct MyPhantomData<T, U>;\n    |                     ------ this struct has 2 generic arguments\n \n+error[E0718]: `start` language item must be applied to a function with 1 generic argument\n+  --> $DIR/lang-item-generic-requirements.rs:30:1\n+   |\n+LL | #[lang = \"start\"]\n+   | ^^^^^^^^^^^^^^^^^\n+LL |\n+LL | fn start(_: *const u8, _: isize, _: *const *const u8) -> isize {\n+   |         - this function has 0 generic arguments\n+\n error[E0392]: parameter `T` is never used\n-  --> $DIR/lang-item-generic-requirements.rs:25:22\n+  --> $DIR/lang-item-generic-requirements.rs:24:22\n    |\n LL | struct MyPhantomData<T, U>;\n    |                      ^ unused parameter\n@@ -42,15 +51,15 @@ LL | struct MyPhantomData<T, U>;\n    = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error[E0392]: parameter `U` is never used\n-  --> $DIR/lang-item-generic-requirements.rs:25:25\n+  --> $DIR/lang-item-generic-requirements.rs:24:25\n    |\n LL | struct MyPhantomData<T, U>;\n    |                         ^ unused parameter\n    |\n    = help: consider removing `U` or referring to it in a field\n    = help: if you intended `U` to be a const parameter, use `const U: usize` instead\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n \n Some errors have detailed explanations: E0392, E0718.\n For more information about an error, try `rustc --explain E0392`."}]}