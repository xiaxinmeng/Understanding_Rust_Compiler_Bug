{"sha": "65fb7be72820f9be7ee7bb8e626e1d0fbb03968d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZmI3YmU3MjgyMGY5YmU3ZWU3YmI4ZTYyNmUxZDBmYmIwMzk2OGQ=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-14T15:13:13Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2016-07-14T15:13:13Z"}, "message": "mk: Move some definitions after their dependencies, to be visually less confusing", "tree": {"sha": "12694026bc016a1fc21afa4573dc3d6a0400099e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12694026bc016a1fc21afa4573dc3d6a0400099e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d", "html_url": "https://github.com/rust-lang/rust/commit/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2539c15b49530e882a3e8803b3f53a7914d367be", "url": "https://api.github.com/repos/rust-lang/rust/commits/2539c15b49530e882a3e8803b3f53a7914d367be", "html_url": "https://github.com/rust-lang/rust/commit/2539c15b49530e882a3e8803b3f53a7914d367be"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "e446b64a6f5af9a1d3b04d34ff47feb309472fc7", "filename": "mk/main.mk", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/65fb7be72820f9be7ee7bb8e626e1d0fbb03968d/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=65fb7be72820f9be7ee7bb8e626e1d0fbb03968d", "patch": "@@ -20,29 +20,6 @@ CFG_RELEASE_NUM=1.12.0\n # versions (section 9)\n CFG_PRERELEASE_VERSION=.1\n \n-# Append a version-dependent hash to each library, so we can install different\n-# versions in the same place\n-CFG_FILENAME_EXTRA=$(shell printf '%s' $(CFG_RELEASE)$(CFG_EXTRA_FILENAME) | $(CFG_HASH_COMMAND))\n-\n-# A magic value that allows the compiler to use unstable features during the\n-# bootstrap even when doing so would normally be an error because of feature\n-# staging or because the build turns on warnings-as-errors and unstable features\n-# default to warnings. The build has to match this key in an env var.\n-#\n-# This value is keyed off the release to ensure that all compilers for one\n-# particular release have the same bootstrap key. Note that this is\n-# intentionally not \"secure\" by any definition, this is largely just a deterrent\n-# from users enabling unstable features on the stable compiler.\n-CFG_BOOTSTRAP_KEY=$(CFG_FILENAME_EXTRA)\n-\n-# The stage0 compiler needs to use the previous key recorded in src/stage0.txt,\n-# except for local-rebuild when it just uses the same current key.\n-ifdef CFG_ENABLE_LOCAL_REBUILD\n-CFG_BOOTSTRAP_KEY_STAGE0=$(CFG_BOOTSTRAP_KEY)\n-else\n-CFG_BOOTSTRAP_KEY_STAGE0=$(shell grep 'rustc_key' $(S)src/stage0.txt | sed 's/rustc_key: '//)\n-endif\n-\n ifeq ($(CFG_RELEASE_CHANNEL),stable)\n # This is the normal semver version string, e.g. \"0.12.0\", \"0.12.0-nightly\"\n CFG_RELEASE=$(CFG_RELEASE_NUM)\n@@ -72,6 +49,29 @@ CFG_RELEASE=$(CFG_RELEASE_NUM)-dev\n CFG_PACKAGE_VERS=$(CFG_RELEASE_NUM)-dev\n endif\n \n+# Append a version-dependent hash to each library, so we can install different\n+# versions in the same place\n+CFG_FILENAME_EXTRA=$(shell printf '%s' $(CFG_RELEASE)$(CFG_EXTRA_FILENAME) | $(CFG_HASH_COMMAND))\n+\n+# A magic value that allows the compiler to use unstable features during the\n+# bootstrap even when doing so would normally be an error because of feature\n+# staging or because the build turns on warnings-as-errors and unstable features\n+# default to warnings. The build has to match this key in an env var.\n+#\n+# This value is keyed off the release to ensure that all compilers for one\n+# particular release have the same bootstrap key. Note that this is\n+# intentionally not \"secure\" by any definition, this is largely just a deterrent\n+# from users enabling unstable features on the stable compiler.\n+CFG_BOOTSTRAP_KEY=$(CFG_FILENAME_EXTRA)\n+\n+# The stage0 compiler needs to use the previous key recorded in src/stage0.txt,\n+# except for local-rebuild when it just uses the same current key.\n+ifdef CFG_ENABLE_LOCAL_REBUILD\n+CFG_BOOTSTRAP_KEY_STAGE0=$(CFG_BOOTSTRAP_KEY)\n+else\n+CFG_BOOTSTRAP_KEY_STAGE0=$(shell grep 'rustc_key' $(S)src/stage0.txt | sed 's/rustc_key: '//)\n+endif\n+\n # The name of the package to use for creating tarballs, installers etc.\n CFG_PACKAGE_NAME=rustc-$(CFG_PACKAGE_VERS)\n "}]}