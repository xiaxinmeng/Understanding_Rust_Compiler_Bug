{"sha": "2df552b406d8794dc0617672b34e1542498fd0ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZjU1MmI0MDZkODc5NGRjMDYxNzY3MmIzNGUxNTQyNDk4ZmQwY2U=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-08-22T10:54:15Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-09-05T04:51:29Z"}, "message": "Fix big endian read/write\n\nCo-authored-by: matthewjasper <mjjasper1@gmail.com>", "tree": {"sha": "05a8e9aa14713acaa9b2b58b167319df811e9568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05a8e9aa14713acaa9b2b58b167319df811e9568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2df552b406d8794dc0617672b34e1542498fd0ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2df552b406d8794dc0617672b34e1542498fd0ce", "html_url": "https://github.com/rust-lang/rust/commit/2df552b406d8794dc0617672b34e1542498fd0ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2df552b406d8794dc0617672b34e1542498fd0ce/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc00efff9f44ddda1ce318e28f69e716f58d39dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc00efff9f44ddda1ce318e28f69e716f58d39dd", "html_url": "https://github.com/rust-lang/rust/commit/dc00efff9f44ddda1ce318e28f69e716f58d39dd"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "cbc362d934ff8d5c22ff7673fb211e0b4ff5417e", "filename": "compiler/rustc_middle/src/mir/interpret/mod.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2df552b406d8794dc0617672b34e1542498fd0ce/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df552b406d8794dc0617672b34e1542498fd0ce/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs?ref=2df552b406d8794dc0617672b34e1542498fd0ce", "patch": "@@ -565,7 +565,7 @@ pub fn write_target_uint(\n     // So we do not write all bytes of the u128, just the \"payload\".\n     match endianness {\n         Endian::Little => target.write(&data.to_le_bytes())?,\n-        Endian::Big => target.write(&data.to_be_bytes())?,\n+        Endian::Big => target.write(&data.to_be_bytes()[16 - target.len()..])?,\n     };\n     debug_assert!(target.len() == 0); // We should have filled the target buffer.\n     Ok(())\n@@ -576,12 +576,18 @@ pub fn read_target_uint(endianness: Endian, mut source: &[u8]) -> Result<u128, i\n     // This u128 holds an \"any-size uint\" (since smaller uints can fits in it)\n     let mut buf = [0u8; std::mem::size_of::<u128>()];\n     // So we do not read exactly 16 bytes into the u128, just the \"payload\".\n-    source.read(&mut buf)?;\n+    let uint = match endianness {\n+        Endian::Little => {\n+            source.read(&mut buf)?;\n+            Ok(u128::from_le_bytes(buf))\n+        }\n+        Endian::Big => {\n+            source.read(&mut buf[16 - source.len()..])?;\n+            Ok(u128::from_be_bytes(buf))\n+        }\n+    };\n     debug_assert!(source.len() == 0); // We should have consumed the source buffer.\n-    match endianness {\n-        Endian::Little => Ok(u128::from_le_bytes(buf)),\n-        Endian::Big => Ok(u128::from_be_bytes(buf)),\n-    }\n+    uint\n }\n \n ////////////////////////////////////////////////////////////////////////////////"}]}