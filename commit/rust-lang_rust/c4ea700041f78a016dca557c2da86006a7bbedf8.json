{"sha": "c4ea700041f78a016dca557c2da86006a7bbedf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ZWE3MDAwNDFmNzhhMDE2ZGNhNTU3YzJkYTg2MDA2YTdiYmVkZjg=", "commit": {"author": {"name": "Martin Hoffmann", "email": "hn@nvnc.de", "date": "2017-12-05T17:28:29Z"}, "committer": {"name": "Martin Hoffmann", "email": "hn@nvnc.de", "date": "2017-12-05T17:28:29Z"}, "message": "Remove trailing white space.", "tree": {"sha": "f033cf2341b24da5aed90fb8e438bb7b857e9e56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f033cf2341b24da5aed90fb8e438bb7b857e9e56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4ea700041f78a016dca557c2da86006a7bbedf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4ea700041f78a016dca557c2da86006a7bbedf8", "html_url": "https://github.com/rust-lang/rust/commit/c4ea700041f78a016dca557c2da86006a7bbedf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4ea700041f78a016dca557c2da86006a7bbedf8/comments", "author": {"login": "partim", "id": 1318494, "node_id": "MDQ6VXNlcjEzMTg0OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1318494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/partim", "html_url": "https://github.com/partim", "followers_url": "https://api.github.com/users/partim/followers", "following_url": "https://api.github.com/users/partim/following{/other_user}", "gists_url": "https://api.github.com/users/partim/gists{/gist_id}", "starred_url": "https://api.github.com/users/partim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/partim/subscriptions", "organizations_url": "https://api.github.com/users/partim/orgs", "repos_url": "https://api.github.com/users/partim/repos", "events_url": "https://api.github.com/users/partim/events{/privacy}", "received_events_url": "https://api.github.com/users/partim/received_events", "type": "User", "site_admin": false}, "committer": {"login": "partim", "id": 1318494, "node_id": "MDQ6VXNlcjEzMTg0OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1318494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/partim", "html_url": "https://github.com/partim", "followers_url": "https://api.github.com/users/partim/followers", "following_url": "https://api.github.com/users/partim/following{/other_user}", "gists_url": "https://api.github.com/users/partim/gists{/gist_id}", "starred_url": "https://api.github.com/users/partim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/partim/subscriptions", "organizations_url": "https://api.github.com/users/partim/orgs", "repos_url": "https://api.github.com/users/partim/repos", "events_url": "https://api.github.com/users/partim/events{/privacy}", "received_events_url": "https://api.github.com/users/partim/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cba5f6bd01bc3ba692c355ca82212db069cd800c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cba5f6bd01bc3ba692c355ca82212db069cd800c", "html_url": "https://github.com/rust-lang/rust/commit/cba5f6bd01bc3ba692c355ca82212db069cd800c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4d4a07f59d1470885228c36ab0e6c614c0089e11", "filename": "src/libcore/borrow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c4ea700041f78a016dca557c2da86006a7bbedf8/src%2Flibcore%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4ea700041f78a016dca557c2da86006a7bbedf8/src%2Flibcore%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fborrow.rs?ref=c4ea700041f78a016dca557c2da86006a7bbedf8", "patch": "@@ -100,12 +100,12 @@\n ///\n /// Instead, `get` relies on `Q`\u2019s implementation of `Hash` and uses `Borrow`\n /// to indicate that `K`\u2019s implementation of `Hash` must produce the same\n-/// result as `Q`\u2019s by demanding that `K: Borrow<Q>`. \n+/// result as `Q`\u2019s by demanding that `K: Borrow<Q>`.\n ///\n /// As a consequence, the hash map breaks if a `K` wrapping a `Q` value\n /// produces a different hash than `Q`. For instance, image you have a\n /// type that wraps a string but compares ASCII letters case-insensitive:\n-/// \n+///\n /// ```\n /// use std::ascii::AsciiExt;\n ///\n@@ -148,7 +148,7 @@\n /// [`HashMap`]: ../collections/struct.HashMap.html\n /// [`String`]: ../string/struct.String.html\n /// [`str`]: ../primitive.str.html\n-/// \n+///\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Borrow<Borrowed: ?Sized> {\n     /// Immutably borrows from an owned value."}]}