{"sha": "a410ebc5ea44c0cea23a8e6d05aab2fe66b17203", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MTBlYmM1ZWE0NGMwY2VhMjNhOGU2ZDA1YWFiMmZlNjZiMTcyMDM=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-20T21:33:22Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-31T06:24:57Z"}, "message": "add note to array_chunks", "tree": {"sha": "a424fa9b9a4999f0a914c02bb8c8b085bb5d8f2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a424fa9b9a4999f0a914c02bb8c8b085bb5d8f2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a410ebc5ea44c0cea23a8e6d05aab2fe66b17203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a410ebc5ea44c0cea23a8e6d05aab2fe66b17203", "html_url": "https://github.com/rust-lang/rust/commit/a410ebc5ea44c0cea23a8e6d05aab2fe66b17203", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a410ebc5ea44c0cea23a8e6d05aab2fe66b17203/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95fa63e63f21ba3270870920d67836016b4c9711", "url": "https://api.github.com/repos/rust-lang/rust/commits/95fa63e63f21ba3270870920d67836016b4c9711", "html_url": "https://github.com/rust-lang/rust/commit/95fa63e63f21ba3270870920d67836016b4c9711"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "fdf3c7b3f637e87cb8f41a54a763d8cb35e8d09c", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a410ebc5ea44c0cea23a8e6d05aab2fe66b17203/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a410ebc5ea44c0cea23a8e6d05aab2fe66b17203/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=a410ebc5ea44c0cea23a8e6d05aab2fe66b17203", "patch": "@@ -848,6 +848,8 @@ impl<T> [T] {\n     /// slice, then the last up to `N-1` elements will be omitted and can be retrieved\n     /// from the `remainder` function of the iterator.\n     ///\n+    /// This method is the const generic equivalent of [`chunks_exact`].\n+    ///\n     /// # Panics\n     ///\n     /// Panics if `N` is 0.\n@@ -864,7 +866,7 @@ impl<T> [T] {\n     /// assert_eq!(iter.remainder(), &['m']);\n     /// ```\n     ///\n-    /// [`chunks`]: #method.chunks\n+    /// [`chunks_exact`]: #method.chunks_exact\n     #[unstable(feature = \"array_chunks\", issue = \"none\")]\n     #[inline]\n     pub fn array_chunks<const N: usize>(&self) -> ArrayChunks<'_, T, N> {"}]}