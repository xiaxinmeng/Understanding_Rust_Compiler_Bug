{"sha": "a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZmU1YWZjMmU3YmU1ZTM2YjY2ZWI4OGNmM2UxMThhZjEzZDk1ODQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-29T15:53:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-29T15:53:43Z"}, "message": "Auto merge of #3595 - xfix:mark-writes-to-constant-as-sideeffectless, r=oli-obk\n\nMark writes to constants as side-effect-less\n\nThis is my first real contribution, so I probably did it wrong.", "tree": {"sha": "445520fc71bdcbfd99ee001bd53490b0c7e2e440", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/445520fc71bdcbfd99ee001bd53490b0c7e2e440"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "html_url": "https://github.com/rust-lang/rust/commit/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c93702495e148f61c1a6ce19fab76eca00f41f76", "url": "https://api.github.com/repos/rust-lang/rust/commits/c93702495e148f61c1a6ce19fab76eca00f41f76", "html_url": "https://github.com/rust-lang/rust/commit/c93702495e148f61c1a6ce19fab76eca00f41f76"}, {"sha": "9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "html_url": "https://github.com/rust-lang/rust/commit/9fe8a3e52ef42ecf488f86c5fabc6af54708d216"}], "stats": {"total": 118, "additions": 92, "deletions": 26}, "files": [{"sha": "560b1f61850da2118cbc93754cc92034a4493c1b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "patch": "@@ -20,6 +20,7 @@\n #![warn(rust_2018_idioms, trivial_casts, trivial_numeric_casts)]\n #![feature(crate_visibility_modifier)]\n #![feature(try_from)]\n+#![feature(if_while_or_patterns)]\n \n // FIXME: switch to something more ergonomic here, once available.\n // (currently there is no way to opt into sysroot crates w/o `extern crate`)"}, {"sha": "cab60509a785b917b43f7907db80cc93596acaf0", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "patch": "@@ -98,6 +98,20 @@ fn has_no_effect(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n                     false\n                 }\n         },\n+        ExprKind::Assign(ref left, ref right) => {\n+            if has_no_effect(cx, left) {\n+                let mut left = left;\n+                while let ExprKind::Field(f, _) | ExprKind::Index(f, _) = &left.node {\n+                    left = f;\n+                }\n+                if let ExprKind::Path(qpath) = &left.node {\n+                    if let Def::Const(..) = cx.tables.qpath_def(qpath, left.hir_id) {\n+                        return has_no_effect(cx, right);\n+                    }\n+                }\n+            }\n+            false\n+        },\n         _ => false,\n     }\n }"}, {"sha": "8431f00e445c5eb37d3c1b17b57ffd4599c6c8c5", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "patch": "@@ -67,6 +67,21 @@ unsafe fn unsafe_fn() -> i32 {\n     0\n }\n \n+struct A(i32);\n+struct B {\n+    field: i32,\n+}\n+struct C {\n+    b: B,\n+}\n+struct D {\n+    arr: [i32; 1],\n+}\n+const A_CONST: A = A(1);\n+const B: B = B { field: 1 };\n+const C: C = C { b: B { field: 1 } };\n+const D: D = D { arr: [1] };\n+\n fn main() {\n     let s = get_struct();\n     let s2 = get_struct();\n@@ -99,6 +114,10 @@ fn main() {\n     || x += 5;\n     let s: String = \"foo\".into();\n     FooString { s: s };\n+    A_CONST.0 = 2;\n+    B.field = 2;\n+    C.b.field = 2;\n+    D.arr[0] = 2;\n \n     // Do not warn\n     get_number();\n@@ -108,4 +127,12 @@ fn main() {\n     DropTuple(0);\n     DropEnum::Tuple(0);\n     DropEnum::Struct { field: 0 };\n+    let mut a_mut = A(1);\n+    a_mut.0 = 2;\n+    let mut b_mut = B { field: 1 };\n+    b_mut.field = 2;\n+    let mut c_mut = C { b: B { field: 1 } };\n+    c_mut.b.field = 2;\n+    let mut d_mut = D { arr: [1] };\n+    d_mut.arr[0] = 2;\n }"}, {"sha": "b6aab53e50f810d9912a64abd9c616401b8ed443", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 50, "deletions": 26, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7fe5afc2e7be5e36b66eb88cf3e118af13d9584/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=a7fe5afc2e7be5e36b66eb88cf3e118af13d9584", "patch": "@@ -1,154 +1,178 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:74:5\n+  --> $DIR/no_effect.rs:89:5\n    |\n LL |     0;\n    |     ^^\n    |\n    = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:75:5\n+  --> $DIR/no_effect.rs:90:5\n    |\n LL |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:76:5\n+  --> $DIR/no_effect.rs:91:5\n    |\n LL |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:77:5\n+  --> $DIR/no_effect.rs:92:5\n    |\n LL |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:78:5\n+  --> $DIR/no_effect.rs:93:5\n    |\n LL |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:79:5\n+  --> $DIR/no_effect.rs:94:5\n    |\n LL |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:80:5\n+  --> $DIR/no_effect.rs:95:5\n    |\n LL |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:81:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n LL |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:82:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n LL |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:83:5\n+  --> $DIR/no_effect.rs:98:5\n    |\n LL |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:84:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n LL |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:85:5\n+  --> $DIR/no_effect.rs:100:5\n    |\n LL |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:86:5\n+  --> $DIR/no_effect.rs:101:5\n    |\n LL |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:87:5\n+  --> $DIR/no_effect.rs:102:5\n    |\n LL |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:88:5\n+  --> $DIR/no_effect.rs:103:5\n    |\n LL |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:89:5\n+  --> $DIR/no_effect.rs:104:5\n    |\n LL |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:90:5\n+  --> $DIR/no_effect.rs:105:5\n    |\n LL |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:91:5\n+  --> $DIR/no_effect.rs:106:5\n    |\n LL |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:93:5\n+  --> $DIR/no_effect.rs:108:5\n    |\n LL |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:94:5\n+  --> $DIR/no_effect.rs:109:5\n    |\n LL |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:95:5\n+  --> $DIR/no_effect.rs:110:5\n    |\n LL |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:96:5\n+  --> $DIR/no_effect.rs:111:5\n    |\n LL |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:97:5\n+  --> $DIR/no_effect.rs:112:5\n    |\n LL |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:99:5\n+  --> $DIR/no_effect.rs:114:5\n    |\n LL |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:101:5\n+  --> $DIR/no_effect.rs:116:5\n    |\n LL |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 25 previous errors\n+error: statement with no effect\n+  --> $DIR/no_effect.rs:117:5\n+   |\n+LL |     A_CONST.0 = 2;\n+   |     ^^^^^^^^^^^^^^\n+\n+error: statement with no effect\n+  --> $DIR/no_effect.rs:118:5\n+   |\n+LL |     B.field = 2;\n+   |     ^^^^^^^^^^^^\n+\n+error: statement with no effect\n+  --> $DIR/no_effect.rs:119:5\n+   |\n+LL |     C.b.field = 2;\n+   |     ^^^^^^^^^^^^^^\n+\n+error: statement with no effect\n+  --> $DIR/no_effect.rs:120:5\n+   |\n+LL |     D.arr[0] = 2;\n+   |     ^^^^^^^^^^^^^\n+\n+error: aborting due to 29 previous errors\n "}]}