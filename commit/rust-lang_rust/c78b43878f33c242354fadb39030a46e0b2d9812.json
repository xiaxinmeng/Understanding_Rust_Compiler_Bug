{"sha": "c78b43878f33c242354fadb39030a46e0b2d9812", "node_id": "C_kwDOAAsO6NoAKGM3OGI0Mzg3OGYzM2MyNDIzNTRmYWRiMzkwMzBhNDZlMGIyZDk4MTI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-06T14:14:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T11:43:56Z"}, "message": "tweak names and output and bless", "tree": {"sha": "863e81c08597acebae72cfa4f4d8f63785608f30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/863e81c08597acebae72cfa4f4d8f63785608f30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c78b43878f33c242354fadb39030a46e0b2d9812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c78b43878f33c242354fadb39030a46e0b2d9812", "html_url": "https://github.com/rust-lang/rust/commit/c78b43878f33c242354fadb39030a46e0b2d9812", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c78b43878f33c242354fadb39030a46e0b2d9812/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f44d5feb5b7b98bed2806238cc9a6b3ce40aa831", "url": "https://api.github.com/repos/rust-lang/rust/commits/f44d5feb5b7b98bed2806238cc9a6b3ce40aa831", "html_url": "https://github.com/rust-lang/rust/commit/f44d5feb5b7b98bed2806238cc9a6b3ce40aa831"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "48972321a9f40e2e09c5edb8265c7d1605d241fa", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c78b43878f33c242354fadb39030a46e0b2d9812/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78b43878f33c242354fadb39030a46e0b2d9812/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=c78b43878f33c242354fadb39030a46e0b2d9812", "patch": "@@ -167,7 +167,7 @@ pub(crate) fn codegen_const_value<'tcx>(\n     }\n \n     match const_val {\n-        ConstValue::Zst => unreachable!(), // we already handles ZST above\n+        ConstValue::ZeroSized => unreachable!(), // we already handles ZST above\n         ConstValue::Scalar(x) => match x {\n             Scalar::Int(int) => {\n                 if fx.clif_type(layout.ty).is_some() {"}]}