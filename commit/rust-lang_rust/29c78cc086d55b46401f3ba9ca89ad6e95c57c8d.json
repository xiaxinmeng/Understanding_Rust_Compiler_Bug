{"sha": "29c78cc086d55b46401f3ba9ca89ad6e95c57c8d", "node_id": "C_kwDOAAsO6NoAKDI5Yzc4Y2MwODZkNTViNDY0MDFmM2JhOWNhODlhZDZlOTVjNTdjOGQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-19T03:51:12Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-19T07:02:48Z"}, "message": "Add {open,close}_delim arguments to `TokenCursorFrame::new()`.\n\nThis will facilitate the change in the next commit.\n\n`boolean` arguments aren't great, but the function is only used in three\nplaces within this one file.", "tree": {"sha": "9ded09e1327a2e125e80c086f432325bec9cddcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ded09e1327a2e125e80c086f432325bec9cddcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29c78cc086d55b46401f3ba9ca89ad6e95c57c8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29c78cc086d55b46401f3ba9ca89ad6e95c57c8d", "html_url": "https://github.com/rust-lang/rust/commit/29c78cc086d55b46401f3ba9ca89ad6e95c57c8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29c78cc086d55b46401f3ba9ca89ad6e95c57c8d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02317542ebceef780ddac660d751cbe268f56105", "url": "https://api.github.com/repos/rust-lang/rust/commits/02317542ebceef780ddac660d751cbe268f56105", "html_url": "https://github.com/rust-lang/rust/commit/02317542ebceef780ddac660d751cbe268f56105"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "2e2fc6694a5559012acd17fff8d61be82cc87a77", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/29c78cc086d55b46401f3ba9ca89ad6e95c57c8d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c78cc086d55b46401f3ba9ca89ad6e95c57c8d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=29c78cc086d55b46401f3ba9ca89ad6e95c57c8d", "patch": "@@ -242,14 +242,14 @@ struct TokenCursorFrame {\n }\n \n impl TokenCursorFrame {\n-    fn new(span: DelimSpan, delim: DelimToken, tts: TokenStream) -> Self {\n-        TokenCursorFrame {\n-            delim,\n-            span,\n-            open_delim: false,\n-            tree_cursor: tts.into_trees(),\n-            close_delim: false,\n-        }\n+    fn new(\n+        span: DelimSpan,\n+        delim: DelimToken,\n+        open_delim: bool,\n+        tts: TokenStream,\n+        close_delim: bool,\n+    ) -> Self {\n+        TokenCursorFrame { delim, span, open_delim, tree_cursor: tts.into_trees(), close_delim }\n     }\n }\n \n@@ -274,7 +274,7 @@ impl TokenCursor {\n                         break (token, spacing);\n                     }\n                     TokenTree::Delimited(sp, delim, tts) => {\n-                        let frame = TokenCursorFrame::new(sp, delim, tts);\n+                        let frame = TokenCursorFrame::new(sp, delim, false, tts, false);\n                         self.stack.push(mem::replace(&mut self.frame, frame));\n                     }\n                 }\n@@ -328,6 +328,7 @@ impl TokenCursor {\n                     TokenCursorFrame::new(\n                         delim_span,\n                         token::NoDelim,\n+                        false,\n                         if attr_style == AttrStyle::Inner {\n                             [\n                                 TokenTree::token(token::Pound, span),\n@@ -343,6 +344,7 @@ impl TokenCursor {\n                                 .cloned()\n                                 .collect::<TokenStream>()\n                         },\n+                        false,\n                     ),\n                 ));\n \n@@ -434,9 +436,8 @@ impl<'a> Parser<'a> {\n         desugar_doc_comments: bool,\n         subparser_name: Option<&'static str>,\n     ) -> Self {\n-        let mut start_frame = TokenCursorFrame::new(DelimSpan::dummy(), token::NoDelim, tokens);\n-        start_frame.open_delim = true;\n-        start_frame.close_delim = true;\n+        let start_frame =\n+            TokenCursorFrame::new(DelimSpan::dummy(), token::NoDelim, true, tokens, true);\n \n         let mut parser = Parser {\n             sess,"}]}