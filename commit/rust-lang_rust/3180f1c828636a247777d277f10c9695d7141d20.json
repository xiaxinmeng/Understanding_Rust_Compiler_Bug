{"sha": "3180f1c828636a247777d277f10c9695d7141d20", "node_id": "C_kwDOAAsO6NoAKDMxODBmMWM4Mjg2MzZhMjQ3Nzc3ZDI3N2YxMGM5Njk1ZDcxNDFkMjA", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-02-13T17:20:38Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-02-14T03:46:43Z"}, "message": "Fix #107998, avoid ICE when the generic_span is empty", "tree": {"sha": "45fdc0b6995a0853ae066aa46695be2d564b036f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45fdc0b6995a0853ae066aa46695be2d564b036f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3180f1c828636a247777d277f10c9695d7141d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3180f1c828636a247777d277f10c9695d7141d20", "html_url": "https://github.com/rust-lang/rust/commit/3180f1c828636a247777d277f10c9695d7141d20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3180f1c828636a247777d277f10c9695d7141d20/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5348a89a77a49f6f57c13c0edf7f493fd410159a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5348a89a77a49f6f57c13c0edf7f493fd410159a", "html_url": "https://github.com/rust-lang/rust/commit/5348a89a77a49f6f57c13c0edf7f493fd410159a"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "972240f42cf4649b667ecbf286a16ecc8a12654f", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3180f1c828636a247777d277f10c9695d7141d20/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3180f1c828636a247777d277f10c9695d7141d20/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=3180f1c828636a247777d277f10c9695d7141d20", "patch": "@@ -837,9 +837,17 @@ pub trait LintContext: Sized {\n                             (use_span, \"'_\".to_owned())\n                         };\n                         debug!(?deletion_span, ?use_span);\n+\n+                        // issue 107998 for the case such as a wrong function pointer type\n+                        // `deletion_span` is empty and there is no need to report lifetime uses here\n+                        let suggestions = if deletion_span.is_empty() {\n+                            vec![(use_span, replace_lt)]\n+                        } else {\n+                            vec![(deletion_span, String::new()), (use_span, replace_lt)]\n+                        };\n                         db.multipart_suggestion(\n                             msg,\n-                            vec![(deletion_span, String::new()), (use_span, replace_lt)],\n+                            suggestions,\n                             Applicability::MachineApplicable,\n                         );\n                     }"}, {"sha": "f32688d205813b454f68648b0d5ef87694c8f62a", "filename": "tests/ui/single-use-lifetime/issue-107998.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3180f1c828636a247777d277f10c9695d7141d20/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3180f1c828636a247777d277f10c9695d7141d20/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.rs?ref=3180f1c828636a247777d277f10c9695d7141d20", "patch": "@@ -0,0 +1,9 @@\n+#![deny(single_use_lifetimes)]\n+\n+fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+    //~^ ERROR function pointer types may not have generic parameters\n+    //~| ERROR lifetime parameter `'a` only used once\n+    f(&3)\n+}\n+\n+fn main() {}"}, {"sha": "e870351de9eaec72dc32327f5e33968a7d58c355", "filename": "tests/ui/single-use-lifetime/issue-107998.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3180f1c828636a247777d277f10c9695d7141d20/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3180f1c828636a247777d277f10c9695d7141d20/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.stderr?ref=3180f1c828636a247777d277f10c9695d7141d20", "patch": "@@ -0,0 +1,30 @@\n+error: function pointer types may not have generic parameters\n+  --> $DIR/issue-107998.rs:3:18\n+   |\n+LL | fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+   |                  ^^^^\n+   |\n+help: consider moving the lifetime parameter to a `for` parameter list\n+   |\n+LL - fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+LL + fn with<R>(f: &for<'a> fn(x: &'a i32) -> R) -> R {\n+   |\n+\n+error: lifetime parameter `'a` only used once\n+  --> $DIR/issue-107998.rs:3:19\n+   |\n+LL | fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+   |                   ^^      ---\n+   |                   |       |\n+   |                   |       ...is used only here\n+   |                   |       help: elide the single-use lifetime\n+   |                   this lifetime...\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-107998.rs:1:9\n+   |\n+LL | #![deny(single_use_lifetimes)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}