{"sha": "a9ef7983a629fea829955608d67f474f856da53c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZWY3OTgzYTYyOWZlYTgyOTk1NTYwOGQ2N2Y0NzRmODU2ZGE1M2M=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2021-01-11T12:48:24Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2021-01-11T12:48:24Z"}, "message": "clean up control flow", "tree": {"sha": "491677252fee1e7b57aeea56a721ae4f7f0c3d88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/491677252fee1e7b57aeea56a721ae4f7f0c3d88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9ef7983a629fea829955608d67f474f856da53c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9ef7983a629fea829955608d67f474f856da53c", "html_url": "https://github.com/rust-lang/rust/commit/a9ef7983a629fea829955608d67f474f856da53c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9ef7983a629fea829955608d67f474f856da53c/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1", "html_url": "https://github.com/rust-lang/rust/commit/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "a054c434d0739e36748167691bbc55090e0fcf69", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a9ef7983a629fea829955608d67f474f856da53c/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9ef7983a629fea829955608d67f474f856da53c/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=a9ef7983a629fea829955608d67f474f856da53c", "patch": "@@ -366,7 +366,6 @@ where\n {\n     let start_len = buf.len();\n     let mut g = Guard { len: buf.len(), buf };\n-    let ret;\n     loop {\n         if g.len == g.buf.len() {\n             unsafe {\n@@ -386,10 +385,7 @@ where\n         }\n \n         match r.read(&mut g.buf[g.len..]) {\n-            Ok(0) => {\n-                ret = Ok(g.len - start_len);\n-                break;\n-            }\n+            Ok(0) => return Ok(g.len - start_len),\n             Ok(n) => {\n                 // We can't let g.len overflow which would result in the vec shrinking when the function returns. In\n                 // particular, that could break read_to_string if the shortened buffer doesn't end on a UTF-8 boundary.\n@@ -399,14 +395,9 @@ where\n                 g.len += n;\n             }\n             Err(ref e) if e.kind() == ErrorKind::Interrupted => {}\n-            Err(e) => {\n-                ret = Err(e);\n-                break;\n-            }\n+            Err(e) => return Err(e),\n         }\n     }\n-\n-    ret\n }\n \n pub(crate) fn default_read_vectored<F>(read: F, bufs: &mut [IoSliceMut<'_>]) -> Result<usize>"}]}