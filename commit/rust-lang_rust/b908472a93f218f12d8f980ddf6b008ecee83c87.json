{"sha": "b908472a93f218f12d8f980ddf6b008ecee83c87", "node_id": "C_kwDOAAsO6NoAKGI5MDg0NzJhOTNmMjE4ZjEyZDhmOTgwZGRmNmIwMDhlY2VlODNjODc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-24T22:08:35Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-24T22:08:35Z"}, "message": "Revert \"Remove #[alloc_error_handler] from the compiler and library\"\n\nThis reverts commit abc0660118cc95f47445fd33502a11dd448f5968.", "tree": {"sha": "1246f742d9276935ca0aec39ef645a9ba9fb66ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1246f742d9276935ca0aec39ef645a9ba9fb66ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b908472a93f218f12d8f980ddf6b008ecee83c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b908472a93f218f12d8f980ddf6b008ecee83c87", "html_url": "https://github.com/rust-lang/rust/commit/b908472a93f218f12d8f980ddf6b008ecee83c87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b908472a93f218f12d8f980ddf6b008ecee83c87/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "106db3ef59a20abd4403587895140114236ea4f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/106db3ef59a20abd4403587895140114236ea4f5", "html_url": "https://github.com/rust-lang/rust/commit/106db3ef59a20abd4403587895140114236ea4f5"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "4ede2fe4efe82777918ed7cebcefbfe13137872d", "filename": "example/alloc_example.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b908472a93f218f12d8f980ddf6b008ecee83c87/example%2Falloc_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b908472a93f218f12d8f980ddf6b008ecee83c87/example%2Falloc_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Falloc_example.rs?ref=b908472a93f218f12d8f980ddf6b008ecee83c87", "patch": "@@ -1,4 +1,4 @@\n-#![feature(start, core_intrinsics)]\n+#![feature(start, core_intrinsics, alloc_error_handler)]\n #![no_std]\n \n extern crate alloc;\n@@ -22,6 +22,11 @@ fn panic_handler(_: &core::panic::PanicInfo) -> ! {\n     core::intrinsics::abort();\n }\n \n+#[alloc_error_handler]\n+fn alloc_error_handler(_: alloc::alloc::Layout) -> ! {\n+    core::intrinsics::abort();\n+}\n+\n #[start]\n fn main(_argc: isize, _argv: *const *const u8) -> isize {\n     let world: Box<&str> = Box::new(\"Hello World!\\0\");"}, {"sha": "2c246ceb37d54fa43940774b79a359f39c346da3", "filename": "src/allocator.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b908472a93f218f12d8f980ddf6b008ecee83c87/src%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b908472a93f218f12d8f980ddf6b008ecee83c87/src%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fallocator.rs?ref=b908472a93f218f12d8f980ddf6b008ecee83c87", "patch": "@@ -6,6 +6,7 @@ use crate::prelude::*;\n use rustc_ast::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n use rustc_codegen_ssa::base::allocator_kind_for_codegen;\n use rustc_session::config::OomStrategy;\n+use rustc_span::symbol::sym;\n \n /// Returns whether an allocator shim was created\n pub(crate) fn codegen(\n@@ -14,14 +15,21 @@ pub(crate) fn codegen(\n     unwind_context: &mut UnwindContext,\n ) -> bool {\n     let Some(kind) = allocator_kind_for_codegen(tcx) else { return false };\n-    codegen_inner(module, unwind_context, kind, tcx.sess.opts.unstable_opts.oom);\n+    codegen_inner(\n+        module,\n+        unwind_context,\n+        kind,\n+        tcx.alloc_error_handler_kind(()).unwrap(),\n+        tcx.sess.opts.unstable_opts.oom,\n+    );\n     true\n }\n \n fn codegen_inner(\n     module: &mut impl Module,\n     unwind_context: &mut UnwindContext,\n     kind: AllocatorKind,\n+    alloc_error_handler_kind: AllocatorKind,\n     oom_strategy: OomStrategy,\n ) {\n     let usize_ty = module.target_config().pointer_type();\n@@ -63,6 +71,19 @@ fn codegen_inner(\n         );\n     }\n \n+    let sig = Signature {\n+        call_conv: module.target_config().default_call_conv,\n+        params: vec![AbiParam::new(usize_ty), AbiParam::new(usize_ty)],\n+        returns: vec![],\n+    };\n+    crate::common::create_wrapper_function(\n+        module,\n+        unwind_context,\n+        sig,\n+        \"__rust_alloc_error_handler\",\n+        &alloc_error_handler_kind.fn_name(sym::oom),\n+    );\n+\n     let data_id = module.declare_data(OomStrategy::SYMBOL, Linkage::Export, false, false).unwrap();\n     let mut data_ctx = DataContext::new();\n     data_ctx.set_align(1);"}]}