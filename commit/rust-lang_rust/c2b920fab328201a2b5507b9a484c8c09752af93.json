{"sha": "c2b920fab328201a2b5507b9a484c8c09752af93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYjkyMGZhYjMyODIwMWEyYjU1MDdiOWE0ODRjOGMwOTc1MmFmOTM=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-06-14T23:58:45Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-06-14T23:58:45Z"}, "message": "Show suite paths (`src/test/ui/...`) in help output.", "tree": {"sha": "4aa64be27c425c8af2b9a98b6d727abda505334f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aa64be27c425c8af2b9a98b6d727abda505334f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2b920fab328201a2b5507b9a484c8c09752af93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2b920fab328201a2b5507b9a484c8c09752af93", "html_url": "https://github.com/rust-lang/rust/commit/c2b920fab328201a2b5507b9a484c8c09752af93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2b920fab328201a2b5507b9a484c8c09752af93/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "607e85110ef9c79ce5a52286bb69d385471bc675", "url": "https://api.github.com/repos/rust-lang/rust/commits/607e85110ef9c79ce5a52286bb69d385471bc675", "html_url": "https://github.com/rust-lang/rust/commit/607e85110ef9c79ce5a52286bb69d385471bc675"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "545ad64ba2cf65ea526ca9259a6338b4a0fec83c", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c2b920fab328201a2b5507b9a484c8c09752af93/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2b920fab328201a2b5507b9a484c8c09752af93/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=c2b920fab328201a2b5507b9a484c8c09752af93", "patch": "@@ -489,13 +489,19 @@ impl<'a> Builder<'a> {\n             should_run = (desc.should_run)(should_run);\n         }\n         let mut help = String::from(\"Available paths:\\n\");\n+        let mut add_path = |path: &Path| {\n+            help.push_str(&format!(\"    ./x.py {} {}\\n\", subcommand, path.display()));\n+        };\n         for pathset in should_run.paths {\n-            if let PathSet::Set(set) = pathset {\n-                set.iter().for_each(|path| {\n-                    help.push_str(\n-                        format!(\"    ./x.py {} {}\\n\", subcommand, path.display()).as_str(),\n-                    )\n-                })\n+            match pathset {\n+                PathSet::Set(set) => {\n+                    for path in set {\n+                        add_path(&path);\n+                    }\n+                }\n+                PathSet::Suite(path) => {\n+                    add_path(&path.join(\"...\"));\n+                }\n             }\n         }\n         Some(help)"}]}