{"sha": "5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZTYxYTc5Y2M1ZDI2YTA4NDNiNzE2OWQxYzk1ZmJiM2NiZGEwYmE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-19T01:09:53Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-13T03:25:50Z"}, "message": "Simplify code\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>", "tree": {"sha": "dd718d0b784c87c96c33097d1c985148c9d60d43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd718d0b784c87c96c33097d1c985148c9d60d43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba", "html_url": "https://github.com/rust-lang/rust/commit/5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16692ab66a6e2c62b416f606f144d60711c14414", "url": "https://api.github.com/repos/rust-lang/rust/commits/16692ab66a6e2c62b416f606f144d60711c14414", "html_url": "https://github.com/rust-lang/rust/commit/16692ab66a6e2c62b416f606f144d60711c14414"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "db2f4eca0c9d063921736bcb1e187b8b2209f43d", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=5fe61a79cc5d26a0843b7169d1c95fbb3cbda0ba", "patch": "@@ -1049,8 +1049,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 pat_span.with_hi(pat_span.hi() - BytePos(1)).shrink_to_hi()\n             };\n \n-            let mut wildcard_sugg =\n-                iter::repeat(\"_\").take(fields.len() - subpats.len()).collect::<Vec<_>>().join(\", \");\n+            let mut wildcard_sugg = vec![\"_\"; fields.len() - subpats.len()].join(\", \");\n             if !subpats.is_empty() {\n                 wildcard_sugg = String::from(\", \") + &wildcard_sugg;\n             }"}]}