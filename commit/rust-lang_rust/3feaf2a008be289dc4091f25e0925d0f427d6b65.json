{"sha": "3feaf2a008be289dc4091f25e0925d0f427d6b65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZWFmMmEwMDhiZTI4OWRjNDA5MWYyNWUwOTI1ZDBmNDI3ZDZiNjU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-26T12:49:08Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-26T12:49:08Z"}, "message": "Merge #659\n\n659: Fold blocks of mod items r=matklad a=eulerdisk\n\nFixes #572\r\n\r\nAs requested, we ignore `mod`s with a visibility specifier.\n\nCo-authored-by: Andrea Pretto <eulerdisk@gmail.com>", "tree": {"sha": "c1a648b0103d05853f109d7d08d88f8c94e8fa5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1a648b0103d05853f109d7d08d88f8c94e8fa5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3feaf2a008be289dc4091f25e0925d0f427d6b65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3feaf2a008be289dc4091f25e0925d0f427d6b65", "html_url": "https://github.com/rust-lang/rust/commit/3feaf2a008be289dc4091f25e0925d0f427d6b65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3feaf2a008be289dc4091f25e0925d0f427d6b65/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "url": "https://api.github.com/repos/rust-lang/rust/commits/05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "html_url": "https://github.com/rust-lang/rust/commit/05d0c493c9a94bb6cd4db816fa3bd88d8c389125"}, {"sha": "b9ca8ab868a051fca47462113490433a5085d3c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ca8ab868a051fca47462113490433a5085d3c8", "html_url": "https://github.com/rust-lang/rust/commit/b9ca8ab868a051fca47462113490433a5085d3c8"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "87feb9bd8d5fc5f69acd4dd4964226bf629998e3", "filename": "crates/ra_ide_api_light/src/folding_ranges.rs", "status": "modified", "additions": 63, "deletions": 1, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/3feaf2a008be289dc4091f25e0925d0f427d6b65/crates%2Fra_ide_api_light%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3feaf2a008be289dc4091f25e0925d0f427d6b65/crates%2Fra_ide_api_light%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Ffolding_ranges.rs?ref=3feaf2a008be289dc4091f25e0925d0f427d6b65", "patch": "@@ -9,6 +9,7 @@ use ra_syntax::{\n pub enum FoldKind {\n     Comment,\n     Imports,\n+    Mods,\n     Block,\n }\n \n@@ -22,6 +23,7 @@ pub fn folding_ranges(file: &SourceFile) -> Vec<Fold> {\n     let mut res = vec![];\n     let mut visited_comments = FxHashSet::default();\n     let mut visited_imports = FxHashSet::default();\n+    let mut visited_mods = FxHashSet::default();\n \n     for node in file.syntax().descendants() {\n         // Fold items that span multiple lines\n@@ -53,6 +55,18 @@ pub fn folding_ranges(file: &SourceFile) -> Vec<Fold> {\n                 })\n             }\n         }\n+\n+        // Fold groups of mods\n+        if node.kind() == MODULE && !has_visibility(&node) && !visited_mods.contains(&node) {\n+            if let Some(range) =\n+                contiguous_range_for_group_unless(node, has_visibility, &mut visited_mods)\n+            {\n+                res.push(Fold {\n+                    range,\n+                    kind: FoldKind::Mods,\n+                })\n+            }\n+        }\n     }\n \n     res\n@@ -68,6 +82,14 @@ fn fold_kind(kind: SyntaxKind) -> Option<FoldKind> {\n     }\n }\n \n+fn has_visibility(node: &SyntaxNode) -> bool {\n+    use ast::VisibilityOwner;\n+\n+    return ast::Module::cast(node)\n+        .and_then(|m| m.visibility())\n+        .is_some();\n+}\n+\n fn has_newline(node: &SyntaxNode) -> bool {\n     for descendant in node.descendants() {\n         if let Some(ws) = ast::Whitespace::cast(descendant) {\n@@ -87,6 +109,14 @@ fn has_newline(node: &SyntaxNode) -> bool {\n fn contiguous_range_for_group<'a>(\n     first: &'a SyntaxNode,\n     visited: &mut FxHashSet<&'a SyntaxNode>,\n+) -> Option<TextRange> {\n+    contiguous_range_for_group_unless(first, |_| false, visited)\n+}\n+\n+fn contiguous_range_for_group_unless<'a>(\n+    first: &'a SyntaxNode,\n+    unless: impl Fn(&'a SyntaxNode) -> bool,\n+    visited: &mut FxHashSet<&'a SyntaxNode>,\n ) -> Option<TextRange> {\n     visited.insert(first);\n \n@@ -103,7 +133,7 @@ fn contiguous_range_for_group<'a>(\n         }\n \n         // Stop if we find a node that doesn't belong to the group\n-        if node.kind() != first.kind() {\n+        if node.kind() != first.kind() || unless(node) {\n             break;\n         }\n \n@@ -244,6 +274,38 @@ fn main() <fold>{\n         do_check(text, folds);\n     }\n \n+    #[test]\n+    fn test_fold_mods() {\n+        let text = r#\"\n+\n+pub mod foo;\n+<fold>mod after_pub;\n+mod after_pub_next;</fold>\n+\n+<fold>mod before_pub;\n+mod before_pub_next;</fold>\n+pub mod bar;\n+\n+mod not_folding_single;\n+pub mod foobar;\n+pub not_folding_single_next;\n+\n+<fold>#[cfg(test)]\n+mod with_attribute;\n+mod with_attribute_next;</fold>\n+\n+fn main() <fold>{\n+}</fold>\"#;\n+\n+        let folds = &[\n+            FoldKind::Mods,\n+            FoldKind::Mods,\n+            FoldKind::Mods,\n+            FoldKind::Block,\n+        ];\n+        do_check(text, folds);\n+    }\n+\n     #[test]\n     fn test_fold_import_groups() {\n         let text = r#\""}, {"sha": "8ea9edc84fb4c6420a76a8149d7dbc7a54475794", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3feaf2a008be289dc4091f25e0925d0f427d6b65/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3feaf2a008be289dc4091f25e0925d0f427d6b65/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=3feaf2a008be289dc4091f25e0925d0f427d6b65", "patch": "@@ -369,6 +369,7 @@ pub fn handle_folding_range(\n                 let kind = match fold.kind {\n                     FoldKind::Comment => Some(FoldingRangeKind::Comment),\n                     FoldKind::Imports => Some(FoldingRangeKind::Imports),\n+                    FoldKind::Mods => None,\n                     FoldKind::Block => None,\n                 };\n                 let range = fold.range.conv_with(&line_index);"}]}