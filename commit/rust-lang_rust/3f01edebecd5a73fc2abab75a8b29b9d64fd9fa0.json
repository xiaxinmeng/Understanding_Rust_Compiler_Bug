{"sha": "3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMDFlZGViZWNkNWE3M2ZjMmFiYWI3NWE4YjI5YjlkNjRmZDlmYTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-09T14:19:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-09T14:19:39Z"}, "message": "Merge #8779\n\n8779: fix: join lines doesn't add space before closing quote r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "65ab4a316e07a28f3a16bdcb6f58783b5a07ba01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65ab4a316e07a28f3a16bdcb6f58783b5a07ba01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgl+97CRBK7hj4Ov3rIwAAeQgIAAXLJHTTIw8nadX7mLLltIEc\ne/sxmB8QZJBI0KdAF//WQB2Ux3JGdieEFoqPvv5EJwSKTh2prc5qjs5KqtgxRTaj\njnq0siXCuxfDxjGUbWtDkxpdgchSOoMooKfU9VCjNXSWc/9lLSiGV8xAzNZZnaZh\nU1Je3eS5cVJ+PiqkROwXnmG7zP3ybEb0EIcLt9RtMkeJ0pDUCtoD+zzTZBc/zcGJ\n879qgi+Lu1HgNhn8/B+r0SUlucwS91y8Vq4GPl8YjH115Zna2+jDWFE/DEBRWm+m\nuMldr4rlfU2ATSCSCFz7ON5QY9f1L5plYqBVBcCwtj+SMb2gjXmge47R88wsI+U=\n=Nm7i\n-----END PGP SIGNATURE-----\n", "payload": "tree 65ab4a316e07a28f3a16bdcb6f58783b5a07ba01\nparent b43921cdddb4e703787ab87b0ea3f8eaff94f6c9\nparent e0da3da0d9a6673bc3b653ce863fec2bdd3f7fab\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620569979 +0000\ncommitter GitHub <noreply@github.com> 1620569979 +0000\n\nMerge #8779\n\n8779: fix: join lines doesn't add space before closing quote r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0", "html_url": "https://github.com/rust-lang/rust/commit/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b43921cdddb4e703787ab87b0ea3f8eaff94f6c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b43921cdddb4e703787ab87b0ea3f8eaff94f6c9", "html_url": "https://github.com/rust-lang/rust/commit/b43921cdddb4e703787ab87b0ea3f8eaff94f6c9"}, {"sha": "e0da3da0d9a6673bc3b653ce863fec2bdd3f7fab", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0da3da0d9a6673bc3b653ce863fec2bdd3f7fab", "html_url": "https://github.com/rust-lang/rust/commit/e0da3da0d9a6673bc3b653ce863fec2bdd3f7fab"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "482b23cf5ea119fe35da16cd0e2bd16ac15f4adc", "filename": "crates/ide/src/join_lines.rs", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fjoin_lines.rs?ref=3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0", "patch": "@@ -65,11 +65,15 @@ fn remove_newlines(edit: &mut TextEditBuilder, token: &SyntaxToken, range: TextR\n \n fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextSize) {\n     if token.kind() != WHITESPACE || token.text().bytes().filter(|&b| b == b'\\n').count() != 1 {\n-        let mut string_open_quote = false;\n+        let mut no_space = false;\n         if let Some(string) = ast::String::cast(token.clone()) {\n             if let Some(range) = string.open_quote_text_range() {\n-                cov_mark::hit!(join_string_literal);\n-                string_open_quote = range.end() == offset;\n+                cov_mark::hit!(join_string_literal_open_quote);\n+                no_space |= range.end() == offset;\n+            }\n+            if let Some(range) = string.close_quote_text_range() {\n+                cov_mark::hit!(join_string_literal_close_quote);\n+                no_space |= range.start() == offset + TextSize::of('\\n');\n             }\n         }\n \n@@ -82,7 +86,7 @@ fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextS\n         };\n \n         let range = TextRange::at(offset, ((n_spaces_after_line_break + 1) as u32).into());\n-        let replace_with = if string_open_quote { \"\" } else { \" \" };\n+        let replace_with = if no_space { \"\" } else { \" \" };\n         edit.replace(range, replace_with.to_string());\n         return;\n     }\n@@ -797,22 +801,41 @@ fn foo() {\n \n     #[test]\n     fn join_string_literal() {\n-        cov_mark::check!(join_string_literal);\n-        check_join_lines(\n-            r#\"\n+        {\n+            cov_mark::check!(join_string_literal_open_quote);\n+            check_join_lines(\n+                r#\"\n fn main() {\n     $0\"\n hello\n \";\n }\n \"#,\n-            r#\"\n+                r#\"\n fn main() {\n     $0\"hello\n \";\n }\n \"#,\n-        );\n+            );\n+        }\n+\n+        {\n+            cov_mark::check!(join_string_literal_close_quote);\n+            check_join_lines(\n+                r#\"\n+fn main() {\n+    $0\"hello\n+\";\n+}\n+\"#,\n+                r#\"\n+fn main() {\n+    $0\"hello\";\n+}\n+\"#,\n+            );\n+        }\n \n         check_join_lines(\n             r#\""}]}