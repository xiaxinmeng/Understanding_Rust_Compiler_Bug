{"sha": "e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5Mzk4YmNjNGQ3ZGQzYjVjY2RkNzA1ZGM0YmE4ZDI5YmJiOTYzNTQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-22T01:20:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-22T01:20:23Z"}, "message": "Rollup merge of #80193 - zseri:stabilize-osstring-ascii, r=m-ou-se\n\nstabilize `feature(osstring_ascii)`\n\nThis PR stabilizes `feature(osstring_ascii)`.\n\nFixes #70516.", "tree": {"sha": "b90996dd93b4960d7b47cd0f2d69ee5d1b12d2c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b90996dd93b4960d7b47cd0f2d69ee5d1b12d2c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgV/DYCRBK7hj4Ov3rIwAAdHIIAINZTRHKxZA+J5ru5zRmn1vd\nZ4M26nuui0KccWwrdgKCIDhF60wBJLN+ehtFVQspAgLEo8JGJjoiC0rq+M3C2ump\nuHnJco2GKE80T/JsWKY1SsoAzkUsQkNxnBdgkuucXADXOOxnHGIze+X6nzjgPRl6\ngw1P/nOlafFRQCzXeQ7WIDKRXeN4Ayk3uzPMzNgK7yqbyp/s0ceBqUqeF92opn4j\nugIb8VbG23zzE4M5MzeW0stScoNWGcXvJNKCViM08LwQbb2eKrFmF0F8CwFTHDLw\nCQ33CYlwaE3pvq/9uKQKITzrjgTbkTJwcAgH1QaezRKzfkzDh7lnQ2WmkhldBds=\n=d5SB\n-----END PGP SIGNATURE-----\n", "payload": "tree b90996dd93b4960d7b47cd0f2d69ee5d1b12d2c6\nparent 97663b6690689379aa0493deb494dfe14627c46b\nparent 0acdada18b38f0f0e45836cbc20663e32216f211\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616376023 +0100\ncommitter GitHub <noreply@github.com> 1616376023 +0100\n\nRollup merge of #80193 - zseri:stabilize-osstring-ascii, r=m-ou-se\n\nstabilize `feature(osstring_ascii)`\n\nThis PR stabilizes `feature(osstring_ascii)`.\n\nFixes #70516.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354", "html_url": "https://github.com/rust-lang/rust/commit/e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97663b6690689379aa0493deb494dfe14627c46b", "url": "https://api.github.com/repos/rust-lang/rust/commits/97663b6690689379aa0493deb494dfe14627c46b", "html_url": "https://github.com/rust-lang/rust/commit/97663b6690689379aa0493deb494dfe14627c46b"}, {"sha": "0acdada18b38f0f0e45836cbc20663e32216f211", "url": "https://api.github.com/repos/rust-lang/rust/commits/0acdada18b38f0f0e45836cbc20663e32216f211", "html_url": "https://github.com/rust-lang/rust/commit/0acdada18b38f0f0e45836cbc20663e32216f211"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "14914287cb1b14c57af949205f178564f65dabe6", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=e9398bcc4d7dd3b5ccdd705dc4ba8d29bbb96354", "patch": "@@ -716,7 +716,6 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// let mut s = OsString::from(\"GR\u00dc\u00dfE, J\u00dcRGEN \u2764\");\n@@ -725,7 +724,7 @@ impl OsStr {\n     ///\n     /// assert_eq!(\"gr\u00dc\u00dfe, j\u00dcrgen \u2764\", s);\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.53.0\")]\n     #[inline]\n     pub fn make_ascii_lowercase(&mut self) {\n         self.inner.make_ascii_lowercase()\n@@ -742,7 +741,6 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// let mut s = OsString::from(\"Gr\u00fc\u00dfe, J\u00fcrgen \u2764\");\n@@ -751,7 +749,7 @@ impl OsStr {\n     ///\n     /// assert_eq!(\"GR\u00fc\u00dfE, J\u00fcRGEN \u2764\", s);\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.53.0\")]\n     #[inline]\n     pub fn make_ascii_uppercase(&mut self) {\n         self.inner.make_ascii_uppercase()\n@@ -768,13 +766,12 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     /// let s = OsString::from(\"Gr\u00fc\u00dfe, J\u00fcrgen \u2764\");\n     ///\n     /// assert_eq!(\"gr\u00fc\u00dfe, j\u00fcrgen \u2764\", s.to_ascii_lowercase());\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.53.0\")]\n     pub fn to_ascii_lowercase(&self) -> OsString {\n         OsString::from_inner(self.inner.to_ascii_lowercase())\n     }\n@@ -790,13 +787,12 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     /// let s = OsString::from(\"Gr\u00fc\u00dfe, J\u00fcrgen \u2764\");\n     ///\n     /// assert_eq!(\"GR\u00fc\u00dfE, J\u00fcRGEN \u2764\", s.to_ascii_uppercase());\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.53.0\")]\n     pub fn to_ascii_uppercase(&self) -> OsString {\n         OsString::from_inner(self.inner.to_ascii_uppercase())\n     }\n@@ -806,7 +802,6 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// let ascii = OsString::from(\"hello!\\n\");\n@@ -815,7 +810,7 @@ impl OsStr {\n     /// assert!(ascii.is_ascii());\n     /// assert!(!non_ascii.is_ascii());\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.53.0\")]\n     #[inline]\n     pub fn is_ascii(&self) -> bool {\n         self.inner.is_ascii()\n@@ -829,14 +824,13 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// assert!(OsString::from(\"Ferris\").eq_ignore_ascii_case(\"FERRIS\"));\n     /// assert!(OsString::from(\"Ferr\u00f6s\").eq_ignore_ascii_case(\"FERR\u00f6S\"));\n     /// assert!(!OsString::from(\"Ferr\u00f6s\").eq_ignore_ascii_case(\"FERR\u00d6S\"));\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.53.0\")]\n     pub fn eq_ignore_ascii_case<S: AsRef<OsStr>>(&self, other: S) -> bool {\n         self.inner.eq_ignore_ascii_case(&other.as_ref().inner)\n     }"}]}