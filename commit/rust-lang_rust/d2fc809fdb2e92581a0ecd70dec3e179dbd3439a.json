{"sha": "d2fc809fdb2e92581a0ecd70dec3e179dbd3439a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZmM4MDlmZGIyZTkyNTgxYTBlY2Q3MGRlYzNlMTc5ZGJkMzQzOWE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-08-03T14:11:30Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-08-03T14:15:27Z"}, "message": "Disable building rust-analyzer on riscv64\n\nriscv64 has an LLVM bug that makes rust-analyzer not build.", "tree": {"sha": "dfbc9b47c2a61d43611e55141f724b04573e70d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfbc9b47c2a61d43611e55141f724b04573e70d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2fc809fdb2e92581a0ecd70dec3e179dbd3439a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2fc809fdb2e92581a0ecd70dec3e179dbd3439a", "html_url": "https://github.com/rust-lang/rust/commit/d2fc809fdb2e92581a0ecd70dec3e179dbd3439a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2fc809fdb2e92581a0ecd70dec3e179dbd3439a/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c186aed59ab590eb586751afaf6b9e0ea9b78099", "url": "https://api.github.com/repos/rust-lang/rust/commits/c186aed59ab590eb586751afaf6b9e0ea9b78099", "html_url": "https://github.com/rust-lang/rust/commit/c186aed59ab590eb586751afaf6b9e0ea9b78099"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "98b6be29c073b80d337744658f75f50ad74e2ced", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 47, "deletions": 27, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/d2fc809fdb2e92581a0ecd70dec3e179dbd3439a/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2fc809fdb2e92581a0ecd70dec3e179dbd3439a/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=d2fc809fdb2e92581a0ecd70dec3e179dbd3439a", "patch": "@@ -1355,7 +1355,7 @@ pub struct RustAnalyzer {\n }\n \n impl Step for RustAnalyzer {\n-    type Output = PathBuf;\n+    type Output = Option<PathBuf>;\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n@@ -1373,11 +1373,17 @@ impl Step for RustAnalyzer {\n         });\n     }\n \n-    fn run(self, builder: &Builder<'_>) -> PathBuf {\n+    fn run(self, builder: &Builder<'_>) -> Option<PathBuf> {\n         let compiler = self.compiler;\n         let target = self.target;\n         assert!(builder.config.extended);\n \n+        if target.contains(\"riscv64\") {\n+            // riscv64 currently has an LLVM bug that makes rust-analyzer unable\n+            // to build. See #74813 for details.\n+            return None;\n+        }\n+\n         let src = builder.src.join(\"src/tools/rust-analyzer\");\n         let release_num = builder.release_num(\"rust-analyzer/crates/rust-analyzer\");\n         let name = pkgname(builder, \"rust-analyzer\");\n@@ -1431,7 +1437,7 @@ impl Step for RustAnalyzer {\n         builder.info(&format!(\"Dist rust-analyzer stage{} ({})\", compiler.stage, target));\n         let _time = timeit(builder);\n         builder.run(&mut cmd);\n-        distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple))\n+        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n     }\n }\n \n@@ -1789,7 +1795,7 @@ impl Step for Extended {\n         tarballs.push(rustc_installer);\n         tarballs.push(cargo_installer);\n         tarballs.extend(rls_installer.clone());\n-        tarballs.push(rust_analyzer_installer.clone());\n+        tarballs.extend(rust_analyzer_installer.clone());\n         tarballs.push(clippy_installer);\n         tarballs.extend(miri_installer.clone());\n         tarballs.extend(rustfmt_installer.clone());\n@@ -1867,7 +1873,9 @@ impl Step for Extended {\n             if rls_installer.is_none() {\n                 contents = filter(&contents, \"rls\");\n             }\n-            contents = filter(&contents, \"rust-analyzer\");\n+            if rust_analyzer_installer.is_none() {\n+                contents = filter(&contents, \"rust-analyzer\");\n+            }\n             if miri_installer.is_none() {\n                 contents = filter(&contents, \"miri\");\n             }\n@@ -1914,7 +1922,9 @@ impl Step for Extended {\n             if rls_installer.is_some() {\n                 prepare(\"rls\");\n             }\n-            prepare(\"rust-analyzer\");\n+            if rust_analyzer_installer.is_some() {\n+                prepare(\"rust-analyzer\");\n+            }\n             if miri_installer.is_some() {\n                 prepare(\"miri\");\n             }\n@@ -1976,7 +1986,9 @@ impl Step for Extended {\n             if rls_installer.is_some() {\n                 prepare(\"rls\");\n             }\n-            prepare(\"rust-analyzer\");\n+            if rust_analyzer_installer.is_some() {\n+                prepare(\"rust-analyzer\");\n+            }\n             if miri_installer.is_some() {\n                 prepare(\"miri\");\n             }\n@@ -2076,23 +2088,25 @@ impl Step for Extended {\n                         .arg(etc.join(\"msi/remove-duplicates.xsl\")),\n                 );\n             }\n-            builder.run(\n-                Command::new(&heat)\n-                    .current_dir(&exe)\n-                    .arg(\"dir\")\n-                    .arg(\"rust-analyzer\")\n-                    .args(&heat_flags)\n-                    .arg(\"-cg\")\n-                    .arg(\"RustAnalyzerGroup\")\n-                    .arg(\"-dr\")\n-                    .arg(\"RustAnalyzer\")\n-                    .arg(\"-var\")\n-                    .arg(\"var.RustAnalyzerDir\")\n-                    .arg(\"-out\")\n-                    .arg(exe.join(\"RustAnalyzerGroup.wxs\"))\n-                    .arg(\"-t\")\n-                    .arg(etc.join(\"msi/remove-duplicates.xsl\")),\n-            );\n+            if rust_analyzer_installer.is_some() {\n+                builder.run(\n+                    Command::new(&heat)\n+                        .current_dir(&exe)\n+                        .arg(\"dir\")\n+                        .arg(\"rust-analyzer\")\n+                        .args(&heat_flags)\n+                        .arg(\"-cg\")\n+                        .arg(\"RustAnalyzerGroup\")\n+                        .arg(\"-dr\")\n+                        .arg(\"RustAnalyzer\")\n+                        .arg(\"-var\")\n+                        .arg(\"var.RustAnalyzerDir\")\n+                        .arg(\"-out\")\n+                        .arg(exe.join(\"RustAnalyzerGroup.wxs\"))\n+                        .arg(\"-t\")\n+                        .arg(etc.join(\"msi/remove-duplicates.xsl\")),\n+                );\n+            }\n             builder.run(\n                 Command::new(&heat)\n                     .current_dir(&exe)\n@@ -2186,7 +2200,9 @@ impl Step for Extended {\n                 if rls_installer.is_some() {\n                     cmd.arg(\"-dRlsDir=rls\");\n                 }\n-                cmd.arg(\"-dRustAnalyzerDir=rust-analyzer\");\n+                if rust_analyzer_installer.is_some() {\n+                    cmd.arg(\"-dRustAnalyzerDir=rust-analyzer\");\n+                }\n                 if miri_installer.is_some() {\n                     cmd.arg(\"-dMiriDir=miri\");\n                 }\n@@ -2206,7 +2222,9 @@ impl Step for Extended {\n             if rls_installer.is_some() {\n                 candle(\"RlsGroup.wxs\".as_ref());\n             }\n-            candle(\"RustAnalyzerGroup.wxs\".as_ref());\n+            if rust_analyzer_installer.is_some() {\n+                candle(\"RustAnalyzerGroup.wxs\".as_ref());\n+            }\n             if miri_installer.is_some() {\n                 candle(\"MiriGroup.wxs\".as_ref());\n             }\n@@ -2244,7 +2262,9 @@ impl Step for Extended {\n             if rls_installer.is_some() {\n                 cmd.arg(\"RlsGroup.wixobj\");\n             }\n-            cmd.arg(\"RustAnalyzerGroup.wixobj\");\n+            if rust_analyzer_installer.is_some() {\n+                cmd.arg(\"RustAnalyzerGroup.wixobj\");\n+            }\n             if miri_installer.is_some() {\n                 cmd.arg(\"MiriGroup.wixobj\");\n             }"}]}