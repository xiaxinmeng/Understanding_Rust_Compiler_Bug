{"sha": "8582fde15085794c054f1ceee4001e2e1646bcb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ODJmZGUxNTA4NTc5NGMwNTRmMWNlZWU0MDAxZTJlMTY0NmJjYjU=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-25T19:26:38Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-26T23:42:03Z"}, "message": "Improve the camel case warning a bit.", "tree": {"sha": "6398c1856ddf0911223ad0ad4d16018627d0ffe4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6398c1856ddf0911223ad0ad4d16018627d0ffe4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8582fde15085794c054f1ceee4001e2e1646bcb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8582fde15085794c054f1ceee4001e2e1646bcb5", "html_url": "https://github.com/rust-lang/rust/commit/8582fde15085794c054f1ceee4001e2e1646bcb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8582fde15085794c054f1ceee4001e2e1646bcb5/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44808fcee6b93dc1912381034fd799feaa067a80", "url": "https://api.github.com/repos/rust-lang/rust/commits/44808fcee6b93dc1912381034fd799feaa067a80", "html_url": "https://github.com/rust-lang/rust/commit/44808fcee6b93dc1912381034fd799feaa067a80"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "aaf0460a4e1a35a97d231a5b9f50b77e09f7fa03", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8582fde15085794c054f1ceee4001e2e1646bcb5/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8582fde15085794c054f1ceee4001e2e1646bcb5/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=8582fde15085794c054f1ceee4001e2e1646bcb5", "patch": "@@ -827,23 +827,26 @@ fn check_item_non_camel_case_types(cx: &Context, it: &ast::item) {\n             !ident.contains_char('_')\n     }\n \n-    fn check_case(cx: &Context, ident: ast::ident, span: span) {\n+    fn check_case(cx: &Context, sort: &str, ident: ast::ident, span: span) {\n         if !is_camel_case(cx.tcx, ident) {\n-            cx.span_lint(non_camel_case_types, span,\n-                         \"type, variant, or trait should have \\\n-                          a camel case identifier\");\n+            cx.span_lint(\n+                non_camel_case_types, span,\n+                fmt!(\"%s `%s` should have a camel case identifier\",\n+                    sort, cx.tcx.sess.str_of(ident)));\n         }\n     }\n \n     match it.node {\n-        ast::item_ty(*) | ast::item_struct(*) |\n+        ast::item_ty(*) | ast::item_struct(*) => {\n+            check_case(cx, \"type\", it.ident, it.span)\n+        }\n         ast::item_trait(*) => {\n-            check_case(cx, it.ident, it.span)\n+            check_case(cx, \"trait\", it.ident, it.span)\n         }\n         ast::item_enum(ref enum_definition, _) => {\n-            check_case(cx, it.ident, it.span);\n+            check_case(cx, \"type\", it.ident, it.span);\n             for enum_definition.variants.iter().advance |variant| {\n-                check_case(cx, variant.node.name, variant.span);\n+                check_case(cx, \"variant\", variant.node.name, variant.span);\n             }\n         }\n         _ => ()"}, {"sha": "2cabdfe5bb0981be0fd6ff0fa3d6850da5598a76", "filename": "src/test/compile-fail/lint-non-camel-case-types.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8582fde15085794c054f1ceee4001e2e1646bcb5/src%2Ftest%2Fcompile-fail%2Flint-non-camel-case-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8582fde15085794c054f1ceee4001e2e1646bcb5/src%2Ftest%2Fcompile-fail%2Flint-non-camel-case-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-non-camel-case-types.rs?ref=8582fde15085794c054f1ceee4001e2e1646bcb5", "patch": "@@ -10,25 +10,25 @@\n \n #[forbid(non_camel_case_types)];\n \n-struct foo { //~ ERROR type, variant, or trait should have a camel case identifier\n+struct foo { //~ ERROR type `foo` should have a camel case identifier\n     bar: int,\n }\n \n-enum foo2 { //~ ERROR type, variant, or trait should have a camel case identifier\n+enum foo2 { //~ ERROR type `foo2` should have a camel case identifier\n     Bar\n }\n \n-struct foo3 { //~ ERROR type, variant, or trait should have a camel case identifier\n+struct foo3 { //~ ERROR type `foo3` should have a camel case identifier\n     bar: int\n }\n \n-type foo4 = int; //~ ERROR type, variant, or trait should have a camel case identifier\n+type foo4 = int; //~ ERROR type `foo4` should have a camel case identifier\n \n enum Foo5 {\n-    bar //~ ERROR type, variant, or trait should have a camel case identifier\n+    bar //~ ERROR variant `bar` should have a camel case identifier\n }\n \n-trait foo6 { //~ ERROR type, variant, or trait should have a camel case identifier\n+trait foo6 { //~ ERROR trait `foo6` should have a camel case identifier\n }\n \n fn main() { }"}]}