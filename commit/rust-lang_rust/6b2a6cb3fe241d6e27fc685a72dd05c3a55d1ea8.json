{"sha": "6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMmE2Y2IzZmUyNDFkNmUyN2ZjNjg1YTcyZGQwNWMzYTU1ZDFlYTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-06T17:26:47Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-06T17:26:47Z"}, "message": "Register new snapshots", "tree": {"sha": "a9c895d3360c6d8997b173b2106765b0256c06c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9c895d3360c6d8997b173b2106765b0256c06c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "html_url": "https://github.com/rust-lang/rust/commit/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6a1fde1c6a13691f21cf739a9e4b6706c6c49c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a1fde1c6a13691f21cf739a9e4b6706c6c49c9", "html_url": "https://github.com/rust-lang/rust/commit/b6a1fde1c6a13691f21cf739a9e4b6706c6c49c9"}], "stats": {"total": 53, "additions": 11, "deletions": 42}, "files": [{"sha": "89b6f06abfc7f979aba79cb1c25dd6b815bf8351", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -13,7 +13,6 @@\n #[allow(non_camel_case_types)];\n #[deny(warnings)];\n \n-#[cfg(stage0)] extern mod green;\n extern mod extra;\n \n use std::os;"}, {"sha": "df5594b6c8653fc13be8d033b9f20daeb9cf9c35", "filename": "src/driver/driver.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fdriver.rs?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[cfg(stage0)] extern mod green;\n-\n #[cfg(rustpkg)]\n extern mod this = \"rustpkg\";\n "}, {"sha": "e76da27ff92ec79c8f78b128af657379964327b9", "filename": "src/libgreen/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibgreen%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibgreen%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Flib.rs?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -25,9 +25,6 @@\n // NB this does *not* include globs, please keep it that way.\n #[feature(macro_rules)];\n \n-// Allow check-stage0-green for now\n-#[cfg(test, stage0)] extern mod green;\n-\n use std::os;\n use std::rt::crate_map;\n use std::rt::rtio;"}, {"sha": "7691f0b5567912ab74ac6c0805b5be2f3f60b09c", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -19,9 +19,6 @@\n #[crate_type = \"rlib\"];\n #[crate_type = \"dylib\"];\n \n-// Allow check-stage0-native for now\n-#[cfg(stage0, test)] extern mod green;\n-\n // NB this crate explicitly does *not* allow glob imports, please seriously\n //    consider whether they're needed before adding that feature here (the\n //    answer is that you don't need them)\n@@ -34,7 +31,7 @@ pub mod io;\n pub mod task;\n \n // XXX: this should not exist here\n-#[cfg(stage0)]\n+#[cfg(stage0, nativestart)]\n #[lang = \"start\"]\n pub fn lang_start(main: *u8, argc: int, argv: **u8) -> int {\n     use std::cast;"}, {"sha": "62fc08fd9d39405b4318594d02445c8df230a3af", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -21,33 +21,6 @@ pub struct Cell<T> {\n     priv value: T,\n }\n \n-#[cfg(stage0)]\n-impl<T> Cell<T> {\n-    /// Creates a new `Cell` containing the given value.\n-    pub fn new(value: T) -> Cell<T> {\n-        Cell {\n-            value: value,\n-        }\n-    }\n-\n-    /// Returns a copy of the contained value.\n-    #[inline]\n-    pub fn get(&self) -> T {\n-        unsafe {\n-            ::cast::transmute_copy(&self.value)\n-        }\n-    }\n-\n-    /// Sets the contained value.\n-    #[inline]\n-    pub fn set(&self, value: T) {\n-        unsafe {\n-            *cast::transmute_mut(&self.value) = value\n-        }\n-    }\n-}\n-\n-#[cfg(not(stage0))]\n impl<T: ::kinds::Pod> Cell<T> {\n     /// Creates a new `Cell` containing the given value.\n     pub fn new(value: T) -> Cell<T> {"}, {"sha": "27f9f0dbfa31ec850c9f19cf02e1fd5af41c6df6", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -38,9 +38,6 @@ use sync::atomics::{AtomicUint, SeqCst};\n use task::{TaskResult, TaskOpts};\n use unstable::finally::Finally;\n \n-#[cfg(stage0)]\n-pub use rt::unwind::begin_unwind;\n-\n // The Task struct represents all state associated with a rust\n // task. There are at this point two primary \"subtypes\" of task,\n // however instead of using a subtype we just have a \"task_type\" field"}, {"sha": "d6b33fda7455d18d1d4b2a756b2f39cf482383ad", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -188,8 +188,8 @@ extern \"rust-intrinsic\" {\n     /// Execute a breakpoint trap, for inspection by a debugger.\n     pub fn breakpoint();\n \n-    #[cfg(not(stage0))] pub fn volatile_load<T>(src: *T) -> T;\n-    #[cfg(not(stage0))] pub fn volatile_store<T>(dst: *mut T, val: T);\n+    pub fn volatile_load<T>(src: *T) -> T;\n+    pub fn volatile_store<T>(dst: *mut T, val: T);\n \n     /// Atomic compare and exchange, sequentially consistent.\n     pub fn atomic_cxchg(dst: &mut int, old: int, src: int) -> int;"}, {"sha": "33cfda3f20b3122e7285d993e3f267911f45baae", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=6b2a6cb3fe241d6e27fc685a72dd05c3a55d1ea8", "patch": "@@ -1,3 +1,11 @@\n+S 2014-01-05 a6d3e57\n+  freebsd-x86_64 ac21ea9537da2aaee35b7f3d2698b651dc3e8bd9\n+  linux-i386 03e60be1f1b90dddd15f3597bc45ec8d9626b35d\n+  linux-x86_64 aa8fbbacdb1d8a078f3a3fe3478dcbc506bd4090\n+  macos-i386 48678a07106207de939f0f90389abb3170b20531\n+  macos-x86_64 ec746585cb20d1f9edffec74f6ff8be6e93a75f7\n+  winnt-i386 5c6e697a9a7946f9f15dbe7d5936cc9875ce7636\n+\n S 2013-12-27 a5fa1d9\n   freebsd-x86_64 7ed0226bb924d40bebda19e7bb0a7663233a600c\n   linux-i386 10c113aa925f9985b5111ded570b7db4a50b8569"}]}