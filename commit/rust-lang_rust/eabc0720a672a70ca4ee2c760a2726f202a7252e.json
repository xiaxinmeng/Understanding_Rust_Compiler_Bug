{"sha": "eabc0720a672a70ca4ee2c760a2726f202a7252e", "node_id": "C_kwDOAAsO6NoAKGVhYmMwNzIwYTY3MmE3MGNhNGVlMmM3NjBhMjcyNmYyMDJhNzI1MmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-30T18:53:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-30T18:53:18Z"}, "message": "Rollup merge of #104895 - chenyukang:yukang/fix-104884-serde, r=TaKO8Ki\n\nAvoid Invalid code suggested when encountering unsatisfied trait bounds in derive macro code\n\nFixes #104884", "tree": {"sha": "e093a409f9de9f1d12ad9664c5c435ea0696eec3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e093a409f9de9f1d12ad9664c5c435ea0696eec3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eabc0720a672a70ca4ee2c760a2726f202a7252e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjh6aeCRBK7hj4Ov3rIwAA7SsIAKQSo1NQRZK8XHuFpZWN5HSC\nfOsamCF7F9AB4sg7lKQp7D9MeByx3r5LCpc2DZQcDjYp4HPOIim2GP+0eOiVghHp\nLmnj9EfoGFCNiJo7VOeM7Qybuhoxt5jKFWyX4l3C3FfJBdWERVDCl91fEoOIa0gU\nTrVIjFjJUjtEvKF2RAFFOIwXDp9AGx1O+V2iyRtPZuusAlfWgi+2Vja8t+l1fXsL\nTEtsvNe5aDn/zPfgK3neobiAweH9AJf9xvprw5I3qV4wQVbQex2tk5NGRShaqxzk\ntrGOyEYpk2vAyk+dZAwoi47SdZCDTitFza64FIpbMhnggocb4uERhV8sbyMFU30=\n=gTlR\n-----END PGP SIGNATURE-----\n", "payload": "tree e093a409f9de9f1d12ad9664c5c435ea0696eec3\nparent 3d64420fa9442d50c6b51c7587c9310a88163ba8\nparent 3980945ab1cd0815ba6bcd19143943b3a39c0593\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669834398 +0100\ncommitter GitHub <noreply@github.com> 1669834398 +0100\n\nRollup merge of #104895 - chenyukang:yukang/fix-104884-serde, r=TaKO8Ki\n\nAvoid Invalid code suggested when encountering unsatisfied trait bounds in derive macro code\n\nFixes #104884\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eabc0720a672a70ca4ee2c760a2726f202a7252e", "html_url": "https://github.com/rust-lang/rust/commit/eabc0720a672a70ca4ee2c760a2726f202a7252e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eabc0720a672a70ca4ee2c760a2726f202a7252e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d64420fa9442d50c6b51c7587c9310a88163ba8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d64420fa9442d50c6b51c7587c9310a88163ba8", "html_url": "https://github.com/rust-lang/rust/commit/3d64420fa9442d50c6b51c7587c9310a88163ba8"}, {"sha": "3980945ab1cd0815ba6bcd19143943b3a39c0593", "url": "https://api.github.com/repos/rust-lang/rust/commits/3980945ab1cd0815ba6bcd19143943b3a39c0593", "html_url": "https://github.com/rust-lang/rust/commit/3980945ab1cd0815ba6bcd19143943b3a39c0593"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "511d51cd670fb94ff8bf013f3512e545f9ea881e", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eabc0720a672a70ca4ee2c760a2726f202a7252e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eabc0720a672a70ca4ee2c760a2726f202a7252e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=eabc0720a672a70ca4ee2c760a2726f202a7252e", "patch": "@@ -355,6 +355,12 @@ pub fn suggest_constraining_type_params<'a>(\n         ));\n     }\n \n+    // FIXME: remove the suggestions that are from derive, as the span is not correct\n+    suggestions = suggestions\n+        .into_iter()\n+        .filter(|(span, _, _)| !span.in_derive_expansion())\n+        .collect::<Vec<_>>();\n+\n     if suggestions.len() == 1 {\n         let (span, suggestion, msg) = suggestions.pop().unwrap();\n "}, {"sha": "0de59d005731d91b4fb86f920abe0eb29c4b1a7b", "filename": "src/test/ui/proc-macro/auxiliary/issue-104884.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/eabc0720a672a70ca4ee2c760a2726f202a7252e/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-104884.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eabc0720a672a70ca4ee2c760a2726f202a7252e/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-104884.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-104884.rs?ref=eabc0720a672a70ca4ee2c760a2726f202a7252e", "patch": "@@ -0,0 +1,23 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(AddImpl)]\n+\n+pub fn derive(input: TokenStream) -> TokenStream {\n+    \"use std::cmp::Ordering;\n+\n+    impl<T> Ord for PriorityQueue<T> {\n+        fn cmp(&self, other: &Self) -> Ordering {\n+            self.0.cmp(&self.height)\n+        }\n+    }\n+    \"\n+    .parse()\n+    .unwrap()\n+}"}, {"sha": "a0d619c456644b6c1af6cb8a5f3adcbd68e2864e", "filename": "src/test/ui/proc-macro/issue-104884-trait-impl-sugg-err.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eabc0720a672a70ca4ee2c760a2726f202a7252e/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eabc0720a672a70ca4ee2c760a2726f202a7252e/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.rs?ref=eabc0720a672a70ca4ee2c760a2726f202a7252e", "patch": "@@ -0,0 +1,20 @@\n+// aux-build:issue-104884.rs\n+\n+use std::collections::BinaryHeap;\n+\n+#[macro_use]\n+extern crate issue_104884;\n+\n+#[derive(PartialEq, Eq, PartialOrd, Ord)]\n+struct PriorityQueueEntry<T> {\n+    value: T,\n+}\n+\n+#[derive(PartialOrd, AddImpl)]\n+//~^ ERROR can't compare `PriorityQueue<T>` with `PriorityQueue<T>`\n+//~| ERROR the trait bound `PriorityQueue<T>: Eq` is not satisfied\n+//~| ERROR can't compare `T` with `T`\n+\n+struct PriorityQueue<T>(BinaryHeap<PriorityQueueEntry<T>>);\n+\n+fn main() {}"}, {"sha": "ac49e04e3c0a9ed21ddafd652569e9b9c48454be", "filename": "src/test/ui/proc-macro/issue-104884-trait-impl-sugg-err.stderr", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/eabc0720a672a70ca4ee2c760a2726f202a7252e/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eabc0720a672a70ca4ee2c760a2726f202a7252e/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.stderr?ref=eabc0720a672a70ca4ee2c760a2726f202a7252e", "patch": "@@ -0,0 +1,48 @@\n+error[E0277]: can't compare `PriorityQueue<T>` with `PriorityQueue<T>`\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:10\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |          ^^^^^^^^^^ no implementation for `PriorityQueue<T> == PriorityQueue<T>`\n+   |\n+   = help: the trait `PartialEq` is not implemented for `PriorityQueue<T>`\n+note: required by a bound in `PartialOrd`\n+  --> $SRC_DIR/core/src/cmp.rs:LL:COL\n+   |\n+LL | pub trait PartialOrd<Rhs: ?Sized = Self>: PartialEq<Rhs> {\n+   |                                           ^^^^^^^^^^^^^^ required by this bound in `PartialOrd`\n+   = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0277]: the trait bound `PriorityQueue<T>: Eq` is not satisfied\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:22\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |                      ^^^^^^^ the trait `Eq` is not implemented for `PriorityQueue<T>`\n+   |\n+note: required by a bound in `Ord`\n+  --> $SRC_DIR/core/src/cmp.rs:LL:COL\n+   |\n+LL | pub trait Ord: Eq + PartialOrd<Self> {\n+   |                ^^ required by this bound in `Ord`\n+   = note: this error originates in the derive macro `AddImpl` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0277]: can't compare `T` with `T`\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:22\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |                      ^^^^^^^ no implementation for `T < T` and `T > T`\n+   |\n+note: required for `PriorityQueue<T>` to implement `PartialOrd`\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:10\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |          ^^^^^^^^^^\n+note: required by a bound in `Ord`\n+  --> $SRC_DIR/core/src/cmp.rs:LL:COL\n+   |\n+LL | pub trait Ord: Eq + PartialOrd<Self> {\n+   |                     ^^^^^^^^^^^^^^^^ required by this bound in `Ord`\n+   = note: this error originates in the derive macro `AddImpl` which comes from the expansion of the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}