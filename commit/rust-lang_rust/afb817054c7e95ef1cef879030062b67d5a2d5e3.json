{"sha": "afb817054c7e95ef1cef879030062b67d5a2d5e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYjgxNzA1NGM3ZTk1ZWYxY2VmODc5MDMwMDYyYjY3ZDVhMmQ1ZTM=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-11-14T21:54:45Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-11-14T22:03:57Z"}, "message": "Move likely/unlikely argument outside of invisible unsafe block\n\nThe previous `likely!`/`unlikely!` macros were unsound because it\npermits the caller's expr to contain arbitrary unsafe code.\n\n    pub fn huh() -> bool {\n        likely!(std::ptr::read(&() as *const () as *const bool))\n    }\n\nBefore: compiles cleanly.\nAfter:\n\n    error[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n       |\n    70 |     likely!(std::ptr::read(&() as *const () as *const bool))\n       |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n       |\n       = note: consult the function's documentation for information on how to avoid undefined behavior", "tree": {"sha": "7ba709e5e10ee2ba71cc11512c3ca9119e69905e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ba709e5e10ee2ba71cc11512c3ca9119e69905e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afb817054c7e95ef1cef879030062b67d5a2d5e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl+wVGYACgkQ+boUO5X/\nbYKi5Q//YHkrozOF3CtLWEPaSz8DtivJNcNDYXR2+Mm1jFMgMBMV7DW9dJYQ6mwX\nCnYZmjkIUiqQ4HohEizOsOGvubYa8TPTDME4rxcsVsi+wTVkGSEkfKeCPP97ARzP\nTiEt7icONuSVSX52Ho+8owS8y6CJf9ew1wDNcdnNYf76Iow4iktuqrQtSIRYPuHb\ne7dfXGQ66+NhHbMneTwx9YREc05mhhr1OGhlfC6lFTP8icO1EEfJ6CP+AFu+zL4g\nid69z5p7PzA1TtZmy6tKXaXHQ0ZwBXV+q8kPBVM5++hulYuXZc0Dms2EAdAAGy7O\n0BgZsznR68v9kKm5r8CiJRHCsY+ie+doAxJXbniIx/+0neqF/4DFcI80QaBeiF8l\nkrsDyELSc6fxALforMCzoRHtqIGDFNpKSpLfR0At9zq0S3QcAXP0DgRcIqz5mGmu\nrfffBSNZtvFqbgy5/AnF4zIupSVm87Pi/H8Zct/lNUGBMln8cqWOiL+7peK20tjE\nCYAaA1t8C2XQqq+omc6M3rBm/36dwHRfYhrOrxa4ZZJwEoKkkChlIMY/w9OzR9MN\nrZHRbeLRPX7iavCD4B5ngEqXgCuAPo14U5VMTCk2M6vKvkRT6e+0LL2VVpzfuQX7\nH5IJ3bpZ4Nf15Ol1ymnRevGBkjbL8TIrePU1NJhrAFliRZi/xd8=\n=yyk3\n-----END PGP SIGNATURE-----", "payload": "tree 7ba709e5e10ee2ba71cc11512c3ca9119e69905e\nparent 98d66340d6e63eda115afc8b0da1d87965881936\nauthor David Tolnay <dtolnay@gmail.com> 1605390885 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1605391437 -0800\n\nMove likely/unlikely argument outside of invisible unsafe block\n\nThe previous `likely!`/`unlikely!` macros were unsound because it\npermits the caller's expr to contain arbitrary unsafe code.\n\n    pub fn huh() -> bool {\n        likely!(std::ptr::read(&() as *const () as *const bool))\n    }\n\nBefore: compiles cleanly.\nAfter:\n\n    error[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n       |\n    70 |     likely!(std::ptr::read(&() as *const () as *const bool))\n       |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n       |\n       = note: consult the function's documentation for information on how to avoid undefined behavior\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afb817054c7e95ef1cef879030062b67d5a2d5e3", "html_url": "https://github.com/rust-lang/rust/commit/afb817054c7e95ef1cef879030062b67d5a2d5e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afb817054c7e95ef1cef879030062b67d5a2d5e3/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98d66340d6e63eda115afc8b0da1d87965881936", "url": "https://api.github.com/repos/rust-lang/rust/commits/98d66340d6e63eda115afc8b0da1d87965881936", "html_url": "https://github.com/rust-lang/rust/commit/98d66340d6e63eda115afc8b0da1d87965881936"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "50a3c85e98aa39bf611165c2d9a89849c6e99eae", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/afb817054c7e95ef1cef879030062b67d5a2d5e3/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afb817054c7e95ef1cef879030062b67d5a2d5e3/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=afb817054c7e95ef1cef879030062b67d5a2d5e3", "patch": "@@ -47,19 +47,19 @@ pub fn cold_path<F: FnOnce() -> R, R>(f: F) -> R {\n #[macro_export]\n macro_rules! likely {\n     ($e:expr) => {\n-        #[allow(unused_unsafe)]\n-        {\n-            unsafe { std::intrinsics::likely($e) }\n+        match $e {\n+            #[allow(unused_unsafe)]\n+            e => unsafe { std::intrinsics::likely(e) },\n         }\n     };\n }\n \n #[macro_export]\n macro_rules! unlikely {\n     ($e:expr) => {\n-        #[allow(unused_unsafe)]\n-        {\n-            unsafe { std::intrinsics::unlikely($e) }\n+        match $e {\n+            #[allow(unused_unsafe)]\n+            e => unsafe { std::intrinsics::unlikely(e) },\n         }\n     };\n }"}]}