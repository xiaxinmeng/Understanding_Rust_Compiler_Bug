{"sha": "959938e89144435c3a2fb1752527cfb17dd071a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OTkzOGU4OTE0NDQzNWMzYTJmYjE3NTI1MjdjZmIxN2RkMDcxYTQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-08-30T15:38:14Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-08-31T18:10:15Z"}, "message": "Produce the start of an immutable treemap.", "tree": {"sha": "94b3f8f3876e5351a1556305f7eedca35cdc3331", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94b3f8f3876e5351a1556305f7eedca35cdc3331"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/959938e89144435c3a2fb1752527cfb17dd071a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/959938e89144435c3a2fb1752527cfb17dd071a4", "html_url": "https://github.com/rust-lang/rust/commit/959938e89144435c3a2fb1752527cfb17dd071a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/959938e89144435c3a2fb1752527cfb17dd071a4/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6209e844eefe6058fab2c0427e4a6f4ff21dc865", "url": "https://api.github.com/repos/rust-lang/rust/commits/6209e844eefe6058fab2c0427e4a6f4ff21dc865", "html_url": "https://github.com/rust-lang/rust/commit/6209e844eefe6058fab2c0427e4a6f4ff21dc865"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "30ce4bc1b09837c45bd9c9a968fddd80d54c9389", "filename": "src/lib/fun_treemap.rs", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/959938e89144435c3a2fb1752527cfb17dd071a4/src%2Flib%2Ffun_treemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959938e89144435c3a2fb1752527cfb17dd071a4/src%2Flib%2Ffun_treemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffun_treemap.rs?ref=959938e89144435c3a2fb1752527cfb17dd071a4", "patch": "@@ -0,0 +1,81 @@\n+/*\n+A functional key,value store that works on anything.\n+\n+This works using a binary search tree. In the first version, it's a\n+very naive algorithm, but it will probably be updated to be a\n+red-black tree or something else.\n+\n+This is copied and modified from treemap right now. It's missing a lot\n+of features.\n+\n+*/\n+\n+import option::some;\n+import option::none;\n+import option = option::t;\n+\n+export treemap;\n+export init;\n+export insert;\n+export find;\n+export traverse;\n+\n+tag tree_node<@K, @V> {\n+    empty;\n+    node(@K, @V, @tree_node<K, V>, @tree_node<K, V>);\n+}\n+\n+type treemap<@K, @V> = @tree_node<K, V>;\n+\n+fn init<@K, @V>() -> treemap<K, V> { @empty }\n+\n+fn insert<@K, @V>(m : &treemap<K, V>, k : &K, v : &V) -> treemap<K,V> {\n+    @alt m {\n+      @empty. {\n+        node(@k, @v, @empty, @empty)\n+      }\n+      @node(@kk, vv, left, right) {\n+        if k < kk {\n+            node(@kk, vv, insert(left, k, v), right)\n+        } else if k == kk {\n+            node(@kk, @v, left, right)\n+        } else {\n+            node(@kk, vv, left, insert(right, k, v))\n+        }\n+      }\n+    }\n+}\n+\n+fn find<@K, @V>(m : &treemap<K, V>, k : &K) -> option<V> {\n+  alt *m {\n+    empty. { none }\n+    node(@kk, @v, left, right) {\n+      if k == kk { some(v) }\n+      else if k < kk { find(left, k) }\n+      else { find(right, k) }\n+    }\n+  }\n+}\n+\n+\n+// Performs an in-order traversal\n+fn traverse<@K, @V>(m : &treemap<K, V>, f : fn(&K, &V)) {\n+  alt *m {\n+    empty. { }\n+    node(@k, @v, _, _) {\n+      // copy v to make aliases work out\n+      let v1 = v;\n+      alt *m {\n+        node(_, _, left, _) {\n+          traverse(left, f);\n+        }\n+      }\n+      f(k, v1);\n+      alt *m {\n+        node(_, _, _, right) {\n+          traverse(right, f);\n+        }\n+      }\n+    }\n+  }\n+}"}, {"sha": "d07ee097023880db8fb9fd1068553fd1c5567376", "filename": "src/lib/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/959938e89144435c3a2fb1752527cfb17dd071a4/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/959938e89144435c3a2fb1752527cfb17dd071a4/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=959938e89144435c3a2fb1752527cfb17dd071a4", "patch": "@@ -76,6 +76,7 @@ mod net;\n // FIXME: parametric\n mod map;\n mod treemap;\n+mod fun_treemap;\n mod deque;\n mod list;\n mod rand;"}]}