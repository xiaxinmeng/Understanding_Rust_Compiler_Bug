{"sha": "6bd64fc4d59e0deea4ff11629235eed98c89013f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZDY0ZmM0ZDU5ZTBkZWVhNGZmMTE2MjkyMzVlZWQ5OGM4OTAxM2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-11T21:02:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-11T21:02:44Z"}, "message": "Auto merge of #988 - RalfJung:temp, r=RalfJung\n\nuse temp_dir for FS test\n\nCc @christianpoveda", "tree": {"sha": "55663cb62a7e8416841aa4d52597620bbb67eae2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55663cb62a7e8416841aa4d52597620bbb67eae2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bd64fc4d59e0deea4ff11629235eed98c89013f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bd64fc4d59e0deea4ff11629235eed98c89013f", "html_url": "https://github.com/rust-lang/rust/commit/6bd64fc4d59e0deea4ff11629235eed98c89013f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bd64fc4d59e0deea4ff11629235eed98c89013f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a2776e465c2244f77ff69a128bf4131d7fb4fab", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a2776e465c2244f77ff69a128bf4131d7fb4fab", "html_url": "https://github.com/rust-lang/rust/commit/6a2776e465c2244f77ff69a128bf4131d7fb4fab"}, {"sha": "9082092a71edf130aecbde147a5b27b2a50e1fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9082092a71edf130aecbde147a5b27b2a50e1fd7", "html_url": "https://github.com/rust-lang/rust/commit/9082092a71edf130aecbde147a5b27b2a50e1fd7"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "212e5e27d8aa8226a09af705272a2f505c61b740", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6bd64fc4d59e0deea4ff11629235eed98c89013f/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bd64fc4d59e0deea4ff11629235eed98c89013f/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=6bd64fc4d59e0deea4ff11629235eed98c89013f", "patch": "@@ -5,26 +5,26 @@ use std::fs::{File, remove_file};\n use std::io::{Read, Write};\n \n fn main() {\n-    let path = \"miri_test_fs.txt\";\n+    let path = std::env::temp_dir().join(\"miri_test_fs.txt\");\n     let bytes = b\"Hello, World!\\n\";\n     // Test creating, writing and closing a file (closing is tested when `file` is dropped).\n-    let mut file = File::create(path).unwrap();\n+    let mut file = File::create(&path).unwrap();\n     // Writing 0 bytes should not change the file contents.\n     file.write(&mut []).unwrap();\n \n     file.write(bytes).unwrap();\n     // Test opening, reading and closing a file.\n-    let mut file = File::open(path).unwrap();\n+    let mut file = File::open(&path).unwrap();\n     let mut contents = Vec::new();\n     // Reading 0 bytes should not move the file pointer.\n     file.read(&mut []).unwrap();\n     // Reading until EOF should get the whole text.\n     file.read_to_end(&mut contents).unwrap();\n     assert_eq!(bytes, contents.as_slice());\n     // Removing file should succeed\n-    remove_file(path).unwrap();\n+    remove_file(&path).unwrap();\n     // Opening non-existing file should fail\n-    assert!(File::open(path).is_err());\n+    assert!(File::open(&path).is_err());\n     // Removing non-existing file should fail\n-    assert!(remove_file(path).is_err());\n+    assert!(remove_file(&path).is_err());\n }"}]}