{"sha": "9f27a13f5f620d1fcdc810b82033cee55804c3be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMjdhMTNmNWY2MjBkMWZjZGM4MTBiODIwMzNjZWU1NTgwNGMzYmU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-10T08:21:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-10T08:21:18Z"}, "message": "fix copy_nonoverlapping", "tree": {"sha": "4d41fb4a8952ce7fb32f051b37e14bebeefa6bd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d41fb4a8952ce7fb32f051b37e14bebeefa6bd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f27a13f5f620d1fcdc810b82033cee55804c3be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f27a13f5f620d1fcdc810b82033cee55804c3be", "html_url": "https://github.com/rust-lang/rust/commit/9f27a13f5f620d1fcdc810b82033cee55804c3be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f27a13f5f620d1fcdc810b82033cee55804c3be/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "861872bc453bde79b83ff99d443d035225f10e87", "url": "https://api.github.com/repos/rust-lang/rust/commits/861872bc453bde79b83ff99d443d035225f10e87", "html_url": "https://github.com/rust-lang/rust/commit/861872bc453bde79b83ff99d443d035225f10e87"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "2bed3b2c3adc76e7720d35312ca3f369b281c6a3", "filename": "compiler/rustc_mir/src/interpret/step.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9f27a13f5f620d1fcdc810b82033cee55804c3be/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f27a13f5f620d1fcdc810b82033cee55804c3be/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs?ref=9f27a13f5f620d1fcdc810b82033cee55804c3be", "patch": "@@ -115,11 +115,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n \n             // Call CopyNonOverlapping\n-            CopyNonOverlapping(box rustc_middle::mir::CopyNonOverlapping { dst, src, count }) => {\n-                let count = self.eval_operand(count, None)?;\n-\n+            CopyNonOverlapping(box rustc_middle::mir::CopyNonOverlapping { src, dst, count }) => {\n                 let src = self.eval_operand(src, None)?;\n                 let dst = self.eval_operand(dst, None)?;\n+                let count = self.eval_operand(count, None)?;\n                 self.copy(&src, &dst, &count, /* nonoverlapping */ true)?;\n             }\n \n@@ -160,16 +159,18 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let count = self.read_scalar(&count)?.to_machine_usize(self)?;\n         let layout = self.layout_of(src.layout.ty.builtin_deref(true).unwrap().ty)?;\n         let (size, align) = (layout.size, layout.align.abi);\n+        let size = size.checked_mul(count, self).ok_or_else(|| {\n+            err_ub_format!(\"overflow computing total size of `copy_nonoverlapping`\")\n+        })?;\n+\n+        // Make sure we check both pointers for an access of the total size and aligment,\n+        // *even if* the total size is 0.\n         let src =\n             self.memory.check_ptr_access(self.read_scalar(&src)?.check_init()?, size, align)?;\n \n         let dst =\n             self.memory.check_ptr_access(self.read_scalar(&dst)?.check_init()?, size, align)?;\n \n-        let size = size.checked_mul(count, self).ok_or_else(|| {\n-            err_ub_format!(\"overflow computing total size of `copy_nonoverlapping`\")\n-        })?;\n-\n         if let (Some(src), Some(dst)) = (src, dst) {\n             self.memory.copy(src, dst, size, nonoverlapping)?;\n         }"}]}