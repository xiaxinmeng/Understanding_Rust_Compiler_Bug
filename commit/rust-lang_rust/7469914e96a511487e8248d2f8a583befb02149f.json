{"sha": "7469914e96a511487e8248d2f8a583befb02149f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0Njk5MTRlOTZhNTExNDg3ZTgyNDhkMmY4YTU4M2JlZmIwMjE0OWY=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-15T17:24:52Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-07-13T14:21:43Z"}, "message": "Add str::split_at_mut", "tree": {"sha": "3f3b92e8940ad8690a72bb6c9149e79e9bf70b94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f3b92e8940ad8690a72bb6c9149e79e9bf70b94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7469914e96a511487e8248d2f8a583befb02149f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7469914e96a511487e8248d2f8a583befb02149f", "html_url": "https://github.com/rust-lang/rust/commit/7469914e96a511487e8248d2f8a583befb02149f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7469914e96a511487e8248d2f8a583befb02149f/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9005512a9d84f469b30f0d469ccc401607ce64c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9005512a9d84f469b30f0d469ccc401607ce64c", "html_url": "https://github.com/rust-lang/rust/commit/f9005512a9d84f469b30f0d469ccc401607ce64c"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "306a8ba3e090026aaf6c068559cbd1855d669af4", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=7469914e96a511487e8248d2f8a583befb02149f", "patch": "@@ -793,6 +793,12 @@ impl str {\n         core_str::StrExt::split_at(self, mid)\n     }\n \n+    /// Divide one mutable string slice into two at an index.\n+    #[inline]\n+    pub fn split_at_mut(&mut self, mid: usize) -> (&mut str, &mut str) {\n+        core_str::StrExt::split_at_mut(self, mid)\n+    }\n+\n     /// An iterator over the codepoints of `self`.\n     ///\n     /// # Examples"}, {"sha": "233623b8a5e4eaa11b64d04f49a074aaea976a9e", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=7469914e96a511487e8248d2f8a583befb02149f", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(ascii)]\n #![feature(append)]\n #![feature(bitset)]\n #![feature(bitvec)]"}, {"sha": "66d9569710259b80e841f8e3116d9601f055e8bb", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=7469914e96a511487e8248d2f8a583befb02149f", "patch": "@@ -701,6 +701,18 @@ fn test_split_at() {\n     assert_eq!(b, \"\");\n }\n \n+#[test]\n+fn test_split_at_mut() {\n+    use std::ascii::AsciiExt;\n+    let mut s = \"Hello World\".to_string();\n+    {\n+        let (a, b) = s.split_at_mut(5);\n+        a.make_ascii_uppercase();\n+        b.make_ascii_lowercase();\n+    }\n+    assert_eq!(s, \"HELLO world\");\n+}\n+\n #[test]\n #[should_panic]\n fn test_split_at_boundscheck() {"}, {"sha": "7e4c2ba3be87590256d63b8ae45b02e4b4baa1df", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7469914e96a511487e8248d2f8a583befb02149f/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=7469914e96a511487e8248d2f8a583befb02149f", "patch": "@@ -1279,6 +1279,7 @@ pub trait StrExt {\n         where P::Searcher: ReverseSearcher<'a>;\n     fn find_str<'a, P: Pattern<'a>>(&'a self, pat: P) -> Option<usize>;\n     fn split_at(&self, mid: usize) -> (&str, &str);\n+    fn split_at_mut(&mut self, mid: usize) -> (&mut str, &mut str);\n     fn slice_shift_char<'a>(&'a self) -> Option<(char, &'a str)>;\n     fn subslice_offset(&self, inner: &str) -> usize;\n     fn as_ptr(&self) -> *const u8;\n@@ -1591,6 +1592,20 @@ impl StrExt for str {\n         }\n     }\n \n+    fn split_at_mut(&mut self, mid: usize) -> (&mut str, &mut str) {\n+        // is_char_boundary checks that the index is in [0, .len()]\n+        if self.is_char_boundary(mid) {\n+            let len = self.len();\n+            unsafe {\n+                let self2: &mut str = mem::transmute_copy(&self);\n+                (self.slice_mut_unchecked(0, mid),\n+                 self2.slice_mut_unchecked(mid, len))\n+            }\n+        } else {\n+            slice_error_fail(self, 0, mid)\n+        }\n+    }\n+\n     #[inline]\n     fn slice_shift_char(&self) -> Option<(char, &str)> {\n         if self.is_empty() {"}]}