{"sha": "0b90204bc820ceafda004a5e4baf9f323b70d790", "node_id": "C_kwDOAAsO6NoAKDBiOTAyMDRiYzgyMGNlYWZkYTAwNGE1ZTRiYWY5ZjMyM2I3MGQ3OTA", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-12-06T09:12:59Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-12-06T09:12:59Z"}, "message": "Add tracking issue; make `empty` const too (unstably)", "tree": {"sha": "42de741eec1e8925e3467d9d065bc03f05659a3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42de741eec1e8925e3467d9d065bc03f05659a3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b90204bc820ceafda004a5e4baf9f323b70d790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b90204bc820ceafda004a5e4baf9f323b70d790", "html_url": "https://github.com/rust-lang/rust/commit/0b90204bc820ceafda004a5e4baf9f323b70d790", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b90204bc820ceafda004a5e4baf9f323b70d790/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef7c833c203e3de3785f8cbea3006da6237f730e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef7c833c203e3de3785f8cbea3006da6237f730e", "html_url": "https://github.com/rust-lang/rust/commit/ef7c833c203e3de3785f8cbea3006da6237f730e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "de3b768538527c30c52aca08427a6430f78b0e3c", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0b90204bc820ceafda004a5e4baf9f323b70d790/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b90204bc820ceafda004a5e4baf9f323b70d790/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=0b90204bc820ceafda004a5e4baf9f323b70d790", "patch": "@@ -141,8 +141,8 @@ impl<T, const N: usize> IntoIter<T, N> {\n     /// let r: IntoIter<_, 40> = next_chunk(&mut (10..16)).unwrap_err();\n     /// assert_eq!(r.collect::<Vec<_>>(), vec![10, 11, 12, 13, 14, 15]);\n     /// ```\n-    #[unstable(feature = \"array_into_iter_constructors\", issue = \"88888888\")]\n-    #[rustc_const_unstable(feature = \"array_into_iter_constructors_const\", issue = \"88888888\")]\n+    #[unstable(feature = \"array_into_iter_constructors\", issue = \"91583\")]\n+    #[rustc_const_unstable(feature = \"const_array_into_iter_constructors\", issue = \"91583\")]\n     pub const unsafe fn from_raw_parts(\n         buffer: [MaybeUninit<T>; N],\n         initialized: Range<usize>,\n@@ -202,8 +202,9 @@ impl<T, const N: usize> IntoIter<T, N> {\n     /// assert_eq!(get_bytes(true).collect::<Vec<_>>(), vec![1, 2, 3, 4]);\n     /// assert_eq!(get_bytes(false).collect::<Vec<_>>(), vec![]);\n     /// ```\n-    #[unstable(feature = \"array_into_iter_constructors\", issue = \"88888888\")]\n-    pub fn empty() -> Self {\n+    #[unstable(feature = \"array_into_iter_constructors\", issue = \"91583\")]\n+    #[rustc_const_unstable(feature = \"const_array_into_iter_constructors\", issue = \"91583\")]\n+    pub const fn empty() -> Self {\n         let buffer = MaybeUninit::uninit_array();\n         let initialized = 0..0;\n "}, {"sha": "78383b54c5d1e410b7f02557a0fb6e5852a8869b", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b90204bc820ceafda004a5e4baf9f323b70d790/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b90204bc820ceafda004a5e4baf9f323b70d790/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=0b90204bc820ceafda004a5e4baf9f323b70d790", "patch": "@@ -101,6 +101,7 @@\n #![feature(const_align_of_val)]\n #![feature(const_alloc_layout)]\n #![feature(const_arguments_as_str)]\n+#![feature(const_array_into_iter_constructors)]\n #![feature(const_bigint_helper_methods)]\n #![feature(const_caller_location)]\n #![feature(const_cell_into_inner)]\n@@ -138,6 +139,7 @@\n #![feature(const_type_name)]\n #![feature(const_default_impls)]\n #![feature(duration_consts_float)]\n+#![feature(maybe_uninit_uninit_array)]\n #![feature(ptr_metadata)]\n #![feature(slice_ptr_get)]\n #![feature(str_internals)]"}]}