{"sha": "bdab5cdc6336793968d790b1512fdfeeed2260e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYWI1Y2RjNjMzNjc5Mzk2OGQ3OTBiMTUxMmZkZmVlZWQyMjYwZTQ=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-03-13T09:25:50Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-04-18T00:43:16Z"}, "message": "assert_ne and tracking issue", "tree": {"sha": "2c7b29e2a54d1d896b3597692f08a32df7c03375", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c7b29e2a54d1d896b3597692f08a32df7c03375"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdab5cdc6336793968d790b1512fdfeeed2260e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdab5cdc6336793968d790b1512fdfeeed2260e4", "html_url": "https://github.com/rust-lang/rust/commit/bdab5cdc6336793968d790b1512fdfeeed2260e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdab5cdc6336793968d790b1512fdfeeed2260e4/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56760abf3b0202a74fcfb1b62bc53cfbddd8259c", "url": "https://api.github.com/repos/rust-lang/rust/commits/56760abf3b0202a74fcfb1b62bc53cfbddd8259c", "html_url": "https://github.com/rust-lang/rust/commit/56760abf3b0202a74fcfb1b62bc53cfbddd8259c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "76b629fb1d4cde88a7291a8ff2dc4ee93f5f77a9", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bdab5cdc6336793968d790b1512fdfeeed2260e4/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdab5cdc6336793968d790b1512fdfeeed2260e4/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=bdab5cdc6336793968d790b1512fdfeeed2260e4", "patch": "@@ -1238,11 +1238,11 @@ impl f32 {\n     ///\n     /// ```\n     /// #![feature(float_bits_conv)]\n-    /// assert!((1f32).to_bits() != 1f32 as u32); // to_bits() is not casting!\n+    /// assert_ne!((1f32).to_bits(), 1f32 as u32); // to_bits() is not casting!\n     /// assert_eq!((12.5f32).to_bits(), 0x41480000);\n     ///\n     /// ```\n-    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"0\")]\n+    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"40470\")]\n     #[inline]\n     pub fn to_bits(self) -> u32 {\n         unsafe { ::mem::transmute(self) }\n@@ -1270,7 +1270,7 @@ impl f32 {\n     /// // Example for a signaling NaN value:\n     /// assert_eq!(f32::from_bits(0x7F800001), Err(()));\n     /// ```\n-    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"0\")]\n+    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"40470\")]\n     #[inline]\n     pub fn from_bits(v: u32) -> Result<Self, ()> {\n         match v {"}, {"sha": "f553e580f0fa9e63f9aea8a18541188dfa883ab2", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bdab5cdc6336793968d790b1512fdfeeed2260e4/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdab5cdc6336793968d790b1512fdfeeed2260e4/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=bdab5cdc6336793968d790b1512fdfeeed2260e4", "patch": "@@ -1134,7 +1134,7 @@ impl f64 {\n     /// assert_eq!((12.5f64).to_bits(), 0x4029000000000000);\n     ///\n     /// ```\n-    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"0\")]\n+    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"40470\")]\n     #[inline]\n     pub fn to_bits(self) -> u64 {\n         unsafe { ::mem::transmute(self) }\n@@ -1162,7 +1162,7 @@ impl f64 {\n     /// // Example for a signaling NaN value:\n     /// assert_eq!(f64::from_bits(0x7FF0000000000001), Err(()));\n     /// ```\n-    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"0\")]\n+    #[unstable(feature = \"float_bits_conv\", reason = \"recently added\", issue = \"40470\")]\n     #[inline]\n     pub fn from_bits(v: u64) -> Result<Self, ()> {\n         match v {"}]}