{"sha": "3e7ac2b830f692fd993a9b30b6be96a4206b8229", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlN2FjMmI4MzBmNjkyZmQ5OTNhOWIzMGI2YmU5NmE0MjA2YjgyMjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-06T23:47:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-06T23:47:39Z"}, "message": "Merge #8389\n\n8389: Do not import on the fly during fields of record literal syntax r=SomeoneToIgnore a=memoryruins\n\nWhen only fields are relevant during record literal syntax (`Foo { field_$0 }`), RA already avoids completions of in-scope items, but with `rust-analyzer.completion.enableAutoimportCompletions` enabled, more than field names were eagerly suggested. This PR adds a case to `import_on_the_fly` to avoid the extra completions in this context.\r\n\r\nCloses #8300\n\nCo-authored-by: memoryruins <memoryruinsmusic@gmail.com>", "tree": {"sha": "0067e28fc96755b5b145a6816fea1d4c9f020026", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0067e28fc96755b5b145a6816fea1d4c9f020026"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e7ac2b830f692fd993a9b30b6be96a4206b8229", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgbPMbCRBK7hj4Ov3rIwAAdHIIACMt0DX3cFwsBtS4YEtYCWST\nxgShKxXxEiILXpTdcbTqXFXBQVzHqjGqtC6lsKw6SKNwvXNfjh5Z0/BOdWT7jm9T\nodeO8NpHmrUkZUbD0be45FGtPJvE9GeHW1HOraj4OwaPfyEpCM/m51LomwtG8+EX\nmGMP7sxg9wred+esd3ES4OIFMpD4U47J1cbZkAeXmSDDJKM9+jada2XVvGSHYJ16\n54o3ObOQwSYBZ8qDu1Pj+csZ72I8NcfiO6KRueHYsEj4ykcavXD4Kl7+KoNb6ACa\nrADo3cmBu34xpPziygT8KjUzqmPc9XIstkGakDidGqJF8D9chBGzjxzX4GNGH4I=\n=0fdU\n-----END PGP SIGNATURE-----\n", "payload": "tree 0067e28fc96755b5b145a6816fea1d4c9f020026\nparent a35f7cb6355f00a71a24338eb2d3bfc2920eccb4\nparent e1e6e3b925bf7e0f6ca6cbc0d63d59572752653d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617752859 +0000\ncommitter GitHub <noreply@github.com> 1617752859 +0000\n\nMerge #8389\n\n8389: Do not import on the fly during fields of record literal syntax r=SomeoneToIgnore a=memoryruins\n\nWhen only fields are relevant during record literal syntax (`Foo { field_$0 }`), RA already avoids completions of in-scope items, but with `rust-analyzer.completion.enableAutoimportCompletions` enabled, more than field names were eagerly suggested. This PR adds a case to `import_on_the_fly` to avoid the extra completions in this context.\r\n\r\nCloses #8300\n\nCo-authored-by: memoryruins <memoryruinsmusic@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7ac2b830f692fd993a9b30b6be96a4206b8229", "html_url": "https://github.com/rust-lang/rust/commit/3e7ac2b830f692fd993a9b30b6be96a4206b8229", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e7ac2b830f692fd993a9b30b6be96a4206b8229/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a35f7cb6355f00a71a24338eb2d3bfc2920eccb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a35f7cb6355f00a71a24338eb2d3bfc2920eccb4", "html_url": "https://github.com/rust-lang/rust/commit/a35f7cb6355f00a71a24338eb2d3bfc2920eccb4"}, {"sha": "e1e6e3b925bf7e0f6ca6cbc0d63d59572752653d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1e6e3b925bf7e0f6ca6cbc0d63d59572752653d", "html_url": "https://github.com/rust-lang/rust/commit/e1e6e3b925bf7e0f6ca6cbc0d63d59572752653d"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "9ace13e41176b0590be7526a59067bcfb7667f73", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3e7ac2b830f692fd993a9b30b6be96a4206b8229/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7ac2b830f692fd993a9b30b6be96a4206b8229/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=3e7ac2b830f692fd993a9b30b6be96a4206b8229", "patch": "@@ -113,6 +113,7 @@ pub(crate) fn import_on_the_fly(acc: &mut Completions, ctx: &CompletionContext)\n     if ctx.use_item_syntax.is_some()\n         || ctx.attribute_under_caret.is_some()\n         || ctx.mod_declaration_under_caret.is_some()\n+        || ctx.record_lit_syntax.is_some()\n     {\n         return None;\n     }\n@@ -1034,4 +1035,46 @@ fn main() {\n             expect![[]],\n         );\n     }\n+\n+    #[test]\n+    fn no_fuzzy_during_fields_of_record_lit_syntax() {\n+        check(\n+            r#\"\n+mod m {\n+    pub fn some_fn() -> i32 {\n+        42\n+    }\n+}\n+struct Foo {\n+    some_field: i32,\n+}\n+fn main() {\n+    let _ = Foo { so$0 };\n+}\n+\"#,\n+            expect![[]],\n+        );\n+    }\n+\n+    #[test]\n+    fn fuzzy_after_fields_of_record_lit_syntax() {\n+        check(\n+            r#\"\n+mod m {\n+    pub fn some_fn() -> i32 {\n+        42\n+    }\n+}\n+struct Foo {\n+    some_field: i32,\n+}\n+fn main() {\n+    let _ = Foo { some_field: so$0 };\n+}\n+\"#,\n+            expect![[r#\"\n+                fn some_fn() (m::some_fn) fn() -> i32\n+            \"#]],\n+        );\n+    }\n }"}]}