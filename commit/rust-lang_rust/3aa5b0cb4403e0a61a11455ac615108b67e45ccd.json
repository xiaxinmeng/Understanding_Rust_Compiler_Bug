{"sha": "3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYTViMGNiNDQwM2UwYTYxYTExNDU1YWM2MTUxMDhiNjdlNDVjY2Q=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-09-11T17:26:23Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-09-11T20:59:57Z"}, "message": "Make moves explicit in rustc", "tree": {"sha": "414edd3bae29c282461636be934f3e2489efef06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/414edd3bae29c282461636be934f3e2489efef06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "html_url": "https://github.com/rust-lang/rust/commit/3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a865401f580863c67b9dd0e44a0192f21817c7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a865401f580863c67b9dd0e44a0192f21817c7c", "html_url": "https://github.com/rust-lang/rust/commit/4a865401f580863c67b9dd0e44a0192f21817c7c"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "44d62e8d92699d9ef1ac6866cec5bc270e51cb4f", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -125,7 +125,7 @@ fn time<T>(do_it: bool, what: ~str, thunk: fn() -> T) -> T {\n     let end = std::time::precise_time_s();\n     io::stdout().write_str(fmt!(\"time: %3.3f s\\t%s\\n\",\n                                 end - start, what));\n-    return rv;\n+    move rv\n }\n \n enum compile_upto {"}, {"sha": "68278c6deb7e61eb8c94faf0289d461c01fdd88e", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -1103,7 +1103,7 @@ fn encode_metadata(parms: encode_parms, crate: @crate) -> ~[u8] {\n         diag: parms.diag,\n         tcx: parms.tcx,\n         buf: buf,\n-        stats: stats,\n+        stats: move stats,\n         reachable: parms.reachable,\n         reexports: parms.reexports,\n         reexports2: parms.reexports2,"}, {"sha": "bc237bab3152ef6fed2d61116e0fb21e7d7f1ecc", "filename": "src/rustc/middle/borrowck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Fborrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Fborrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fborrowck.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -400,7 +400,7 @@ fn save_and_restore<T:Copy,U>(&save_and_restore_t: T, f: fn() -> U) -> U {\n     let old_save_and_restore_t = save_and_restore_t;\n     let u <- f();\n     save_and_restore_t = old_save_and_restore_t;\n-    return u;\n+    move u\n }\n \n /// Creates and returns a new root_map"}, {"sha": "30e7f170b26201aac638603d20d12768803a5cff", "filename": "src/rustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fliveness.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -1466,7 +1466,7 @@ impl Liveness {\n         let r <- f();\n         self.break_ln = bl;\n         self.cont_ln = cl;\n-        return r;\n+        move r\n     }\n }\n "}, {"sha": "1d32d4bc3dc6ce5f253e19f162f9d7dd72f7c27a", "filename": "src/rustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -728,7 +728,7 @@ fn Resolver(session: session, lang_items: LanguageItems,\n         intr: session.intr()\n     };\n \n-    return self;\n+    move self\n }\n \n /// The main resolver class."}, {"sha": "74904fdb8ca8895aaca0760cf13bfbe4523c0282", "filename": "src/rustc/middle/trans/foreign.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -256,27 +256,27 @@ fn classify_ty(ty: TypeRef) -> ~[x86_64_reg_class] {\n                 if cls[i] == sseup_class {\n                     cls[i] = sse_int_class;\n                 } else if is_sse(cls[i]) {\n-                    i += 1u;\n+                    i += 1;\n                     while cls[i] == sseup_class { i += 1u; }\n                 } else if cls[i] == x87_class {\n-                    i += 1u;\n+                    i += 1;\n                     while cls[i] == x87up_class { i += 1u; }\n                 } else {\n-                    i += 1u;\n+                    i += 1;\n                 }\n             }\n         }\n     }\n \n-    let words = (ty_size(ty) + 7u) / 8u;\n+    let words = (ty_size(ty) + 7) / 8;\n     let cls = vec::to_mut(vec::from_elem(words, no_class));\n-    if words > 4u {\n+    if words > 4 {\n         all_mem(cls);\n-        return vec::from_mut(cls);\n+        return vec::from_mut(move cls);\n     }\n-    classify(ty, cls, 0u, 0u);\n+    classify(ty, cls, 0, 0);\n     fixup(ty, cls);\n-    return vec::from_mut(cls);\n+    return vec::from_mut(move cls);\n }\n \n fn llreg_ty(cls: ~[x86_64_reg_class]) -> TypeRef {"}, {"sha": "b179a336a4f721943daa4ac4722e2f80b04b01fe", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -740,7 +740,7 @@ impl @fn_ctxt {\n         self.region_lb = lb;\n         let v <- f();\n         self.region_lb = old_region_lb;\n-        return v;\n+        move v\n     }\n \n     fn region_var_if_parameterized(rp: Option<ty::region_variance>,"}, {"sha": "9a4689506c0d27e36cc96a0bad8ab1ba681996ba", "filename": "src/rustc/middle/typeck/check/regionck.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -92,18 +92,18 @@ impl @rcx {\n }\n \n fn regionck_expr(fcx: @fn_ctxt, e: @ast::expr) {\n-    let rcx = rcx_({fcx:fcx, mut errors_reported: 0u});\n+    let rcx = rcx_({fcx:fcx, mut errors_reported: 0});\n     let v = regionck_visitor();\n-    v.visit_expr(e, @rcx, v);\n+    v.visit_expr(e, @(move rcx), v);\n     fcx.infcx().resolve_regions();\n }\n \n fn regionck_fn(fcx: @fn_ctxt,\n                _decl: ast::fn_decl,\n                blk: ast::blk) {\n-    let rcx = rcx_({fcx:fcx, mut errors_reported: 0u});\n+    let rcx = rcx_({fcx:fcx, mut errors_reported: 0});\n     let v = regionck_visitor();\n-    v.visit_block(blk, @rcx, v);\n+    v.visit_block(blk, @(move rcx), v);\n     fcx.infcx().resolve_regions();\n }\n "}, {"sha": "ed77217c62561bf9e3fcc32d83552932f9607bd1", "filename": "src/rustc/middle/typeck/infer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -565,7 +565,7 @@ impl infer_ctxt {\n             self.ty_var_bindings.bindings = ~[];\n             self.int_var_bindings.bindings = ~[];\n             self.region_vars.commit();\n-            r\n+            move r\n         }\n     }\n \n@@ -579,7 +579,7 @@ impl infer_ctxt {\n               Ok(_) => (),\n               Err(_) => self.rollback_to(&snapshot)\n             }\n-            r\n+            move r\n         }\n     }\n \n@@ -590,7 +590,7 @@ impl infer_ctxt {\n             let snapshot = self.start_snapshot();\n             let r = self.try(f);\n             self.rollback_to(&snapshot);\n-            r\n+            move r\n         }\n     }\n }"}, {"sha": "282be03c13d902827c5895f95646bc510dd3342d", "filename": "src/rustc/middle/typeck/infer/region_var_bindings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_var_bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_var_bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_var_bindings.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -866,7 +866,7 @@ impl RegionVarBindings {\n             }\n         }\n \n-        return graph;\n+        return (move graph);\n \n         fn insert_edge(graph: &mut Graph,\n                        node_id: RegionVid,"}, {"sha": "4c033515b9a94733ba8f0debcd27313fd3678acf", "filename": "src/rustc/util/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa5b0cb4403e0a61a11455ac615108b67e45ccd/src%2Frustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Futil%2Fcommon.rs?ref=3aa5b0cb4403e0a61a11455ac615108b67e45ccd", "patch": "@@ -11,7 +11,7 @@ fn indent<R>(op: fn() -> R) -> R {\n     debug!(\">>\");\n     let r <- op();\n     debug!(\"<< (Result = %?)\", r);\n-    return r;\n+    move r\n }\n \n struct _indenter {"}]}