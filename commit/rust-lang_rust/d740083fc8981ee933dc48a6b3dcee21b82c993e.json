{"sha": "d740083fc8981ee933dc48a6b3dcee21b82c993e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NDAwODNmYzg5ODFlZTkzM2RjNDhhNmIzZGNlZTIxYjgyYzk5M2U=", "commit": {"author": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-02T21:02:38Z"}, "committer": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-02T21:08:04Z"}, "message": "Support posix_spawn() for Linux glibc 2.24+.\n\nThe relevant support was added in https://sourceware.org/bugzilla/show_bug.cgi?id=10354#c12", "tree": {"sha": "199ec7bb1d8b40705e5be2a5cb001850312b4636", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/199ec7bb1d8b40705e5be2a5cb001850312b4636"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d740083fc8981ee933dc48a6b3dcee21b82c993e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d740083fc8981ee933dc48a6b3dcee21b82c993e", "html_url": "https://github.com/rust-lang/rust/commit/d740083fc8981ee933dc48a6b3dcee21b82c993e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d740083fc8981ee933dc48a6b3dcee21b82c993e/comments", "author": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ba6b3a728fb50cd65237b8eeac2f2df05c3c77f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba6b3a728fb50cd65237b8eeac2f2df05c3c77f", "html_url": "https://github.com/rust-lang/rust/commit/5ba6b3a728fb50cd65237b8eeac2f2df05c3c77f"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "29e33ee822ee5b1f0473a8ba12c344e056e34476", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d740083fc8981ee933dc48a6b3dcee21b82c993e/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d740083fc8981ee933dc48a6b3dcee21b82c993e/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=d740083fc8981ee933dc48a6b3dcee21b82c993e", "patch": "@@ -235,7 +235,8 @@ impl Command {\n         io::Error::last_os_error()\n     }\n \n-    #[cfg(not(any(target_os = \"macos\", target_os = \"freebsd\")))]\n+    #[cfg(not(any(target_os = \"macos\", target_os = \"freebsd\",\n+                  all(target_os = \"linux\", target_env = \"gnu\"))))]\n     fn posix_spawn(&mut self, _: &ChildPipes, _: Option<&CStringArray>)\n         -> io::Result<Option<Process>>\n     {\n@@ -244,7 +245,8 @@ impl Command {\n \n     // Only support platforms for which posix_spawn() can return ENOENT\n     // directly.\n-    #[cfg(any(target_os = \"macos\", target_os = \"freebsd\"))]\n+    #[cfg(any(target_os = \"macos\", target_os = \"freebsd\",\n+              all(target_os = \"linux\", target_env = \"gnu\")))]\n     fn posix_spawn(&mut self, stdio: &ChildPipes, envp: Option<&CStringArray>)\n         -> io::Result<Option<Process>>\n     {\n@@ -258,6 +260,18 @@ impl Command {\n             return Ok(None)\n         }\n \n+        // Only glibc 2.24+ posix_spawn() supports returning ENOENT directly.\n+        #[cfg(all(target_os = \"linux\", target_env = \"gnu\"))]\n+        {\n+            if let Some(version) = sys::os::glibc_version() {\n+                if version < (2, 24) {\n+                    return Ok(None)\n+                }\n+            } else {\n+                return Ok(None)\n+            }\n+        }\n+\n         let mut p = Process { pid: 0, status: None };\n \n         struct PosixSpawnFileActions(libc::posix_spawn_file_actions_t);"}]}