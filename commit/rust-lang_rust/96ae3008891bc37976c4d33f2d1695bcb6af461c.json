{"sha": "96ae3008891bc37976c4d33f2d1695bcb6af461c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YWUzMDA4ODkxYmMzNzk3NmM0ZDMzZjJkMTY5NWJjYjZhZjQ2MWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-22T13:20:20Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-22T13:20:20Z"}, "message": "CTFE get_alloc_extra_mut: also provide ref to MemoryExtra", "tree": {"sha": "bbb543576ed816f63d9557354fd08fe7fd760d10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb543576ed816f63d9557354fd08fe7fd760d10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96ae3008891bc37976c4d33f2d1695bcb6af461c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96ae3008891bc37976c4d33f2d1695bcb6af461c", "html_url": "https://github.com/rust-lang/rust/commit/96ae3008891bc37976c4d33f2d1695bcb6af461c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96ae3008891bc37976c4d33f2d1695bcb6af461c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70cb58ce279444ac0191c4aa6df79becbaf2bdc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/70cb58ce279444ac0191c4aa6df79becbaf2bdc1", "html_url": "https://github.com/rust-lang/rust/commit/70cb58ce279444ac0191c4aa6df79becbaf2bdc1"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "d45ea352028cc72de6f5ba7ff5910092f4d1d65d", "filename": "compiler/rustc_mir/src/interpret/memory.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/96ae3008891bc37976c4d33f2d1695bcb6af461c/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96ae3008891bc37976c4d33f2d1695bcb6af461c/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmemory.rs?ref=96ae3008891bc37976c4d33f2d1695bcb6af461c", "patch": "@@ -673,8 +673,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n     pub fn get_alloc_extra_mut<'a>(\n         &'a mut self,\n         id: AllocId,\n-    ) -> InterpResult<'tcx, &'a mut M::AllocExtra> {\n-        Ok(&mut self.get_raw_mut(id)?.0.extra)\n+    ) -> InterpResult<'tcx, (&'a mut M::AllocExtra, &'a mut M::MemoryExtra)> {\n+        let (alloc, memory_extra) = self.get_raw_mut(id)?;\n+        Ok((&mut alloc.extra, memory_extra))\n     }\n \n     /// Obtain the size and alignment of an allocation, even if that allocation has"}]}