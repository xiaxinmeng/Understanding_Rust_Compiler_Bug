{"sha": "2dcafef621f464e61d7e649ae854d416d704a7c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkY2FmZWY2MjFmNDY0ZTYxZDdlNjQ5YWU4NTRkNDE2ZDcwNGE3YzM=", "commit": {"author": {"name": "jeb", "email": "jeb@jebrosen.com", "date": "2018-06-20T18:19:05Z"}, "committer": {"name": "jeb", "email": "jeb@jebrosen.com", "date": "2018-06-20T18:19:05Z"}, "message": "make `parse_seq_to_before_end`, `mk_mac_expr`, and `parse_optional_str` public in libsyntax", "tree": {"sha": "074bd108a37dc6a72f5bf56af8befc1dd26929dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/074bd108a37dc6a72f5bf56af8befc1dd26929dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dcafef621f464e61d7e649ae854d416d704a7c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dcafef621f464e61d7e649ae854d416d704a7c3", "html_url": "https://github.com/rust-lang/rust/commit/2dcafef621f464e61d7e649ae854d416d704a7c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dcafef621f464e61d7e649ae854d416d704a7c3/comments", "author": {"login": "jebrosen", "id": 7102588, "node_id": "MDQ6VXNlcjcxMDI1ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/7102588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jebrosen", "html_url": "https://github.com/jebrosen", "followers_url": "https://api.github.com/users/jebrosen/followers", "following_url": "https://api.github.com/users/jebrosen/following{/other_user}", "gists_url": "https://api.github.com/users/jebrosen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jebrosen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jebrosen/subscriptions", "organizations_url": "https://api.github.com/users/jebrosen/orgs", "repos_url": "https://api.github.com/users/jebrosen/repos", "events_url": "https://api.github.com/users/jebrosen/events{/privacy}", "received_events_url": "https://api.github.com/users/jebrosen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jebrosen", "id": 7102588, "node_id": "MDQ6VXNlcjcxMDI1ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/7102588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jebrosen", "html_url": "https://github.com/jebrosen", "followers_url": "https://api.github.com/users/jebrosen/followers", "following_url": "https://api.github.com/users/jebrosen/following{/other_user}", "gists_url": "https://api.github.com/users/jebrosen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jebrosen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jebrosen/subscriptions", "organizations_url": "https://api.github.com/users/jebrosen/orgs", "repos_url": "https://api.github.com/users/jebrosen/repos", "events_url": "https://api.github.com/users/jebrosen/events{/privacy}", "received_events_url": "https://api.github.com/users/jebrosen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "637fd2e0487281adac99000602f5e74c3bf151a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/637fd2e0487281adac99000602f5e74c3bf151a8", "html_url": "https://github.com/rust-lang/rust/commit/637fd2e0487281adac99000602f5e74c3bf151a8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "818a176ee658e5eaf6b6ec8c7be7ee9f72c5f3cf", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2dcafef621f464e61d7e649ae854d416d704a7c3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dcafef621f464e61d7e649ae854d416d704a7c3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2dcafef621f464e61d7e649ae854d416d704a7c3", "patch": "@@ -1037,7 +1037,7 @@ impl<'a> Parser<'a> {\n     /// Parse a sequence, not including the closing delimiter. The function\n     /// f must consume tokens until reaching the next separator or\n     /// closing bracket.\n-    fn parse_seq_to_before_end<T, F>(&mut self,\n+    pub fn parse_seq_to_before_end<T, F>(&mut self,\n                                          ket: &token::Token,\n                                          sep: SeqSep,\n                                          f: F)\n@@ -2108,7 +2108,7 @@ impl<'a> Parser<'a> {\n         ExprKind::AssignOp(binop, lhs, rhs)\n     }\n \n-    fn mk_mac_expr(&mut self, span: Span, m: Mac_, attrs: ThinVec<Attribute>) -> P<Expr> {\n+    pub fn mk_mac_expr(&mut self, span: Span, m: Mac_, attrs: ThinVec<Attribute>) -> P<Expr> {\n         P(Expr {\n             id: ast::DUMMY_NODE_ID,\n             node: ExprKind::Mac(codemap::Spanned {node: m, span: span}),\n@@ -7212,7 +7212,7 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n-    fn parse_optional_str(&mut self) -> Option<(Symbol, ast::StrStyle, Option<ast::Name>)> {\n+    pub fn parse_optional_str(&mut self) -> Option<(Symbol, ast::StrStyle, Option<ast::Name>)> {\n         let ret = match self.token {\n             token::Literal(token::Str_(s), suf) => (s, ast::StrStyle::Cooked, suf),\n             token::Literal(token::StrRaw(s, n), suf) => (s, ast::StrStyle::Raw(n), suf),"}]}