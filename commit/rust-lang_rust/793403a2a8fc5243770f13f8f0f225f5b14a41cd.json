{"sha": "793403a2a8fc5243770f13f8f0f225f5b14a41cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MzQwM2EyYThmYzUyNDM3NzBmMTNmOGYwZjIyNWY1YjE0YTQxY2Q=", "commit": {"author": {"name": "pmk21", "email": "prithvikrishna49@gmail.com", "date": "2020-03-31T10:19:49Z"}, "committer": {"name": "pmk21", "email": "prithvikrishna49@gmail.com", "date": "2020-03-31T10:19:49Z"}, "message": "Added test for single_match_else in macro", "tree": {"sha": "fb0e4024ff99f2c829eac1895110536c1b40a71e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb0e4024ff99f2c829eac1895110536c1b40a71e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/793403a2a8fc5243770f13f8f0f225f5b14a41cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/793403a2a8fc5243770f13f8f0f225f5b14a41cd", "html_url": "https://github.com/rust-lang/rust/commit/793403a2a8fc5243770f13f8f0f225f5b14a41cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/793403a2a8fc5243770f13f8f0f225f5b14a41cd/comments", "author": {"login": "pmk21", "id": 32909711, "node_id": "MDQ6VXNlcjMyOTA5NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/32909711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmk21", "html_url": "https://github.com/pmk21", "followers_url": "https://api.github.com/users/pmk21/followers", "following_url": "https://api.github.com/users/pmk21/following{/other_user}", "gists_url": "https://api.github.com/users/pmk21/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmk21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmk21/subscriptions", "organizations_url": "https://api.github.com/users/pmk21/orgs", "repos_url": "https://api.github.com/users/pmk21/repos", "events_url": "https://api.github.com/users/pmk21/events{/privacy}", "received_events_url": "https://api.github.com/users/pmk21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmk21", "id": 32909711, "node_id": "MDQ6VXNlcjMyOTA5NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/32909711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmk21", "html_url": "https://github.com/pmk21", "followers_url": "https://api.github.com/users/pmk21/followers", "following_url": "https://api.github.com/users/pmk21/following{/other_user}", "gists_url": "https://api.github.com/users/pmk21/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmk21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmk21/subscriptions", "organizations_url": "https://api.github.com/users/pmk21/orgs", "repos_url": "https://api.github.com/users/pmk21/repos", "events_url": "https://api.github.com/users/pmk21/events{/privacy}", "received_events_url": "https://api.github.com/users/pmk21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba6a3280f52c2ad6a6bec5e8792ecd0ce2006062", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba6a3280f52c2ad6a6bec5e8792ecd0ce2006062", "html_url": "https://github.com/rust-lang/rust/commit/ba6a3280f52c2ad6a6bec5e8792ecd0ce2006062"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "34193be0b75e40b978ae7661c3ab944fe1fd5b90", "filename": "tests/ui/single_match_else.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/793403a2a8fc5243770f13f8f0f225f5b14a41cd/tests%2Fui%2Fsingle_match_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/793403a2a8fc5243770f13f8f0f225f5b14a41cd/tests%2Fui%2Fsingle_match_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.rs?ref=793403a2a8fc5243770f13f8f0f225f5b14a41cd", "patch": "@@ -18,4 +18,18 @@ fn unwrap_addr() -> Option<&'static ExprNode> {\n     }\n }\n \n-fn main() {}\n+macro_rules! unwrap_addr {\n+    ($expression:expr) => {\n+        match $expression {\n+            ExprNode::ExprAddrOf => Some(&NODE),\n+            _ => {\n+                let x = 5;\n+                None\n+            },\n+        }\n+    };\n+}\n+\n+fn main() {\n+    unwrap_addr!(ExprNode::Unicorns);\n+}"}]}