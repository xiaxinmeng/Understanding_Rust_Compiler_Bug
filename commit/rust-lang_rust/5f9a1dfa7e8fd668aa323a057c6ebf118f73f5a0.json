{"sha": "5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmOWExZGZhN2U4ZmQ2NjhhYTMyM2EwNTdjNmViZjExOGY3M2Y1YTA=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-07-17T14:05:55Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-07-17T15:54:02Z"}, "message": "[ios] std: avoid `result::fold`", "tree": {"sha": "f003bbe65320f8db01c51cc03b14bbdccf95dad6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f003bbe65320f8db01c51cc03b14bbdccf95dad6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0", "html_url": "https://github.com/rust-lang/rust/commit/5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4e93196e16030ebf7a20c473849534235d676f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e93196e16030ebf7a20c473849534235d676f8", "html_url": "https://github.com/rust-lang/rust/commit/e4e93196e16030ebf7a20c473849534235d676f8"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "ed6421f3670eb8ee3df03e7698aa3d1cd86a2be3", "filename": "src/libstd/sys/unix/backtrace.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs?ref=5f9a1dfa7e8fd668aa323a057c6ebf118f73f5a0", "patch": "@@ -107,8 +107,6 @@ use sys_common::backtrace::*;\n #[cfg(all(target_os = \"ios\", target_arch = \"arm\"))]\n #[inline(never)]\n pub fn write(w: &mut Write) -> io::Result<()> {\n-    use result;\n-\n     extern {\n         fn backtrace(buf: *mut *mut libc::c_void,\n                      sz: libc::c_int) -> libc::c_int;\n@@ -127,10 +125,10 @@ pub fn write(w: &mut Write) -> io::Result<()> {\n     let cnt = unsafe { backtrace(buf.as_mut_ptr(), SIZE as libc::c_int) as usize};\n \n     // skipping the first one as it is write itself\n-    let iter = (1..cnt).map(|i| {\n-        print(w, i as isize, buf[i], buf[i])\n-    });\n-    result::fold(iter, (), |_, _| ())\n+    for i in 1..cnt {\n+        try!(print(w, i as isize, buf[i], buf[i]))\n+    }\n+    Ok(())\n }\n \n #[cfg(not(all(target_os = \"ios\", target_arch = \"arm\")))]"}]}