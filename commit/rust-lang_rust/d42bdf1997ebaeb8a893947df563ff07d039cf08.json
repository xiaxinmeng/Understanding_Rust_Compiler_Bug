{"sha": "d42bdf1997ebaeb8a893947df563ff07d039cf08", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MmJkZjE5OTdlYmFlYjhhODkzOTQ3ZGY1NjNmZjA3ZDAzOWNmMDg=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-12T03:15:12Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-12T03:17:31Z"}, "message": "Auto-deref when checking field and method privacy\n\nThis disallows using pointers to sneak around priv qualifiers.\n\nDeeming this too small for review as well. Closes #3763", "tree": {"sha": "5c0f15fc99198056b5bcb1c069f9bff32cb8d848", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c0f15fc99198056b5bcb1c069f9bff32cb8d848"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d42bdf1997ebaeb8a893947df563ff07d039cf08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d42bdf1997ebaeb8a893947df563ff07d039cf08", "html_url": "https://github.com/rust-lang/rust/commit/d42bdf1997ebaeb8a893947df563ff07d039cf08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d42bdf1997ebaeb8a893947df563ff07d039cf08/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7159be24a9c81517a46e09c7ff62cadc72759b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7159be24a9c81517a46e09c7ff62cadc72759b6", "html_url": "https://github.com/rust-lang/rust/commit/a7159be24a9c81517a46e09c7ff62cadc72759b6"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "78c423b791d57727ac11689c5e444fe15077f9d0", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d42bdf1997ebaeb8a893947df563ff07d039cf08/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42bdf1997ebaeb8a893947df563ff07d039cf08/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=d42bdf1997ebaeb8a893947df563ff07d039cf08", "patch": "@@ -199,7 +199,10 @@ fn check_crate(tcx: ty::ctxt, method_map: &method_map, crate: @ast::crate) {\n         visit_expr: |expr, method_map: &method_map, visitor| {\n             match expr.node {\n                 expr_field(base, ident, _) => {\n-                    match ty::get(ty::expr_ty(tcx, base)).sty {\n+                    // With type_autoderef, make sure we don't\n+                    // allow pointers to violate privacy\n+                    match ty::get(ty::type_autoderef(tcx, ty::expr_ty(tcx,\n+                                                          base))).sty {\n                         ty_struct(id, _)\n                         if id.crate != local_crate ||\n                            !privileged_items.contains(&(id.node)) => {\n@@ -220,7 +223,9 @@ fn check_crate(tcx: ty::ctxt, method_map: &method_map, crate: @ast::crate) {\n                     }\n                 }\n                 expr_method_call(base, _, _, _, _) => {\n-                    match ty::get(ty::expr_ty(tcx, base)).sty {\n+                    // Ditto\n+                    match ty::get(ty::type_autoderef(tcx, ty::expr_ty(tcx,\n+                                                          base))).sty {\n                         ty_struct(id, _)\n                         if id.crate != local_crate ||\n                            !privileged_items.contains(&(id.node)) => {"}, {"sha": "ea4b70c3c290844efa2016f0941468d47ec84f0c", "filename": "src/test/compile-fail/issue-3763.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d42bdf1997ebaeb8a893947df563ff07d039cf08/src%2Ftest%2Fcompile-fail%2Fissue-3763.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42bdf1997ebaeb8a893947df563ff07d039cf08/src%2Ftest%2Fcompile-fail%2Fissue-3763.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3763.rs?ref=d42bdf1997ebaeb8a893947df563ff07d039cf08", "patch": "@@ -8,20 +8,25 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-test\n mod my_mod {\n     pub struct MyStruct {\n         priv priv_field: int\n     }\n     pub fn MyStruct () -> MyStruct {\n         MyStruct {priv_field: 4}\n     }\n+    impl MyStruct {\n+        priv fn happyfun() {}\n+    }\n }\n \n fn main() {\n     let my_struct = my_mod::MyStruct();\n-    let _woohoo = (&my_struct).priv_field; // compiles but shouldn't\n-    let _woohoo = (~my_struct).priv_field; // ditto\n-    let _woohoo = (@my_struct).priv_field; // ditto\n-   // let nope = my_struct.priv_field;       // compile error as expected\n+    let _woohoo = (&my_struct).priv_field; //~ ERROR field `priv_field` is private\n+    let _woohoo = (~my_struct).priv_field; //~ ERROR field `priv_field` is private\n+    let _woohoo = (@my_struct).priv_field; //~ ERROR field `priv_field` is private\n+    (&my_struct).happyfun();               //~ ERROR method `happyfun` is private\n+    (~my_struct).happyfun();               //~ ERROR method `happyfun` is private\n+    (@my_struct).happyfun();               //~ ERROR method `happyfun` is private\n+    let nope = my_struct.priv_field;       //~ ERROR field `priv_field` is private\n }"}]}