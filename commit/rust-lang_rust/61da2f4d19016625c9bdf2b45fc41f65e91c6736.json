{"sha": "61da2f4d19016625c9bdf2b45fc41f65e91c6736", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZGEyZjRkMTkwMTY2MjVjOWJkZjJiNDVmYzQxZjY1ZTkxYzY3MzY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-06T06:17:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-06T06:17:41Z"}, "message": "Rollup merge of #63264 - arielb1:revert-private-coherence-errors, r=estebank\n\nRevert \"Rollup merge of #62696 - chocol4te:fix_#62194, r=estebank\"\n\nThis reverts commit df21a6f040a7011d509769a61ac7af9502636b33 (#62696), reversing\nchanges made to cc16d0486933e02237190366de2eb43df2215c11.\n\nThat PR makes error messages worse than before, and we couldn't come up with a way of actually making them better, so revert it for now. Any idea for making this error message better is welcome!\n\nFixes #63145.\n\nr? @estebank", "tree": {"sha": "0d4d82fe1413e37e1a8b619350b2964f367764a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d4d82fe1413e37e1a8b619350b2964f367764a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61da2f4d19016625c9bdf2b45fc41f65e91c6736", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSRuFCRBK7hj4Ov3rIwAAdHIIALDq1fZN1xoTdnsCUMauVi2y\nX9nJox6tH1pkT/2rjfrcqGATGYzOh6zdpopdNDhJP82wM77dbHopfjq14k4szOSw\nGS2LZqKpA+8/TZ3776FSFBTMwKkCkgiKpXQuhHn7xU3XdafGgMuZZj5zUQAKhNyo\nPnutfVtAoBq7QkS7UGpGv80cZMA1S19CwAcXGJspANB7q6+cgt+JgGkSaDQXkqKf\nD7S5+HseqDIkyQqRIvpR0XTo+nBcsP/vNoK8NpOafLKoy08gGRaBA6+b2Kzv9hRv\nZy9kZQS0d7qpU9dOEETLo7MBv75Hy/mQzjW30Re/m3GiB/fB60NnOKq9EsdkrsU=\n=T1bH\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d4d82fe1413e37e1a8b619350b2964f367764a9\nparent 046936aeaf5a092858953eadf5a779635797e85d\nparent 95f29aa81bb0839f7cdedf267ac2a711d3301aae\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565072261 +0200\ncommitter GitHub <noreply@github.com> 1565072261 +0200\n\nRollup merge of #63264 - arielb1:revert-private-coherence-errors, r=estebank\n\nRevert \"Rollup merge of #62696 - chocol4te:fix_#62194, r=estebank\"\n\nThis reverts commit df21a6f040a7011d509769a61ac7af9502636b33 (#62696), reversing\nchanges made to cc16d0486933e02237190366de2eb43df2215c11.\n\nThat PR makes error messages worse than before, and we couldn't come up with a way of actually making them better, so revert it for now. Any idea for making this error message better is welcome!\n\nFixes #63145.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61da2f4d19016625c9bdf2b45fc41f65e91c6736", "html_url": "https://github.com/rust-lang/rust/commit/61da2f4d19016625c9bdf2b45fc41f65e91c6736", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61da2f4d19016625c9bdf2b45fc41f65e91c6736/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "046936aeaf5a092858953eadf5a779635797e85d", "url": "https://api.github.com/repos/rust-lang/rust/commits/046936aeaf5a092858953eadf5a779635797e85d", "html_url": "https://github.com/rust-lang/rust/commit/046936aeaf5a092858953eadf5a779635797e85d"}, {"sha": "95f29aa81bb0839f7cdedf267ac2a711d3301aae", "url": "https://api.github.com/repos/rust-lang/rust/commits/95f29aa81bb0839f7cdedf267ac2a711d3301aae", "html_url": "https://github.com/rust-lang/rust/commit/95f29aa81bb0839f7cdedf267ac2a711d3301aae"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "f0389bb037ac5b827aeb4e1e5bcc8e07f1d29d5a", "filename": "src/librustc/traits/specialize/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -366,13 +366,8 @@ pub(super) fn specialization_graph_provider(\n                     }\n                 }\n \n-                let access_levels = tcx.privacy_access_levels(impl_def_id.krate);\n-                if let Some(id) = tcx.hir().as_local_hir_id(impl_def_id) {\n-                    if access_levels.is_exported(id) || access_levels.is_public(id) {\n-                        for cause in &overlap.intercrate_ambiguity_causes {\n-                            cause.add_intercrate_ambiguity_hint(&mut err);\n-                        }\n-                    }\n+                for cause in &overlap.intercrate_ambiguity_causes {\n+                    cause.add_intercrate_ambiguity_hint(&mut err);\n                 }\n \n                 if overlap.involves_placeholder {"}, {"sha": "6c3484c2d8c4df3ca0ac3d9deee704c982ea70dc", "filename": "src/test/ui/coherence/coherence-overlap-upstream.old.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.old.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -5,6 +5,8 @@ LL | impl<T> Foo for T where T: Remote {}\n    | --------------------------------- first implementation here\n LL | impl Foo for i16 {}\n    | ^^^^^^^^^^^^^^^^ conflicting implementation for `i16`\n+   |\n+   = note: upstream crates may add new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "6c3484c2d8c4df3ca0ac3d9deee704c982ea70dc", "filename": "src/test/ui/coherence/coherence-overlap-upstream.re.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.re.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -5,6 +5,8 @@ LL | impl<T> Foo for T where T: Remote {}\n    | --------------------------------- first implementation here\n LL | impl Foo for i16 {}\n    | ^^^^^^^^^^^^^^^^ conflicting implementation for `i16`\n+   |\n+   = note: upstream crates may add new impl of trait `coherence_lib::Remote` for type `i16` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "12c7a1f977c3fefdd878d8b73309af7ee6b1077a", "filename": "src/test/ui/coherence/coherence_copy_like_err_fundamental_struct_tuple.old.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.old.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -6,6 +6,8 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n ...\n LL | impl MyTrait for lib::MyFundamentalStruct<(MyType,)> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyFundamentalStruct<(MyType,)>`\n+   |\n+   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyFundamentalStruct<(MyType,)>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "12c7a1f977c3fefdd878d8b73309af7ee6b1077a", "filename": "src/test/ui/coherence/coherence_copy_like_err_fundamental_struct_tuple.re.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.re.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -6,6 +6,8 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n ...\n LL | impl MyTrait for lib::MyFundamentalStruct<(MyType,)> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyFundamentalStruct<(MyType,)>`\n+   |\n+   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyFundamentalStruct<(MyType,)>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "1b6c62e9bf3a802b7c21b36102200be6eec0d172", "filename": "src/test/ui/coherence/coherence_copy_like_err_struct.old.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.old.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -6,6 +6,8 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n ...\n LL | impl MyTrait for lib::MyStruct<MyType> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyStruct<MyType>`\n+   |\n+   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyStruct<MyType>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "1b6c62e9bf3a802b7c21b36102200be6eec0d172", "filename": "src/test/ui/coherence/coherence_copy_like_err_struct.re.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.re.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -6,6 +6,8 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n ...\n LL | impl MyTrait for lib::MyStruct<MyType> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `lib::MyStruct<MyType>`\n+   |\n+   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `lib::MyStruct<MyType>` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "11bd788c761530cdedc7182762d1d4414e167a1e", "filename": "src/test/ui/coherence/coherence_copy_like_err_tuple.old.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.old.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -6,6 +6,8 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n ...\n LL | impl MyTrait for (MyType,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(MyType,)`\n+   |\n+   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `(MyType,)` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "11bd788c761530cdedc7182762d1d4414e167a1e", "filename": "src/test/ui/coherence/coherence_copy_like_err_tuple.re.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.re.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -6,6 +6,8 @@ LL | impl<T: lib::MyCopy> MyTrait for T { }\n ...\n LL | impl MyTrait for (MyType,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(MyType,)`\n+   |\n+   = note: upstream crates may add new impl of trait `lib::MyCopy` for type `(MyType,)` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "99a9bf9903e25702deef4acc6f25d4550ccf61af", "filename": "src/test/ui/issues/issue-48728.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -6,6 +6,8 @@ LL | #[derive(Clone)]\n ...\n LL | impl<T: Clone + ?Sized> Clone for Node<[T]> {\n    | ------------------------------------------- first implementation here\n+   |\n+   = note: upstream crates may add new impl of trait `std::clone::Clone` for type `[_]` in future versions\n \n error: aborting due to previous error\n "}, {"sha": "dcb34f3ad4836518aad8be94b7fd533d51f91a47", "filename": "src/test/ui/specialization/issue-52050.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61da2f4d19016625c9bdf2b45fc41f65e91c6736/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr?ref=61da2f4d19016625c9bdf2b45fc41f65e91c6736", "patch": "@@ -10,6 +10,8 @@ LL | | }\n LL | \n LL |   impl IntoPyDictPointer for ()\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `()`\n+   |\n+   = note: upstream crates may add new impl of trait `std::iter::Iterator` for type `()` in future versions\n \n error: aborting due to previous error\n "}]}