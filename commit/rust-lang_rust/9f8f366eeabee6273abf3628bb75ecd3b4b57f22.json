{"sha": "9f8f366eeabee6273abf3628bb75ecd3b4b57f22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOGYzNjZlZWFiZWU2MjczYWJmMzYyOGJiNzVlY2QzYjRiNTdmMjI=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-05-06T14:55:04Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-05-06T14:55:40Z"}, "message": "Use ManuallyDrop instead of Option in Hole implementation\n\nThe Option is always Some until drop, where it becomes None. Make\nthis more explicit and avoid unwraps by using ManuallyDrop.\n\nThis change should be performance-neutral as LLVM already optimizes\nthe unwraps away in the inlined code.", "tree": {"sha": "62ff11799111acb1f37e308647a694538a22b7dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62ff11799111acb1f37e308647a694538a22b7dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f8f366eeabee6273abf3628bb75ecd3b4b57f22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8f366eeabee6273abf3628bb75ecd3b4b57f22", "html_url": "https://github.com/rust-lang/rust/commit/9f8f366eeabee6273abf3628bb75ecd3b4b57f22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f8f366eeabee6273abf3628bb75ecd3b4b57f22/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f721f54c6fb1de9cf00eb9d2d050f818c882871", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f721f54c6fb1de9cf00eb9d2d050f818c882871", "html_url": "https://github.com/rust-lang/rust/commit/6f721f54c6fb1de9cf00eb9d2d050f818c882871"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "fcadcb544c431a9e9ede7bc00912ce3123b2533c", "filename": "src/liballoc/binary_heap.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9f8f366eeabee6273abf3628bb75ecd3b4b57f22/src%2Fliballoc%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f8f366eeabee6273abf3628bb75ecd3b4b57f22/src%2Fliballoc%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbinary_heap.rs?ref=9f8f366eeabee6273abf3628bb75ecd3b4b57f22", "patch": "@@ -157,7 +157,7 @@\n \n use core::ops::{Deref, DerefMut};\n use core::iter::{FromIterator, FusedIterator};\n-use core::mem::{swap, size_of};\n+use core::mem::{swap, size_of, ManuallyDrop};\n use core::ptr;\n use core::fmt;\n \n@@ -864,8 +864,7 @@ impl<T: Ord> BinaryHeap<T> {\n /// position with the value that was originally removed.\n struct Hole<'a, T: 'a> {\n     data: &'a mut [T],\n-    /// `elt` is always `Some` from new until drop.\n-    elt: Option<T>,\n+    elt: ManuallyDrop<T>,\n     pos: usize,\n }\n \n@@ -879,7 +878,7 @@ impl<'a, T> Hole<'a, T> {\n         let elt = ptr::read(&data[pos]);\n         Hole {\n             data,\n-            elt: Some(elt),\n+            elt: ManuallyDrop::new(elt),\n             pos,\n         }\n     }\n@@ -892,7 +891,7 @@ impl<'a, T> Hole<'a, T> {\n     /// Returns a reference to the element removed.\n     #[inline]\n     fn element(&self) -> &T {\n-        self.elt.as_ref().unwrap()\n+        &self.elt\n     }\n \n     /// Returns a reference to the element at `index`.\n@@ -925,7 +924,7 @@ impl<'a, T> Drop for Hole<'a, T> {\n         // fill the hole again\n         unsafe {\n             let pos = self.pos;\n-            ptr::write(self.data.get_unchecked_mut(pos), self.elt.take().unwrap());\n+            ptr::copy_nonoverlapping(&*self.elt, self.data.get_unchecked_mut(pos), 1);\n         }\n     }\n }"}]}