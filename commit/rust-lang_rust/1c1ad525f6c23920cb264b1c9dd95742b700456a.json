{"sha": "1c1ad525f6c23920cb264b1c9dd95742b700456a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMWFkNTI1ZjZjMjM5MjBjYjI2NGIxYzlkZDk1NzQyYjcwMDQ1NmE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-04-15T07:22:54Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-04-15T07:22:54Z"}, "message": "Format source codes", "tree": {"sha": "57255490628e5c1d4f1c5d9b4e20c809a5ae4ed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57255490628e5c1d4f1c5d9b4e20c809a5ae4ed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c1ad525f6c23920cb264b1c9dd95742b700456a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1ad525f6c23920cb264b1c9dd95742b700456a", "html_url": "https://github.com/rust-lang/rust/commit/1c1ad525f6c23920cb264b1c9dd95742b700456a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c1ad525f6c23920cb264b1c9dd95742b700456a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a5038c8f59684d48d2e1d1cedca36dd7fcd77a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5038c8f59684d48d2e1d1cedca36dd7fcd77a2", "html_url": "https://github.com/rust-lang/rust/commit/8a5038c8f59684d48d2e1d1cedca36dd7fcd77a2"}], "stats": {"total": 49, "additions": 26, "deletions": 23}, "files": [{"sha": "0001b5637ab996d8a24e3e385a34d8635b032dce", "filename": "src/types.rs", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/1c1ad525f6c23920cb264b1c9dd95742b700456a/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c1ad525f6c23920cb264b1c9dd95742b700456a/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=1c1ad525f6c23920cb264b1c9dd95742b700456a", "patch": "@@ -587,31 +587,34 @@ impl Rewrite for ast::Ty {\n                 let mut_len = mut_str.len();\n                 Some(match *lifetime {\n                          Some(ref lifetime) => {\n-                    let lt_budget = try_opt!(shape.width.checked_sub(2 + mut_len));\n-                    let lt_str = try_opt!(lifetime.rewrite(context,\n-                                                           Shape::legacy(lt_budget,\n+                             let lt_budget = try_opt!(shape.width.checked_sub(2 + mut_len));\n+                             let lt_str = try_opt!(lifetime.rewrite(context,\n+                                                                    Shape::legacy(lt_budget,\n+                                                                                  shape.indent +\n+                                                                                  2 +\n+                                                                                  mut_len)));\n+                             let lt_len = lt_str.len();\n+                             let budget = try_opt!(shape.width.checked_sub(2 + mut_len + lt_len));\n+                             format!(\"&{} {}{}\",\n+                                     lt_str,\n+                                     mut_str,\n+                                     try_opt!(mt.ty\n+                                                  .rewrite(context,\n+                                                           Shape::legacy(budget,\n                                                                          shape.indent + 2 +\n-                                                                         mut_len)));\n-                    let lt_len = lt_str.len();\n-                    let budget = try_opt!(shape.width.checked_sub(2 + mut_len + lt_len));\n-                    format!(\"&{} {}{}\",\n-                            lt_str,\n-                            mut_str,\n-                            try_opt!(mt.ty\n-                                         .rewrite(context,\n-                                                  Shape::legacy(budget,\n-                                                                shape.indent + 2 + mut_len +\n-                                                                lt_len))))\n-                }\n+                                                                         mut_len +\n+                                                                         lt_len))))\n+                         }\n                          None => {\n-                    let budget = try_opt!(shape.width.checked_sub(1 + mut_len));\n-                    format!(\"&{}{}\",\n-                            mut_str,\n-                            try_opt!(mt.ty\n-                                         .rewrite(context,\n-                                                  Shape::legacy(budget,\n-                                                                shape.indent + 1 + mut_len))))\n-                }\n+                             let budget = try_opt!(shape.width.checked_sub(1 + mut_len));\n+                             format!(\"&{}{}\",\n+                                     mut_str,\n+                                     try_opt!(mt.ty\n+                                                  .rewrite(context,\n+                                                           Shape::legacy(budget,\n+                                                                         shape.indent + 1 +\n+                                                                         mut_len))))\n+                         }\n                      })\n             }\n             // FIXME: we drop any comments here, even though it's a silly place to put"}]}