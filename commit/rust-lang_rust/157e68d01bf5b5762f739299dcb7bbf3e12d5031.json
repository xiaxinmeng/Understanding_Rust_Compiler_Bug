{"sha": "157e68d01bf5b5762f739299dcb7bbf3e12d5031", "node_id": "C_kwDOAAsO6NoAKDE1N2U2OGQwMWJmNWI1NzYyZjczOTI5OWRjYjdiYmYzZTEyZDUwMzE", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-03T22:43:24Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-03T22:43:24Z"}, "message": "Fix `delayed_good_path_bug` ice for expected diagnostics (RFC 2383)", "tree": {"sha": "164a2c081488cfa8103210044e9c0dbbbfd9b4d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/164a2c081488cfa8103210044e9c0dbbbfd9b4d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/157e68d01bf5b5762f739299dcb7bbf3e12d5031", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmKajowACgkQ9cWdDmae\nUwJ1ww/+IF0besgbAuDBuNhBBRGvmNsgpcGi9UEhhSsE54cuYoITgkpF5kMWyQm8\nmdGEtA7do4LCPtaBXOvdd/kVQY0E+Ts0pTj68bLsyz+LTHoZs5rJYYuF06G61Qz9\nsf3E6a9mXHNGqYLjpp3kcGIJjQtKuLNmyL9htKGy2BZg/oRwK1cWSu4qlwZyP8UL\nPi0rrfpA+QyiZf1r0bD4OKhOEqsX4JHr+FxkUVJVijTUfTV6znOp3IjcQgWCgH+M\nKkJrd1lJSjeQ4QicxVtJ7JW+ESD24sxGnqGz3vOYVRmx4HDco/VIUkXRVLGTQ7Ea\nHWE3WZ4Z5x5rEJqL6CLNqTpEKkFatoQSx821mAV0qWNWjAGj3nSq1krWcnpQJNHb\n8W9rn9qRTei/aF1DA1f3iWfJbZS/Y2smEaMXt6XD97T8TePatzd4Z6HLHlNrK7/Y\n9r+p7iROnMkkZ4LMc1JtpIss8XC9+7jTZlJkKs1A1JeBL+RFYqawcyCdT4B0JSw1\nlnp0gPTO4JmWlY2SZXa/+Gt2JLrTO6vR9za2H79obu8dppSG0Yvt8Ir/ODoTEgEy\nbfMJa9SS3uTX6FKv7zZNN5u8v4BZrpEG6l7gArrHEZiLSDnS1cP2xK/vzqk/LKgT\n7pD53nCo7d5TXlbCJZcLICuBoJFikukXIMfbHIcGWe+gKxlkxBw=\n=TFzy\n-----END PGP SIGNATURE-----", "payload": "tree 164a2c081488cfa8103210044e9c0dbbbfd9b4d5\nparent 7e9b92cb43a489b34e2bcb8d21f36198e02eedbc\nauthor xFrednet <xFrednet@gmail.com> 1654296204 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1654296204 +0200\n\nFix `delayed_good_path_bug` ice for expected diagnostics (RFC 2383)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/157e68d01bf5b5762f739299dcb7bbf3e12d5031", "html_url": "https://github.com/rust-lang/rust/commit/157e68d01bf5b5762f739299dcb7bbf3e12d5031", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/157e68d01bf5b5762f739299dcb7bbf3e12d5031/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e9b92cb43a489b34e2bcb8d21f36198e02eedbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e9b92cb43a489b34e2bcb8d21f36198e02eedbc", "html_url": "https://github.com/rust-lang/rust/commit/7e9b92cb43a489b34e2bcb8d21f36198e02eedbc"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "8cce49971489e1665239788a81510df1fd1f2b4c", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/157e68d01bf5b5762f739299dcb7bbf3e12d5031/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/157e68d01bf5b5762f739299dcb7bbf3e12d5031/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=157e68d01bf5b5762f739299dcb7bbf3e12d5031", "patch": "@@ -401,6 +401,9 @@ struct HandlerInner {\n     emitter: Box<dyn Emitter + sync::Send>,\n     delayed_span_bugs: Vec<Diagnostic>,\n     delayed_good_path_bugs: Vec<DelayedDiagnostic>,\n+    /// This flag indicates that an expected diagnostic was emitted and suppressed.\n+    /// This is used for the `delayed_good_path_bugs` check.\n+    suppressed_expected_diag: bool,\n \n     /// This set contains the `DiagnosticId` of all emitted diagnostics to avoid\n     /// emitting the same diagnostic with extended help (`--teach`) twice, which\n@@ -496,7 +499,7 @@ impl Drop for HandlerInner {\n         // instead of \"require some error happened\". Sadly that isn't ideal, as\n         // lints can be `#[allow]`'d, potentially leading to this triggering.\n         // Also, \"good path\" should be replaced with a better naming.\n-        if !self.has_any_message() {\n+        if !self.has_any_message() && !self.suppressed_expected_diag {\n             let bugs = std::mem::replace(&mut self.delayed_good_path_bugs, Vec::new());\n             self.flush_delayed(\n                 bugs.into_iter().map(DelayedDiagnostic::decorate),\n@@ -578,6 +581,7 @@ impl Handler {\n                 emitter,\n                 delayed_span_bugs: Vec::new(),\n                 delayed_good_path_bugs: Vec::new(),\n+                suppressed_expected_diag: false,\n                 taught_diagnostics: Default::default(),\n                 emitted_diagnostic_codes: Default::default(),\n                 emitted_diagnostics: Default::default(),\n@@ -1001,20 +1005,20 @@ impl Handler {\n         let mut inner = self.inner.borrow_mut();\n         let diags = std::mem::take(&mut inner.unstable_expect_diagnostics);\n         inner.check_unstable_expect_diagnostics = true;\n-        if diags.is_empty() {\n-            return;\n-        }\n \n-        for mut diag in diags.into_iter() {\n-            diag.update_unstable_expectation_id(unstable_to_stable);\n+        if !diags.is_empty() {\n+            inner.suppressed_expected_diag = true;\n+            for mut diag in diags.into_iter() {\n+                diag.update_unstable_expectation_id(unstable_to_stable);\n \n-            let stable_id = diag\n-                .level\n-                .get_expectation_id()\n-                .expect(\"all diagnostics inside `unstable_expect_diagnostics` must have a `LintExpectationId`\");\n-            inner.fulfilled_expectations.insert(stable_id);\n+                let stable_id = diag\n+                    .level\n+                    .get_expectation_id()\n+                    .expect(\"all diagnostics inside `unstable_expect_diagnostics` must have a `LintExpectationId`\");\n+                inner.fulfilled_expectations.insert(stable_id);\n \n-            (*TRACK_DIAGNOSTICS)(&diag);\n+                (*TRACK_DIAGNOSTICS)(&diag);\n+            }\n         }\n \n         inner\n@@ -1101,6 +1105,7 @@ impl HandlerInner {\n         (*TRACK_DIAGNOSTICS)(diagnostic);\n \n         if let Level::Expect(expectation_id) = diagnostic.level {\n+            self.suppressed_expected_diag = true;\n             self.fulfilled_expectations.insert(expectation_id);\n             return None;\n         } else if diagnostic.level == Allow {"}, {"sha": "912e831d88a7d93cf4d54dc26ba64c6ca3a37589", "filename": "src/test/ui/lint/rfc-2383-lint-reason/avoid_delayed_good_path_ice.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/157e68d01bf5b5762f739299dcb7bbf3e12d5031/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Favoid_delayed_good_path_ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/157e68d01bf5b5762f739299dcb7bbf3e12d5031/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Favoid_delayed_good_path_ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Favoid_delayed_good_path_ice.rs?ref=157e68d01bf5b5762f739299dcb7bbf3e12d5031", "patch": "@@ -0,0 +1,8 @@\n+// check-pass\n+#![feature(lint_reasons)]\n+\n+#[expect(drop_bounds)]\n+fn trigger_rustc_lints<T: Drop>() {\n+}\n+\n+fn main() {}"}]}