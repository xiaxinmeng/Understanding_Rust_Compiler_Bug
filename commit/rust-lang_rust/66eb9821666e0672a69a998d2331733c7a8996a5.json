{"sha": "66eb9821666e0672a69a998d2331733c7a8996a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZWI5ODIxNjY2ZTA2NzJhNjlhOTk4ZDIzMzE3MzNjN2E4OTk2YTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-18T11:35:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-18T11:35:19Z"}, "message": "Auto merge of #81015 - jyn514:feature-gate-ptr, r=camelid\n\nFeature-gate `pointer` and `reference` in intra-doc links\n\nr? `@camelid`\n\nAddresses (but does not close) https://github.com/rust-lang/rust/issues/80896.", "tree": {"sha": "f1fab0e96bbd26ba775066aa764694fc588993b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1fab0e96bbd26ba775066aa764694fc588993b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66eb9821666e0672a69a998d2331733c7a8996a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66eb9821666e0672a69a998d2331733c7a8996a5", "html_url": "https://github.com/rust-lang/rust/commit/66eb9821666e0672a69a998d2331733c7a8996a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66eb9821666e0672a69a998d2331733c7a8996a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86e0ff47a0d1afcbe9f0c8cdb54f60bb18da20df", "url": "https://api.github.com/repos/rust-lang/rust/commits/86e0ff47a0d1afcbe9f0c8cdb54f60bb18da20df", "html_url": "https://github.com/rust-lang/rust/commit/86e0ff47a0d1afcbe9f0c8cdb54f60bb18da20df"}, {"sha": "fc5359475633fa01adcb1078128de07ad2653ca5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc5359475633fa01adcb1078128de07ad2653ca5", "html_url": "https://github.com/rust-lang/rust/commit/fc5359475633fa01adcb1078128de07ad2653ca5"}], "stats": {"total": 102, "additions": 89, "deletions": 13}, "files": [{"sha": "b9d1597c4c65f8948248e78427a754f3807b8ce1", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -629,6 +629,8 @@ declare_features! (\n     /// Allows references to types with interior mutability within constants\n     (active, const_refs_to_cell, \"1.51.0\", Some(80384), None),\n \n+    /// Allows using `pointer` and `reference` in intra-doc links\n+    (active, intra_doc_pointers, \"1.51.0\", Some(80896), None),\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "7b90e5b611cd12da72d45a081f958c614dc83089", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -622,6 +622,7 @@ symbols! {\n         intel,\n         into_iter,\n         into_result,\n+        intra_doc_pointers,\n         intrinsics,\n         irrefutable_let_patterns,\n         isa_attribute,"}, {"sha": "fbc83f4b4f48927ff5c3aa0a23b2a784d91de86f", "filename": "src/doc/unstable-book/src/language-features/intra-doc-pointers.md", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fintra-doc-pointers.md", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fintra-doc-pointers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fintra-doc-pointers.md?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -0,0 +1,15 @@\n+# `intra-doc-pointers`\n+\n+The tracking issue for this feature is: [#80896]\n+\n+[#80896]: https://github.com/rust-lang/rust/issues/80896\n+\n+------------------------\n+\n+Rustdoc does not currently allow disambiguating between `*const` and `*mut`, and\n+raw pointers in intra-doc links are unstable until it does.\n+\n+```rust\n+#![feature(intra_doc_pointers)]\n+//! [pointer::add]\n+```"}, {"sha": "2694450a520c9eebb339c56462c5e3190e129178", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -20,8 +20,7 @@ use rustc_session::lint::{\n     Lint,\n };\n use rustc_span::hygiene::{MacroKind, SyntaxContext};\n-use rustc_span::symbol::Ident;\n-use rustc_span::symbol::Symbol;\n+use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::DUMMY_SP;\n use smallvec::{smallvec, SmallVec};\n \n@@ -1195,7 +1194,7 @@ impl LinkCollector<'_, '_> {\n         };\n \n         match res {\n-            Res::Primitive(_) => {\n+            Res::Primitive(prim) => {\n                 if let Some((kind, id)) = self.kind_side_channel.take() {\n                     // We're actually resolving an associated item of a primitive, so we need to\n                     // verify the disambiguator (if any) matches the type of the associated item.\n@@ -1206,6 +1205,29 @@ impl LinkCollector<'_, '_> {\n                     // valid omission. See https://github.com/rust-lang/rust/pull/80660#discussion_r551585677\n                     // for discussion on the matter.\n                     verify(kind, id)?;\n+\n+                    if prim == PrimitiveType::RawPointer\n+                        && !self.cx.tcx.features().intra_doc_pointers\n+                    {\n+                        let span = super::source_span_for_markdown_range(\n+                            cx,\n+                            dox,\n+                            &ori_link.range,\n+                            &item.attrs,\n+                        )\n+                        .unwrap_or_else(|| {\n+                            span_of_attrs(&item.attrs).unwrap_or(item.source.span())\n+                        });\n+\n+                        rustc_session::parse::feature_err(\n+                            &self.cx.tcx.sess.parse_sess,\n+                            sym::intra_doc_pointers,\n+                            span,\n+                            \"linking to associated items of raw pointers is experimental\",\n+                        )\n+                        .note(\"rustdoc does not allow disambiguating between `*const` and `*mut`, and pointers are unstable until it does\")\n+                        .emit();\n+                    }\n                 } else {\n                     match disambiguator {\n                         Some(Disambiguator::Primitive | Disambiguator::Namespace(_)) | None => {}\n@@ -1215,6 +1237,7 @@ impl LinkCollector<'_, '_> {\n                         }\n                     }\n                 }\n+\n                 Some(ItemLink { link: ori_link.link, link_text, did: None, fragment })\n             }\n             Res::Def(kind, id) => {"}, {"sha": "3cfac942ca85ed1595dc925a5b2179ad90a334a5", "filename": "src/test/rustdoc-ui/intra-doc/feature-gate-intra-doc-pointers.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ffeature-gate-intra-doc-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ffeature-gate-intra-doc-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ffeature-gate-intra-doc-pointers.rs?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -0,0 +1,6 @@\n+//! [pointer::add]\n+//~^ ERROR: experimental\n+//! [pointer::wrapping_add]\n+//~^ ERROR: experimental\n+//! [pointer] // This is explicitly allowed\n+//! [reference] // This is explicitly allowed"}, {"sha": "2c946ed48db1799bf1c73143b248588f243db7d2", "filename": "src/test/rustdoc-ui/intra-doc/feature-gate-intra-doc-pointers.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ffeature-gate-intra-doc-pointers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ffeature-gate-intra-doc-pointers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ffeature-gate-intra-doc-pointers.stderr?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -0,0 +1,23 @@\n+error[E0658]: linking to associated items of raw pointers is experimental\n+  --> $DIR/feature-gate-intra-doc-pointers.rs:1:6\n+   |\n+LL | //! [pointer::add]\n+   |      ^^^^^^^^^^^^\n+   |\n+   = note: see issue #80896 <https://github.com/rust-lang/rust/issues/80896> for more information\n+   = help: add `#![feature(intra_doc_pointers)]` to the crate attributes to enable\n+   = note: rustdoc does not allow disambiguating between `*const` and `*mut`, and pointers are unstable until it does\n+\n+error[E0658]: linking to associated items of raw pointers is experimental\n+  --> $DIR/feature-gate-intra-doc-pointers.rs:3:6\n+   |\n+LL | //! [pointer::wrapping_add]\n+   |      ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #80896 <https://github.com/rust-lang/rust/issues/80896> for more information\n+   = help: add `#![feature(intra_doc_pointers)]` to the crate attributes to enable\n+   = note: rustdoc does not allow disambiguating between `*const` and `*mut`, and pointers are unstable until it does\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "6785c4c43f54185e7b3e67336c350bc44195fa40", "filename": "src/test/rustdoc-ui/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -1,4 +1,5 @@\n #![deny(broken_intra_doc_links)]\n+#![feature(intra_doc_pointers)]\n // These are links that could reasonably expected to work, but don't.\n \n // `[]` isn't supported because it had too many false positives."}, {"sha": "174758504ae22019aab2f9da4564c712307fc1cd", "filename": "src/test/rustdoc-ui/intra-doc/non-path-primitives.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -1,5 +1,5 @@\n error: unresolved link to `T`\n-  --> $DIR/non-path-primitives.rs:11:7\n+  --> $DIR/non-path-primitives.rs:12:7\n    |\n LL | //! [[T]::rotate_left]\n    |       ^ no item named `T` in scope\n@@ -12,55 +12,55 @@ LL | #![deny(broken_intra_doc_links)]\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: unresolved link to `Z`\n-  --> $DIR/non-path-primitives.rs:13:5\n+  --> $DIR/non-path-primitives.rs:14:5\n    |\n LL | //![Z]([T; N]::map)\n    |     ^ no item named `Z` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: unresolved link to `Z`\n-  --> $DIR/non-path-primitives.rs:16:6\n+  --> $DIR/non-path-primitives.rs:17:6\n    |\n LL | //! [Z][]\n    |      ^ no item named `Z` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: unresolved link to `Z`\n-  --> $DIR/non-path-primitives.rs:18:6\n+  --> $DIR/non-path-primitives.rs:19:6\n    |\n LL | //! [Z]: [T; N]::map\n    |      ^ no item named `Z` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: unresolved link to `unit::eq`\n-  --> $DIR/non-path-primitives.rs:27:6\n+  --> $DIR/non-path-primitives.rs:28:6\n    |\n LL | //! [unit::eq]\n    |      ^^^^^^^^ the builtin type `unit` has no associated item named `eq`\n \n error: unresolved link to `tuple::eq`\n-  --> $DIR/non-path-primitives.rs:28:6\n+  --> $DIR/non-path-primitives.rs:29:6\n    |\n LL | //! [tuple::eq]\n    |      ^^^^^^^^^ the builtin type `tuple` has no associated item named `eq`\n \n error: unresolved link to `fn::eq`\n-  --> $DIR/non-path-primitives.rs:29:6\n+  --> $DIR/non-path-primitives.rs:30:6\n    |\n LL | //! [fn::eq]\n    |      ^^^^^^ the builtin type `fn` has no associated item named `eq`\n \n error: unresolved link to `never::eq`\n-  --> $DIR/non-path-primitives.rs:30:6\n+  --> $DIR/non-path-primitives.rs:31:6\n    |\n LL | //! [never::eq]\n    |      ^^^^^^^^^ the builtin type `never` has no associated item named `eq`\n \n error: unresolved link to `reference::deref`\n-  --> $DIR/non-path-primitives.rs:34:6\n+  --> $DIR/non-path-primitives.rs:35:6\n    |\n LL | //! [reference::deref]\n    |      ^^^^^^^^^^^^^^^^ the builtin type `reference` has no associated item named `deref`"}, {"sha": "48c667ef2d18e548b99a35d9c3c0240b2bea9056", "filename": "src/test/rustdoc/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -1,5 +1,6 @@\n // ignore-tidy-linelength\n #![crate_name = \"foo\"]\n+#![feature(intra_doc_pointers)]\n #![deny(broken_intra_doc_links)]\n \n // @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.rotate_left\"]' 'slice::rotate_left'"}, {"sha": "d3a4454275965691e7ed171e29673e7aea0d38c7", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb9821666e0672a69a998d2331733c7a8996a5/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=66eb9821666e0672a69a998d2331733c7a8996a5", "patch": "@@ -85,7 +85,11 @@ pub fn check(\n     assert!(!lib_features.is_empty());\n \n     super::walk_many(\n-        &[&src_path.join(\"test/ui\"), &src_path.join(\"test/ui-fulldeps\")],\n+        &[\n+            &src_path.join(\"test/ui\"),\n+            &src_path.join(\"test/ui-fulldeps\"),\n+            &src_path.join(\"test/rustdoc-ui\"),\n+        ],\n         &mut |path| super::filter_dirs(path),\n         &mut |entry, contents| {\n             let file = entry.path();"}]}