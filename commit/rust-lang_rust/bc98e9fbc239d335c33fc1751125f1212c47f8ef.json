{"sha": "bc98e9fbc239d335c33fc1751125f1212c47f8ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOThlOWZiYzIzOWQzMzVjMzNmYzE3NTExMjVmMTIxMmM0N2Y4ZWY=", "commit": {"author": {"name": "Lai Jiangshan", "email": "laijs@cn.fujitsu.com", "date": "2015-03-02T10:01:01Z"}, "committer": {"name": "Lai Jiangshan", "email": "laijs@cn.fujitsu.com", "date": "2015-03-03T05:34:11Z"}, "message": "str: fix comments for FromStr for bool\n\nFix the return type in the comments.\n\nAn old commit 082bfde41217 (\"Fallout of std::str stabilization\") removed\nthe example of FromStr::from_str(), this commit adds it back. But\nthe example of StrExt::parse() is still kept with an additinal note.\n\nSigned-off-by: Lai Jiangshan <laijs@cn.fujitsu.com>", "tree": {"sha": "20e315f0a1e7f08a2accab877a286212285cc7af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e315f0a1e7f08a2accab877a286212285cc7af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc98e9fbc239d335c33fc1751125f1212c47f8ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc98e9fbc239d335c33fc1751125f1212c47f8ef", "html_url": "https://github.com/rust-lang/rust/commit/bc98e9fbc239d335c33fc1751125f1212c47f8ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc98e9fbc239d335c33fc1751125f1212c47f8ef/comments", "author": null, "committer": null, "parents": [{"sha": "b4c965ee803a4521d8b4575f634e036f93e408f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c965ee803a4521d8b4575f634e036f93e408f3", "html_url": "https://github.com/rust-lang/rust/commit/b4c965ee803a4521d8b4575f634e036f93e408f3"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "21c6c846576bee774e394c6e48d1d159342d7955", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bc98e9fbc239d335c33fc1751125f1212c47f8ef/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc98e9fbc239d335c33fc1751125f1212c47f8ef/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=bc98e9fbc239d335c33fc1751125f1212c47f8ef", "patch": "@@ -134,12 +134,23 @@ impl FromStr for bool {\n \n     /// Parse a `bool` from a string.\n     ///\n-    /// Yields an `Option<bool>`, because `s` may or may not actually be\n-    /// parseable.\n+    /// Yields a `Result<bool, ParseBoolError>`, because `s` may or may not\n+    /// actually be parseable.\n     ///\n     /// # Examples\n     ///\n     /// ```rust\n+    /// use std::str::FromStr;\n+    ///\n+    /// assert_eq!(FromStr::from_str(\"true\"), Ok(true));\n+    /// assert_eq!(FromStr::from_str(\"false\"), Ok(false));\n+    /// assert!(<bool as FromStr>::from_str(\"not even a boolean\").is_err());\n+    /// ```\n+    ///\n+    /// Note, in many cases, the StrExt::parse() which is based on\n+    /// this FromStr::from_str() is more proper.\n+    ///\n+    /// ```rust\n     /// assert_eq!(\"true\".parse(), Ok(true));\n     /// assert_eq!(\"false\".parse(), Ok(false));\n     /// assert!(\"not even a boolean\".parse::<bool>().is_err());"}]}