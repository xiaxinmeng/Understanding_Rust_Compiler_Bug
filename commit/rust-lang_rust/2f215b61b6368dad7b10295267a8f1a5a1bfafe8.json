{"sha": "2f215b61b6368dad7b10295267a8f1a5a1bfafe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMjE1YjYxYjYzNjhkYWQ3YjEwMjk1MjY3YThmMWE1YTFiZmFmZTg=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-25T17:26:38Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T16:12:12Z"}, "message": "Use `NonNull` instead of `Unique` in `MemoryBlock`", "tree": {"sha": "bcf8f4d4b6d17aa333a8a6eb1298d28e4661d68a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcf8f4d4b6d17aa333a8a6eb1298d28e4661d68a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f215b61b6368dad7b10295267a8f1a5a1bfafe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f215b61b6368dad7b10295267a8f1a5a1bfafe8", "html_url": "https://github.com/rust-lang/rust/commit/2f215b61b6368dad7b10295267a8f1a5a1bfafe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f215b61b6368dad7b10295267a8f1a5a1bfafe8/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2526accdd35c564eee80b6453a0b4965e6a76afd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2526accdd35c564eee80b6453a0b4965e6a76afd", "html_url": "https://github.com/rust-lang/rust/commit/2526accdd35c564eee80b6453a0b4965e6a76afd"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "4af1a8254a3dbb6a5344dc718b1ca57364a13bfc", "filename": "src/libcore/alloc/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2f215b61b6368dad7b10295267a8f1a5a1bfafe8/src%2Flibcore%2Falloc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f215b61b6368dad7b10295267a8f1a5a1bfafe8/src%2Flibcore%2Falloc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc%2Fmod.rs?ref=2f215b61b6368dad7b10295267a8f1a5a1bfafe8", "patch": "@@ -47,7 +47,7 @@ pub enum AllocInit {\n #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n #[must_use = \"`MemoryBlock` should be passed to `AllocRef::dealloc`\"]\n pub struct MemoryBlock {\n-    ptr: Unique<u8>,\n+    ptr: NonNull<u8>,\n     layout: Layout,\n }\n \n@@ -63,15 +63,14 @@ impl MemoryBlock {\n     #[inline]\n     #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n     pub const unsafe fn new(ptr: NonNull<u8>, layout: Layout) -> Self {\n-        Self { ptr: Unique::new_unchecked(ptr.as_ptr()), layout }\n+        Self { ptr, layout }\n     }\n \n     /// Acquires the underlying `NonNull<u8>` pointer.\n     #[inline]\n     #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n     pub const fn ptr(&self) -> NonNull<u8> {\n-        // SAFETY: Unique<T> is always non-null\n-        unsafe { NonNull::new_unchecked(self.ptr.as_ptr()) }\n+        self.ptr\n     }\n \n     /// Returns the layout describing the memory block."}]}