{"sha": "47c9ed697b4041fca4488922ee5614ad98bfeec2", "node_id": "C_kwDOAAsO6NoAKDQ3YzllZDY5N2I0MDQxZmNhNDQ4ODkyMmVlNTYxNGFkOThiZmVlYzI", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-03-16T02:47:18Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-03-16T03:11:11Z"}, "message": "Fix checking transmutes with adjusted types", "tree": {"sha": "778afb3203bbded12ebf561ce93a1d0226aec69b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/778afb3203bbded12ebf561ce93a1d0226aec69b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c9ed697b4041fca4488922ee5614ad98bfeec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c9ed697b4041fca4488922ee5614ad98bfeec2", "html_url": "https://github.com/rust-lang/rust/commit/47c9ed697b4041fca4488922ee5614ad98bfeec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c9ed697b4041fca4488922ee5614ad98bfeec2/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "911e10562a0274d6baab1064a903f3aefef14070", "url": "https://api.github.com/repos/rust-lang/rust/commits/911e10562a0274d6baab1064a903f3aefef14070", "html_url": "https://github.com/rust-lang/rust/commit/911e10562a0274d6baab1064a903f3aefef14070"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "02569bd3a476e50e3b0ea759ad9930712847f481", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c9ed697b4041fca4488922ee5614ad98bfeec2/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c9ed697b4041fca4488922ee5614ad98bfeec2/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=47c9ed697b4041fca4488922ee5614ad98bfeec2", "patch": "@@ -415,7 +415,8 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 // And see https://github.com/rust-lang/rust/issues/51911 for dereferencing raw pointers.\n                 let const_context = in_constant(cx, e.hir_id);\n \n-                let from_ty = cx.typeck_results().expr_ty(arg);\n+                let from_ty = cx.typeck_results().expr_ty_adjusted(arg);\n+                // Adjustments for `to_ty` happen after the call to `transmute`, so don't use them.\n                 let to_ty = cx.typeck_results().expr_ty(e);\n \n                 // If useless_transmute is triggered, the other lints can be skipped."}, {"sha": "7cc03b89fe0ec13ea99e1b38e15fee8823858b48", "filename": "tests/ui/transmute_undefined_repr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47c9ed697b4041fca4488922ee5614ad98bfeec2/tests%2Fui%2Ftransmute_undefined_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c9ed697b4041fca4488922ee5614ad98bfeec2/tests%2Fui%2Ftransmute_undefined_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_undefined_repr.rs?ref=47c9ed697b4041fca4488922ee5614ad98bfeec2", "patch": "@@ -106,5 +106,7 @@ fn main() {\n \n         let _: MaybeUninit<Ty2<u32, u32>> = transmute(value::<Ty2<u32, u32>>()); // Ok\n         let _: Ty2<u32, u32> = transmute(value::<MaybeUninit<Ty2<u32, u32>>>()); // Ok\n+\n+        let _: Ty<&[u32]> = transmute::<&[u32], _>(value::<&Vec<u32>>()); // Ok\n     }\n }"}, {"sha": "de9418c8d1adc4af6ab0e578ef3697b2a95a1c72", "filename": "tests/ui/transmutes_expressible_as_ptr_casts.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47c9ed697b4041fca4488922ee5614ad98bfeec2/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47c9ed697b4041fca4488922ee5614ad98bfeec2/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr?ref=47c9ed697b4041fca4488922ee5614ad98bfeec2", "patch": "@@ -34,13 +34,13 @@ error: transmute from a reference to a pointer\n LL |     let _array_ptr_transmute = unsafe { transmute::<&[i32; 4], *const [i32; 4]>(array_ref) };\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `array_ref as *const [i32; 4]`\n \n-error: transmute from `fn(usize) -> u8 {main::foo}` to `*const usize` which could be expressed as a pointer cast instead\n+error: transmute from `fn(usize) -> u8` to `*const usize` which could be expressed as a pointer cast instead\n   --> $DIR/transmutes_expressible_as_ptr_casts.rs:48:41\n    |\n LL |     let _usize_ptr_transmute = unsafe { transmute::<fn(usize) -> u8, *const usize>(foo) };\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `foo as *const usize`\n \n-error: transmute from `fn(usize) -> u8 {main::foo}` to `usize` which could be expressed as a pointer cast instead\n+error: transmute from `fn(usize) -> u8` to `usize` which could be expressed as a pointer cast instead\n   --> $DIR/transmutes_expressible_as_ptr_casts.rs:52:49\n    |\n LL |     let _usize_from_fn_ptr_transmute = unsafe { transmute::<fn(usize) -> u8, usize>(foo) };"}]}