{"sha": "7bd01ed3c46183253dd0c28d9efa8678c426599e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZDAxZWQzYzQ2MTgzMjUzZGQwYzI4ZDllZmE4Njc4YzQyNjU5OWU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-15T10:33:49Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-15T10:33:49Z"}, "message": "Typo", "tree": {"sha": "48e3635742b5941bc556ca75eed5f33d83119c44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48e3635742b5941bc556ca75eed5f33d83119c44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bd01ed3c46183253dd0c28d9efa8678c426599e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd01ed3c46183253dd0c28d9efa8678c426599e", "html_url": "https://github.com/rust-lang/rust/commit/7bd01ed3c46183253dd0c28d9efa8678c426599e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bd01ed3c46183253dd0c28d9efa8678c426599e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a81784a09a084e63add1e4618dd82e8a7035c4f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a81784a09a084e63add1e4618dd82e8a7035c4f5", "html_url": "https://github.com/rust-lang/rust/commit/a81784a09a084e63add1e4618dd82e8a7035c4f5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cb028d286fa3dba0a486cd774575be5f00cb89b5", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bd01ed3c46183253dd0c28d9efa8678c426599e/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bd01ed3c46183253dd0c28d9efa8678c426599e/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=7bd01ed3c46183253dd0c28d9efa8678c426599e", "patch": "@@ -356,7 +356,7 @@ pub fn intern_const_alloc_recursive<M: CompileTimeMachine<'mir, 'tcx>>(\n                 // It is UB to mutate through a raw pointer obtained via an immutable reference.\n                 // Since all references and pointers inside a promoted must by their very definition\n                 // be created from an immutable reference (and promotion also excludes interior\n-                // mutability), mutating though them would be UB.\n+                // mutability), mutating through them would be UB.\n                 // There's no way we can check whether the user is using raw pointers correctly,\n                 // so all we can do is mark this as immutable here.\n                 InternKind::Promoted => {"}]}