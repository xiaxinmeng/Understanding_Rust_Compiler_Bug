{"sha": "731bbae816e49cb404f402e8a5d392059e417ee5", "node_id": "C_kwDOAAsO6NoAKDczMWJiYWU4MTZlNDljYjQwNGY0MDJlOGE1ZDM5MjA1OWU0MTdlZTU", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2022-01-07T00:52:42Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2022-01-07T00:53:51Z"}, "message": "Also change PhantomData parameter of iter::Empty, and future::Pending", "tree": {"sha": "34ebb15eabbe77035062a9fe9eada6c7e3c059c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34ebb15eabbe77035062a9fe9eada6c7e3c059c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/731bbae816e49cb404f402e8a5d392059e417ee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/731bbae816e49cb404f402e8a5d392059e417ee5", "html_url": "https://github.com/rust-lang/rust/commit/731bbae816e49cb404f402e8a5d392059e417ee5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/731bbae816e49cb404f402e8a5d392059e417ee5/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a043acd0b2cb9cb510cdeb040c0ce881af376142", "url": "https://api.github.com/repos/rust-lang/rust/commits/a043acd0b2cb9cb510cdeb040c0ce881af376142", "html_url": "https://github.com/rust-lang/rust/commit/a043acd0b2cb9cb510cdeb040c0ce881af376142"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "2877e66eca8850949df0f832ac8873dc2c4b2ad2", "filename": "library/core/src/future/pending.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/731bbae816e49cb404f402e8a5d392059e417ee5/library%2Fcore%2Fsrc%2Ffuture%2Fpending.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731bbae816e49cb404f402e8a5d392059e417ee5/library%2Fcore%2Fsrc%2Ffuture%2Fpending.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fpending.rs?ref=731bbae816e49cb404f402e8a5d392059e417ee5", "patch": "@@ -12,7 +12,7 @@ use crate::task::{Context, Poll};\n #[stable(feature = \"future_readiness_fns\", since = \"1.48.0\")]\n #[must_use = \"futures do nothing unless you `.await` or poll them\"]\n pub struct Pending<T> {\n-    _data: marker::PhantomData<T>,\n+    _data: marker::PhantomData<fn() -> T>,\n }\n \n /// Creates a future which never resolves, representing a computation that never\n@@ -43,9 +43,6 @@ impl<T> Future for Pending<T> {\n     }\n }\n \n-#[stable(feature = \"future_readiness_fns\", since = \"1.48.0\")]\n-impl<T> Unpin for Pending<T> {}\n-\n #[stable(feature = \"future_readiness_fns\", since = \"1.48.0\")]\n impl<T> Debug for Pending<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {"}, {"sha": "98734c527f2b9c35874027386cb9c1008276a7e3", "filename": "library/core/src/iter/sources/empty.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/731bbae816e49cb404f402e8a5d392059e417ee5/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731bbae816e49cb404f402e8a5d392059e417ee5/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs?ref=731bbae816e49cb404f402e8a5d392059e417ee5", "patch": "@@ -22,17 +22,17 @@ pub const fn empty<T>() -> Empty<T> {\n     Empty(marker::PhantomData)\n }\n \n+// Newtype for use in `PhantomData` to avoid\n+// > error: const-stable function cannot use `#[feature(const_fn_fn_ptr_basics)]`\n+// in `const fn empty<T>()` above.\n+struct FnReturning<T>(fn() -> T);\n+\n /// An iterator that yields nothing.\n ///\n /// This `struct` is created by the [`empty()`] function. See its documentation for more.\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n #[stable(feature = \"iter_empty\", since = \"1.2.0\")]\n-pub struct Empty<T>(marker::PhantomData<T>);\n-\n-#[stable(feature = \"iter_empty_send_sync\", since = \"1.42.0\")]\n-unsafe impl<T> Send for Empty<T> {}\n-#[stable(feature = \"iter_empty_send_sync\", since = \"1.42.0\")]\n-unsafe impl<T> Sync for Empty<T> {}\n+pub struct Empty<T>(marker::PhantomData<FnReturning<T>>);\n \n #[stable(feature = \"core_impl_debug\", since = \"1.9.0\")]\n impl<T> fmt::Debug for Empty<T> {"}]}