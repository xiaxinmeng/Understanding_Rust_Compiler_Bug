{"sha": "22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14", "node_id": "C_kwDOAAsO6NoAKDIyZWRmMmU4YTA2MjIyYmJjYmIyYjNiZWUyNmEzYTZhNDRkNThkMTQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-04T09:57:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-04T09:57:22Z"}, "message": "Merge #11186\n\n11186: minor: Simplify r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "183d74da284e1462a01eb8a82b9950d2d0e051fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183d74da284e1462a01eb8a82b9950d2d0e051fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1BoCCRBK7hj4Ov3rIwAA6yQIABNZAlAAxBqyS7sGfPQ7FMDz\nnv3UewrSXl6zlUUcnYGbVgErcILo1qgEtM6cLgfJdVhSAUZ2U+lbNKrddMp2BVlg\n20tr+kFCYIGjf1Rj/PhTK5nXTzKvc2Sf8q6x4ANmD63LN6SOM1ptMHPc4pqsfO/3\nVaedc91ITjQsMkgMZz0LnoGmwIBkepy0dU5m2ROm4sja640fV2Mnr4s/24NDJAo7\nZf60gq0gal8qAjkhnOfQsiWDi/eIv3g2BnmtTB4E0vbXWr8UMGvLAum/ZjPEex3Y\nbkCsXm24ewdzQgWn0PeOkIzm6OK+M8WmO1paCiz7MbplMvt9UrWM5wguVAiYSSQ=\n=R8HK\n-----END PGP SIGNATURE-----\n", "payload": "tree 183d74da284e1462a01eb8a82b9950d2d0e051fa\nparent 7409880a07803c34590ad162d7854061145c6eae\nparent 5fbdf20765a6190137eeef53fa4abac267ad9dd7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1641290242 +0000\ncommitter GitHub <noreply@github.com> 1641290242 +0000\n\nMerge #11186\n\n11186: minor: Simplify r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14", "html_url": "https://github.com/rust-lang/rust/commit/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7409880a07803c34590ad162d7854061145c6eae", "url": "https://api.github.com/repos/rust-lang/rust/commits/7409880a07803c34590ad162d7854061145c6eae", "html_url": "https://github.com/rust-lang/rust/commit/7409880a07803c34590ad162d7854061145c6eae"}, {"sha": "5fbdf20765a6190137eeef53fa4abac267ad9dd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fbdf20765a6190137eeef53fa4abac267ad9dd7", "html_url": "https://github.com/rust-lang/rust/commit/5fbdf20765a6190137eeef53fa4abac267ad9dd7"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "19fdc6c24423f811e8598dc4da17f33060385040", "filename": "crates/ide_completion/src/completions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14/crates%2Fide_completion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14/crates%2Fide_completion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions.rs?ref=22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14", "patch": "@@ -90,7 +90,7 @@ impl Completions {\n             cov_mark::hit!(qualified_path_doc_hidden);\n             return;\n         }\n-        self.add_opt(render_resolution(RenderContext::new(ctx), local_name, resolution));\n+        self.add(render_resolution(RenderContext::new(ctx), local_name, resolution));\n     }\n \n     pub(crate) fn add_macro(\n@@ -103,7 +103,7 @@ impl Completions {\n             Some(it) => it,\n             None => return,\n         };\n-        self.add_opt(render_macro(RenderContext::new(ctx), None, name, macro_));\n+        self.add(render_macro(RenderContext::new(ctx), None, name, macro_));\n     }\n \n     pub(crate) fn add_function("}, {"sha": "1ec6053a7e27028099c8418ff2d88830e852bc53", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14", "patch": "@@ -130,7 +130,7 @@ pub(crate) fn render_resolution(\n     ctx: RenderContext<'_>,\n     local_name: hir::Name,\n     resolution: ScopeDef,\n-) -> Option<CompletionItem> {\n+) -> CompletionItem {\n     render_resolution_(ctx, local_name, None, resolution)\n }\n \n@@ -145,26 +145,26 @@ pub(crate) fn render_resolution_with_import(\n         ScopeDef::ModuleDef(hir::ModuleDef::TypeAlias(t)) => t.name(ctx.completion.db),\n         _ => item_name(ctx.db(), import_edit.import.original_item)?,\n     };\n-    render_resolution_(ctx, local_name, Some(import_edit), resolution)\n+    Some(render_resolution_(ctx, local_name, Some(import_edit), resolution))\n }\n \n fn render_resolution_(\n     ctx: RenderContext<'_>,\n     local_name: hir::Name,\n     import_to_add: Option<ImportEdit>,\n     resolution: ScopeDef,\n-) -> Option<CompletionItem> {\n+) -> CompletionItem {\n     let _p = profile::span(\"render_resolution\");\n     use hir::ModuleDef::*;\n \n     let db = ctx.db();\n \n     let kind = match resolution {\n         ScopeDef::ModuleDef(Function(func)) => {\n-            return Some(render_fn(ctx, import_to_add, Some(local_name), func));\n+            return render_fn(ctx, import_to_add, Some(local_name), func);\n         }\n         ScopeDef::ModuleDef(Variant(var)) if ctx.completion.pattern_ctx.is_none() => {\n-            return Some(render_variant(ctx, import_to_add, Some(local_name), var, None));\n+            return render_variant(ctx, import_to_add, Some(local_name), var, None);\n         }\n         ScopeDef::MacroDef(mac) => return render_macro(ctx, import_to_add, local_name, mac),\n         ScopeDef::Unknown => {\n@@ -176,7 +176,7 @@ fn render_resolution_(\n             if let Some(import_to_add) = import_to_add {\n                 item.add_import(import_to_add);\n             }\n-            return Some(item.build());\n+            return item.build();\n         }\n \n         ScopeDef::ModuleDef(Variant(_)) => CompletionItemKind::SymbolKind(SymbolKind::Variant),\n@@ -249,7 +249,7 @@ fn render_resolution_(\n     if let Some(import_to_add) = import_to_add {\n         item.add_import(import_to_add);\n     }\n-    Some(item.build())\n+    item.build()\n }\n \n fn scope_def_docs(db: &RootDatabase, resolution: ScopeDef) -> Option<hir::Documentation> {"}, {"sha": "5386cbcb273bdd3d6b32b63722558f695c9697d0", "filename": "crates/ide_completion/src/render/macro_.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs?ref=22edf2e8a06222bbcbb2b3bee26a3a6a44d58d14", "patch": "@@ -19,7 +19,7 @@ pub(crate) fn render_macro(\n     import_to_add: Option<ImportEdit>,\n     name: hir::Name,\n     macro_: hir::MacroDef,\n-) -> Option<CompletionItem> {\n+) -> CompletionItem {\n     let _p = profile::span(\"render_macro\");\n     render(ctx, name, macro_, import_to_add)\n }\n@@ -29,15 +29,15 @@ fn render(\n     name: hir::Name,\n     macro_: hir::MacroDef,\n     import_to_add: Option<ImportEdit>,\n-) -> Option<CompletionItem> {\n+) -> CompletionItem {\n     let db = completion.db;\n \n     let source_range = if completion.is_immediately_after_macro_bang() {\n         cov_mark::hit!(completes_macro_call_if_cursor_at_bang_token);\n-        completion.token.parent().map(|it| it.text_range())\n+        completion.token.parent().map_or_else(|| ctx.source_range(), |it| it.text_range())\n     } else {\n-        Some(ctx.source_range())\n-    }?;\n+        ctx.source_range()\n+    };\n \n     let name = name.to_smol_str();\n     let docs = ctx.docs(macro_);\n@@ -79,7 +79,7 @@ fn render(\n         }\n     };\n \n-    Some(item.build())\n+    item.build()\n }\n \n fn label("}]}