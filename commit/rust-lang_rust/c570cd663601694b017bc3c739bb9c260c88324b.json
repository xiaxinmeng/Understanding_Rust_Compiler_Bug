{"sha": "c570cd663601694b017bc3c739bb9c260c88324b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NzBjZDY2MzYwMTY5NGIwMTdiYzNjNzM5YmI5YzI2MGM4ODMyNGI=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-12T07:36:37Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-03T10:48:15Z"}, "message": "Fix make tidy", "tree": {"sha": "0201146ed62f9f9a490ddf60fcda2fb9839de931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0201146ed62f9f9a490ddf60fcda2fb9839de931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c570cd663601694b017bc3c739bb9c260c88324b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c570cd663601694b017bc3c739bb9c260c88324b", "html_url": "https://github.com/rust-lang/rust/commit/c570cd663601694b017bc3c739bb9c260c88324b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c570cd663601694b017bc3c739bb9c260c88324b/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cc84df44cca1b6ab4b1f4d01a7680c72d7f20d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc84df44cca1b6ab4b1f4d01a7680c72d7f20d9", "html_url": "https://github.com/rust-lang/rust/commit/2cc84df44cca1b6ab4b1f4d01a7680c72d7f20d9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c9ae3b3df028c80ddb07bf7034087ed4f0c36dc5", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c570cd663601694b017bc3c739bb9c260c88324b/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c570cd663601694b017bc3c739bb9c260c88324b/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=c570cd663601694b017bc3c739bb9c260c88324b", "patch": "@@ -204,7 +204,7 @@ impl AssociatedItem {\n         match self.kind {\n             AssociatedKind::Const => true,\n             AssociatedKind::Type => true,\n-            // TODO(canndrew): Be more thorough here, check if any argument is uninhabited.\n+            // FIXME(canndrew): Be more thorough here, check if any argument is uninhabited.\n             AssociatedKind::Method => !self.method_has_self_argument,\n         }\n     }"}]}