{"sha": "de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMDhkMGVjMmRhMjNkN2ZkODc4ZGY5ZWE1MDE1MGMwNGZiZDhhN2I=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-22T18:31:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-22T18:31:36Z"}, "message": "Rollup merge of #59323 - euclio:enum-instead-of-variant, r=varkor\n\nuse suggestions for \"enum instead of variant\" error", "tree": {"sha": "cb9ac118c545ad804b2c517588cb7cb68c173c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb9ac118c545ad804b2c517588cb7cb68c173c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJclSoICRBK7hj4Ov3rIwAAdHIIAEZk1SpXIKQPQ8U9sqCqzlu2\nwR4P4tHkNArge9i/X8OPBoo/Qd32HNmhxte/QKaM1H0u9R+ePuFnkDI9yM/lcT1E\n5S2fhDiZqlVhGmOz7XyKwSsp8RHfk6yBRzz+lazCNVKVacGJXEALRP1oDX311GDF\nPniF0shmjyPsxtxTRdCTQ9G4W/aofIeDU1CkvlaiIx4kbw8pvMRcgF7CAja6k2UE\nrbnvixfhlHBOXUcyXx2/M65z606oPLgl4YBWv3KJfG4SsrgQmnmibJVtB0cMUziw\nAuoGvJlIM8w7pkY1n9tQ0ZkMIXE1X7ZUVDhbOePXEzl1yeaEaUqvz9OSSmrIZM8=\n=a8AV\n-----END PGP SIGNATURE-----\n", "payload": "tree cb9ac118c545ad804b2c517588cb7cb68c173c6f\nparent 9d33d6fa4bb506abf53087dfd2be894cd3e5b915\nparent 16a8abe1bb159c4f1255533a4969590e3b7e0e61\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553279496 +0100\ncommitter GitHub <noreply@github.com> 1553279496 +0100\n\nRollup merge of #59323 - euclio:enum-instead-of-variant, r=varkor\n\nuse suggestions for \"enum instead of variant\" error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "html_url": "https://github.com/rust-lang/rust/commit/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d33d6fa4bb506abf53087dfd2be894cd3e5b915", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d33d6fa4bb506abf53087dfd2be894cd3e5b915", "html_url": "https://github.com/rust-lang/rust/commit/9d33d6fa4bb506abf53087dfd2be894cd3e5b915"}, {"sha": "16a8abe1bb159c4f1255533a4969590e3b7e0e61", "url": "https://api.github.com/repos/rust-lang/rust/commits/16a8abe1bb159c4f1255533a4969590e3b7e0e61", "html_url": "https://github.com/rust-lang/rust/commit/16a8abe1bb159c4f1255533a4969590e3b7e0e61"}], "stats": {"total": 165, "additions": 118, "deletions": 47}, "files": [{"sha": "828ffc6d320e75a4c1488f5fca664bbf67ba2fa8", "filename": "src/librustc_resolve/error_reporting.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Flibrustc_resolve%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Flibrustc_resolve%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Ferror_reporting.rs?ref=de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "patch": "@@ -293,13 +293,20 @@ impl<'a> Resolver<'a> {\n             (Def::Enum(..), PathSource::TupleStruct)\n                 | (Def::Enum(..), PathSource::Expr(..))  => {\n                 if let Some(variants) = self.collect_enum_variants(def) {\n-                    err.note(&format!(\"did you mean to use one \\\n-                                       of the following variants?\\n{}\",\n-                        variants.iter()\n-                            .map(|suggestion| path_names_to_string(suggestion))\n-                            .map(|suggestion| format!(\"- `{}`\", suggestion))\n-                            .collect::<Vec<_>>()\n-                            .join(\"\\n\")));\n+                    if !variants.is_empty() {\n+                        let msg = if variants.len() == 1 {\n+                            \"try using the enum's variant\"\n+                        } else {\n+                            \"try using one of the enum's variants\"\n+                        };\n+\n+                        err.span_suggestions(\n+                            span,\n+                            msg,\n+                            variants.iter().map(path_names_to_string),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n                 } else {\n                     err.note(\"did you mean to use one of the enum's variants?\");\n                 }"}, {"sha": "7d3aba364897feeafac5ab8aa9cbe8f2a7b6a90c", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.rs?ref=de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "patch": "@@ -1,5 +1,20 @@\n enum Example { Ex(String), NotEx }\n \n+enum Void {}\n+\n+enum ManyVariants {\n+    One,\n+    Two,\n+    Three,\n+    Four,\n+    Five,\n+    Six,\n+    Seven,\n+    Eight,\n+    Nine,\n+    Ten,\n+}\n+\n fn result_test() {\n     let x = Option(1); //~ ERROR expected function, found enum\n \n@@ -12,6 +27,10 @@ fn result_test() {\n     if let Example(_) = y { //~ ERROR expected tuple struct/variant, found enum\n         println!(\"It is OK.\");\n     }\n+\n+    let y = Void(); //~ ERROR expected function, found enum\n+\n+    let z = ManyVariants(); //~ ERROR expected function, found enum\n }\n \n fn main() {}"}, {"sha": "4210b4e057ac132f08d8cf002a67fc2714051471", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.stderr", "status": "modified", "additions": 42, "deletions": 13, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr?ref=de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "patch": "@@ -1,34 +1,63 @@\n error[E0423]: expected function, found enum `Option`\n-  --> $DIR/issue-43871-enum-instead-of-variant.rs:4:13\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:19:13\n    |\n LL |     let x = Option(1);\n    |             ^^^^^^\n+help: try using one of the enum's variants\n    |\n-   = note: did you mean to use one of the following variants?\n-           - `std::prelude::v1::Option::None`\n-           - `std::prelude::v1::Option::Some`\n+LL |     let x = std::prelude::v1::Option::None(1);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let x = std::prelude::v1::Option::Some(1);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0532]: expected tuple struct/variant, found enum `Option`\n-  --> $DIR/issue-43871-enum-instead-of-variant.rs:6:12\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:21:12\n    |\n LL |     if let Option(_) = x {\n    |            ^^^^^^\n+help: try using one of the enum's variants\n    |\n-   = note: did you mean to use one of the following variants?\n-           - `std::prelude::v1::Option::None`\n-           - `std::prelude::v1::Option::Some`\n+LL |     if let std::prelude::v1::Option::None(_) = x {\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     if let std::prelude::v1::Option::Some(_) = x {\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0532]: expected tuple struct/variant, found enum `Example`\n-  --> $DIR/issue-43871-enum-instead-of-variant.rs:12:12\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:27:12\n    |\n LL |     if let Example(_) = y {\n    |            ^^^^^^^\n+help: try using one of the enum's variants\n    |\n-   = note: did you mean to use one of the following variants?\n-           - `Example::Ex`\n-           - `Example::NotEx`\n+LL |     if let Example::Ex(_) = y {\n+   |            ^^^^^^^^^^^\n+LL |     if let Example::NotEx(_) = y {\n+   |            ^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error[E0423]: expected function, found enum `Void`\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:31:13\n+   |\n+LL |     let y = Void();\n+   |             ^^^^\n+\n+error[E0423]: expected function, found enum `ManyVariants`\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:33:13\n+   |\n+LL |     let z = ManyVariants();\n+   |             ^^^^^^^^^^^^\n+help: try using one of the enum's variants\n+   |\n+LL |     let z = ManyVariants::Eight();\n+   |             ^^^^^^^^^^^^^^^^^^^\n+LL |     let z = ManyVariants::Five();\n+   |             ^^^^^^^^^^^^^^^^^^\n+LL |     let z = ManyVariants::Four();\n+   |             ^^^^^^^^^^^^^^^^^^\n+LL |     let z = ManyVariants::Nine();\n+   |             ^^^^^^^^^^^^^^^^^^\n+and 6 other candidates\n+\n+error: aborting due to 5 previous errors\n \n Some errors occurred: E0423, E0532.\n For more information about an error, try `rustc --explain E0423`."}, {"sha": "c252a6e220c64567a5fd5078e0afb2011a91ad5e", "filename": "src/test/ui/glob-resolve1.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fglob-resolve1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fglob-resolve1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fglob-resolve1.stderr?ref=de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "patch": "@@ -22,10 +22,7 @@ error[E0423]: expected value, found enum `B`\n   --> $DIR/glob-resolve1.rs:24:5\n    |\n LL |     B;\n-   |     ^\n-   |\n-   = note: did you mean to use one of the following variants?\n-           - `B::B1`\n+   |     ^ help: try using the enum's variant: `B::B1`\n \n error[E0425]: cannot find value `C` in this scope\n   --> $DIR/glob-resolve1.rs:25:5"}, {"sha": "75d9c97513d3116de54376909e244a4b648ef06e", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 42, "deletions": 23, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de08d0ec2da23d7fd878df9ea50150c04fbd8a7b/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=de08d0ec2da23d7fd878df9ea50150c04fbd8a7b", "patch": "@@ -3,22 +3,32 @@ error[E0423]: expected value, found enum `n::Z`\n    |\n LL |         n::Z;\n    |         ^^^^\n-   |\n-   = note: did you mean to use one of the following variants?\n-           - `m::Z::Fn`\n-           - `m::Z::Struct`\n-           - `m::Z::Unit`\n+help: try using one of the enum's variants\n+   |\n+LL |         m::Z::Fn;\n+   |         ^^^^^^^^\n+LL |         m::Z::Struct;\n+   |         ^^^^^^^^^^^^\n+LL |         m::Z::Unit;\n+   |         ^^^^^^^^^^\n \n error[E0423]: expected value, found enum `Z`\n   --> $DIR/privacy-enum-ctor.rs:25:9\n    |\n LL |         Z;\n-   |         ^ help: a function with a similar name exists: `f`\n+   |         ^\n+help: a function with a similar name exists\n    |\n-   = note: did you mean to use one of the following variants?\n-           - `m::Z::Fn`\n-           - `m::Z::Struct`\n-           - `m::Z::Unit`\n+LL |         f;\n+   |         ^\n+help: try using one of the enum's variants\n+   |\n+LL |         m::Z::Fn;\n+   |         ^^^^^^^^\n+LL |         m::Z::Struct;\n+   |         ^^^^^^^^^^^^\n+LL |         m::Z::Unit;\n+   |         ^^^^^^^^^^\n \n error[E0423]: expected value, found struct variant `Z::Struct`\n   --> $DIR/privacy-enum-ctor.rs:29:20\n@@ -31,15 +41,18 @@ error[E0423]: expected value, found enum `m::E`\n    |\n LL |     let _: E = m::E;\n    |                ^^^^\n-   |\n-   = note: did you mean to use one of the following variants?\n-           - `E::Fn`\n-           - `E::Struct`\n-           - `E::Unit`\n help: a function with a similar name exists\n    |\n LL |     let _: E = m::f;\n    |                   ^\n+help: try using one of the enum's variants\n+   |\n+LL |     let _: E = E::Fn;\n+   |                ^^^^^\n+LL |     let _: E = E::Struct;\n+   |                ^^^^^^^^^\n+LL |     let _: E = E::Unit;\n+   |                ^^^^^^^\n help: possible better candidates are found in other modules, you can import them into scope\n    |\n LL | use std::f32::consts::E;\n@@ -58,11 +71,14 @@ error[E0423]: expected value, found enum `E`\n    |\n LL |     let _: E = E;\n    |                ^\n+help: try using one of the enum's variants\n    |\n-   = note: did you mean to use one of the following variants?\n-           - `E::Fn`\n-           - `E::Struct`\n-           - `E::Unit`\n+LL |     let _: E = E::Fn;\n+   |                ^^^^^\n+LL |     let _: E = E::Struct;\n+   |                ^^^^^^^^^\n+LL |     let _: E = E::Unit;\n+   |                ^^^^^^^\n help: possible better candidates are found in other modules, you can import them into scope\n    |\n LL | use std::f32::consts::E;\n@@ -95,11 +111,14 @@ error[E0423]: expected value, found enum `m::n::Z`\n    |\n LL |     let _: Z = m::n::Z;\n    |                ^^^^^^^\n+help: try using one of the enum's variants\n    |\n-   = note: did you mean to use one of the following variants?\n-           - `m::Z::Fn`\n-           - `m::Z::Struct`\n-           - `m::Z::Unit`\n+LL |     let _: Z = m::Z::Fn;\n+   |                ^^^^^^^^\n+LL |     let _: Z = m::Z::Struct;\n+   |                ^^^^^^^^^^^^\n+LL |     let _: Z = m::Z::Unit;\n+   |                ^^^^^^^^^^\n \n error[E0412]: cannot find type `Z` in this scope\n   --> $DIR/privacy-enum-ctor.rs:61:12"}]}