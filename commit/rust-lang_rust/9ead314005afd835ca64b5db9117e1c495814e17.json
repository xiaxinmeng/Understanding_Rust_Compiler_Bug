{"sha": "9ead314005afd835ca64b5db9117e1c495814e17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYWQzMTQwMDVhZmQ4MzVjYTY0YjVkYjkxMTdlMWM0OTU4MTRlMTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T19:21:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T19:24:30Z"}, "message": "Encapsulate inlay hints activation", "tree": {"sha": "67ef26be75ec5db5fd66761a67b65a09e42d363e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67ef26be75ec5db5fd66761a67b65a09e42d363e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ead314005afd835ca64b5db9117e1c495814e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ead314005afd835ca64b5db9117e1c495814e17", "html_url": "https://github.com/rust-lang/rust/commit/9ead314005afd835ca64b5db9117e1c495814e17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ead314005afd835ca64b5db9117e1c495814e17/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8368f09b4857a225ff9e59dd8977ed21c408536", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8368f09b4857a225ff9e59dd8977ed21c408536", "html_url": "https://github.com/rust-lang/rust/commit/b8368f09b4857a225ff9e59dd8977ed21c408536"}], "stats": {"total": 77, "additions": 39, "deletions": 38}, "files": [{"sha": "4581e22782f08011d2429753c5b41cc31dc45d83", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9ead314005afd835ca64b5db9117e1c495814e17/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9ead314005afd835ca64b5db9117e1c495814e17/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=9ead314005afd835ca64b5db9117e1c495814e17", "patch": "@@ -1,6 +1,42 @@\n import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n import { Server } from './server';\n+import { Ctx } from './ctx';\n+\n+export function activateInlayHints(ctx: Ctx) {\n+    const hintsUpdater = new HintsUpdater();\n+    hintsUpdater.refreshHintsForVisibleEditors().then(() => {\n+        // vscode may ignore top level hintsUpdater.refreshHintsForVisibleEditors()\n+        // so update the hints once when the focus changes to guarantee their presence\n+        let editorChangeDisposable: vscode.Disposable | null = null;\n+        editorChangeDisposable = vscode.window.onDidChangeActiveTextEditor(\n+            _ => {\n+                if (editorChangeDisposable !== null) {\n+                    editorChangeDisposable.dispose();\n+                }\n+                return hintsUpdater.refreshHintsForVisibleEditors();\n+            },\n+        );\n+\n+        ctx.pushCleanup(\n+            vscode.window.onDidChangeVisibleTextEditors(_ =>\n+                hintsUpdater.refreshHintsForVisibleEditors(),\n+            ),\n+        );\n+        ctx.pushCleanup(\n+            vscode.workspace.onDidChangeTextDocument(e =>\n+                hintsUpdater.refreshHintsForVisibleEditors(e),\n+            ),\n+        );\n+        ctx.pushCleanup(\n+            vscode.workspace.onDidChangeConfiguration(_ =>\n+                hintsUpdater.toggleHintsDisplay(\n+                    Server.config.displayInlayHints,\n+                ),\n+            ),\n+        );\n+    });\n+}\n \n interface InlayHintsParams {\n     textDocument: lc.TextDocumentIdentifier;\n@@ -18,7 +54,7 @@ const typeHintDecorationType = vscode.window.createTextEditorDecorationType({\n     },\n });\n \n-export class HintsUpdater {\n+class HintsUpdater {\n     private displayHints = true;\n \n     public async toggleHintsDisplay(displayHints: boolean): Promise<void> {"}, {"sha": "7e63a9cac23ef1e130ac153807a0f52fbe6898c6", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9ead314005afd835ca64b5db9117e1c495814e17/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9ead314005afd835ca64b5db9117e1c495814e17/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=9ead314005afd835ca64b5db9117e1c495814e17", "patch": "@@ -2,7 +2,7 @@ import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n \n import * as commands from './commands';\n-import { HintsUpdater } from './inlay_hints';\n+import { activateInlayHints } from './inlay_hints';\n import { StatusDisplay } from './status_display';\n import * as events from './events';\n import * as notifications from './notifications';\n@@ -37,10 +37,6 @@ export async function activate(context: vscode.ExtensionContext) {\n     );\n     ctx.pushCleanup(watchStatus);\n \n-    function disposeOnDeactivation(disposable: vscode.Disposable) {\n-        context.subscriptions.push(disposable);\n-    }\n-\n     // Notifications are events triggered by the language server\n     const allNotifications: [string, lc.GenericNotificationHandler][] = [\n         [\n@@ -71,38 +67,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     }\n \n     if (Server.config.displayInlayHints) {\n-        const hintsUpdater = new HintsUpdater();\n-        hintsUpdater.refreshHintsForVisibleEditors().then(() => {\n-            // vscode may ignore top level hintsUpdater.refreshHintsForVisibleEditors()\n-            // so update the hints once when the focus changes to guarantee their presence\n-            let editorChangeDisposable: vscode.Disposable | null = null;\n-            editorChangeDisposable = vscode.window.onDidChangeActiveTextEditor(\n-                _ => {\n-                    if (editorChangeDisposable !== null) {\n-                        editorChangeDisposable.dispose();\n-                    }\n-                    return hintsUpdater.refreshHintsForVisibleEditors();\n-                },\n-            );\n-\n-            disposeOnDeactivation(\n-                vscode.window.onDidChangeVisibleTextEditors(_ =>\n-                    hintsUpdater.refreshHintsForVisibleEditors(),\n-                ),\n-            );\n-            disposeOnDeactivation(\n-                vscode.workspace.onDidChangeTextDocument(e =>\n-                    hintsUpdater.refreshHintsForVisibleEditors(e),\n-                ),\n-            );\n-            disposeOnDeactivation(\n-                vscode.workspace.onDidChangeConfiguration(_ =>\n-                    hintsUpdater.toggleHintsDisplay(\n-                        Server.config.displayInlayHints,\n-                    ),\n-                ),\n-            );\n-        });\n+        activateInlayHints(ctx);\n     }\n }\n "}]}