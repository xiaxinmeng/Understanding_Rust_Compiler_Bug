{"sha": "4c21f66c1dffefa0dbeec3e409aa77630cb9a448", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMjFmNjZjMWRmZmVmYTBkYmVlYzNlNDA5YWE3NzYzMGNiOWE0NDg=", "commit": {"author": {"name": "Olivier Goffart", "email": "ogoffart@woboq.com", "date": "2018-11-20T12:24:41Z"}, "committer": {"name": "Olivier Goffart", "email": "ogoffart@woboq.com", "date": "2018-11-20T12:24:41Z"}, "message": "Add comments and rename a local variable", "tree": {"sha": "43f8cfe1c3bf047b4145bb8abc42ab4932dda3e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43f8cfe1c3bf047b4145bb8abc42ab4932dda3e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c21f66c1dffefa0dbeec3e409aa77630cb9a448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c21f66c1dffefa0dbeec3e409aa77630cb9a448", "html_url": "https://github.com/rust-lang/rust/commit/4c21f66c1dffefa0dbeec3e409aa77630cb9a448", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c21f66c1dffefa0dbeec3e409aa77630cb9a448/comments", "author": {"login": "ogoffart", "id": 959326, "node_id": "MDQ6VXNlcjk1OTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/959326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogoffart", "html_url": "https://github.com/ogoffart", "followers_url": "https://api.github.com/users/ogoffart/followers", "following_url": "https://api.github.com/users/ogoffart/following{/other_user}", "gists_url": "https://api.github.com/users/ogoffart/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogoffart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogoffart/subscriptions", "organizations_url": "https://api.github.com/users/ogoffart/orgs", "repos_url": "https://api.github.com/users/ogoffart/repos", "events_url": "https://api.github.com/users/ogoffart/events{/privacy}", "received_events_url": "https://api.github.com/users/ogoffart/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ogoffart", "id": 959326, "node_id": "MDQ6VXNlcjk1OTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/959326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogoffart", "html_url": "https://github.com/ogoffart", "followers_url": "https://api.github.com/users/ogoffart/followers", "following_url": "https://api.github.com/users/ogoffart/following{/other_user}", "gists_url": "https://api.github.com/users/ogoffart/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogoffart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogoffart/subscriptions", "organizations_url": "https://api.github.com/users/ogoffart/orgs", "repos_url": "https://api.github.com/users/ogoffart/repos", "events_url": "https://api.github.com/users/ogoffart/events{/privacy}", "received_events_url": "https://api.github.com/users/ogoffart/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86d41350c790502d3a1227bab3433ac7472ccb4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/86d41350c790502d3a1227bab3433ac7472ccb4c", "html_url": "https://github.com/rust-lang/rust/commit/86d41350c790502d3a1227bab3433ac7472ccb4c"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a91e9318471aa9fb7fc8326050a5c4412a178b00", "filename": "src/librustc_codegen_ssa/mir/operand.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4c21f66c1dffefa0dbeec3e409aa77630cb9a448/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c21f66c1dffefa0dbeec3e409aa77630cb9a448/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs?ref=4c21f66c1dffefa0dbeec3e409aa77630cb9a448", "patch": "@@ -243,22 +243,25 @@ impl<'a, 'tcx: 'a, V: CodegenObject> OperandRef<'tcx, V> {\n             _ => bug!(\"OperandRef::extract_field({:?}): not applicable\", self)\n         };\n \n-        let bitcast = |bx: &mut Bx, val, ty| {\n+        // HACK(eddyb) have to bitcast pointers until LLVM removes pointee types.\n+        // Bools in union fields needs to be truncated.\n+        let to_immediate_or_cast = |bx: &mut Bx, val, ty| {\n             if ty == bx.cx().type_i1() {\n                 bx.trunc(val, ty)\n             } else {\n                 bx.bitcast(val, ty)\n             }\n         };\n \n-        // HACK(eddyb) have to bitcast pointers until LLVM removes pointee types.\n         match val {\n             OperandValue::Immediate(ref mut llval) => {\n-                *llval = bitcast(bx, *llval, bx.cx().immediate_backend_type(field));\n+                *llval = to_immediate_or_cast(bx, *llval, bx.cx().immediate_backend_type(field));\n             }\n             OperandValue::Pair(ref mut a, ref mut b) => {\n-                *a = bitcast(bx, *a, bx.cx().scalar_pair_element_backend_type(field, 0, true));\n-                *b = bitcast(bx, *b, bx.cx().scalar_pair_element_backend_type(field, 1, true));\n+                *a = to_immediate_or_cast(bx, *a, bx.cx()\n+                    .scalar_pair_element_backend_type(field, 0, true));\n+                *b = to_immediate_or_cast(bx, *b, bx.cx()\n+                    .scalar_pair_element_backend_type(field, 1, true));\n             }\n             OperandValue::Ref(..) => bug!()\n         }"}]}