{"sha": "64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZjUzZGZiYjA3MGUwYjJhMGM3NzA0MmIyM2RiMTViMGVjNjRlNDg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T00:29:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T19:08:27Z"}, "message": "Convert uses of str::split to split_ivec", "tree": {"sha": "c71b2579a822def40f4823a0d08bde5447662efd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c71b2579a822def40f4823a0d08bde5447662efd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "html_url": "https://github.com/rust-lang/rust/commit/64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb9cba19f145b94f181591d1d7428504e185818", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb9cba19f145b94f181591d1d7428504e185818", "html_url": "https://github.com/rust-lang/rust/commit/cfb9cba19f145b94f181591d1d7428504e185818"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "0acc9216fc026564629add181c130e115bdcf3f8", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "patch": "@@ -354,13 +354,10 @@ fn build_link_meta(sess: &session::session, c: &ast::crate, output: &str,\n         ret alt metas.name {\n               some(v) { v }\n               none. {\n-                // FIXME: Remove this vec->ivec conversion.\n                 let name =\n                     {\n-                        let os_vec =\n-                            str::split(fs::basename(output), '.' as u8);\n-                        let os = ~[];\n-                        for s: str  in os_vec { os += ~[s]; }\n+                        let os =\n+                            str::split_ivec(fs::basename(output), '.' as u8);\n                         assert (ivec::len(os) >= 2u);\n                         ivec::pop(os);\n                         str::connect_ivec(os, \".\")"}, {"sha": "8d28b9f47b56eb20c73074075a7ed3a77d087169", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "patch": "@@ -586,9 +586,9 @@ fn main(args: vec[str]) {\n                      } else { ret filename; }\n                  }(config, _);\n         fn rmext(filename: str) -> str {\n-            let parts = str::split(filename, '.' as u8);\n-            vec::pop(parts);\n-            ret str::connect(parts, \".\");\n+            let parts = str::split_ivec(filename, '.' as u8);\n+            ivec::pop(parts);\n+            ret str::connect_ivec(parts, \".\");\n         }\n         ret alt config.os {\n               session::os_macos. { rmext(rmlib(filename)) }"}, {"sha": "9af6a98da893545d172c28f8d3e50b2e6fce72c2", "filename": "src/comp/metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Fcomp%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Fcomp%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcstore.rs?ref=64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "patch": "@@ -106,12 +106,7 @@ fn get_used_libraries(cstore: &cstore) -> [str] {\n }\n \n fn add_used_link_args(cstore: &cstore, args: &str) {\n-    let used_link_args_vec = str::split(args, ' ' as u8);\n-\n-    // TODO: Remove this vec->ivec conversion.\n-    for ula: str  in used_link_args_vec {\n-        p(cstore).used_link_args += ~[ula];\n-    }\n+    p(cstore).used_link_args += str::split_ivec(args, ' ' as u8);\n }\n \n fn get_used_link_args(cstore: &cstore) -> [str] {"}, {"sha": "d51939650c0f8b8aa9a256bfc3895fd301d4ad71", "filename": "src/test/compiletest/runtest.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Ftest%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Ftest%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fruntest.rs?ref=64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "patch": "@@ -193,7 +193,7 @@ fn check_error_patterns(props: &test_props, testfile: &str,\n \n     let next_err_idx = 0u;\n     let next_err_pat = props.error_patterns.(next_err_idx);\n-    for line: str  in str::split(procres.stdout, '\\n' as u8) {\n+    for line: str  in str::split_ivec(procres.stdout, '\\n' as u8) {\n         if str::find(line, next_err_pat) > 0 {\n             log #fmt(\"found error pattern %s\", next_err_pat);\n             next_err_idx += 1u;\n@@ -355,9 +355,9 @@ fn output_base_name(config: &config, testfile: &str) -> str {\n     let base = config.build_base;\n     let filename =\n         {\n-            let parts = str::split(fs::basename(testfile), '.' as u8);\n-            parts = vec::slice(parts, 0u, vec::len(parts) - 1u);\n-            str::connect(parts, \".\")\n+            let parts = str::split_ivec(fs::basename(testfile), '.' as u8);\n+            parts = ivec::slice(parts, 0u, ivec::len(parts) - 1u);\n+            str::connect_ivec(parts, \".\")\n         };\n     #fmt(\"%s%s.%s\", base, filename, config.stage_id)\n }"}, {"sha": "d1d2e9e687b9f5bae41413f56b49295981e73dbb", "filename": "src/test/stdtest/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Ftest%2Fstdtest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f53dfbb070e0b2a0c77042b23db15b0ec64e48/src%2Ftest%2Fstdtest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstr.rs?ref=64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "patch": "@@ -27,7 +27,7 @@ fn test_split() {\n     fn t(s: &str, c: char, i: int, k: &str) {\n         log \"splitting: \" + s;\n         log i;\n-        let v = str::split(s, c as u8);\n+        let v = str::split_ivec(s, c as u8);\n         log \"split to: \";\n         for z: str  in v { log z; }\n         log \"comparing: \" + v.(i) + \" vs. \" + k;"}]}