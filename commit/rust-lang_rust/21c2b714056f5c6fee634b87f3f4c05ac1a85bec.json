{"sha": "21c2b714056f5c6fee634b87f3f4c05ac1a85bec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYzJiNzE0MDU2ZjVjNmZlZTYzNGI4N2YzZjRjMDVhYzFhODViZWM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-04-24T12:17:05Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-04-30T16:18:32Z"}, "message": "Remove unused error variants", "tree": {"sha": "f7887419cabda429e0ad742d6b44043645ffbcb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7887419cabda429e0ad742d6b44043645ffbcb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21c2b714056f5c6fee634b87f3f4c05ac1a85bec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrnQdgsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MAS9\niw//WYZsIhFc7SPyAy0GWq2RHhcBlxAe6DaRm49Vpbi0sUhn1IedCHVr9CyXI5Hu\nP1sHU3Yue1a5zizn3Ie+mu0UM1lBFdO6Lw90svlEsCvVsHC69cQIXxp1eqaSo6Dw\nWH1VXqReuFC+rmXr1/kqgu0czXxbLEwChe7VgcFlRNTs9gJGE03ptWS4uVi2UkUj\nkHSIz4TC96dvfca8ARElvztyvRzknRK+UmlwR/6HGV22J5XQtgTkXosON7FBhU01\nFyhFo1NB/bYO3sEm8xh75FW2pBbGcP454dJCY0LsIFAwJueV8+nTEEKz3tV73i4f\nbBrSF/wXamotds0C0HIskDyOkvhvfT7QxOggtUYX3RKSxviddxZphiBLhaQr/sgZ\nzTOWVrB/O5HCQTVuOFqlMjE0z9RVh8uLVQKh4OK4062O/zgeQEZxACYgf2YbZh7f\n7Py1zhN1+VMCUCLNq5RxD85OESKd8P+HKdStrCblZcIJKrpqE+aJvNJf3Xm6xTk0\ngDFTutKsNiNIcEanQN0crxU8F9LLZ8HyADN7adoY3b9vrI7vrhL4gItnBqLlsS+h\n1ahsl+mINZcHcytOdE/jMUJ8x7BF3fBMXypG6YGfwrLdXFlG5sYl0TxBIPcoZqTv\nc38bjKGHDCfYxidYNbHqB+sJwYcOwaDmephO3pyBKNI/CiA=\n=D7q7\n-----END PGP SIGNATURE-----", "payload": "tree f7887419cabda429e0ad742d6b44043645ffbcb8\nparent 64e6dda0bce96da47e52f7f3e278d05f7a09473c\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1524572225 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1525105112 +0200\n\nRemove unused error variants\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21c2b714056f5c6fee634b87f3f4c05ac1a85bec", "html_url": "https://github.com/rust-lang/rust/commit/21c2b714056f5c6fee634b87f3f4c05ac1a85bec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21c2b714056f5c6fee634b87f3f4c05ac1a85bec/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64e6dda0bce96da47e52f7f3e278d05f7a09473c", "url": "https://api.github.com/repos/rust-lang/rust/commits/64e6dda0bce96da47e52f7f3e278d05f7a09473c", "html_url": "https://github.com/rust-lang/rust/commit/64e6dda0bce96da47e52f7f3e278d05f7a09473c"}], "stats": {"total": 32, "additions": 1, "deletions": 31}, "files": [{"sha": "afa28ae319cba18f133cd1b629919b5b7d2d9198", "filename": "src/librustc/ich/impls_const_math.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21c2b714056f5c6fee634b87f3f4c05ac1a85bec/src%2Flibrustc%2Fich%2Fimpls_const_math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c2b714056f5c6fee634b87f3f4c05ac1a85bec/src%2Flibrustc%2Fich%2Fimpls_const_math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_const_math.rs?ref=21c2b714056f5c6fee634b87f3f4c05ac1a85bec", "patch": "@@ -17,16 +17,11 @@ impl_stable_hash_for!(struct ::rustc_const_math::ConstFloat {\n });\n \n impl_stable_hash_for!(enum ::rustc_const_math::ConstMathErr {\n-    NotInRange,\n     CmpBetweenUnequalTypes,\n     UnequalTypes(op),\n     Overflow(op),\n-    ShiftNegative,\n     DivisionByZero,\n     RemainderByZero,\n-    UnsignedNegation,\n-    ULitOutOfRange(int_ty),\n-    LitOutOfRange(int_ty)\n });\n \n impl_stable_hash_for!(enum ::rustc_const_math::Op {"}, {"sha": "8a2126e356f86da3cecfec3505b4f5585fb37dfb", "filename": "src/librustc/middle/const_val.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21c2b714056f5c6fee634b87f3f4c05ac1a85bec/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c2b714056f5c6fee634b87f3f4c05ac1a85bec/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_val.rs?ref=21c2b714056f5c6fee634b87f3f4c05ac1a85bec", "patch": "@@ -78,10 +78,7 @@ pub struct FrameInfo {\n \n impl<'tcx> From<ConstMathErr> for ErrKind<'tcx> {\n     fn from(err: ConstMathErr) -> ErrKind<'tcx> {\n-        match err {\n-            ConstMathErr::UnsignedNegation => ErrKind::TypeckError,\n-            _ => ErrKind::Math(err)\n-        }\n+        ErrKind::Math(err)\n     }\n }\n "}, {"sha": "dee8813e86f2833732c822c30869d3f5dd331bca", "filename": "src/librustc_const_math/err.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/21c2b714056f5c6fee634b87f3f4c05ac1a85bec/src%2Flibrustc_const_math%2Ferr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c2b714056f5c6fee634b87f3f4c05ac1a85bec/src%2Flibrustc_const_math%2Ferr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Ferr.rs?ref=21c2b714056f5c6fee634b87f3f4c05ac1a85bec", "patch": "@@ -8,20 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use syntax::ast;\n-\n #[derive(Debug, PartialEq, Eq, Clone, RustcEncodable, RustcDecodable)]\n pub enum ConstMathErr {\n-    NotInRange,\n     CmpBetweenUnequalTypes,\n     UnequalTypes(Op),\n     Overflow(Op),\n-    ShiftNegative,\n     DivisionByZero,\n     RemainderByZero,\n-    UnsignedNegation,\n-    ULitOutOfRange(ast::UintTy),\n-    LitOutOfRange(ast::IntTy),\n }\n pub use self::ConstMathErr::*;\n \n@@ -44,7 +37,6 @@ impl ConstMathErr {\n     pub fn description(&self) -> &'static str {\n         use self::Op::*;\n         match *self {\n-            NotInRange => \"inferred value out of range\",\n             CmpBetweenUnequalTypes => \"compared two values of different types\",\n             UnequalTypes(Add) => \"tried to add two values of different types\",\n             UnequalTypes(Sub) => \"tried to subtract two values of different types\",\n@@ -66,22 +58,8 @@ impl ConstMathErr {\n             Overflow(Shr) => \"attempt to shift right with overflow\",\n             Overflow(Shl) => \"attempt to shift left with overflow\",\n             Overflow(_) => unreachable!(),\n-            ShiftNegative => \"attempt to shift by a negative amount\",\n             DivisionByZero => \"attempt to divide by zero\",\n             RemainderByZero => \"attempt to calculate the remainder with a divisor of zero\",\n-            UnsignedNegation => \"unary negation of unsigned integer\",\n-            ULitOutOfRange(ast::UintTy::U8) => \"literal out of range for u8\",\n-            ULitOutOfRange(ast::UintTy::U16) => \"literal out of range for u16\",\n-            ULitOutOfRange(ast::UintTy::U32) => \"literal out of range for u32\",\n-            ULitOutOfRange(ast::UintTy::U64) => \"literal out of range for u64\",\n-            ULitOutOfRange(ast::UintTy::U128) => \"literal out of range for u128\",\n-            ULitOutOfRange(ast::UintTy::Usize) => \"literal out of range for usize\",\n-            LitOutOfRange(ast::IntTy::I8) => \"literal out of range for i8\",\n-            LitOutOfRange(ast::IntTy::I16) => \"literal out of range for i16\",\n-            LitOutOfRange(ast::IntTy::I32) => \"literal out of range for i32\",\n-            LitOutOfRange(ast::IntTy::I64) => \"literal out of range for i64\",\n-            LitOutOfRange(ast::IntTy::I128) => \"literal out of range for i128\",\n-            LitOutOfRange(ast::IntTy::Isize) => \"literal out of range for isize\",\n         }\n     }\n }"}]}