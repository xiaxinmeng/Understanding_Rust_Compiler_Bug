{"sha": "265e4841b7d8ee26ed0d642075f3c90496ba610a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NWU0ODQxYjdkOGVlMjZlZDBkNjQyMDc1ZjNjOTA0OTZiYTYxMGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-08T21:33:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-08T21:33:32Z"}, "message": "Auto merge of #6117 - dtolnay:string_lit_as_bytes, r=ebroto\n\nDowngrade string_lit_as_bytes to nursery\n\nBetween #1402 (regarding `to_owned`) and #4494 (regarding `impl Read`), as well as other confusion I've seen hit in my work codebase involving string_lit_as_bytes (`\"...\".as_bytes().into()`), I don't think this lint is at a quality to be enabled by default.\n\nI would consider re-enabling this lint after it is updated to understand when the surrounding type information is sufficient to unsize `b\"...\"` to &\\[u8\\] without causing a type error.\n\nAs currently implemented, this lint is pushing people to write `&b\"_\"[..]` which is not an improvement over `\"_\".as_bytes()` as far as I am concerned.\n\n---\n\nchangelog: Remove string_lit_as_bytes from default set of enabled lints", "tree": {"sha": "2be47e6314e0a4cfff0957994e1f2179e318d4dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2be47e6314e0a4cfff0957994e1f2179e318d4dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/265e4841b7d8ee26ed0d642075f3c90496ba610a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/265e4841b7d8ee26ed0d642075f3c90496ba610a", "html_url": "https://github.com/rust-lang/rust/commit/265e4841b7d8ee26ed0d642075f3c90496ba610a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/265e4841b7d8ee26ed0d642075f3c90496ba610a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bfc19c687f30f05e33028a22bd321204c53bf43", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfc19c687f30f05e33028a22bd321204c53bf43", "html_url": "https://github.com/rust-lang/rust/commit/6bfc19c687f30f05e33028a22bd321204c53bf43"}, {"sha": "c81bea45f480d9d5a785778c944a3ad3daf30d27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c81bea45f480d9d5a785778c944a3ad3daf30d27", "html_url": "https://github.com/rust-lang/rust/commit/c81bea45f480d9d5a785778c944a3ad3daf30d27"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "93b5d9e178c2342fc4f02bedee3ce1c10b805102", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/265e4841b7d8ee26ed0d642075f3c90496ba610a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265e4841b7d8ee26ed0d642075f3c90496ba610a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=265e4841b7d8ee26ed0d642075f3c90496ba610a", "patch": "@@ -1477,7 +1477,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n         LintId::of(&slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),\n         LintId::of(&stable_sort_primitive::STABLE_SORT_PRIMITIVE),\n-        LintId::of(&strings::STRING_LIT_AS_BYTES),\n         LintId::of(&suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL),\n         LintId::of(&suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL),\n         LintId::of(&swap::ALMOST_SWAPPED),\n@@ -1619,7 +1618,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&returns::LET_AND_RETURN),\n         LintId::of(&returns::NEEDLESS_RETURN),\n         LintId::of(&single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n-        LintId::of(&strings::STRING_LIT_AS_BYTES),\n         LintId::of(&tabs_in_doc_comments::TABS_IN_DOC_COMMENTS),\n         LintId::of(&to_digit_is_some::TO_DIGIT_IS_SOME),\n         LintId::of(&try_err::TRY_ERR),\n@@ -1831,6 +1829,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&needless_borrow::NEEDLESS_BORROW),\n         LintId::of(&path_buf_push_overwrite::PATH_BUF_PUSH_OVERWRITE),\n         LintId::of(&redundant_pub_crate::REDUNDANT_PUB_CRATE),\n+        LintId::of(&strings::STRING_LIT_AS_BYTES),\n         LintId::of(&transmute::USELESS_TRANSMUTE),\n         LintId::of(&use_self::USE_SELF),\n     ]);"}, {"sha": "3783bd78de25e324bf2c5a10b6ee3dfa5084780d", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/265e4841b7d8ee26ed0d642075f3c90496ba610a/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265e4841b7d8ee26ed0d642075f3c90496ba610a/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=265e4841b7d8ee26ed0d642075f3c90496ba610a", "patch": "@@ -69,7 +69,27 @@ declare_clippy_lint! {\n     /// **Why is this bad?** Byte string literals (e.g., `b\"foo\"`) can be used\n     /// instead. They are shorter but less discoverable than `as_bytes()`.\n     ///\n-    /// **Known Problems:** None.\n+    /// **Known Problems:**\n+    /// `\"str\".as_bytes()` and the suggested replacement of `b\"str\"` are not\n+    /// equivalent because they have different types. The former is `&[u8]`\n+    /// while the latter is `&[u8; 3]`. That means in general they will have a\n+    /// different set of methods and different trait implementations.\n+    ///\n+    /// ```compile_fail\n+    /// fn f(v: Vec<u8>) {}\n+    ///\n+    /// f(\"...\".as_bytes().to_owned()); // works\n+    /// f(b\"...\".to_owned()); // does not work, because arg is [u8; 3] not Vec<u8>\n+    ///\n+    /// fn g(r: impl std::io::Read) {}\n+    ///\n+    /// g(\"...\".as_bytes()); // works\n+    /// g(b\"...\"); // does not work\n+    /// ```\n+    ///\n+    /// The actual equivalent of `\"str\".as_bytes()` with the same type is not\n+    /// `b\"str\"` but `&b\"str\"[..]`, which is a great deal of punctuation and not\n+    /// more readable than a function call.\n     ///\n     /// **Example:**\n     /// ```rust\n@@ -80,7 +100,7 @@ declare_clippy_lint! {\n     /// let bs = b\"a byte string\";\n     /// ```\n     pub STRING_LIT_AS_BYTES,\n-    style,\n+    nursery,\n     \"calling `as_bytes` on a string literal instead of using a byte string literal\"\n }\n "}, {"sha": "ce3d0efab3aa7d912569cf801988355ce79d35f5", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/265e4841b7d8ee26ed0d642075f3c90496ba610a/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265e4841b7d8ee26ed0d642075f3c90496ba610a/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=265e4841b7d8ee26ed0d642075f3c90496ba610a", "patch": "@@ -2161,7 +2161,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     },\n     Lint {\n         name: \"string_lit_as_bytes\",\n-        group: \"style\",\n+        group: \"nursery\",\n         desc: \"calling `as_bytes` on a string literal instead of using a byte string literal\",\n         deprecation: None,\n         module: \"strings\","}]}