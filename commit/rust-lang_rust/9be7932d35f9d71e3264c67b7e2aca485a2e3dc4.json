{"sha": "9be7932d35f9d71e3264c67b7e2aca485a2e3dc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliZTc5MzJkMzVmOWQ3MWUzMjY0YzY3YjdlMmFjYTQ4NWEyZTNkYzQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-03-03T08:50:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-03T08:50:16Z"}, "message": "Rollup merge of #69634 - GuillaumeGomez:clean-up-e0378, r=Dylan-DPC\n\nclean up E0378 explanation\n\nr? @Dylan-DPC", "tree": {"sha": "477ba05853556f548d237ed8d9701006a32fa487", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/477ba05853556f548d237ed8d9701006a32fa487"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9be7932d35f9d71e3264c67b7e2aca485a2e3dc4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeXhpICRBK7hj4Ov3rIwAAdHIIAIlM1VgjY/K2p6MBKXPo7GrU\n/R5ASqDj5Lcpr6+LQOpcsGaDQZyedG81phTNa5kULeKIEVEM0M4AXJZBxJzjRUb0\nQkiMENKNZNBb8MW9Zm9tcWAMtd/lhaCncrg29lHUX1oayZbMyoAt4ts0vegi09/r\nBDFgCpAODYgkcdY4hcYNWGotVI9og43gLvmMicd805tDPpJJl1Rih92sb7ILPyGm\nc2O18xNTWbT4NiVzSrE/pmL5Lv6fBK59npZAVzMdpvxkHhVpWVNlblv2NUcK3fWN\nLzl2L3+42zzA+SXCEd/jsAb9O9GJQeqAQrUP9op+2KcOpBPbN5ROjNtobGCEdcA=\n=lYVm\n-----END PGP SIGNATURE-----\n", "payload": "tree 477ba05853556f548d237ed8d9701006a32fa487\nparent 017a2f4ce6feca27092c04506ac6de52332ac369\nparent ba49ed01f0abd2c18313611ad43424ca827c1498\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1583225416 +0900\ncommitter GitHub <noreply@github.com> 1583225416 +0900\n\nRollup merge of #69634 - GuillaumeGomez:clean-up-e0378, r=Dylan-DPC\n\nclean up E0378 explanation\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9be7932d35f9d71e3264c67b7e2aca485a2e3dc4", "html_url": "https://github.com/rust-lang/rust/commit/9be7932d35f9d71e3264c67b7e2aca485a2e3dc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9be7932d35f9d71e3264c67b7e2aca485a2e3dc4/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "017a2f4ce6feca27092c04506ac6de52332ac369", "url": "https://api.github.com/repos/rust-lang/rust/commits/017a2f4ce6feca27092c04506ac6de52332ac369", "html_url": "https://github.com/rust-lang/rust/commit/017a2f4ce6feca27092c04506ac6de52332ac369"}, {"sha": "ba49ed01f0abd2c18313611ad43424ca827c1498", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba49ed01f0abd2c18313611ad43424ca827c1498", "html_url": "https://github.com/rust-lang/rust/commit/ba49ed01f0abd2c18313611ad43424ca827c1498"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "7f4374738de28ec4341247a93f3b1cd7c0edb298", "filename": "src/librustc_error_codes/error_codes/E0378.md", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9be7932d35f9d71e3264c67b7e2aca485a2e3dc4/src%2Flibrustc_error_codes%2Ferror_codes%2FE0378.md", "raw_url": "https://github.com/rust-lang/rust/raw/9be7932d35f9d71e3264c67b7e2aca485a2e3dc4/src%2Flibrustc_error_codes%2Ferror_codes%2FE0378.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0378.md?ref=9be7932d35f9d71e3264c67b7e2aca485a2e3dc4", "patch": "@@ -1,10 +1,28 @@\n+The `DispatchFromDyn` trait was implemented on something which is not a pointer\n+or a newtype wrapper around a pointer.\n+\n+Erroneous code example:\n+\n+```compile-fail,E0378\n+#![feature(dispatch_from_dyn)]\n+use std::ops::DispatchFromDyn;\n+\n+struct WrapperExtraField<T> {\n+    ptr: T,\n+    extra_stuff: i32,\n+}\n+\n+impl<T, U> DispatchFromDyn<WrapperExtraField<U>> for WrapperExtraField<T>\n+where\n+    T: DispatchFromDyn<U>,\n+{}\n+```\n+\n The `DispatchFromDyn` trait currently can only be implemented for\n builtin pointer types and structs that are newtype wrappers around them\n \u2014 that is, the struct must have only one field (except for`PhantomData`),\n and that field must itself implement `DispatchFromDyn`.\n \n-Examples:\n-\n ```\n #![feature(dispatch_from_dyn, unsize)]\n use std::{\n@@ -20,6 +38,8 @@ where\n {}\n ```\n \n+Another example:\n+\n ```\n #![feature(dispatch_from_dyn)]\n use std::{\n@@ -37,21 +57,3 @@ where\n     T: DispatchFromDyn<U>,\n {}\n ```\n-\n-Example of illegal `DispatchFromDyn` implementation\n-(illegal because of extra field)\n-\n-```compile-fail,E0378\n-#![feature(dispatch_from_dyn)]\n-use std::ops::DispatchFromDyn;\n-\n-struct WrapperExtraField<T> {\n-    ptr: T,\n-    extra_stuff: i32,\n-}\n-\n-impl<T, U> DispatchFromDyn<WrapperExtraField<U>> for WrapperExtraField<T>\n-where\n-    T: DispatchFromDyn<U>,\n-{}\n-```"}]}