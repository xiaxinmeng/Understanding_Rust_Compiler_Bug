{"sha": "10aaba8dbef601b2612b3b75ee9c31340af817cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYWFiYThkYmVmNjAxYjI2MTJiM2I3NWVlOWMzMTM0MGFmODE3Y2Y=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-12T20:55:34Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Make move errors more consistent with typeck errors", "tree": {"sha": "18418c4e5227e5c5edc7968acdbd2091886ad19f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18418c4e5227e5c5edc7968acdbd2091886ad19f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10aaba8dbef601b2612b3b75ee9c31340af817cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10aaba8dbef601b2612b3b75ee9c31340af817cf", "html_url": "https://github.com/rust-lang/rust/commit/10aaba8dbef601b2612b3b75ee9c31340af817cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10aaba8dbef601b2612b3b75ee9c31340af817cf/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "701c74e067a76e84725b8efeaae7234512058667", "url": "https://api.github.com/repos/rust-lang/rust/commits/701c74e067a76e84725b8efeaae7234512058667", "html_url": "https://github.com/rust-lang/rust/commit/701c74e067a76e84725b8efeaae7234512058667"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "61b8b8d9220bbaf48dcb86b4cec187d9b574c91e", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10aaba8dbef601b2612b3b75ee9c31340af817cf/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10aaba8dbef601b2612b3b75ee9c31340af817cf/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=10aaba8dbef601b2612b3b75ee9c31340af817cf", "patch": "@@ -360,7 +360,7 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                 } else {\n                     err.span_suggestion(\n                         span,\n-                        \"consider using a reference instead\",\n+                        \"consider borrowing here\",\n                         format!(\"&{}\", snippet),\n                     );\n                 }"}, {"sha": "90e8f951712d4432ffe7d0dac49316a90b13bb89", "filename": "src/test/ui/suggestions/dont-suggest-ref.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/10aaba8dbef601b2612b3b75ee9c31340af817cf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10aaba8dbef601b2612b3b75ee9c31340af817cf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs?ref=10aaba8dbef601b2612b3b75ee9c31340af817cf", "patch": "@@ -110,26 +110,26 @@ pub fn main() {\n \n     let X(_t) = vs_[0];\n     //~^ ERROR cannot move\n-    //~| HELP consider using a reference instead\n+    //~| HELP consider borrowing here\n     //~| SUGGESTION &vs_[0]\n     if let Either::One(_t) = vr[0] { }\n     //~^ ERROR cannot move\n-    //~| HELP consider using a reference instead\n+    //~| HELP consider borrowing here\n     //~| SUGGESTION &vr[0]\n     while let Either::One(_t) = vr[0] { }\n     //~^ ERROR cannot move\n-    //~| HELP consider using a reference instead\n+    //~| HELP consider borrowing here\n     //~| SUGGESTION &vr[0]\n     match vr[0] {\n         //~^ ERROR cannot move\n-        //~| HELP consider using a reference instead\n+        //~| HELP consider borrowing here\n         //~| SUGGESTION &vr[0]\n         Either::One(_t)\n         | Either::Two(_t) => (),\n     }\n     match vr[0] {\n         //~^ ERROR cannot move\n-        //~| HELP consider using a reference instead\n+        //~| HELP consider borrowing here\n         //~| SUGGESTION &vr[0]\n         Either::One(_t) => (),\n         Either::Two(ref _t) => (),\n@@ -138,34 +138,34 @@ pub fn main() {\n \n     let X(_t) = vsm[0];\n     //~^ ERROR cannot move\n-    //~| HELP consider using a reference instead\n+    //~| HELP consider borrowing here\n     //~| SUGGESTION &vsm[0]\n     if let Either::One(_t) = vrm[0] { }\n     //~^ ERROR cannot move\n-    //~| HELP consider using a reference instead\n+    //~| HELP consider borrowing here\n     //~| SUGGESTION &vrm[0]\n     while let Either::One(_t) = vrm[0] { }\n     //~^ ERROR cannot move\n-    //~| HELP consider using a reference instead\n+    //~| HELP consider borrowing here\n     //~| SUGGESTION &vrm[0]\n     match vrm[0] {\n         //~^ ERROR cannot move\n-        //~| HELP consider using a reference instead\n+        //~| HELP consider borrowing here\n         //~| SUGGESTION &vrm[0]\n         Either::One(_t)\n         | Either::Two(_t) => (),\n     }\n     match vrm[0] {\n         //~^ ERROR cannot move\n-        //~| HELP consider using a reference instead\n+        //~| HELP consider borrowing here\n         //~| SUGGESTION &vrm[0]\n         Either::One(_t) => (),\n         Either::Two(ref _t) => (),\n         // TODO: should suggest removing `ref` too\n     }\n     match vrm[0] {\n         //~^ ERROR cannot move\n-        //~| HELP consider using a reference instead\n+        //~| HELP consider borrowing here\n         //~| SUGGESTION &vrm[0]\n         Either::One(_t) => (),\n         Either::Two(ref mut _t) => (),"}, {"sha": "7616aa898a02ba04067a494d1e8ebe334f5927c0", "filename": "src/test/ui/suggestions/dont-suggest-ref.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/10aaba8dbef601b2612b3b75ee9c31340af817cf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/10aaba8dbef601b2612b3b75ee9c31340af817cf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr?ref=10aaba8dbef601b2612b3b75ee9c31340af817cf", "patch": "@@ -191,7 +191,7 @@ LL |     let X(_t) = vs_[0];\n    |           --    ^^^^^^\n    |           |     |\n    |           |     cannot move out of borrowed content\n-   |           |     help: consider using a reference instead: `&vs_[0]`\n+   |           |     help: consider borrowing here: `&vs_[0]`\n    |           data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n@@ -207,7 +207,7 @@ LL |     if let Either::One(_t) = vr[0] { }\n    |                        --    ^^^^^\n    |                        |     |\n    |                        |     cannot move out of borrowed content\n-   |                        |     help: consider using a reference instead: `&vr[0]`\n+   |                        |     help: consider borrowing here: `&vr[0]`\n    |                        data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n@@ -223,7 +223,7 @@ LL |     while let Either::One(_t) = vr[0] { }\n    |                           --    ^^^^^\n    |                           |     |\n    |                           |     cannot move out of borrowed content\n-   |                           |     help: consider using a reference instead: `&vr[0]`\n+   |                           |     help: consider borrowing here: `&vr[0]`\n    |                           data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n@@ -239,7 +239,7 @@ LL |     match vr[0] {\n    |           ^^^^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider using a reference instead: `&vr[0]`\n+   |           help: consider borrowing here: `&vr[0]`\n ...\n LL |         Either::One(_t)\n    |                     -- data moved here\n@@ -257,7 +257,7 @@ LL |     match vr[0] {\n    |           ^^^^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider using a reference instead: `&vr[0]`\n+   |           help: consider borrowing here: `&vr[0]`\n ...\n LL |         Either::One(_t) => (),\n    |                     -- data moved here\n@@ -275,7 +275,7 @@ LL |     let X(_t) = vsm[0];\n    |           --    ^^^^^^\n    |           |     |\n    |           |     cannot move out of borrowed content\n-   |           |     help: consider using a reference instead: `&vsm[0]`\n+   |           |     help: consider borrowing here: `&vsm[0]`\n    |           data moved here\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n@@ -291,7 +291,7 @@ LL |     if let Either::One(_t) = vrm[0] { }\n    |                        --    ^^^^^^\n    |                        |     |\n    |                        |     cannot move out of borrowed content\n-   |                        |     help: consider using a reference instead: `&vrm[0]`\n+   |                        |     help: consider borrowing here: `&vrm[0]`\n    |                        data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n@@ -307,7 +307,7 @@ LL |     while let Either::One(_t) = vrm[0] { }\n    |                           --    ^^^^^^\n    |                           |     |\n    |                           |     cannot move out of borrowed content\n-   |                           |     help: consider using a reference instead: `&vrm[0]`\n+   |                           |     help: consider borrowing here: `&vrm[0]`\n    |                           data moved here\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n@@ -323,7 +323,7 @@ LL |     match vrm[0] {\n    |           ^^^^^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider using a reference instead: `&vrm[0]`\n+   |           help: consider borrowing here: `&vrm[0]`\n ...\n LL |         Either::One(_t)\n    |                     -- data moved here\n@@ -341,7 +341,7 @@ LL |     match vrm[0] {\n    |           ^^^^^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider using a reference instead: `&vrm[0]`\n+   |           help: consider borrowing here: `&vrm[0]`\n ...\n LL |         Either::One(_t) => (),\n    |                     -- data moved here\n@@ -359,7 +359,7 @@ LL |     match vrm[0] {\n    |           ^^^^^^\n    |           |\n    |           cannot move out of borrowed content\n-   |           help: consider using a reference instead: `&vrm[0]`\n+   |           help: consider borrowing here: `&vrm[0]`\n ...\n LL |         Either::One(_t) => (),\n    |                     -- data moved here"}]}