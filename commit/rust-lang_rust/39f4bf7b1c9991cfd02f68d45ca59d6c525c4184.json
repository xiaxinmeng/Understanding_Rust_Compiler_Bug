{"sha": "39f4bf7b1c9991cfd02f68d45ca59d6c525c4184", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZjRiZjdiMWM5OTkxY2ZkMDJmNjhkNDVjYTU5ZDZjNTI1YzQxODQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-03T15:00:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-03T18:43:15Z"}, "message": "Test fixes from the rollup", "tree": {"sha": "5a3cd9b50266167ad0abdc56567dcdfdf882b4b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a3cd9b50266167ad0abdc56567dcdfdf882b4b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184", "html_url": "https://github.com/rust-lang/rust/commit/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "url": "https://api.github.com/repos/rust-lang/rust/commits/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "html_url": "https://github.com/rust-lang/rust/commit/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "9a02a3b815e8ace6cc42b8f0b96498da1381854b", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=39f4bf7b1c9991cfd02f68d45ca59d6c525c4184", "patch": "@@ -1412,7 +1412,7 @@ struct BitsNStrings<'a> {\n     mystring: &'a str\n }\n \n-static bits_n_strings: BitsNStrings<'static> = BitsNStrings {\n+static BITS_N_STRINGS: BitsNStrings<'static> = BitsNStrings {\n     mybits: BITS,\n     mystring: STRING\n };"}, {"sha": "2bc09d7e96e58bc9dca3ef0dca9a6bedb66d9dd1", "filename": "src/test/pretty/issue-4264.pp", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184/src%2Ftest%2Fpretty%2Fissue-4264.pp", "raw_url": "https://github.com/rust-lang/rust/raw/39f4bf7b1c9991cfd02f68d45ca59d6c525c4184/src%2Ftest%2Fpretty%2Fissue-4264.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-4264.pp?ref=39f4bf7b1c9991cfd02f68d45ca59d6c525c4184", "patch": "@@ -26,33 +26,33 @@\n \n pub fn bar() {\n     static FOO: uint = ((5u as uint) - (4u as uint) as uint);\n-    let _: [(), ..(FOO as uint)] = ([(() as ())] as [(), .. 1]);\n+    let _: [(), ..(FOO as uint)] = ([(() as ())] as [(), ..1]);\n \n-    let _: [(), ..(1u as uint)] = ([(() as ())] as [(), .. 1]);\n+    let _: [(), ..(1u as uint)] = ([(() as ())] as [(), ..1]);\n \n     let _ =\n-        (((&((([(1i as int), (2 as int), (3 as int)] as [int, .. 3])) as\n-                [int, .. 3]) as &[int, .. 3]) as *const _ as\n-             *const [int, .. 3]) as *const [int, ..(3u as uint)] as\n-            *const [int, .. 3]);\n+        (((&((([(1i as int), (2 as int), (3 as int)] as [int, ..3])) as\n+                [int, ..3]) as &[int, ..3]) as *const _ as *const [int, ..3])\n+            as *const [int, ..(3u as uint)] as *const [int, ..3]);\n+\n     (match (() as ()) {\n          () => {\n              #[inline]\n              #[allow(dead_code)]\n              static __STATIC_FMTSTR: [&'static str, ..(1u as uint)] =\n-                 ([(\"test\" as &'static str)] as [&'static str, .. 1]);\n+                 ([(\"test\" as &'static str)] as [&'static str, ..1]);\n              let __args_vec =\n-                 (&([] as [core::fmt::Argument<'_>, .. 0]) as\n-                     &[core::fmt::Argument<'_>, .. 0]);\n+                 (&([] as [core::fmt::Argument<'_>, ..0]) as\n+                     &[core::fmt::Argument<'_>, ..0]);\n              let __args =\n                  (unsafe {\n                       ((::std::fmt::Arguments::new as\n                            unsafe fn(&'static [&'static str], &'a [core::fmt::Argument<'a>]) -> core::fmt::Arguments<'a>)((__STATIC_FMTSTR\n                                                                                                                               as\n-                                                                                                                              [&'static str, .. 1]),\n+                                                                                                                              [&'static str, ..1]),\n                                                                                                                           (__args_vec\n                                                                                                                               as\n-                                                                                                                              &[core::fmt::Argument<'_>, .. 0]))\n+                                                                                                                              &[core::fmt::Argument<'_>, ..0]))\n                           as core::fmt::Arguments<'_>)\n                   } as core::fmt::Arguments<'_>);\n \n@@ -83,8 +83,8 @@\n pub fn use_id() {\n     let _ =\n         ((id::<[int, ..(3u as uint)]> as\n-             fn([int, .. 3]) -> [int, .. 3])(([(1 as int), (2 as int),\n-                                               (3 as int)] as [int, .. 3])) as\n-            [int, .. 3]);\n+             fn([int, ..3]) -> [int, ..3])(([(1 as int), (2 as int),\n+                                             (3 as int)] as [int, ..3])) as\n+            [int, ..3]);\n }\n fn main() { }"}]}