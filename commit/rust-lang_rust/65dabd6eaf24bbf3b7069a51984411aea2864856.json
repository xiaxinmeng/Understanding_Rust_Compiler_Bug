{"sha": "65dabd6eaf24bbf3b7069a51984411aea2864856", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZGFiZDZlYWYyNGJiZjNiNzA2OWE1MTk4NDQxMWFlYTI4NjQ4NTY=", "commit": {"author": {"name": "Michael Karcher", "email": "github@mkarcher.dialup.fu-berlin.de", "date": "2018-12-23T19:33:52Z"}, "committer": {"name": "John Paul Adrian Glaubitz", "email": "glaubitz@physik.fu-berlin.de", "date": "2018-12-23T22:46:45Z"}, "message": "librustc_codegen_llvm: Don't eliminate empty structs in C ABI on linux-sparc64\n\nThis is in accordance with the SPARC Compliance Definition 2.4.1,\nPage 3P-12. It says that structs of up to 8 bytes (which applies\nto empty structs as well) are to be passed in one register.", "tree": {"sha": "2a8bafa791af7556393ba34a5f1270baf84cf80e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a8bafa791af7556393ba34a5f1270baf84cf80e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65dabd6eaf24bbf3b7069a51984411aea2864856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65dabd6eaf24bbf3b7069a51984411aea2864856", "html_url": "https://github.com/rust-lang/rust/commit/65dabd6eaf24bbf3b7069a51984411aea2864856", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65dabd6eaf24bbf3b7069a51984411aea2864856/comments", "author": {"login": "karcherm", "id": 2553687, "node_id": "MDQ6VXNlcjI1NTM2ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/2553687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karcherm", "html_url": "https://github.com/karcherm", "followers_url": "https://api.github.com/users/karcherm/followers", "following_url": "https://api.github.com/users/karcherm/following{/other_user}", "gists_url": "https://api.github.com/users/karcherm/gists{/gist_id}", "starred_url": "https://api.github.com/users/karcherm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karcherm/subscriptions", "organizations_url": "https://api.github.com/users/karcherm/orgs", "repos_url": "https://api.github.com/users/karcherm/repos", "events_url": "https://api.github.com/users/karcherm/events{/privacy}", "received_events_url": "https://api.github.com/users/karcherm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glaubitz", "id": 1647645, "node_id": "MDQ6VXNlcjE2NDc2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1647645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaubitz", "html_url": "https://github.com/glaubitz", "followers_url": "https://api.github.com/users/glaubitz/followers", "following_url": "https://api.github.com/users/glaubitz/following{/other_user}", "gists_url": "https://api.github.com/users/glaubitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaubitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaubitz/subscriptions", "organizations_url": "https://api.github.com/users/glaubitz/orgs", "repos_url": "https://api.github.com/users/glaubitz/repos", "events_url": "https://api.github.com/users/glaubitz/events{/privacy}", "received_events_url": "https://api.github.com/users/glaubitz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddab10a692aab2e2984b5c826ed9d78a57e94851", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddab10a692aab2e2984b5c826ed9d78a57e94851", "html_url": "https://github.com/rust-lang/rust/commit/ddab10a692aab2e2984b5c826ed9d78a57e94851"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "c083137f0850ecdd9467c64c9d930736a11a87f8", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/65dabd6eaf24bbf3b7069a51984411aea2864856/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65dabd6eaf24bbf3b7069a51984411aea2864856/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=65dabd6eaf24bbf3b7069a51984411aea2864856", "patch": "@@ -456,6 +456,9 @@ impl<'tcx> FnTypeExt<'tcx> for FnType<'tcx, Ty<'tcx>> {\n         let linux_s390x = target.target_os == \"linux\"\n                        && target.arch == \"s390x\"\n                        && target.target_env == \"gnu\";\n+        let linux_sparc64 = target.target_os == \"linux\"\n+                       && target.arch == \"sparc64\"\n+                       && target.target_env == \"gnu\";\n         let rust_abi = match sig.abi {\n             RustIntrinsic | PlatformIntrinsic | Rust | RustCall => true,\n             _ => false\n@@ -526,8 +529,9 @@ impl<'tcx> FnTypeExt<'tcx> for FnType<'tcx, Ty<'tcx>> {\n             if arg.layout.is_zst() {\n                 // For some forsaken reason, x86_64-pc-windows-gnu\n                 // doesn't ignore zero-sized struct arguments.\n-                // The same is true for s390x-unknown-linux-gnu.\n-                if is_return || rust_abi || (!win_x64_gnu && !linux_s390x) {\n+                // The same is true for s390x-unknown-linux-gnu\n+                // and sparc64-unknown-linux-gnu.\n+                if is_return || rust_abi || (!win_x64_gnu && !linux_s390x && !linux_sparc64) {\n                     arg.mode = PassMode::Ignore;\n                 }\n             }"}]}