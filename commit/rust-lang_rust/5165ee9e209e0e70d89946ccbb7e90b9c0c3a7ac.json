{"sha": "5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNjVlZTllMjA5ZTBlNzBkODk5NDZjY2JiN2U5MGI5YzBjM2E3YWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-22T16:02:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-22T16:02:31Z"}, "message": "Auto merge of #46838 - pnkfelix:issue-46112-followup, r=estebank\n\nFollowup for #46112.\n\nSorting by crate-num should ensure that we favor `std::foo::bar` over\n`any_other_crate::foo::bar`.\n\nInterestingly, *this* change had a much larger impact on our internal\ntest suite than PR #46708 (which was my original fix to #46112).", "tree": {"sha": "5b03946495b70a561e7f23d903ea1d634e2abaa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b03946495b70a561e7f23d903ea1d634e2abaa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "html_url": "https://github.com/rust-lang/rust/commit/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c037d55891a974be415f9dac32e1bacfbb46210", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c037d55891a974be415f9dac32e1bacfbb46210", "html_url": "https://github.com/rust-lang/rust/commit/2c037d55891a974be415f9dac32e1bacfbb46210"}, {"sha": "aa030dd3deb438c688c85c32eb75d009378c5f12", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa030dd3deb438c688c85c32eb75d009378c5f12", "html_url": "https://github.com/rust-lang/rust/commit/aa030dd3deb438c688c85c32eb75d009378c5f12"}], "stats": {"total": 61, "additions": 46, "deletions": 15}, "files": [{"sha": "955648208cd8b773c68c6f250642ce370aec29fa", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -305,7 +305,18 @@ pub fn provide<'tcx>(providers: &mut Providers<'tcx>) {\n             // whatever crate we happened to encounter first in this\n             // traversal, but not globally minimal across all crates.\n             let bfs_queue = &mut VecDeque::new();\n-            for &cnum in tcx.crates().iter() {\n+\n+            // Preferring shortest paths alone does not guarantee a\n+            // deterministic result; so sort by crate num to avoid\n+            // hashtable iteration non-determinism. This only makes\n+            // things as deterministic as crate-nums assignment is,\n+            // which is to say, its not deterministic in general. But\n+            // we believe that libstd is consistently assigned crate\n+            // num 1, so it should be enough to resolve #46112.\n+            let mut crates: Vec<CrateNum> = (*tcx.crates()).clone();\n+            crates.sort();\n+\n+            for &cnum in crates.iter() {\n                 // Ignore crates without a corresponding local `extern crate` item.\n                 if tcx.missing_extern_crate_item(cnum) {\n                     continue"}, {"sha": "55065174ca7596c9727ebabbe3f5245fc8230cd6", "filename": "src/test/compile-fail/auxiliary/issue_1920.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_1920.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_1920.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_1920.rs?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Just exporting some type to test for correct diagnostics when this\n+// crate is pulled in at a non-root location in client crate.\n+\n+pub struct S;"}, {"sha": "37c8173c4f66b8b7d38162ad5bf8adc6274d22d7", "filename": "src/test/compile-fail/issue-17959.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-17959.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-17959.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17959.rs?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -19,7 +19,7 @@ struct G<T: ?Sized> {\n }\n \n impl<T> Drop for G<T> {\n-//~^ ERROR: The requirement `T: core::marker::Sized` is added only by the Drop impl. [E0367]\n+//~^ ERROR: The requirement `T: std::marker::Sized` is added only by the Drop impl. [E0367]\n     fn drop(&mut self) {\n         if !self._ptr.is_null() {\n         }"}, {"sha": "97dd290a45bc83f7d961f61c67e99c5d63e23e45", "filename": "src/test/compile-fail/issue-1920-1.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-1920-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-1920-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1920-1.rs?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -10,13 +10,15 @@\n \n //! Test that absolute path names are correct when a crate is not linked into the root namespace\n \n+// aux-build:issue_1920.rs\n+\n mod foo {\n-    pub extern crate core;\n+    pub extern crate issue_1920;\n }\n \n fn assert_clone<T>() where T : Clone { }\n \n fn main() {\n-    assert_clone::<foo::core::sync::atomic::AtomicBool>();\n-    //~^ ERROR `foo::core::sync::atomic::AtomicBool: foo::core::clone::Clone` is not satisfied\n+    assert_clone::<foo::issue_1920::S>();\n+    //~^ ERROR `foo::issue_1920::S: std::clone::Clone` is not satisfied\n }"}, {"sha": "2af6e2cc991faa98447b0619dbeb99d1f5db8a76", "filename": "src/test/compile-fail/issue-1920-2.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-1920-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-1920-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1920-2.rs?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -10,11 +10,13 @@\n \n //! Test that when a crate is linked under another name that name is used in global paths\n \n-extern crate core as bar;\n+// aux-build:issue_1920.rs\n+\n+extern crate issue_1920 as bar;\n \n fn assert_clone<T>() where T : Clone { }\n \n fn main() {\n-    assert_clone::<bar::sync::atomic::AtomicBool>();\n-    //~^ ERROR `bar::sync::atomic::AtomicBool: bar::clone::Clone` is not satisfied\n+    assert_clone::<bar::S>();\n+    //~^ ERROR `bar::S: std::clone::Clone` is not satisfied\n }"}, {"sha": "fa6efea845fce2e80df9823e0cee75c7b8d22adf", "filename": "src/test/compile-fail/issue-1920-3.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-1920-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fissue-1920-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1920-3.rs?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -10,15 +10,17 @@\n \n //! Test that when a crate is linked multiple times that the shortest absolute path name is used\n \n+// aux-build:issue_1920.rs\n+\n mod foo {\n-    pub extern crate core;\n+    pub extern crate issue_1920;\n }\n \n-extern crate core;\n+extern crate issue_1920;\n \n fn assert_clone<T>() where T : Clone { }\n \n fn main() {\n-    assert_clone::<foo::core::sync::atomic::AtomicBool>();\n-    //~^ ERROR `core::sync::atomic::AtomicBool: core::clone::Clone` is not satisfied\n+    assert_clone::<foo::issue_1920::S>();\n+    //~^ ERROR `issue_1920::S: std::clone::Clone` is not satisfied\n }"}, {"sha": "c717d1a72e05d31c536274cee20a703deb0062b2", "filename": "src/test/compile-fail/kindck-send-unsafe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fkindck-send-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fcompile-fail%2Fkindck-send-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-send-unsafe.rs?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -14,7 +14,7 @@ fn assert_send<T:Send>() { }\n \n fn test71<'a>() {\n     assert_send::<*mut &'a isize>();\n-    //~^ ERROR `*mut &'a isize: core::marker::Send` is not satisfied\n+    //~^ ERROR `*mut &'a isize: std::marker::Send` is not satisfied\n }\n \n fn main() {"}, {"sha": "0f53e7722dd51785d5ca185e5ca0b147ce726876", "filename": "src/test/ui/print_type_sizes/niche-filling.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.stdout?ref=5165ee9e209e0e70d89946ccbb7e90b9c0c3a7ac", "patch": "@@ -69,11 +69,11 @@ print-type-size type: `MyOption<bool>`: 1 bytes, alignment: 1 bytes\n print-type-size     variant `None`: 0 bytes\n print-type-size     variant `Some`: 1 bytes\n print-type-size         field `.0`: 1 bytes\n-print-type-size type: `MyOption<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes\n+print-type-size type: `MyOption<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes\n print-type-size     variant `None`: 0 bytes\n print-type-size     variant `Some`: 1 bytes\n print-type-size         field `.0`: 1 bytes\n-print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes\n+print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes\n print-type-size     discriminant: 1 bytes\n print-type-size     variant `Less`: 0 bytes\n print-type-size     variant `Equal`: 0 bytes"}]}