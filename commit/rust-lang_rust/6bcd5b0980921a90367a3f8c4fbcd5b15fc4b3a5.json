{"sha": "6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiY2Q1YjA5ODA5MjFhOTAzNjdhM2Y4YzRmYmNkNWIxNWZjNGIzYTU=", "commit": {"author": {"name": "A.J. Gardner", "email": "aaron.j.gardner@gmail.com", "date": "2017-03-17T03:16:40Z"}, "committer": {"name": "A.J. Gardner", "email": "aaron.j.gardner@gmail.com", "date": "2017-04-13T00:12:49Z"}, "message": "Expand _ into explicit variants in match", "tree": {"sha": "2bda0102f4ee9873329afd9f94250c02e7963db8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bda0102f4ee9873329afd9f94250c02e7963db8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5", "html_url": "https://github.com/rust-lang/rust/commit/6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5/comments", "author": {"login": "mrhota", "id": 403641, "node_id": "MDQ6VXNlcjQwMzY0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/403641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrhota", "html_url": "https://github.com/mrhota", "followers_url": "https://api.github.com/users/mrhota/followers", "following_url": "https://api.github.com/users/mrhota/following{/other_user}", "gists_url": "https://api.github.com/users/mrhota/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrhota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrhota/subscriptions", "organizations_url": "https://api.github.com/users/mrhota/orgs", "repos_url": "https://api.github.com/users/mrhota/repos", "events_url": "https://api.github.com/users/mrhota/events{/privacy}", "received_events_url": "https://api.github.com/users/mrhota/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mrhota", "id": 403641, "node_id": "MDQ6VXNlcjQwMzY0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/403641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrhota", "html_url": "https://github.com/mrhota", "followers_url": "https://api.github.com/users/mrhota/followers", "following_url": "https://api.github.com/users/mrhota/following{/other_user}", "gists_url": "https://api.github.com/users/mrhota/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrhota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrhota/subscriptions", "organizations_url": "https://api.github.com/users/mrhota/orgs", "repos_url": "https://api.github.com/users/mrhota/repos", "events_url": "https://api.github.com/users/mrhota/events{/privacy}", "received_events_url": "https://api.github.com/users/mrhota/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "768e9029413c6fa3857cf8ba7d943bb297a58ee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/768e9029413c6fa3857cf8ba7d943bb297a58ee3", "html_url": "https://github.com/rust-lang/rust/commit/768e9029413c6fa3857cf8ba7d943bb297a58ee3"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "649353d52f6aaf29052d3b783a52d38c4c1682f1", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=6bcd5b0980921a90367a3f8c4fbcd5b15fc4b3a5", "patch": "@@ -490,8 +490,10 @@ fn convert_item<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, item_id: ast::NodeId) {\n     let def_id = tcx.hir.local_def_id(item_id);\n     match it.node {\n         // These don't define types.\n-        hir::ItemExternCrate(_) | hir::ItemUse(..) | hir::ItemMod(_) => {\n-        }\n+        hir::ItemExternCrate(_) |\n+        hir::ItemUse(..) |\n+        hir::ItemMod(_) |\n+        hir::ItemGlobalAsm(_) => {}\n         hir::ItemForeignMod(ref foreign_mod) => {\n             for item in &foreign_mod.items {\n                 let def_id = tcx.hir.local_def_id(item.id);\n@@ -543,12 +545,12 @@ fn convert_item<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, item_id: ast::NodeId) {\n             tcx.item_generics(def_id);\n             tcx.item_type(def_id);\n             tcx.item_predicates(def_id);\n-        },\n-        _ => {\n+        }\n+        hir::ItemStatic(..) | hir::ItemConst(..) | hir::ItemFn(..) => {\n             tcx.item_generics(def_id);\n             tcx.item_type(def_id);\n             tcx.item_predicates(def_id);\n-        },\n+        }\n     }\n }\n "}]}