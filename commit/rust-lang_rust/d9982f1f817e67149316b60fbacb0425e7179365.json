{"sha": "d9982f1f817e67149316b60fbacb0425e7179365", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5OTgyZjFmODE3ZTY3MTQ5MzE2YjYwZmJhY2IwNDI1ZTcxNzkzNjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-12T13:21:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-12T13:21:16Z"}, "message": "Rollup merge of #69089 - nox:sym64-crash, r=eddyb\n\nProperly use the darwin archive format on Apple targets\n\nSee https://github.com/servo/servo/issues/25550.", "tree": {"sha": "6573d320a05c37240a312d1e0d48e0dbb80a523a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6573d320a05c37240a312d1e0d48e0dbb80a523a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9982f1f817e67149316b60fbacb0425e7179365", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeQ/vMCRBK7hj4Ov3rIwAAdHIIAFQ10IceK4MSpbuKiFsn+VTe\nrMC6kz0ghFzCzcZFdjkD3zzMjMZpduXQlufbkDfK/dqDjUokqN2IkgjMBUU+6Q1T\nwAaaelqirDoesnR8/ECZJutjhPJSwQYqjz1FGnjaVUALeFnAaL4/VWogIKHrElU+\nDtrexWJHWtUtNzKNZgBVVtcXtaP9e9fqu9jMISHOwTixWTHxZqhj9LqgpQTtGfcl\n/BSuB9F83kfZUhTrF3U55+MxMP2Gp5ZIip5qS8cVA8WuBGRYKsmuvx7pxNXVy/+T\nF4JkFRqtJ1HVfbvqpoih45ep56d8T3Bxo4RBa88xupww8UulOBLcdBelxwfz928=\n=AkXZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 6573d320a05c37240a312d1e0d48e0dbb80a523a\nparent db48a8a6aa139ce5e1de92e360dde30d80007545\nparent 15adbf6e086794d197e744db815476994b9ce3d7\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581513676 +0100\ncommitter GitHub <noreply@github.com> 1581513676 +0100\n\nRollup merge of #69089 - nox:sym64-crash, r=eddyb\n\nProperly use the darwin archive format on Apple targets\n\nSee https://github.com/servo/servo/issues/25550.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9982f1f817e67149316b60fbacb0425e7179365", "html_url": "https://github.com/rust-lang/rust/commit/d9982f1f817e67149316b60fbacb0425e7179365", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9982f1f817e67149316b60fbacb0425e7179365/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db48a8a6aa139ce5e1de92e360dde30d80007545", "url": "https://api.github.com/repos/rust-lang/rust/commits/db48a8a6aa139ce5e1de92e360dde30d80007545", "html_url": "https://github.com/rust-lang/rust/commit/db48a8a6aa139ce5e1de92e360dde30d80007545"}, {"sha": "15adbf6e086794d197e744db815476994b9ce3d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/15adbf6e086794d197e744db815476994b9ce3d7", "html_url": "https://github.com/rust-lang/rust/commit/15adbf6e086794d197e744db815476994b9ce3d7"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "fca4b1c598c37eecc660fffc16407551ad379978", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d9982f1f817e67149316b60fbacb0425e7179365/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9982f1f817e67149316b60fbacb0425e7179365/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=d9982f1f817e67149316b60fbacb0425e7179365", "patch": "@@ -459,6 +459,7 @@ pub enum ArchiveKind {\n     Other,\n     K_GNU,\n     K_BSD,\n+    K_DARWIN,\n     K_COFF,\n }\n "}, {"sha": "96014cbee5da1cdc0b288b14b756dfcfaa64a4a3", "filename": "src/librustc_codegen_llvm/llvm/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d9982f1f817e67149316b60fbacb0425e7179365/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9982f1f817e67149316b60fbacb0425e7179365/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs?ref=d9982f1f817e67149316b60fbacb0425e7179365", "patch": "@@ -69,6 +69,7 @@ impl FromStr for ArchiveKind {\n         match s {\n             \"gnu\" => Ok(ArchiveKind::K_GNU),\n             \"bsd\" => Ok(ArchiveKind::K_BSD),\n+            \"darwin\" => Ok(ArchiveKind::K_DARWIN),\n             \"coff\" => Ok(ArchiveKind::K_COFF),\n             _ => Err(()),\n         }"}, {"sha": "d116ddf952aaae3efbd5fa9e83e915efec83fca2", "filename": "src/librustc_target/spec/apple_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d9982f1f817e67149316b60fbacb0425e7179365/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9982f1f817e67149316b60fbacb0425e7179365/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_base.rs?ref=d9982f1f817e67149316b60fbacb0425e7179365", "patch": "@@ -26,7 +26,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         dll_prefix: \"lib\".to_string(),\n         dll_suffix: \".dylib\".to_string(),\n-        archive_format: \"bsd\".to_string(),\n+        archive_format: \"darwin\".to_string(),\n         pre_link_args: LinkArgs::new(),\n         has_elf_tls: version >= (10, 7),\n         abi_return_struct_as_int: true,"}, {"sha": "93704638f8351661a99ee2a4a2a821d81af83fa6", "filename": "src/rustllvm/ArchiveWrapper.cpp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d9982f1f817e67149316b60fbacb0425e7179365/src%2Frustllvm%2FArchiveWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d9982f1f817e67149316b60fbacb0425e7179365/src%2Frustllvm%2FArchiveWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FArchiveWrapper.cpp?ref=d9982f1f817e67149316b60fbacb0425e7179365", "patch": "@@ -38,6 +38,7 @@ enum class LLVMRustArchiveKind {\n   Other,\n   GNU,\n   BSD,\n+  DARWIN,\n   COFF,\n };\n \n@@ -47,6 +48,8 @@ static Archive::Kind fromRust(LLVMRustArchiveKind Kind) {\n     return Archive::K_GNU;\n   case LLVMRustArchiveKind::BSD:\n     return Archive::K_BSD;\n+  case LLVMRustArchiveKind::DARWIN:\n+    return Archive::K_DARWIN;\n   case LLVMRustArchiveKind::COFF:\n     return Archive::K_COFF;\n   default:"}]}