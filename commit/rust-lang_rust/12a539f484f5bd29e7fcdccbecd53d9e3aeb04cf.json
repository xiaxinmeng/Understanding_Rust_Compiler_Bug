{"sha": "12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf", "node_id": "C_kwDOAAsO6NoAKDEyYTUzOWY0ODRmNWJkMjllN2ZjZGNjYmVjZDUzZDllM2FlYjA0Y2Y", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-23T18:06:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-23T18:06:32Z"}, "message": "Rollup merge of #110668 - ehuss:fix-native-cpu-list, r=cuviper\n\nFix printing native CPU on cross-compiled compiler.\n\nIf `rustc` is cross-compiled from a different host, then the \"native\" entry in `rustc --print=target-cpus` would not appear. There is a check in the printing code that will avoid printing the \"native\" entry if the user has passed `--target`. However, that check was comparing the `--target` value with the `LLVM_TARGET_TRIPLE` which is the triple of the host that `rustc` was built on (the \"build\" target in Rust lingo), not the target it was being built for (the \"host\" in Rust lingo). This fixes it to use the target that LLVM was built for (which I'm pretty sure this is the correct function to determine that).\n\nThis fixes the cpu listing for aarch64-apple-darwin which is built on CI using the x86_64-apple-darwin host.", "tree": {"sha": "fbfe36a63adbfc71d4928891f0c1232351696597", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbfe36a63adbfc71d4928891f0c1232351696597"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkRXOoCRBK7hj4Ov3rIwAA3HkIAKYno9B3r3atZ+3tG6hNh8ZQ\n+dk+Xt/3SPLzd5Cz41R2FxspHjoGi7Lw6EJQoRRO+kiT1qNRydiypShPnqgEjpGg\nZ1d69opi2WvjNQaFD+MSme+hj+VbiqCR4QQKvBXdDZAARm/UDiUTwBCA91qC4KFo\n2hQdS2LktArJWCEFuH00HqXVSlF0LwBie8U7bIZ0tN9dHP6hizcBepuKwzFrP9fE\ngk+GR+UFeFqjV+GUDAn1ia5stD/iQlUfP42tFQkzzyDqHIvw/dAIhRdXMgWK6Ccv\nShA8P6UWEVAwCWqAQwBoZsXPzl+J5qCdreFSwtwZnQNzclzTOTeKgv5/w+utCqQ=\n=McID\n-----END PGP SIGNATURE-----\n", "payload": "tree fbfe36a63adbfc71d4928891f0c1232351696597\nparent a557ed0c9f80d0843b650f085c3d9619c572105a\nparent e4e4110dc6a0dcd2bade2fd789e81a518618e9c0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682273192 +0200\ncommitter GitHub <noreply@github.com> 1682273192 +0200\n\nRollup merge of #110668 - ehuss:fix-native-cpu-list, r=cuviper\n\nFix printing native CPU on cross-compiled compiler.\n\nIf `rustc` is cross-compiled from a different host, then the \"native\" entry in `rustc --print=target-cpus` would not appear. There is a check in the printing code that will avoid printing the \"native\" entry if the user has passed `--target`. However, that check was comparing the `--target` value with the `LLVM_TARGET_TRIPLE` which is the triple of the host that `rustc` was built on (the \"build\" target in Rust lingo), not the target it was being built for (the \"host\" in Rust lingo). This fixes it to use the target that LLVM was built for (which I'm pretty sure this is the correct function to determine that).\n\nThis fixes the cpu listing for aarch64-apple-darwin which is built on CI using the x86_64-apple-darwin host.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf", "html_url": "https://github.com/rust-lang/rust/commit/12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a557ed0c9f80d0843b650f085c3d9619c572105a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a557ed0c9f80d0843b650f085c3d9619c572105a", "html_url": "https://github.com/rust-lang/rust/commit/a557ed0c9f80d0843b650f085c3d9619c572105a"}, {"sha": "e4e4110dc6a0dcd2bade2fd789e81a518618e9c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0", "html_url": "https://github.com/rust-lang/rust/commit/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "90cce9a8650daecf92602950826ff361172dbe2d", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=12a539f484f5bd29e7fcdccbecd53d9e3aeb04cf", "patch": "@@ -310,12 +310,14 @@ static size_t getLongestEntryLength(ArrayRef<KV> Table) {\n extern \"C\" void LLVMRustPrintTargetCPUs(LLVMTargetMachineRef TM) {\n   const TargetMachine *Target = unwrap(TM);\n   const MCSubtargetInfo *MCInfo = Target->getMCSubtargetInfo();\n-  const Triple::ArchType HostArch = Triple(sys::getProcessTriple()).getArch();\n+  const Triple::ArchType HostArch = Triple(sys::getDefaultTargetTriple()).getArch();\n   const Triple::ArchType TargetArch = Target->getTargetTriple().getArch();\n   const ArrayRef<SubtargetSubTypeKV> CPUTable = MCInfo->getCPUTable();\n   unsigned MaxCPULen = getLongestEntryLength(CPUTable);\n \n   printf(\"Available CPUs for this target:\\n\");\n+  // Don't print the \"native\" entry when the user specifies --target with a\n+  // different arch since that could be wrong or misleading.\n   if (HostArch == TargetArch) {\n     const StringRef HostCPU = sys::getHostCPUName();\n     printf(\"    %-*s - Select the CPU of the current host (currently %.*s).\\n\","}]}