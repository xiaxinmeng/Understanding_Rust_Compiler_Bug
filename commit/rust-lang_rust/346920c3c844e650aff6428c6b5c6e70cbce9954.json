{"sha": "346920c3c844e650aff6428c6b5c6e70cbce9954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NjkyMGMzYzg0NGU2NTBhZmY2NDI4YzZiNWM2ZTcwY2JjZTk5NTQ=", "commit": {"author": {"name": "hman523", "email": "shbarbella@gmail.com", "date": "2020-01-31T19:41:07Z"}, "committer": {"name": "hman523", "email": "shbarbella@gmail.com", "date": "2020-01-31T19:41:07Z"}, "message": "Fixed issue 68593", "tree": {"sha": "dee59aa5311b94749bfa434860af51d3ae8c138d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dee59aa5311b94749bfa434860af51d3ae8c138d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346920c3c844e650aff6428c6b5c6e70cbce9954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346920c3c844e650aff6428c6b5c6e70cbce9954", "html_url": "https://github.com/rust-lang/rust/commit/346920c3c844e650aff6428c6b5c6e70cbce9954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346920c3c844e650aff6428c6b5c6e70cbce9954/comments", "author": {"login": "hman523", "id": 25874048, "node_id": "MDQ6VXNlcjI1ODc0MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/25874048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hman523", "html_url": "https://github.com/hman523", "followers_url": "https://api.github.com/users/hman523/followers", "following_url": "https://api.github.com/users/hman523/following{/other_user}", "gists_url": "https://api.github.com/users/hman523/gists{/gist_id}", "starred_url": "https://api.github.com/users/hman523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hman523/subscriptions", "organizations_url": "https://api.github.com/users/hman523/orgs", "repos_url": "https://api.github.com/users/hman523/repos", "events_url": "https://api.github.com/users/hman523/events{/privacy}", "received_events_url": "https://api.github.com/users/hman523/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hman523", "id": 25874048, "node_id": "MDQ6VXNlcjI1ODc0MDQ4", "avatar_url": "https://avatars.githubusercontent.com/u/25874048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hman523", "html_url": "https://github.com/hman523", "followers_url": "https://api.github.com/users/hman523/followers", "following_url": "https://api.github.com/users/hman523/following{/other_user}", "gists_url": "https://api.github.com/users/hman523/gists{/gist_id}", "starred_url": "https://api.github.com/users/hman523/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hman523/subscriptions", "organizations_url": "https://api.github.com/users/hman523/orgs", "repos_url": "https://api.github.com/users/hman523/repos", "events_url": "https://api.github.com/users/hman523/events{/privacy}", "received_events_url": "https://api.github.com/users/hman523/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5371ddf8c6937e90ffb279c24ac3e79d17833399", "url": "https://api.github.com/repos/rust-lang/rust/commits/5371ddf8c6937e90ffb279c24ac3e79d17833399", "html_url": "https://github.com/rust-lang/rust/commit/5371ddf8c6937e90ffb279c24ac3e79d17833399"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "7e5efbe3078618f99503c325bde66841ac101ac5", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/346920c3c844e650aff6428c6b5c6e70cbce9954/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346920c3c844e650aff6428c6b5c6e70cbce9954/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=346920c3c844e650aff6428c6b5c6e70cbce9954", "patch": "@@ -2,7 +2,8 @@\n //!\n //! [`Box<T>`], casually referred to as a 'box', provides the simplest form of\n //! heap allocation in Rust. Boxes provide ownership for this allocation, and\n-//! drop their contents when they go out of scope.\n+//! drop their contents when they go out of scope. Boxes also ensure that they\n+//! never allocate more than `isize::MAX` bytes.\n //!\n //! # Examples\n //!"}, {"sha": "4f6b7870e2e8ceca10d51509c2803b9592c97534", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/346920c3c844e650aff6428c6b5c6e70cbce9954/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346920c3c844e650aff6428c6b5c6e70cbce9954/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=346920c3c844e650aff6428c6b5c6e70cbce9954", "patch": "@@ -4,6 +4,8 @@\n //! Vectors have `O(1)` indexing, amortized `O(1)` push (to the end) and\n //! `O(1)` pop (from the end).\n //!\n+//! Vectors ensure they never allocate more than `isize::MAX` bytes.\n+//!\n //! # Examples\n //!\n //! You can explicitly create a [`Vec<T>`] with [`new`]:"}]}