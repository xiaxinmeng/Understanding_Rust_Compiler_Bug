{"sha": "3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhOTIyOGI3ZWFhMDhiZmRkNDc0OGE3YzcxNzhhMThkNmQ0MzVjYWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-12T19:36:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-12T19:36:53Z"}, "message": "auto merge of #14811 : forticulous/rust/refcell-show, r=alexcrichton\n\nShow impl for RefCell and friends", "tree": {"sha": "dd4b31c9d35ea5c145d5305a7449c38d04f072d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd4b31c9d35ea5c145d5305a7449c38d04f072d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "html_url": "https://github.com/rust-lang/rust/commit/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b87c3a2a82507ac33e067311c591c8f3815a382", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b87c3a2a82507ac33e067311c591c8f3815a382", "html_url": "https://github.com/rust-lang/rust/commit/8b87c3a2a82507ac33e067311c591c8f3815a382"}, {"sha": "a8f581fad1e08ae566b10279c5ee60cb77b3672d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f581fad1e08ae566b10279c5ee60cb77b3672d", "html_url": "https://github.com/rust-lang/rust/commit/a8f581fad1e08ae566b10279c5ee60cb77b3672d"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "7ab2ae307d465fbb476ec12b858336038d04311f", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "patch": "@@ -385,6 +385,7 @@ impl<'b, T> DerefMut<T> for RefMut<'b, T> {\n #[cfg(test)]\n mod test {\n     use super::*;\n+    use mem::drop;\n \n     #[test]\n     fn smoketest_cell() {\n@@ -412,6 +413,22 @@ mod test {\n         assert!(format!(\"{}\", x).as_slice().contains(x.get()));\n     }\n \n+    #[test]\n+    fn ref_and_refmut_have_sensible_show() {\n+        use str::StrSlice;\n+        use realstd::str::Str;\n+\n+        let refcell = RefCell::new(\"foo\");\n+\n+        let refcell_refmut = refcell.borrow_mut();\n+        assert!(format!(\"{}\", refcell_refmut).as_slice().contains(\"foo\"));\n+        drop(refcell_refmut);\n+\n+        let refcell_ref = refcell.borrow();\n+        assert!(format!(\"{}\", refcell_ref).as_slice().contains(\"foo\"));\n+        drop(refcell_ref);\n+    }\n+\n     #[test]\n     fn double_imm_borrow() {\n         let x = RefCell::new(0);"}, {"sha": "0770c44dfbc1e28ccb952a64ba3b9a2fe4da73bf", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "patch": "@@ -13,13 +13,14 @@\n #![allow(unused_variable)]\n \n use any;\n-use cell::Cell;\n+use cell::{Cell, Ref, RefMut};\n use char::Char;\n use collections::Collection;\n use iter::{Iterator, range};\n use kinds::Copy;\n use mem;\n use option::{Option, Some, None};\n+use ops::Deref;\n use result::{Ok, Err};\n use result;\n use slice::{Vector, ImmutableVector};\n@@ -840,5 +841,17 @@ impl<T: Copy + Show> Show for Cell<T> {\n     }\n }\n \n+impl<'b, T: Show> Show for Ref<'b, T> {\n+    fn fmt(&self, f: &mut Formatter) -> Result {\n+        (**self).fmt(f)\n+    }\n+}\n+\n+impl<'b, T: Show> Show for RefMut<'b, T> {\n+    fn fmt(&self, f: &mut Formatter) -> Result {\n+        (*(self.deref())).fmt(f)\n+    }\n+}\n+\n // If you expected tests to be here, look instead at the run-pass/ifmt.rs test,\n // it's a lot easier than creating all of the rt::Piece structures here."}]}