{"sha": "c846ba6e53f3a1b8627034764d85d6f9e929c243", "node_id": "C_kwDOAAsO6NoAKGM4NDZiYTZlNTNmM2ExYjg2MjcwMzQ3NjRkODVkNmY5ZTkyOWMyNDM", "commit": {"author": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-09-13T20:19:32Z"}, "committer": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-09-13T20:19:32Z"}, "message": "UPDATE - merge and avoid translations for symbol mangling test output", "tree": {"sha": "823903fe1278f042429f1d2d2fd167014b517d12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/823903fe1278f042429f1d2d2fd167014b517d12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c846ba6e53f3a1b8627034764d85d6f9e929c243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c846ba6e53f3a1b8627034764d85d6f9e929c243", "html_url": "https://github.com/rust-lang/rust/commit/c846ba6e53f3a1b8627034764d85d6f9e929c243", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c846ba6e53f3a1b8627034764d85d6f9e929c243/comments", "author": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ce51982b8550c782ded466c1abff0d2b2e21c4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ce51982b8550c782ded466c1abff0d2b2e21c4e", "html_url": "https://github.com/rust-lang/rust/commit/1ce51982b8550c782ded466c1abff0d2b2e21c4e"}], "stats": {"total": 74, "additions": 35, "deletions": 39}, "files": [{"sha": "b7d48280f46198d3b72e42a9f8937723d8b2a10e", "filename": "compiler/rustc_error_messages/locales/en-US/symbol_mangling.ftl", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c846ba6e53f3a1b8627034764d85d6f9e929c243/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c846ba6e53f3a1b8627034764d85d6f9e929c243/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl?ref=c846ba6e53f3a1b8627034764d85d6f9e929c243", "patch": "@@ -1,7 +1 @@\n-symbol_mangling_invalid_symbol_name = symbol-name({$mangled_formatted})\n-\n-symbol_mangling_invalid_trait_item = demangling({$demangling_formatted})\n-\n-symbol_mangling_alt_invalid_trait_item = demangling-alt({$alt_demangling_formatted})\n-\n-symbol_mangling_invalid_def_path = def-path({$def_path})\n+symbol_mangling_test_output = {$kind}({$content})"}, {"sha": "664d2543f1fdb384d475df29125b86fb21924230", "filename": "compiler/rustc_symbol_mangling/src/errors.rs", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c846ba6e53f3a1b8627034764d85d6f9e929c243/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846ba6e53f3a1b8627034764d85d6f9e929c243/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs?ref=c846ba6e53f3a1b8627034764d85d6f9e929c243", "patch": "@@ -1,36 +1,34 @@\n //! Errors emitted by symbol_mangling.\n \n+use rustc_errors::{DiagnosticArgValue, IntoDiagnosticArg};\n use rustc_macros::SessionDiagnostic;\n use rustc_span::Span;\n \n #[derive(SessionDiagnostic)]\n-#[diag(symbol_mangling::invalid_symbol_name)]\n-pub struct InvalidSymbolName {\n+#[diag(symbol_mangling::test_output)]\n+pub struct TestOutput {\n     #[primary_span]\n     pub span: Span,\n-    pub mangled_formatted: String,\n+    pub kind: Kind,\n+    pub content: String,\n }\n \n-#[derive(SessionDiagnostic)]\n-#[diag(symbol_mangling::invalid_trait_item)]\n-pub struct InvalidTraitItem {\n-    #[primary_span]\n-    pub span: Span,\n-    pub demangling_formatted: String,\n+pub enum Kind {\n+    SymbolName,\n+    Demangling,\n+    DemanglingAlt,\n+    DefPath,\n }\n \n-#[derive(SessionDiagnostic)]\n-#[diag(symbol_mangling::alt_invalid_trait_item)]\n-pub struct AltInvalidTraitItem {\n-    #[primary_span]\n-    pub span: Span,\n-    pub alt_demangling_formatted: String,\n-}\n-\n-#[derive(SessionDiagnostic)]\n-#[diag(symbol_mangling::invalid_def_path)]\n-pub struct InvalidDefPath {\n-    #[primary_span]\n-    pub span: Span,\n-    pub def_path: String,\n+impl IntoDiagnosticArg for Kind {\n+    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n+        let kind = match self {\n+            Kind::SymbolName => \"symbol-name\",\n+            Kind::Demangling => \"demangling\",\n+            Kind::DemanglingAlt => \"demangling-alt\",\n+            Kind::DefPath => \"def-path\",\n+        }\n+        .into();\n+        DiagnosticArgValue::Str(kind)\n+    }\n }"}, {"sha": "9d89c9c52b20e6181c0a177f56b5139b575775e0", "filename": "compiler/rustc_symbol_mangling/src/test.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c846ba6e53f3a1b8627034764d85d6f9e929c243/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c846ba6e53f3a1b8627034764d85d6f9e929c243/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs?ref=c846ba6e53f3a1b8627034764d85d6f9e929c243", "patch": "@@ -4,7 +4,7 @@\n //! def-path. This is used for unit testing the code that generates\n //! paths etc in all kinds of annoying scenarios.\n \n-use crate::errors::{AltInvalidTraitItem, InvalidDefPath, InvalidSymbolName, InvalidTraitItem};\n+use crate::errors::{Kind, TestOutput};\n use rustc_hir::def_id::LocalDefId;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{subst::InternalSubsts, Instance, TyCtxt};\n@@ -60,26 +60,30 @@ impl SymbolNamesTest<'_> {\n                 tcx.erase_regions(InternalSubsts::identity_for_item(tcx, def_id)),\n             );\n             let mangled = tcx.symbol_name(instance);\n-            tcx.sess.emit_err(InvalidSymbolName {\n+            tcx.sess.emit_err(TestOutput {\n                 span: attr.span,\n-                mangled_formatted: format!(\"{mangled}\"),\n+                kind: Kind::SymbolName,\n+                content: format!(\"{mangled}\"),\n             });\n             if let Ok(demangling) = rustc_demangle::try_demangle(mangled.name) {\n-                tcx.sess.emit_err(InvalidTraitItem {\n+                tcx.sess.emit_err(TestOutput {\n                     span: attr.span,\n-                    demangling_formatted: format!(\"{demangling}\"),\n+                    kind: Kind::Demangling,\n+                    content: format!(\"{demangling}\"),\n                 });\n-                tcx.sess.emit_err(AltInvalidTraitItem {\n+                tcx.sess.emit_err(TestOutput {\n                     span: attr.span,\n-                    alt_demangling_formatted: format!(\"{:#}\", demangling),\n+                    kind: Kind::DemanglingAlt,\n+                    content: format!(\"{:#}\", demangling),\n                 });\n             }\n         }\n \n         for attr in tcx.get_attrs(def_id.to_def_id(), DEF_PATH) {\n-            tcx.sess.emit_err(InvalidDefPath {\n+            tcx.sess.emit_err(TestOutput {\n                 span: attr.span,\n-                def_path: with_no_trimmed_paths!(tcx.def_path_str(def_id.to_def_id())),\n+                kind: Kind::DefPath,\n+                content: with_no_trimmed_paths!(tcx.def_path_str(def_id.to_def_id())),\n             });\n         }\n     }"}]}