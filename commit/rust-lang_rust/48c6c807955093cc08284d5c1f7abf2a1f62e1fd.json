{"sha": "48c6c807955093cc08284d5c1f7abf2a1f62e1fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YzZjODA3OTU1MDkzY2MwODI4NGQ1YzFmN2FiZjJhMWY2MmUxZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-04T21:36:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-04T21:36:35Z"}, "message": "Merge pull request #20452 from brson/rustup\n\nMove rustup to the combined installer\n\nReviewed-by: brson", "tree": {"sha": "6c3d0366f33884cd5a5382662a582a9ffbb20ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c3d0366f33884cd5a5382662a582a9ffbb20ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48c6c807955093cc08284d5c1f7abf2a1f62e1fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48c6c807955093cc08284d5c1f7abf2a1f62e1fd", "html_url": "https://github.com/rust-lang/rust/commit/48c6c807955093cc08284d5c1f7abf2a1f62e1fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48c6c807955093cc08284d5c1f7abf2a1f62e1fd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dddc9ec28de0139990bb23ef36696b5de668a5ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/dddc9ec28de0139990bb23ef36696b5de668a5ed", "html_url": "https://github.com/rust-lang/rust/commit/dddc9ec28de0139990bb23ef36696b5de668a5ed"}, {"sha": "ebdf331133af89eef06bede54a5fe53ad4e21af3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebdf331133af89eef06bede54a5fe53ad4e21af3", "html_url": "https://github.com/rust-lang/rust/commit/ebdf331133af89eef06bede54a5fe53ad4e21af3"}], "stats": {"total": 138, "additions": 104, "deletions": 34}, "files": [{"sha": "749d9eaa173e86fcf41416c3fc192de3fe2f3ccc", "filename": "src/etc/rustup.sh", "status": "modified", "additions": 103, "deletions": 33, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/48c6c807955093cc08284d5c1f7abf2a1f62e1fd/src%2Fetc%2Frustup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/48c6c807955093cc08284d5c1f7abf2a1f62e1fd/src%2Fetc%2Frustup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frustup.sh?ref=48c6c807955093cc08284d5c1f7abf2a1f62e1fd", "patch": "@@ -230,7 +230,7 @@ validate_opt() {\n }\n \n create_tmp_dir() {\n-    local TMP_DIR=./rustup-tmp-install\n+    local TMP_DIR=`pwd`/rustup-tmp-install\n \n     rm -Rf \"${TMP_DIR}\"\n     need_ok \"failed to remove temporary installation directory\"\n@@ -245,6 +245,21 @@ probe_need CFG_CURL  curl\n probe_need CFG_TAR   tar\n probe_need CFG_FILE  file\n \n+probe CFG_SHA256SUM sha256sum\n+probe CFG_SHASUM shasum\n+\n+if [ -z \"$CFG_SHA256SUM\" -a -z \"$CFG_SHASUM\" ]; then\n+    err \"unable to find either sha256sum or shasum\"\n+fi\n+\n+calculate_hash() {\n+    if [ -n \"$CFG_SHA256SUM\" ]; then\n+        ${CFG_SHA256SUM} $@\n+    else\n+        ${CFG_SHASUM} -a 256 $@\n+    fi\n+}\n+\n CFG_SRC_DIR=\"$(cd $(dirname $0) && pwd)/\"\n CFG_SELF=\"$0\"\n CFG_ARGS=\"$@\"\n@@ -269,7 +284,8 @@ VAL_OPTIONS=\"\"\n \n flag uninstall \"only uninstall from the installation prefix\"\n valopt prefix \"\" \"set installation prefix\"\n-opt cargo 1 \"install cargo with rust\"\n+valopt date \"\" \"use the YYYY-MM-DD nightly instead of the current nightly\"\n+flag save \"save the downloaded nightlies to ~/.rustup\"\n \n if [ $HELP -eq 1 ]\n then\n@@ -417,42 +433,98 @@ CFG_TMP_DIR=$(mktemp -d 2>/dev/null \\\n            || mktemp -d -t 'rustup-tmp-install' 2>/dev/null \\\n            || create_tmp_dir)\n \n+# If we're saving nightlies and we didn't specify which one, grab todays.\n+# Otherwise we'll use the latest version.\n+if [ -n \"${CFG_SAVE}\" -a -z \"${CFG_DATE}\" ];\n+then\n+    CFG_DATE=`date \"+%Y-%m-%d\"`\n+fi\n+\n RUST_URL=\"https://static.rust-lang.org/dist\"\n RUST_PACKAGE_NAME=rust-nightly\n RUST_PACKAGE_NAME_AND_TRIPLE=\"${RUST_PACKAGE_NAME}-${HOST_TRIPLE}\"\n RUST_TARBALL_NAME=\"${RUST_PACKAGE_NAME_AND_TRIPLE}.tar.gz\"\n RUST_LOCAL_INSTALL_DIR=\"${CFG_TMP_DIR}/${RUST_PACKAGE_NAME_AND_TRIPLE}\"\n RUST_LOCAL_INSTALL_SCRIPT=\"${RUST_LOCAL_INSTALL_DIR}/install.sh\"\n \n-CARGO_URL=\"https://static.rust-lang.org/cargo-dist\"\n-CARGO_PACKAGE_NAME=cargo-nightly\n-CARGO_PACKAGE_NAME_AND_TRIPLE=\"${CARGO_PACKAGE_NAME}-${HOST_TRIPLE}\"\n-CARGO_TARBALL_NAME=\"${CARGO_PACKAGE_NAME_AND_TRIPLE}.tar.gz\"\n-CARGO_LOCAL_INSTALL_DIR=\"${CFG_TMP_DIR}/${CARGO_PACKAGE_NAME_AND_TRIPLE}\"\n-CARGO_LOCAL_INSTALL_SCRIPT=\"${CARGO_LOCAL_INSTALL_DIR}/install.sh\"\n+# add a date suffix if we want a particular nighly.\n+if [ -n \"${CFG_DATE}\" ];\n+then\n+    RUST_URL=\"${RUST_URL}/${CFG_DATE}\"\n+fi\n+\n+verify_hash() {\n+    remote_sha256=\"$1\"\n+    local_file=\"$2\"\n+\n+    msg \"Downloading ${remote_sha256}\"\n+    remote_sha256=`\"${CFG_CURL}\" -f \"${remote_sha256}\"`\n+    if [ \"$?\" -ne 0 ]; then\n+        rm -Rf \"${CFG_TMP_DIR}\"\n+        err \"Failed to download ${remote_url}\"\n+    fi\n+\n+    msg \"Verifying hash\"\n+    local_sha256=$(calculate_hash \"${local_file}\")\n+    if [ \"$?\" -ne 0 ]; then\n+        rm -Rf \"${CFG_TMP_DIR}\"\n+        err \"Failed to compute hash for ${local_tarball}\"\n+    fi\n+\n+    # We only need the sha, not the filenames\n+    remote_sha256=`echo ${remote_sha256} | cut -f 1 -d ' '`\n+    local_sha256=`echo ${local_sha256} | cut -f 1 -d ' '`\n+\n+    if [ \"${remote_sha256}\" != \"${local_sha256}\" ]; then\n+        rm -Rf \"${CFG_TMP_DIR}\"\n+        errmsg=\"invalid sha256.\\n\"\n+        errmsg=\"$errmsg ${remote_sha256}\\t${remote_tarball}\\n\"\n+        errmsg=\"$errmsg ${local_sha256}\\t${local_tarball}\"\n+        err \"$errmsg\"\n+    fi\n+}\n \n-# Fetch the package.\n+# Fetch the package. Optionally caches the tarballs.\n download_package() {\n     remote_tarball=\"$1\"\n     local_tarball=\"$2\"\n+    remote_sha256=\"${remote_tarball}.sha256\"\n \n-    msg \"Downloading ${remote_tarball} to ${local_tarball}\"\n+    # Check if we've already downloaded this file.\n+    if [ -e \"${local_tarball}.tmp\" ]; then\n+        msg \"Resuming ${remote_tarball} to ${local_tarball}\"\n \n-    \"${CFG_CURL}\" -f -o \"${local_tarball}\" \"${remote_tarball}\"\n-    if [ $? -ne 0 ]\n-    then\n-        rm -Rf \"${CFG_TMP_DIR}\"\n-        err \"failed to download installer\"\n+        \"${CFG_CURL}\" -f -C - -o \"${local_tarball}.tmp\" \"${remote_tarball}\"\n+        if [ $? -ne 0 ]\n+        then\n+            rm -Rf \"${CFG_TMP_DIR}\"\n+            err \"failed to download installer\"\n+        fi\n+\n+        mv \"${local_tarball}.tmp\" \"${local_tarball}\"\n+    elif [ ! -e \"${local_tarball}\" ]; then\n+        msg \"Downloading ${remote_tarball} to ${local_tarball}\"\n+\n+        \"${CFG_CURL}\" -f -o \"${local_tarball}.tmp\" \"${remote_tarball}\"\n+        if [ $? -ne 0 ]\n+        then\n+            rm -Rf \"${CFG_TMP_DIR}\"\n+            err \"failed to download installer\"\n+        fi\n+\n+        mv \"${local_tarball}.tmp\" \"${local_tarball}\"\n     fi\n+\n+    verify_hash \"${remote_sha256}\" \"${local_tarball}\"\n }\n \n # Wrap all the commands needed to install a package.\n install_package() {\n-    tarball_name=\"$1\"\n+    local_tarball=\"$1\"\n     install_script=\"$2\"\n \n-    msg \"Extracting ${tarball_name}\"\n-    (cd \"${CFG_TMP_DIR}\" && \"${CFG_TAR}\" -xzf \"${tarball_name}\")\n+    msg \"Extracting ${local_tarball}\"\n+    (cd \"${CFG_TMP_DIR}\" && \"${CFG_TAR}\" -xzf \"${local_tarball}\")\n     if [ $? -ne 0 ]; then\n         rm -Rf \"${CFG_TMP_DIR}\"\n         err \"failed to unpack installer\"\n@@ -479,29 +551,27 @@ install_packages() {\n     mkdir -p \"${CFG_TMP_DIR}\"\n     need_ok \"failed to create create temporary installation directory\"\n \n-    RUST_LOCAL_TARBALL=\"${CFG_TMP_DIR}/${RUST_TARBALL_NAME}\"\n-    CARGO_LOCAL_TARBALL=\"${CFG_TMP_DIR}/${CARGO_TARBALL_NAME}\"\n+    # If we're saving our nightlies, put them in $HOME/.rustup.\n+    if [ -n \"${CFG_SAVE}\" ]\n+    then\n+        RUST_DOWNLOAD_DIR=\"${HOME}/.rustup/${CFG_DATE}\"\n+    else\n+        RUST_DOWNLOAD_DIR=\"${CFG_TMP_DIR}\"\n+    fi\n+\n+    mkdir -p \"${RUST_DOWNLOAD_DIR}\"\n+    need_ok \"failed to create create download directory\"\n+\n+    RUST_LOCAL_TARBALL=\"${RUST_DOWNLOAD_DIR}/${RUST_TARBALL_NAME}\"\n \n     download_package \\\n         \"${RUST_URL}/${RUST_TARBALL_NAME}\" \\\n         \"${RUST_LOCAL_TARBALL}\"\n \n-    if [ -z \"${CFG_DISABLE_CARGO}\" ]; then\n-        download_package \\\n-            \"${CARGO_URL}/${CARGO_TARBALL_NAME}\" \\\n-            \"${CARGO_LOCAL_TARBALL}\"\n-    fi\n-\n     install_package \\\n-        \"${RUST_TARBALL_NAME}\" \\\n+        \"${RUST_LOCAL_TARBALL}\" \\\n         \"${RUST_LOCAL_INSTALL_SCRIPT}\"\n \n-    if [ -z \"${CFG_DISABLE_CARGO}\" ]; then\n-        install_package \\\n-            \"${CARGO_TARBALL_NAME}\" \\\n-            \"${CARGO_LOCAL_INSTALL_SCRIPT}\"\n-    fi\n-\n     rm -Rf \"${CFG_TMP_DIR}\"\n     need_ok \"couldn't rm temporary installation directory\"\n }"}, {"sha": "a33ee44be89684a65654bffaebfc2bd2061991ee", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48c6c807955093cc08284d5c1f7abf2a1f62e1fd/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c6c807955093cc08284d5c1f7abf2a1f62e1fd/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=48c6c807955093cc08284d5c1f7abf2a1f62e1fd", "patch": "@@ -989,7 +989,7 @@ impl LitIntType {\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Show)]\n pub enum Lit_ {\n     LitStr(InternedString, StrStyle),\n-    LitBinary(Rc<Vec<u8> >),\n+    LitBinary(Rc<Vec<u8>>),\n     LitByte(u8),\n     LitChar(char),\n     LitInt(u64, LitIntType),"}]}