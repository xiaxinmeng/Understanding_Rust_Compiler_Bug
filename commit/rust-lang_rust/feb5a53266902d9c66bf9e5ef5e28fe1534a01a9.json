{"sha": "feb5a53266902d9c66bf9e5ef5e28fe1534a01a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYjVhNTMyNjY5MDJkOWM2NmJmOWU1ZWY1ZTI4ZmUxNTM0YTAxYTk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-04-05T19:31:11Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-04-24T20:31:30Z"}, "message": "Prevent failure in case no space left on device in rustdoc", "tree": {"sha": "fc1b6336858d847c6a586c3e8db5fec50087627f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc1b6336858d847c6a586c3e8db5fec50087627f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9", "html_url": "https://github.com/rust-lang/rust/commit/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eff8526a789e0dfa8b97f7dec91b7b5c18e8544", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eff8526a789e0dfa8b97f7dec91b7b5c18e8544", "html_url": "https://github.com/rust-lang/rust/commit/4eff8526a789e0dfa8b97f7dec91b7b5c18e8544"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "8eb04e3722786020427a6107aa9bdf3cb8aa7495", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=feb5a53266902d9c66bf9e5ef5e28fe1534a01a9", "patch": "@@ -1358,7 +1358,8 @@ fn write_minify_replacer<W: Write>(\n /// static HTML tree. Each component in the cleaned path will be passed as an\n /// argument to `f`. The very last component of the path (ie the file name) will\n /// be passed to `f` if `keep_filename` is true, and ignored otherwise.\n-fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F) where\n+fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F)\n+where\n     F: FnMut(&OsStr),\n {\n     // make it relative, if possible\n@@ -1470,11 +1471,11 @@ impl<'a> SourceCollector<'a> {\n         let mut href = String::new();\n         clean_srcpath(&self.scx.src_root, &p, false, |component| {\n             cur.push(component);\n-            fs::create_dir_all(&cur).unwrap();\n             root_path.push_str(\"../\");\n             href.push_str(&component.to_string_lossy());\n             href.push('/');\n         });\n+        fs::create_dir_all(&cur)?;\n         let mut fname = p.file_name()\n                          .expect(\"source has no filename\")\n                          .to_os_string();\n@@ -1483,7 +1484,7 @@ impl<'a> SourceCollector<'a> {\n         href.push_str(&fname.to_string_lossy());\n \n         let mut w = BufWriter::new(File::create(&cur)?);\n-        let title = format!(\"{} -- source\", cur.file_name().unwrap()\n+        let title = format!(\"{} -- source\", cur.file_name().expect(\"failed to get file name\")\n                                                .to_string_lossy());\n         let desc = format!(\"Source to the Rust file `{}`.\", filename);\n         let page = layout::Page {"}]}