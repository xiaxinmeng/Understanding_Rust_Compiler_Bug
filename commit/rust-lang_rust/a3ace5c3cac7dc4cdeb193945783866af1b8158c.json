{"sha": "a3ace5c3cac7dc4cdeb193945783866af1b8158c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYWNlNWMzY2FjN2RjNGNkZWIxOTM5NDU3ODM4NjZhZjFiODE1OGM=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-06-02T16:58:11Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-06-02T16:58:11Z"}, "message": "Cargo fmt", "tree": {"sha": "6a4346f7f0094f38c09f9520d1daf0ce739aa1a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a4346f7f0094f38c09f9520d1daf0ce739aa1a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3ace5c3cac7dc4cdeb193945783866af1b8158c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ace5c3cac7dc4cdeb193945783866af1b8158c", "html_url": "https://github.com/rust-lang/rust/commit/a3ace5c3cac7dc4cdeb193945783866af1b8158c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3ace5c3cac7dc4cdeb193945783866af1b8158c/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fefe36737a1ebc35f96e46df3591b1ed74362a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fefe36737a1ebc35f96e46df3591b1ed74362a5", "html_url": "https://github.com/rust-lang/rust/commit/9fefe36737a1ebc35f96e46df3591b1ed74362a5"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "41312101417ae3f68056149277685da0aad3c92b", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=a3ace5c3cac7dc4cdeb193945783866af1b8158c", "patch": "@@ -79,7 +79,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n \n         let fn_def_id = cx.tcx.hir().local_def_id_from_hir_id(hir_id);\n         let region_scope_tree = &cx.tcx.region_scope_tree(fn_def_id);\n-        ExprUseVisitor::new(&mut v, cx.tcx, fn_def_id, cx.param_env, region_scope_tree, cx.tables, None).consume_body(body);\n+        ExprUseVisitor::new(\n+            &mut v,\n+            cx.tcx,\n+            fn_def_id,\n+            cx.param_env,\n+            region_scope_tree,\n+            cx.tables,\n+            None,\n+        )\n+        .consume_body(body);\n \n         for node in v.set {\n             span_lint("}, {"sha": "dcd89b7b85149fe254f876f8567ff7eafa727f66", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=a3ace5c3cac7dc4cdeb193945783866af1b8158c", "patch": "@@ -1662,7 +1662,16 @@ fn check_for_mutation(\n     };\n     let def_id = def_id::DefId::local(body.hir_id.owner);\n     let region_scope_tree = &cx.tcx.region_scope_tree(def_id);\n-    ExprUseVisitor::new(&mut delegate, cx.tcx, def_id, cx.param_env, region_scope_tree, cx.tables, None).walk_expr(body);\n+    ExprUseVisitor::new(\n+        &mut delegate,\n+        cx.tcx,\n+        def_id,\n+        cx.param_env,\n+        region_scope_tree,\n+        cx.tables,\n+        None,\n+    )\n+    .walk_expr(body);\n     delegate.mutation_span()\n }\n "}, {"sha": "424de64b5c7457aa1e96f44d731b1b6ef5a3727d", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=a3ace5c3cac7dc4cdeb193945783866af1b8158c", "patch": "@@ -137,8 +137,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n         } = {\n             let mut ctx = MovedVariablesCtxt::new(cx);\n             let region_scope_tree = &cx.tcx.region_scope_tree(fn_def_id);\n-            euv::ExprUseVisitor::new(&mut ctx, cx.tcx, fn_def_id, cx.param_env, region_scope_tree, cx.tables, None)\n-                .consume_body(body);\n+            euv::ExprUseVisitor::new(\n+                &mut ctx,\n+                cx.tcx,\n+                fn_def_id,\n+                cx.param_env,\n+                region_scope_tree,\n+                cx.tables,\n+                None,\n+            )\n+            .consume_body(body);\n             ctx\n         };\n "}, {"sha": "014dc9d4d8014a301093984148c85004c5bc1a40", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ace5c3cac7dc4cdeb193945783866af1b8158c/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=a3ace5c3cac7dc4cdeb193945783866af1b8158c", "patch": "@@ -16,7 +16,16 @@ pub fn mutated_variables<'a, 'tcx: 'a>(expr: &'tcx Expr, cx: &'a LateContext<'a,\n     };\n     let def_id = def_id::DefId::local(expr.hir_id.owner);\n     let region_scope_tree = &cx.tcx.region_scope_tree(def_id);\n-    ExprUseVisitor::new(&mut delegate, cx.tcx, def_id, cx.param_env, region_scope_tree, cx.tables, None).walk_expr(expr);\n+    ExprUseVisitor::new(\n+        &mut delegate,\n+        cx.tcx,\n+        def_id,\n+        cx.param_env,\n+        region_scope_tree,\n+        cx.tables,\n+        None,\n+    )\n+    .walk_expr(expr);\n \n     if delegate.skip {\n         return None;\n@@ -32,7 +41,7 @@ pub fn is_potentially_mutated<'a, 'tcx: 'a>(\n     if let Res::Local(id) = variable.res {\n         mutated_variables(expr, cx).map_or(true, |mutated| mutated.contains(&id))\n     } else {\n-        return true\n+        return true;\n     }\n }\n "}]}