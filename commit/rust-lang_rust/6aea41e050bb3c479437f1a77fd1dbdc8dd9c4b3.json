{"sha": "6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZWE0MWUwNTBiYjNjNDc5NDM3ZjFhNzdmZDFkYmRjOGRkOWM0YjM=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-06-22T06:41:16Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-06-22T06:41:16Z"}, "message": "Fix fallout cause NodeId pruning", "tree": {"sha": "677cb5ccc293c66a433a9c9a12afb2f6ffb4e9ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/677cb5ccc293c66a433a9c9a12afb2f6ffb4e9ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "html_url": "https://github.com/rust-lang/rust/commit/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "html_url": "https://github.com/rust-lang/rust/commit/9cae8aa9a9cfecf1fd8adec22f51cc304f959950"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "cfe031d6cf77dab57c2eb011325cab361731b44c", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "patch": "@@ -1647,7 +1647,7 @@ fn check_for_mutability(cx: &LateContext<'_, '_>, bound: &Expr) -> Option<HirId>\n         then {\n             let res = cx.tables.qpath_res(qpath, bound.hir_id);\n             if let Res::Local(node_id) = res {\n-                let node_str = cx.tcx.hir().get_by_hir_id(node_id);\n+                let node_str = cx.tcx.hir().get(node_id);\n                 if_chain! {\n                     if let Node::Binding(pat) = node_str;\n                     if let PatKind::Binding(bind_ann, ..) = pat.node;"}, {"sha": "304a39cfd49fe89b3a6e9fe441ad8611554e90a1", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "patch": "@@ -1424,7 +1424,7 @@ fn lint_clone_on_copy(cx: &LateContext<'_, '_>, expr: &hir::Expr, arg: &hir::Exp\n                 snip = Some((\"try removing the `clone` call\", format!(\"{}\", snippet)));\n             } else {\n                 let parent = cx.tcx.hir().get_parent_node_by_hir_id(expr.hir_id);\n-                match cx.tcx.hir().get_by_hir_id(parent) {\n+                match cx.tcx.hir().get(parent) {\n                     hir::Node::Expr(parent) => match parent.node {\n                         // &*x is a nop, &x.clone() is not\n                         hir::ExprKind::AddrOf(..) |"}, {"sha": "d43eaf09be02393d8dbe7c64209eba2d6aa089c4", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "patch": "@@ -116,7 +116,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n \n fn parent_node_is_if_expr<'a, 'b>(expr: &Expr, cx: &LateContext<'a, 'b>) -> bool {\n     let parent_id = cx.tcx.hir().get_parent_node_by_hir_id(expr.hir_id);\n-    let parent_node = cx.tcx.hir().get_by_hir_id(parent_id);\n+    let parent_node = cx.tcx.hir().get(parent_id);\n \n     if let rustc::hir::Node::Expr(e) = parent_node {\n         if higher::if_block(&e).is_some() {"}, {"sha": "870805894656ddaf8052afdeed1955d1b52fef20", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "patch": "@@ -67,7 +67,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for SuspiciousImpl {\n             // as a child node\n             let mut parent_expr = cx.tcx.hir().get_parent_node_by_hir_id(expr.hir_id);\n             while parent_expr != hir::CRATE_HIR_ID {\n-                if let hir::Node::Expr(e) = cx.tcx.hir().get_by_hir_id(parent_expr) {\n+                if let hir::Node::Expr(e) = cx.tcx.hir().get(parent_expr) {\n                     match e.node {\n                         hir::ExprKind::Binary(..)\n                         | hir::ExprKind::Unary(hir::UnOp::UnNot, _)"}, {"sha": "a12225e7e484ccbe8b8353c98a7990d6139ee3ab", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=6aea41e050bb3c479437f1a77fd1dbdc8dd9c4b3", "patch": "@@ -66,7 +66,7 @@ pub fn differing_macro_contexts(lhs: Span, rhs: Span) -> bool {\n /// ```\n pub fn in_constant(cx: &LateContext<'_, '_>, id: HirId) -> bool {\n     let parent_id = cx.tcx.hir().get_parent_item(id);\n-    match cx.tcx.hir().get_by_hir_id(parent_id) {\n+    match cx.tcx.hir().get(parent_id) {\n         Node::Item(&Item {\n             node: ItemKind::Const(..),\n             ..\n@@ -320,7 +320,7 @@ pub fn trait_ref_of_method<'tcx>(cx: &LateContext<'_, 'tcx>, hir_id: HirId) -> O\n     let parent_impl = cx.tcx.hir().get_parent_item(hir_id);\n     if_chain! {\n         if parent_impl != hir::CRATE_HIR_ID;\n-        if let hir::Node::Item(item) = cx.tcx.hir().get_by_hir_id(parent_impl);\n+        if let hir::Node::Item(item) = cx.tcx.hir().get(parent_impl);\n         if let hir::ItemKind::Impl(_, _, _, _, trait_ref, _, _) = &item.node;\n         then { return trait_ref.as_ref(); }\n     }"}]}