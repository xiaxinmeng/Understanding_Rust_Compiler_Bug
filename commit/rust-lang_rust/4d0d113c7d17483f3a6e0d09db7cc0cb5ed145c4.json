{"sha": "4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMGQxMTNjN2QxNzQ4M2YzYTZlMGQwOWRiN2NjMGNiNWVkMTQ1YzQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-07T11:41:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-07T11:41:25Z"}, "message": "Merge #3044\n\n3044: Don't crash when recieving unkown file for cargo diagnostic. r=matklad a=kiljacken\n\nFixes #3014\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>", "tree": {"sha": "7451de0b1195b90c6c74be4a1acb477591f4dc94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7451de0b1195b90c6c74be4a1acb477591f4dc94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJePUzlCRBK7hj4Ov3rIwAAdHIIAIWJKtfQf9WJe3oxeo2inJuF\nxyYSLAKEXioCXufvHtud1O9GKt1OEzSvJIMkMNoTW/MoPK8pM79RZ1Yhfdp23eDe\nMm/rhVDDLQhrDbrKcmzBSSqtlFYjivB3VgyQqZDxT496s14kVc17eDUB8+Z8IOd3\nB+lxv1oMK1+wYHXaYh6TWvh+9QKMWwf/q4r6FReIV4fJ7lVauy1YkRUT/fQnJR3J\nYwXw9h7uzyrC2r6dUYfrU3wggVGs4S+Tw1cYkOUrvEhEStrkTwfibxYLd8ofjPgw\ncAAp3WTDbTUvaCmpxn5DdQJ6BK125VK9HiiNXOhgAtVszTNxEMlfdR9hyR+DyuE=\n=5D0Q\n-----END PGP SIGNATURE-----\n", "payload": "tree 7451de0b1195b90c6c74be4a1acb477591f4dc94\nparent 1479dd6f2df1eecdd432cf72c91c4ee988b54c77\nparent 137a878461662b7bf7f1acf3855b166c1c19fc2f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581075685 +0000\ncommitter GitHub <noreply@github.com> 1581075685 +0000\n\nMerge #3044\n\n3044: Don't crash when recieving unkown file for cargo diagnostic. r=matklad a=kiljacken\n\nFixes #3014\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4", "html_url": "https://github.com/rust-lang/rust/commit/4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1479dd6f2df1eecdd432cf72c91c4ee988b54c77", "url": "https://api.github.com/repos/rust-lang/rust/commits/1479dd6f2df1eecdd432cf72c91c4ee988b54c77", "html_url": "https://github.com/rust-lang/rust/commit/1479dd6f2df1eecdd432cf72c91c4ee988b54c77"}, {"sha": "137a878461662b7bf7f1acf3855b166c1c19fc2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/137a878461662b7bf7f1acf3855b166c1c19fc2f", "html_url": "https://github.com/rust-lang/rust/commit/137a878461662b7bf7f1acf3855b166c1c19fc2f"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "ceff82fda9e3408349dc52dcc4b2583c8bad2fbc", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=4d0d113c7d17483f3a6e0d09db7cc0cb5ed145c4", "patch": "@@ -635,12 +635,13 @@ fn on_check_task(\n \n         CheckTask::AddDiagnostic { url, diagnostic, fixes } => {\n             let path = url.to_file_path().map_err(|()| format!(\"invalid uri: {}\", url))?;\n-            let file_id = world_state\n-                .vfs\n-                .read()\n-                .path2file(&path)\n-                .map(|it| FileId(it.0))\n-                .ok_or_else(|| format!(\"unknown file: {}\", path.to_string_lossy()))?;\n+            let file_id = match world_state.vfs.read().path2file(&path) {\n+                Some(file) => FileId(file.0),\n+                None => {\n+                    log::error!(\"File with cargo diagnostic not found in VFS: {}\", path.display());\n+                    return Ok(());\n+                }\n+            };\n \n             task_sender\n                 .send(Task::Diagnostic(DiagnosticTask::AddCheck(file_id, diagnostic, fixes)))?;"}]}