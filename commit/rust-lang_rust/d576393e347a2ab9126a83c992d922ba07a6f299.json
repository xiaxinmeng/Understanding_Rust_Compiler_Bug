{"sha": "d576393e347a2ab9126a83c992d922ba07a6f299", "node_id": "C_kwDOAAsO6NoAKGQ1NzYzOTNlMzQ3YTJhYjkxMjZhODNjOTkyZDkyMmJhMDdhNmYyOTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-24T13:48:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-24T13:48:45Z"}, "message": "Rollup merge of #90221 - JakobDegen:issue-90213, r=cjgillot\n\nFix ICE when forgetting to `Box` a parameter to a `Self::func` call\n\nCloses #90213 .\n\nAssuming we can get the `DefId` of the receiver causes an ICE if the receiver is `Self`. We can just avoid doing this though.", "tree": {"sha": "f440b26366c42d3949a883ab09e54ed4ba841c24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f440b26366c42d3949a883ab09e54ed4ba841c24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d576393e347a2ab9126a83c992d922ba07a6f299", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhdWQ9CRBK7hj4Ov3rIwAA1GwIAKbFe5r3Z2Sn1l4JqKtFCcqD\nv8XsQSMhVDAQyCqavbS+LfPGwGT5qnJh4W28VnQwpPFp/HHja+2TjrZuz2MQcjpe\n2495RBjzZPyzFqvzD9xt61zx80msNT58qxcaMNlF1OBtj5NQIWn4EP5YkKqe4Qez\n/1mqk/O5i9hCcOCYuIJQfQWs9ULaouhJlrgCgf9GsQoxxcsdk2CJxj4SQOQeD52T\nFBTwAchMllDNzewuKpa4IKyqI7kSrGiDWToXOfiixYRqskbH1rSzWVloh5nE2Q1I\nMd/IUYbNF7AdB2pPkVXab4GCn3Kf3dnjfKKCVfUZSNg/OU8NvIBm6HkNuh7UObY=\n=b3Gx\n-----END PGP SIGNATURE-----\n", "payload": "tree f440b26366c42d3949a883ab09e54ed4ba841c24\nparent c16ee19dd4d81d3b1150d67cfb4ea84c826f4c36\nparent 4b970231fd1254580fbddabab74a125404fea0de\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635083325 +0200\ncommitter GitHub <noreply@github.com> 1635083325 +0200\n\nRollup merge of #90221 - JakobDegen:issue-90213, r=cjgillot\n\nFix ICE when forgetting to `Box` a parameter to a `Self::func` call\n\nCloses #90213 .\n\nAssuming we can get the `DefId` of the receiver causes an ICE if the receiver is `Self`. We can just avoid doing this though.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d576393e347a2ab9126a83c992d922ba07a6f299", "html_url": "https://github.com/rust-lang/rust/commit/d576393e347a2ab9126a83c992d922ba07a6f299", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d576393e347a2ab9126a83c992d922ba07a6f299/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c16ee19dd4d81d3b1150d67cfb4ea84c826f4c36", "url": "https://api.github.com/repos/rust-lang/rust/commits/c16ee19dd4d81d3b1150d67cfb4ea84c826f4c36", "html_url": "https://github.com/rust-lang/rust/commit/c16ee19dd4d81d3b1150d67cfb4ea84c826f4c36"}, {"sha": "4b970231fd1254580fbddabab74a125404fea0de", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b970231fd1254580fbddabab74a125404fea0de", "html_url": "https://github.com/rust-lang/rust/commit/4b970231fd1254580fbddabab74a125404fea0de"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "dcc635a1f00b19ecbbd63e19b1a9f19807719d5a", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d576393e347a2ab9126a83c992d922ba07a6f299/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d576393e347a2ab9126a83c992d922ba07a6f299/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=d576393e347a2ab9126a83c992d922ba07a6f299", "patch": "@@ -420,7 +420,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             ..\n                         },\n                         method,\n-                    )) if Some(recv_ty.def_id()) == pin_did && method.ident.name == sym::new => {\n+                    )) if recv_ty.opt_def_id() == pin_did && method.ident.name == sym::new => {\n                         err.span_suggestion(\n                             fn_name.span,\n                             \"use `Box::pin` to pin and box this expression\","}, {"sha": "1e36b2fabf2c07deda90b94086eb8c926d3cba99", "filename": "src/test/ui/suggestions/issue-90213-expected-boxfuture-self-ice.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d576393e347a2ab9126a83c992d922ba07a6f299/src%2Ftest%2Fui%2Fsuggestions%2Fissue-90213-expected-boxfuture-self-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d576393e347a2ab9126a83c992d922ba07a6f299/src%2Ftest%2Fui%2Fsuggestions%2Fissue-90213-expected-boxfuture-self-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-90213-expected-boxfuture-self-ice.rs?ref=d576393e347a2ab9126a83c992d922ba07a6f299", "patch": "@@ -0,0 +1,13 @@\n+// Checks that we do not ICE when comparing `Self` to `Pin`\n+// edition:2021\n+\n+struct S;\n+\n+impl S {\n+    fn foo(_: Box<Option<S>>) {}\n+    fn bar() {\n+        Self::foo(None) //~ ERROR mismatched types\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "c15b772b79ca4364f9087215341de116a6a0d64a", "filename": "src/test/ui/suggestions/issue-90213-expected-boxfuture-self-ice.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d576393e347a2ab9126a83c992d922ba07a6f299/src%2Ftest%2Fui%2Fsuggestions%2Fissue-90213-expected-boxfuture-self-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d576393e347a2ab9126a83c992d922ba07a6f299/src%2Ftest%2Fui%2Fsuggestions%2Fissue-90213-expected-boxfuture-self-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-90213-expected-boxfuture-self-ice.stderr?ref=d576393e347a2ab9126a83c992d922ba07a6f299", "patch": "@@ -0,0 +1,17 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-90213-expected-boxfuture-self-ice.rs:9:19\n+   |\n+LL |         Self::foo(None)\n+   |                   ^^^^ expected struct `Box`, found enum `Option`\n+   |\n+   = note: expected struct `Box<Option<S>>`\n+                found enum `Option<_>`\n+   = note: for more on the distinction between the stack and the heap, read https://doc.rust-lang.org/book/ch15-01-box.html, https://doc.rust-lang.org/rust-by-example/std/box.html, and https://doc.rust-lang.org/std/boxed/index.html\n+help: store this in the heap by calling `Box::new`\n+   |\n+LL |         Self::foo(Box::new(None))\n+   |                   +++++++++    +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}