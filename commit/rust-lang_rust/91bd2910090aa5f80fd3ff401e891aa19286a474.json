{"sha": "91bd2910090aa5f80fd3ff401e891aa19286a474", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYmQyOTEwMDkwYWE1ZjgwZmQzZmY0MDFlODkxYWExOTI4NmE0NzQ=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-08-01T01:12:58Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-08-01T18:08:46Z"}, "message": "Fix bad indentation.", "tree": {"sha": "8987abac83141a6d01ec695e10f9512ef399c37d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8987abac83141a6d01ec695e10f9512ef399c37d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91bd2910090aa5f80fd3ff401e891aa19286a474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91bd2910090aa5f80fd3ff401e891aa19286a474", "html_url": "https://github.com/rust-lang/rust/commit/91bd2910090aa5f80fd3ff401e891aa19286a474", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91bd2910090aa5f80fd3ff401e891aa19286a474/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac4e57c6400bdd500a1918238fc76abc3b7def3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4e57c6400bdd500a1918238fc76abc3b7def3d", "html_url": "https://github.com/rust-lang/rust/commit/ac4e57c6400bdd500a1918238fc76abc3b7def3d"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "a9578d688c4fef46a6afc812ad3156e35921493b", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/91bd2910090aa5f80fd3ff401e891aa19286a474/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91bd2910090aa5f80fd3ff401e891aa19286a474/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=91bd2910090aa5f80fd3ff401e891aa19286a474", "patch": "@@ -436,23 +436,23 @@ fn check_item(ccx: @crate_ctxt, it: @ast::item) {\n         do option::iter(m_dtor) |dtor| {\n             // typecheck the dtor\n             check_bare_fn(ccx, ast_util::dtor_dec(),\n-                         dtor.node.body, dtor.node.id,\n-                         some(class_t));\n+                          dtor.node.body, dtor.node.id,\n+                          some(class_t));\n             // Write the dtor's self's type\n             write_ty_to_tcx(tcx, dtor.node.self_id, class_t.self_ty);\n         };\n \n         // typecheck the members\n         for members.each |m| { check_class_member(ccx, class_t, m); }\n-          // Check that there's at least one field\n-          let (fields,_) = split_class_items(members);\n-          if fields.len() < 1u {\n-              ccx.tcx.sess.span_err(\n-                  it.span,\n-                  ~\"a class must have at least one field\");\n-          }\n-          // Check that the class is instantiable\n-          check_instantiable(ccx.tcx, it.span, it.id);\n+        // Check that there's at least one field\n+        let (fields,_) = split_class_items(members);\n+        if fields.len() < 1u {\n+            ccx.tcx.sess.span_err(\n+                it.span,\n+                ~\"a class must have at least one field\");\n+        }\n+        // Check that the class is instantiable\n+        check_instantiable(ccx.tcx, it.span, it.id);\n       }\n       ast::item_ty(t, tps) {\n         let tpt_ty = ty::node_id_to_type(ccx.tcx, it.id);"}]}