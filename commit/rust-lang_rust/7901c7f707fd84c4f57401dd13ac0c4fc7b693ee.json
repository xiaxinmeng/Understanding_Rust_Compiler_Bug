{"sha": "7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MDFjN2Y3MDdmZDg0YzRmNTc0MDFkZDEzYWMwYzRmYzdiNjkzZWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-24T04:02:53Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-04T17:57:22Z"}, "message": "canonicalize FxHash{Map,Set} imports", "tree": {"sha": "986b2d8da7c0ee7f303f29dff0aa5db7c2bf1b28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/986b2d8da7c0ee7f303f29dff0aa5db7c2bf1b28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "html_url": "https://github.com/rust-lang/rust/commit/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66f5bf1b8b1e29afc15220d4753ffbcf0c5b5d91", "url": "https://api.github.com/repos/rust-lang/rust/commits/66f5bf1b8b1e29afc15220d4753ffbcf0c5b5d91", "html_url": "https://github.com/rust-lang/rust/commit/66f5bf1b8b1e29afc15220d4753ffbcf0c5b5d91"}], "stats": {"total": 229, "additions": 112, "deletions": 117}, "files": [{"sha": "ffb5610c2c3eae7e5ac47fdf80f274ea42962d6a", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -8,7 +8,7 @@ use crate::ich::Fingerprint;\n use crate::middle::cstore::CrateStore;\n use crate::session::CrateDisambiguator;\n use crate::session::Session;\n-use crate::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_index::vec::IndexVec;\n use rustc_span::source_map::SourceMap;"}, {"sha": "15914809ba4c5cd03bd830dad57b267468b748c0", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -12,8 +12,8 @@ use crate::hir::*;\n use crate::middle::cstore::CrateStoreDyn;\n use crate::ty::query::Providers;\n use crate::util::common::time;\n-use crate::util::nodemap::FxHashMap;\n \n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::MacroKind;"}, {"sha": "39c9866666c4b199edbdcef958f541c8666b76d3", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -11,9 +11,10 @@ pub use self::UnsafeSource::*;\n use crate::hir::def::{DefKind, Res};\n use crate::hir::def_id::{DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX};\n use crate::ty::query::Providers;\n-use crate::util::nodemap::{FxHashSet, NodeMap};\n+use crate::util::nodemap::NodeMap;\n \n use errors::FatalError;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::{par_for_each_in, Send, Sync};\n use rustc_macros::HashStable;\n use rustc_serialize::{self, Decodable, Decoder, Encodable, Encoder};"}, {"sha": "16087959972b7671692350f18c5a974d19ea4b53", "filename": "src/librustc/infer/freshen.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ffreshen.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -33,7 +33,8 @@\n \n use crate::ty::fold::TypeFolder;\n use crate::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use crate::util::nodemap::FxHashMap;\n+\n+use rustc_data_structures::fx::FxHashMap;\n \n use std::collections::hash_map::Entry;\n "}, {"sha": "b7a3ff6987cb586519b5cadd07c0dd4a3c2ceb64", "filename": "src/librustc/infer/lexical_region_resolve/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fgraphviz.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -15,7 +15,7 @@ use crate::infer::SubregionOrigin;\n use crate::middle::free_region::RegionRelations;\n use crate::middle::region;\n use crate::ty;\n-use crate::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n \n use std::borrow::Cow;\n use std::collections::btree_map::BTreeMap;"}, {"sha": "5c11659b550ce3bd5596cf1c169f0c6da6b810c4", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -22,9 +22,9 @@ use crate::ty::relate::RelateResult;\n use crate::ty::subst::{GenericArg, InternalSubsts, SubstsRef};\n use crate::ty::{self, GenericParamDefKind, InferConst, Ty, TyCtxt};\n use crate::ty::{ConstVid, FloatVid, IntVid, TyVid};\n-use crate::util::nodemap::{FxHashMap, FxHashSet};\n \n use errors::DiagnosticBuilder;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::unify as ut;\n use rustc_span::symbol::Symbol;"}, {"sha": "ca6a7beb48ed4330a6d77c118fbe48689702ed64", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -27,9 +27,8 @@ use crate::middle::privacy::AccessLevels;\n use crate::session::Session;\n use crate::ty::layout::{LayoutError, LayoutOf, TyLayout};\n use crate::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n-use crate::util::nodemap::FxHashMap;\n-\n use errors::DiagnosticBuilder;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync;\n use rustc_span::{symbol::Symbol, MultiSpan, Span};\n use std::slice;"}, {"sha": "40e6f22c25f3df594d774f3ccc16cda8311dd68d", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -6,8 +6,8 @@ use crate::lint::builtin;\n use crate::lint::context::{CheckLintNameResult, LintStore};\n use crate::lint::{self, Level, Lint, LintId, LintSource};\n use crate::session::Session;\n-use crate::util::nodemap::FxHashMap;\n use errors::{Applicability, DiagnosticBuilder};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_span::source_map::MultiSpan;\n use rustc_span::symbol::{sym, Symbol};"}, {"sha": "0e9a2a39fd912663a2c574f66debd2ffbe48b521", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -9,15 +9,15 @@\n \n pub use self::LangItem::*;\n \n+use crate::hir;\n use crate::hir::check_attr::Target;\n use crate::hir::def_id::DefId;\n+use crate::hir::itemlikevisit::ItemLikeVisitor;\n use crate::middle::cstore::ExternCrate;\n use crate::middle::weak_lang_items;\n use crate::ty::{self, TyCtxt};\n-use crate::util::nodemap::FxHashMap;\n \n-use crate::hir;\n-use crate::hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_macros::HashStable;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;"}, {"sha": "770a974da07f216294f03b1bff7a891e757ff8de", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -3,8 +3,9 @@\n //! which are available for use externally when compiled as a library.\n \n use crate::hir::HirId;\n-use crate::util::nodemap::{DefIdSet, FxHashMap};\n+use crate::util::nodemap::DefIdSet;\n \n+use rustc_data_structures::fx::FxHashMap;\n use rustc_macros::HashStable;\n use std::fmt;\n use std::hash::Hash;"}, {"sha": "ee96b595f6fde92c9e685b92a1550716c79866c8", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -11,8 +11,8 @@ use crate::hir::def_id::DefId;\n use crate::hir::Node;\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::ty::{self, DefIdTree, TyCtxt};\n-use crate::util::nodemap::FxHashMap;\n \n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_index::vec::Idx;\n use rustc_macros::HashStable;"}, {"sha": "951181c8900ce1efb184457c1b3e2abf3dc2db89", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -5,7 +5,7 @@ use crate::hir::{GenericParam, ItemLocalId};\n use crate::hir::{GenericParamKind, LifetimeParamKind};\n use crate::ty;\n \n-use crate::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_macros::HashStable;\n \n /// The origin of a named lifetime definition."}, {"sha": "0c756c71fbdf68d5d57bd4721a0c999c8d00a85f", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -10,8 +10,9 @@ use crate::lint::builtin::BuiltinLintDiagnostics;\n use crate::lint::{self, in_derive_expansion, Lint};\n use crate::session::{DiagnosticMessageId, Session};\n use crate::ty::{self, TyCtxt};\n-use crate::util::nodemap::{FxHashMap, FxHashSet};\n+\n use errors::DiagnosticBuilder;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_feature::GateIssue;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};"}, {"sha": "2dbe1d4fa5c49413d721fea66743f2cc14ff62ff", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -5,8 +5,8 @@ use crate::ich::{Fingerprint, NodeIdHashingMode, StableHashingContext};\n use crate::session::config::OptLevel;\n use crate::ty::print::obsolete::DefPathBasedNames;\n use crate::ty::{subst::InternalSubsts, Instance, InstanceDef, SymbolName, TyCtxt};\n-use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::base_n;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;"}, {"sha": "3fef1dd064edb0291fc36f8e58c848c788edb71b", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -21,10 +21,10 @@ use crate::ty::GenericParamDefKind;\n use crate::ty::SubtypePredicate;\n use crate::ty::TypeckTables;\n use crate::ty::{self, AdtKind, DefIdTree, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable};\n-use crate::util::nodemap::{FxHashMap, FxHashSet};\n \n use errors::{pluralize, Applicability, DiagnosticBuilder, Style};\n use rustc::hir::def_id::LOCAL_CRATE;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::{ExpnKind, MultiSpan, Span, DUMMY_SP};"}, {"sha": "f1a04da188ba0ad376d1e924462c04ac374a17ca", "filename": "src/librustc/traits/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -3,8 +3,8 @@ use fmt_macros::{Parser, Piece, Position};\n use crate::hir::def_id::DefId;\n use crate::ty::{self, GenericParamDefKind, TyCtxt};\n use crate::util::common::ErrorReported;\n-use crate::util::nodemap::FxHashMap;\n \n+use rustc_data_structures::fx::FxHashMap;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{MetaItem, NestedMetaItem};"}, {"sha": "0d35ad2a4cdda0184da962fa4128b26b7a112888", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -39,7 +39,7 @@ use crate::ty::subst::{Subst, SubstsRef};\n use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable};\n \n use crate::hir;\n-use crate::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lock;\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_span::symbol::sym;"}, {"sha": "fe6759823082466773cef28a4088bc3bf94ddf6b", "filename": "src/librustc/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -5,7 +5,8 @@ use crate::ich::{self, StableHashingContext};\n use crate::traits;\n use crate::ty::fast_reject::{self, SimplifiedType};\n use crate::ty::{self, TyCtxt, TypeFoldable};\n-use crate::util::nodemap::{DefIdMap, FxHashMap};\n+use crate::util::nodemap::DefIdMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use syntax::ast::Ident;\n "}, {"sha": "995131178284985a972c016b51178825cb234985", "filename": "src/librustc/traits/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Futil.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -7,7 +7,7 @@ use crate::hir::def_id::DefId;\n use crate::ty::outlives::Component;\n use crate::ty::subst::{GenericArg, Subst, SubstsRef};\n use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt};\n-use crate::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n \n use super::{Normalized, Obligation, ObligationCause, PredicateObligation, SelectionContext};\n "}, {"sha": "25db4f0f4ab1e2ede15d5e3da078489bc4bc75ce", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -47,10 +47,10 @@ use crate::ty::{InferConst, ParamConst};\n use crate::ty::{List, TyKind, TyS};\n use crate::util::common::ErrorReported;\n use crate::util::nodemap::{DefIdMap, DefIdSet, ItemLocalMap, ItemLocalSet, NodeMap};\n-use crate::util::nodemap::{FxHashMap, FxHashSet};\n \n use arena::SyncDroplessArena;\n use errors::DiagnosticBuilder;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::profiling::SelfProfilerRef;\n use rustc_data_structures::sharded::ShardedHashMap;\n use rustc_data_structures::stable_hasher::{"}, {"sha": "7004cec8a31cefc90b3eaa6f4d09521a79035558", "filename": "src/librustc/ty/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -34,7 +34,7 @@\n use crate::hir::def_id::DefId;\n use crate::ty::{self, flags::FlagComputation, Binder, Ty, TyCtxt, TypeFlags};\n \n-use crate::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use std::collections::BTreeMap;\n use std::fmt;\n "}, {"sha": "452ae073f1da765dcfc4b3cef0d395fdd4b526bf", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -28,8 +28,9 @@ use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::{Discr, IntTypeExt};\n use crate::ty::walk::TypeWalker;\n use crate::util::captures::Captures;\n-use crate::util::nodemap::{DefIdMap, FxHashMap, NodeMap, NodeSet};\n+use crate::util::nodemap::{DefIdMap, NodeMap, NodeSet};\n use arena::SyncDroplessArena;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_macros::HashStable;\n "}, {"sha": "c166a712d7b75924c1a1744edc92e553ccc708b2", "filename": "src/librustc/util/nodemap.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Futil%2Fnodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc%2Futil%2Fnodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fnodemap.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -4,13 +4,10 @@ use crate::hir::def_id::DefId;\n use crate::hir::{HirId, ItemLocalId};\n use syntax::ast;\n \n-pub use rustc_data_structures::fx::FxHashMap;\n-pub use rustc_data_structures::fx::FxHashSet;\n-\n macro_rules! define_id_collections {\n     ($map_name:ident, $set_name:ident, $key:ty) => {\n-        pub type $map_name<T> = FxHashMap<$key, T>;\n-        pub type $set_name = FxHashSet<$key>;\n+        pub type $map_name<T> = rustc_data_structures::fx::FxHashMap<$key, T>;\n+        pub type $set_name = rustc_data_structures::fx::FxHashSet<$key>;\n     };\n }\n "}, {"sha": "746b76ad1c7d0223fbcea28e08ebe471245a79f7", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -19,10 +19,10 @@ use rustc::ty::layout::{\n     FnAbiExt, HasParamEnv, LayoutError, LayoutOf, PointeeInfo, Size, TyLayout, VariantIdx,\n };\n use rustc::ty::{self, Instance, Ty, TyCtxt};\n-use rustc::util::nodemap::FxHashMap;\n use rustc_codegen_ssa::base::wants_msvc_seh;\n use rustc_data_structures::base_n;\n use rustc_data_structures::const_cstr;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_target::spec::{HasTargetSpec, Target};\n "}, {"sha": "88e692cb11747aeb9d8704282a9713b6cb6bc305", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -33,11 +33,11 @@ use rustc::ty::layout::{\n use rustc::ty::subst::{GenericArgKind, SubstsRef};\n use rustc::ty::Instance;\n use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n-use rustc::util::nodemap::FxHashMap;\n use rustc::{bug, span_bug};\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::fingerprint::Fingerprint;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_fs_util::path_to_c_string;"}, {"sha": "3fea27445a09ec4f17f9d1e4d8c635a3b53eda8e", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -24,9 +24,10 @@ use crate::value::Value;\n use rustc::mir;\n use rustc::session::config::{self, DebugInfo};\n use rustc::ty::{self, Instance, InstanceDef, ParamEnv, Ty};\n-use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet};\n+use rustc::util::nodemap::DefIdMap;\n use rustc_codegen_ssa::debuginfo::type_names;\n use rustc_codegen_ssa::mir::debuginfo::{DebugScope, FunctionDebugContext, VariableKind};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_index::vec::IndexVec;\n "}, {"sha": "44e9067a60a65ef86e645717fef78917e25d1323", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -11,8 +11,9 @@ use rustc::ty::query::Providers;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::Instance;\n use rustc::ty::{SymbolName, TyCtxt};\n-use rustc::util::nodemap::{DefIdMap, FxHashMap};\n+use rustc::util::nodemap::DefIdMap;\n use rustc_data_structures::fingerprint::Fingerprint;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::IndexVec;\n use syntax::expand::allocator::ALLOCATOR_METHODS;\n "}, {"sha": "f901a51ada80504ab2bde5e0fa978cf8a12c7459", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -19,7 +19,7 @@ use rustc::session::config::{\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc::util::common::{print_time_passes_entry, set_time_depth, time_depth};\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::SelfProfilerRef;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "b964fa1c182c955a6ac0b8ca52bf7b9d6103986a", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -40,8 +40,8 @@ use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n use rustc::ty::query::Providers;\n use rustc::ty::{self, Instance, Ty, TyCtxt};\n use rustc::util::common::{print_time_passes_entry, set_time_depth, time, time_depth};\n-use rustc::util::nodemap::FxHashMap;\n use rustc_codegen_utils::{check_for_rustc_errors_attr, symbol_names_test};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::Idx;\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_span::Span;"}, {"sha": "691b94c2f9d485309ff1ef9995b4ce228f069d5c", "filename": "src/librustc_codegen_ssa/traits/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -2,7 +2,7 @@ use super::BackendTypes;\n use rustc::mir::mono::CodegenUnit;\n use rustc::session::Session;\n use rustc::ty::{self, Instance, Ty};\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use std::cell::RefCell;\n use std::sync::Arc;\n "}, {"sha": "90d87e34e48daa71021c81a41e975e7f0b79601f", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -33,7 +33,7 @@ use rustc::ty::{self, layout::VariantIdx, Ty, TyCtxt};\n use rustc::{lint, util};\n use util::nodemap::HirIdSet;\n \n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::Stability;\n use rustc_feature::{deprecated_attributes, AttributeGate, AttributeTemplate, AttributeType};\n "}, {"sha": "7944c88c7cbd8fa63d09ccb7b9ed93184ab5335a", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -5,11 +5,12 @@ use lint::{LateContext, LintArray, LintContext};\n use lint::{LateLintPass, LintPass};\n use rustc::hir;\n use rustc::hir::{is_range_literal, ExprKind, Node};\n+use rustc::lint;\n use rustc::mir::interpret::{sign_extend, truncate};\n use rustc::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n-use rustc::{lint, util::nodemap::FxHashSet};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_index::vec::Idx;\n use rustc_span::source_map;\n use rustc_span::symbol::sym;"}, {"sha": "f82579aba02ad5555e0ab9e9dfa64d12e88a514d", "filename": "src/librustc_metadata/dependency_format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdependency_format.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -59,7 +59,7 @@ use rustc::middle::cstore::{self, DepKind};\n use rustc::middle::dependency_format::{Dependencies, DependencyList, Linkage};\n use rustc::session::config;\n use rustc::ty::TyCtxt;\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_target::spec::PanicStrategy;\n \n crate fn calculate(tcx: TyCtxt<'_>) -> Dependencies {"}, {"sha": "59e769cabb7d47a837870eb101593b58ff9c467e", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -219,8 +219,7 @@ use rustc::middle::cstore::{CrateSource, MetadataLoader};\n use rustc::session::filesearch::{FileDoesntMatch, FileMatches, FileSearch};\n use rustc::session::search_paths::PathKind;\n use rustc::session::{config, CrateDisambiguator, Session};\n-use rustc::util::nodemap::FxHashMap;\n-use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n "}, {"sha": "bdd9eab71186d8bfd4b1d76e2052435aab1d179b", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::middle::cstore::{self, NativeLibrary};\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::spec::abi::Abi;"}, {"sha": "fc7eae1e6c7a182ad5651ca4824d5e4b100db5dd", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -18,8 +18,7 @@ use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_index::vec::Idx;\n \n use rustc::session::config::{self, CrateType};\n-use rustc::util::nodemap::FxHashMap;\n-\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::StableHasher;\n use rustc_data_structures::sync::Lrc;\n use rustc_serialize::{opaque, Encodable, Encoder, SpecializedEncoder};"}, {"sha": "b66b2e4b1f7f548cd98b06730229207c01df6e6e", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -7,7 +7,7 @@ use rustc::mir::traversal;\n use rustc::mir::visit::{MutatingUseContext, NonUseContext, PlaceContext, Visitor};\n use rustc::mir::{self, Body, Local, Location, ReadOnlyBodyAndCache};\n use rustc::ty::{RegionVid, TyCtxt};\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n use std::fmt;"}, {"sha": "c7ef017215e0c3dbbdc48d26df4e1d2a7b0f01fe", "filename": "src/librustc_mir/borrow_check/universal_regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -20,7 +20,7 @@ use rustc::middle::lang_items;\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::DiagnosticBuilder;\n use rustc_index::vec::{Idx, IndexVec};\n use std::iter;"}, {"sha": "6450762d351b11ca7497d3a50519ec7c4976d284", "filename": "src/librustc_mir/dataflow/move_paths/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -1,7 +1,7 @@\n use core::slice::Iter;\n use rustc::mir::*;\n use rustc::ty::{ParamEnv, Ty, TyCtxt};\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::{Enumerated, Idx, IndexVec};\n use rustc_span::Span;\n use smallvec::SmallVec;"}, {"sha": "d0775d10a2c7be245680fb2581a027546096c4ae", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -192,8 +192,8 @@ use rustc::ty::print::obsolete::DefPathBasedNames;\n use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc::ty::{self, GenericParamDefKind, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc::util::common::time;\n-use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet};\n-\n+use rustc::util::nodemap::DefIdMap;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::{par_iter, MTLock, MTRef, ParallelIterator};\n use rustc_index::bit_set::GrowableBitSet;\n "}, {"sha": "d6d174bef89f8b7712fc277861443202c1c5095f", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -106,7 +106,8 @@ use rustc::ty::print::characteristic_def_id_of_type;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n use rustc::util::common::time;\n-use rustc::util::nodemap::{DefIdSet, FxHashMap, FxHashSet};\n+use rustc::util::nodemap::DefIdSet;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::symbol::Symbol;\n \n use crate::monomorphize::collector::InliningMap;"}, {"sha": "860a014c5173c30c386b433c22dcd7f4b9880c47", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -13,7 +13,7 @@ use rustc::hir;\n use rustc::mir::*;\n use rustc::ty::layout::VariantIdx;\n use rustc::ty::{self, TyCtxt};\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_index::bit_set::BitSet;\n use rustc_span::Span;\n use std::fmt;"}, {"sha": "a2f3fcea7569a6d50ca2103bf8083756333b74c6", "filename": "src/librustc_mir/transform/instcombine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -7,7 +7,7 @@ use rustc::mir::{\n     ProjectionElem, Rvalue,\n };\n use rustc::ty::{self, TyCtxt};\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::Idx;\n use std::mem;\n "}, {"sha": "f9db1a21cc87d3c055131d2a47d957500e9f006a", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -13,9 +13,7 @@ use rustc::lint;\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc::middle::privacy;\n use rustc::ty::{self, DefIdTree, TyCtxt};\n-use rustc::util::nodemap::FxHashSet;\n-\n-use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n \n use rustc_span;\n use rustc_span::symbol::sym;"}, {"sha": "6b2c42602ff0ba6bc043771c962f0ebdcdd80b69", "filename": "src/librustc_passes/diagnostic_items.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostic_items.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -9,13 +9,12 @@\n //!\n //! * Compiler internal types like `Ty` and `TyCtxt`\n \n+use rustc::hir;\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n-use rustc::util::nodemap::FxHashMap;\n-\n-use rustc::hir;\n-use rustc::hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n "}, {"sha": "4341ebfc45736d7acbeafd0cdf6579dae625fd00", "filename": "src/librustc_passes/hir_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fhir_stats.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -5,7 +5,7 @@\n use rustc::hir::intravisit as hir_visit;\n use rustc::hir::{self, HirId};\n use rustc::util::common::to_readable_str;\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::Span;\n use syntax::ast::{self, AttrId, NodeId};\n use syntax::visit as ast_visit;"}, {"sha": "1c8733ab44db14932450e8ded2ce749abe4288da", "filename": "src/librustc_passes/reachable.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Freachable.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -18,7 +18,8 @@ use rustc::middle::privacy;\n use rustc::session::config;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt};\n-use rustc::util::nodemap::{FxHashSet, HirIdSet};\n+use rustc::util::nodemap::HirIdSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "7652d5a36ee19292f8142fa64849fba6cc1b196f", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -14,8 +14,7 @@ use rustc::hir::{Arm, Block, Expr, Local, Pat, PatKind, Stmt};\n use rustc::middle::region::*;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n-use rustc::util::nodemap::FxHashSet;\n-\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_index::vec::Idx;\n use rustc_span::source_map;\n use rustc_span::Span;"}, {"sha": "60f26625a2e877052d246fe33362292a4cbe2f57", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -11,7 +11,7 @@ use rustc::middle::stability::{DeprecationEntry, Index};\n use rustc::session::Session;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::Attribute;"}, {"sha": "1d45f1cd9124a605fc2558d9d48f1b82d20039b3", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -8,7 +8,7 @@ use rustc::hir::def::{self, DefKind, NonMacroAttrKind};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::session::Session;\n use rustc::ty::{self, DefIdTree};\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::SourceMap;"}, {"sha": "9b7cd2578f878aa3d9aeb403a5409581a02d9fac", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -19,10 +19,9 @@ use rustc::lint::builtin::BuiltinLintDiagnostics;\n use rustc::lint::builtin::{PUB_USE_OF_PRIVATE_EXTERN_CRATE, UNUSED_IMPORTS};\n use rustc::session::DiagnosticMessageId;\n use rustc::ty;\n-use rustc::util::nodemap::FxHashSet;\n use rustc::{bug, span_bug};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::ptr_key::PtrKey;\n-\n use rustc_span::hygiene::ExpnId;\n use rustc_span::symbol::kw;\n use rustc_span::{MultiSpan, Span};"}, {"sha": "84cb3f7181996fcdeb6b569682ef0b8f9b914544", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -16,8 +16,8 @@ use rustc::hir::def::Namespace::{self, *};\n use rustc::hir::def::{self, CtorKind, DefKind, PartialRes, PerNS};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::hir::TraitCandidate;\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc::{bug, lint, span_bug};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use smallvec::{smallvec, SmallVec};"}, {"sha": "cd94229b0abc5898a695f40d3063a9a06ad0d9c2", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -11,7 +11,7 @@ use rustc::hir::def::{self, CtorKind, DefKind};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::hir::PrimTy;\n use rustc::session::config::nightly_options;\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::kw;\n use rustc_span::Span;"}, {"sha": "708bf538bdbd5a3399dcb5488de691af55c9946b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -20,6 +20,7 @@ pub use rustc::hir::def::{Namespace, PerNS};\n \n use Determinacy::*;\n \n+use errors::{Applicability, DiagnosticBuilder};\n use rustc::hir::def::Namespace::*;\n use rustc::hir::def::{self, CtorKind, CtorOf, DefKind, ExportMap, NonMacroAttrKind, PartialRes};\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n@@ -32,12 +33,12 @@ use rustc::session::Session;\n use rustc::span_bug;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, ResolverOutputs};\n-use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, NodeMap, NodeSet};\n-\n-use rustc_metadata::creader::{CStore, CrateLoader};\n-\n-use errors::{Applicability, DiagnosticBuilder};\n+use rustc::util::nodemap::{DefIdMap, NodeMap, NodeSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n+use rustc_data_structures::ptr_key::PtrKey;\n+use rustc_data_structures::sync::Lrc;\n use rustc_expand::base::SyntaxExtension;\n+use rustc_metadata::creader::{CStore, CrateLoader};\n use rustc_span::hygiene::{ExpnId, ExpnKind, MacroKind, SyntaxContext, Transparency};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym};\n@@ -51,10 +52,6 @@ use syntax::visit::{self, Visitor};\n use syntax::{struct_span_err, unwrap_or};\n \n use log::debug;\n-\n-use rustc_data_structures::fx::FxIndexMap;\n-use rustc_data_structures::ptr_key::PtrKey;\n-use rustc_data_structures::sync::Lrc;\n use std::cell::{Cell, RefCell};\n use std::collections::BTreeSet;\n use std::{cmp, fmt, iter, ptr};"}, {"sha": "96f1e069f9231b218b5ac1cca88605e94f86f7db", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -5,32 +5,31 @@\n //! used between functions, and they operate in a purely top-down\n //! way. Therefore, we break lifetime name resolution into a separate pass.\n \n+use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc::hir::def::{DefKind, Res};\n use rustc::hir::def_id::{CrateNum, DefId, LocalDefId, LOCAL_CRATE};\n+use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n+use rustc::hir::{self, GenericParamKind, LifetimeParamKind};\n use rustc::hir::{GenericArg, GenericParam, LifetimeName, Node, ParamName, QPath};\n-use rustc::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n-\n-use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc::lint;\n+use rustc::middle::resolve_lifetime::*;\n use rustc::session::Session;\n-use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, HirIdMap, HirIdSet};\n+use rustc::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n+use rustc::util::nodemap::{DefIdMap, HirIdMap, HirIdSet};\n+use rustc::{bug, span_bug};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use std::borrow::Cow;\n use std::cell::Cell;\n use std::mem::{replace, take};\n use syntax::ast;\n use syntax::attr;\n-\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n-use rustc::hir::{self, GenericParamKind, LifetimeParamKind};\n+use syntax::{help, span_err, struct_span_err, walk_list};\n \n use log::debug;\n-use rustc::{bug, span_bug};\n-use syntax::{help, span_err, struct_span_err, walk_list};\n \n-use rustc::middle::resolve_lifetime::*;\n use rustc_error_codes::*;\n \n // This counts the no of times a lifetime is used"}, {"sha": "a2ef6ad70f907b1314df0a9dfe33d296838753ea", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -10,8 +10,8 @@ use rustc::hir::def::{self, DefKind, NonMacroAttrKind};\n use rustc::hir::def_id;\n use rustc::middle::stability;\n use rustc::session::Session;\n-use rustc::util::nodemap::FxHashSet;\n use rustc::{lint, span_bug, ty};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_expand::base::SyntaxExtension;\n use rustc_expand::base::{self, Indeterminate, InvocationRes};\n use rustc_expand::compile_declarative_macro;"}, {"sha": "a0bbc2824336ccb1efc71a15b27c276044089001", "filename": "src/librustc_traits/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_traits%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_traits%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fdropck_outlives.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -7,7 +7,7 @@ use rustc::traits::{Normalized, ObligationCause, TraitEngine, TraitEngineExt};\n use rustc::ty::query::Providers;\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span::source_map::{Span, DUMMY_SP};\n \n crate fn provide(p: &mut Providers<'_>) {"}, {"sha": "601a46ad345c450b1ff2d9df554b67b2b8c7541e", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -14,14 +14,14 @@ use crate::middle::resolve_lifetime as rl;\n use crate::namespace::Namespace;\n use crate::require_c_abi_if_c_variadic;\n use crate::util::common::ErrorReported;\n-use crate::util::nodemap::FxHashMap;\n use errors::{Applicability, DiagnosticId};\n use rustc::lint::builtin::AMBIGUOUS_ASSOCIATED_ITEMS;\n use rustc::traits;\n use rustc::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n use rustc::ty::wf::object_region_bounds;\n use rustc::ty::{self, Const, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable};\n use rustc::ty::{GenericParamDef, GenericParamDefKind};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::symbol::sym;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use rustc_target::spec::abi;\n@@ -35,8 +35,6 @@ use std::collections::BTreeSet;\n use std::iter;\n use std::slice;\n \n-use rustc_data_structures::fx::FxHashSet;\n-\n use rustc_error_codes::*;\n \n #[derive(Debug)]"}, {"sha": "743a2c6b543972d10451d1da064e5b53065cc7af", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -15,7 +15,6 @@ use crate::check::FnCtxt;\n use crate::check::Needs;\n use crate::check::TupleArgumentsFlag::DontTupleArguments;\n use crate::util::common::ErrorReported;\n-use crate::util::nodemap::FxHashMap;\n \n use errors::{pluralize, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc::hir;\n@@ -31,6 +30,7 @@ use rustc::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoB\n use rustc::ty::Ty;\n use rustc::ty::TypeFoldable;\n use rustc::ty::{AdtKind, Visibility};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Symbol};"}, {"sha": "63aadd43a094961ab719c4e789064fd549384093", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -4,13 +4,13 @@\n //! types computed here.\n \n use super::FnCtxt;\n-use crate::util::nodemap::FxHashMap;\n use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::DefId;\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::{self, Expr, ExprKind, Pat, PatKind};\n use rustc::middle::region::{self, YieldData};\n use rustc::ty::{self, Ty};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_span::Span;\n \n struct InteriorVisitor<'a, 'tcx> {"}, {"sha": "28c84c5c0d0226dfef4f8e6e749ef87cc89c7a80", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -27,7 +27,7 @@ use rustc::ty::GenericParamDefKind;\n use rustc::ty::{\n     self, ParamEnvAnd, ToPolyTraitRef, ToPredicate, TraitRef, Ty, TyCtxt, TypeFoldable,\n };\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};\n use std::cmp::max;"}, {"sha": "fd92e376f61c14c015f17554e9cd7ac6ad9295d7", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -4,7 +4,6 @@\n use crate::check::FnCtxt;\n use crate::middle::lang_items::FnOnceTraitLangItem;\n use crate::namespace::Namespace;\n-use crate::util::nodemap::FxHashSet;\n use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc::hir::def::{DefKind, Res};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n@@ -14,6 +13,7 @@ use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::traits::Obligation;\n use rustc::ty::print::with_crate_prefix;\n use rustc::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span::{source_map, FileName, Span};\n use syntax::ast;\n use syntax::util::lev_distance;"}, {"sha": "71a7a5dd69b1a1e0c4e8c846982d67479ad05918", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -117,6 +117,7 @@ use rustc::ty::{\n     self, AdtKind, CanonicalUserType, Const, GenericParamDefKind, RegionKind, ToPolyTraitRef,\n     ToPredicate, Ty, TyCtxt, UserType,\n };\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::Idx;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n@@ -144,7 +145,7 @@ use crate::session::config::EntryFnType;\n use crate::session::Session;\n use crate::util::captures::Captures;\n use crate::util::common::{indenter, ErrorReported};\n-use crate::util::nodemap::{DefIdMap, DefIdSet, FxHashMap, FxHashSet, HirIdMap};\n+use crate::util::nodemap::{DefIdMap, DefIdSet, HirIdMap};\n use crate::TypeAndSubsts;\n \n use self::autoderef::Autoderef;"}, {"sha": "8e5e5c39e67dcfec39610bb3f6bf26031875817b", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -1,5 +1,4 @@\n use crate::check::FnCtxt;\n-use crate::util::nodemap::FxHashMap;\n use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::pat_util::EnumerateAndAdjustIterator;\n@@ -9,6 +8,7 @@ use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::traits::Pattern;\n use rustc::ty::subst::GenericArg;\n use rustc::ty::{self, BindingMode, Ty, TypeFoldable};\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::Span;\n use syntax::ast;"}, {"sha": "e9df155c9b75899574cace8838f16181c7b2d154", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -8,7 +8,7 @@ use rustc::middle::lang_items;\n use rustc::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{self, AdtKind, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable};\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n \n use errors::DiagnosticBuilder;\n use rustc_span::symbol::sym;"}, {"sha": "bc39856e14d73f0e63f242c9de7913ededb13a5a", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -30,7 +30,7 @@ use rustc::ty::util::IntTypeExt;\n use rustc::ty::{self, AdtKind, Const, DefIdTree, ToPolyTraitRef, Ty, TyCtxt};\n use rustc::ty::{ReprOptions, ToPredicate};\n use rustc::util::captures::Captures;\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_target::spec::abi;\n \n use rustc_span::symbol::{kw, sym, Symbol};"}, {"sha": "a281c0ae67d24ef1635c883442495b6cb0eea62c", "filename": "src/librustc_typeck/constrained_generic_params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -1,6 +1,6 @@\n use rustc::ty::fold::{TypeFoldable, TypeVisitor};\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span::source_map::Span;\n \n #[derive(Clone, PartialEq, Eq, Hash, Debug)]"}, {"sha": "770aeb6869a8af3ecf11393ea6a95f06fc6aaccc", "filename": "src/librustc_typeck/impl_wf_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fimpl_wf_check.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -14,7 +14,7 @@ use rustc::hir::def_id::DefId;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt, TypeFoldable};\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use std::collections::hash_map::Entry::{Occupied, Vacant};\n \n use rustc_span::Span;"}, {"sha": "a922846856db8375d06f61ed1e1fcd27f010799b", "filename": "src/librustc_typeck/outlives/explicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Foutlives%2Fexplicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Foutlives%2Fexplicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fexplicit.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -1,6 +1,6 @@\n-use crate::util::nodemap::FxHashMap;\n use rustc::hir::def_id::DefId;\n use rustc::ty::{self, OutlivesPredicate, TyCtxt};\n+use rustc_data_structures::fx::FxHashMap;\n \n use super::utils::*;\n "}, {"sha": "b18f89c1a72d15d54390865c1ed6179fa9ee3c79", "filename": "src/librustc_typeck/outlives/implicit_infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::hir::{self, Node};\n use rustc::ty::subst::{GenericArg, GenericArgKind, Subst};\n use rustc::ty::{self, Ty, TyCtxt};\n-use rustc::util::nodemap::FxHashMap;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_span::Span;\n \n use super::explicit::ExplicitPredicatesMap;"}, {"sha": "dec019711a01267521a3995b799333bd8e1d9f05", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir;\n use rustc::traits::auto_trait::{self, AutoTraitResult};\n use rustc::ty::{self, Region, RegionVid, TypeFoldable};\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n \n use std::fmt::Debug;\n "}, {"sha": "49baff065c873e84480bcc90386b1fea35371440", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -11,7 +11,7 @@ use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::DefId;\n use rustc::hir::{self, Mutability};\n use rustc::ty;\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_metadata::creader::LoadedMacro;\n \n use crate::clean::{self, GetDefId, ToSource, TypeKind};"}, {"sha": "fad2bab43b990731c71985fca05b18f5eb9fea7d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -19,7 +19,7 @@ use rustc::middle::stability;\n use rustc::ty::fold::TypeFolder;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, AdtKind, Lift, Ty, TyCtxt};\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "6bb1ef7d1261b281cc99c28c158b2e2e831c781f", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -14,7 +14,7 @@ use rustc::hir::{self, Mutability};\n use rustc::middle::lang_items;\n use rustc::middle::stability;\n use rustc::ty::layout::VariantIdx;\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::DUMMY_SP;"}, {"sha": "d17b3ce0b1bc2b266e360133e96570334fa755f5", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -15,7 +15,7 @@ use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::mir::interpret::{sign_extend, ConstValue, Scalar};\n use rustc::ty::subst::{GenericArgKind, SubstsRef};\n use rustc::ty::{self, DefIdTree, Ty};\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span;\n use rustc_span::symbol::{kw, sym, Symbol};\n use std::mem;"}, {"sha": "8ac9e957d3e71fc7546b9ad0f59edd2d73231664", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -8,7 +8,7 @@ use rustc::session::config::ErrorOutputType;\n use rustc::session::DiagnosticOutput;\n use rustc::session::{self, config};\n use rustc::ty::{Ty, TyCtxt};\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_driver::abort_on_err;\n use rustc_feature::UnstableFeatures;\n use rustc_interface::interface;"}, {"sha": "f84fef2761eca802525fc258f352485439a93064", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -11,7 +11,7 @@ use std::fmt;\n \n use rustc::hir;\n use rustc::hir::def_id::DefId;\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_target::spec::abi::Abi;\n \n use crate::clean::{self, PrimitiveType};"}, {"sha": "c315cefc1b88b3d591db46540ff5ffb5753e4aa9", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -47,8 +47,8 @@ use rustc::hir::def_id::DefId;\n use rustc::hir::{self, Mutability};\n use rustc::middle::privacy::AccessLevels;\n use rustc::middle::stability;\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::flock;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_feature::UnstableFeatures;\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::MacroKind;"}, {"sha": "d9360f24a787cdf5634c9d4c9d2019fed14439cd", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -4,7 +4,7 @@ use crate::core::DocContext;\n use crate::fold::DocFolder;\n \n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span::symbol::sym;\n \n pub const COLLECT_TRAIT_IMPLS: Pass = Pass {"}, {"sha": "707d9a999e5291b938165cb20b38bd332068f72e", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -6,7 +6,7 @@ use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::hir::{self, Node};\n use rustc::middle::privacy::AccessLevel;\n use rustc::ty::TyCtxt;\n-use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::sym;"}, {"sha": "d157a0ca03fd07350077c11af26aa05edfe486e7", "filename": "src/librustdoc/visit_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fvisit_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7901c7f707fd84c4f57401dd13ac0c4fc7b693ee/src%2Flibrustdoc%2Fvisit_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_lib.rs?ref=7901c7f707fd84c4f57401dd13ac0c4fc7b693ee", "patch": "@@ -2,7 +2,7 @@ use rustc::hir::def::{DefKind, Res};\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc::middle::privacy::{AccessLevel, AccessLevels};\n use rustc::ty::{TyCtxt, Visibility};\n-use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_span::symbol::sym;\n \n use crate::clean::{AttributesExt, NestedAttributesExt};"}]}