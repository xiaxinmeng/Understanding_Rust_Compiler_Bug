{"sha": "3aab46b0209adad0fd6f24b5b94b6401b13257b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYWI0NmIwMjA5YWRhZDBmZDZmMjRiNWI5NGI2NDAxYjEzMjU3Yjc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-17T20:15:04Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-17T20:16:15Z"}, "message": "rustc: Mark an obstack fencepost when entering a dynamically-sized frame", "tree": {"sha": "bdb87d47375e81889b5a60159fd1465fd8b6aeca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdb87d47375e81889b5a60159fd1465fd8b6aeca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aab46b0209adad0fd6f24b5b94b6401b13257b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aab46b0209adad0fd6f24b5b94b6401b13257b7", "html_url": "https://github.com/rust-lang/rust/commit/3aab46b0209adad0fd6f24b5b94b6401b13257b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aab46b0209adad0fd6f24b5b94b6401b13257b7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62ac9d0b2e437dd6c469596299ac7eac8ed96918", "url": "https://api.github.com/repos/rust-lang/rust/commits/62ac9d0b2e437dd6c469596299ac7eac8ed96918", "html_url": "https://github.com/rust-lang/rust/commit/62ac9d0b2e437dd6c469596299ac7eac8ed96918"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "84ca18c7b3f5173130143403d57048652a5f91e5", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=3aab46b0209adad0fd6f24b5b94b6401b13257b7", "patch": "@@ -466,6 +466,14 @@ fn alloca(cx: &@block_ctxt, t: TypeRef) -> ValueRef {\n }\n \n fn array_alloca(cx: &@block_ctxt, t: TypeRef, n: ValueRef) -> ValueRef {\n+    alt bcx_fcx(cx).llobstacktoken {\n+        none. {\n+            bcx_fcx(cx).llobstacktoken =\n+                some(cx.build.Call(bcx_ccx(cx).upcalls.dynastack_mark,\n+                     ~[bcx_fcx(cx).lltaskptr]));\n+        }\n+        some(_) { /* no-op */ }\n+    }\n     ret new_builder(cx.fcx.lldynamicallocas).ArrayAlloca(t, n);\n }\n \n@@ -5632,18 +5640,6 @@ fn llderivedtydescs_block_ctxt(fcx: &@fn_ctxt) -> @block_ctxt {\n           fcx: fcx};\n }\n \n-fn lldynamicallocas_block_ctxt(fcx: &@fn_ctxt) -> @block_ctxt {\n-    let cleanups: [cleanup] = ~[];\n-    ret @{llbb: fcx.lldynamicallocas,\n-          build: new_builder(fcx.lldynamicallocas),\n-          parent: parent_none,\n-          kind: SCOPE_BLOCK,\n-          mutable cleanups: cleanups,\n-          sp: fcx.sp,\n-          fcx: fcx};\n-}\n-\n-\n \n fn alloc_ty(cx: &@block_ctxt, t: &ty::t) -> result {\n     let bcx = cx;\n@@ -5798,6 +5794,7 @@ fn new_fn_ctxt_w_id(cx: @local_ctxt, sp: &span, llfndecl: ValueRef,\n           mutable llderivedtydescs_first: llbbs.dt,\n           mutable llderivedtydescs: llbbs.dt,\n           mutable lldynamicallocas: llbbs.da,\n+          mutable llobstacktoken: none::<ValueRef>,\n           mutable llself: none::<val_self_pair>,\n           mutable lliterbody: none::<ValueRef>,\n           mutable iterbodyty: none::<ty::t>,"}, {"sha": "fdb18f819e4de68583572cfdc6a8268586085e94", "filename": "src/comp/middle/trans_common.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_common.rs?ref=3aab46b0209adad0fd6f24b5b94b6401b13257b7", "patch": "@@ -214,6 +214,10 @@ type fn_ctxt = {\n     // alloca'd by code in llallocas?\n     mutable lldynamicallocas: BasicBlockRef,\n \n+    // The token used to clear the dynamic allocas at the end of this frame.\n+    // Will be |none| if there are no dynamic allocas.\n+    mutable llobstacktoken: option::t<ValueRef>,\n+\n     // The 'self' object currently in use in this function, if there\n     // is one.\n     mutable llself: option::t<val_self_pair>,"}, {"sha": "9300ec49073048ae1e9b48d561b5c15f50030084", "filename": "src/rt/rust_obstack.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Frt%2Frust_obstack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Frt%2Frust_obstack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_obstack.cpp?ref=3aab46b0209adad0fd6f24b5b94b6401b13257b7", "patch": "@@ -58,6 +58,14 @@ rust_obstack::alloc_new(size_t len) {\n     return chunk->alloc(len);\n }\n \n+rust_obstack::~rust_obstack() {\n+    while (chunk) {\n+        rust_obstack_chunk *prev = chunk->prev;\n+        task->free(chunk);\n+        chunk = prev;\n+    }\n+}\n+\n void *\n rust_obstack::alloc(size_t len) {\n     if (!chunk)"}, {"sha": "595be6fa3a56c871fbcd8561cb47fa14528ed223", "filename": "src/rt/rust_obstack.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Frt%2Frust_obstack.h", "raw_url": "https://github.com/rust-lang/rust/raw/3aab46b0209adad0fd6f24b5b94b6401b13257b7/src%2Frt%2Frust_obstack.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_obstack.h?ref=3aab46b0209adad0fd6f24b5b94b6401b13257b7", "patch": "@@ -15,6 +15,7 @@ class rust_obstack {\n \n public:\n     rust_obstack(rust_task *in_task) : chunk(NULL), task(in_task) {}\n+    ~rust_obstack();\n \n     void *alloc(size_t len);\n     void free(void *ptr);"}]}