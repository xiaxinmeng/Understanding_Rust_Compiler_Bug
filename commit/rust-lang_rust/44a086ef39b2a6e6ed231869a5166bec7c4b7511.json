{"sha": "44a086ef39b2a6e6ed231869a5166bec7c4b7511", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YTA4NmVmMzliMmE2ZTZlZDIzMTg2OWE1MTY2YmVjN2M0Yjc1MTE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-20T01:16:55Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-23T02:50:18Z"}, "message": "Review comment", "tree": {"sha": "f07061e57d793a7c1d7bb373ee36b87a85fae6bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f07061e57d793a7c1d7bb373ee36b87a85fae6bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a086ef39b2a6e6ed231869a5166bec7c4b7511", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a086ef39b2a6e6ed231869a5166bec7c4b7511", "html_url": "https://github.com/rust-lang/rust/commit/44a086ef39b2a6e6ed231869a5166bec7c4b7511", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a086ef39b2a6e6ed231869a5166bec7c4b7511/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81b876b6a3e3e489fdad8514f69b67264ab1d338", "url": "https://api.github.com/repos/rust-lang/rust/commits/81b876b6a3e3e489fdad8514f69b67264ab1d338", "html_url": "https://github.com/rust-lang/rust/commit/81b876b6a3e3e489fdad8514f69b67264ab1d338"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "d5b64eaaef549d134ce6617aa5fe6fd8856b0c04", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -3704,8 +3704,8 @@ impl<'a> Parser<'a> {\n                     Applicability::MaybeIncorrect,\n                 );\n             } else {\n-                err.note(\"type ascription is a nightly only feature that lets \\\n-                            you annotate expressions with a type: `<expr>: <type>`\");\n+                err.note(\"type ascription is a nightly-only feature that lets \\\n+                          you annotate an expression with a type: `<expr>: <type>`\");\n                 err.span_note(\n                     lhs_span,\n                     \"this expression is annotated with type ascription...\","}, {"sha": "29a264ba1628db70ba641745ac6df5f1e888d7a2", "filename": "src/test/ui/error-codes/E0423.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -4,7 +4,7 @@ error: expected type, found `1`\n LL |     if let S { x: _x, y: 2 } = S { x: 1, y: 2 } { println!(\"Ok\"); }\n    |                                       ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/E0423.rs:12:36\n    |\n@@ -29,7 +29,7 @@ error: expected type, found `0`\n LL |     for _ in std::ops::Range { start: 0, end: 10 } {}\n    |                                       ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/E0423.rs:21:32\n    |"}, {"sha": "5d40909f097435c68d691ff48f0c2158026944cd", "filename": "src/test/ui/issues/issue-22644.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fissues%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fissues%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22644.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -89,7 +89,7 @@ error: expected type, found `4`\n LL |     println!(\"{}\", a: &mut 4);\n    |                            ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/issue-22644.rs:34:20\n    |"}, {"sha": "157797054260819a6d9a41aa17bbbefdd9b1e655", "filename": "src/test/ui/issues/issue-34255-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fissues%2Fissue-34255-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fissues%2Fissue-34255-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34255-1.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -4,7 +4,7 @@ error: expected type, found `42`\n LL |     Test::Drill(field: 42);\n    |                        ^^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/issue-34255-1.rs:8:17\n    |"}, {"sha": "850e3563cab285205a5ef44fba9c3e1ceb5701c0", "filename": "src/test/ui/lifetime_starts_expressions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Flifetime_starts_expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Flifetime_starts_expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime_starts_expressions.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -14,7 +14,7 @@ error: expected type, found keyword `loop`\n LL |     loop { break 'label: loop { break 'label 42; }; }\n    |                          ^^^^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/lifetime_starts_expressions.rs:6:12\n    |"}, {"sha": "9056fac4226916ba00192106be9d1a4fb6a34fa4", "filename": "src/test/ui/parser/struct-literal-in-for.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-for.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-for.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-for.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -4,7 +4,7 @@ error: expected type, found `3`\n LL |         x: 3\n    |            ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/struct-literal-in-for.rs:13:9\n    |"}, {"sha": "558f5a15cc5b5106345252d1f11c474eb0734985", "filename": "src/test/ui/parser/struct-literal-in-if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-if.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -4,7 +4,7 @@ error: expected type, found `3`\n LL |         x: 3\n    |            ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/struct-literal-in-if.rs:13:9\n    |"}, {"sha": "ae6e1d4577c3b392a5c81ad6f2fb9dd4c0503d09", "filename": "src/test/ui/parser/struct-literal-in-while.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-while.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -4,7 +4,7 @@ error: expected type, found `3`\n LL |         x: 3\n    |            ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/struct-literal-in-while.rs:13:9\n    |"}, {"sha": "6dbf7eb1b10f78bced9e731fb64c2ee6b0fb58ab", "filename": "src/test/ui/parser/struct-literal-restrictions-in-lamda.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-restrictions-in-lamda.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-restrictions-in-lamda.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-restrictions-in-lamda.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -4,7 +4,7 @@ error: expected type, found `3`\n LL |         x: 3\n    |            ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/struct-literal-restrictions-in-lamda.rs:13:9\n    |"}, {"sha": "c80056e44879584b3605709ddfdf7654b31e3f60", "filename": "src/test/ui/type/type-ascription-instead-of-statement-end.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-instead-of-statement-end.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44a086ef39b2a6e6ed231869a5166bec7c4b7511/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-instead-of-statement-end.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-instead-of-statement-end.stderr?ref=44a086ef39b2a6e6ed231869a5166bec7c4b7511", "patch": "@@ -12,7 +12,7 @@ error: expected type, found `0`\n LL |     println!(\"test\"): 0;\n    |                       ^ expecting a type here because of type ascription\n    |\n-   = note: type ascription is a nightly only feature that lets you annotate expressions with a type: `<expr>: <type>`\n+   = note: type ascription is a nightly-only feature that lets you annotate an expression with a type: `<expr>: <type>`\n note: this expression is annotated with type ascription...\n   --> $DIR/type-ascription-instead-of-statement-end.rs:9:5\n    |"}]}