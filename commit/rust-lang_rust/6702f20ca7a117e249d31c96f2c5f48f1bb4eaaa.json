{"sha": "6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa", "node_id": "C_kwDOAAsO6NoAKDY3MDJmMjBjYTdhMTE3ZTI0OWQzMWM5NmYyYzVmNDhmMWJiNGVhYWE", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2023-01-14T03:04:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-14T03:04:31Z"}, "message": "Rollup merge of #104965 - zacklukem:p-option-as_ref-docs, r=scottmcm\n\nreword Option::as_ref and Option::map examples\n\nThe description for the examples of `Option::as_ref` and `Option::map` imply that the example is only doing type conversion, when it is actually finding the length of a string.\n\nChanges the wording to imply that some operation is being run on the value contained in the `Option`\n\ncloses #104476", "tree": {"sha": "6fc8607df8bd4dca89260ec9a914008411db75be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fc8607df8bd4dca89260ec9a914008411db75be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjwhu/CRBK7hj4Ov3rIwAA73QIACzry6aK9ez8GmOIDOz4IfIW\ndJJguAtVJ9HE7tlgS3tQNqQ0Ugaq3ocrUpTjdg1ap8e4okpsZJ+dKDVUEFMO9jMZ\np2DR80x4w7Mgo8m4bL2ziRhqiknyCCPgt0GTK0bM7CZ3Qwq0P5+f/6PqoyFgK8Yl\np+il8j0/tD5y3CIoY93rrVssFulDD2mmIDcLC6aCqSFFRufOa8cotc4wh2WKnous\nYKOavwttKO0YLwTyII0+e03D7tox7h2gzDn7c5s7IcU1Krsem6r3dXNsa3wim8KZ\nifTz8+A+JBgCXWIO74IMuVx04fuEo3QgEfOcdKsfOU34bF15quwcP3+/yTIcGkU=\n=DuKz\n-----END PGP SIGNATURE-----\n", "payload": "tree 6fc8607df8bd4dca89260ec9a914008411db75be\nparent a11eb4f267ddfe4f00cb40bf94aef508c11e0862\nparent 123e2038d4cd6b29ff3d30cf766e94b67efcb637\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1673665471 +0900\ncommitter GitHub <noreply@github.com> 1673665471 +0900\n\nRollup merge of #104965 - zacklukem:p-option-as_ref-docs, r=scottmcm\n\nreword Option::as_ref and Option::map examples\n\nThe description for the examples of `Option::as_ref` and `Option::map` imply that the example is only doing type conversion, when it is actually finding the length of a string.\n\nChanges the wording to imply that some operation is being run on the value contained in the `Option`\n\ncloses #104476\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa", "html_url": "https://github.com/rust-lang/rust/commit/6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a11eb4f267ddfe4f00cb40bf94aef508c11e0862", "url": "https://api.github.com/repos/rust-lang/rust/commits/a11eb4f267ddfe4f00cb40bf94aef508c11e0862", "html_url": "https://github.com/rust-lang/rust/commit/a11eb4f267ddfe4f00cb40bf94aef508c11e0862"}, {"sha": "123e2038d4cd6b29ff3d30cf766e94b67efcb637", "url": "https://api.github.com/repos/rust-lang/rust/commits/123e2038d4cd6b29ff3d30cf766e94b67efcb637", "html_url": "https://github.com/rust-lang/rust/commit/123e2038d4cd6b29ff3d30cf766e94b67efcb637"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "7cc00e3f8d1b7205b3e470b8302d52bcc8ddaba4", "filename": "library/core/src/option.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=6702f20ca7a117e249d31c96f2c5f48f1bb4eaaa", "patch": "@@ -652,13 +652,14 @@ impl<T> Option<T> {\n     ///\n     /// # Examples\n     ///\n-    /// Converts an <code>Option<[String]></code> into an <code>Option<[usize]></code>, preserving\n-    /// the original. The [`map`] method takes the `self` argument by value, consuming the original,\n-    /// so this technique uses `as_ref` to first take an `Option` to a reference\n-    /// to the value inside the original.\n+    /// Calculates the length of an <code>Option<[String]></code> as an <code>Option<[usize]></code>\n+    /// without moving the [`String`]. The [`map`] method takes the `self` argument by value,\n+    /// consuming the original, so this technique uses `as_ref` to first take an `Option` to a\n+    /// reference to the value inside the original.\n     ///\n     /// [`map`]: Option::map\n     /// [String]: ../../std/string/struct.String.html \"String\"\n+    /// [`String`]: ../../std/string/struct.String.html \"String\"\n     ///\n     /// ```\n     /// let text: Option<String> = Some(\"Hello, world!\".to_string());\n@@ -946,8 +947,8 @@ impl<T> Option<T> {\n     ///\n     /// # Examples\n     ///\n-    /// Converts an <code>Option<[String]></code> into an <code>Option<[usize]></code>, consuming\n-    /// the original:\n+    /// Calculates the length of an <code>Option<[String]></code> as an\n+    /// <code>Option<[usize]></code>, consuming the original:\n     ///\n     /// [String]: ../../std/string/struct.String.html \"String\"\n     /// ```"}]}