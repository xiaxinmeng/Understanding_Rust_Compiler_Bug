{"sha": "8614cc975c13a79d9e4c77218433acbfc83c40c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MTRjYzk3NWMxM2E3OWQ5ZTRjNzcyMTg0MzNhY2JmYzgzYzQwYzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-01T06:53:57Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-01T17:45:30Z"}, "message": "Remove remaining unused eval methods. Issue #604", "tree": {"sha": "b9ef9435985c547184e6d2c12c68dd6cb577c5e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9ef9435985c547184e6d2c12c68dd6cb577c5e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8614cc975c13a79d9e4c77218433acbfc83c40c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8614cc975c13a79d9e4c77218433acbfc83c40c3", "html_url": "https://github.com/rust-lang/rust/commit/8614cc975c13a79d9e4c77218433acbfc83c40c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8614cc975c13a79d9e4c77218433acbfc83c40c3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91b87b31e5b521f77f4f9c4c028d2bb056230ad0", "url": "https://api.github.com/repos/rust-lang/rust/commits/91b87b31e5b521f77f4f9c4c028d2bb056230ad0", "html_url": "https://github.com/rust-lang/rust/commit/91b87b31e5b521f77f4f9c4c028d2bb056230ad0"}], "stats": {"total": 46, "additions": 0, "deletions": 46}, "files": [{"sha": "7e6ffc65d968516757f331cb8181fc1530f6ef08", "filename": "src/comp/front/eval.rs", "status": "modified", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8614cc975c13a79d9e4c77218433acbfc83c40c3/src%2Fcomp%2Ffront%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8614cc975c13a79d9e4c77218433acbfc83c40c3/src%2Fcomp%2Ffront%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Feval.rs?ref=8614cc975c13a79d9e4c77218433acbfc83c40c3", "patch": "@@ -18,9 +18,6 @@ import util::common::span;\n import util::common::new_str_hash;\n \n \n-// Simple dynamic-typed value type for eval_expr.\n-tag val { val_bool(bool); val_int(int); val_str(str); }\n-\n tag eval_mode { mode_depend; mode_parse; }\n \n type ctx =\n@@ -32,49 +29,6 @@ type ctx =\n          mutable int next_id,\n          ast::crate_cfg cfg);\n \n-fn val_is_bool(val v) -> bool {\n-    alt (v) { case (val_bool(_)) { true } case (_) { false } }\n-}\n-\n-fn val_is_int(val v) -> bool {\n-    alt (v) { case (val_int(_)) { true } case (_) { false } }\n-}\n-\n-fn val_is_str(val v) -> bool {\n-    alt (v) { case (val_str(_)) { true } case (_) { false } }\n-}\n-\n-fn val_as_bool(val v) -> bool {\n-    alt (v) { case (val_bool(?b)) { b } case (_) { fail } }\n-}\n-\n-fn val_as_int(val v) -> int {\n-    alt (v) { case (val_int(?i)) { i } case (_) { fail } }\n-}\n-\n-fn val_as_str(val v) -> str {\n-    alt (v) { case (val_str(?s)) { s } case (_) { fail } }\n-}\n-\n-fn eval_lit(ctx cx, span sp, @ast::lit lit) -> val {\n-    alt (lit.node) {\n-        case (ast::lit_bool(?b)) { val_bool(b) }\n-        case (ast::lit_int(?i)) { val_int(i) }\n-        case (ast::lit_str(?s, _)) { val_str(s) }\n-        case (_) { cx.sess.span_fatal(sp, \"evaluating unsupported literal\") }\n-    }\n-}\n-\n-fn val_eq(session::session sess, span sp, val av, val bv) -> bool {\n-    if (val_is_bool(av) && val_is_bool(bv)) {\n-        val_as_bool(av) == val_as_bool(bv)\n-    } else if (val_is_int(av) && val_is_int(bv)) {\n-        val_as_int(av) == val_as_int(bv)\n-    } else if (val_is_str(av) && val_is_str(bv)) {\n-        str::eq(val_as_str(av), val_as_str(bv))\n-    } else { sess.span_fatal(sp, \"bad types in comparison\") }\n-}\n-\n fn eval_crate_directives(ctx cx, vec[@ast::crate_directive] cdirs,\n                          str prefix, &mutable vec[@ast::view_item] view_items,\n                          &mutable vec[@ast::item] items) {"}]}