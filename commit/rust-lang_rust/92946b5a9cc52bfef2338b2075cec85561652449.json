{"sha": "92946b5a9cc52bfef2338b2075cec85561652449", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyOTQ2YjVhOWNjNTJiZmVmMjMzOGIyMDc1Y2VjODU1NjE2NTI0NDk=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-01T23:28:53Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:23:32Z"}, "message": "Add a test for thread locals.", "tree": {"sha": "95bb0103aabf683ded3cb795583b38ec5410bd4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95bb0103aabf683ded3cb795583b38ec5410bd4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92946b5a9cc52bfef2338b2075cec85561652449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92946b5a9cc52bfef2338b2075cec85561652449", "html_url": "https://github.com/rust-lang/rust/commit/92946b5a9cc52bfef2338b2075cec85561652449", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92946b5a9cc52bfef2338b2075cec85561652449/comments", "author": null, "committer": null, "parents": [{"sha": "8dd8f199cab87584387ff1dbd74430e908e1f1e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dd8f199cab87584387ff1dbd74430e908e1f1e2", "html_url": "https://github.com/rust-lang/rust/commit/8dd8f199cab87584387ff1dbd74430e908e1f1e2"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "d0d25ba7f70cb7aa2baee935481e5f4d3bff8c8d", "filename": "tests/run-pass/concurrency/thread_locals.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/92946b5a9cc52bfef2338b2075cec85561652449/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92946b5a9cc52bfef2338b2075cec85561652449/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fthread_locals.rs?ref=92946b5a9cc52bfef2338b2075cec85561652449", "patch": "@@ -0,0 +1,48 @@\n+#![feature(thread_local)]\n+\n+use std::thread;\n+\n+#[thread_local]\n+static mut A: u8 = 0;\n+#[thread_local]\n+static mut B: u8 = 0;\n+static mut C: u8 = 0;\n+\n+unsafe fn get_a_ref() -> *mut u8 {\n+    &mut A\n+}\n+\n+fn main() {\n+\n+    unsafe {\n+        let x = get_a_ref();\n+        *x = 5;\n+        assert_eq!(A, 5);\n+        B = 15;\n+        C = 25;\n+    }\n+    \n+    thread::spawn(|| {\n+        unsafe {\n+            assert_eq!(A, 0);\n+            assert_eq!(B, 0);\n+            assert_eq!(C, 25);\n+            B = 14;\n+            C = 24;\n+            let y = get_a_ref();\n+            assert_eq!(*y, 0);\n+            *y = 4;\n+            assert_eq!(A, 4);\n+            assert_eq!(*get_a_ref(), 4);\n+            \n+        }\n+    }).join().unwrap();\n+\n+    unsafe {\n+        assert_eq!(*get_a_ref(), 5);\n+        assert_eq!(A, 5);\n+        assert_eq!(B, 15);\n+        assert_eq!(C, 24);\n+    }\n+    \n+}\n\\ No newline at end of file"}]}