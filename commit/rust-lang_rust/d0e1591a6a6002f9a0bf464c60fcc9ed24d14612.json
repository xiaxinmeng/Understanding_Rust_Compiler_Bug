{"sha": "d0e1591a6a6002f9a0bf464c60fcc9ed24d14612", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZTE1OTFhNmE2MDAyZjlhMGJmNDY0YzYwZmNjOWVkMjRkMTQ2MTI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-15T02:13:17Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-15T02:32:41Z"}, "message": "Comments only: annotate FIXMEs in core::run", "tree": {"sha": "c4bc0789cc963402172e197161582fba5b63bc51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4bc0789cc963402172e197161582fba5b63bc51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0e1591a6a6002f9a0bf464c60fcc9ed24d14612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0e1591a6a6002f9a0bf464c60fcc9ed24d14612", "html_url": "https://github.com/rust-lang/rust/commit/d0e1591a6a6002f9a0bf464c60fcc9ed24d14612", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0e1591a6a6002f9a0bf464c60fcc9ed24d14612/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70dde68cfbf1a549fdcd0a9d60c1e90f3b1f2a22", "url": "https://api.github.com/repos/rust-lang/rust/commits/70dde68cfbf1a549fdcd0a9d60c1e90f3b1f2a22", "html_url": "https://github.com/rust-lang/rust/commit/70dde68cfbf1a549fdcd0a9d60c1e90f3b1f2a22"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d8905730dc2d71411a16708482b7f589c59ad66f", "filename": "src/libcore/run.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0e1591a6a6002f9a0bf464c60fcc9ed24d14612/src%2Flibcore%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0e1591a6a6002f9a0bf464c60fcc9ed24d14612/src%2Flibcore%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frun.rs?ref=d0e1591a6a6002f9a0bf464c60fcc9ed24d14612", "patch": "@@ -287,7 +287,7 @@ fn program_output(prog: str, args: [str]) ->\n     // Spawn two entire schedulers to read both stdout and sterr\n     // in parallel so we don't deadlock while blocking on one\n     // or the other. FIXME: Surely there's a much more clever way\n-    // to do this.\n+    // to do this. (#2625)\n     let p = comm::port();\n     let ch = comm::chan(p);\n     task::spawn_sched(task::single_threaded) {||\n@@ -387,7 +387,7 @@ mod tests {\n     import io::writer_util;\n \n     // Regression test for memory leaks\n-    #[ignore(cfg(windows))] // FIXME\n+    #[ignore(cfg(windows))] // FIXME (#2626)\n     fn test_leaks() {\n         run::run_program(\"echo\", []);\n         run::start_program(\"echo\", []);"}]}