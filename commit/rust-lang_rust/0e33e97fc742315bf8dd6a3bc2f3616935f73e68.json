{"sha": "0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "node_id": "C_kwDOAAsO6NoAKDBlMzNlOTdmYzc0MjMxNWJmOGRkNmEzYmMyZjM2MTY5MzVmNzNlNjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-02T21:39:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-02T21:39:05Z"}, "message": "Rollup merge of #97640 - TaKO8Ki:fix-wrong-suggestion-for-adding-where-clauses, r=lcnr\n\nFix wrong suggestion for adding where clauses\n\ncloses #97576", "tree": {"sha": "ae3766f09b503d1e9e6169bc542b7fefcc8bc752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae3766f09b503d1e9e6169bc542b7fefcc8bc752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimS35CRBK7hj4Ov3rIwAA67MIAFO+7puTIA98pvfPOV3Aqt53\nFJwX5xLHrHhPBOhkUzKGgLdSLRR1oJ88HrgoejEKb70ekYEgFmm8pwT9Iez3iHYq\nFSBuw6pofhBYpXUjBRfN9xIcf9SFFdCB2QNIEk2JBtxtIMEP05uOzrkefWSg2B5d\nuDzrw9bK8GoPyfut0R+EO9PadbjC6RSfwGbtRVKEfxSEDnXb7LW8z5Tpimnj8OAZ\nsfcyyJXqIe9KKcWPbRVWU2BTbEUL0PywA30FmdYPzRfhkoKYJtupn2uxDRbfnZ0a\nQBAwXcxCiIeELw9ntHgSQKsFoReu1eXVhr5phq+Clxii9KIh5sYClr6ALYOctOA=\n=y3YN\n-----END PGP SIGNATURE-----\n", "payload": "tree ae3766f09b503d1e9e6169bc542b7fefcc8bc752\nparent 992ca9b601c7ebc895c1fe3698077fafaa946548\nparent 28988902a2d1410ff2f8f13bb146420a128c5754\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1654205945 +0200\ncommitter GitHub <noreply@github.com> 1654205945 +0200\n\nRollup merge of #97640 - TaKO8Ki:fix-wrong-suggestion-for-adding-where-clauses, r=lcnr\n\nFix wrong suggestion for adding where clauses\n\ncloses #97576\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "html_url": "https://github.com/rust-lang/rust/commit/0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e33e97fc742315bf8dd6a3bc2f3616935f73e68/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "992ca9b601c7ebc895c1fe3698077fafaa946548", "url": "https://api.github.com/repos/rust-lang/rust/commits/992ca9b601c7ebc895c1fe3698077fafaa946548", "html_url": "https://github.com/rust-lang/rust/commit/992ca9b601c7ebc895c1fe3698077fafaa946548"}, {"sha": "28988902a2d1410ff2f8f13bb146420a128c5754", "url": "https://api.github.com/repos/rust-lang/rust/commits/28988902a2d1410ff2f8f13bb146420a128c5754", "html_url": "https://github.com/rust-lang/rust/commit/28988902a2d1410ff2f8f13bb146420a128c5754"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "d0f20022bfbad6cacd7603e721c16ffe85debd2e", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0e33e97fc742315bf8dd6a3bc2f3616935f73e68/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e33e97fc742315bf8dd6a3bc2f3616935f73e68/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "patch": "@@ -21,7 +21,9 @@ use rustc_hir::lang_items::LangItem;\n use rustc_hir::{AsyncGeneratorKind, GeneratorKind, Node};\n use rustc_middle::hir::map;\n use rustc_middle::ty::{\n-    self, suggest_arbitrary_trait_bound, suggest_constraining_type_param, AdtKind, DefIdTree,\n+    self,\n+    subst::{GenericArgKind, SubstsRef},\n+    suggest_arbitrary_trait_bound, suggest_constraining_type_param, AdtKind, DefIdTree,\n     GeneratorDiagnosticData, GeneratorInteriorTypeCause, Infer, InferTy, ToPredicate, Ty, TyCtxt,\n     TypeFoldable,\n };\n@@ -458,6 +460,16 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             _ => (false, None),\n         };\n \n+        let generic_args_have_impl_trait = |args: SubstsRef<'tcx>| -> bool {\n+            args.iter().any(|arg| match arg.unpack() {\n+                GenericArgKind::Type(ty) => match ty.kind() {\n+                    ty::Param(param) => param.name.as_str().starts_with(\"impl\"),\n+                    _ => false,\n+                },\n+                _ => false,\n+            })\n+        };\n+\n         // FIXME: Add check for trait bound that is already present, particularly `?Sized` so we\n         //        don't suggest `T: Sized + ?Sized`.\n         let mut hir_id = body_id;\n@@ -588,7 +600,9 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                         | hir::ItemKind::TraitAlias(generics, _)\n                         | hir::ItemKind::OpaqueTy(hir::OpaqueTy { generics, .. }),\n                     ..\n-                }) if !param_ty => {\n+                }) if !param_ty\n+                    && !generic_args_have_impl_trait(trait_pred.skip_binder().trait_ref.substs) =>\n+                {\n                     // Missing generic type parameter bound.\n                     let param_name = self_ty.to_string();\n                     let constraint = trait_pred.print_modifiers_and_trait_path().to_string();"}, {"sha": "fdc85e9fa89567597824afc1fd3504360e1276a5", "filename": "src/test/ui/traits/issue-97576.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0e33e97fc742315bf8dd6a3bc2f3616935f73e68/src%2Ftest%2Fui%2Ftraits%2Fissue-97576.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e33e97fc742315bf8dd6a3bc2f3616935f73e68/src%2Ftest%2Fui%2Ftraits%2Fissue-97576.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-97576.rs?ref=0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "patch": "@@ -0,0 +1,13 @@\n+struct Foo {\n+    bar: String,\n+}\n+\n+impl Foo {\n+    pub fn new(bar: impl ToString) -> Self {\n+        Self {\n+            bar: bar.into(), //~ ERROR the trait bound `String: From<impl ToString>` is not satisfied\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "bdee073d6e39a06c82e3db282f6108dbaaf954b9", "filename": "src/test/ui/traits/issue-97576.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0e33e97fc742315bf8dd6a3bc2f3616935f73e68/src%2Ftest%2Fui%2Ftraits%2Fissue-97576.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e33e97fc742315bf8dd6a3bc2f3616935f73e68/src%2Ftest%2Fui%2Ftraits%2Fissue-97576.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-97576.stderr?ref=0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "patch": "@@ -0,0 +1,11 @@\n+error[E0277]: the trait bound `String: From<impl ToString>` is not satisfied\n+  --> $DIR/issue-97576.rs:8:22\n+   |\n+LL |             bar: bar.into(),\n+   |                      ^^^^ the trait `From<impl ToString>` is not implemented for `String`\n+   |\n+   = note: required because of the requirements on the impl of `Into<String>` for `impl ToString`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}