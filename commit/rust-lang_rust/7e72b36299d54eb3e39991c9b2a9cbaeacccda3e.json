{"sha": "7e72b36299d54eb3e39991c9b2a9cbaeacccda3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNzJiMzYyOTlkNTRlYjNlMzk5OTFjOWIyYTljYmFlYWNjY2RhM2U=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-26T22:16:48Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-26T22:16:48Z"}, "message": "Move local Arena to Queries.", "tree": {"sha": "0e1586bf1031672779746133ed9db1f2d0056b2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e1586bf1031672779746133ed9db1f2d0056b2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e", "html_url": "https://github.com/rust-lang/rust/commit/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b71e9a9df06aebe89c162138e03577e18e09d2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b71e9a9df06aebe89c162138e03577e18e09d2a", "html_url": "https://github.com/rust-lang/rust/commit/7b71e9a9df06aebe89c162138e03577e18e09d2a"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "91afa0153c8b3d1ba86095ef8667725f0c7a89a0", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=7e72b36299d54eb3e39991c9b2a9cbaeacccda3e", "patch": "@@ -995,7 +995,7 @@ impl<'tcx> Deref for TyCtxt<'tcx> {\n }\n \n pub struct GlobalCtxt<'tcx> {\n-    pub arena: WorkerLocal<Arena<'tcx>>,\n+    pub arena: &'tcx WorkerLocal<Arena<'tcx>>,\n \n     interners: CtxtInterners<'tcx>,\n \n@@ -1170,6 +1170,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         local_providers: ty::query::Providers<'tcx>,\n         extern_providers: ty::query::Providers<'tcx>,\n         arenas: &'tcx AllArenas,\n+        local_arena: &'tcx WorkerLocal<Arena<'tcx>>,\n         resolutions: ty::ResolverOutputs,\n         hir: hir_map::Map<'tcx>,\n         on_disk_query_result_cache: query::OnDiskCache<'tcx>,\n@@ -1225,7 +1226,7 @@ impl<'tcx> TyCtxt<'tcx> {\n             sess: s,\n             lint_store,\n             cstore,\n-            arena: WorkerLocal::new(|_| Arena::default()),\n+            arena: local_arena,\n             interners,\n             dep_graph,\n             prof: s.prof.clone(),"}, {"sha": "963663e7d03904d2b56e6cfcc2740e14361a4a28", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=7e72b36299d54eb3e39991c9b2a9cbaeacccda3e", "patch": "@@ -3,6 +3,7 @@ use crate::util;\n use crate::proc_macro_decls;\n \n use log::{info, warn, log_enabled};\n+use rustc::arena::Arena;\n use rustc::dep_graph::DepGraph;\n use rustc::hir;\n use rustc::hir::lowering::lower_crate;\n@@ -22,7 +23,7 @@ use rustc_codegen_ssa::back::link::emit_metadata;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc_codegen_utils::link::filename_for_metadata;\n use rustc_data_structures::{box_region_allow_access, declare_box_region_type, parallel};\n-use rustc_data_structures::sync::{Lrc, Once, ParallelIterator, par_iter};\n+use rustc_data_structures::sync::{Lrc, Once, ParallelIterator, par_iter, WorkerLocal};\n use rustc_errors::PResult;\n use rustc_incremental;\n use rustc_metadata::cstore;\n@@ -764,6 +765,7 @@ pub fn create_global_ctxt<'gcx>(\n     crate_name: &str,\n     global_ctxt: &'gcx Once<GlobalCtxt<'gcx>>,\n     arenas: &'gcx Once<AllArenas>,\n+    local_arena: &'gcx WorkerLocal<Arena<'gcx>>,\n ) -> BoxedGlobalCtxt<'gcx> {\n     let sess = &compiler.session();\n     let defs = mem::take(&mut resolver_outputs.definitions);\n@@ -798,6 +800,7 @@ pub fn create_global_ctxt<'gcx>(\n         local_providers,\n         extern_providers,\n         &arenas,\n+        local_arena,\n         resolver_outputs,\n         hir_map,\n         query_result_on_disk_cache,"}, {"sha": "4e9e476c64b99ee148768b3c1eafbb5cbe95fe38", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e72b36299d54eb3e39991c9b2a9cbaeacccda3e/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=7e72b36299d54eb3e39991c9b2a9cbaeacccda3e", "patch": "@@ -2,10 +2,11 @@ use crate::interface::{Compiler, Result};\n use crate::passes::{self, BoxedResolver, BoxedGlobalCtxt};\n \n use rustc_incremental::DepGraphFuture;\n-use rustc_data_structures::sync::{Lrc, Once};\n+use rustc_data_structures::sync::{Lrc, Once, WorkerLocal};\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc::session::config::{OutputFilenames, OutputType};\n use rustc::util::common::{time, ErrorReported};\n+use rustc::arena::Arena;\n use rustc::hir;\n use rustc::lint;\n use rustc::session::Session;\n@@ -74,6 +75,8 @@ pub struct Queries<'comp> {\n     arenas: Once<AllArenas>,\n     forest: Once<hir::map::Forest>,\n \n+    local_arena: WorkerLocal<Arena<'comp>>,\n+\n     dep_graph_future: Query<Option<DepGraphFuture>>,\n     parse: Query<ast::Crate>,\n     crate_name: Query<String>,\n@@ -93,6 +96,7 @@ impl<'comp> Queries<'comp> {\n             gcx: Once::new(),\n             arenas: Once::new(),\n             forest: Once::new(),\n+            local_arena: WorkerLocal::new(|_| Arena::default()),\n             dep_graph_future: Default::default(),\n             parse: Default::default(),\n             crate_name: Default::default(),\n@@ -265,6 +269,7 @@ impl<'comp> Queries<'comp> {\n                 &crate_name,\n                 &self.gcx,\n                 &self.arenas,\n+                &self.local_arena,\n             ))\n         })\n     }"}]}