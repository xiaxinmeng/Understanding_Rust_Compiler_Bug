{"sha": "a32b0e7627ea31d1967568aa034f74a082de4bec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMmIwZTc2MjdlYTMxZDE5Njc1NjhhYTAzNGY3NGEwODJkZTRiZWM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-16T02:03:52Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-16T02:05:10Z"}, "message": "Fix some bugs", "tree": {"sha": "815ab7c8d48ef171b95b6c35c1b9a2398d78a598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/815ab7c8d48ef171b95b6c35c1b9a2398d78a598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a32b0e7627ea31d1967568aa034f74a082de4bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a32b0e7627ea31d1967568aa034f74a082de4bec", "html_url": "https://github.com/rust-lang/rust/commit/a32b0e7627ea31d1967568aa034f74a082de4bec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a32b0e7627ea31d1967568aa034f74a082de4bec/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "018fa8545359b8580a89a1cdf79ed186c997ed41", "url": "https://api.github.com/repos/rust-lang/rust/commits/018fa8545359b8580a89a1cdf79ed186c997ed41", "html_url": "https://github.com/rust-lang/rust/commit/018fa8545359b8580a89a1cdf79ed186c997ed41"}], "stats": {"total": 62, "additions": 30, "deletions": 32}, "files": [{"sha": "23caa933e1d0563702ef0873bcb6996ba354d533", "filename": "src/expr.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a32b0e7627ea31d1967568aa034f74a082de4bec/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32b0e7627ea31d1967568aa034f74a082de4bec/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=a32b0e7627ea31d1967568aa034f74a082de4bec", "patch": "@@ -192,14 +192,17 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n     }\n \n     let path_str = pprust::path_to_string(path);\n-    // Foo { a: Foo } - indent is +3, width is -5.\n-    let (indent, budget) = match context.config.struct_lit_style {\n+    let (indent, h_budget, v_budget) = match context.config.struct_lit_style {\n         StructLitStyle::VisualIndent => {\n-            (offset + path_str.len() + 3, width - (path_str.len() + 5))\n+            // Foo { a: Foo } - indent is +3, width is -5.\n+            let budget = width - (path_str.len() + 5);\n+            (offset + path_str.len() + 3, budget, budget)\n         }\n         StructLitStyle::BlockIndent => {\n+            // If we are all on one line, then we'll ignore the indent, and we\n+            // have a smaller budget.\n             let indent = context.block_indent + context.config.tab_spaces;\n-            (indent, width - indent)\n+            (indent, width - (path_str.len() + 5), width - indent)\n         }\n     };\n \n@@ -227,13 +230,13 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n                              |item| {\n                                  match *item {\n                                      StructLitField::Regular(ref field) => {\n-                                         rewrite_field(context, &field, budget, indent)\n+                                         rewrite_field(context, &field, h_budget, indent)\n                                             .unwrap_or(context.codemap.span_to_snippet(field.span)\n                                                                       .unwrap())\n                                      },\n                                      StructLitField::Base(ref expr) => {\n                                          // 2 = ..\n-                                         expr.rewrite(context, budget - 2, indent + 2)\n+                                         expr.rewrite(context, h_budget - 2, indent + 2)\n                                              .map(|s| format!(\"..{}\", s))\n                                              .unwrap_or(context.codemap.span_to_snippet(expr.span)\n                                                                        .unwrap())\n@@ -252,8 +255,8 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n             context.config.struct_lit_trailing_comma\n         },\n         indent: indent,\n-        h_width: budget,\n-        v_width: budget,\n+        h_width: h_budget,\n+        v_width: v_budget,\n         ends_with_newline: true,\n     };\n     let fields_str = write_list(&items, &fmt);"}, {"sha": "f2726821e55652a83bbf1ec9c51bee40164b599d", "filename": "tests/source/struct_lits.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a32b0e7627ea31d1967568aa034f74a082de4bec/tests%2Fsource%2Fstruct_lits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32b0e7627ea31d1967568aa034f74a082de4bec/tests%2Fsource%2Fstruct_lits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstruct_lits.rs?ref=a32b0e7627ea31d1967568aa034f74a082de4bec", "patch": "@@ -8,7 +8,9 @@ fn main() {\n \n     Foo { a: foo() /* comment*/, /* comment*/ b: bar(), ..something };\n \n-    Fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo { a: foo(), b: bar(), };\n+    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo { a: foo(), b: bar(), };\n+\n+    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo { a: foo(), b: bar(), };\n \n     Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo {\n         // Comment"}, {"sha": "293a2a97b7a2a6822e68e1b5d13052e5cab9f906", "filename": "tests/target/struct_lits.rs", "status": "modified", "additions": 16, "deletions": 23, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a32b0e7627ea31d1967568aa034f74a082de4bec/tests%2Ftarget%2Fstruct_lits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32b0e7627ea31d1967568aa034f74a082de4bec/tests%2Ftarget%2Fstruct_lits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_lits.rs?ref=a32b0e7627ea31d1967568aa034f74a082de4bec", "patch": "@@ -13,45 +13,38 @@ fn main() {\n         ..something\n     };\n \n-    Fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo {\n+    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo { a: foo(), b: bar() };\n+\n+    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo {\n         a: foo(),\n         b: bar(),\n     };\n \n-    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo { // Comment\n-        a: foo(), /* C\n-                   * o\n-                   * m\n-                   * m\n-                   * e\n-                   * n\n-                   * t */\n+    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo {\n+        // Comment\n+        a: foo(), // Comment\n         // Comment\n-        b: bar(), /* C\n-                   * o\n-                   * m\n-                   * m\n-                   * e\n-                   * n\n-                   * t */\n+        b: bar(), /* Comment */\n     };\n \n     Foo { a: Bar, b: foo() };\n \n-    A { // Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit\n-        // amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante\n+    A {\n+        // Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed\n+        // sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante\n         // hendrerit. Donec et mollis dolor.\n         first: item(),\n         // Praesent et diam eget libero egestas mattis sit amet vitae augue.\n         // Nam tincidunt congue enim, ut porta lorem lacinia consectetur.\n         second: Item,\n     };\n \n-    Diagram { //                 o        This graph demonstrates how\n-              //                / \\       significant whitespace is\n-              //               o   o      preserved.\n-              //              /|\\   \\\n-              //             o o o   o\n+    Diagram {\n+        //                 o        This graph demonstrates how\n+        //                / \\       significant whitespace is\n+        //               o   o      preserved.\n+        //              /|\\   \\\n+        //             o o o   o\n         graph: G,\n     }\n }"}]}