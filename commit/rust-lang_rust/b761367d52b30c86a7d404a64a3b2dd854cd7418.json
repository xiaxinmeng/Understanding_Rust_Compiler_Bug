{"sha": "b761367d52b30c86a7d404a64a3b2dd854cd7418", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NjEzNjdkNTJiMzBjODZhN2Q0MDRhNjRhM2IyZGQ4NTRjZDc0MTg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-10-09T19:41:17Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-10-17T23:41:21Z"}, "message": "Fix test fallout", "tree": {"sha": "c5bd58e38a0d7916c39dd9916d3ae5694a5d4b86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5bd58e38a0d7916c39dd9916d3ae5694a5d4b86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b761367d52b30c86a7d404a64a3b2dd854cd7418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b761367d52b30c86a7d404a64a3b2dd854cd7418", "html_url": "https://github.com/rust-lang/rust/commit/b761367d52b30c86a7d404a64a3b2dd854cd7418", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b761367d52b30c86a7d404a64a3b2dd854cd7418/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dab3bd6cda23064e6726bd046c903096ef03cbd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/dab3bd6cda23064e6726bd046c903096ef03cbd0", "html_url": "https://github.com/rust-lang/rust/commit/dab3bd6cda23064e6726bd046c903096ef03cbd0"}], "stats": {"total": 59, "additions": 31, "deletions": 28}, "files": [{"sha": "6b914f501ca79a735456b635a5beabad7a3267a4", "filename": "src/test/ui-fulldeps/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs?ref=b761367d52b30c86a7d404a64a3b2dd854cd7418", "patch": "@@ -15,15 +15,14 @@ use syntax::symbol::Symbol;\n \n use rustc::hir;\n use rustc::hir::intravisit;\n-use rustc::hir::map as hir_map;\n use hir::Node;\n use rustc::lint::{LateContext, LintPass, LintArray, LateLintPass, LintContext};\n-use rustc::ty;\n-use syntax::{ast, source_map};\n+use syntax::source_map;\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_late_lint_pass(box MissingWhitelistedAttrPass);\n+    reg.lint_store.register_lints(&[&MISSING_WHITELISTED_ATTR]);\n+    reg.lint_store.register_late_pass(|| box MissingWhitelistedAttrPass);\n     reg.register_attribute(Symbol::intern(\"whitelisted_attr\"), Whitelisted);\n }\n "}, {"sha": "6874c921c1cc1c26fadcfd8ee90ecfb243b6dcde", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate-rpass.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs?ref=b761367d52b30c86a7d404a64a3b2dd854cd7418", "patch": "@@ -7,24 +7,20 @@\n extern crate rustc_driver;\n extern crate syntax;\n \n-use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n+use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass};\n use rustc_driver::plugin::Registry;\n use rustc::hir;\n use syntax::attr;\n use syntax::symbol::Symbol;\n \n macro_rules! fake_lint_pass {\n-    ($struct:ident, $lints:expr, $($attr:expr),*) => {\n+    ($struct:ident, $($attr:expr),*) => {\n         struct $struct;\n \n         impl LintPass for $struct {\n             fn name(&self) -> &'static str {\n                 stringify!($struct)\n             }\n-\n-            fn get_lints(&self) -> LintArray {\n-                $lints\n-            }\n         }\n \n         impl<'a, 'tcx> LateLintPass<'a, 'tcx> for $struct {\n@@ -49,25 +45,29 @@ declare_lint!(CRATE_NOT_GREEN, Warn, \"crate not marked with #![crate_green]\");\n \n fake_lint_pass! {\n     PassOkay,\n-    lint_array!(CRATE_NOT_OKAY), // Single lint\n     Symbol::intern(\"rustc_crate_okay\")\n }\n \n fake_lint_pass! {\n     PassRedBlue,\n-    lint_array!(CRATE_NOT_RED, CRATE_NOT_BLUE), // Multiple lints\n     Symbol::intern(\"rustc_crate_red\"), Symbol::intern(\"rustc_crate_blue\")\n }\n \n fake_lint_pass! {\n     PassGreyGreen,\n-    lint_array!(CRATE_NOT_GREY, CRATE_NOT_GREEN, ), // Trailing comma\n     Symbol::intern(\"rustc_crate_grey\"), Symbol::intern(\"rustc_crate_green\")\n }\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_late_lint_pass(box PassOkay);\n-    reg.register_late_lint_pass(box PassRedBlue);\n-    reg.register_late_lint_pass(box PassGreyGreen);\n+    reg.lint_store.register_lints(&[\n+        &CRATE_NOT_OKAY,\n+        &CRATE_NOT_RED,\n+        &CRATE_NOT_BLUE,\n+        &CRATE_NOT_GREY,\n+        &CRATE_NOT_GREEN,\n+    ]);\n+    reg.lint_store.register_late_pass(|| box PassOkay);\n+    reg.lint_store.register_late_pass(|| box PassRedBlue);\n+    reg.lint_store.register_late_pass(|| box PassGreyGreen);\n }"}, {"sha": "1cd3e7b28dba7bd3d48578e9cf91ecc278935a52", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs?ref=b761367d52b30c86a7d404a64a3b2dd854cd7418", "patch": "@@ -7,7 +7,7 @@\n extern crate rustc_driver;\n extern crate syntax;\n \n-use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n+use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LintArray};\n use rustc_driver::plugin::Registry;\n use rustc::hir;\n use syntax::attr;\n@@ -32,6 +32,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_lint(&[&CRATE_NOT_OKAY]);\n-    reg.register_late_lint_pass(|| box Pass);\n+    reg.lint_store.register_lints(&[&CRATE_NOT_OKAY]);\n+    reg.lint_store.register_late_pass(|| box Pass);\n }"}, {"sha": "cb793b43498859aa9008832352a9d929dbc324f4", "filename": "src/test/ui-fulldeps/auxiliary/lint-group-plugin-test.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs?ref=b761367d52b30c86a7d404a64a3b2dd854cd7418", "patch": "@@ -9,7 +9,7 @@ extern crate rustc;\n extern crate rustc_driver;\n \n use rustc::hir;\n-use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n+use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LintArray, LintId};\n use rustc_driver::plugin::Registry;\n \n declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n@@ -30,6 +30,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_late_lint_pass(box Pass);\n-    reg.register_lint_group(\"lint_me\", None, vec![TEST_LINT, PLEASE_LINT]);\n+    reg.lint_store.register_lints(&[&TEST_LINT, &PLEASE_LINT]);\n+    reg.lint_store.register_late_pass(|| box Pass);\n+    reg.lint_store.register_group(true, \"lint_me\", None,\n+        vec![LintId::of(&TEST_LINT), LintId::of(&PLEASE_LINT)]);\n }"}, {"sha": "40c37eb570e2d6435f20856b9a10a2b56345db19", "filename": "src/test/ui-fulldeps/auxiliary/lint-plugin-test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs?ref=b761367d52b30c86a7d404a64a3b2dd854cd7418", "patch": "@@ -10,8 +10,7 @@ extern crate syntax;\n extern crate rustc;\n extern crate rustc_driver;\n \n-use rustc::lint::{EarlyContext, LintContext, LintPass, EarlyLintPass,\n-                  EarlyLintPassObject, LintArray};\n+use rustc::lint::{EarlyContext, LintContext, LintPass, EarlyLintPass, LintArray};\n use rustc_driver::plugin::Registry;\n use syntax::ast;\n declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n@@ -28,5 +27,6 @@ impl EarlyLintPass for Pass {\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_early_lint_pass(box Pass as EarlyLintPassObject);\n+    reg.lint_store.register_lints(&[&TEST_LINT]);\n+    reg.lint_store.register_early_pass(|| box Pass);\n }"}, {"sha": "67135d595f448a53ed1e1a6c777216ad8ce7787c", "filename": "src/test/ui-fulldeps/auxiliary/lint-tool-test.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b761367d52b30c86a7d404a64a3b2dd854cd7418/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs?ref=b761367d52b30c86a7d404a64a3b2dd854cd7418", "patch": "@@ -8,7 +8,7 @@ extern crate syntax;\n extern crate rustc;\n extern crate rustc_driver;\n \n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass, LintId};\n use rustc_driver::plugin::Registry;\n use syntax::ast;\n declare_tool_lint!(pub clippy::TEST_LINT, Warn, \"Warn about stuff\");\n@@ -40,6 +40,8 @@ impl EarlyLintPass for Pass {\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_early_lint_pass(box Pass);\n-    reg.register_lint_group(\"clippy::group\", Some(\"clippy_group\"), vec![TEST_LINT, TEST_GROUP]);\n+    reg.lint_store.register_lints(&[&TEST_RUSTC_TOOL_LINT, &TEST_LINT, &TEST_GROUP]);\n+    reg.lint_store.register_early_pass(|| box Pass);\n+    reg.lint_store.register_group(true, \"clippy::group\", Some(\"clippy_group\"),\n+        vec![LintId::of(&TEST_LINT), LintId::of(&TEST_GROUP)]);\n }"}]}