{"sha": "15e289846219cc3ad8b0225712bf2309f2c02439", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZTI4OTg0NjIxOWNjM2FkOGIwMjI1NzEyYmYyMzA5ZjJjMDI0Mzk=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-01T13:36:33Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-12T00:31:43Z"}, "message": "Remove the dependence of std::io::test on rand.\n\nThis replaces it with a manual \"task rng\" using XorShift and a crappy\nseeding mechanism. Theoretically good enough for the purposes\nthough (unique for tests).", "tree": {"sha": "d0b3785fdaa3169718c807cb975031e1813ac367", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0b3785fdaa3169718c807cb975031e1813ac367"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15e289846219cc3ad8b0225712bf2309f2c02439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15e289846219cc3ad8b0225712bf2309f2c02439", "html_url": "https://github.com/rust-lang/rust/commit/15e289846219cc3ad8b0225712bf2309f2c02439", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15e289846219cc3ad8b0225712bf2309f2c02439/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fa4bbeed425ae99d15322fbaa05d1abeae6547f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa4bbeed425ae99d15322fbaa05d1abeae6547f", "html_url": "https://github.com/rust-lang/rust/commit/6fa4bbeed425ae99d15322fbaa05d1abeae6547f"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "d6f7f58f01c84b966fc1249e52590b94a9497579", "filename": "src/libstd/io/test.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/15e289846219cc3ad8b0225712bf2309f2c02439/src%2Flibstd%2Fio%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e289846219cc3ad8b0225712bf2309f2c02439/src%2Flibstd%2Fio%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ftest.rs?ref=15e289846219cc3ad8b0225712bf2309f2c02439", "patch": "@@ -12,10 +12,9 @@\n \n #[macro_escape];\n \n+use libc;\n use os;\n use prelude::*;\n-use rand;\n-use rand::Rng;\n use std::io::net::ip::*;\n use sync::atomics::{AtomicUint, INIT_ATOMIC_UINT, Relaxed};\n \n@@ -65,10 +64,18 @@ pub fn next_test_port() -> u16 {\n \n /// Get a temporary path which could be the location of a unix socket\n pub fn next_test_unix() -> Path {\n+    static mut COUNT: AtomicUint = INIT_ATOMIC_UINT;\n+    // base port and pid are an attempt to be unique between multiple\n+    // test-runners of different configurations running on one\n+    // buildbot, the count is to be unique within this executable.\n+    let string = format!(\"rust-test-unix-path-{}-{}-{}\",\n+                         base_port(),\n+                         unsafe {libc::getpid()},\n+                         unsafe {COUNT.fetch_add(1, Relaxed)});\n     if cfg!(unix) {\n-        os::tmpdir().join(rand::task_rng().gen_ascii_str(20))\n+        os::tmpdir().join(string)\n     } else {\n-        Path::new(r\"\\\\.\\pipe\\\" + rand::task_rng().gen_ascii_str(20))\n+        Path::new(r\"\\\\.\\pipe\\\" + string)\n     }\n }\n "}]}