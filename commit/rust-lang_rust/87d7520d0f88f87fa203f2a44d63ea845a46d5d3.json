{"sha": "87d7520d0f88f87fa203f2a44d63ea845a46d5d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZDc1MjBkMGY4OGY4N2ZhMjAzZjJhNDRkNjNlYTg0NWE0NmQ1ZDM=", "commit": {"author": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2017-09-29T11:28:25Z"}, "committer": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2017-09-29T11:32:57Z"}, "message": "rustdoc: Extract converter from Impementor to Item to a fn", "tree": {"sha": "8d6a1eb1bb3f0057076af1b713367a2933a7cd3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d6a1eb1bb3f0057076af1b713367a2933a7cd3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87d7520d0f88f87fa203f2a44d63ea845a46d5d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQQzEHnM5f9ubG8rMBnAlyIdbgPfaAUCWc4vaQAKCRDAlyIdbgPf\naHBWAP4qZeGu7g1Aeynns30XYtuxBjvKyGwfbJ6KGRtw42W/IQEAxOldPLAT/JTE\nOT5NUBRvM8n4wQPwdpKjNwED98WAINk=\n=A4Zy\n-----END PGP SIGNATURE-----", "payload": "tree 8d6a1eb1bb3f0057076af1b713367a2933a7cd3e\nparent 3c96d40d326b64f6a50f4a902051fe71c4acdc92\nauthor Vitaly _Vi Shukela <vi0oss@gmail.com> 1506684505 +0300\ncommitter Vitaly _Vi Shukela <vi0oss@gmail.com> 1506684777 +0300\n\nrustdoc: Extract converter from Impementor to Item to a fn\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87d7520d0f88f87fa203f2a44d63ea845a46d5d3", "html_url": "https://github.com/rust-lang/rust/commit/87d7520d0f88f87fa203f2a44d63ea845a46d5d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87d7520d0f88f87fa203f2a44d63ea845a46d5d3/comments", "author": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c96d40d326b64f6a50f4a902051fe71c4acdc92", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c96d40d326b64f6a50f4a902051fe71c4acdc92", "html_url": "https://github.com/rust-lang/rust/commit/3c96d40d326b64f6a50f4a902051fe71c4acdc92"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "d58cfcf18b62a0b56ff1e947fbc646fc71fe7321", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/87d7520d0f88f87fa203f2a44d63ea845a46d5d3/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d7520d0f88f87fa203f2a44d63ea845a46d5d3/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=87d7520d0f88f87fa203f2a44d63ea845a46d5d3", "patch": "@@ -2253,6 +2253,18 @@ fn item_function(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     document(w, cx, it)\n }\n \n+fn implementor2item<'a>(cache: &'a Cache, imp : &Implementor) -> Option<&'a clean::Item> {\n+    if let Some(t_did) = imp.impl_.for_.def_id() {\n+        if let Some(impl_item) = cache.impls.get(&t_did).and_then(|i| i.iter()\n+            .find(|i| i.impl_item.def_id == imp.def_id))\n+        {\n+            let i = &impl_item.impl_item;\n+            return Some(i);\n+        }\n+    }\n+    None\n+}\n+\n fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n               t: &clean::Trait) -> fmt::Result {\n     let mut bounds = String::new();\n@@ -2463,19 +2475,13 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n             \")?;\n \n             for implementor in foreign {\n-                // need to get from a clean::Impl to a clean::Item so i can use render_impl\n-                if let Some(t_did) = implementor.impl_.for_.def_id() {\n-                    if let Some(impl_item) = cache.impls.get(&t_did).and_then(|i| i.iter()\n-                        .find(|i| i.impl_item.def_id == implementor.def_id))\n-                    {\n-                        let i = &impl_item.impl_item;\n-                        let impl_ = Impl { impl_item: i.clone() };\n-                        let assoc_link = AssocItemLink::GotoSource(\n-                            i.def_id, &implementor.impl_.provided_trait_methods\n-                        );\n-                        render_impl(w, cx, &impl_, assoc_link,\n-                                    RenderMode::Normal, i.stable_since(), false)?;\n-                    }\n+                if let Some(i) = implementor2item(&cache, implementor) {\n+                    let impl_ = Impl { impl_item: i.clone() };\n+                    let assoc_link = AssocItemLink::GotoSource(\n+                        i.def_id, &implementor.impl_.provided_trait_methods\n+                    );\n+                    render_impl(w, cx, &impl_, assoc_link,\n+                                RenderMode::Normal, i.stable_since(), false)?;\n                 }\n             }\n         }"}]}