{"sha": "6762754d5b718d2d3f938963d2a4d82eb20eb9fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NjI3NTRkNWI3MThkMmQzZjkzODk2M2QyYTRkODJlYjIwZWI5ZmQ=", "commit": {"author": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-06-16T21:48:46Z"}, "committer": {"name": "Matthijs Hofstra", "email": "thiezz@gmail.com", "date": "2013-06-23T21:21:35Z"}, "message": "Updated shootout-fasta.rs copyright years, removed stuff that caused lint to complain.", "tree": {"sha": "7f580dd0f1a780bce40008242f75db9ea2b5654a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f580dd0f1a780bce40008242f75db9ea2b5654a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6762754d5b718d2d3f938963d2a4d82eb20eb9fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6762754d5b718d2d3f938963d2a4d82eb20eb9fd", "html_url": "https://github.com/rust-lang/rust/commit/6762754d5b718d2d3f938963d2a4d82eb20eb9fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6762754d5b718d2d3f938963d2a4d82eb20eb9fd/comments", "author": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thiez", "id": 204550, "node_id": "MDQ6VXNlcjIwNDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/204550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thiez", "html_url": "https://github.com/Thiez", "followers_url": "https://api.github.com/users/Thiez/followers", "following_url": "https://api.github.com/users/Thiez/following{/other_user}", "gists_url": "https://api.github.com/users/Thiez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thiez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thiez/subscriptions", "organizations_url": "https://api.github.com/users/Thiez/orgs", "repos_url": "https://api.github.com/users/Thiez/repos", "events_url": "https://api.github.com/users/Thiez/events{/privacy}", "received_events_url": "https://api.github.com/users/Thiez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66fd3c9e5dd8c9b44237b57f455ba60ef607958b", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fd3c9e5dd8c9b44237b57f455ba60ef607958b", "html_url": "https://github.com/rust-lang/rust/commit/66fd3c9e5dd8c9b44237b57f455ba60ef607958b"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "f3efcc21ea9bdc7069723a5a4473ae465443e6ba", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6762754d5b718d2d3f938963d2a4d82eb20eb9fd/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6762754d5b718d2d3f938963d2a4d82eb20eb9fd/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=6762754d5b718d2d3f938963d2a4d82eb20eb9fd", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -19,19 +19,15 @@ extern mod extra;\n \n use std::int;\n use std::io;\n-use std::option;\n use std::os;\n use std::rand::Rng;\n use std::rand;\n use std::result;\n use std::str;\n use std::uint;\n-use std::vec;\n \n static LINE_LENGTH: uint = 60u;\n \n-//fn LINE_LENGTH() -> uint { return 60u; }\n-\n struct MyRandom {\n     last: u32\n }\n@@ -95,17 +91,15 @@ fn make_repeat_fasta(wr: @io::Writer, id: ~str, desc: ~str, s: ~str, n: int) {\n     wr.write_line(~\">\" + id + \" \" + desc);\n     let mut op = str::with_capacity( LINE_LENGTH );\n     let sl = s.len();\n-    unsafe {\n-        for uint::range(0u, n as uint) |i| {\n-            if (op.len() >= LINE_LENGTH) {\n-                wr.write_line( op );\n-                op = str::with_capacity( LINE_LENGTH );\n-            }\n-            op.push_char( s[i % sl] as char );\n-        }\n-        if op.len() > 0 {\n-            wr.write_line(op)\n+    for uint::range(0u, n as uint) |i| {\n+        if (op.len() >= LINE_LENGTH) {\n+            wr.write_line( op );\n+            op = str::with_capacity( LINE_LENGTH );\n         }\n+        op.push_char( s[i % sl] as char );\n+    }\n+    if op.len() > 0 {\n+        wr.write_line(op)\n     }\n }\n \n@@ -115,7 +109,7 @@ fn acid(ch: char, prob: u32) -> AminoAcids {\n \n fn main() {\n     let args = os::args();\n-    let args = if os::getenv(~\"RUST_BENCH\").is_some() {\n+    let args = if os::getenv(\"RUST_BENCH\").is_some() {\n         // alioth tests k-nucleotide with this data at 25,000,000\n         ~[~\"\", ~\"5000000\"]\n     } else if args.len() <= 1u {\n@@ -124,9 +118,9 @@ fn main() {\n         args\n     };\n \n-    let writer = if os::getenv(~\"RUST_BENCH\").is_some() {\n+    let writer = if os::getenv(\"RUST_BENCH\").is_some() {\n         result::get(&io::file_writer(&Path(\"./shootout-fasta.data\"),\n-                                    ~[io::Truncate, io::Create]))\n+                                    [io::Truncate, io::Create]))\n     } else {\n         io::stdout()\n     };"}]}