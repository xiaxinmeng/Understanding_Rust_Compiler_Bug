{"sha": "03622552ecdbac78072ea5e4aa4d7389d606c25c", "node_id": "C_kwDOAAsO6NoAKDAzNjIyNTUyZWNkYmFjNzgwNzJlYTVlNGFhNGQ3Mzg5ZDYwNmMyNWM", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-31T02:33:01Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-31T02:33:01Z"}, "message": "use appropriate `HirID` for finding `else_span`", "tree": {"sha": "9f891c6e3d5400828e2a1d2dcff8853db01a453a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f891c6e3d5400828e2a1d2dcff8853db01a453a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03622552ecdbac78072ea5e4aa4d7389d606c25c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03622552ecdbac78072ea5e4aa4d7389d606c25c", "html_url": "https://github.com/rust-lang/rust/commit/03622552ecdbac78072ea5e4aa4d7389d606c25c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03622552ecdbac78072ea5e4aa4d7389d606c25c/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2318651d4d2c6280a5047544cbf4180119ba966", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2318651d4d2c6280a5047544cbf4180119ba966", "html_url": "https://github.com/rust-lang/rust/commit/a2318651d4d2c6280a5047544cbf4180119ba966"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "20864c657ffd7b2425bebbe43f7e3cfe109dc413", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/03622552ecdbac78072ea5e4aa4d7389d606c25c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03622552ecdbac78072ea5e4aa4d7389d606c25c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=03622552ecdbac78072ea5e4aa4d7389d606c25c", "patch": "@@ -712,7 +712,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 opt_suggest_box_span,\n             }) => {\n                 let then_span = self.find_block_span_from_hir_id(then_id);\n-                let else_span = self.find_block_span_from_hir_id(then_id);\n+                let else_span = self.find_block_span_from_hir_id(else_id);\n                 err.span_label(then_span, \"expected because of this\");\n                 if let Some(sp) = outer_span {\n                     err.span_label(sp, \"`if` and `else` have incompatible types\");\n@@ -760,11 +760,15 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         second_ty: Ty<'tcx>,\n         second_span: Span,\n     ) {\n-        let remove_semicolon =\n-            [(first_id, second_ty), (second_id, first_ty)].into_iter().find_map(|(id, ty)| {\n-                let hir::Node::Block(blk) = self.tcx.hir().get(id?) else { return None };\n-                self.could_remove_semicolon(blk, ty)\n-            });\n+        let remove_semicolon = [\n+            (first_id, self.resolve_vars_if_possible(second_ty)),\n+            (second_id, self.resolve_vars_if_possible(first_ty)),\n+        ]\n+        .into_iter()\n+        .find_map(|(id, ty)| {\n+            let hir::Node::Block(blk) = self.tcx.hir().get(id?) else { return None };\n+            self.could_remove_semicolon(blk, ty)\n+        });\n         match remove_semicolon {\n             Some((sp, StatementAsExpression::NeedsBoxing)) => {\n                 err.multipart_suggestion("}]}