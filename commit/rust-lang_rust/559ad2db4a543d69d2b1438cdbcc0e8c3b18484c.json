{"sha": "559ad2db4a543d69d2b1438cdbcc0e8c3b18484c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OWFkMmRiNGE1NDNkNjlkMmIxNDM4Y2RiY2MwZThjM2IxODQ4NGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-28T09:24:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-28T09:24:22Z"}, "message": "Merge pull request #545 from solson/oli-obk-patch-1\n\nExpose some things for priroda", "tree": {"sha": "154ccf203563ebfe0d20a92c33566d8e43fd9eeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/154ccf203563ebfe0d20a92c33566d8e43fd9eeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb/l7GCRBK7hj4Ov3rIwAAdHIIAHnrwWpLddBWurCKHU9yNoQs\npGk/OrxzBWocMGa697+qjwUNRQ2QdddEGZuDKvM0mFJjlqg+GPbADR1N4qXIyC+N\naL8iujfQF1JAsA76AKCuUoxtL1BoAEnkgvAc0oWL1kaIhOHAiulsT6PxqyoidAO0\n7w1yJSnJP/mODUphwovcQYLSIXyKortBckf7DVDB2ebsCeeCPKPN1ihjX6Q3baRR\nhk8wf6vrEq3h+EwwpLdPMPBJYYEWkySopR0wN/hwOhLXTpnHY4nXmRY4XLIMHjPe\n90fnj19laiTiBByoinydjJx5nTBrRKkehGXFb7BgNajt/xEUiYdPG6CGwY7+c6M=\n=Xtd1\n-----END PGP SIGNATURE-----\n", "payload": "tree 154ccf203563ebfe0d20a92c33566d8e43fd9eeb\nparent fb2d0ff9438329088a578436f8d299fb5718b4fb\nparent f42b7085683a7a08eb4caef73b2bf839385a7af3\nauthor Ralf Jung <post@ralfj.de> 1543397062 +0100\ncommitter GitHub <noreply@github.com> 1543397062 +0100\n\nMerge pull request #545 from solson/oli-obk-patch-1\n\nExpose some things for priroda"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c", "html_url": "https://github.com/rust-lang/rust/commit/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb2d0ff9438329088a578436f8d299fb5718b4fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d0ff9438329088a578436f8d299fb5718b4fb", "html_url": "https://github.com/rust-lang/rust/commit/fb2d0ff9438329088a578436f8d299fb5718b4fb"}, {"sha": "f42b7085683a7a08eb4caef73b2bf839385a7af3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f42b7085683a7a08eb4caef73b2bf839385a7af3", "html_url": "https://github.com/rust-lang/rust/commit/f42b7085683a7a08eb4caef73b2bf839385a7af3"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "60076f2919052e1e5c11688088c8942834651b5c", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=559ad2db4a543d69d2b1438cdbcc0e8c3b18484c", "patch": "@@ -37,15 +37,15 @@ mod range_map;\n mod mono_hash_map;\n mod stacked_borrows;\n \n-use crate::fn_call::EvalContextExt as MissingFnsEvalContextExt;\n-use crate::operator::EvalContextExt as OperatorEvalContextExt;\n-use crate::intrinsic::EvalContextExt as IntrinsicEvalContextExt;\n-use crate::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n+pub use crate::fn_call::EvalContextExt as MissingFnsEvalContextExt;\n+pub use crate::operator::EvalContextExt as OperatorEvalContextExt;\n+pub use crate::intrinsic::EvalContextExt as IntrinsicEvalContextExt;\n+pub use crate::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n use crate::range_map::RangeMap;\n #[allow(unused_imports)] // FIXME rustc bug https://github.com/rust-lang/rust/issues/53682\n-use crate::helpers::{ScalarExt, EvalContextExt as HelpersEvalContextExt};\n+pub use crate::helpers::{ScalarExt, EvalContextExt as HelpersEvalContextExt};\n use crate::mono_hash_map::MonoHashMap;\n-use crate::stacked_borrows::{EvalContextExt as StackedBorEvalContextExt};\n+pub use crate::stacked_borrows::{EvalContextExt as StackedBorEvalContextExt};\n \n // Used by priroda\n pub use crate::stacked_borrows::{Borrow, Stack, Stacks, BorStackItem};"}, {"sha": "278bbd9cf2b13d5ead44c7b1de87f615d0542fba", "filename": "src/mono_hash_map.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c/src%2Fmono_hash_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559ad2db4a543d69d2b1438cdbcc0e8c3b18484c/src%2Fmono_hash_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmono_hash_map.rs?ref=559ad2db4a543d69d2b1438cdbcc0e8c3b18484c", "patch": "@@ -17,6 +17,12 @@ use crate::AllocMap;\n #[derive(Debug, Clone)]\n pub struct MonoHashMap<K: Hash + Eq, V>(RefCell<FxHashMap<K, Box<V>>>);\n \n+impl<K: Hash + Eq, V> MonoHashMap<K, V> {\n+    pub fn values<T>(&self, f: impl FnOnce(&mut dyn Iterator<Item=&V>) -> T) -> T {\n+        f(&mut self.0.borrow().values().map(|v| &**v))\n+    }\n+}\n+\n impl<K: Hash + Eq, V> Default for MonoHashMap<K, V> {\n     fn default() -> Self {\n         MonoHashMap(RefCell::new(Default::default()))"}]}