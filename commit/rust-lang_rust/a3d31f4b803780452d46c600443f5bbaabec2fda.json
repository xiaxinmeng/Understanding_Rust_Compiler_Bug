{"sha": "a3d31f4b803780452d46c600443f5bbaabec2fda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZDMxZjRiODAzNzgwNDUyZDQ2YzYwMDQ0M2Y1YmJhYWJlYzJmZGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-17T07:55:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-17T07:55:29Z"}, "message": "auto merge of #6550 : Aatch/rust/atomic-load, r=thestinger\n\nThis closes #6548\r\n\r\nThe change makes it match the standard Load signature.", "tree": {"sha": "88c0a5c3d531adfd8b05d13ae9fa89f0a3dc6e41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88c0a5c3d531adfd8b05d13ae9fa89f0a3dc6e41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3d31f4b803780452d46c600443f5bbaabec2fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3d31f4b803780452d46c600443f5bbaabec2fda", "html_url": "https://github.com/rust-lang/rust/commit/a3d31f4b803780452d46c600443f5bbaabec2fda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3d31f4b803780452d46c600443f5bbaabec2fda/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8badea49b0291d5ea0979a8edfb1ebb4f01b043d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8badea49b0291d5ea0979a8edfb1ebb4f01b043d", "html_url": "https://github.com/rust-lang/rust/commit/8badea49b0291d5ea0979a8edfb1ebb4f01b043d"}, {"sha": "a289dcd18719018ca7051dc03d4a711993008eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a289dcd18719018ca7051dc03d4a711993008eb2", "html_url": "https://github.com/rust-lang/rust/commit/a289dcd18719018ca7051dc03d4a711993008eb2"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "d06bf1480c989b268948c1640644bcafc6082e87", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3d31f4b803780452d46c600443f5bbaabec2fda/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3d31f4b803780452d46c600443f5bbaabec2fda/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=a3d31f4b803780452d46c600443f5bbaabec2fda", "patch": "@@ -1566,6 +1566,7 @@ pub mod llvm {\n         /* Atomic Operations */\n         pub unsafe fn LLVMBuildAtomicLoad(B: BuilderRef,\n                                           PointerVal: ValueRef,\n+                                          Name: *c_char,\n                                           Order: AtomicOrdering)\n                                        -> ValueRef;\n "}, {"sha": "e8853fd20e98b3f57f25dffa91ed0e074d664d91", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3d31f4b803780452d46c600443f5bbaabec2fda/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3d31f4b803780452d46c600443f5bbaabec2fda/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=a3d31f4b803780452d46c600443f5bbaabec2fda", "patch": "@@ -544,7 +544,7 @@ pub fn AtomicLoad(cx: block, PointerVal: ValueRef, order: AtomicOrdering) -> Val\n             return llvm::LLVMGetUndef(ccx.int_type);\n         }\n         count_insn(cx, \"load.atomic\");\n-        return llvm::LLVMBuildAtomicLoad(B(cx), PointerVal, order);\n+        return llvm::LLVMBuildAtomicLoad(B(cx), PointerVal, noname(), order);\n     }\n }\n "}, {"sha": "9e44abe081c95634206510d5fe83895c775662b4", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3d31f4b803780452d46c600443f5bbaabec2fda/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a3d31f4b803780452d46c600443f5bbaabec2fda/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=a3d31f4b803780452d46c600443f5bbaabec2fda", "patch": "@@ -553,7 +553,7 @@ extern \"C\" LLVMValueRef LLVMBuildAtomicLoad(LLVMBuilderRef B,\n     li->setVolatile(true);\n     li->setAtomic(order);\n     li->setAlignment(sizeof(intptr_t));\n-    return wrap(unwrap(B)->Insert(li));\n+    return wrap(unwrap(B)->Insert(li, Name));\n }\n \n extern \"C\" LLVMValueRef LLVMBuildAtomicStore(LLVMBuilderRef B,"}]}