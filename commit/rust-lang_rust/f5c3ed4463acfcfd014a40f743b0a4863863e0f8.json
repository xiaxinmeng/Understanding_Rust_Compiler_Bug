{"sha": "f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YzNlZDQ0NjNhY2ZjZmQwMTRhNDBmNzQzYjBhNDg2Mzg2M2UwZjg=", "commit": {"author": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-22T12:55:45Z"}, "committer": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-24T11:30:22Z"}, "message": "Only trigger for one level of macros", "tree": {"sha": "7ac2a0d6dcc5b6e85b748a0240055bd642bdce2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ac2a0d6dcc5b6e85b748a0240055bd642bdce2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "html_url": "https://github.com/rust-lang/rust/commit/f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/comments", "author": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bc5bfce04527acdb7c6ce4d67ca369302c89ec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bc5bfce04527acdb7c6ce4d67ca369302c89ec0", "html_url": "https://github.com/rust-lang/rust/commit/5bc5bfce04527acdb7c6ce4d67ca369302c89ec0"}], "stats": {"total": 45, "additions": 6, "deletions": 39}, "files": [{"sha": "5d6d1018a687557124606b186e96aec63fc1f3a3", "filename": "clippy_lints/src/nonstandard_macro_braces.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs?ref=f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "patch": "@@ -94,7 +94,8 @@ impl EarlyLintPass for MacroBraces {\n \n fn is_offending_macro<'a>(cx: &EarlyContext<'_>, span: Span, mac_braces: &'a MacroBraces) -> Option<MacroInfo<'a>> {\n     if_chain! {\n-        if in_macro(span);\n+        // Make sure we are only one level deep otherwise there are to many FP's\n+        if in_macro(span) && !in_macro(span.ctxt().outer_expn_data().call_site);\n         if let Some((name, braces)) = find_matching_macro(span, &mac_braces.macro_braces);\n         if let Some(snip) = snippet_opt(cx, span.ctxt().outer_expn_data().call_site);\n         // we must check only invocation sites"}, {"sha": "bced8948a02412124fda554499a11a82e99ffc9f", "filename": "tests/ui-toml/nonstandard_macro_braces/clippy.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fclippy.toml?ref=f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "patch": "@@ -3,5 +3,4 @@ standard-macro-braces = [\n     { name = \"quote::quote\", brace = \"{\" },\n     { name = \"eprint\", brace = \"[\" },\n     { name = \"type_pos\", brace = \"[\" },\n-    { name = \"printlnfoo\", brace = \"[\" },\n ]"}, {"sha": "f169fd5ba9c57ec88e0f92e1088af69350d2fd8b", "filename": "tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs?ref=f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "patch": "@@ -34,7 +34,7 @@ macro_rules! type_pos {\n \n macro_rules! printlnfoo {\n     ($thing:expr) => {\n-        println!(\"hey {}\", $thing)\n+        println!(\"{}\", $thing)\n     };\n }\n \n@@ -44,7 +44,7 @@ fn main() {\n     let _ = format![\"ugh {} stop being such a good compiler\", \"hello\"];\n     let _ = quote!(let x = 1;);\n     let _ = quote::quote!(match match match);\n-    let _ = test!();\n+    let _ = test!(); // don't trigger for macro calls inside macros\n     let _ = vec![1,2,3];\n \n     let _ = quote::quote! {true || false};\n@@ -56,7 +56,5 @@ fn main() {\n \n     eprint!(\"test if user config overrides defaults\");\n \n-    println!(\"test if println triggers for printlnfoo\");\n-\n-    printlnfoo!(\"you\");\n+    printlnfoo![\"test if printlnfoo is triggered by println\"];\n }"}, {"sha": "846379def0cdf4671f0888bbffd286f03d3ecafc", "filename": "tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.stderr", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5c3ed4463acfcfd014a40f743b0a4863863e0f8/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr?ref=f5c3ed4463acfcfd014a40f743b0a4863863e0f8", "patch": "@@ -47,25 +47,6 @@ help: consider writing `quote::quote! {match match match}`\n LL |     let _ = quote::quote!(match match match);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: use of irregular braces for `vec!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:18:9\n-   |\n-LL |         vec!{0, 0, 0}\n-   |         ^^^^^^^^^^^^^\n-...\n-LL |     let _ = test!();\n-   |             ------- in this macro invocation\n-   |\n-help: consider writing `vec![0, 0, 0]`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:18:9\n-   |\n-LL |         vec!{0, 0, 0}\n-   |         ^^^^^^^^^^^^^\n-...\n-LL |     let _ = test!();\n-   |             ------- in this macro invocation\n-   = note: this error originates in the macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n error: use of irregular braces for `type_pos!` macro\n   --> $DIR/conf_nonstandard_macro_braces.rs:55:12\n    |\n@@ -90,17 +71,5 @@ help: consider writing `eprint![\"test if user config overrides defaults\"];`\n LL |     eprint!(\"test if user config overrides defaults\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: use of irregular braces for `printlnfoo!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:61:5\n-   |\n-LL |     printlnfoo!(\"you\");\n-   |     ^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider writing `printlnfoo![\"you\"];`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:61:5\n-   |\n-LL |     printlnfoo!(\"you\");\n-   |     ^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 8 previous errors\n+error: aborting due to 6 previous errors\n "}]}