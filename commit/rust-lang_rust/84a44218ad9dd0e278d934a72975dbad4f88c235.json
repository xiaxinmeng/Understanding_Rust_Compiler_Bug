{"sha": "84a44218ad9dd0e278d934a72975dbad4f88c235", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YTQ0MjE4YWQ5ZGQwZTI3OGQ5MzRhNzI5NzVkYmFkNGY4OGMyMzU=", "commit": {"author": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-03T16:54:21Z"}, "committer": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-19T18:40:46Z"}, "message": "Suggest fixes for `use foo::self`", "tree": {"sha": "18c8f9514874def9fd90d694886645acd80c67d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18c8f9514874def9fd90d694886645acd80c67d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84a44218ad9dd0e278d934a72975dbad4f88c235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84a44218ad9dd0e278d934a72975dbad4f88c235", "html_url": "https://github.com/rust-lang/rust/commit/84a44218ad9dd0e278d934a72975dbad4f88c235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84a44218ad9dd0e278d934a72975dbad4f88c235/comments", "author": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "672b272077561ca7b5027a8aff9ea2957c7d4c21", "url": "https://api.github.com/repos/rust-lang/rust/commits/672b272077561ca7b5027a8aff9ea2957c7d4c21", "html_url": "https://github.com/rust-lang/rust/commit/672b272077561ca7b5027a8aff9ea2957c7d4c21"}], "stats": {"total": 116, "additions": 97, "deletions": 19}, "files": [{"sha": "35bba2e8b08dd15d5f78635b6a1e793ca1aaa443", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=84a44218ad9dd0e278d934a72975dbad4f88c235", "patch": "@@ -435,9 +435,24 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 } else {\n                     // Disallow `self`\n                     if source.ident.name == kw::SelfLower {\n+                        let parent = module_path.last();\n+\n+                        let span = match parent {\n+                            // only `::self` from `use foo::self as bar`\n+                            Some(seg) => seg.ident.span.shrink_to_hi().to(source.ident.span),\n+                            None => source.ident.span,\n+                        };\n+                        let span_with_rename = match rename {\n+                            // only `self as bar` from `use foo::self as bar`\n+                            Some(rename) => source.ident.span.to(rename.span),\n+                            None => source.ident.span,\n+                        };\n                         self.r.report_error(\n-                            use_tree.span,\n-                            ResolutionError::SelfImportsOnlyAllowedWithin,\n+                            span,\n+                            ResolutionError::SelfImportsOnlyAllowedWithin {\n+                                root: parent.is_none(),\n+                                span_with_rename,\n+                            },\n                         );\n                     }\n "}, {"sha": "e4f1d7a123d88ca09381af12f0370f3fe67ff77b", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=84a44218ad9dd0e278d934a72975dbad4f88c235", "patch": "@@ -301,13 +301,40 @@ impl<'a> Resolver<'a> {\n                 }\n                 err\n             }\n-            ResolutionError::SelfImportsOnlyAllowedWithin => struct_span_err!(\n-                self.session,\n-                span,\n-                E0429,\n-                \"{}\",\n-                \"`self` imports are only allowed within a { } list\"\n-            ),\n+            ResolutionError::SelfImportsOnlyAllowedWithin { root, span_with_rename } => {\n+                let mut err = struct_span_err!(\n+                    self.session,\n+                    span,\n+                    E0429,\n+                    \"{}\",\n+                    \"`self` imports are only allowed within a { } list\"\n+                );\n+\n+                // None of the suggestions below would help with a case like `use self`.\n+                if !root {\n+                    // use foo::bar::self        -> foo::bar\n+                    // use foo::bar::self as abc -> foo::bar as abc\n+                    err.span_suggestion(\n+                        span,\n+                        \"Remove `::self`..\",\n+                        \"\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n+\n+                    // use foo::bar::self        -> foo::bar::{self}\n+                    // use foo::bar::self as abc -> foo::bar::{self as abc}\n+                    let braces = vec![\n+                        (span_with_rename.shrink_to_lo(), \"{\".to_string()),\n+                        (span_with_rename.shrink_to_hi(), \"}\".to_string()),\n+                    ];\n+                    err.multipart_suggestion(\n+                        \"..or add braces around `self`\",\n+                        braces,\n+                        Applicability::MachineApplicable,\n+                    );\n+                }\n+                err\n+            }\n             ResolutionError::SelfImportCanOnlyAppearOnceInTheList => {\n                 let mut err = struct_span_err!(\n                     self.session,"}, {"sha": "bfb7f081fc33336ebb9d12c5e0cd8539dae21b70", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=84a44218ad9dd0e278d934a72975dbad4f88c235", "patch": "@@ -194,7 +194,7 @@ enum ResolutionError<'a> {\n     /// Error E0426: use of undeclared label.\n     UndeclaredLabel(&'a str, Option<Symbol>),\n     /// Error E0429: `self` imports are only allowed within a `{ }` list.\n-    SelfImportsOnlyAllowedWithin,\n+    SelfImportsOnlyAllowedWithin { root: bool, span_with_rename: Span },\n     /// Error E0430: `self` import can only appear once in the list.\n     SelfImportCanOnlyAppearOnceInTheList,\n     /// Error E0431: `self` import can only appear in an import list with a non-empty prefix."}, {"sha": "457782583a57612abc6c439490db3f816c10f4eb", "filename": "src/test/ui/error-codes/E0429.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Ferror-codes%2FE0429.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Ferror-codes%2FE0429.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0429.stderr?ref=84a44218ad9dd0e278d934a72975dbad4f88c235", "patch": "@@ -1,8 +1,17 @@\n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/E0429.rs:1:5\n+  --> $DIR/E0429.rs:1:13\n    |\n LL | use std::fmt::self;\n-   |     ^^^^^^^^^^^^^^\n+   |             ^^^^^^\n+   |\n+help: Remove `::self`..\n+   |\n+LL | use std::fmt;\n+   |            --\n+help: ..or add braces around `self`\n+   |\n+LL | use std::fmt::{self};\n+   |               ^    ^\n \n error: aborting due to previous error\n "}, {"sha": "9d9a785387f064370bc9f7bd305c4be807e6e060", "filename": "src/test/ui/issues/issue-45829/import-self.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45829%2Fimport-self.stderr?ref=84a44218ad9dd0e278d934a72975dbad4f88c235", "patch": "@@ -5,10 +5,19 @@ LL | use foo as self;\n    |            ^^^^ expected identifier, found keyword\n \n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/import-self.rs:12:5\n+  --> $DIR/import-self.rs:12:8\n    |\n LL | use foo::self;\n-   |     ^^^^^^^^^\n+   |        ^^^^^^\n+   |\n+help: Remove `::self`..\n+   |\n+LL | use foo;\n+   |       --\n+help: ..or add braces around `self`\n+   |\n+LL | use foo::{self};\n+   |          ^    ^\n \n error[E0255]: the name `foo` is defined multiple times\n   --> $DIR/import-self.rs:6:11"}, {"sha": "501d14be521778bf0227ba90735f8fbb0e3b16f8", "filename": "src/test/ui/use/use-keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Fuse%2Fuse-keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Fuse%2Fuse-keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-keyword.stderr?ref=84a44218ad9dd0e278d934a72975dbad4f88c235", "patch": "@@ -2,7 +2,7 @@ error[E0429]: `self` imports are only allowed within a { } list\n   --> $DIR/use-keyword.rs:6:13\n    |\n LL |         use self as A;\n-   |             ^^^^^^^^^\n+   |             ^^^^\n \n error[E0432]: unresolved import `super`\n   --> $DIR/use-keyword.rs:8:13"}, {"sha": "9d8532967980ca019b9c133e249e63e1870383de", "filename": "src/test/ui/use/use-mod/use-mod-4.stderr", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84a44218ad9dd0e278d934a72975dbad4f88c235/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr?ref=84a44218ad9dd0e278d934a72975dbad4f88c235", "patch": "@@ -1,14 +1,32 @@\n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/use-mod-4.rs:1:5\n+  --> $DIR/use-mod-4.rs:1:8\n    |\n LL | use foo::self;\n-   |     ^^^^^^^^^\n+   |        ^^^^^^\n+   |\n+help: Remove `::self`..\n+   |\n+LL | use foo;\n+   |       --\n+help: ..or add braces around `self`\n+   |\n+LL | use foo::{self};\n+   |          ^    ^\n \n error[E0429]: `self` imports are only allowed within a { } list\n-  --> $DIR/use-mod-4.rs:4:5\n+  --> $DIR/use-mod-4.rs:4:13\n    |\n LL | use std::mem::self;\n-   |     ^^^^^^^^^^^^^^\n+   |             ^^^^^^\n+   |\n+help: Remove `::self`..\n+   |\n+LL | use std::mem;\n+   |            --\n+help: ..or add braces around `self`\n+   |\n+LL | use std::mem::{self};\n+   |               ^    ^\n \n error[E0432]: unresolved import `foo`\n   --> $DIR/use-mod-4.rs:1:5"}]}