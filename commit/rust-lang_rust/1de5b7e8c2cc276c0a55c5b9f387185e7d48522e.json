{"sha": "1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZTViN2U4YzJjYzI3NmMwYTU1YzViOWYzODcxODVlN2Q0ODUyMmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-16T13:32:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-16T13:32:20Z"}, "message": "Auto merge of #35617 - jseyfried:fix_unused_cfg_attr_path, r=eddyb\n\nFix incorrect unused import warnings on `cfg_attr`ed `path` attributes\n\nFixes #35584.\nr? @eddyb", "tree": {"sha": "c5e880b3cb98141bce58c4e52be13fe3efbfa48b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5e880b3cb98141bce58c4e52be13fe3efbfa48b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "html_url": "https://github.com/rust-lang/rust/commit/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e25542cb02d946959517ebb68e2f7b1318817237", "url": "https://api.github.com/repos/rust-lang/rust/commits/e25542cb02d946959517ebb68e2f7b1318817237", "html_url": "https://github.com/rust-lang/rust/commit/e25542cb02d946959517ebb68e2f7b1318817237"}, {"sha": "4943e96a0c62338a15ad4cc8533d3d4e78ace5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4943e96a0c62338a15ad4cc8533d3d4e78ace5b0", "html_url": "https://github.com/rust-lang/rust/commit/4943e96a0c62338a15ad4cc8533d3d4e78ace5b0"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "46124d0f97359e65338234f0a61d81b7b9eb8455", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "patch": "@@ -19,6 +19,7 @@\n use rustc::lint;\n use rustc::session::Session;\n use syntax::ast::*;\n+use syntax::attr;\n use syntax::parse::token::{self, keywords};\n use syntax::visit::{self, Visitor};\n use syntax_pos::Span;\n@@ -168,6 +169,10 @@ impl<'a> Visitor for AstValidator<'a> {\n                     }\n                 }\n             }\n+            ItemKind::Mod(_) => {\n+                // Ensure that `path` attributes on modules are recorded as used (c.f. #35584).\n+                attr::first_attr_value_str_by_name(&item.attrs, \"path\");\n+            }\n             _ => {}\n         }\n "}, {"sha": "7d799850a651ebacc3638ca79b55f8c994ec5273", "filename": "src/test/compile-fail/cfg_attr_path.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e/src%2Ftest%2Fcompile-fail%2Fcfg_attr_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5b7e8c2cc276c0a55c5b9f387185e7d48522e/src%2Ftest%2Fcompile-fail%2Fcfg_attr_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcfg_attr_path.rs?ref=1de5b7e8c2cc276c0a55c5b9f387185e7d48522e", "patch": "@@ -8,5 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[cfg_attr(all(), path = \"nonexistent_file.rs\")] mod foo;\n-//~^ ERROR nonexistent_file.rs\n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+#![deny(unused_attributes)] // c.f #35584\n+\n+mod auxiliary {\n+    #[cfg_attr(any(), path = \"nonexistent_file.rs\")] pub mod namespaced_enums;\n+    #[cfg_attr(all(), path = \"namespaced_enums.rs\")] pub mod nonexistent_file;\n+}\n+\n+#[rustc_error]\n+fn main() { //~ ERROR compilation successful\n+    let _ = auxiliary::namespaced_enums::Foo::A;\n+    let _ = auxiliary::nonexistent_file::Foo::A;\n+}"}]}