{"sha": "2d0195986c6695c63db73ddf20bcd69a9642a189", "node_id": "C_kwDOAAsO6NoAKDJkMDE5NTk4NmM2Njk1YzYzZGI3M2RkZjIwYmNkNjlhOTY0MmExODk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-30T17:33:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-30T17:33:33Z"}, "message": "Auto merge of #9058 - xFrednet:changelog-1-62, r=flip1995\n\nChangelog for Rust 1.62 :t-rex:\n\nThis special artifact was just discovered. The artifact details changes to something called Clippy. Presently and from the context, we were unable to determine what this is supposed to be. All we know, is that it seems to have an active community around it which supports it. The members sometimes use paper clips as a secret symbol for Clippy.\n\nI want to donate this artifact to the rust-lang organization, to have it displayed to the public.\n\n---\n\nchangelog: none", "tree": {"sha": "82a228496900e658d8fb088cd0061cca4026800b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82a228496900e658d8fb088cd0061cca4026800b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d0195986c6695c63db73ddf20bcd69a9642a189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0195986c6695c63db73ddf20bcd69a9642a189", "html_url": "https://github.com/rust-lang/rust/commit/2d0195986c6695c63db73ddf20bcd69a9642a189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d0195986c6695c63db73ddf20bcd69a9642a189/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7e5dab6c38aa0dc8aa93dd56734b3ba6e32063f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e5dab6c38aa0dc8aa93dd56734b3ba6e32063f", "html_url": "https://github.com/rust-lang/rust/commit/d7e5dab6c38aa0dc8aa93dd56734b3ba6e32063f"}, {"sha": "c5820022d5a6e0c4d84f9ead8c8fcd6241f49dae", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5820022d5a6e0c4d84f9ead8c8fcd6241f49dae", "html_url": "https://github.com/rust-lang/rust/commit/c5820022d5a6e0c4d84f9ead8c8fcd6241f49dae"}], "stats": {"total": 161, "additions": 159, "deletions": 2}, "files": [{"sha": "bb1402baf9ff2e2c594efe4c4cad463dc3cacca4", "filename": "CHANGELOG.md", "status": "modified", "additions": 159, "deletions": 2, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/2d0195986c6695c63db73ddf20bcd69a9642a189/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/2d0195986c6695c63db73ddf20bcd69a9642a189/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=2d0195986c6695c63db73ddf20bcd69a9642a189", "patch": "@@ -6,11 +6,168 @@ document.\n \n ## Unreleased / In Rust Nightly\n \n-[d0cf3481...master](https://github.com/rust-lang/rust-clippy/compare/d0cf3481...master)\n+[7c21f91b...master](https://github.com/rust-lang/rust-clippy/compare/7c21f91b...master)\n+\n+## Rust 1.62\n+\n+Current stable, released 2022-06-30\n+\n+[d0cf3481...7c21f91b](https://github.com/rust-lang/rust-clippy/compare/d0cf3481...7c21f91b)\n+\n+### New Lints\n+\n+* [`large_include_file`]\n+  [#8727](https://github.com/rust-lang/rust-clippy/pull/8727)\n+* [`cast_abs_to_unsigned`]\n+  [#8635](https://github.com/rust-lang/rust-clippy/pull/8635)\n+* [`err_expect`]\n+  [#8606](https://github.com/rust-lang/rust-clippy/pull/8606)\n+* [`unnecessary_owned_empty_strings`]\n+  [#8660](https://github.com/rust-lang/rust-clippy/pull/8660)\n+* [`empty_structs_with_brackets`]\n+  [#8594](https://github.com/rust-lang/rust-clippy/pull/8594)\n+* [`crate_in_macro_def`]\n+  [#8576](https://github.com/rust-lang/rust-clippy/pull/8576)\n+* [`needless_option_take`]\n+  [#8665](https://github.com/rust-lang/rust-clippy/pull/8665)\n+* [`bytes_count_to_len`]\n+  [#8711](https://github.com/rust-lang/rust-clippy/pull/8711)\n+* [`is_digit_ascii_radix`]\n+  [#8624](https://github.com/rust-lang/rust-clippy/pull/8624)\n+* [`await_holding_invalid_type`]\n+  [#8707](https://github.com/rust-lang/rust-clippy/pull/8707)\n+* [`trim_split_whitespace`]\n+  [#8575](https://github.com/rust-lang/rust-clippy/pull/8575)\n+* [`pub_use`]\n+  [#8670](https://github.com/rust-lang/rust-clippy/pull/8670)\n+* [`format_push_string`]\n+  [#8626](https://github.com/rust-lang/rust-clippy/pull/8626)\n+* [`empty_drop`]\n+  [#8571](https://github.com/rust-lang/rust-clippy/pull/8571)\n+* [`drop_non_drop`]\n+  [#8630](https://github.com/rust-lang/rust-clippy/pull/8630)\n+* [`forget_non_drop`]\n+  [#8630](https://github.com/rust-lang/rust-clippy/pull/8630)\n+\n+### Moves and Deprecations\n+\n+* Move [`only_used_in_recursion`] to `nursery` (now allow-by-default)\n+  [#8783](https://github.com/rust-lang/rust-clippy/pull/8783)\n+* Move [`stable_sort_primitive`] to `pedantic` (now allow-by-default)\n+  [#8716](https://github.com/rust-lang/rust-clippy/pull/8716)\n+\n+### Enhancements\n+\n+* Remove overlap between [`manual_split_once`] and [`needless_splitn`]\n+  [#8631](https://github.com/rust-lang/rust-clippy/pull/8631)\n+* [`map_identity`]: Now checks for needless `map_err`\n+  [#8487](https://github.com/rust-lang/rust-clippy/pull/8487)\n+* [`extra_unused_lifetimes`]: Now checks for impl lifetimes\n+  [#8737](https://github.com/rust-lang/rust-clippy/pull/8737)\n+* [`cast_possible_truncation`]: Now catches more cases with larger shift or divide operations\n+  [#8687](https://github.com/rust-lang/rust-clippy/pull/8687)\n+* [`identity_op`]: Now checks for modulo expressions\n+  [#8519](https://github.com/rust-lang/rust-clippy/pull/8519)\n+* [`panic`]: No longer lint in constant context\n+  [#8592](https://github.com/rust-lang/rust-clippy/pull/8592)\n+* [`manual_split_once`]: Now lints manual iteration of `splitn`\n+  [#8717](https://github.com/rust-lang/rust-clippy/pull/8717)\n+* [`self_named_module_files`], [`mod_module_files`]: Now handle relative module paths\n+  [#8611](https://github.com/rust-lang/rust-clippy/pull/8611)\n+* [`unsound_collection_transmute`]: Now has better size and alignment checks\n+  [#8648](https://github.com/rust-lang/rust-clippy/pull/8648)\n+* [`unnested_or_patterns`]: Ignore cases, where the suggestion would be longer\n+  [#8619](https://github.com/rust-lang/rust-clippy/pull/8619)\n+\n+### False Positive Fixes\n+\n+* [`rest_pat_in_fully_bound_structs`]: Now ignores structs marked with `#[non_exhaustive]`\n+  [#8690](https://github.com/rust-lang/rust-clippy/pull/8690)\n+* [`needless_late_init`]: No longer lints `if let` statements, `let mut` bindings or instances that\n+  changes the drop order significantly\n+  [#8617](https://github.com/rust-lang/rust-clippy/pull/8617)\n+* [`unnecessary_cast`]: No longer lints to casts to aliased or non-primitive types\n+  [#8596](https://github.com/rust-lang/rust-clippy/pull/8596)\n+* [`init_numbered_fields`]: No longer lints type aliases\n+  [#8780](https://github.com/rust-lang/rust-clippy/pull/8780)\n+* [`needless_option_as_deref`]: No longer lints for `as_deref_mut` on `Option` values that can't be moved\n+  [#8646](https://github.com/rust-lang/rust-clippy/pull/8646)\n+* [`mistyped_literal_suffixes`]: Now ignores float literals without an exponent\n+  [#8742](https://github.com/rust-lang/rust-clippy/pull/8742)\n+* [`undocumented_unsafe_blocks`]: Now ignores unsafe blocks from proc-macros and works better for sub-expressions\n+  [#8450](https://github.com/rust-lang/rust-clippy/pull/8450)\n+* [`same_functions_in_if_condition`]: Now allows different constants, even if they have the same value\n+  [#8673](https://github.com/rust-lang/rust-clippy/pull/8673)\n+* [`needless_match`]: Now checks for more complex types and ignores type coercion\n+  [#8549](https://github.com/rust-lang/rust-clippy/pull/8549)\n+* [`assertions_on_constants`]: Now ignores constants from `cfg!` macros\n+  [#8614](https://github.com/rust-lang/rust-clippy/pull/8614)\n+* [`indexing_slicing`]: Fix false positives with constant indices in\n+  [#8588](https://github.com/rust-lang/rust-clippy/pull/8588)\n+* [`iter_with_drain`]: Now ignores iterator references\n+  [#8668](https://github.com/rust-lang/rust-clippy/pull/8668)\n+* [`useless_attribute`]: Now allows [`redundant_pub_crate`] on `use` items\n+  [#8743](https://github.com/rust-lang/rust-clippy/pull/8743)\n+* [`cast_ptr_alignment`]: Now ignores expressions, when used for unaligned reads and writes\n+  [#8632](https://github.com/rust-lang/rust-clippy/pull/8632)\n+* [`wrong_self_convention`]: Now allows `&mut self` and no self as arguments for `is_*` methods\n+  [#8738](https://github.com/rust-lang/rust-clippy/pull/8738)\n+* [`mut_from_ref`]: Only lint in unsafe code\n+  [#8647](https://github.com/rust-lang/rust-clippy/pull/8647)\n+* [`redundant_pub_crate`]: Now allows macro exports\n+  [#8736](https://github.com/rust-lang/rust-clippy/pull/8736)\n+* [`needless_match`]: Ignores cases where the else block expression is different\n+  [#8700](https://github.com/rust-lang/rust-clippy/pull/8700)\n+* [`transmute_int_to_char`]: Now allows transmutations in `const` code\n+  [#8610](https://github.com/rust-lang/rust-clippy/pull/8610)\n+* [`manual_non_exhaustive`]: Ignores cases, where the enum value is used\n+  [#8645](https://github.com/rust-lang/rust-clippy/pull/8645)\n+* [`redundant_closure`]: Now ignores coerced closure\n+  [#8431](https://github.com/rust-lang/rust-clippy/pull/8431)\n+* [`identity_op`]: Is now ignored in cases where extra brackets would be needed\n+  [#8730](https://github.com/rust-lang/rust-clippy/pull/8730)\n+* [`let_unit_value`]: Now ignores cases which are used for type inference\n+  [#8563](https://github.com/rust-lang/rust-clippy/pull/8563)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`manual_split_once`]: Fixed incorrect suggestions for single result accesses\n+  [#8631](https://github.com/rust-lang/rust-clippy/pull/8631)\n+* [`bytes_nth`]: Fix typos in the diagnostic message\n+  [#8403](https://github.com/rust-lang/rust-clippy/pull/8403)\n+* [`mistyped_literal_suffixes`]: Now suggests the correct integer types\n+  [#8742](https://github.com/rust-lang/rust-clippy/pull/8742)\n+* [`unnecessary_to_owned`]: Fixed suggestion based on the configured msrv\n+  [#8692](https://github.com/rust-lang/rust-clippy/pull/8692)\n+* [`single_element_loop`]: Improve lint for Edition 2021 arrays\n+  [#8616](https://github.com/rust-lang/rust-clippy/pull/8616)\n+* [`manual_bits`]: Now includes a cast for proper type conversion, when needed\n+  [#8677](https://github.com/rust-lang/rust-clippy/pull/8677)\n+* [`option_map_unit_fn`], [`result_map_unit_fn`]: Fix some incorrect suggestions\n+  [#8584](https://github.com/rust-lang/rust-clippy/pull/8584)\n+* [`collapsible_else_if`]: Add whitespace in suggestion\n+  [#8729](https://github.com/rust-lang/rust-clippy/pull/8729)\n+* [`transmute_bytes_to_str`]: Now suggest `from_utf8_unchecked` in `const` context\n+  [#8612](https://github.com/rust-lang/rust-clippy/pull/8612)\n+* [`map_clone`]: Improve message and suggestion based on the msrv\n+  [#8688](https://github.com/rust-lang/rust-clippy/pull/8688)\n+* [`needless_late_init`]: Now shows the `let` statement where it was first initialized\n+  [#8779](https://github.com/rust-lang/rust-clippy/pull/8779)\n+\n+### ICE Fixes\n+\n+* [`only_used_in_recursion`]\n+  [#8691](https://github.com/rust-lang/rust-clippy/pull/8691)\n+* [`cast_slice_different_sizes`]\n+  [#8720](https://github.com/rust-lang/rust-clippy/pull/8720)\n+* [`iter_overeager_cloned`]\n+  [#8602](https://github.com/rust-lang/rust-clippy/pull/8602)\n+* [`undocumented_unsafe_blocks`]\n+  [#8686](https://github.com/rust-lang/rust-clippy/pull/8686)\n \n ## Rust 1.61\n \n-Current stable, released 2022-05-19\n+Released 2022-05-19\n \n [57b3c4b...d0cf3481](https://github.com/rust-lang/rust-clippy/compare/57b3c4b...d0cf3481)\n "}]}