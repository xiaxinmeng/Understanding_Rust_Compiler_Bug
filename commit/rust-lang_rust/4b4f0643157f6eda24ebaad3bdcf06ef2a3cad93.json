{"sha": "4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNGYwNjQzMTU3ZjZlZGEyNGViYWFkM2JkY2YwNmVmMmEzY2FkOTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-15T11:02:25Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-15T11:02:25Z"}, "message": "syntax: lexer doesn't need to store the src length", "tree": {"sha": "c351a436863e8b2f670f545b4ab2c48d2a6c19cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c351a436863e8b2f670f545b4ab2c48d2a6c19cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93", "html_url": "https://github.com/rust-lang/rust/commit/4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2319c2d1ba81cf85aaadd809afc1367f7b217757", "url": "https://api.github.com/repos/rust-lang/rust/commits/2319c2d1ba81cf85aaadd809afc1367f7b217757", "html_url": "https://github.com/rust-lang/rust/commit/2319c2d1ba81cf85aaadd809afc1367f7b217757"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "d5c1c776c0ec3f6935540133ac0c464a562df29b", "filename": "src/librustsyntax/parse/lexer.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93/src%2Flibrustsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93/src%2Flibrustsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Flexer.rs?ref=4b4f0643157f6eda24ebaad3bdcf06ef2a3cad93", "patch": "@@ -7,7 +7,6 @@ export reader, new_reader, next_token, is_whitespace;\n type reader = @{\n     span_diagnostic: diagnostic::span_handler,\n     src: @str,\n-    len: uint,\n     mut col: uint,\n     mut pos: uint,\n     mut curr: char,\n@@ -25,12 +24,12 @@ impl reader for reader {\n         ret str::slice(*self.src, start - 1u, self.pos - 1u);\n     }\n     fn next() -> char {\n-        if self.pos < self.len {\n+        if self.pos < (*self.src).len() {\n             ret str::char_at(*self.src, self.pos);\n         } else { ret -1 as char; }\n     }\n     fn bump() {\n-        if self.pos < self.len {\n+        if self.pos < (*self.src).len() {\n             self.col += 1u;\n             self.chpos += 1u;\n             if self.curr == '\\n' {\n@@ -59,12 +58,11 @@ impl reader for reader {\n fn new_reader(span_diagnostic: diagnostic::span_handler,\n               filemap: codemap::filemap,\n               itr: @interner::interner<str>) -> reader {\n-    let r = @{span_diagnostic: span_diagnostic,\n-              src: filemap.src, len: str::len(*filemap.src),\n+    let r = @{span_diagnostic: span_diagnostic, src: filemap.src,\n               mut col: 0u, mut pos: 0u, mut curr: -1 as char,\n               mut chpos: filemap.start_pos.ch, mut strs: [],\n               filemap: filemap, interner: itr};\n-    if r.pos < r.len {\n+    if r.pos < (*filemap.src).len() {\n         let next = str::char_range_at(*r.src, r.pos);\n         r.pos = next.next;\n         r.curr = next.ch;"}]}