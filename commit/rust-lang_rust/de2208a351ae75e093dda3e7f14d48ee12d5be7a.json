{"sha": "de2208a351ae75e093dda3e7f14d48ee12d5be7a", "node_id": "C_kwDOAAsO6NoAKGRlMjIwOGEzNTFhZTc1ZTA5M2RkYTNlN2YxNGQ0OGVlMTJkNWJlN2E", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-21T23:48:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-21T23:48:24Z"}, "message": "Auto merge of #7997 - surechen:Fixes_7915, r=giraffate\n\nFixes shadow_same's false positive for #7915\n\nFix shadow_same's false positive for async function's params(Fixes #7915):\n\nExample Code:\n```rust\n#![deny(clippy::shadow_same)]\n\npub async fn foo(_a: i32) {\n}\n```\nOutput:\n```\nerror: `_a` is shadowed by itself in `_a\n```\n\nHir:\n```rust\npub async fn foo(_a: i32)\n ->\n     /*impl Trait*/ #[lang = \"from_generator\"](move |mut _task_context|\n                                                   {\n                                                       let _a = _a;\n                                                       { let _t = { }; _t }\n                                                   })\n```\n\nSkip checking async function's params.\n\nchangelog: Fix shadow_same's false positive for async function's params", "tree": {"sha": "b1911e64722d12a92073c6d0581c5e6d2fa3ac99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1911e64722d12a92073c6d0581c5e6d2fa3ac99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de2208a351ae75e093dda3e7f14d48ee12d5be7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de2208a351ae75e093dda3e7f14d48ee12d5be7a", "html_url": "https://github.com/rust-lang/rust/commit/de2208a351ae75e093dda3e7f14d48ee12d5be7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de2208a351ae75e093dda3e7f14d48ee12d5be7a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32048ebea3bfefd7bbe4d9f8e030a189c93122d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/32048ebea3bfefd7bbe4d9f8e030a189c93122d5", "html_url": "https://github.com/rust-lang/rust/commit/32048ebea3bfefd7bbe4d9f8e030a189c93122d5"}, {"sha": "846c0bef075922032ea21a42750fdadfe2542e5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/846c0bef075922032ea21a42750fdadfe2542e5a", "html_url": "https://github.com/rust-lang/rust/commit/846c0bef075922032ea21a42750fdadfe2542e5a"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "f6880af0cab28a068709a113ab03b81479db97c3", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/de2208a351ae75e093dda3e7f14d48ee12d5be7a/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2208a351ae75e093dda3e7f14d48ee12d5be7a/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=de2208a351ae75e093dda3e7f14d48ee12d5be7a", "patch": "@@ -105,11 +105,16 @@ impl<'tcx> LateLintPass<'tcx> for Shadow {\n             PatKind::Binding(_, hir_id, ident, _) => (hir_id, ident),\n             _ => return,\n         };\n+\n+        if pat.span.desugaring_kind().is_some() {\n+            return;\n+        }\n+\n         if ident.span.from_expansion() || ident.span.is_dummy() {\n             return;\n         }\n-        let HirId { owner, local_id } = id;\n \n+        let HirId { owner, local_id } = id;\n         // get (or insert) the list of items for this owner and symbol\n         let data = self.bindings.last_mut().unwrap();\n         let items_with_name = data.entry(ident.name).or_default();"}, {"sha": "06f6949b66f5abbd50a2b59efea216d6d9e1413f", "filename": "tests/ui/shadow.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de2208a351ae75e093dda3e7f14d48ee12d5be7a/tests%2Fui%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2208a351ae75e093dda3e7f14d48ee12d5be7a/tests%2Fui%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.rs?ref=de2208a351ae75e093dda3e7f14d48ee12d5be7a", "patch": "@@ -79,4 +79,10 @@ fn question_mark() -> Option<()> {\n     None\n }\n \n+pub async fn foo1(_a: i32) {}\n+\n+pub async fn foo2(_a: i32, _b: i64) {\n+    let _b = _a;\n+}\n+\n fn main() {}"}, {"sha": "dcc7d4e6b2ff90adf0c8e463d4cbb0d285deafc0", "filename": "tests/ui/shadow.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/de2208a351ae75e093dda3e7f14d48ee12d5be7a/tests%2Fui%2Fshadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de2208a351ae75e093dda3e7f14d48ee12d5be7a/tests%2Fui%2Fshadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.stderr?ref=de2208a351ae75e093dda3e7f14d48ee12d5be7a", "patch": "@@ -241,5 +241,17 @@ note: previous binding is here\n LL |     let _ = |[x]: [u32; 1]| {\n    |               ^\n \n-error: aborting due to 20 previous errors\n+error: `_b` shadows a previous, unrelated binding\n+  --> $DIR/shadow.rs:85:9\n+   |\n+LL |     let _b = _a;\n+   |         ^^\n+   |\n+note: previous binding is here\n+  --> $DIR/shadow.rs:84:28\n+   |\n+LL | pub async fn foo2(_a: i32, _b: i64) {\n+   |                            ^^\n+\n+error: aborting due to 21 previous errors\n "}]}