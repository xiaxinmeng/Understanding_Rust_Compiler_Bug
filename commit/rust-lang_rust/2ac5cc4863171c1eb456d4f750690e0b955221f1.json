{"sha": "2ac5cc4863171c1eb456d4f750690e0b955221f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYzVjYzQ4NjMxNzFjMWViNDU2ZDRmNzUwNjkwZTBiOTU1MjIxZjE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-08-20T11:28:11Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-08-20T11:28:11Z"}, "message": "Fix (and extend) src/test/run-pass/foreign-call-no-runtime.rs\n\nWhile going over various problems signaled by valgrind when running\n`make check` on a build configured with `--enable-valgrind`, I\ndiscovered a bug in this test case.\n\nNamely, the test case was previously creating an `i32` (originally an\n`int` aka `isize` but then we changed the name and the fallback\nrules), and then reading from a `*const isize`. Valgrind rightly\ncomplains about this, since we are reading an 8 byte value on 64-bit\nsystems, but in principle only 4 bytes have been initialized.\n\n(I wish this was the only valgrind unclean test, but unfortunately\nthere are a bunch more. This was just the easiest/first one that I\ndissected.)", "tree": {"sha": "115ee6514fb0e6c30c8e1e8844973fd0f4f8905a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/115ee6514fb0e6c30c8e1e8844973fd0f4f8905a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ac5cc4863171c1eb456d4f750690e0b955221f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ac5cc4863171c1eb456d4f750690e0b955221f1", "html_url": "https://github.com/rust-lang/rust/commit/2ac5cc4863171c1eb456d4f750690e0b955221f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ac5cc4863171c1eb456d4f750690e0b955221f1/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a91f19f35662f83cdb20ae8445c941aaff33fc18", "url": "https://api.github.com/repos/rust-lang/rust/commits/a91f19f35662f83cdb20ae8445c941aaff33fc18", "html_url": "https://github.com/rust-lang/rust/commit/a91f19f35662f83cdb20ae8445c941aaff33fc18"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "f4792c212165de330540a7ee4f657189a53b787c", "filename": "src/test/run-pass/foreign-call-no-runtime.rs", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2ac5cc4863171c1eb456d4f750690e0b955221f1/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ac5cc4863171c1eb456d4f750690e0b955221f1/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs?ref=2ac5cc4863171c1eb456d4f750690e0b955221f1", "patch": "@@ -25,15 +25,39 @@ extern {\n pub fn main() {\n     unsafe {\n         thread::spawn(move|| {\n-            let i = 100;\n-            rust_dbg_call(callback, mem::transmute(&i));\n-        }).join();\n+            let i: isize = 100;\n+            rust_dbg_call(callback_isize, mem::transmute(&i));\n+        }).join().unwrap();\n+\n+        thread::spawn(move|| {\n+            let i: i32 = 100;\n+            rust_dbg_call(callback_i32, mem::transmute(&i));\n+        }).join().unwrap();\n+\n+        thread::spawn(move|| {\n+            let i: i64 = 100;\n+            rust_dbg_call(callback_i64, mem::transmute(&i));\n+        }).join().unwrap();\n     }\n }\n \n-extern fn callback(data: libc::uintptr_t) {\n+extern fn callback_isize(data: libc::uintptr_t) {\n     unsafe {\n         let data: *const isize = mem::transmute(data);\n         assert_eq!(*data, 100);\n     }\n }\n+\n+extern fn callback_i64(data: libc::uintptr_t) {\n+    unsafe {\n+        let data: *const i64 = mem::transmute(data);\n+        assert_eq!(*data, 100);\n+    }\n+}\n+\n+extern fn callback_i32(data: libc::uintptr_t) {\n+    unsafe {\n+        let data: *const i32 = mem::transmute(data);\n+        assert_eq!(*data, 100);\n+    }\n+}"}]}