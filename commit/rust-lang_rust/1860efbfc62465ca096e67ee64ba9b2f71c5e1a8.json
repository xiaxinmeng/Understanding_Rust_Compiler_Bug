{"sha": "1860efbfc62465ca096e67ee64ba9b2f71c5e1a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NjBlZmJmYzYyNDY1Y2EwOTZlNjdlZTY0YmE5YjJmNzFjNWUxYTg=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2013-08-19T22:53:07Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2013-08-22T07:12:42Z"}, "message": "On Windows, use g++ for linking, instead of gcc.\nThis is required in order to produce linked modules that perform correct registration of unwind tables.", "tree": {"sha": "dd995aa3559b9b6c027de729844f3aed6b962c10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd995aa3559b9b6c027de729844f3aed6b962c10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1860efbfc62465ca096e67ee64ba9b2f71c5e1a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1860efbfc62465ca096e67ee64ba9b2f71c5e1a8", "html_url": "https://github.com/rust-lang/rust/commit/1860efbfc62465ca096e67ee64ba9b2f71c5e1a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1860efbfc62465ca096e67ee64ba9b2f71c5e1a8/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1132496dddbdd88f321a7919eec3d65136b3f75", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1132496dddbdd88f321a7919eec3d65136b3f75", "html_url": "https://github.com/rust-lang/rust/commit/f1132496dddbdd88f321a7919eec3d65136b3f75"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "c66cc2bf991b5c51699007f13ffcf4df2517692d", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1860efbfc62465ca096e67ee64ba9b2f71c5e1a8/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1860efbfc62465ca096e67ee64ba9b2f71c5e1a8/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=1860efbfc62465ca096e67ee64ba9b2f71c5e1a8", "patch": "@@ -822,9 +822,10 @@ pub fn link_binary(sess: Session,\n     // In the future, FreeBSD will use clang as default compiler.\n     // It would be flexible to use cc (system's default C compiler)\n     // instead of hard-coded gcc.\n-    // For win32, there is no cc command,\n-    // so we add a condition to make it use gcc.\n-    let cc_prog: ~str = match sess.opts.linker {\n+    // For win32, there is no cc command, so we add a condition to make it use g++.\n+    // We use g++ rather than gcc because it automatically adds linker options required\n+    // for generation of dll modules that correctly register stack unwind tables.\n+    match sess.opts.linker {\n         Some(ref linker) => linker.to_str(),\n         None => match sess.targ_cfg.os {\n             session::os_android =>\n@@ -837,7 +838,7 @@ pub fn link_binary(sess: Session,\n                                     (--android-cross-path)\")\n                     }\n                 },\n-            session::os_win32 => ~\"gcc\",\n+            session::os_win32 => ~\"g++\",\n             _ => ~\"cc\"\n         }\n     };"}]}