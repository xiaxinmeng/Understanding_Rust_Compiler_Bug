{"sha": "585f5f7f794c5f181ff351cb82a4c692cf61caa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NWY1ZjdmNzk0YzVmMTgxZmYzNTFjYjgyYTRjNjkyY2Y2MWNhYTM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-12T03:54:05Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-15T03:15:42Z"}, "message": "add IteratorUtil to the prelude", "tree": {"sha": "68895a12b0ada601a33a59760686c89b2f0be9fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68895a12b0ada601a33a59760686c89b2f0be9fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/585f5f7f794c5f181ff351cb82a4c692cf61caa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/585f5f7f794c5f181ff351cb82a4c692cf61caa3", "html_url": "https://github.com/rust-lang/rust/commit/585f5f7f794c5f181ff351cb82a4c692cf61caa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/585f5f7f794c5f181ff351cb82a4c692cf61caa3/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38e05747b5cf75671b7fb7c634eba8fe56f9eb39", "url": "https://api.github.com/repos/rust-lang/rust/commits/38e05747b5cf75671b7fb7c634eba8fe56f9eb39", "html_url": "https://github.com/rust-lang/rust/commit/38e05747b5cf75671b7fb7c634eba8fe56f9eb39"}], "stats": {"total": 180, "additions": 6, "deletions": 174}, "files": [{"sha": "6d3e83a810542f2d7305a2886824e1cddd70d082", "filename": "doc/tutorial-tasks.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/doc%2Ftutorial-tasks.md", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/doc%2Ftutorial-tasks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-tasks.md?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -351,7 +351,6 @@ a single large vector of floats. Each task needs the full vector to perform its\n # use std::vec;\n # use std::uint;\n # use std::rand;\n-# use std::iterator::IteratorUtil;\n use extra::arc::ARC;\n \n fn pnorm(nums: &~[float], p: uint) -> float {"}, {"sha": "ddb68d481167ab895a20e90f540402b76e45059a", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -13,7 +13,6 @@ use core::prelude::*;\n use common::config;\n use common;\n \n-use core::iterator::IteratorUtil;\n use core::io;\n use core::os;\n "}, {"sha": "b5404e38ec961853404b062fa60fad4766c3b642", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use core::os;\n use core::run;"}, {"sha": "891935dcadd0c02f4b57bb4d8025f6bbbf5f1d75", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -22,7 +22,6 @@ use procsrv;\n use util;\n use util::logv;\n \n-use core::iterator::IteratorUtil;\n use core::io;\n use core::os;\n use core::str;"}, {"sha": "c3e2beb122f01d4787ee0cb941497683ac490ca5", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -20,7 +20,6 @@ Do not use ==, !=, <, etc on doubly-linked lists -- it may not terminate.\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::managed;\n use core::old_iter;\n use core::vec;"}, {"sha": "ed38db1d686eb19eb35bcad8d176157f84c2437c", "filename": "src/libextra/fileinput.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Ffileinput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Ffileinput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ffileinput.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -414,7 +414,6 @@ mod test {\n \n     use super::{FileInput, pathify, input_vec, input_vec_state};\n \n-    use core::iterator::IteratorUtil;\n     use core::io;\n     use core::uint;\n     use core::vec;"}, {"sha": "05649104c31678687392572c8afb9f639775b6e7", "filename": "src/libextra/getopts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fgetopts.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -83,7 +83,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::cmp::Eq;\n use core::result::{Err, Ok};\n use core::result;"}, {"sha": "db95327f0aacae1269af68a390b93ed2805e78ac", "filename": "src/libextra/json.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fjson.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -18,7 +18,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::char;\n use core::float;\n use core::hashmap::HashMap;"}, {"sha": "68d9bb4e1ae3a4a26ac344e15b0d6c8a76803817", "filename": "src/libextra/list.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flist.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -12,7 +12,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n \n #[deriving(Eq)]\n pub enum List<T> {"}, {"sha": "518a9d8685a5b22dadb5929edf828a0f92833da8", "filename": "src/libextra/net_ip.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnet_ip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnet_ip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnet_ip.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::libc;\n use core::comm::{stream, SharedChan};\n use core::ptr;"}, {"sha": "a0ce1669a448caf133acdbde3d7d8ac3ddb58e47", "filename": "src/libextra/net_url.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnet_url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnet_url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnet_url.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::cmp::Eq;\n use core::io::{Reader, ReaderUtil};\n use core::io;"}, {"sha": "14156e8b901bdd7d5c0e618c4fd32f5d1d9ed2ab", "filename": "src/libextra/num/bigint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Fbigint.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ A BigInt is a combination of BigUint and Sign.\n #[allow(missing_doc)];\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n use core::cmp::{Eq, Ord, TotalEq, TotalOrd, Ordering, Less, Equal, Greater};\n use core::int;\n use core::num::{IntConvertible, Zero, One, ToStrRadix, FromStrRadix, Orderable};"}, {"sha": "ebb88a1348183d88e8066ecb73ebb6737f461b9c", "filename": "src/libextra/num/rational.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Frational.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -12,7 +12,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::cmp;\n use core::from_str::FromStr;\n use core::num::{Zero,One,ToStrRadix,FromStrRadix,Round};"}, {"sha": "334ab7c9c990f850fe281b9ad9688c8c2e244f75", "filename": "src/libextra/par.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fpar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fpar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fpar.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -10,7 +10,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::cast;\n use core::ptr;\n use core::sys;"}, {"sha": "12539cd4759d4d5c706c609c6726de356cdacded", "filename": "src/libextra/rope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Frope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Frope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frope.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -37,7 +37,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::uint;\n use core::vec;\n use core::str;"}, {"sha": "462461439e67320437f25b797bd483cb1ac1a672", "filename": "src/libextra/semver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fsemver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fsemver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsemver.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::char;\n use core::cmp;\n use core::io::{ReaderUtil};"}, {"sha": "908e497b9591b28f7a91fc3f5c5514457c48b51d", "filename": "src/libextra/sha1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsha1.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -24,7 +24,7 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n+use core::str;\n use core::uint;\n use core::vec;\n "}, {"sha": "4af47fa806f897db3f5e948d4a6ab6b4997905ee", "filename": "src/libextra/stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstats.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -12,7 +12,7 @@\n \n use core::prelude::*;\n \n-use core::iterator::*;\n+use core::vec;\n use core::f64;\n use core::cmp;\n use core::num;"}, {"sha": "81b6083db01475d8aaacf51ef2538bb1280a54df", "filename": "src/libextra/terminfo/parser/compiled.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fterminfo%2Fparser%2Fcompiled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fterminfo%2Fparser%2Fcompiled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterminfo%2Fparser%2Fcompiled.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@ use core::prelude::*;\n \n use core::{vec, int, str};\n use core::io::Reader;\n-use core::iterator::IteratorUtil;\n use core::hashmap::HashMap;\n use super::super::TermInfo;\n "}, {"sha": "f82514475722580137e20d6276c766e312e1e77e", "filename": "src/libextra/terminfo/searcher.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fterminfo%2Fsearcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Fterminfo%2Fsearcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterminfo%2Fsearcher.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -15,7 +15,6 @@ use core::prelude::*;\n use core::{os, str};\n use core::os::getenv;\n use core::io::{file_reader, Reader};\n-use core::iterator::IteratorUtil;\n use path = core::path::Path;\n \n /// Return path to database entry for `term`"}, {"sha": "50592d5f7309de31c8c35b057e520a6df40b293c", "filename": "src/libextra/time.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftime.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -16,7 +16,6 @@ use core::i32;\n use core::int;\n use core::io;\n use core::str;\n-use core::iterator::IteratorUtil;\n \n static NSEC_PER_SEC: i32 = 1_000_000_000_i32;\n "}, {"sha": "f98758f64afe43dbc6f91a4c759cadfc8656a370", "filename": "src/libextra/treemap.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibextra%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftreemap.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::*;\n use core::uint;\n use core::util::{swap, replace};\n \n@@ -709,7 +708,6 @@ mod test_treemap {\n \n     use super::*;\n \n-    use core::iterator::*;\n     use core::rand::RngUtil;\n     use core::rand;\n     use core::str;\n@@ -1030,7 +1028,6 @@ mod test_treemap {\n #[cfg(test)]\n mod test_set {\n     use core::prelude::*;\n-    use core::iterator::*;\n \n     use super::*;\n "}, {"sha": "9d8f1c1a09175ac351d82421b126b3a02f312951", "filename": "src/librust/rust.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrust%2Frust.rc", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrust%2Frust.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrust%2Frust.rc?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -30,7 +30,6 @@ extern mod rusti;\n extern mod rustc;\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use core::io;\n use core::os;"}, {"sha": "7760982130fc89ecd1556d014238b2e84a32cf0b", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -22,7 +22,6 @@ use middle::trans::common::CrateContext;\n use middle::ty;\n use util::ppaux;\n \n-use core::iterator::IteratorUtil;\n use core::char;\n use core::hash::Streaming;\n use core::hash;"}, {"sha": "61254740dcdadfdf60992042949fe5b3e5c1b14e", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -24,7 +24,6 @@ use middle;\n use util::common::time;\n use util::ppaux;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::HashMap;\n use core::int;\n use core::io;"}, {"sha": "2819340ae453edfe27340f36f7df498d2a6e50dd", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -17,7 +17,6 @@ use core::prelude::*;\n use metadata::cstore;\n use metadata::decoder;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::HashMap;\n use core::vec;\n use extra;"}, {"sha": "d26a52cf331009d2f34e54af6859fe33e9176bf5", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -22,7 +22,6 @@ use middle::ty;\n use middle;\n use util::ppaux::ty_to_str;\n \n-use core::iterator::IteratorUtil;\n use core::hash::HashUtil;\n use core::hashmap::HashMap;\n use core::int;"}, {"sha": "c76d509f3bee51f423982b62d491c715ca922a60", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -25,7 +25,6 @@ use middle::{ty, typeck, moves};\n use middle;\n use util::ppaux::ty_to_str;\n \n-use core::iterator::IteratorUtil;\n use core::at_vec;\n use core::uint;\n use extra::ebml::reader;"}, {"sha": "e384d35373e63cff44e854c442eb8548b737b476", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -18,7 +18,6 @@\n // 4. moves do not affect things loaned out in any way\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use core::hashmap::HashSet;\n use core::uint;"}, {"sha": "02b45995e43cd594c659a80fd999cc5b86d88102", "filename": "src/librustc/middle/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -17,7 +17,6 @@\n // sure that all of these loans are honored.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use middle::borrowck::*;\n use middle::borrowck::move_data::MoveData;"}, {"sha": "bd560fca9854a539a77b2e605afbb3e873999321", "filename": "src/librustc/middle/borrowck/move_data.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -16,7 +16,6 @@ comments in the section \"Moves and initialization\" and in `doc.rs`.\n */\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use core::hashmap::{HashMap, HashSet};\n use core::uint;"}, {"sha": "f44fb0e058bcf9ae92e1c16d5e4addcf12a7f1c4", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use core::iterator::IteratorUtil;\n use core::prelude::*;\n \n use driver::session::Session;"}, {"sha": "ad89d790761e2b8a62a5d694fa5f344a6d85d01f", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ use middle::typeck::method_map;\n use middle::moves;\n use util::ppaux::ty_to_str;\n \n-use core::iterator::IteratorUtil;\n use core::uint;\n use core::vec;\n use extra::sort;"}, {"sha": "988ad519f42bcc3cd37809443318afa1bdd62c9a", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -18,7 +18,6 @@ use middle;\n use syntax::{ast, ast_map, ast_util, visit};\n use syntax::ast::*;\n \n-use core::iterator::IteratorUtil;\n use core::float;\n use core::hashmap::{HashMap, HashSet};\n use core::vec;"}, {"sha": "8037bacd3e72b8fc68419676993a656acf008a07", "filename": "src/librustc/middle/dataflow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdataflow.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -18,7 +18,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::cast;\n use core::io;\n use core::uint;"}, {"sha": "70ad0e1c3a9f59006d4e5e8f921c1bb48a59d6e3", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -17,7 +17,6 @@ use middle::typeck;\n use util::ppaux::{Repr, ty_to_str};\n use util::ppaux::UserString;\n \n-use core::iterator::IteratorUtil;\n use core::vec;\n use syntax::ast::*;\n use syntax::attr::attrs_contains_name;"}, {"sha": "c0421b2d474827aae8770b30eefe067d0fb2e2ac", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -15,7 +15,6 @@ use middle::ty;\n use middle::pat_util;\n use util::ppaux::{ty_to_str};\n \n-use core::iterator::IteratorUtil;\n use core::char;\n use core::cmp;\n use core::hashmap::HashMap;"}, {"sha": "1c335ee408423bbefb7cea806e1ab4416139d153", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -110,7 +110,6 @@ use middle::ty;\n use middle::typeck;\n use middle::moves;\n \n-use core::iterator::IteratorUtil;\n use core::cast::transmute;\n use core::hashmap::HashMap;\n use core::io;"}, {"sha": "14764e7bc37c9286bf6a816e6de9deb840c5a87e", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -47,7 +47,6 @@\n  */\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use middle::ty;\n use middle::typeck;"}, {"sha": "2217e632d14a8b9e147dc2cef4e2906196eccb6b", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -127,7 +127,6 @@ and so on.\n */\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use middle::pat_util::{pat_bindings};\n use middle::freevars;"}, {"sha": "f8d0b19922e85a4a7774c824ffdb266604fa4c13", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -26,7 +26,6 @@ use middle::ty::{region_variance, rv_covariant, rv_invariant};\n use middle::ty::{rv_contravariant, FreeRegion};\n use middle::ty;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::{HashMap, HashSet};\n use syntax::ast_map;\n use syntax::codemap::span;"}, {"sha": "2803608567d271a3b9d83c3a23378cd8b8d46b05", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -40,7 +40,6 @@ use syntax::visit::{visit_foreign_item, visit_item};\n use syntax::visit::{visit_mod, visit_ty, vt};\n use syntax::opt_vec::OptVec;\n \n-use core::iterator::IteratorUtil;\n use core::str;\n use core::uint;\n use core::vec;"}, {"sha": "837a8ea29bca41a292f5e7461fcaf0bd813df58c", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -172,7 +172,6 @@ use middle::trans::type_of;\n use middle::ty;\n use util::common::indenter;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::HashMap;\n use core::vec;\n use syntax::ast;"}, {"sha": "89783f77195139bb75aaa69551f897f96068646b", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -44,7 +44,6 @@\n  *   taken to it, implementing them for Rust seems difficult.\n  */\n \n-use core::iterator::IteratorUtil;\n use core::container::Map;\n use core::libc::c_ulonglong;\n use core::option::{Option, Some, None};"}, {"sha": "fe5402fb176e53dc6d9402d59fc337d84478d328", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -64,7 +64,6 @@ use middle::ty;\n use util::common::indenter;\n use util::ppaux::{Repr, ty_to_str};\n \n-use core::iterator::IteratorUtil;\n use core::hash;\n use core::hashmap::{HashMap, HashSet};\n use core::int;"}, {"sha": "9ad66c066715eaa3920df0f73a65fe07e3830206", "filename": "src/librustc/middle/trans/cabi_arm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_arm.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -17,7 +17,6 @@ use middle::trans::cabi::{ABIInfo, FnType, LLVMType};\n use middle::trans::common::{T_i8, T_i16, T_i32, T_i64};\n use middle::trans::common::{T_array, T_ptr, T_void};\n \n-use core::iterator::IteratorUtil;\n use core::option::{Option, None, Some};\n use core::uint;\n "}, {"sha": "83acfc661d2c2fcac2b15c22669b9df8ff935904", "filename": "src/librustc/middle/trans/cabi_mips.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -10,7 +10,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::libc::c_uint;\n use core::ptr;\n use core::uint;"}, {"sha": "3ff54e9d3d8c7073887e55f3f325e285fa971458", "filename": "src/librustc/middle/trans/cabi_x86_64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ use lib::llvm::True;\n use middle::trans::common::*;\n use middle::trans::cabi::*;\n \n-use core::iterator::IteratorUtil;\n use core::libc::c_uint;\n use core::option;\n use core::option::Option;"}, {"sha": "bfbe078c4f5240c4966a80679d2137ce49633c63", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -17,7 +17,6 @@\n // closure.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use back::abi;\n use driver::session;"}, {"sha": "fcbfe62dbc971123e6119d06aca9f929de5bf5e4", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use back::abi;\n use back::link::{mangle_internal_name_by_path_and_seq};"}, {"sha": "4a41afd0281238f5ff4ac4896be2e7b936e87796", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -11,7 +11,6 @@\n //! Code that is useful in various trans modules.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use back::{abi, upcall};\n use driver::session;"}, {"sha": "137d414e545aefcf111deb8532a3a7ed5d68dc34", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -152,7 +152,6 @@ use middle::ty;\n use util::common::indenter;\n use util::ppaux::Repr;\n \n-use core::iterator::IteratorUtil;\n use core::cast::transmute;\n use core::hashmap::HashMap;\n use core::vec;"}, {"sha": "ab55c1a1455173d4259d97ccb44713606e3d0a82", "filename": "src/librustc/middle/trans/inline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ use middle::trans::common::*;\n use middle::ty;\n use util::ppaux::ty_to_str;\n \n-use core::iterator::IteratorUtil;\n use core::vec;\n use syntax::ast;\n use syntax::ast_map::path_name;"}, {"sha": "fab529942d9e0cfb967b2edf1e7c9ad03450d52d", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -32,7 +32,6 @@ use middle::ty::{FnSig};\n use middle::typeck;\n use util::ppaux::{Repr,ty_to_str};\n \n-use core::iterator::IteratorUtil;\n use core::vec;\n use syntax::ast;\n use syntax::ast_map;"}, {"sha": "4641a13604b90aef83b201c493017062a83ebb59", "filename": "src/librustc/middle/trans/reachable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -16,7 +16,6 @@\n // reachable as well.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use middle::resolve;\n use middle::ty;"}, {"sha": "8b9cdbcd6e749481f8ceec8e041af7d4a80ae59d", "filename": "src/librustc/middle/trans/type_use.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -33,7 +33,6 @@ use middle::trans::inline;\n use middle::ty;\n use middle::typeck;\n \n-use core::iterator::IteratorUtil;\n use core::option::{Some, None};\n use core::uint;\n use core::vec;"}, {"sha": "1aa0bc2f3f644492e41c47b25dc33da81d987914", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -27,7 +27,6 @@ use util::ppaux::{Repr, UserString};\n use util::common::{indenter};\n use util::enum_set::{EnumSet, CLike};\n \n-use core::iterator::IteratorUtil;\n use core::cast;\n use core::cmp;\n use core::hashmap::{HashMap, HashSet};"}, {"sha": "97e933496c81ec8aa4f09bce89bcc0039c903cf8", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -18,7 +18,6 @@ use middle::typeck::check::{instantiate_path, lookup_def};\n use middle::typeck::check::{structure_of, valid_range_bounds};\n use middle::typeck::require_same_types;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::{HashMap, HashSet};\n use syntax::ast;\n use syntax::ast_util;"}, {"sha": "ea41dff99b896e19f3650ed2a795bc263f62d392", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -111,7 +111,6 @@ use util::ppaux::{bound_region_to_str};\n use util::ppaux;\n \n \n-use core::iterator::IteratorUtil;\n use core::cast::transmute;\n use core::hashmap::HashMap;\n use core::result;"}, {"sha": "4cedb71245a87928d119d110e2881f1e9e914d1e", "filename": "src/librustc/middle/typeck/check/regionck.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -28,7 +28,6 @@ this point a bit better.\n */\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use middle::freevars::get_freevars;\n use middle::ty::{re_scope};"}, {"sha": "99e68e3330bf86b2252072c00d9434b214c480f2", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use middle::resolve::Impl;\n use middle::ty::param_ty;"}, {"sha": "a60fa9ee0be150742f7ff274cba1eccb51cc21bb", "filename": "src/librustc/middle/typeck/check/writeback.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -13,7 +13,6 @@\n // substitutions.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use middle::pat_util;\n use middle::ty;"}, {"sha": "9528c825fbed9e6de7680f266c5f3940d3efe614", "filename": "src/librustc/middle/typeck/coherence.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -54,7 +54,6 @@ use syntax::visit::{Visitor, SimpleVisitor};\n use syntax::visit::{visit_mod};\n use util::ppaux::ty_to_str;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::{HashMap, HashSet};\n use core::result::Ok;\n use core::uint;"}, {"sha": "56e9875d2ba64cb82a82e0119873e3b06adb24a4", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -31,7 +31,6 @@ are represented as `ty_param()` instances.\n */\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use metadata::csearch;\n use middle::ty::{substs, ty_param_bounds_and_ty};"}, {"sha": "e0f3f0fa885b0acea7115d348d50897a46a82b2d", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -269,7 +269,6 @@ use util::ppaux::{bound_region_to_str, ty_to_str, trait_ref_to_str};\n \n use core::result;\n use core::vec;\n-use core::iterator::IteratorUtil;\n use extra::list::Nil;\n use extra::smallintmap::SmallIntMap;\n use syntax::ast::{m_imm, m_mutbl};"}, {"sha": "64af555bb37a12244df2b28cb127310102ee8282", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -32,7 +32,6 @@ use syntax::parse::token;\n use syntax::print::pprust;\n use syntax::{ast, ast_util};\n \n-use core::iterator::IteratorUtil;\n use core::str;\n use core::vec;\n "}, {"sha": "51fea9b46b3cb126da18c32d70620036524fda1d", "filename": "src/librustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -24,7 +24,6 @@ use fold::Fold;\n use fold;\n use pass::Pass;\n \n-use core::iterator::IteratorUtil;\n use core::str;\n use core::util;\n "}, {"sha": "2fa4d3b63cd87ee38422f7cbf399a31cce36cb06", "filename": "src/librustdoc/doc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoc.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@ use core::prelude::*;\n \n use doc;\n \n-use core::iterator::IteratorUtil;\n use core::vec;\n \n pub type AstId = int;"}, {"sha": "3654e2c7606075fc474de76cda6773901a8f3b94", "filename": "src/librustdoc/pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Fpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Fpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpass.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -10,7 +10,6 @@\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n \n use astsrv;\n use doc;"}, {"sha": "caf0e5376d125940df67a63c9a6fa0d605721dba", "filename": "src/librustdoc/unindent_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Funindent_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustdoc%2Funindent_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Funindent_pass.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -21,7 +21,6 @@ middle of a line, and each of the following lines is indented.\n \n use core::prelude::*;\n \n-use core::iterator::IteratorUtil;\n use core::str;\n use core::uint;\n use pass::Pass;"}, {"sha": "91658928f08ee949eedc55316e8cab0daea76f30", "filename": "src/librusti/rusti.rc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrusti%2Frusti.rc", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrusti%2Frusti.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrusti%2Frusti.rc?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -420,9 +420,6 @@ pub fn run_line(repl: &mut Repl, in: @io::Reader, out: @io::Writer, line: ~str,\n                 use_rl: bool)\n     -> Option<Repl> {\n     if line.starts_with(\":\") {\n-        // FIXME #5898: conflicts with Cell.take(), so can't be at the top level\n-        use std::iterator::IteratorUtil;\n-\n         // drop the : and the \\n (one byte each)\n         let full = line.slice(1, line.len() - 1);\n         let split: ~[~str] = full.word_iter().transform(|s| s.to_owned()).collect();"}, {"sha": "964e1a547703ec41e862c84a3386c463b2e46561", "filename": "src/librustpkg/path_util.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustpkg%2Fpath_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustpkg%2Fpath_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fpath_util.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -17,7 +17,6 @@ pub use target::{OutputType, Main, Lib, Test, Bench, Target, Build, Install};\n use core::libc::consts::os::posix88::{S_IRUSR, S_IWUSR, S_IXUSR};\n use core::os::mkdir_recursive;\n use core::os;\n-use core::iterator::IteratorUtil;\n \n /// Returns the value of RUST_PATH, as a list\n /// of Paths. In general this should be read from the"}, {"sha": "2a8513223565d76ec7694185472c7549fdf32b93", "filename": "src/librustpkg/rustpkg.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustpkg%2Frustpkg.rc", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustpkg%2Frustpkg.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Frustpkg.rc?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -29,7 +29,6 @@ extern mod syntax;\n \n use core::prelude::*;\n use core::*;\n-use core::iterator::IteratorUtil;\n pub use core::path::Path;\n use core::hashmap::HashMap;\n use rustc::driver::{driver, session};"}, {"sha": "0601c33b25e5913e4b777284bceec52e42382e96", "filename": "src/librustpkg/version.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustpkg%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibrustpkg%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fversion.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -15,7 +15,6 @@ extern mod std;\n \n use extra::semver;\n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n use core::{char, os, result, run, str};\n use package_path::RemotePath;\n use extra::tempfile::mkdtemp;"}, {"sha": "2197feea4523a6b9283f1a1a6c022ff621a67106", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -24,8 +24,6 @@ An external iterator object implementing the interface in the `iterator` module\n internal iterator by calling the `advance` method. For example:\n \n ~~~ {.rust}\n-use core::iterator::*;\n-\n let xs = [0u, 1, 2, 3, 4, 5];\n let ys = [30, 40, 50, 60];\n let mut it = xs.iter().chain(ys.iter());"}, {"sha": "e65904a68992ef9468705e6ddfbc6fdc0db8a2db", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 3, "deletions": 43, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -45,8 +45,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [0];\n     /// let b = [1];\n     /// let mut it = a.iter().chain_(b.iter());\n@@ -64,8 +62,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [0];\n     /// let b = [1];\n     /// let mut it = a.iter().zip(b.iter());\n@@ -82,8 +78,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2];\n     /// let mut it = a.iter().transform(|&x| 2 * x);\n     /// assert_eq!(it.next().get(), 2);\n@@ -99,8 +93,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2];\n     /// let mut it = a.iter().filter(|&x| *x > 1);\n     /// assert_eq!(it.next().get(), &2);\n@@ -115,8 +107,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2];\n     /// let mut it = a.iter().filter_map(|&x| if x > 1 {Some(2 * x)} else {None});\n     /// assert_eq!(it.next().get(), 4);\n@@ -130,8 +120,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [100, 200];\n     /// let mut it = a.iter().enumerate();\n     /// assert_eq!(it.next().get(), (0, &100));\n@@ -147,8 +135,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 2, 1];\n     /// let mut it = a.iter().skip_while(|&a| *a < 3);\n     /// assert_eq!(it.next().get(), &3);\n@@ -165,8 +151,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 2, 1];\n     /// let mut it = a.iter().take_while(|&a| *a < 3);\n     /// assert_eq!(it.next().get(), &1);\n@@ -181,8 +165,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter().skip(3);\n     /// assert_eq!(it.next().get(), &4);\n@@ -198,8 +180,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter().take_(3);\n     /// assert_eq!(it.next().get(), &1);\n@@ -217,8 +197,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter().scan(1, |fac, &x| {\n     ///   *fac = *fac * x;\n@@ -239,6 +217,8 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n+    /// use std::iterator::Counter;\n+    ///\n     /// for Counter::new(0, 10).advance |i| {\n     ///     io::println(fmt!(\"%d\", i));\n     /// }\n@@ -251,8 +231,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let b: ~[int] = a.iter().transform(|&x| x).collect();\n     /// assert!(a == b);\n@@ -265,8 +243,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter();\n     /// assert!(it.nth(2).get() == &3);\n@@ -280,8 +256,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// assert!(a.iter().last().get() == &5);\n     /// ~~~\n@@ -294,8 +268,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// assert!(a.iter().fold(0, |a, &b| a + b) == 15);\n     /// ~~~\n@@ -306,8 +278,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter();\n     /// assert!(it.count() == 5);\n@@ -320,8 +290,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// assert!(a.iter().all(|&x| *x > 0));\n     /// assert!(!a.iter().all(|&x| *x > 2));\n@@ -334,8 +302,6 @@ pub trait IteratorUtil<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter();\n     /// assert!(it.any_(|&x| *x == 3));\n@@ -482,8 +448,6 @@ pub trait AdditiveIterator<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter().transform(|&x| x);\n     /// assert!(it.sum() == 15);\n@@ -504,7 +468,7 @@ pub trait MultiplicativeIterator<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n+    /// use std::iterator::Counter;\n     ///\n     /// fn factorial(n: uint) -> uint {\n     ///     Counter::new(1u, 1).take_while(|&i| i <= n).product()\n@@ -529,8 +493,6 @@ pub trait OrdIterator<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// assert!(a.iter().max().get() == &5);\n     /// ~~~\n@@ -541,8 +503,6 @@ pub trait OrdIterator<A> {\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// assert!(a.iter().min().get() == &1);\n     /// ~~~"}, {"sha": "bb9cf724af1ea37fdac14a95f99304e6b3021307", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -50,8 +50,7 @@ pub use old_iter::{BaseIter, ReverseIter, MutableIter, ExtendedIter, EqIter};\n pub use old_iter::{CopyableIter, CopyableOrderedIter, CopyableNonstrictIter};\n pub use old_iter::{ExtendedMutableIter};\n pub use iter::{Times, FromIter};\n-// FIXME: #5898 pub use iterator::{Iterator, IteratorUtil};\n-pub use iterator::Iterator;\n+pub use iterator::{Iterator, IteratorUtil};\n pub use num::{Num, NumCast};\n pub use num::{Orderable, Signed, Unsigned, Round};\n pub use num::{Algebraic, Trigonometric, Exponential, Hyperbolic};"}, {"sha": "a7c29e8a869ad421569bf8781383ee0c6e10b5aa", "filename": "src/libsyntax/ast_map.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -22,7 +22,6 @@ use print::pprust;\n use visit;\n use syntax::parse::token::special_idents;\n \n-use core::iterator::IteratorUtil;\n use core::cmp;\n use core::hashmap::HashMap;\n use core::vec;"}, {"sha": "cc89db6e18938bf37de2a71e290bf1d2d74b814d", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -24,7 +24,6 @@ use core::hashmap::HashMap;\n use core::int;\n use core::option;\n use core::to_bytes;\n-use core::iterator::IteratorUtil;\n \n pub fn path_name_i(idents: &[ident]) -> ~str {\n     // FIXME: Bad copies (#2543 -- same for everything else that says \"bad\")\n@@ -795,7 +794,6 @@ mod test {\n     use ast::*;\n     use super::*;\n     use core::io;\n-    use core::iterator::IteratorUtil;\n \n     #[test] fn xorpush_test () {\n         let mut s = ~[];"}, {"sha": "a184d9593908520dd0ea3a31d7a0cbeea22f4826", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ use codemap::BytePos;\n use diagnostic::span_handler;\n use parse::comments::{doc_comment_style, strip_doc_comment_decoration};\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::HashSet;\n use core::vec;\n use extra;"}, {"sha": "1704b4ef6c5ba0d6a44a5545c953014bc791debb", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use codemap::{Pos, span};\n use codemap;"}, {"sha": "59a9ec407b03718aedd2ad856feedce2f85857bf", "filename": "src/libsyntax/ext/bytes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fbytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fbytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbytes.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -10,7 +10,6 @@\n \n /* The compiler code necessary to support the bytes! extension. */\n \n-use core::iterator::IteratorUtil;\n use ast;\n use codemap::span;\n use ext::base::*;"}, {"sha": "49b3d3ec861af51d1ec7e6ee9b095965af30bc39", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -174,7 +174,6 @@ use opt_vec;\n \n use core::uint;\n use core::vec;\n-use core::iterator::IteratorUtil;\n \n pub use self::ty::*;\n mod ty;"}, {"sha": "83cff70d45972c4becfa74b7c63938c4dd7a88d4", "filename": "src/libsyntax/ext/deriving/iter_bytes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -16,7 +16,6 @@ use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-use core::iterator::IteratorUtil;\n \n pub fn expand_deriving_iter_bytes(cx: @ExtCtxt,\n                                   span: span,"}, {"sha": "0198ca424d71094dd4d32dc677eed96079aa1ebf", "filename": "src/libsyntax/ext/deriving/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ library.\n */\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use ast::{enum_def, ident, item, Generics, meta_item, struct_def};\n use ext::base::ExtCtxt;"}, {"sha": "2e7e8240bc0d748f2d1775b581dbdf5df1e557b3", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -27,7 +27,6 @@ use parse::token::{ident_to_str, intern};\n use visit;\n use visit::Visitor;\n \n-use core::iterator::IteratorUtil;\n use core::vec;\n \n pub fn expand_expr(extsbox: @mut SyntaxEnv,"}, {"sha": "9adbbb7d7f3ef55c1ad10ed1e8a946e093fb8dd8", "filename": "src/libsyntax/ext/pipes/pipec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -23,7 +23,6 @@ use ext::quote::rt::*;\n use opt_vec;\n use opt_vec::OptVec;\n \n-use core::iterator::IteratorUtil;\n use core::vec;\n \n pub trait gen_send {"}, {"sha": "3fb94bbce380d3a271a0f91b006f1789d18bc3bb", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -22,7 +22,6 @@ use parse::parser::Parser;\n use parse::token::{Token, EOF, to_str, nonterminal, get_ident_interner, ident_to_str};\n use parse::token;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::HashMap;\n use core::uint;\n use core::vec;"}, {"sha": "abefbedaff0a020e64dc670914053d319bcee5a4", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ use parse::token::{EOF, INTERPOLATED, IDENT, Token, nt_ident};\n use parse::token::{ident_to_str};\n use parse::lexer::TokenAndSpan;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::HashMap;\n use core::option;\n "}, {"sha": "68473f11537dbcaf87439293b6a38ea5dd005782", "filename": "src/libsyntax/parse/comments.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcomments.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -20,7 +20,6 @@ use parse::lexer;\n use parse::token;\n use parse::token::{get_ident_interner};\n \n-use core::iterator::IteratorUtil;\n use core::io;\n use core::str;\n use core::uint;"}, {"sha": "ccc1cbd0d8943ace8c78f1408310c54cbc1bfe9b", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -19,7 +19,6 @@ use ext::tt::transcribe::{dup_tt_reader};\n use parse::token;\n use parse::token::{str_to_ident};\n \n-use core::iterator::IteratorUtil;\n use core::char;\n use core::either;\n use core::u64;"}, {"sha": "4e52b6b7367a540a73e683fd45fd6dc22735b611", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -92,7 +92,6 @@ use parse::{new_sub_parser_from_file, next_node_id, ParseSess};\n use opt_vec;\n use opt_vec::OptVec;\n \n-use core::iterator::IteratorUtil;\n use core::either::Either;\n use core::either;\n use core::hashmap::HashSet;"}, {"sha": "7eec9e2ee896d76d611bb7d2369c008440d6076a", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -33,7 +33,6 @@ use core::char;\n use core::io;\n use core::u64;\n use core::uint;\n-use core::iterator::IteratorUtil;\n \n // The @ps is stored here to prevent recursive type.\n pub enum ann_node<'self> {"}, {"sha": "6e753a8cc58e2581027d032d9cfdffa73219280e", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use core::prelude::*;\n-use core::iterator::IteratorUtil;\n \n use abi::AbiSet;\n use ast::*;"}, {"sha": "8b7f5829cbeba18fc55317f5d56fc935b48527a5", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -21,7 +21,6 @@ use extra::arc;\n use extra::time;\n use extra::deque::Deque;\n use extra::par;\n-use std::iterator::IteratorUtil;\n use std::hashmap::HashSet;\n use std::int::abs;\n use std::io;"}, {"sha": "1d2095df9dfd50fa5019b180d5ae740f3629df12", "filename": "src/test/bench/shootout-fannkuch-redux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -1,4 +1,3 @@\n-use std::iterator::*;\n use std::from_str::FromStr;\n use std::i32::range;\n use std::os;"}, {"sha": "8b587f02ad6d99499b17925e940446a608f367df", "filename": "src/test/bench/shootout-fasta-redux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -1,4 +1,3 @@\n-use std::iterator::IteratorUtil;\n use std::cast::transmute;\n use std::from_str::FromStr;\n use std::libc::{FILE, STDOUT_FILENO, c_int, fdopen, fputc, fputs, fwrite, size_t};"}, {"sha": "7940b5a13c1bfa7d465546a524e09891610f3572", "filename": "src/test/bench/shootout-nbody.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-nbody.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -1,4 +1,3 @@\n-use std::iterator::IteratorUtil;\n use std::f64;\n use std::from_str::FromStr;\n use std::os;"}, {"sha": "acf39a15e5fdf4fd4c6b0889760951ffd87001b4", "filename": "src/test/bench/shootout-spectralnorm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-spectralnorm.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -1,4 +1,3 @@\n-use std::iterator::IteratorUtil;\n use std::f64;\n use std::from_str::FromStr;\n use std::iter::ExtendedMutableIter;"}, {"sha": "f66de3853743aabb552ef2b9968bd2500bbff5c7", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@ extern mod extra;\n \n use std::io::{ReaderUtil, WriterUtil};\n use std::io;\n-use std::iterator::IteratorUtil;\n use std::os;\n use std::str;\n use std::u8;"}, {"sha": "c5fa8795a0b57dd479f50b4fe1385def48aa8379", "filename": "src/test/compile-fail/block-arg-as-stmt-with-value.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fcompile-fail%2Fblock-arg-as-stmt-with-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fcompile-fail%2Fblock-arg-as-stmt-with-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-arg-as-stmt-with-value.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n fn compute1() -> float {\n     let v = ~[0f, 1f, 2f, 3f];\n "}, {"sha": "f4ae436c624d9caeaa9241fe933726c7fa055b9a", "filename": "src/test/compile-fail/issue-3044.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n fn main() {\n     let needlesArr: ~[char] = ~['a', 'f'];\n     do needlesArr.iter().fold() |x, y| {"}, {"sha": "a4a488d9edd0b2a7a5c10dce469402a41b6d852a", "filename": "src/test/compile-fail/vec-mut-iter-borrow.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fcompile-fail%2Fvec-mut-iter-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Fcompile-fail%2Fvec-mut-iter-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-mut-iter-borrow.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::*;\n-\n fn main() {\n     let mut xs = ~[1, 2, 3, 4];\n "}, {"sha": "89e8b0a244a02e68870c57ce16555e49fa8f6356", "filename": "src/test/run-pass/block-arg-can-be-followed-by-binop.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-binop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-binop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-binop.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n pub fn main() {\n     let v = ~[-1f, 0f, 1f, 2f, 3f];\n "}, {"sha": "f46f738feac477ebdf39a7cf2f54d9c758e8e204", "filename": "src/test/run-pass/block-arg-can-be-followed-by-block-arg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-block-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-block-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-block-arg.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n pub fn main() {\n     fn f(i: &fn() -> uint) -> uint { i() }\n     let v = ~[-1f, 0f, 1f, 2f, 3f];"}, {"sha": "d74d90ddacf568ae7f3ced97c6f603a356a887dd", "filename": "src/test/run-pass/block-arg-can-be-followed-by-call.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-can-be-followed-by-call.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n pub fn main() {\n     fn f(i: uint) -> uint { i }\n     let v = ~[-1f, 0f, 1f, 2f, 3f];"}, {"sha": "4bff3c6bb64e635c648d634f1ec1ee4383d34f20", "filename": "src/test/run-pass/block-arg-in-parentheses.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-in-parentheses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg-in-parentheses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-in-parentheses.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n use std::vec;\n \n fn w_semi(v: ~[int]) -> int {"}, {"sha": "d860c84dfcec1abfa463957fdaa8198c099e5541", "filename": "src/test/run-pass/block-arg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fblock-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n use std::vec;\n \n // Check usage and precedence of block arguments in expressions:"}, {"sha": "6af1918804895318447861defb8ca64f7a7f07db", "filename": "src/test/run-pass/issue-2904.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2904.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -14,7 +14,6 @@\n \n extern mod extra;\n \n-use std::iterator::IteratorUtil;\n use std::io::ReaderUtil;\n use std::io;\n use std::str;"}, {"sha": "6d157b38a3f74ccebfd42541a08b3e4b2f90af18", "filename": "src/test/run-pass/linear-for-loop.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Flinear-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Flinear-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinear-for-loop.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n pub fn main() {\n     let x = ~[1, 2, 3];\n     let mut y = 0;"}, {"sha": "06d3736849d52be0709172cfb01a504e172ae6c0", "filename": "src/test/run-pass/mutability-inherits-through-fixed-length-vec.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fmutability-inherits-through-fixed-length-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fmutability-inherits-through-fixed-length-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutability-inherits-through-fixed-length-vec.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n fn test1() {\n     let mut ints = [0, ..32];\n     ints[0] += 1;"}, {"sha": "2b8b7c6a788d88ffd5be31269ecef14b4452b91c", "filename": "src/test/run-pass/ret-break-cont-in-block.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fret-break-cont-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Fret-break-cont-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fret-break-cont-in-block.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -10,7 +10,6 @@\n \n // xfail-fast\n \n-use std::iterator::IteratorUtil;\n use std::cmp::Eq;\n use std::vec;\n "}, {"sha": "e7a23244c06bcfd1ca4d41ae70d03112baf7da2a", "filename": "src/test/run-pass/test-ignore-cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftest-ignore-cfg.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -13,8 +13,6 @@\n \n extern mod extra;\n \n-use std::iterator::IteratorUtil;\n-\n #[test]\n #[ignore(cfg(ignorecfg))]\n fn shouldignore() {"}, {"sha": "cd383985c55a39e4975508eda81230fa5226bfb0", "filename": "src/test/run-pass/utf8.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Futf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Futf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::iterator::IteratorUtil;\n-\n pub fn main() {\n     let yen: char = '\u00a5'; // 0xa5\n     let c_cedilla: char = '\u00e7'; // 0xe7"}, {"sha": "4364bcc1274d0ade0ccc69766999edd5edaee13c", "filename": "src/test/run-pass/utf8_chars.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585f5f7f794c5f181ff351cb82a4c692cf61caa3/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8_chars.rs?ref=585f5f7f794c5f181ff351cb82a4c692cf61caa3", "patch": "@@ -10,7 +10,6 @@\n \n extern mod extra;\n \n-use std::iterator::IteratorUtil;\n use std::str;\n use std::vec;\n "}]}