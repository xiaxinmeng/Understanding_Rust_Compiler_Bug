{"sha": "529f698c23099cbdb0afe5fe308814639808233d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyOWY2OThjMjMwOTljYmRiMGFmZTVmZTMwODgxNDYzOTgwODIzM2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T17:46:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T17:46:01Z"}, "message": "Auto merge of #3599 - xfix:use-hash-set-for-valid-idents, r=oli-obk\n\nUse an FxHashSet for valid idents in documentation lint", "tree": {"sha": "aaa7658b5bdfd892e82b9acf290ea4bba566ae95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaa7658b5bdfd892e82b9acf290ea4bba566ae95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/529f698c23099cbdb0afe5fe308814639808233d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/529f698c23099cbdb0afe5fe308814639808233d", "html_url": "https://github.com/rust-lang/rust/commit/529f698c23099cbdb0afe5fe308814639808233d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/529f698c23099cbdb0afe5fe308814639808233d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "url": "https://api.github.com/repos/rust-lang/rust/commits/39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "html_url": "https://github.com/rust-lang/rust/commit/39bd84494f4a9b40f2e3b38416a91d52d5c4738b"}, {"sha": "ab70e0e7422ef3f53f5357ea99a739cbcbe6caee", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab70e0e7422ef3f53f5357ea99a739cbcbe6caee", "html_url": "https://github.com/rust-lang/rust/commit/ab70e0e7422ef3f53f5357ea99a739cbcbe6caee"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "a3504e7e3303d777220ae1111ce6e7402a2ed1c0", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/529f698c23099cbdb0afe5fe308814639808233d/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529f698c23099cbdb0afe5fe308814639808233d/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=529f698c23099cbdb0afe5fe308814639808233d", "patch": "@@ -12,6 +12,7 @@ use itertools::Itertools;\n use pulldown_cmark;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n+use rustc_data_structures::fx::FxHashSet;\n use syntax::ast;\n use syntax::source_map::{BytePos, Span};\n use syntax_pos::Pos;\n@@ -43,11 +44,11 @@ declare_clippy_lint! {\n \n #[derive(Clone)]\n pub struct Doc {\n-    valid_idents: Vec<String>,\n+    valid_idents: FxHashSet<String>,\n }\n \n impl Doc {\n-    pub fn new(valid_idents: Vec<String>) -> Self {\n+    pub fn new(valid_idents: FxHashSet<String>) -> Self {\n         Self { valid_idents }\n     }\n }\n@@ -144,7 +145,7 @@ pub fn strip_doc_comment_decoration(comment: &str, span: Span) -> (String, Vec<(\n     panic!(\"not a doc-comment: {}\", comment);\n }\n \n-pub fn check_attrs<'a>(cx: &EarlyContext<'_>, valid_idents: &[String], attrs: &'a [ast::Attribute]) {\n+pub fn check_attrs<'a>(cx: &EarlyContext<'_>, valid_idents: &FxHashSet<String>, attrs: &'a [ast::Attribute]) {\n     let mut doc = String::new();\n     let mut spans = vec![];\n \n@@ -192,7 +193,7 @@ pub fn check_attrs<'a>(cx: &EarlyContext<'_>, valid_idents: &[String], attrs: &'\n \n fn check_doc<'a, Events: Iterator<Item = (usize, pulldown_cmark::Event<'a>)>>(\n     cx: &EarlyContext<'_>,\n-    valid_idents: &[String],\n+    valid_idents: &FxHashSet<String>,\n     docs: Events,\n     spans: &[(usize, Span)],\n ) {\n@@ -237,14 +238,14 @@ fn check_doc<'a, Events: Iterator<Item = (usize, pulldown_cmark::Event<'a>)>>(\n     }\n }\n \n-fn check_text(cx: &EarlyContext<'_>, valid_idents: &[String], text: &str, span: Span) {\n+fn check_text(cx: &EarlyContext<'_>, valid_idents: &FxHashSet<String>, text: &str, span: Span) {\n     for word in text.split(|c: char| c.is_whitespace() || c == '\\'') {\n         // Trim punctuation as in `some comment (see foo::bar).`\n         //                                                   ^^\n         // Or even as in `_foo bar_` which is emphasized.\n         let word = word.trim_matches(|c: char| !c.is_alphanumeric());\n \n-        if valid_idents.iter().any(|i| i == word) {\n+        if valid_idents.contains(word) {\n             continue;\n         }\n "}, {"sha": "fb5a29dbd34e0507bf7b56ad48f404ad18669d03", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/529f698c23099cbdb0afe5fe308814639808233d/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529f698c23099cbdb0afe5fe308814639808233d/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=529f698c23099cbdb0afe5fe308814639808233d", "patch": "@@ -425,7 +425,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box new_without_default::NewWithoutDefault::default());\n     reg.register_late_lint_pass(box blacklisted_name::BlackListedName::new(conf.blacklisted_names.clone()));\n     reg.register_late_lint_pass(box functions::Functions::new(conf.too_many_arguments_threshold));\n-    reg.register_early_lint_pass(box doc::Doc::new(conf.doc_valid_idents.clone()));\n+    reg.register_early_lint_pass(box doc::Doc::new(conf.doc_valid_idents.iter().cloned().collect()));\n     reg.register_late_lint_pass(box neg_multiply::NegMultiply);\n     reg.register_early_lint_pass(box unsafe_removed_from_name::UnsafeNameRemoval);\n     reg.register_late_lint_pass(box mem_discriminant::MemDiscriminant);"}]}