{"sha": "ac8cb8ce3b81b4f4559809a3aec50cb0799c126f", "node_id": "C_kwDOAAsO6NoAKGFjOGNiOGNlM2I4MWI0ZjQ1NTk4MDlhM2FlYzUwY2IwNzk5YzEyNmY", "commit": {"author": {"name": "Dominik Gschwind", "email": "dominik.gschwind99@gmail.com", "date": "2022-08-21T20:48:53Z"}, "committer": {"name": "Dominik Gschwind", "email": "dominik.gschwind99@gmail.com", "date": "2022-08-21T20:48:53Z"}, "message": "Expect the test to panic by catching the unwind", "tree": {"sha": "9ae12d629dbd49378c2c40cac91ca1154d3e7b81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ae12d629dbd49378c2c40cac91ca1154d3e7b81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEesH/4Yj4Z0iPhYR5/TyCqcUcQCUFAmMCmjUACgkQ/TyCqcUc\nQCXZ7g/8CRYkLQC/oz+TgaFs8R1UV80mDn6UDjLvMh75Fo3ZVfl4QnJ3DalUrDSR\nIfCWE0av6/iutQsGKGNd6ImNCXfCQwzexL6w4eiizMw5vKz2pvOYHo2JCRW9OyBG\nqeI+mqNnkSM9d8T9NCNm+w5ZHlvtdKF+s2nqLNxuHUIxaIXyw9ldZnSq2T+R3QCY\nXK+o+6Ll7zHbJmdByxJB+fRqlVFSILPEZW9+uJTiW/N3jrOAl6zNamPKvIFs3gcp\noWVvoWBV1xLAHzmP2LbiA4nS9UZjMZ4tgM7dw2kdyGlj2ajl+tde9HRcLt/QAQVW\nA4uxRgORDM1Cn8GXSfmxqBdEoJ2n5m2/BT/Uli2atTZT4pFPMP8OWLs3hN/wLUd/\nKivTOk22cJZK5L/7yoS0FLuGJBsqM3hylQiTCB5H5Q3UkMy++xrIo+8D/mwPuF+4\ngAHzKsbCbBTqA6BNt7AdYGUjSjfpDHYIN147oMOqJyYB19sDLL6Ory2eGFa9FonU\n0DuBQqPZ5YNUZ4O4CdtOtK2+4Y89+bm3dgfYIIUJPiTzuLHRudwqHArzutX6mjR1\n9P10KGG8YjEpmvCBNssJl8fJsJgD8gVfFoRfgMoJdF+TbScB/PrTirEjea00IOsr\nwa/BTlTTV+qfRYblpTCU37tyIObzSfS+5pWxNqoTNzv3i9W0XdU=\n=5fZt\n-----END PGP SIGNATURE-----", "payload": "tree 9ae12d629dbd49378c2c40cac91ca1154d3e7b81\nparent ad7a1ed8cc9ba44c6a294317a2289a0b6fd75219\nauthor Dominik Gschwind <dominik.gschwind99@gmail.com> 1661114933 +0200\ncommitter Dominik Gschwind <dominik.gschwind99@gmail.com> 1661114933 +0200\n\nExpect the test to panic by catching the unwind\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f", "html_url": "https://github.com/rust-lang/rust/commit/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f/comments", "author": {"login": "N3xed", "id": 11508388, "node_id": "MDQ6VXNlcjExNTA4Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/11508388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/N3xed", "html_url": "https://github.com/N3xed", "followers_url": "https://api.github.com/users/N3xed/followers", "following_url": "https://api.github.com/users/N3xed/following{/other_user}", "gists_url": "https://api.github.com/users/N3xed/gists{/gist_id}", "starred_url": "https://api.github.com/users/N3xed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/N3xed/subscriptions", "organizations_url": "https://api.github.com/users/N3xed/orgs", "repos_url": "https://api.github.com/users/N3xed/repos", "events_url": "https://api.github.com/users/N3xed/events{/privacy}", "received_events_url": "https://api.github.com/users/N3xed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "N3xed", "id": 11508388, "node_id": "MDQ6VXNlcjExNTA4Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/11508388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/N3xed", "html_url": "https://github.com/N3xed", "followers_url": "https://api.github.com/users/N3xed/followers", "following_url": "https://api.github.com/users/N3xed/following{/other_user}", "gists_url": "https://api.github.com/users/N3xed/gists{/gist_id}", "starred_url": "https://api.github.com/users/N3xed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/N3xed/subscriptions", "organizations_url": "https://api.github.com/users/N3xed/orgs", "repos_url": "https://api.github.com/users/N3xed/repos", "events_url": "https://api.github.com/users/N3xed/events{/privacy}", "received_events_url": "https://api.github.com/users/N3xed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad7a1ed8cc9ba44c6a294317a2289a0b6fd75219", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7a1ed8cc9ba44c6a294317a2289a0b6fd75219", "html_url": "https://github.com/rust-lang/rust/commit/ad7a1ed8cc9ba44c6a294317a2289a0b6fd75219"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "582e2338efedb02b32e6d02390783dfaefa37fa8", "filename": "crates/hir-ty/src/tests/regression.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs?ref=ac8cb8ce3b81b4f4559809a3aec50cb0799c126f", "patch": "@@ -1528,9 +1528,14 @@ unsafe impl Storage for InlineStorage {\n \n #[test]\n fn gat_crash_3() {\n+    // FIXME: This test currently crashes rust analyzer in a debug build but not in a\n+    // release build (i.e. for the user). With the assumption that tests will always be run\n+    // in debug mode, we catch the unwind and expect that it panicked. See the\n+    // [`crate::utils::generics`] function for more information.\n     cov_mark::check!(ignore_gats);\n-    check_no_mismatches(\n-        r#\"\n+    std::panic::catch_unwind(|| {\n+        check_no_mismatches(\n+            r#\"\n trait Collection {\n     type Item;\n     type Member<T>: Collection<Item = T>;\n@@ -1544,7 +1549,9 @@ impl<T, const N: usize> Collection for ConstGen<T, N> {\n     type Member<U> = ConstGen<U, N>;\n }\n         \"#,\n-    );\n+        );\n+    })\n+    .expect_err(\"must panic\");\n }\n \n #[test]"}, {"sha": "d6638db02851183c5f080dc8cfc3fed5503ae76c", "filename": "crates/hir-ty/src/utils.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f/crates%2Fhir-ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8cb8ce3b81b4f4559809a3aec50cb0799c126f/crates%2Fhir-ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Futils.rs?ref=ac8cb8ce3b81b4f4559809a3aec50cb0799c126f", "patch": "@@ -183,9 +183,12 @@ pub(crate) fn generics(db: &dyn DefDatabase, def: GenericDefId) -> Generics {\n             parent_params.iter().any(|(_, x)| matches!(x, TypeOrConstParamData::ConstParamData(_)));\n         return if has_consts || parent_has_consts {\n             // XXX: treat const generic associated types as not existing to avoid crashes\n-            // (#11769, #12193)\n-            // Note: also crashes when the parent has const generics (also even if the GAT\n+            // (#11769)\n+            //\n+            // Note: Also crashes when the parent has const generics (also even if the GAT\n             // doesn't use them), see `tests::regression::gat_crash_3` for an example.\n+            // Avoids that by disabling GATs when the parent (i.e. `impl` block) has\n+            // const generics (#12193).\n             //\n             // Chalk expects the inner associated type's parameters to come\n             // *before*, not after the trait's generics as we've always done it."}]}