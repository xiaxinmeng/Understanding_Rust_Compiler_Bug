{"sha": "3ab4f3adbdc037f615d1abb25149bfe65c8753ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYjRmM2FkYmRjMDM3ZjYxNWQxYWJiMjUxNDliZmU2NWM4NzUzZWQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-25T10:22:11Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-25T10:22:11Z"}, "message": "Don't split path separators apart in doctest runnables", "tree": {"sha": "0ca08410c9a5d168da4518d64168d2cc2b7edba8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca08410c9a5d168da4518d64168d2cc2b7edba8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ab4f3adbdc037f615d1abb25149bfe65c8753ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab4f3adbdc037f615d1abb25149bfe65c8753ed", "html_url": "https://github.com/rust-lang/rust/commit/3ab4f3adbdc037f615d1abb25149bfe65c8753ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ab4f3adbdc037f615d1abb25149bfe65c8753ed/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81", "html_url": "https://github.com/rust-lang/rust/commit/e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "89118326601ce912d49e3a6e334269107ef82012", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3ab4f3adbdc037f615d1abb25149bfe65c8753ed/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ab4f3adbdc037f615d1abb25149bfe65c8753ed/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=3ab4f3adbdc037f615d1abb25149bfe65c8753ed", "patch": "@@ -193,7 +193,7 @@ fn module_def_doctest(sema: &Semantics<RootDatabase>, def: hir::ModuleDef) -> Op\n                 if let hir::AssocItemContainer::Impl(imp) = assoc_def.container(sema.db) {\n                     if let Some(adt) = imp.target_ty(sema.db).as_adt() {\n                         let name = adt.name(sema.db).to_string();\n-                        let idx = path.rfind(':').unwrap_or(0);\n+                        let idx = path.rfind(':').map_or(0, |idx| idx + 1);\n                         let (prefix, suffix) = path.split_at(idx);\n                         return format!(\"{}{}::{}\", prefix, name, suffix);\n                     }\n@@ -931,4 +931,42 @@ mod test_mod {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn test_doc_runnables_impl_mod() {\n+        check(\n+            r#\"\n+//- /lib.rs\n+mod foo;\n+//- /foo.rs\n+struct Foo;<|>\n+impl Foo {\n+    /// ```\n+    /// let x = 5;\n+    /// ```\n+    fn foo() {}\n+}\n+        \"#,\n+            &[&DOCTEST],\n+            expect![[r#\"\n+                [\n+                    Runnable {\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                1,\n+                            ),\n+                            full_range: 27..81,\n+                            name: \"foo\",\n+                        },\n+                        kind: DocTest {\n+                            test_id: Path(\n+                                \"foo::Foo::foo\",\n+                            ),\n+                        },\n+                        cfg: None,\n+                    },\n+                ]\n+            \"#]],\n+        );\n+    }\n }"}]}