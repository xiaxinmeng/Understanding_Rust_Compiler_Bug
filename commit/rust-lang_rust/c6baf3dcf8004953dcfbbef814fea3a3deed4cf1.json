{"sha": "c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2YmFmM2RjZjgwMDQ5NTNkY2ZiYmVmODE0ZmVhM2EzZGVlZDRjZjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-22T13:06:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-22T13:06:34Z"}, "message": "Merge #9984\n\n9984: Fix typos \u201ca\u201d\u2192\u201can\u201d r=Veykril a=steffahn\n\nSee rust-lang/rust#88230\n\nCo-authored-by: Frank Steffahn <frank.steffahn@stu.uni-kiel.de>", "tree": {"sha": "7f337dfabcd5549957e583fa1544417498b63939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f337dfabcd5549957e583fa1544417498b63939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhIkvaCRBK7hj4Ov3rIwAA3p0IAI/6Vw7lKpSXPohXvS0/6TOs\nHz95/vg3SG2v2tA8GtkFSxoYPY4BZXUBBLCZhZ7okK6kaAMe6HXyRtPds6BgdHhB\n2Lm7GPu7w3/BVHOMq1bnogIMUhDDGR4Im5QxAYkNHunhetBCZ3pVpCdXy3YleZib\nLRnafXuEHpdAxKkMrfMY8cEd+1/IL4ZBeml6ykPORvkq5pa7XVqvwfmHo9upHIbR\nPk7ztOvQXYb99w2a+hYJd+LAL/vuGwmN/S5HvVePIQ/zS6/nYqs1N1ETSQuhwR5+\naonNUdKMfR2hAZ0MsKiHDQexZRVnOV2jLXzEY/QMIB+ZyL1T7Lh7c/QuMHy1Ag8=\n=oZyX\n-----END PGP SIGNATURE-----\n", "payload": "tree 7f337dfabcd5549957e583fa1544417498b63939\nparent b9d879876ead547b1f42d392438f0e4fb682c037\nparent 3a5a93595f92d9df7fcb7e70ae26eadafb148f1f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629637594 +0000\ncommitter GitHub <noreply@github.com> 1629637594 +0000\n\nMerge #9984\n\n9984: Fix typos \u201ca\u201d\u2192\u201can\u201d r=Veykril a=steffahn\n\nSee rust-lang/rust#88230\n\nCo-authored-by: Frank Steffahn <frank.steffahn@stu.uni-kiel.de>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "html_url": "https://github.com/rust-lang/rust/commit/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9d879876ead547b1f42d392438f0e4fb682c037", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d879876ead547b1f42d392438f0e4fb682c037", "html_url": "https://github.com/rust-lang/rust/commit/b9d879876ead547b1f42d392438f0e4fb682c037"}, {"sha": "3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f", "html_url": "https://github.com/rust-lang/rust/commit/3a5a93595f92d9df7fcb7e70ae26eadafb148f1f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "000daf76c25edcd83f9caae0f2e931cad2d3aebb", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "patch": "@@ -203,7 +203,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.ancestors_at_offset_with_macros(node, offset)\n     }\n \n-    /// Find a AstNode by offset inside SyntaxNode, if it is inside *Macrofile*,\n+    /// Find an AstNode by offset inside SyntaxNode, if it is inside *Macrofile*,\n     /// search up until it is of the target AstNode type\n     pub fn find_node_at_offset_with_macros<N: AstNode>(\n         &self,\n@@ -213,7 +213,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.ancestors_at_offset_with_macros(node, offset).find_map(N::cast)\n     }\n \n-    /// Find a AstNode by offset inside SyntaxNode, if it is inside *MacroCall*,\n+    /// Find an AstNode by offset inside SyntaxNode, if it is inside *MacroCall*,\n     /// descend it and find again\n     pub fn find_node_at_offset_with_descend<N: AstNode>(\n         &self,"}, {"sha": "899a8b793db5c70616480e78c9a298b37e2bd2ae", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "patch": "@@ -280,7 +280,7 @@ impl ExprValidator {\n         for arm in arms {\n             if let Some(pat_ty) = infer.type_of_pat.get(arm.pat) {\n                 // We only include patterns whose type matches the type\n-                // of the match expression. If we had a InvalidMatchArmPattern\n+                // of the match expression. If we had an InvalidMatchArmPattern\n                 // diagnostic or similar we could raise that in an else\n                 // block here.\n                 //"}, {"sha": "9e22dae072ce39dc7b261298758c2e8ad1b9b5b5", "filename": "crates/ide_completion/src/completions/trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs?ref=c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "patch": "@@ -1,7 +1,7 @@\n //! Completion for associated items in a trait implementation.\n //!\n //! This module adds the completion items related to implementing associated\n-//! items within a `impl Trait for Struct` block. The current context node\n+//! items within an `impl Trait for Struct` block. The current context node\n //! must be within either a `FN`, `TYPE_ALIAS`, or `CONST` node\n //! and an direct child of an `IMPL`.\n //!"}, {"sha": "14747cc72f9e3983a0ef576c7741ac3694b4767f", "filename": "crates/paths/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fpaths%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6baf3dcf8004953dcfbbef814fea3a3deed4cf1/crates%2Fpaths%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fpaths%2Fsrc%2Flib.rs?ref=c6baf3dcf8004953dcfbbef814fea3a3deed4cf1", "patch": "@@ -98,7 +98,7 @@ impl AbsPathBuf {\n             .unwrap_or_else(|path| panic!(\"expected absolute path, got {}\", path.display()))\n     }\n \n-    /// Coerces to a `AbsPath` slice.\n+    /// Coerces to an `AbsPath` slice.\n     ///\n     /// Equivalent of [`PathBuf::as_path`] for `AbsPathBuf`.\n     pub fn as_path(&self) -> &AbsPath {"}]}