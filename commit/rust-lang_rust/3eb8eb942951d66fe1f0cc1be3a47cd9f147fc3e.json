{"sha": "3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYjhlYjk0Mjk1MWQ2NmZlMWYwY2MxYmUzYTQ3Y2Q5ZjE0N2ZjM2U=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-06-22T23:05:31Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-06-22T23:05:31Z"}, "message": "review comments", "tree": {"sha": "3e4a90f27e765a509ad2a08928cb04c1e2514e76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e4a90f27e765a509ad2a08928cb04c1e2514e76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e", "html_url": "https://github.com/rust-lang/rust/commit/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "562f4967b4ce7e859b807fc022040bbb22d1f70e", "url": "https://api.github.com/repos/rust-lang/rust/commits/562f4967b4ce7e859b807fc022040bbb22d1f70e", "html_url": "https://github.com/rust-lang/rust/commit/562f4967b4ce7e859b807fc022040bbb22d1f70e"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "3012928a09854c51253bf6febcf273b148c88093", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e", "patch": "@@ -92,9 +92,10 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n                         .next()\n                         .is_some()\n                 {\n+                    // If the failure is due to a `'static` requirement coming from a `dyn` or\n+                    // `impl` Trait that *isn't* caused by `async fn` desugaring, handle this case\n+                    // better in `static_impl_trait`.\n                     debug!(\"try_report_named_anon_conflict: impl Trait + 'static\");\n-                    // This is an `impl Trait` or `dyn Trait` return that evaluates de need of\n-                    // `'static`. We handle this case better in `static_impl_trait`.\n                     return None;\n                 }\n             }"}, {"sha": "46dad81a099bbd0712789c30e538f22a067cc117", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e", "patch": "@@ -26,7 +26,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n                 );\n                 let anon_reg_sup = self.tcx().is_suitable_region(sup_r)?;\n                 debug!(\"try_report_static_impl_trait: anon_reg_sup={:?}\", anon_reg_sup);\n-                let fn_returns = self.tcx().return_type_impl_or_dyn_trait(anon_reg_sup.def_id);\n+                let fn_returns = self.tcx().return_type_impl_or_dyn_traits(anon_reg_sup.def_id);\n                 if fn_returns.is_empty() {\n                     return None;\n                 }"}, {"sha": "e8ea7dba217201b08ecec350c1a3e02d8ff22725", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=3eb8eb942951d66fe1f0cc1be3a47cd9f147fc3e", "patch": "@@ -1406,7 +1406,8 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n-    pub fn return_type_impl_or_dyn_trait(&self, scope_def_id: DefId) -> Vec<&'tcx hir::Ty<'tcx>> {\n+    /// Given a `DefId` for an `fn`, return all the `dyn` and `impl` traits in its return type.\n+    pub fn return_type_impl_or_dyn_traits(&self, scope_def_id: DefId) -> Vec<&'tcx hir::Ty<'tcx>> {\n         let hir_id = self.hir().as_local_hir_id(scope_def_id.expect_local());\n         let hir_output = match self.hir().get(hir_id) {\n             Node::Item(hir::Item {"}]}