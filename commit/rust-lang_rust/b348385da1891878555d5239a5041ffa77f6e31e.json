{"sha": "b348385da1891878555d5239a5041ffa77f6e31e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNDgzODVkYTE4OTE4Nzg1NTVkNTIzOWE1MDQxZmZhNzdmNmUzMWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-31T01:59:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-31T01:59:20Z"}, "message": "Auto merge of #85597 - 0yoyoyo:fix-issue-71563-remove-redundant-args, r=petrochenkov\n\nFix span of redundant generic arguments\n\nFixes #71563\n\nAbove issue is about lifetime arguments, but generic arguments also have same problem.\nThis PR fixes both help messages.", "tree": {"sha": "719b029f6ac6238b0c1c1559a3ad688e62a81c28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/719b029f6ac6238b0c1c1559a3ad688e62a81c28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b348385da1891878555d5239a5041ffa77f6e31e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b348385da1891878555d5239a5041ffa77f6e31e", "html_url": "https://github.com/rust-lang/rust/commit/b348385da1891878555d5239a5041ffa77f6e31e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b348385da1891878555d5239a5041ffa77f6e31e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aab93ca37f38f70869c5de47c1877e54579e9de2", "url": "https://api.github.com/repos/rust-lang/rust/commits/aab93ca37f38f70869c5de47c1877e54579e9de2", "html_url": "https://github.com/rust-lang/rust/commit/aab93ca37f38f70869c5de47c1877e54579e9de2"}, {"sha": "0edf4da043a1f20649cf144b98549ec38b086f49", "url": "https://api.github.com/repos/rust-lang/rust/commits/0edf4da043a1f20649cf144b98549ec38b086f49", "html_url": "https://github.com/rust-lang/rust/commit/0edf4da043a1f20649cf144b98549ec38b086f49"}], "stats": {"total": 405, "additions": 281, "deletions": 124}, "files": [{"sha": "bccc19774e0d94048c6dcaa71d24b989d8103065", "filename": "compiler/rustc_typeck/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 44, "deletions": 31, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/b348385da1891878555d5239a5041ffa77f6e31e/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b348385da1891878555d5239a5041ffa77f6e31e/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=b348385da1891878555d5239a5041ffa77f6e31e", "patch": "@@ -605,30 +605,35 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n         let remove_entire_generics = num_redundant_args >= self.gen_args.args.len();\n \n         let remove_lifetime_args = |err: &mut DiagnosticBuilder<'_>| {\n-            let idx_first_redundant_lt_args = self.num_expected_lifetime_args();\n-            let span_lo_redundant_lt_args =\n-                self.gen_args.args[idx_first_redundant_lt_args].span().shrink_to_lo();\n-            let span_hi_redundant_lt_args = self.gen_args.args\n-                [idx_first_redundant_lt_args + num_redundant_lt_args - 1]\n-                .span()\n-                .shrink_to_hi();\n-            let eat_comma =\n-                idx_first_redundant_lt_args + num_redundant_lt_args - 1 != self.gen_args.args.len();\n-\n-            let span_redundant_lt_args = if eat_comma {\n-                let span_hi = self.gen_args.args\n-                    [idx_first_redundant_lt_args + num_redundant_lt_args - 1]\n-                    .span()\n-                    .shrink_to_hi();\n-                span_lo_redundant_lt_args.to(span_hi)\n-            } else {\n-                span_lo_redundant_lt_args.to(span_hi_redundant_lt_args)\n-            };\n+            let mut lt_arg_spans = Vec::new();\n+            let mut found_redundant = false;\n+            for arg in self.gen_args.args {\n+                if let hir::GenericArg::Lifetime(_) = arg {\n+                    lt_arg_spans.push(arg.span());\n+                    if lt_arg_spans.len() > self.num_expected_lifetime_args() {\n+                        found_redundant = true;\n+                    }\n+                } else if found_redundant {\n+                    // Argument which is redundant and separated like this `'c`\n+                    // is not included to avoid including `Bar` in span.\n+                    // ```\n+                    // type Foo<'a, T> = &'a T;\n+                    // let _: Foo<'a, 'b, Bar, 'c>;\n+                    // ```\n+                    break;\n+                }\n+            }\n+\n+            let span_lo_redundant_lt_args = lt_arg_spans[self.num_expected_lifetime_args()];\n+            let span_hi_redundant_lt_args = lt_arg_spans[lt_arg_spans.len() - 1];\n+\n+            let span_redundant_lt_args = span_lo_redundant_lt_args.to(span_hi_redundant_lt_args);\n             debug!(\"span_redundant_lt_args: {:?}\", span_redundant_lt_args);\n \n+            let num_redundant_lt_args = lt_arg_spans.len() - self.num_expected_lifetime_args();\n             let msg_lifetimes = format!(\n                 \"remove {} {} argument{}\",\n-                if num_redundant_args == 1 { \"this\" } else { \"these\" },\n+                if num_redundant_lt_args == 1 { \"this\" } else { \"these\" },\n                 \"lifetime\",\n                 pluralize!(num_redundant_lt_args),\n             );\n@@ -642,26 +647,34 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n         };\n \n         let remove_type_or_const_args = |err: &mut DiagnosticBuilder<'_>| {\n-            let idx_first_redundant_type_or_const_args = self.get_lifetime_args_offset()\n-                + num_redundant_lt_args\n-                + self.num_expected_type_or_const_args();\n+            let mut gen_arg_spans = Vec::new();\n+            let mut found_redundant = false;\n+            for arg in self.gen_args.args {\n+                match arg {\n+                    hir::GenericArg::Type(_) | hir::GenericArg::Const(_) => {\n+                        gen_arg_spans.push(arg.span());\n+                        if gen_arg_spans.len() > self.num_expected_type_or_const_args() {\n+                            found_redundant = true;\n+                        }\n+                    }\n+                    _ if found_redundant => break,\n+                    _ => {}\n+                }\n+            }\n \n             let span_lo_redundant_type_or_const_args =\n-                self.gen_args.args[idx_first_redundant_type_or_const_args].span().shrink_to_lo();\n-\n-            let span_hi_redundant_type_or_const_args = self.gen_args.args\n-                [idx_first_redundant_type_or_const_args + num_redundant_type_or_const_args - 1]\n-                .span()\n-                .shrink_to_hi();\n+                gen_arg_spans[self.num_expected_type_or_const_args()];\n+            let span_hi_redundant_type_or_const_args = gen_arg_spans[gen_arg_spans.len() - 1];\n \n             let span_redundant_type_or_const_args =\n                 span_lo_redundant_type_or_const_args.to(span_hi_redundant_type_or_const_args);\n-\n             debug!(\"span_redundant_type_or_const_args: {:?}\", span_redundant_type_or_const_args);\n \n+            let num_redundant_gen_args =\n+                gen_arg_spans.len() - self.num_expected_type_or_const_args();\n             let msg_types_or_consts = format!(\n                 \"remove {} {} argument{}\",\n-                if num_redundant_args == 1 { \"this\" } else { \"these\" },\n+                if num_redundant_gen_args == 1 { \"this\" } else { \"these\" },\n                 \"generic\",\n                 pluralize!(num_redundant_type_or_const_args),\n             );"}, {"sha": "840700c9cc6d6526c76de8063a501e21ef27af36", "filename": "src/test/ui/error-codes/E0107.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Ferror-codes%2FE0107.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Ferror-codes%2FE0107.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0107.rs?ref=b348385da1891878555d5239a5041ffa77f6e31e", "patch": "@@ -1,5 +1,7 @@\n struct Foo<'a>(&'a str);\n struct Buzz<'a, 'b>(&'a str, &'b str);\n+struct Qux<'a, T>(&'a T);\n+struct Quux<T>(T);\n \n enum Bar {\n     A,\n@@ -19,6 +21,30 @@ struct Baz<'a, 'b, 'c> {\n     foo2: Foo<'a, 'b, 'c>,\n     //~^ ERROR this struct takes 1 lifetime argument\n     //~| HELP remove these lifetime arguments\n+\n+    qux1: Qux<'a, 'b, i32>,\n+    //~^ ERROR this struct takes 1 lifetime argument\n+    //~| HELP remove this lifetime argument\n+\n+    qux2: Qux<'a, i32, 'b>,\n+    //~^ ERROR this struct takes 1 lifetime argument\n+    //~| HELP remove this lifetime argument\n+\n+    qux3: Qux<'a, 'b, 'c, i32>,\n+    //~^ ERROR this struct takes 1 lifetime argument\n+    //~| HELP remove these lifetime arguments\n+\n+    qux4: Qux<'a, i32, 'b, 'c>,\n+    //~^ ERROR this struct takes 1 lifetime argument\n+    //~| HELP remove these lifetime arguments\n+\n+    qux5: Qux<'a, 'b, i32, 'c>,\n+    //~^ ERROR this struct takes 1 lifetime argument\n+    //~| HELP remove this lifetime argument\n+\n+    quux: Quux<'a, i32, 'b>,\n+    //~^ ERROR this struct takes 0 lifetime arguments\n+    //~| HELP remove this lifetime argument\n }\n \n fn main() {}"}, {"sha": "3c7aa6de541368f12fb9e97423884bceaa71cb5c", "filename": "src/test/ui/error-codes/E0107.stderr", "status": "modified", "additions": 89, "deletions": 5, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Ferror-codes%2FE0107.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Ferror-codes%2FE0107.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0107.stderr?ref=b348385da1891878555d5239a5041ffa77f6e31e", "patch": "@@ -1,5 +1,5 @@\n error[E0107]: this struct takes 2 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/E0107.rs:11:11\n+  --> $DIR/E0107.rs:13:11\n    |\n LL |     buzz: Buzz<'a>,\n    |           ^^^^ -- supplied 1 lifetime argument\n@@ -17,21 +17,21 @@ LL |     buzz: Buzz<'a, 'a>,\n    |                  ^^^^\n \n error[E0107]: this enum takes 0 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/E0107.rs:15:10\n+  --> $DIR/E0107.rs:17:10\n    |\n LL |     bar: Bar<'a>,\n    |          ^^^---- help: remove these generics\n    |          |\n    |          expected 0 lifetime arguments\n    |\n note: enum defined here, with 0 lifetime parameters\n-  --> $DIR/E0107.rs:4:6\n+  --> $DIR/E0107.rs:6:6\n    |\n LL | enum Bar {\n    |      ^^^\n \n error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n-  --> $DIR/E0107.rs:19:11\n+  --> $DIR/E0107.rs:21:11\n    |\n LL |     foo2: Foo<'a, 'b, 'c>,\n    |           ^^^     ------ help: remove these lifetime arguments\n@@ -44,6 +44,90 @@ note: struct defined here, with 1 lifetime parameter: `'a`\n LL | struct Foo<'a>(&'a str);\n    |        ^^^ --\n \n-error: aborting due to 3 previous errors\n+error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+  --> $DIR/E0107.rs:25:11\n+   |\n+LL |     qux1: Qux<'a, 'b, i32>,\n+   |           ^^^     -- help: remove this lifetime argument\n+   |           |\n+   |           expected 1 lifetime argument\n+   |\n+note: struct defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/E0107.rs:3:8\n+   |\n+LL | struct Qux<'a, T>(&'a T);\n+   |        ^^^ --\n+\n+error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+  --> $DIR/E0107.rs:29:11\n+   |\n+LL |     qux2: Qux<'a, i32, 'b>,\n+   |           ^^^          -- help: remove this lifetime argument\n+   |           |\n+   |           expected 1 lifetime argument\n+   |\n+note: struct defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/E0107.rs:3:8\n+   |\n+LL | struct Qux<'a, T>(&'a T);\n+   |        ^^^ --\n+\n+error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n+  --> $DIR/E0107.rs:33:11\n+   |\n+LL |     qux3: Qux<'a, 'b, 'c, i32>,\n+   |           ^^^     ------ help: remove these lifetime arguments\n+   |           |\n+   |           expected 1 lifetime argument\n+   |\n+note: struct defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/E0107.rs:3:8\n+   |\n+LL | struct Qux<'a, T>(&'a T);\n+   |        ^^^ --\n+\n+error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n+  --> $DIR/E0107.rs:37:11\n+   |\n+LL |     qux4: Qux<'a, i32, 'b, 'c>,\n+   |           ^^^          ------ help: remove these lifetime arguments\n+   |           |\n+   |           expected 1 lifetime argument\n+   |\n+note: struct defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/E0107.rs:3:8\n+   |\n+LL | struct Qux<'a, T>(&'a T);\n+   |        ^^^ --\n+\n+error[E0107]: this struct takes 1 lifetime argument but 3 lifetime arguments were supplied\n+  --> $DIR/E0107.rs:41:11\n+   |\n+LL |     qux5: Qux<'a, 'b, i32, 'c>,\n+   |           ^^^     -- help: remove this lifetime argument\n+   |           |\n+   |           expected 1 lifetime argument\n+   |\n+note: struct defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/E0107.rs:3:8\n+   |\n+LL | struct Qux<'a, T>(&'a T);\n+   |        ^^^ --\n+\n+error[E0107]: this struct takes 0 lifetime arguments but 2 lifetime arguments were supplied\n+  --> $DIR/E0107.rs:45:11\n+   |\n+LL |     quux: Quux<'a, i32, 'b>,\n+   |           ^^^^ -- help: remove this lifetime argument\n+   |           |\n+   |           expected 0 lifetime arguments\n+   |\n+note: struct defined here, with 0 lifetime parameters\n+  --> $DIR/E0107.rs:4:8\n+   |\n+LL | struct Quux<T>(T);\n+   |        ^^^^\n+\n+error: aborting due to 9 previous errors\n \n For more information about this error, try `rustc --explain E0107`."}, {"sha": "272cd3619680429d44d25f59455aa6dba6727019", "filename": "src/test/ui/generics/wrong-number-of-args.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.rs?ref=b348385da1891878555d5239a5041ffa77f6e31e", "patch": "@@ -66,6 +66,12 @@ mod lifetime_and_type {\n     //~| ERROR missing lifetime specifier\n     //~| HELP consider introducing\n     //~| HELP add missing\n+\n+    type F = Ty<'static, usize, 'static, usize>;\n+    //~^ ERROR this struct takes 1 lifetime argument but 2 lifetime arguments\n+    //~| ERROR this struct takes 1 generic argument but 2 generic arguments\n+    //~| HELP remove this lifetime argument\n+    //~| HELP remove this generic argument\n }\n \n mod type_and_type_and_type {"}, {"sha": "4e921db8c25a45c0506b5afa93d36fc5a31b793f", "filename": "src/test/ui/generics/wrong-number-of-args.stderr", "status": "modified", "additions": 116, "deletions": 88, "changes": 204, "blob_url": "https://github.com/rust-lang/rust/blob/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b348385da1891878555d5239a5041ffa77f6e31e/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr?ref=b348385da1891878555d5239a5041ffa77f6e31e", "patch": "@@ -213,14 +213,42 @@ help: consider introducing a named lifetime parameter\n LL |     type E<'a> = Ty<'a>;\n    |           ^^^^      ^^\n \n+error[E0107]: this struct takes 1 lifetime argument but 2 lifetime arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:70:14\n+   |\n+LL |     type F = Ty<'static, usize, 'static, usize>;\n+   |              ^^                 ------- help: remove this lifetime argument\n+   |              |\n+   |              expected 1 lifetime argument\n+   |\n+note: struct defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/wrong-number-of-args.rs:46:12\n+   |\n+LL |     struct Ty<'a, T>;\n+   |            ^^ --\n+\n+error[E0107]: this struct takes 1 generic argument but 2 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:70:14\n+   |\n+LL |     type F = Ty<'static, usize, 'static, usize>;\n+   |              ^^                          ----- help: remove this generic argument\n+   |              |\n+   |              expected 1 generic argument\n+   |\n+note: struct defined here, with 1 generic parameter: `T`\n+  --> $DIR/wrong-number-of-args.rs:46:12\n+   |\n+LL |     struct Ty<'a, T>;\n+   |            ^^     -\n+\n error[E0107]: missing generics for struct `type_and_type_and_type::Ty`\n-  --> $DIR/wrong-number-of-args.rs:74:14\n+  --> $DIR/wrong-number-of-args.rs:80:14\n    |\n LL |     type A = Ty;\n    |              ^^ expected at least 2 generic arguments\n    |\n note: struct defined here, with at least 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:72:12\n+  --> $DIR/wrong-number-of-args.rs:78:12\n    |\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -\n@@ -230,15 +258,15 @@ LL |     type A = Ty<A, B>;\n    |              ^^^^^^^^\n \n error[E0107]: this struct takes at least 2 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:78:14\n+  --> $DIR/wrong-number-of-args.rs:84:14\n    |\n LL |     type B = Ty<usize>;\n    |              ^^ ----- supplied 1 generic argument\n    |              |\n    |              expected at least 2 generic arguments\n    |\n note: struct defined here, with at least 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:72:12\n+  --> $DIR/wrong-number-of-args.rs:78:12\n    |\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -\n@@ -248,27 +276,27 @@ LL |     type B = Ty<usize, B>;\n    |                      ^^^\n \n error[E0107]: this struct takes at most 3 generic arguments but 4 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:86:14\n+  --> $DIR/wrong-number-of-args.rs:92:14\n    |\n LL |     type E = Ty<usize, String, char, f64>;\n    |              ^^                      --- help: remove this generic argument\n    |              |\n    |              expected at most 3 generic arguments\n    |\n note: struct defined here, with at most 3 generic parameters: `A`, `B`, `C`\n-  --> $DIR/wrong-number-of-args.rs:72:12\n+  --> $DIR/wrong-number-of-args.rs:78:12\n    |\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -  -\n \n error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:90:14\n+  --> $DIR/wrong-number-of-args.rs:96:14\n    |\n LL |     type F = Ty<>;\n    |              ^^ expected at least 2 generic arguments\n    |\n note: struct defined here, with at least 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:72:12\n+  --> $DIR/wrong-number-of-args.rs:78:12\n    |\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -\n@@ -278,21 +306,21 @@ LL |     type F = Ty<A, B>;\n    |                 ^^^^\n \n error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:110:22\n+  --> $DIR/wrong-number-of-args.rs:116:22\n    |\n LL |     type A = Box<dyn NonGeneric<usize>>;\n    |                      ^^^^^^^^^^------- help: remove these generics\n    |                      |\n    |                      expected 0 generic arguments\n    |\n note: trait defined here, with 0 generic parameters\n-  --> $DIR/wrong-number-of-args.rs:98:11\n+  --> $DIR/wrong-number-of-args.rs:104:11\n    |\n LL |     trait NonGeneric {\n    |           ^^^^^^^^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:114:22\n+  --> $DIR/wrong-number-of-args.rs:120:22\n    |\n LL |     type B = Box<dyn GenericLifetime>;\n    |                      ^^^^^^^^^^^^^^^ expected named lifetime parameter\n@@ -303,27 +331,27 @@ LL |     type B<'a> = Box<dyn GenericLifetime<'a>>;\n    |           ^^^^           ^^^^^^^^^^^^^^^^^^^\n \n error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:118:22\n+  --> $DIR/wrong-number-of-args.rs:124:22\n    |\n LL |     type C = Box<dyn GenericLifetime<'static, 'static>>;\n    |                      ^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n    |                      |\n    |                      expected 1 lifetime argument\n    |\n note: trait defined here, with 1 lifetime parameter: `'a`\n-  --> $DIR/wrong-number-of-args.rs:102:11\n+  --> $DIR/wrong-number-of-args.rs:108:11\n    |\n LL |     trait GenericLifetime<'a> {\n    |           ^^^^^^^^^^^^^^^ --\n \n error[E0107]: missing generics for trait `GenericType`\n-  --> $DIR/wrong-number-of-args.rs:122:22\n+  --> $DIR/wrong-number-of-args.rs:128:22\n    |\n LL |     type D = Box<dyn GenericType>;\n    |                      ^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:106:11\n+  --> $DIR/wrong-number-of-args.rs:112:11\n    |\n LL |     trait GenericType<A> {\n    |           ^^^^^^^^^^^ -\n@@ -333,21 +361,21 @@ LL |     type D = Box<dyn GenericType<A>>;\n    |                      ^^^^^^^^^^^^^^\n \n error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:126:22\n+  --> $DIR/wrong-number-of-args.rs:132:22\n    |\n LL |     type E = Box<dyn GenericType<String, usize>>;\n    |                      ^^^^^^^^^^^         ----- help: remove this generic argument\n    |                      |\n    |                      expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:106:11\n+  --> $DIR/wrong-number-of-args.rs:112:11\n    |\n LL |     trait GenericType<A> {\n    |           ^^^^^^^^^^^ -\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:130:37\n+  --> $DIR/wrong-number-of-args.rs:136:37\n    |\n LL |     type F = Box<dyn GenericLifetime<>>;\n    |                                     ^- expected named lifetime parameter\n@@ -358,13 +386,13 @@ LL |     type F<'a> = Box<dyn GenericLifetime<'a>>;\n    |           ^^^^                           ^^\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:134:22\n+  --> $DIR/wrong-number-of-args.rs:140:22\n    |\n LL |     type G = Box<dyn GenericType<>>;\n    |                      ^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:106:11\n+  --> $DIR/wrong-number-of-args.rs:112:11\n    |\n LL |     trait GenericType<A> {\n    |           ^^^^^^^^^^^ -\n@@ -374,21 +402,21 @@ LL |     type G = Box<dyn GenericType<A>>;\n    |                                  ^\n \n error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:145:26\n+  --> $DIR/wrong-number-of-args.rs:151:26\n    |\n LL |         type A = Box<dyn NonGenericAT<usize, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^------------------- help: remove these generics\n    |                          |\n    |                          expected 0 generic arguments\n    |\n note: trait defined here, with 0 generic parameters\n-  --> $DIR/wrong-number-of-args.rs:141:15\n+  --> $DIR/wrong-number-of-args.rs:147:15\n    |\n LL |         trait NonGenericAT {\n    |               ^^^^^^^^^^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:155:44\n+  --> $DIR/wrong-number-of-args.rs:161:44\n    |\n LL |         type A = Box<dyn GenericLifetimeAT<AssocTy=()>>;\n    |                                            ^ expected named lifetime parameter\n@@ -399,21 +427,21 @@ LL |         type A<'a> = Box<dyn GenericLifetimeAT<'a, AssocTy=()>>;\n    |               ^^^^                             ^^^\n \n error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:159:26\n+  --> $DIR/wrong-number-of-args.rs:165:26\n    |\n LL |         type B = Box<dyn GenericLifetimeAT<'static, 'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n    |                          |\n    |                          expected 1 lifetime argument\n    |\n note: trait defined here, with 1 lifetime parameter: `'a`\n-  --> $DIR/wrong-number-of-args.rs:151:15\n+  --> $DIR/wrong-number-of-args.rs:157:15\n    |\n LL |         trait GenericLifetimeAT<'a> {\n    |               ^^^^^^^^^^^^^^^^^ --\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:163:44\n+  --> $DIR/wrong-number-of-args.rs:169:44\n    |\n LL |         type C = Box<dyn GenericLifetimeAT<(), AssocTy=()>>;\n    |                                            ^ expected named lifetime parameter\n@@ -424,27 +452,27 @@ LL |         type C<'a> = Box<dyn GenericLifetimeAT<'a, (), AssocTy=()>>;\n    |               ^^^^                             ^^^\n \n error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:163:26\n+  --> $DIR/wrong-number-of-args.rs:169:26\n    |\n LL |         type C = Box<dyn GenericLifetimeAT<(), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^ -- help: remove this generic argument\n    |                          |\n    |                          expected 0 generic arguments\n    |\n note: trait defined here, with 0 generic parameters\n-  --> $DIR/wrong-number-of-args.rs:151:15\n+  --> $DIR/wrong-number-of-args.rs:157:15\n    |\n LL |         trait GenericLifetimeAT<'a> {\n    |               ^^^^^^^^^^^^^^^^^\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:175:26\n+  --> $DIR/wrong-number-of-args.rs:181:26\n    |\n LL |         type A = Box<dyn GenericTypeAT<AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:171:15\n+  --> $DIR/wrong-number-of-args.rs:177:15\n    |\n LL |         trait GenericTypeAT<A> {\n    |               ^^^^^^^^^^^^^ -\n@@ -454,41 +482,41 @@ LL |         type A = Box<dyn GenericTypeAT<A, AssocTy=()>>;\n    |                                        ^^\n \n error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:179:26\n+  --> $DIR/wrong-number-of-args.rs:185:26\n    |\n LL |         type B = Box<dyn GenericTypeAT<(), (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^     -- help: remove this generic argument\n    |                          |\n    |                          expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:171:15\n+  --> $DIR/wrong-number-of-args.rs:177:15\n    |\n LL |         trait GenericTypeAT<A> {\n    |               ^^^^^^^^^^^^^ -\n \n error[E0107]: this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:183:26\n+  --> $DIR/wrong-number-of-args.rs:189:26\n    |\n LL |         type C = Box<dyn GenericTypeAT<'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^--------------------- help: remove these generics\n    |                          |\n    |                          expected 0 lifetime arguments\n    |\n note: trait defined here, with 0 lifetime parameters\n-  --> $DIR/wrong-number-of-args.rs:171:15\n+  --> $DIR/wrong-number-of-args.rs:177:15\n    |\n LL |         trait GenericTypeAT<A> {\n    |               ^^^^^^^^^^^^^\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:183:26\n+  --> $DIR/wrong-number-of-args.rs:189:26\n    |\n LL |         type C = Box<dyn GenericTypeAT<'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:171:15\n+  --> $DIR/wrong-number-of-args.rs:177:15\n    |\n LL |         trait GenericTypeAT<A> {\n    |               ^^^^^^^^^^^^^ -\n@@ -498,7 +526,7 @@ LL |         type C = Box<dyn GenericTypeAT<'static, A, AssocTy=()>>;\n    |                                               ^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:195:48\n+  --> $DIR/wrong-number-of-args.rs:201:48\n    |\n LL |         type A = Box<dyn GenericLifetimeTypeAT<AssocTy=()>>;\n    |                                                ^ expected named lifetime parameter\n@@ -509,13 +537,13 @@ LL |         type A<'a> = Box<dyn GenericLifetimeTypeAT<'a, AssocTy=()>>;\n    |               ^^^^                                 ^^^\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:195:26\n+  --> $DIR/wrong-number-of-args.rs:201:26\n    |\n LL |         type A = Box<dyn GenericLifetimeTypeAT<AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n@@ -525,13 +553,13 @@ LL |         type A = Box<dyn GenericLifetimeTypeAT<A, AssocTy=()>>;\n    |                                                ^^\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:201:26\n+  --> $DIR/wrong-number-of-args.rs:207:26\n    |\n LL |         type B = Box<dyn GenericLifetimeTypeAT<'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n@@ -541,27 +569,27 @@ LL |         type B = Box<dyn GenericLifetimeTypeAT<'static, A, AssocTy=()>>;\n    |                                                       ^^^\n \n error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:205:26\n+  --> $DIR/wrong-number-of-args.rs:211:26\n    |\n LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n    |                          |\n    |                          expected 1 lifetime argument\n    |\n note: trait defined here, with 1 lifetime parameter: `'a`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^ --\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:205:26\n+  --> $DIR/wrong-number-of-args.rs:211:26\n    |\n LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n@@ -571,7 +599,7 @@ LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, A, AssocTy\n    |                                                                ^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:211:48\n+  --> $DIR/wrong-number-of-args.rs:217:48\n    |\n LL |         type D = Box<dyn GenericLifetimeTypeAT<(), AssocTy=()>>;\n    |                                                ^ expected named lifetime parameter\n@@ -582,7 +610,7 @@ LL |         type D<'a> = Box<dyn GenericLifetimeTypeAT<'a, (), AssocTy=()>>;\n    |               ^^^^                                 ^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:215:48\n+  --> $DIR/wrong-number-of-args.rs:221:48\n    |\n LL |         type E = Box<dyn GenericLifetimeTypeAT<(), (), AssocTy=()>>;\n    |                                                ^ expected named lifetime parameter\n@@ -593,83 +621,83 @@ LL |         type E<'a> = Box<dyn GenericLifetimeTypeAT<'a, (), (), AssocTy=()>>\n    |               ^^^^                                 ^^^\n \n error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:215:26\n+  --> $DIR/wrong-number-of-args.rs:221:26\n    |\n LL |         type E = Box<dyn GenericLifetimeTypeAT<(), (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^     -- help: remove this generic argument\n    |                          |\n    |                          expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n \n error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:221:26\n+  --> $DIR/wrong-number-of-args.rs:227:26\n    |\n LL |         type F = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n    |                          |\n    |                          expected 1 lifetime argument\n    |\n note: trait defined here, with 1 lifetime parameter: `'a`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^ --\n \n error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:225:26\n+  --> $DIR/wrong-number-of-args.rs:231:26\n    |\n LL |         type G = Box<dyn GenericLifetimeTypeAT<'static, (), (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^              -- help: remove this generic argument\n    |                          |\n    |                          expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n \n error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:229:26\n+  --> $DIR/wrong-number-of-args.rs:235:26\n    |\n LL |         type H = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n    |                          |\n    |                          expected 1 lifetime argument\n    |\n note: trait defined here, with 1 lifetime parameter: `'a`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^ --\n \n error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:229:26\n+  --> $DIR/wrong-number-of-args.rs:235:26\n    |\n LL |         type H = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^                       -- help: remove this generic argument\n    |                          |\n    |                          expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:191:15\n+  --> $DIR/wrong-number-of-args.rs:197:15\n    |\n LL |         trait GenericLifetimeTypeAT<'a, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^     -\n \n error[E0107]: this trait takes 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:241:26\n+  --> $DIR/wrong-number-of-args.rs:247:26\n    |\n LL |         type A = Box<dyn GenericTypeTypeAT<AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^ expected 2 generic arguments\n    |\n note: trait defined here, with 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:237:15\n+  --> $DIR/wrong-number-of-args.rs:243:15\n    |\n LL |         trait GenericTypeTypeAT<A, B> {\n    |               ^^^^^^^^^^^^^^^^^ -  -\n@@ -679,15 +707,15 @@ LL |         type A = Box<dyn GenericTypeTypeAT<A, B, AssocTy=()>>;\n    |                                            ^^^^^\n \n error[E0107]: this trait takes 2 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:245:26\n+  --> $DIR/wrong-number-of-args.rs:251:26\n    |\n LL |         type B = Box<dyn GenericTypeTypeAT<(), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^ -- supplied 1 generic argument\n    |                          |\n    |                          expected 2 generic arguments\n    |\n note: trait defined here, with 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:237:15\n+  --> $DIR/wrong-number-of-args.rs:243:15\n    |\n LL |         trait GenericTypeTypeAT<A, B> {\n    |               ^^^^^^^^^^^^^^^^^ -  -\n@@ -697,21 +725,21 @@ LL |         type B = Box<dyn GenericTypeTypeAT<(), B, AssocTy=()>>;\n    |                                              ^^^\n \n error[E0107]: this trait takes 2 generic arguments but 3 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:249:26\n+  --> $DIR/wrong-number-of-args.rs:255:26\n    |\n LL |         type C = Box<dyn GenericTypeTypeAT<(), (), (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^         -- help: remove this generic argument\n    |                          |\n    |                          expected 2 generic arguments\n    |\n note: trait defined here, with 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:237:15\n+  --> $DIR/wrong-number-of-args.rs:243:15\n    |\n LL |         trait GenericTypeTypeAT<A, B> {\n    |               ^^^^^^^^^^^^^^^^^ -  -\n \n error[E0106]: missing lifetime specifiers\n-  --> $DIR/wrong-number-of-args.rs:259:52\n+  --> $DIR/wrong-number-of-args.rs:265:52\n    |\n LL |         type A = Box<dyn GenericLifetimeLifetimeAT<AssocTy=()>>;\n    |                                                    ^ expected 2 lifetime parameters\n@@ -722,15 +750,15 @@ LL |         type A<'a> = Box<dyn GenericLifetimeLifetimeAT<'a, 'a, AssocTy=()>>\n    |               ^^^^                                     ^^^^^^^\n \n error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:263:26\n+  --> $DIR/wrong-number-of-args.rs:269:26\n    |\n LL |         type B = Box<dyn GenericLifetimeLifetimeAT<'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ ------- supplied 1 lifetime argument\n    |                          |\n    |                          expected 2 lifetime arguments\n    |\n note: trait defined here, with 2 lifetime parameters: `'a`, `'b`\n-  --> $DIR/wrong-number-of-args.rs:255:15\n+  --> $DIR/wrong-number-of-args.rs:261:15\n    |\n LL |         trait GenericLifetimeLifetimeAT<'a, 'b> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^ --  --\n@@ -740,7 +768,7 @@ LL |         type B = Box<dyn GenericLifetimeLifetimeAT<'static, 'b, AssocTy=()>\n    |                                                           ^^^^\n \n error[E0106]: missing lifetime specifiers\n-  --> $DIR/wrong-number-of-args.rs:273:56\n+  --> $DIR/wrong-number-of-args.rs:279:56\n    |\n LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<AssocTy=()>>;\n    |                                                        ^ expected 2 lifetime parameters\n@@ -751,13 +779,13 @@ LL |         type A<'a> = Box<dyn GenericLifetimeLifetimeTypeAT<'a, 'a, AssocTy=\n    |               ^^^^                                         ^^^^^^^\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:273:26\n+  --> $DIR/wrong-number-of-args.rs:279:26\n    |\n LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:269:15\n+  --> $DIR/wrong-number-of-args.rs:275:15\n    |\n LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^         -\n@@ -767,15 +795,15 @@ LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<A, AssocTy=()>>;\n    |                                                        ^^\n \n error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:279:26\n+  --> $DIR/wrong-number-of-args.rs:285:26\n    |\n LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ------- supplied 1 lifetime argument\n    |                          |\n    |                          expected 2 lifetime arguments\n    |\n note: trait defined here, with 2 lifetime parameters: `'a`, `'b`\n-  --> $DIR/wrong-number-of-args.rs:269:15\n+  --> $DIR/wrong-number-of-args.rs:275:15\n    |\n LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --  --\n@@ -785,13 +813,13 @@ LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, 'b, AssocTy\n    |                                                               ^^^^\n \n error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:279:26\n+  --> $DIR/wrong-number-of-args.rs:285:26\n    |\n LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:269:15\n+  --> $DIR/wrong-number-of-args.rs:275:15\n    |\n LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^         -\n@@ -801,15 +829,15 @@ LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, A, AssocTy=\n    |                                                               ^^^\n \n error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:285:26\n+  --> $DIR/wrong-number-of-args.rs:291:26\n    |\n LL |         type C = Box<dyn GenericLifetimeLifetimeTypeAT<'static, (), AssocTy=()>>;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ------- supplied 1 lifetime argument\n    |                          |\n    |                          expected 2 lifetime arguments\n    |\n note: trait defined here, with 2 lifetime parameters: `'a`, `'b`\n-  --> $DIR/wrong-number-of-args.rs:269:15\n+  --> $DIR/wrong-number-of-args.rs:275:15\n    |\n LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --  --\n@@ -819,7 +847,7 @@ LL |         type C = Box<dyn GenericLifetimeLifetimeTypeAT<'static, 'b, (), Ass\n    |                                                               ^^^^\n \n error[E0107]: missing generics for struct `HashMap`\n-  --> $DIR/wrong-number-of-args.rs:295:18\n+  --> $DIR/wrong-number-of-args.rs:301:18\n    |\n LL |         type A = HashMap;\n    |                  ^^^^^^^ expected at least 2 generic arguments\n@@ -835,7 +863,7 @@ LL |         type A = HashMap<K, V>;\n    |                  ^^^^^^^^^^^^^\n \n error[E0107]: this struct takes at least 2 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:299:18\n+  --> $DIR/wrong-number-of-args.rs:305:18\n    |\n LL |         type B = HashMap<String>;\n    |                  ^^^^^^^ ------ supplied 1 generic argument\n@@ -853,7 +881,7 @@ LL |         type B = HashMap<String, V>;\n    |                                ^^^\n \n error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:303:18\n+  --> $DIR/wrong-number-of-args.rs:309:18\n    |\n LL |         type C = HashMap<'static>;\n    |                  ^^^^^^^--------- help: remove these generics\n@@ -867,7 +895,7 @@ LL | pub struct HashMap<K, V, S = RandomState> {\n    |            ^^^^^^^\n \n error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:303:18\n+  --> $DIR/wrong-number-of-args.rs:309:18\n    |\n LL |         type C = HashMap<'static>;\n    |                  ^^^^^^^ expected at least 2 generic arguments\n@@ -883,7 +911,7 @@ LL |         type C = HashMap<'static, K, V>;\n    |                                 ^^^^^^\n \n error[E0107]: this struct takes at most 3 generic arguments but 4 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:309:18\n+  --> $DIR/wrong-number-of-args.rs:315:18\n    |\n LL |         type D = HashMap<usize, String, char, f64>;\n    |                  ^^^^^^^                      --- help: remove this generic argument\n@@ -897,7 +925,7 @@ LL | pub struct HashMap<K, V, S = RandomState> {\n    |            ^^^^^^^ -  -  -\n \n error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:313:18\n+  --> $DIR/wrong-number-of-args.rs:319:18\n    |\n LL |         type E = HashMap<>;\n    |                  ^^^^^^^ expected at least 2 generic arguments\n@@ -913,7 +941,7 @@ LL |         type E = HashMap<K, V>;\n    |                          ^^^^\n \n error[E0107]: missing generics for enum `Result`\n-  --> $DIR/wrong-number-of-args.rs:319:18\n+  --> $DIR/wrong-number-of-args.rs:325:18\n    |\n LL |         type A = Result;\n    |                  ^^^^^^ expected 2 generic arguments\n@@ -929,7 +957,7 @@ LL |         type A = Result<T, E>;\n    |                  ^^^^^^^^^^^^\n \n error[E0107]: this enum takes 2 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:323:18\n+  --> $DIR/wrong-number-of-args.rs:329:18\n    |\n LL |         type B = Result<String>;\n    |                  ^^^^^^ ------ supplied 1 generic argument\n@@ -947,7 +975,7 @@ LL |         type B = Result<String, E>;\n    |                               ^^^\n \n error[E0107]: this enum takes 0 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:327:18\n+  --> $DIR/wrong-number-of-args.rs:333:18\n    |\n LL |         type C = Result<'static>;\n    |                  ^^^^^^--------- help: remove these generics\n@@ -961,7 +989,7 @@ LL | pub enum Result<T, E> {\n    |          ^^^^^^\n \n error[E0107]: this enum takes 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:327:18\n+  --> $DIR/wrong-number-of-args.rs:333:18\n    |\n LL |         type C = Result<'static>;\n    |                  ^^^^^^ expected 2 generic arguments\n@@ -977,7 +1005,7 @@ LL |         type C = Result<'static, T, E>;\n    |                                ^^^^^^\n \n error[E0107]: this enum takes 2 generic arguments but 3 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:333:18\n+  --> $DIR/wrong-number-of-args.rs:339:18\n    |\n LL |         type D = Result<usize, String, char>;\n    |                  ^^^^^^                ---- help: remove this generic argument\n@@ -991,7 +1019,7 @@ LL | pub enum Result<T, E> {\n    |          ^^^^^^ -  -\n \n error[E0107]: this enum takes 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:337:18\n+  --> $DIR/wrong-number-of-args.rs:343:18\n    |\n LL |         type E = Result<>;\n    |                  ^^^^^^ expected 2 generic arguments\n@@ -1006,7 +1034,7 @@ help: add missing generic arguments\n LL |         type E = Result<T, E>;\n    |                         ^^^^\n \n-error: aborting due to 69 previous errors\n+error: aborting due to 71 previous errors\n \n Some errors have detailed explanations: E0106, E0107.\n For more information about an error, try `rustc --explain E0106`."}]}