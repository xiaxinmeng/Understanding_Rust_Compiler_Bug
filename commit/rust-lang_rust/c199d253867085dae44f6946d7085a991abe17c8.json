{"sha": "c199d253867085dae44f6946d7085a991abe17c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOTlkMjUzODY3MDg1ZGFlNDRmNjk0NmQ3MDg1YTk5MWFiZTE3Yzg=", "commit": {"author": {"name": "lukaramu", "email": "lukaramu@gmail.com", "date": "2017-04-06T19:59:08Z"}, "committer": {"name": "lukaramu", "email": "lukaramu@gmail.com", "date": "2017-04-06T19:59:08Z"}, "message": "rephrased std::hash::BuildHasherDefault docs\n\nPart of #29357.\n* split summary and explanation more clearly\n* added link to nomicon for \"zero-sized\"\n* \"does not need construction\" -> say how it can be created, and that it\n  doesn't need to be done with `HashMap` or `HashSet`", "tree": {"sha": "ecbff29553bfee42f67c0d3cbf5269131550dac3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecbff29553bfee42f67c0d3cbf5269131550dac3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c199d253867085dae44f6946d7085a991abe17c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c199d253867085dae44f6946d7085a991abe17c8", "html_url": "https://github.com/rust-lang/rust/commit/c199d253867085dae44f6946d7085a991abe17c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c199d253867085dae44f6946d7085a991abe17c8/comments", "author": {"login": "chordowl", "id": 3811822, "node_id": "MDQ6VXNlcjM4MTE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3811822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chordowl", "html_url": "https://github.com/chordowl", "followers_url": "https://api.github.com/users/chordowl/followers", "following_url": "https://api.github.com/users/chordowl/following{/other_user}", "gists_url": "https://api.github.com/users/chordowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chordowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chordowl/subscriptions", "organizations_url": "https://api.github.com/users/chordowl/orgs", "repos_url": "https://api.github.com/users/chordowl/repos", "events_url": "https://api.github.com/users/chordowl/events{/privacy}", "received_events_url": "https://api.github.com/users/chordowl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chordowl", "id": 3811822, "node_id": "MDQ6VXNlcjM4MTE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3811822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chordowl", "html_url": "https://github.com/chordowl", "followers_url": "https://api.github.com/users/chordowl/followers", "following_url": "https://api.github.com/users/chordowl/following{/other_user}", "gists_url": "https://api.github.com/users/chordowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chordowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chordowl/subscriptions", "organizations_url": "https://api.github.com/users/chordowl/orgs", "repos_url": "https://api.github.com/users/chordowl/repos", "events_url": "https://api.github.com/users/chordowl/events{/privacy}", "received_events_url": "https://api.github.com/users/chordowl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44855a4cef3e83c76c386fdcf034447a8ee128e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/44855a4cef3e83c76c386fdcf034447a8ee128e4", "html_url": "https://github.com/rust-lang/rust/commit/44855a4cef3e83c76c386fdcf034447a8ee128e4"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "0d34aeb7cb7312ecf215562b2504df1f804d7d39", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c199d253867085dae44f6946d7085a991abe17c8/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c199d253867085dae44f6946d7085a991abe17c8/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=c199d253867085dae44f6946d7085a991abe17c8", "patch": "@@ -285,11 +285,17 @@ pub trait BuildHasher {\n     fn build_hasher(&self) -> Self::Hasher;\n }\n \n-/// The `BuildHasherDefault` structure is used in scenarios where one has a\n-/// type that implements [`Hasher`] and [`Default`], but needs that type to\n-/// implement [`BuildHasher`].\n+/// Used to create a default [`BuildHasher`] instance for types that implement\n+/// [`Hasher`] and [`Default`].\n ///\n-/// This structure is zero-sized and does not need construction.\n+/// `BuildHasherDefault<H>` can be used when a type `H` implements [`Hasher`] and\n+/// [`Default`], and you need a corresponding [`BuildHasher`] instance, but none is\n+/// defined.\n+///\n+/// Any `BuildHasherDefault` is [zero-sized]. It can be created with\n+/// [`default`][method.Default]. When using `BuildHasherDefault` with [`HashMap`] or\n+/// [`HashSet`], this doesn't need to be done, since they implement appropriate\n+/// [`Default`] instances themselves.\n ///\n /// # Examples\n ///\n@@ -322,8 +328,11 @@ pub trait BuildHasher {\n ///\n /// [`BuildHasher`]: trait.BuildHasher.html\n /// [`Default`]: ../default/trait.Default.html\n+/// [method.default]: #method.default\n /// [`Hasher`]: trait.Hasher.html\n /// [`HashMap`]: ../../std/collections/struct.HashMap.html\n+/// [`HashSet`]: ../../std/collections/struct.HashSet.html\n+/// [zero-sized]: https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts\n #[stable(since = \"1.7.0\", feature = \"build_hasher\")]\n pub struct BuildHasherDefault<H>(marker::PhantomData<H>);\n "}]}