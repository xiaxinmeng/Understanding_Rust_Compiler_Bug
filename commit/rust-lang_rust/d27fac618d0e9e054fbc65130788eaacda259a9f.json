{"sha": "d27fac618d0e9e054fbc65130788eaacda259a9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyN2ZhYzYxOGQwZTllMDU0ZmJjNjUxMzA3ODhlYWFjZGEyNTlhOWY=", "commit": {"author": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-02-25T00:41:08Z"}, "committer": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-02-25T00:41:08Z"}, "message": "Fix find_width_of_character_at_span bounds check\n\nCommit 0bd96671f0 added bounds checking of our current target byte\nposition to prevent infinite loops. Unfortunately it was comparing the\nfile-relative `target` versus the global relative `file_start_pos` and\n`file_end_pos`.\n\nThe result is failing to detect multibyte characters unless their\nfile-relative offset fit within their global offset. This causes other\nparts of the compiler to generate spans pointing to the middle of a\nmultibyte character which will ultimately panic in\n`bytepos_to_file_charpos`.\n\nFix by comparing the `target` to the total file size when moving forward\nand doing checked subtraction when moving backwards. This should\npreserve the intent of the bounds check while removing the offset\nconfusion.\n\nFixes #48508", "tree": {"sha": "c00b5ba3bbd4ab1f75df79a0a03f7f84e6b9c4de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c00b5ba3bbd4ab1f75df79a0a03f7f84e6b9c4de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d27fac618d0e9e054fbc65130788eaacda259a9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d27fac618d0e9e054fbc65130788eaacda259a9f", "html_url": "https://github.com/rust-lang/rust/commit/d27fac618d0e9e054fbc65130788eaacda259a9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d27fac618d0e9e054fbc65130788eaacda259a9f/comments", "author": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6070d3e47e5e9f15575a3bd33583358b52bc6eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/6070d3e47e5e9f15575a3bd33583358b52bc6eda", "html_url": "https://github.com/rust-lang/rust/commit/6070d3e47e5e9f15575a3bd33583358b52bc6eda"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "5d36f39b2e43c5e898f4b9fcdf26e2a27305b2d8", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d27fac618d0e9e054fbc65130788eaacda259a9f/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27fac618d0e9e054fbc65130788eaacda259a9f/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=d27fac618d0e9e054fbc65130788eaacda259a9f", "patch": "@@ -705,17 +705,20 @@ impl CodeMap {\n         };\n         debug!(\"find_width_of_character_at_span: snippet=`{:?}`\", snippet);\n \n-        let file_start_pos = local_begin.fm.start_pos.to_usize();\n-        let file_end_pos = local_begin.fm.end_pos.to_usize();\n-        debug!(\"find_width_of_character_at_span: file_start_pos=`{:?}` file_end_pos=`{:?}`\",\n-               file_start_pos, file_end_pos);\n-\n         let mut target = if forwards { end_index + 1 } else { end_index - 1 };\n         debug!(\"find_width_of_character_at_span: initial target=`{:?}`\", target);\n \n-        while !snippet.is_char_boundary(target - start_index)\n-                && target >= file_start_pos && target <= file_end_pos {\n-            target = if forwards { target + 1 } else { target - 1 };\n+        while !snippet.is_char_boundary(target - start_index) && target < source_len {\n+            target = if forwards {\n+                target + 1\n+            } else {\n+                match target.checked_sub(1) {\n+                    Some(target) => target,\n+                    None => {\n+                        break;\n+                    }\n+                }\n+            };\n             debug!(\"find_width_of_character_at_span: target=`{:?}`\", target);\n         }\n         debug!(\"find_width_of_character_at_span: final target=`{:?}`\", target);"}]}