{"sha": "87ff908135a28115593f8cf895d176aef331347c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZmY5MDgxMzVhMjgxMTU1OTNmOGNmODk1ZDE3NmFlZjMzMTM0N2M=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-19T13:38:26Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-19T13:38:26Z"}, "message": "Add vis matcher", "tree": {"sha": "5dd5b02918f9abbd3be1d6071ae266db63add4c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dd5b02918f9abbd3be1d6071ae266db63add4c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87ff908135a28115593f8cf895d176aef331347c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87ff908135a28115593f8cf895d176aef331347c", "html_url": "https://github.com/rust-lang/rust/commit/87ff908135a28115593f8cf895d176aef331347c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87ff908135a28115593f8cf895d176aef331347c/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5983b85fc9e520208684a8c625cdb96bb219b31", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5983b85fc9e520208684a8c625cdb96bb219b31", "html_url": "https://github.com/rust-lang/rust/commit/c5983b85fc9e520208684a8c625cdb96bb219b31"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "074be904349ce0570604fd0f45ad803ede7e0f2f", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=87ff908135a28115593f8cf895d176aef331347c", "patch": "@@ -809,4 +809,16 @@ MACRO_ITEMS@[0; 40)\n         );\n         assert_expansion(&rules, r#\"foo!(u8 0)\"#, r#\"const VALUE: u8 = 0;\"#);\n     }\n+\n+    #[test]\n+    fn test_vis() {\n+        let rules = create_rules(\n+            r#\"\n+        macro_rules! foo {\n+              ($ vis:vis $ name:ident) => { $ vis fn $ name() {}};\n+        }\n+\"#,\n+        );\n+        assert_expansion(&rules, r#\"foo!(pub foo);\"#, r#\"pub fn foo() {}\"#);\n+    }\n }"}, {"sha": "01e29b556a97be91cf18e015d794d25633dec9bf", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=87ff908135a28115593f8cf895d176aef331347c", "patch": "@@ -193,6 +193,10 @@ fn match_lhs(pattern: &crate::Subtree, input: &mut TtCursor) -> Result<Bindings,\n                                 Binding::Simple(tt::Leaf::from(literal).into()),\n                             );\n                         }\n+                        \"vis\" => {\n+                            let vis = input.eat_vis().ok_or(ExpandError::UnexpectedToken)?.clone();\n+                            res.inner.insert(text.clone(), Binding::Simple(vis.into()));\n+                        }\n \n                         _ => return Err(ExpandError::UnexpectedToken),\n                     }"}, {"sha": "528aa0f8a0c8edb71e73752e48be95d05362b2e3", "filename": "crates/ra_mbe/src/subtree_parser.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Fsubtree_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Fsubtree_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsubtree_parser.rs?ref=87ff908135a28115593f8cf895d176aef331347c", "patch": "@@ -58,6 +58,10 @@ impl<'a> Parser<'a> {\n         self.parse(ra_parser::parse_item)\n     }\n \n+    pub fn parse_vis(self) -> Option<tt::TokenTree> {\n+        self.parse(ra_parser::parse_vis)\n+    }\n+\n     fn parse<F>(self, f: F) -> Option<tt::TokenTree>\n     where\n         F: FnOnce(&dyn TokenSource, &mut dyn TreeSink),"}, {"sha": "818c412a08fc29188aec7db1c36f732d1427614b", "filename": "crates/ra_mbe/src/tt_cursor.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs?ref=87ff908135a28115593f8cf895d176aef331347c", "patch": "@@ -137,6 +137,11 @@ impl<'a> TtCursor<'a> {\n         self.eat_ident().cloned().map(|ident| tt::Leaf::from(ident).into())\n     }\n \n+    pub(crate) fn eat_vis(&mut self) -> Option<tt::TokenTree> {\n+        let parser = Parser::new(&mut self.pos, self.subtree);\n+        parser.parse_vis()\n+    }\n+\n     pub(crate) fn expect_char(&mut self, char: char) -> Result<(), ParseError> {\n         if self.at_char(char) {\n             self.bump();"}, {"sha": "67eae749d5f6cc44c55c22b39a91d9c26b7b1efd", "filename": "crates/ra_parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=87ff908135a28115593f8cf895d176aef331347c", "patch": "@@ -167,7 +167,7 @@ impl BlockLike {\n     }\n }\n \n-fn opt_visibility(p: &mut Parser) -> bool {\n+pub(crate) fn opt_visibility(p: &mut Parser) -> bool {\n     match p.current() {\n         PUB_KW => {\n             let m = p.start();"}, {"sha": "970d699c01b23085774c6075e23c5e623653a3ce", "filename": "crates/ra_parser/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_parser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ff908135a28115593f8cf895d176aef331347c/crates%2Fra_parser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Flib.rs?ref=87ff908135a28115593f8cf895d176aef331347c", "patch": "@@ -107,6 +107,13 @@ pub fn parse_item(token_source: &dyn TokenSource, tree_sink: &mut dyn TreeSink)\n     parse_from_tokens(token_source, tree_sink, grammar::item);\n }\n \n+/// Parse given tokens into the given sink as an visibility qualifier\n+pub fn parse_vis(token_source: &dyn TokenSource, tree_sink: &mut dyn TreeSink) {\n+    parse_from_tokens(token_source, tree_sink, |p| {\n+        grammar::opt_visibility(p);\n+    });\n+}\n+\n pub fn parse_macro_items(token_source: &dyn TokenSource, tree_sink: &mut dyn TreeSink) {\n     parse_from_tokens(token_source, tree_sink, grammar::macro_items);\n }"}]}