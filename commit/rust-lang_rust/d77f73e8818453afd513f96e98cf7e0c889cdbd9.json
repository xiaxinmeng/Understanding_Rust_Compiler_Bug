{"sha": "d77f73e8818453afd513f96e98cf7e0c889cdbd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3N2Y3M2U4ODE4NDUzYWZkNTEzZjk2ZTk4Y2Y3ZTBjODg5Y2RiZDk=", "commit": {"author": {"name": "Michal Sudwoj", "email": "msudwoj@student.ethz.ch", "date": "2020-05-21T22:31:50Z"}, "committer": {"name": "Michal Sudwoj", "email": "msudwoj@student.ethz.ch", "date": "2020-05-24T06:20:40Z"}, "message": "Formatted correctly", "tree": {"sha": "7d34b8e58319ea7e7a169820883e5c23614c13c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d34b8e58319ea7e7a169820883e5c23614c13c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d77f73e8818453afd513f96e98cf7e0c889cdbd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d77f73e8818453afd513f96e98cf7e0c889cdbd9", "html_url": "https://github.com/rust-lang/rust/commit/d77f73e8818453afd513f96e98cf7e0c889cdbd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d77f73e8818453afd513f96e98cf7e0c889cdbd9/comments", "author": {"login": "westernmagic", "id": 147945, "node_id": "MDQ6VXNlcjE0Nzk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/147945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westernmagic", "html_url": "https://github.com/westernmagic", "followers_url": "https://api.github.com/users/westernmagic/followers", "following_url": "https://api.github.com/users/westernmagic/following{/other_user}", "gists_url": "https://api.github.com/users/westernmagic/gists{/gist_id}", "starred_url": "https://api.github.com/users/westernmagic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westernmagic/subscriptions", "organizations_url": "https://api.github.com/users/westernmagic/orgs", "repos_url": "https://api.github.com/users/westernmagic/repos", "events_url": "https://api.github.com/users/westernmagic/events{/privacy}", "received_events_url": "https://api.github.com/users/westernmagic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "westernmagic", "id": 147945, "node_id": "MDQ6VXNlcjE0Nzk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/147945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westernmagic", "html_url": "https://github.com/westernmagic", "followers_url": "https://api.github.com/users/westernmagic/followers", "following_url": "https://api.github.com/users/westernmagic/following{/other_user}", "gists_url": "https://api.github.com/users/westernmagic/gists{/gist_id}", "starred_url": "https://api.github.com/users/westernmagic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westernmagic/subscriptions", "organizations_url": "https://api.github.com/users/westernmagic/orgs", "repos_url": "https://api.github.com/users/westernmagic/repos", "events_url": "https://api.github.com/users/westernmagic/events{/privacy}", "received_events_url": "https://api.github.com/users/westernmagic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58fdc43e03bd77c575bc1c62b18b784f71ab4bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/58fdc43e03bd77c575bc1c62b18b784f71ab4bf2", "html_url": "https://github.com/rust-lang/rust/commit/58fdc43e03bd77c575bc1c62b18b784f71ab4bf2"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "99061d1fdeb8b3915189d95cc5bf28b4a854c287", "filename": "src/librustc_target/asm/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d77f73e8818453afd513f96e98cf7e0c889cdbd9/src%2Flibrustc_target%2Fasm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d77f73e8818453afd513f96e98cf7e0c889cdbd9/src%2Flibrustc_target%2Fasm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fasm%2Fmod.rs?ref=d77f73e8818453afd513f96e98cf7e0c889cdbd9", "patch": "@@ -385,9 +385,7 @@ impl InlineAsmRegClass {\n                 InlineAsmArch::RiscV32 | InlineAsmArch::RiscV64 => {\n                     Self::RiscV(RiscVInlineAsmRegClass::parse(arch, name)?)\n                 }\n-                InlineAsmArch::Nvptx64 => {\n-                    Self::Nvptx(NvptxInlineAsmRegClass::parse(arch, name)?)\n-                }\n+                InlineAsmArch::Nvptx64 => Self::Nvptx(NvptxInlineAsmRegClass::parse(arch, name)?),\n             })\n         })\n     }"}]}