{"sha": "f465f95b4b9302434246209c968c90b8704b8099", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NjVmOTViNGI5MzAyNDM0MjQ2MjA5Yzk2OGM5MGI4NzA0YjgwOTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T21:05:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-20T21:05:36Z"}, "message": "Rollup merge of #67428 - Centril:ibp-explicit-match, r=matthewjasper\n\n`is_binding_pat`: use explicit match & include or-pats in grammar\n\nr? @matthewjasper @nikomatsakis", "tree": {"sha": "3d49dc52df9407baab3b8eb64b39dd26ecc5e44c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d49dc52df9407baab3b8eb64b39dd26ecc5e44c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f465f95b4b9302434246209c968c90b8704b8099", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/TegCRBK7hj4Ov3rIwAAdHIIABKDZq5cZ6B3rVYZsQjcgyCg\nOrNGF2CNm6pLVVYsE/RvyXo0Ab8TKYepXCJJUMfeAVvOK/sx57+MULOTzdNeL+mk\n9pclwTNz4ZNUMVTP4iLKd1xZX7kDsTEaCSXi/N9qIu4izBP5+CBjrtXBzsNwQZ8+\nyxLScbR1XFVjI82SPADV2fZcB7RbHEm2UKsqKOfCMDDOKRJDYOExyo1KUYvlieh9\n9PJP+00D2rGw0569NoG8hMrEBFJZoKwxzCzM3VnZooHbn5yt7dm/jyRnyuM5I9tz\nVMtRuCOmMaR90Dn5JPDNfP/4cH2SLIXSoCCrZNeTxfd13V6SAwttVexD1QkiPzw=\n=MxXB\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d49dc52df9407baab3b8eb64b39dd26ecc5e44c\nparent eaee9d11ee39ef58d2985a87f296d20eb1ee1345\nparent 4414f0d0e0e30f961b26a1f357fb78118be16cc7\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576875936 +0100\ncommitter GitHub <noreply@github.com> 1576875936 +0100\n\nRollup merge of #67428 - Centril:ibp-explicit-match, r=matthewjasper\n\n`is_binding_pat`: use explicit match & include or-pats in grammar\n\nr? @matthewjasper @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f465f95b4b9302434246209c968c90b8704b8099", "html_url": "https://github.com/rust-lang/rust/commit/f465f95b4b9302434246209c968c90b8704b8099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f465f95b4b9302434246209c968c90b8704b8099/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaee9d11ee39ef58d2985a87f296d20eb1ee1345", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaee9d11ee39ef58d2985a87f296d20eb1ee1345", "html_url": "https://github.com/rust-lang/rust/commit/eaee9d11ee39ef58d2985a87f296d20eb1ee1345"}, {"sha": "4414f0d0e0e30f961b26a1f357fb78118be16cc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4414f0d0e0e30f961b26a1f357fb78118be16cc7", "html_url": "https://github.com/rust-lang/rust/commit/4414f0d0e0e30f961b26a1f357fb78118be16cc7"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "e050e5f8942558f96a83434c847feed6c3c5cb2f", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f465f95b4b9302434246209c968c90b8704b8099/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f465f95b4b9302434246209c968c90b8704b8099/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=f465f95b4b9302434246209c968c90b8704b8099", "patch": "@@ -1173,6 +1173,7 @@ fn resolve_local<'tcx>(\n     ///        | VariantName(..., P&, ...)\n     ///        | [ ..., P&, ... ]\n     ///        | ( ..., P&, ... )\n+    ///        | ... \"|\" P& \"|\" ...\n     ///        | box P&\n     fn is_binding_pat(pat: &hir::Pat) -> bool {\n         // Note that the code below looks for *explicit* refs only, that is, it won't\n@@ -1212,6 +1213,7 @@ fn resolve_local<'tcx>(\n                 pats3.iter().any(|p| is_binding_pat(&p))\n             }\n \n+            PatKind::Or(ref subpats) |\n             PatKind::TupleStruct(_, ref subpats, _) |\n             PatKind::Tuple(ref subpats, _) => {\n                 subpats.iter().any(|p| is_binding_pat(&p))\n@@ -1221,7 +1223,13 @@ fn resolve_local<'tcx>(\n                 is_binding_pat(&subpat)\n             }\n \n-            _ => false,\n+            PatKind::Ref(_, _) |\n+            PatKind::Binding(hir::BindingAnnotation::Unannotated, ..) |\n+            PatKind::Binding(hir::BindingAnnotation::Mutable, ..) |\n+            PatKind::Wild |\n+            PatKind::Path(_) |\n+            PatKind::Lit(_) |\n+            PatKind::Range(_, _, _) => false,\n         }\n     }\n "}]}