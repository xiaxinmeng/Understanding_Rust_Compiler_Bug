{"sha": "4711ac314c3380f992e218879b7c94b26ba4102b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MTFhYzMxNGMzMzgwZjk5MmUyMTg4NzliN2M5NGIyNmJhNDEwMmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-06T06:55:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-06T06:55:10Z"}, "message": "Auto merge of #38436 - bluecereal:patch-1, r=frewsxcv\n\nUpdate if-let.md\n\nCalling if-let a combination of if and let is confusing, as some may be led to believe that it's a literal combination, instead of syntactic sugar added to the language as a convenience.  What's there to stop someone from thinking if-let is just if and let together?\n\nI do think this article does a good job of implying what's really going on; however, I was only able to notice this after I had begun to understand if/while-let statements, courtesy of the Rust IRC chat.\n\nBasically, this article lacks the clarity and explicitness an inexperienced programmer like me needs in order to understand the contents fully.  This is shown by my inability to understand the if-let concept from this page of the Book alone.\n\nI think convenience, sugar, and (if-let != if + let) should all be made mention of in a clear, explicit manner. I lack confidence in my understanding of this issue, so I wrote just enough to hopefully get my thoughts across.", "tree": {"sha": "e3fd9e92f55c44f97a2d694589544b984586b2c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3fd9e92f55c44f97a2d694589544b984586b2c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4711ac314c3380f992e218879b7c94b26ba4102b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4711ac314c3380f992e218879b7c94b26ba4102b", "html_url": "https://github.com/rust-lang/rust/commit/4711ac314c3380f992e218879b7c94b26ba4102b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4711ac314c3380f992e218879b7c94b26ba4102b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3da24bba940831697a024b93569891c77675778", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3da24bba940831697a024b93569891c77675778", "html_url": "https://github.com/rust-lang/rust/commit/a3da24bba940831697a024b93569891c77675778"}, {"sha": "fb7f211c0c0723c84d9f5da58e80a7766478b616", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb7f211c0c0723c84d9f5da58e80a7766478b616", "html_url": "https://github.com/rust-lang/rust/commit/fb7f211c0c0723c84d9f5da58e80a7766478b616"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "e76149ad27050b1d4c762d78047074aa57accc79", "filename": "src/doc/book/if-let.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4711ac314c3380f992e218879b7c94b26ba4102b/src%2Fdoc%2Fbook%2Fif-let.md", "raw_url": "https://github.com/rust-lang/rust/raw/4711ac314c3380f992e218879b7c94b26ba4102b/src%2Fdoc%2Fbook%2Fif-let.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fif-let.md?ref=4711ac314c3380f992e218879b7c94b26ba4102b", "patch": "@@ -1,7 +1,8 @@\n % if let\n \n-`if let` allows you to combine `if` and `let` together to reduce the overhead\n-of certain kinds of pattern matches.\n+`if let` permits [patterns][pattern] matching within the condition of an [if][if] statement.\n+This allows us to reduce the overhead of certain kinds of [pattern][patterns] matches\n+and express them in a more convenient way.  \n \n For example, let\u2019s say we have some sort of `Option<T>`. We want to call a function\n on it if it\u2019s `Some<T>`, but do nothing if it\u2019s `None`. That looks like this:\n@@ -80,3 +81,4 @@ while let Some(x) = v.pop() {\n ```\n \n [patterns]: patterns.html\n+[if]: if.html"}]}