{"sha": "ae5553d7b04d8ece340756f378b82d5e0bbb0ea2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNTU1M2Q3YjA0ZDhlY2UzNDA3NTZmMzc4YjgyZDVlMGJiYjBlYTI=", "commit": {"author": {"name": "sinkuu", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-05T13:08:30Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-10T12:02:43Z"}, "message": "Fix MIR CopyPropagation errneously propagating assignments to function arguments", "tree": {"sha": "5039940b5c47e69b3d28899cef6a1608320cad5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5039940b5c47e69b3d28899cef6a1608320cad5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2", "html_url": "https://github.com/rust-lang/rust/commit/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0d326f06d562c3aedf0727a665e9f2c34ba9d0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d326f06d562c3aedf0727a665e9f2c34ba9d0c", "html_url": "https://github.com/rust-lang/rust/commit/c0d326f06d562c3aedf0727a665e9f2c34ba9d0c"}], "stats": {"total": 122, "additions": 122, "deletions": 0}, "files": [{"sha": "3f766629bae5c2b641dc79f7aa1820c54089331a", "filename": "src/librustc_mir/transform/copy_prop.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs?ref=ae5553d7b04d8ece340756f378b82d5e0bbb0ea2", "patch": "@@ -99,6 +99,13 @@ impl MirPass for CopyPropagation {\n                                dest_local);\n                         continue\n                     }\n+                    // Conservatively gives up if the dest is an argument,\n+                    // because there may be uses of the original argument value.\n+                    if mir.local_kind(dest_local) == LocalKind::Arg {\n+                        debug!(\"  Can't copy-propagate local: dest {:?} (argument)\",\n+                            dest_local);\n+                        continue;\n+                    }\n                     let dest_lvalue_def = dest_use_info.defs_and_uses.iter().filter(|lvalue_def| {\n                         lvalue_def.context.is_mutating_use() && !lvalue_def.context.is_drop()\n                     }).next().unwrap();"}, {"sha": "8303407d2e20c276de772f949dffdc0c85319016", "filename": "src/test/mir-opt/copy_propagation_arg.rs", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5553d7b04d8ece340756f378b82d5e0bbb0ea2/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs?ref=ae5553d7b04d8ece340756f378b82d5e0bbb0ea2", "patch": "@@ -0,0 +1,115 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that CopyPropagation does not propagate an assignment to a function argument\n+// (doing so can break usages of the original argument value)\n+\n+fn dummy(x: u8) -> u8 {\n+    x\n+}\n+\n+fn foo(mut x: u8) {\n+    // calling `dummy` to make an use of `x` that copyprop cannot eliminate\n+    x = dummy(x); // this will assign a local to `x`\n+}\n+\n+fn bar(mut x: u8) {\n+    dummy(x);\n+    x = 5;\n+}\n+\n+fn baz(mut x: i32) {\n+    // self-assignment to a function argument should be eliminated\n+    x = x;\n+}\n+\n+fn main() {\n+    // Make sure the function actually gets instantiated.\n+    foo(0);\n+    bar(0);\n+}\n+\n+// END RUST SOURCE\n+// START rustc.foo.CopyPropagation.before.mir\n+// bb0: {\n+//     StorageLive(_2);\n+//     StorageLive(_3);\n+//     _3 = _1;\n+//     _2 = const dummy(_3) -> bb1;\n+// }\n+// bb1: {\n+//     StorageDead(_3);\n+//     _1 = _2;\n+//     StorageDead(_2);\n+//     _0 = ();\n+//     return;\n+// }\n+// END rustc.foo.CopyPropagation.before.mir\n+// START rustc.foo.CopyPropagation.after.mir\n+// bb0: {\n+//     StorageLive(_2);\n+//     nop;\n+//     nop;\n+//     _2 = const dummy(_1) -> bb1;\n+// }\n+// bb1: {\n+//     nop;\n+//     _1 = _2;\n+//     StorageDead(_2);\n+//     _0 = ();\n+//     return;\n+// }\n+// END rustc.foo.CopyPropagation.after.mir\n+// START rustc.bar.CopyPropagation.before.mir\n+// bb0: {\n+//     StorageLive(_3);\n+//     _3 = _1;\n+//     _2 = const dummy(_3) -> bb1;\n+// }\n+// bb1: {\n+//     StorageDead(_3);\n+//     _1 = const 5u8;\n+//     _0 = ();\n+//     return;\n+// }\n+// END rustc.bar.CopyPropagation.before.mir\n+// START rustc.bar.CopyPropagation.after.mir\n+// bb0: {\n+//     nop;\n+//     nop;\n+//     _2 = const dummy(_1) -> bb1;\n+// }\n+// bb1: {\n+//     nop;\n+//     _1 = const 5u8;\n+//     _0 = ();\n+//     return;\n+// }\n+// END rustc.bar.CopyPropagation.after.mir\n+// START rustc.baz.CopyPropagation.before.mir\n+// bb0: {\n+//     StorageLive(_2);\n+//     _2 = _1;\n+//     _1 = _2;\n+//     StorageDead(_2);\n+//     _0 = ();\n+//     return;\n+// }\n+// END rustc.baz.CopyPropagation.before.mir\n+// START rustc.baz.CopyPropagation.after.mir\n+// bb0: {\n+//     nop;\n+//     nop;\n+//     nop;\n+//     nop;\n+//     _0 = ();\n+//     return;\n+// }\n+// END rustc.baz.CopyPropagation.after.mir\n\\ No newline at end of file"}]}