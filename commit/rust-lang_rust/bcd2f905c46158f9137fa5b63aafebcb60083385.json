{"sha": "bcd2f905c46158f9137fa5b63aafebcb60083385", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZDJmOTA1YzQ2MTU4ZjkxMzdmYTViNjNhYWZlYmNiNjAwODMzODU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-08-29T18:18:26Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-08-29T18:27:40Z"}, "message": "incr.comp.: Canonicalize path to session directory before deleteing it.", "tree": {"sha": "69b547082af8462b759c378ba6980e5a9a4747e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69b547082af8462b759c378ba6980e5a9a4747e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcd2f905c46158f9137fa5b63aafebcb60083385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcd2f905c46158f9137fa5b63aafebcb60083385", "html_url": "https://github.com/rust-lang/rust/commit/bcd2f905c46158f9137fa5b63aafebcb60083385", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcd2f905c46158f9137fa5b63aafebcb60083385/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50b008ae3b9d15765d829ba336856f7057c9bb0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/50b008ae3b9d15765d829ba336856f7057c9bb0c", "html_url": "https://github.com/rust-lang/rust/commit/50b008ae3b9d15765d829ba336856f7057c9bb0c"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "4ad4b115759c46a608999fbdfae0868d9d28c559", "filename": "src/librustc_incremental/persist/fs.rs", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/bcd2f905c46158f9137fa5b63aafebcb60083385/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcd2f905c46158f9137fa5b63aafebcb60083385/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs?ref=bcd2f905c46158f9137fa5b63aafebcb60083385", "patch": "@@ -250,7 +250,7 @@ pub fn prepare_session_directory(tcx: TyCtxt) -> Result<bool, ()> {\n \n             // Try to remove the session directory we just allocated. We don't\n             // know if there's any garbage in it from the failed copy action.\n-            if let Err(err) = std_fs::remove_dir_all(&session_dir) {\n+            if let Err(err) = safe_remove_dir_all(&session_dir) {\n                 tcx.sess.warn(&format!(\"Failed to delete partly initialized \\\n                                         session dir `{}`: {}\",\n                                        session_dir.display(),\n@@ -282,7 +282,7 @@ pub fn finalize_session_directory(sess: &Session, svh: Svh) {\n         debug!(\"finalize_session_directory() - invalidating session directory: {}\",\n                 incr_comp_session_dir.display());\n \n-        if let Err(err) = std_fs::remove_dir_all(&*incr_comp_session_dir) {\n+        if let Err(err) = safe_remove_dir_all(&*incr_comp_session_dir) {\n             sess.warn(&format!(\"Error deleting incremental compilation \\\n                                 session directory `{}`: {}\",\n                                incr_comp_session_dir.display(),\n@@ -460,7 +460,7 @@ fn lock_directory(sess: &Session,\n \n fn delete_session_dir_lock_file(sess: &Session,\n                                 lock_file_path: &Path) {\n-    if let Err(err) = std_fs::remove_file(&lock_file_path) {\n+    if let Err(err) = safe_remove_file(&lock_file_path) {\n         sess.warn(&format!(\"Error deleting lock file for incremental \\\n                             compilation session directory `{}`: {}\",\n                            lock_file_path.display(),\n@@ -841,7 +841,7 @@ pub fn garbage_collect_session_directories(sess: &Session) -> io::Result<()> {\n         debug!(\"garbage_collect_session_directories() - deleting `{}`\",\n                 path.display());\n \n-        if let Err(err) = std_fs::remove_dir_all(&path) {\n+        if let Err(err) = safe_remove_dir_all(&path) {\n             sess.warn(&format!(\"Failed to garbage collect finalized incremental \\\n                                 compilation session directory `{}`: {}\",\n                                path.display(),\n@@ -860,7 +860,7 @@ pub fn garbage_collect_session_directories(sess: &Session) -> io::Result<()> {\n         debug!(\"garbage_collect_session_directories() - deleting `{}`\",\n                 path.display());\n \n-        if let Err(err) = std_fs::remove_dir_all(&path) {\n+        if let Err(err) = safe_remove_dir_all(&path) {\n             sess.warn(&format!(\"Failed to garbage collect incremental \\\n                                 compilation session directory `{}`: {}\",\n                                path.display(),\n@@ -893,6 +893,30 @@ fn all_except_most_recent(deletion_candidates: Vec<(SystemTime, PathBuf, Option<\n     }\n }\n \n+/// Since paths of artifacts within session directories can get quite long, we\n+/// need to support deleting files with very long paths. The regular\n+/// WinApi functions only support paths up to 260 characters, however. In order\n+/// to circumvent this limitation, we canonicalize the path of the directory\n+/// before passing it to std::fs::remove_dir_all(). This will convert the path\n+/// into the '\\\\?\\' format, which supports much longer paths.\n+fn safe_remove_dir_all(p: &Path) -> io::Result<()> {\n+    if p.exists() {\n+        let canonicalized = try!(p.canonicalize());\n+        std_fs::remove_dir_all(canonicalized)\n+    } else {\n+        Ok(())\n+    }\n+}\n+\n+fn safe_remove_file(p: &Path) -> io::Result<()> {\n+    if p.exists() {\n+        let canonicalized = try!(p.canonicalize());\n+        std_fs::remove_file(canonicalized)\n+    } else {\n+        Ok(())\n+    }\n+}\n+\n #[test]\n fn test_all_except_most_recent() {\n     assert_eq!(all_except_most_recent("}]}