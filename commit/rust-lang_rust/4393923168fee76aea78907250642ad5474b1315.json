{"sha": "4393923168fee76aea78907250642ad5474b1315", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzOTM5MjMxNjhmZWU3NmFlYTc4OTA3MjUwNjQyYWQ1NDc0YjEzMTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T09:53:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T09:58:16Z"}, "message": "add some tests", "tree": {"sha": "afdc791d32a7b7a89653c86d4f379d4193cd80f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afdc791d32a7b7a89653c86d4f379d4193cd80f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4393923168fee76aea78907250642ad5474b1315", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4393923168fee76aea78907250642ad5474b1315", "html_url": "https://github.com/rust-lang/rust/commit/4393923168fee76aea78907250642ad5474b1315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4393923168fee76aea78907250642ad5474b1315/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa6c8830740829d38f4ac7bfc8d8131ae44b9ade", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6c8830740829d38f4ac7bfc8d8131ae44b9ade", "html_url": "https://github.com/rust-lang/rust/commit/fa6c8830740829d38f4ac7bfc8d8131ae44b9ade"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "831bc0346c217f42865bf2dacc22d93d861a5d4d", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4393923168fee76aea78907250642ad5474b1315/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4393923168fee76aea78907250642ad5474b1315/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=4393923168fee76aea78907250642ad5474b1315", "patch": "@@ -1351,24 +1351,38 @@ fn test_try_reserve_exact() {\n }\n \n #[test]\n-fn test_stable_push_pop() {\n+fn test_stable_pointers() {\n     // Test that, if we reserved enough space, adding and removing elements does not\n     // invalidate references into the vector (such as `v0`).  This test also\n     // runs in Miri, which would detect such problems.\n-    let mut v = Vec::with_capacity(10);\n+    let mut v = Vec::with_capacity(128);\n     v.push(13);\n \n-    // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    // Laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n     let v0 = unsafe { &*(&v[0] as *const _) };\n-\n     // Now do a bunch of things and occasionally use `v0` again to assert it is still valid.\n+\n+    // Pushing/inserting and popping/removing\n     v.push(1);\n     v.push(2);\n     v.insert(1, 1);\n     assert_eq!(*v0, 13);\n     v.remove(1);\n     v.pop().unwrap();\n     assert_eq!(*v0, 13);\n+\n+    // Extending\n+    v.extend(&[1, 2]); // `slice::Iter` (with `T: Copy`) specialization\n+    v.extend(vec![2, 3]); // `vec::IntoIter` specialization\n+    v.extend(std::iter::once(3)); // `TrustedLen` specialization\n+    v.extend(std::iter::empty::<i32>()); // `TrustedLen` specialization with empty iterator\n+    v.extend(std::iter::once(3).filter(|_| true)); // base case\n+    v.extend(std::iter::once(&3)); // `cloned` specialization\n+    assert_eq!(*v0, 13);\n+\n+    // Truncation\n+    v.truncate(2);\n+    assert_eq!(*v0, 13);\n }\n \n // https://github.com/rust-lang/rust/pull/49496 introduced specialization based on:"}]}