{"sha": "32df8ed877e6ec73eb787798384e114182caf08c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZGY4ZWQ4NzdlNmVjNzNlYjc4Nzc5ODM4NGUxMTQxODJjYWYwOGM=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-27T00:16:09Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-27T00:16:09Z"}, "message": "Rename `nextafter` to `next_after` to match method name in Float", "tree": {"sha": "c0c8bb493b474b2926e2329ebb804e3f1d2cac37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0c8bb493b474b2926e2329ebb804e3f1d2cac37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32df8ed877e6ec73eb787798384e114182caf08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32df8ed877e6ec73eb787798384e114182caf08c", "html_url": "https://github.com/rust-lang/rust/commit/32df8ed877e6ec73eb787798384e114182caf08c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32df8ed877e6ec73eb787798384e114182caf08c/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cc9d0ba7e454730988f318aeed92ab5e5ff8269", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cc9d0ba7e454730988f318aeed92ab5e5ff8269", "html_url": "https://github.com/rust-lang/rust/commit/4cc9d0ba7e454730988f318aeed92ab5e5ff8269"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "30b0c54dc2dc212124199b385619820f06545c73", "filename": "src/libcore/num/cmath.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Fcmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Fcmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fcmath.rs?ref=32df8ed877e6ec73eb787798384e114182caf08c", "patch": "@@ -47,7 +47,8 @@ pub mod c_double_utils {\n         unsafe fn fmax(a: c_double, b: c_double) -> c_double;\n         #[link_name=\"fmin\"]\n         unsafe fn fmin(a: c_double, b: c_double) -> c_double;\n-        unsafe fn nextafter(x: c_double, y: c_double) -> c_double;\n+        #[link_name=\"nextafter\"]\n+        unsafe fn next_after(x: c_double, y: c_double) -> c_double;\n         unsafe fn frexp(n: c_double, value: &mut c_int) -> c_double;\n         unsafe fn hypot(x: c_double, y: c_double) -> c_double;\n         unsafe fn ldexp(x: c_double, n: c_int) -> c_double;\n@@ -131,7 +132,7 @@ pub mod c_float_utils {\n         #[link_name=\"fminf\"]\n         unsafe fn fmin(a: c_float, b: c_float) -> c_float;\n         #[link_name=\"nextafterf\"]\n-        unsafe fn nextafter(x: c_float, y: c_float) -> c_float;\n+        unsafe fn next_after(x: c_float, y: c_float) -> c_float;\n         #[link_name=\"hypotf\"]\n         unsafe fn hypot(x: c_float, y: c_float) -> c_float;\n         #[link_name=\"ldexpf\"]"}, {"sha": "97ad23696bdab68e139a182c8373677afb69f44c", "filename": "src/libcore/num/f32.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff32.rs?ref=32df8ed877e6ec73eb787798384e114182caf08c", "patch": "@@ -88,7 +88,7 @@ delegate!(\n     fn abs_sub(a: c_float, b: c_float) -> c_float = c_float_utils::abs_sub,\n     fn fmax(a: c_float, b: c_float) -> c_float = c_float_utils::fmax,\n     fn fmin(a: c_float, b: c_float) -> c_float = c_float_utils::fmin,\n-    fn nextafter(x: c_float, y: c_float) -> c_float = c_float_utils::nextafter,\n+    fn next_after(x: c_float, y: c_float) -> c_float = c_float_utils::next_after,\n     fn frexp(n: c_float, value: &mut c_int) -> c_float = c_float_utils::frexp,\n     fn hypot(x: c_float, y: c_float) -> c_float = c_float_utils::hypot,\n     fn ldexp(x: c_float, n: c_int) -> c_float = c_float_utils::ldexp,\n@@ -586,7 +586,7 @@ impl Float for f32 {\n     /// Returns the next representable floating-point value in the direction of `other`\n     #[inline(always)]\n     fn next_after(&self, other: f32) -> f32 {\n-        nextafter(*self, other)\n+        next_after(*self, other)\n     }\n }\n "}, {"sha": "92ce4969f47b8ea5546dcc1410fc3b4fc10ce979", "filename": "src/libcore/num/f64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff64.rs?ref=32df8ed877e6ec73eb787798384e114182caf08c", "patch": "@@ -89,7 +89,7 @@ delegate!(\n     fn abs_sub(a: c_double, b: c_double) -> c_double = c_double_utils::abs_sub,\n     fn fmax(a: c_double, b: c_double) -> c_double = c_double_utils::fmax,\n     fn fmin(a: c_double, b: c_double) -> c_double = c_double_utils::fmin,\n-    fn nextafter(x: c_double, y: c_double) -> c_double = c_double_utils::nextafter,\n+    fn next_after(x: c_double, y: c_double) -> c_double = c_double_utils::next_after,\n     fn frexp(n: c_double, value: &mut c_int) -> c_double = c_double_utils::frexp,\n     fn hypot(x: c_double, y: c_double) -> c_double = c_double_utils::hypot,\n     fn ldexp(x: c_double, n: c_int) -> c_double = c_double_utils::ldexp,\n@@ -626,7 +626,7 @@ impl Float for f64 {\n     /// Returns the next representable floating-point value in the direction of `other`\n     #[inline(always)]\n     fn next_after(&self, other: f64) -> f64 {\n-        nextafter(*self, other)\n+        next_after(*self, other)\n     }\n }\n "}, {"sha": "d784aeb23971c7f05d312b0ace6630af35c3d9d3", "filename": "src/libcore/num/float.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32df8ed877e6ec73eb787798384e114182caf08c/src%2Flibcore%2Fnum%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ffloat.rs?ref=32df8ed877e6ec73eb787798384e114182caf08c", "patch": "@@ -29,7 +29,7 @@ pub use f64::{add, sub, mul, quot, rem, lt, le, eq, ne, ge, gt};\n pub use f64::logarithm;\n pub use f64::{acos, asin, atan2, cbrt, ceil, copysign, cosh, floor};\n pub use f64::{erf, erfc, exp, expm1, exp2, abs_sub};\n-pub use f64::{mul_add, fmax, fmin, nextafter, frexp, hypot, ldexp};\n+pub use f64::{mul_add, fmax, fmin, next_after, frexp, hypot, ldexp};\n pub use f64::{lgamma, ln, log_radix, ln1p, log10, log2, ilog_radix};\n pub use f64::{modf, pow, powi, round, sinh, tanh, tgamma, trunc};\n pub use f64::{j0, j1, jn, y0, y1, yn};\n@@ -778,7 +778,7 @@ impl Float for float {\n     /// Returns the next representable floating-point value in the direction of `other`\n     #[inline(always)]\n     fn next_after(&self, other: float) -> float {\n-        nextafter(*self as f64, other as f64) as float\n+        next_after(*self as f64, other as f64) as float\n     }\n }\n "}]}