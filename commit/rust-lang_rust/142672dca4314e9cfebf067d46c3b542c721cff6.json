{"sha": "142672dca4314e9cfebf067d46c3b542c721cff6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MjY3MmRjYTQzMTRlOWNmZWJmMDY3ZDQ2YzNiNTQyYzcyMWNmZjY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-23T08:49:18Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-23T22:06:12Z"}, "message": "register snapshots", "tree": {"sha": "eadb833e46d703bd6a98c52bca84210aa018521d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eadb833e46d703bd6a98c52bca84210aa018521d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/142672dca4314e9cfebf067d46c3b542c721cff6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/142672dca4314e9cfebf067d46c3b542c721cff6", "html_url": "https://github.com/rust-lang/rust/commit/142672dca4314e9cfebf067d46c3b542c721cff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/142672dca4314e9cfebf067d46c3b542c721cff6/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c97c5ebfd64de87b3868fc8dbfd79a74c4be3cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c97c5ebfd64de87b3868fc8dbfd79a74c4be3cb", "html_url": "https://github.com/rust-lang/rust/commit/8c97c5ebfd64de87b3868fc8dbfd79a74c4be3cb"}], "stats": {"total": 455, "additions": 395, "deletions": 60}, "files": [{"sha": "25976410c7c9cf8ccd5bfe95f9f03b873ea9760f", "filename": "src/etc/combine-tests.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -40,7 +40,7 @@ def scrub(b):\n i = 0\n c.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n c.write(\"#[link(name=\\\"run_pass_stage2\\\", vers=\\\"0.1\\\")];\\n\")\n-c.write(\"#[feature(globs, macro_rules, struct_variant)];\\n\")\n+c.write(\"#[feature(globs, macro_rules, struct_variant, managed_boxes)];\\n\")\n for t in stage2_tests:\n     p = os.path.join(run_pass, t)\n     p = p.replace(\"\\\\\", \"\\\\\\\\\")\n@@ -52,7 +52,7 @@ def scrub(b):\n \n d = open(\"tmp/run_pass_stage2_driver.rs\", \"w\")\n d.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n-d.write(\"#[feature(globs)];\\n\")\n+d.write(\"#[feature(globs, managed_boxes)];\\n\")\n d.write(\"extern mod extra;\\n\")\n d.write(\"extern mod run_pass_stage2;\\n\")\n d.write(\"use run_pass_stage2::*;\\n\")"}, {"sha": "736292337adcb882d13522b982fcfa2592331aaa", "filename": "src/etc/extract-tests.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Fetc%2Fextract-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Fetc%2Fextract-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fextract-tests.py?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -63,7 +63,7 @@\n #[ allow(unused_variable) ];\\n\n #[ allow(dead_assignment) ];\\n\n #[ allow(unused_mut) ];\\n\n-#[ feature(macro_rules, globs, struct_variant) ];\\n\n+#[ feature(macro_rules, globs, struct_variant, managed_boxes) ];\\n\n \"\"\" + block\n             if xfail:\n                 block = \"// xfail-test\\n\" + block"}, {"sha": "79a5b555c291ff81899aeb8ebf7f37b8ea96c365", "filename": "src/libextra/extra.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibextra%2Fextra.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibextra%2Fextra.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fextra.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -33,7 +33,7 @@ Rust extras are part of the standard Rust distribution.\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n-#[feature(macro_rules, globs)];\n+#[feature(macro_rules, globs, managed_boxes)];\n \n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];"}, {"sha": "6de94936d15939a163cf5b92440e1053507a9f2d", "filename": "src/librustc/front/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ffeature_gate.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -138,8 +138,7 @@ impl Visitor<()> for Context {\n                                    experimental and likely to be removed\");\n \n             },\n-            // NOTE: enable after snapshot\n-            ast::ty_box(_) if false => {\n+            ast::ty_box(_) => {\n                 self.gate_feature(\"managed_boxes\", t.span, \"The managed box syntax may be replaced \\\n                                                             by a library type, and a garbage \\\n                                                             collector is not yet implemented. \\"}, {"sha": "ecf45d5c424ccafb130586f433933f4cf26f3223", "filename": "src/librustc/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustc%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustc%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Frustc.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -17,7 +17,7 @@\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n-#[feature(macro_rules, globs, struct_variant)];\n+#[feature(macro_rules, globs, struct_variant, managed_boxes)];\n \n // Rustc tasks always run on a fixed_stack_segment, so code in this\n // module can call C functions (in particular, LLVM functions) with"}, {"sha": "4c53fe48fe15cf4568fdc2e85556888f75aa14cd", "filename": "src/librustdoc/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Frustdoc.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -17,7 +17,7 @@\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n-#[feature(globs, struct_variant)];\n+#[feature(globs, struct_variant, managed_boxes)];\n \n extern mod syntax;\n extern mod rustc;"}, {"sha": "2c1fdccd13c7e6e78c4fb859b9b66d5c3d04ac3e", "filename": "src/librustpkg/rustpkg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustpkg%2Frustpkg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibrustpkg%2Frustpkg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Frustpkg.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -18,7 +18,7 @@\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n-#[feature(globs)];\n+#[feature(globs, managed_boxes)];\n \n extern mod extra;\n extern mod rustc;"}, {"sha": "8c72e083f882f811dd5703d797d658e8da00d42d", "filename": "src/libstd/std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibstd%2Fstd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibstd%2Fstd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -61,7 +61,7 @@ they contained the following prologue:\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n-#[feature(macro_rules, globs, asm)];\n+#[feature(macro_rules, globs, asm, managed_boxes)];\n \n // Don't link to std. We are std.\n #[no_std];"}, {"sha": "1900d9d58011e2f0431c7aa9a5bbf1f008a783cf", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -410,9 +410,7 @@ extern \"rust-intrinsic\" {\n     pub fn fabsf32(x: f32) -> f32;\n     pub fn fabsf64(x: f64) -> f64;\n \n-    #[cfg(not(stage0))]\n     pub fn copysignf32(x: f32, y: f32) -> f32;\n-    #[cfg(not(stage0))]\n     pub fn copysignf64(x: f64, y: f64) -> f64;\n \n     pub fn floorf32(x: f32) -> f32;\n@@ -424,19 +422,13 @@ extern \"rust-intrinsic\" {\n     pub fn truncf32(x: f32) -> f32;\n     pub fn truncf64(x: f64) -> f64;\n \n-    #[cfg(not(stage0))]\n     pub fn rintf32(x: f32) -> f32;\n-    #[cfg(not(stage0))]\n     pub fn rintf64(x: f64) -> f64;\n \n-    #[cfg(not(stage0))]\n     pub fn nearbyintf32(x: f32) -> f32;\n-    #[cfg(not(stage0))]\n     pub fn nearbyintf64(x: f64) -> f64;\n \n-    #[cfg(not(stage0))]\n     pub fn roundf32(x: f32) -> f32;\n-    #[cfg(not(stage0))]\n     pub fn roundf64(x: f64) -> f64;\n \n     pub fn ctpop8(x: i8) -> i8;"}, {"sha": "00fc676f5957106ddd282785de9ab36c4cf998de", "filename": "src/libsyntax/syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibsyntax%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Flibsyntax%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -20,7 +20,7 @@\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n-#[feature(macro_rules, globs)];\n+#[feature(macro_rules, globs, managed_boxes)];\n \n extern mod extra;\n "}, {"sha": "ad9fba50bf7d88f33357b822b11c25a643519618", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,11 @@\n+S 2013-10-22 ae0905a\n+  freebsd-x86_64 6e9d81c160963308c2bf7886fae6726274b365ed\n+  linux-i386 1c449504aa04c0345ad09f5bcb5a57b9656d11c3\n+  linux-x86_64 ab649598e9af2ab3c38179e6229ea8cc4be6e338\n+  macos-i386 28d4a2e8495a981e86e0c57fce05bcfc15ba656d\n+  macos-x86_64 9506a3d746c1d1cc1befc5c9556f1653fee25f85\n+  winnt-i386 6038235d3a2284beb7be8e80631ec6b6952df8ab\n+\n S 2013-10-21 6e6981c\n   freebsd-x86_64 7f630581d0e881483272140e84bc2f494daf6204\n   linux-i386 5c754455610013bbe448e8f6ef8ba1a05b167919"}, {"sha": "72ce66c20bd712145918aaf4d1d8e4b152a863bd", "filename": "src/test/auxiliary/cci_nested_lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fcci_nested_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fcci_nested_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_nested_lib.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n pub struct Entry<A,B> {\n     key: A,\n     value: B"}, {"sha": "700f95f3d7063c9d91ed32ba937f716465184e85", "filename": "src/test/auxiliary/crate-method-reexport-grrrrrrr2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrate-method-reexport-grrrrrrr2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[link(name = \"crate_method_reexport_grrrrrrr2\")];\n \n pub use name_pool::add;"}, {"sha": "1ec88ba5735933591ddd59546686e5b4367e03f1", "filename": "src/test/auxiliary/issue-2380.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fissue-2380.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fissue-2380.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2380.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[link(name = \"a\", vers = \"0.0\")];\n #[crate_type = \"lib\"];\n "}, {"sha": "fe68141e6dd34af8efb69a3a05b1d5d2a2ab2e6f", "filename": "src/test/auxiliary/issue-2631-a.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2631-a.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[link(name = \"req\")];\n #[crate_type = \"lib\"];\n "}, {"sha": "ef1061c780efd11c7a904092073d4ad4860b24a2", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n /* -*- mode: rust; indent-tabs-mode: nil -*-\n  * Implementation of 'fasta' benchmark from"}, {"sha": "189b3ef740e9c6a42e038ba2c93d7a2d775cc03c", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -10,6 +10,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n extern mod extra;\n \n use std::io::{ReaderUtil, WriterUtil};"}, {"sha": "022d656ad4fda47693aec292dea3dbf02646adde", "filename": "src/test/bench/task-perf-alloc-unwind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n extern mod extra;\n \n use extra::list::{List, Cons, Nil};"}, {"sha": "99955bfe56bdeb36eeb59e9e6b6ebcc2644233a3", "filename": "src/test/compile-fail/autoderef-full-lval.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fautoderef-full-lval.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct clam {\n     x: @int,\n     y: @int,"}, {"sha": "40db36787bb4c84c4a17dbe685ee641efbf080ce", "filename": "src/test/compile-fail/borrowck-assign-to-subfield.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-to-subfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-to-subfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-assign-to-subfield.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn main() {\n     struct A {\n         a: int,"}, {"sha": "7cf2e57ab8045ee654cdd6cdc4b96eff1917d31b", "filename": "src/test/compile-fail/borrowck-mut-deref-comp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-deref-comp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-deref-comp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-mut-deref-comp.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct foo(~int);\n \n fn borrow(x: @mut foo) {"}, {"sha": "ce762e351f93dd680e98c8b855708d5f76842072", "filename": "src/test/compile-fail/borrowck-object-lifetime.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-object-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-object-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-object-lifetime.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo {\n     fn borrowed<'a>(&'a self) -> &'a ();\n }"}, {"sha": "e6cb8d62d049332c22d1c64279859f81772d0e32", "filename": "src/test/compile-fail/borrowck-object-mutability.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-object-mutability.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo {\n     fn borrowed(&self);\n     fn borrowed_mut(&mut self);"}, {"sha": "8a5ea61537e334dc117b5189d918e71cc7c0de14", "filename": "src/test/compile-fail/box-static-bound.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n fn f<T>(x: T) -> @T {\n     @x  //~ ERROR value may contain borrowed pointers\n }"}, {"sha": "817696c6d20de1faff64208ad87aa62b7c649f95", "filename": "src/test/compile-fail/cast-immutable-mutable-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fcast-immutable-mutable-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fcast-immutable-mutable-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcast-immutable-mutable-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait T {\n     fn foo(@mut self);\n }"}, {"sha": "4abd9898d8778c3139221fc81288efe062190701", "filename": "src/test/compile-fail/class-cast-to-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fclass-cast-to-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fclass-cast-to-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclass-cast-to-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait noisy {\n   fn speak(&self);\n }"}, {"sha": "93aeb48e302cba95d5d59b01151934574fb412a8", "filename": "src/test/compile-fail/drop-on-non-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n type Foo = @[u8];\n \n impl Drop for Foo {   //~ ERROR the Drop trait may only be implemented"}, {"sha": "c715f95d290a0cb4186fceb448035a11b2cca87a", "filename": "src/test/compile-fail/estr-subtyping.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Festr-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Festr-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Festr-subtyping.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn wants_box(x: @str) { }\n fn wants_uniq(x: ~str) { }\n fn wants_slice(x: &str) { }"}, {"sha": "b3248c11374ae82e914e24407849f5ed1a8d6008", "filename": "src/test/compile-fail/evec-subtyping.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fevec-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fevec-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fevec-subtyping.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn wants_box(x: @[uint]) { }\n fn wants_uniq(x: ~[uint]) { }\n fn wants_three(x: [uint, ..3]) { }"}, {"sha": "dd14d89a380c1820b967ca4040e8d0696d5be3aa", "filename": "src/test/compile-fail/fn-variance-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ffn-variance-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ffn-variance-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-variance-1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn takes_mut(x: @mut int) { }\n fn takes_imm(x: @int) { }\n "}, {"sha": "0fd2b04a199c393a340a5f75dbea9b741c731cb3", "filename": "src/test/compile-fail/issue-2063-resource.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-2063-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-2063-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2063-resource.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // test that autoderef of a type like this does not\n // cause compiler to loop.  Note that no instances\n // of such a type could ever be constructed."}, {"sha": "21b6959692f30e3b4e3904a3558c50ec75389561", "filename": "src/test/compile-fail/issue-2548.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // A test case for #2548.\n \n struct foo {"}, {"sha": "4665687db85b6b82f0ed9e993d01dffb3e19f3bf", "filename": "src/test/compile-fail/issue-3668.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-3668.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-3668.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3668.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct P { child: Option<@mut P> }\n trait PTrait {\n    fn getChildOption(&self) -> Option<@P>;"}, {"sha": "619ce688d0835c1259be3ed8853f8756de6473d4", "filename": "src/test/compile-fail/issue-5153.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-5153.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fissue-5153.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5153.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern: type `@Foo:'static` does not implement any method in scope named `foo`\n \n trait Foo {"}, {"sha": "2ea12ab9fdc92ca2b56dca64dd8baa37b192a91d", "filename": "src/test/compile-fail/kindck-destructor-owned.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n struct Foo {\n     f: @mut int,\n }"}, {"sha": "4472f042242ac488df1e79f805242153b831f103", "filename": "src/test/compile-fail/kindck-nonsendable-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn foo(_x: @uint) {}\n \n fn main() {"}, {"sha": "fb85edf699a9bd15313d18a69aee373dfc82affc", "filename": "src/test/compile-fail/kindck-owned-trait-contains.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait-contains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait-contains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait-contains.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait repeat<A> { fn get(&self) -> A; }\n \n impl<A:Clone> repeat<A> for @A {"}, {"sha": "df066931391e0c22747e04bc414406bf243a1ccb", "filename": "src/test/compile-fail/kindck-owned-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait foo { fn foo(&self); }\n \n fn to_foo<T:Clone + foo>(t: T) -> @foo {"}, {"sha": "fadda4173a6afd9eb52bd206c5fe8b623744585f", "filename": "src/test/compile-fail/lint-heap-memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[forbid(heap_memory)];\n \n struct Foo {"}, {"sha": "6b8a971653d63ead6917c20d430501a2dfc36381", "filename": "src/test/compile-fail/lint-managed-heap-memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Flint-managed-heap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Flint-managed-heap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-managed-heap-memory.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[forbid(managed_heap_memory)];\n \n struct Foo {"}, {"sha": "0ce8ee40d3bfa203c148f02cefbf2928d640549b", "filename": "src/test/compile-fail/lub-in-args.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Flub-in-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Flub-in-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flub-in-args.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn two_args<T>(x: T, y: T) { }\n \n fn main() {"}, {"sha": "c2c4a0b6908e62925da70e11d14a5b3eab288fb0", "filename": "src/test/compile-fail/map-types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fmap-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmap-types.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::container::Map;\n use std::hashmap::HashMap;\n "}, {"sha": "ce0e55f09f65253c4754f32def1e8fcd50d1fb75", "filename": "src/test/compile-fail/no-send-res-ports.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::cell::Cell;\n use std::task;\n "}, {"sha": "916bb74edb251fc577219c10aaae44e718a54305", "filename": "src/test/compile-fail/object-does-not-impl-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fobject-does-not-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fobject-does-not-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-does-not-impl-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Test that an object type `@Foo` is not considered to implement the\n // trait `Foo`. Issue #5087.\n "}, {"sha": "a1a577a1856f766bb2edd1b0f0a7cde4cfc56230", "filename": "src/test/compile-fail/object-pointer-types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fobject-pointer-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fobject-pointer-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-pointer-types.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo {\n     fn borrowed(&self);\n     fn borrowed_mut(&mut self);"}, {"sha": "6c19ef9700fabe3cdc7074adc69eef4c36091451", "filename": "src/test/compile-fail/pinned-deep-copy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct r {\n   i: @mut int,\n }"}, {"sha": "b17ec8782f10c9c8e74ff0a2a6162051e119b8a0", "filename": "src/test/compile-fail/regions-infer-borrow-scope-too-big.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct point {\n     x: int,\n     y: int,"}, {"sha": "e0764d392913393f33008f9602c01885d6d8c9b9", "filename": "src/test/compile-fail/regions-infer-borrow-scope-within-loop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn borrow<'r, T>(x: &'r T) -> &'r T {x}\n \n fn foo(cond: &fn() -> bool, box: &fn() -> @int) {"}, {"sha": "f7c9e5bda3b4f88a27c1149caa5ab175b9ff9cdd", "filename": "src/test/compile-fail/regions-infer-invariance-due-to-mutability-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct invariant<'self> {\n     f: @mut &'self int\n }"}, {"sha": "522e5675bfe69d43dc3ebf0ed9c34dddc2badf5c", "filename": "src/test/compile-fail/regions-infer-invariance-due-to-mutability-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct invariant<'self> {\n     f: @mut [&'self int]\n }"}, {"sha": "775164453e0d8472b439adba6d9af490a48bd6f0", "filename": "src/test/compile-fail/regions-infer-invariance-due-to-mutability-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-3.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct invariant<'self> {\n     f: &'static fn(x: @mut &'self int)\n }"}, {"sha": "44856d9e531e69020921eb6c39fa2b9593492cbf", "filename": "src/test/compile-fail/regions-infer-invariance-due-to-mutability-4.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-4.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct invariant<'self> {\n     f: &'static fn() -> @mut &'self int\n }"}, {"sha": "9853741d77a117cebcc0abd82350f708d0a9c20f", "filename": "src/test/compile-fail/regions-infer-invariance-due-to-mutability.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct invariant<'self> {\n     f: @mut &'self int\n }"}, {"sha": "6a9b153bbe30a552d96ef132065a251eeeac8988", "filename": "src/test/compile-fail/regions-infer-paramd-indirect.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-paramd-indirect.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Check that we correctly infer that b and c must be region\n // parameterized because they reference a which requires a region.\n "}, {"sha": "f5dd33a159878cb2850f52a721f0a88248e63434", "filename": "src/test/compile-fail/regions-trait-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-trait-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fregions-trait-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-trait-1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct ctxt { v: uint }\n \n trait get_ctxt {"}, {"sha": "d6c9780620135b90874cd44ad666ef1f7efa04f3", "filename": "src/test/compile-fail/selftype-traittype.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fselftype-traittype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fselftype-traittype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fselftype-traittype.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait add {\n     fn plus(&self, x: Self) -> Self;\n }"}, {"sha": "6a2fd99f6480fa2a16a743af7beed730f66ed5ae", "filename": "src/test/compile-fail/terr-sorts.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fterr-sorts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Fterr-sorts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fterr-sorts.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct foo {\n     a: int,\n     b: int,"}, {"sha": "d907022da71dc2202688e097fdec52d42b642834", "filename": "src/test/compile-fail/trait-bounds-sugar.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-sugar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-sugar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-sugar.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Tests for \"default\" bounds inferred for traits with no bounds list.\n \n trait Foo {"}, {"sha": "b5474210dc5f34bbd488812b196841201660de59", "filename": "src/test/compile-fail/trait-impl-method-mismatch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ftrait-impl-method-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ftrait-impl-method-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-impl-method-mismatch.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Mumbo {\n     fn jumbo(&self, x: @uint) -> uint;\n }"}, {"sha": "3006b6e5acf3549b12a8a53d49ead42b200fb935", "filename": "src/test/compile-fail/trait-test-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ftrait-test-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Ftrait-test-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-test-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait bar { fn dup(&self) -> Self; fn blah<X>(&self); }\n impl bar for int { fn dup(&self) -> int { *self } fn blah<X>(&self) {} }\n impl bar for uint { fn dup(&self) -> uint { *self } fn blah<X>(&self) {} }"}, {"sha": "9771fea04ef52b1a80ef7b319e25132640310c53", "filename": "src/test/compile-fail/unique-vec-res.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct r {\n   i: @mut int,\n }"}, {"sha": "135d02037e0555181d9ac4965c264eefc5d989d0", "filename": "src/test/compile-fail/unreachable-arm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:unreachable pattern\n \n enum foo { a(@foo, int), b(uint), }"}, {"sha": "08dbaaac295afc17aa5862bb452dd9ae67e86cd8", "filename": "src/test/compile-fail/unsendable-class.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Test that a class with an unsendable field can't be\n // sent\n "}, {"sha": "b9b362718d21e55befcda1013c3ba033db468b8a", "filename": "src/test/debug-info/borrowed-managed-basic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fborrowed-managed-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fborrowed-managed-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fborrowed-managed-basic.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Gdb doesn't know about UTF-32 character encoding and will print a rust char as only\n // its numerical value.\n "}, {"sha": "e18c10eb466c85d8b3ec1a3ea42f7560f581d189", "filename": "src/test/debug-info/borrowed-tuple.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fborrowed-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fborrowed-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fborrowed-tuple.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:rbreak zzz\n // debugger:run"}, {"sha": "2752d57d8981c8753a275f2bb87172457d2b4cea", "filename": "src/test/debug-info/boxed-vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fboxed-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fboxed-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fboxed-vec.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:rbreak zzz\n // debugger:run"}, {"sha": "3c9a41f4125c6f51fa4e76dc6f243c151019967f", "filename": "src/test/debug-info/by-value-self-argument-in-trait-impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:rbreak zzz\n // debugger:run"}, {"sha": "0485cc822092844006c7d59ecbe93cf080dbc56f", "filename": "src/test/debug-info/destructured-fn-argument.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:rbreak zzz\n // debugger:run"}, {"sha": "8baa1e2a29b6b4056cc8ec30a97eff222b28fc0f", "filename": "src/test/debug-info/managed-pointer-within-unique-vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fmanaged-pointer-within-unique-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fmanaged-pointer-within-unique-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmanaged-pointer-within-unique-vec.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:rbreak zzz\n // debugger:run"}, {"sha": "50df960012125c71808e29640e9627cbf8f51aa2", "filename": "src/test/debug-info/managed-pointer-within-unique.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fmanaged-pointer-within-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Fmanaged-pointer-within-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmanaged-pointer-within-unique.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:set print pretty off\n // debugger:rbreak zzz"}, {"sha": "29b15ad91c5d3ef4fb62d7be3b91d254f0a435b5", "filename": "src/test/debug-info/recursive-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Frecursive-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Frecursive-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Frecursive-struct.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:set print pretty off\n // debugger:rbreak zzz"}, {"sha": "d93d2b30f81b193058633f9c58cb9b478dfa78c9", "filename": "src/test/debug-info/trait-pointers.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Ftrait-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Fdebug-info%2Ftrait-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Ftrait-pointers.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // compile-flags:-Z extra-debug-info\n // debugger:run\n "}, {"sha": "dbcaf10ea6bcc3fb9e64e8d4319d958af90420df", "filename": "src/test/run-fail/args-fail.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fargs-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fargs-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fargs-fail.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:meep\n fn f(_a: int, _b: int, _c: @int) { fail!(\"moop\"); }\n "}, {"sha": "4a5664d08b690c34f4b68565e2a0b888eab021ed", "filename": "src/test/run-fail/borrowck-wg-fail-object-arg.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-object-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-object-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-object-arg.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n // error-pattern:borrowed\n \n trait Foo {"}, {"sha": "9e32dbf64206e6040ac9cc104efa305c5bebdac5", "filename": "src/test/run-fail/borrowck-wg-fail-object.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail-object.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n // error-pattern:borrowed\n \n trait Foo {"}, {"sha": "e1273381e93c7370eebed0e806dde5d74daedc8f", "filename": "src/test/run-fail/borrowck-wg-fail.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fborrowck-wg-fail.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n // error-pattern:borrowed\n \n // Test that write guards trigger when mut box is frozen"}, {"sha": "c41b9b37bb582c6a4c0eed908555338afd8dad7a", "filename": "src/test/run-fail/borrowck-wg-imm-then-mut.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-imm-then-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-imm-then-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fborrowck-wg-imm-then-mut.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n // error-pattern:borrowed\n \n // Test that if you imm borrow then mut borrow it fails."}, {"sha": "aceadb0459c823439cad5de42331aa811b2ec97d", "filename": "src/test/run-fail/borrowck-wg-mut-then-imm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-mut-then-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fborrowck-wg-mut-then-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fborrowck-wg-mut-then-imm.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n // error-pattern:borrowed\n \n // Test that if you mut borrow then imm borrow it fails."}, {"sha": "21ebf06ca0462df60461bdafacddc1d372547b8d", "filename": "src/test/run-fail/issue-2272.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fissue-2272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Fissue-2272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2272.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:explicit failure\n // Issue #2272 - unwind this without leaking the unique pointer\n "}, {"sha": "1f1b57aa7048ab97a6585b8821be7d78bcae5e34", "filename": "src/test/run-fail/unwind-box-fn-unique.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-box-fn-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-box-fn-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-fn-unique.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n \n fn failfn() {"}, {"sha": "2139508c9e406f5aeb163d255fdabb468395c0b2", "filename": "src/test/run-fail/unwind-box-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-box-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-box-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n \n fn failfn() {"}, {"sha": "0ecc6765b8e0e808d8ee01945d99600b8b727b80", "filename": "src/test/run-fail/unwind-initializer-indirect.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-initializer-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-initializer-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-initializer-indirect.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n \n fn f() -> @int { fail!(); }"}, {"sha": "d0e5c7a7d027b1c87edee39b0b6ff860b125f419", "filename": "src/test/run-fail/unwind-initializer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-initializer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-initializer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-initializer.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n \n fn main() {"}, {"sha": "4b95afc0ee28b159e89c58567b06e8bc1c2ccd83", "filename": "src/test/run-fail/unwind-lambda.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-lambda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-lambda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-lambda.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n \n fn main() {"}, {"sha": "69d2e1a116252fab7536d2c5718a43539d7751b5", "filename": "src/test/run-fail/unwind-move.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-move.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n fn f(_a: @int) {\n     fail!();"}, {"sha": "acba75aeef1afef0419629f9bad9575838478ad2", "filename": "src/test/run-fail/unwind-resource-fail.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:squirrel\n \n struct r {"}, {"sha": "39b0d67dc3843e628e1d53460f8940c696d559f5", "filename": "src/test/run-fail/unwind-resource-fail3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:quux\n \n struct faily_box {"}, {"sha": "2dd353f8e215d3b7f198106258ef8b4deda80a04", "filename": "src/test/run-fail/unwind-tup.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-tup.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n \n fn fold_local() -> @~[int]{"}, {"sha": "b86d7f11e85d95b0eb4266967f98e979d4531256", "filename": "src/test/run-fail/unwind-tup2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-tup2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-fail%2Funwind-tup2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-tup2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // error-pattern:fail\n \n fn fold_local() -> @~[int]{"}, {"sha": "6c4cc9de4147da4c11c004b08930e61f06bdcc22", "filename": "src/test/run-pass/alignment-gep-tup-like-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct pair<A,B> {\n     a: A, b: B\n }"}, {"sha": "8f7f8c4fa58da9904c922c89bc04abb7d3b3eab6", "filename": "src/test/run-pass/alignment-gep-tup-like-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct Pair<A,B> {\n     a: A, b: B\n }"}, {"sha": "b3b09988cc3afdf847d9282c3b45d24e36904ec6", "filename": "src/test/run-pass/autoderef-method-on-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoderef-method-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoderef-method-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-method-on-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait double {\n     fn double(@self) -> uint;\n }"}, {"sha": "fa124a70627ddaf54e378f16a8d33a126ecef1db", "filename": "src/test/run-pass/autoderef-method-priority.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoderef-method-priority.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoderef-method-priority.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-method-priority.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait double {\n     fn double(self) -> uint;\n }"}, {"sha": "036bbcd48a5423e149290f9b858b8f95934ae3a9", "filename": "src/test/run-pass/autoderef-method-twice-but-not-thrice.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoderef-method-twice-but-not-thrice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoderef-method-twice-but-not-thrice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-method-twice-but-not-thrice.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait double {\n     fn double(@self) -> uint;\n }"}, {"sha": "bad594bf4e4c72b468be4342a08d8fb62576bede", "filename": "src/test/run-pass/autoref-intermediate-types-issue-3585.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoref-intermediate-types-issue-3585.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fautoref-intermediate-types-issue-3585.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoref-intermediate-types-issue-3585.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo {\n     fn foo(&self) -> ~str;\n }"}, {"sha": "bc3078f88eabbdc152cbc01401de058b8f3305d2", "filename": "src/test/run-pass/borrowck-borrow-from-expr-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-expr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-expr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-expr-block.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::borrow;\n use std::ptr;\n "}, {"sha": "3f6bcb4d5b794fc730ca7e57530ec3fe63e7955b", "filename": "src/test/run-pass/borrowck-preserve-box-in-arm-not-taken.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-arm-not-taken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-arm-not-taken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-arm-not-taken.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -10,6 +10,8 @@\n \n // exec-env:RUST_POISON_ON_FREE=1\n \n+#[feature(managed_boxes)];\n+\n pub fn main() {\n     let x: @mut @Option<~int> = @mut @None;\n     match x {"}, {"sha": "dbd3e6302aff740b1e51881906c7f4fcf7a2f9a3", "filename": "src/test/run-pass/borrowck-preserve-box-sometimes-needed.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-sometimes-needed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-sometimes-needed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-sometimes-needed.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -10,6 +10,8 @@\n \n // exec-env:RUST_POISON_ON_FREE=1\n \n+#[feature(managed_boxes)];\n+\n fn switcher(x: Option<@int>) {\n     let mut x = x;\n     match x {"}, {"sha": "19b87584e2d43bb085728f984b78cbe7a729af29", "filename": "src/test/run-pass/borrowck-root-while-cond-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct F { f: @G }\n struct G { g: ~[int] }\n "}, {"sha": "35ab64584f53d011afebb73bfcd0ad004decfe12", "filename": "src/test/run-pass/borrowck-root-while-cond.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-root-while-cond.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn borrow<'r,T>(x: &'r T) -> &'r T {x}\n \n struct Rec { f: @int }"}, {"sha": "94faa9390cd254b1e5b09c18dcf08de458120555", "filename": "src/test/run-pass/box-in-tup.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-in-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-in-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-in-tup.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n pub fn main() {\n     let i: (@int, int) = (@10, 10);\n     let (_a, _) = i;"}, {"sha": "baec382f3ca3aca4d4d121bbb2f96d39bc3b40a9", "filename": "src/test/run-pass/box-inside-if.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-inside-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-inside-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-inside-if.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-// -*- rust -*-\n+#[feature(managed_boxes)];\n \n fn some_box(x: int) -> @int { return @x; }\n "}, {"sha": "acc494a5665f4b1a36fd1c4ceee5727ca33cf715", "filename": "src/test/run-pass/box-inside-if2.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-inside-if2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-inside-if2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-inside-if2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-// -*- rust -*-\n+#[feature(managed_boxes)];\n \n fn some_box(x: int) -> @int { return @x; }\n "}, {"sha": "c7d848c7c91c6d7751040e6326794e8b0142e4e5", "filename": "src/test/run-pass/box-pattern.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-pattern.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct Foo {a: int, b: uint}\n enum bar { u(@Foo), w(int), }\n "}, {"sha": "a5ba89271c4eb07a1b420904c0335ff0dc186ae4", "filename": "src/test/run-pass/box-unbox.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-unbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox-unbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-unbox.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n struct Box<T> {c: @T}\n "}, {"sha": "f3acc1272463d4f1ec6e40ac5a180b1ff0c5441f", "filename": "src/test/run-pass/box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n pub fn main() { let x: @int = @10; assert!((*x == 10)); }"}, {"sha": "92d82afb887fe2333d7c6309b6695ab45eb0fe30", "filename": "src/test/run-pass/boxed-class-type-substitution.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fboxed-class-type-substitution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fboxed-class-type-substitution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fboxed-class-type-substitution.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -11,6 +11,8 @@\n // Regression test that rustc doesn't recurse infinitely substituting\n // the boxed type parameter\n \n+#[feature(managed_boxes)];\n+\n struct Tree<T> {\n     parent: Option<T>\n }"}, {"sha": "a55f5f97d085b8800f6b088eb3dc578bbe4b7845", "filename": "src/test/run-pass/boxed-trait-with-vstore.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo {\n     fn foo(@self);\n }"}, {"sha": "09d10502b846b82215f05f6e829654dd11972f9d", "filename": "src/test/run-pass/cast-mutable-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcast-mutable-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcast-mutable-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast-mutable-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait T {\n     fn foo(@mut self);\n }"}, {"sha": "58f1950e4894c2920325428fbd6093f9fee10526", "filename": "src/test/run-pass/cci_nested_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_nested_exe.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -11,7 +11,7 @@\n // xfail-fast - check-fast doesn't understand aux-build\n // aux-build:cci_nested_lib.rs\n \n-#[feature(globs)];\n+#[feature(globs, managed_boxes)];\n \n extern mod cci_nested_lib;\n use cci_nested_lib::*;"}, {"sha": "258ed4fb30babb7006487a5e8f23e4f32568511c", "filename": "src/test/run-pass/class-cast-to-trait-cross-crate-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // xfail-fast\n // aux-build:cci_class_cast.rs\n extern mod cci_class_cast;"}, {"sha": "e44d7c41931c4144c5d3a6454c055e7d4807e1aa", "filename": "src/test/run-pass/class-cast-to-trait-multiple-types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-multiple-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-multiple-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-multiple-types.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait noisy {\n   fn speak(&self) -> int;\n }"}, {"sha": "cc723f8037dd1af82f2f9bc0d96e6a4fb84a5c8d", "filename": "src/test/run-pass/class-cast-to-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait noisy {\n   fn speak(&mut self);\n }"}, {"sha": "eb7e608a9f121e2cd282ee18e092c3b47710af71", "filename": "src/test/run-pass/class-separate-impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // xfail-fast\n struct cat {\n     priv meows : uint,"}, {"sha": "767581496c390cbb83edda3c8c7fca32f1e56219", "filename": "src/test/run-pass/classes-self-referential.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclasses-self-referential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclasses-self-referential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclasses-self-referential.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct kitten {\n     cat: Option<cat>,\n }"}, {"sha": "3b1ccf50544d15bdbcc6ba6cedc169e6ca5f86fe", "filename": "src/test/run-pass/cleanup-copy-mode.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcleanup-copy-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcleanup-copy-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-copy-mode.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::task;\n \n fn adder(x: @int, y: @int) -> int { return *x + *y; }"}, {"sha": "a1624e206caa2ab8eae55420dde3a31d9526d483", "filename": "src/test/run-pass/close-over-big-then-small-data.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // If we use GEPi rathern than GEP_tup_like when\n // storing closure data (as we used to do), the u64 would\n // overwrite the u16."}, {"sha": "6b71f553307243427f5609294f495673fbb09c26", "filename": "src/test/run-pass/crate-method-reexport-grrrrrrr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // This is a regression test that the metadata for the\n // name_pool::methods impl in the other crate is reachable from this\n // crate."}, {"sha": "c7c2daadec26e0ed2254837224c20867930c6cdd", "filename": "src/test/run-pass/cycle-collection.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcycle-collection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcycle-collection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcycle-collection.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n enum taggy {\n     cons(@mut taggy),\n     nil,"}, {"sha": "f10592bf80097b7a92c27f9bde40ff750e4d73a8", "filename": "src/test/run-pass/cycle-collection2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcycle-collection2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fcycle-collection2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcycle-collection2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct foo {\n     z: Option<@Invokable>,\n }"}, {"sha": "104d3302b8346a977a92dd5f0db8a7df8b7451fc", "filename": "src/test/run-pass/deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderef.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n pub fn main() {\n     let x: @int = @10;"}, {"sha": "0cff8e8a3f8774e0c6417ce9454365dded5b54b9", "filename": "src/test/run-pass/deriving-zero.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fderiving-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fderiving-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-zero.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::util;\n use std::num::Zero;\n "}, {"sha": "2f2cd5c1863c4af51185bd297a50b93ae6732b47", "filename": "src/test/run-pass/double-unbox.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fdouble-unbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fdouble-unbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdouble-unbox.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct Quux {\n     bar: int\n }"}, {"sha": "1f13906110f56a882daa672bc3e1a2f792cf33f9", "filename": "src/test/run-pass/drop-on-empty-block-exit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fdrop-on-empty-block-exit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fdrop-on-empty-block-exit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-on-empty-block-exit.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n enum t { foo(@int), }\n "}, {"sha": "6a6f2ba0d5375efbd13d80bd0affee576343e746", "filename": "src/test/run-pass/enum-nullable-simplifycfg-misopt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fenum-nullable-simplifycfg-misopt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fenum-nullable-simplifycfg-misopt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-nullable-simplifycfg-misopt.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n /*!\n  * This is a regression test for a bug in LLVM, fixed in upstream r179587,\n  * where the switch instructions generated for destructuring enums"}, {"sha": "73837a46df707be879f1f21089b7d60d34e55b94", "filename": "src/test/run-pass/estr-shared.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Festr-shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Festr-shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Festr-shared.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n pub fn main() {\n     let _x : @str = @\"hello\";\n }"}, {"sha": "7ba8a3de24412608e41538c77bddc3c085a962ae", "filename": "src/test/run-pass/evec-internal-boxes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fevec-internal-boxes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fevec-internal-boxes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fevec-internal-boxes.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[allow(dead_assignment)];\n \n pub fn main() {"}, {"sha": "faf2a61ca788e816f7b8e869e624c86450df8b2f", "filename": "src/test/run-pass/explicit-self-objects-box.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-box.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo {\n     fn f(@self);\n }"}, {"sha": "ca64516a7efe73a8c2eb1cc20042702c7cc92a4f", "filename": "src/test/run-pass/explicit-self-objects-simple.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self-objects-simple.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo {\n     fn f(&self);\n }"}, {"sha": "65e6e384c5f1820b86ebe1400418a388fc5c8dd7", "filename": "src/test/run-pass/explicit-self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexplicit-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexplicit-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-self.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n static tau: f64 = 2.0*3.14159265358979323;\n "}, {"sha": "66c51910ed0447d13296efb8f5fad3f22c6a31f4", "filename": "src/test/run-pass/export-non-interference.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexport-non-interference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexport-non-interference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-non-interference.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n enum list_cell<T> { cons(@list_cell<T>), nil }\n "}, {"sha": "04c96bb2b980489a132dd990d3c7c5d69aaaa753", "filename": "src/test/run-pass/expr-block-generic-box1.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n-\n-\n-// -*- rust -*-\n type compare<T> = &'static fn(@T, @T) -> bool;\n \n fn test_generic<T>(expected: @T, eq: compare<T>) {"}, {"sha": "086a5b1229283f051ef74bf750242fb297fb6d41", "filename": "src/test/run-pass/expr-block-generic-box2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic-box2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -9,6 +9,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // xfail-fast\n \n type compare<'self, T> = &'self fn(T, T) -> bool;"}, {"sha": "105c2cc08052b31744422ebf3ca91f4faca81d00", "filename": "src/test/run-pass/expr-elseif-ref.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-elseif-ref.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Make sure we drop the refs of the temporaries needed to return the\n // values from the else if branch\n pub fn main() {"}, {"sha": "e6039d0601e38d47055c7503c69f0bcb2ffb5aab", "filename": "src/test/run-pass/expr-if-generic-box1.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n-\n-\n-// -*- rust -*-\n type compare<T> = &'static fn(@T, @T) -> bool;\n \n fn test_generic<T>(expected: @T, not_expected: @T, eq: compare<T>) {"}, {"sha": "b8d872742ab61afa94fe6bde083f0dd44f25097a", "filename": "src/test/run-pass/expr-if-generic-box2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-generic-box2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,8 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // xfail-fast\n-// -*- rust -*-\n \n type compare<T> = &'static fn(T, T) -> bool;\n "}, {"sha": "9220b0d697a8e59f94755b8694e1a54a8b0a7b80", "filename": "src/test/run-pass/expr-match-generic-box1.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n-\n-\n-// -*- rust -*-\n type compare<T> = &'static fn(@T, @T) -> bool;\n \n fn test_generic<T>(expected: @T, eq: compare<T>) {"}, {"sha": "430bd0f52c313a98cca2d2e78af6362ba61a5f57", "filename": "src/test/run-pass/expr-match-generic-box2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-match-generic-box2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,8 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // xfail-fast\n-// -*- rust -*-\n \n type compare<T> = &'static fn(T, T) -> bool;\n "}, {"sha": "8a498563359fbe57de5dce2c3af0b364a51c06cf", "filename": "src/test/run-pass/expr-repeat-vstore.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n use std::io::println;\n \n pub fn main() {"}, {"sha": "27f30fb8ba9edf3f4f9159bfb49da06a035a05bc", "filename": "src/test/run-pass/exterior.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fexterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexterior.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n-\n-\n-// -*- rust -*-\n struct Point {x: int, y: int, z: int}\n \n fn f(p: @mut Point) { assert!((p.z == 12)); p.z = 13; assert!((p.z == 13)); }"}, {"sha": "72427b6c53906055cedb3bb456ccb944d0919883", "filename": "src/test/run-pass/generic-alias-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-alias-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-alias-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-alias-box.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n fn id<T>(t: T) -> T { return t; }\n "}, {"sha": "b8a20060157440232f00889858477befc1ad4b14", "filename": "src/test/run-pass/generic-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-box.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n fn box<T:'static>(x: Box<T>) -> @Box<T> { return @x; }\n "}, {"sha": "6e097666bd5d9513d651068e73a0d62b16c69eec", "filename": "src/test/run-pass/generic-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-drop-glue.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n struct Pair { x: @int, y: @int }\n "}, {"sha": "1382c0191896483b865b3a5ebce862b454aeaa93", "filename": "src/test/run-pass/generic-exterior-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-exterior-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-exterior-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-exterior-box.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n struct Recbox<T> {x: @T}\n "}, {"sha": "6eccdb93d8c88f62eaf914007d600faf98cc0c05", "filename": "src/test/run-pass/generic-fn-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-fn-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-fn-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-fn-box.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n fn f<T>(x: @T) -> @T { return x; }\n "}, {"sha": "e4f545afda638f72ea26ca5df029dc937764f0b3", "filename": "src/test/run-pass/generic-ivec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-ivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-ivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-ivec.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,5 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn f<T>(_v: @T) { }\n pub fn main() { f(@~[1, 2, 3, 4, 5]); }"}, {"sha": "bff51d32333be31504ddb10925e09d0461e229a9", "filename": "src/test/run-pass/generic-object.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-object.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait Foo<T> {\n     fn get(&self) -> T;\n }"}, {"sha": "84d15799fa50527959193af1558e6e35911f1c35", "filename": "src/test/run-pass/generic-recursive-tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-recursive-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-recursive-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-recursive-tag.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n enum list<T> { cons(@T, @list<T>), nil, }\n "}, {"sha": "a0ba2a56d7883d178205f0c0d1892b708ecd373a", "filename": "src/test/run-pass/generic-tag.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[allow(dead_assignment)];\n #[allow(unused_variable)];\n "}, {"sha": "5181ec6f71d6b3872e576ed866d2dcaf86c90ffc", "filename": "src/test/run-pass/init-res-into-things.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Resources can't be copied, but storing into data structures counts\n // as a move unless the stored thing is used afterwards.\n "}, {"sha": "6ba253ca46149aeb3cb9f3e0796d0628b5e6473c", "filename": "src/test/run-pass/issue-2288.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2288.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2288.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2288.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait clam<A> {\n   fn chowder(&self, y: A);\n }"}, {"sha": "0c41d071ab0420cb22ce169805e6e3d4ebad1cef", "filename": "src/test/run-pass/issue-2380-b.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2380-b.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // xfail-fast\n // aux-build:issue-2380.rs\n "}, {"sha": "bc76fa74dbdeece1f6112e735e6e76e4e192f9b5", "filename": "src/test/run-pass/issue-2631-b.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // xfail-fast\n // aux-build:issue-2631-a.rs\n "}, {"sha": "4b932e2e57ebbc020e8a7df3f1cf079d1909dd99", "filename": "src/test/run-pass/issue-2734.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2734.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait hax { }\n impl<A> hax for A { }\n "}, {"sha": "85b6e80be7cf28033cf947a0575fa0be2cc1064b", "filename": "src/test/run-pass/issue-2735-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // This test should behave exactly like issue-2735-3\n struct defer {\n     b: @mut bool,"}, {"sha": "401a43f8b2552d54c6bf76d123c09213a7866589", "filename": "src/test/run-pass/issue-2735-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // This test should behave exactly like issue-2735-2\n struct defer {\n     b: @mut bool,"}, {"sha": "b1c357538ab7b118db13a4fae6ef67da36d861ed", "filename": "src/test/run-pass/issue-2735.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2735.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2735.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait hax { }\n impl<A> hax for A { }\n "}, {"sha": "0ef9e7108ae65cb19940316b597eef41eee7d736", "filename": "src/test/run-pass/issue-2904.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2904.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -10,6 +10,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n /// Map representation\n \n extern mod extra;"}, {"sha": "269093c010c90fd86cd1b9c986eed996e8547c08", "filename": "src/test/run-pass/issue-2935.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2935.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-2935.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2935.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n //type t = { a: int };\n // type t = { a: bool };\n type t = bool;"}, {"sha": "20e5b768d321a9ac8a4c4466c46db3f73e9aebf4", "filename": "src/test/run-pass/issue-3121.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3121.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3121.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3121.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n enum side { mayo, catsup, vinegar }\n enum order { hamburger, fries(side), shake }\n enum meal { to_go(order), for_here(order) }"}, {"sha": "7ae3e43c579ede72565bbe51bccf8dfbf6f6c255", "filename": "src/test/run-pass/issue-3447.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3447.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3447.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3447.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n static S: &'static str = \"str\";\n \n struct list<T> {"}, {"sha": "2d4e128f62325a0e3b6ce3e91ddc4f9f988d57cc", "filename": "src/test/run-pass/issue-3556.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3556.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3556.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3556.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n extern mod extra;\n \n use std::io::WriterUtil;"}, {"sha": "863414d7da0730deba18342aed8c6baa480a9d9a", "filename": "src/test/run-pass/issue-3702.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3702.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3702.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3702.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n pub fn main() {\n   trait Text {\n     fn to_str(&self) -> ~str;"}, {"sha": "f6c531334c95412f7ca1a7e42e80bcbfbdf3c6fb", "filename": "src/test/run-pass/issue-3794.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3794.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-3794.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3794.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait T {\n     fn print(&self);\n }"}, {"sha": "088376c1068b983fdc9edde36b3ef70333eadaa3", "filename": "src/test/run-pass/issue-5275.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-5275.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-5275.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5275.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Regression test for issue #5275\n \n fn foo(self_: &A) -> int {"}, {"sha": "98b9d5e8a06cf19cb5b631b4c4ad0d15d86e430b", "filename": "src/test/run-pass/issue-5884.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-5884.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-5884.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5884.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n pub struct Foo {\n     a: int,\n }"}, {"sha": "2e59111e6897b5c0369845e5d22efa17604ab3c6", "filename": "src/test/run-pass/issue-7673-cast-generically-implemented-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-7673-cast-generically-implemented-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-7673-cast-generically-implemented-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7673-cast-generically-implemented-trait.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n /*\n \n #7673 Polymorphically creating traits barely works"}, {"sha": "08d8abc1d5081b395adb9bfb8ed871d1f7927d64", "filename": "src/test/run-pass/issue-979.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-979.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-979.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-979.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct r {\n   b: @mut int,\n }"}, {"sha": "2f94dc776902a3cc2d4bb4ee3ed30ab361f5f92a", "filename": "src/test/run-pass/issue-980.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-980.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fissue-980.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-980.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n enum maybe_pointy {\n     no_pointy,\n     yes_pointy(@mut Pointy),"}, {"sha": "dab8a83ea36bb900c658bca87b68fd86caa3c83e", "filename": "src/test/run-pass/kindck-owned-trait-contains-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fkindck-owned-trait-contains-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fkindck-owned-trait-contains-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fkindck-owned-trait-contains-1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n trait repeat<A> { fn get(&self) -> A; }\n \n impl<A:Clone + 'static> repeat<A> for @A {"}, {"sha": "e676160603a452edda517d6973a3d395efe3c2e1", "filename": "src/test/run-pass/leak-box-as-tydesc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fleak-box-as-tydesc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fleak-box-as-tydesc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fleak-box-as-tydesc.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n fn leaky<T>(_t: T) { }\n "}, {"sha": "a3d2b69f868ffef2a576c658e6b909cd09dfba8e", "filename": "src/test/run-pass/leak-tag-copy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fleak-tag-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fleak-tag-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fleak-tag-copy.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[allow(dead_assignment)];\n #[allow(unused_variable)];\n "}, {"sha": "dd9fa9ce39311cd00cd2b164f1eebd1aa89e731d", "filename": "src/test/run-pass/let-destruct-fresh-mem.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Flet-destruct-fresh-mem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Flet-destruct-fresh-mem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flet-destruct-fresh-mem.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[allow(dead_assignment)];\n \n struct X { x: int, y: @A }"}, {"sha": "e388aede84a708f572fbd7ab4b39b86459e49811", "filename": "src/test/run-pass/list.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flist.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n-\n-\n-// -*- rust -*-\n enum list { cons(int, @list), nil, }\n \n pub fn main() { cons(10, @cons(11, @cons(12, @nil))); }"}, {"sha": "e4dd3b56fca603a1989ee57973956bc25667e65d", "filename": "src/test/run-pass/log-linearized.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Flog-linearized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Flog-linearized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flog-linearized.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Tests that shapes respect linearize_ty_params().\n \n enum option<T> {"}, {"sha": "e0735e7ad24d7372f334ad194924e5004144a504", "filename": "src/test/run-pass/match-pattern-drop.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,9 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n-\n-// -*- rust -*-\n enum t { make_t(@int), clam, }\n \n fn foo(s: @int) {"}, {"sha": "9fba629be2a5dfbeb06ae4d5f39bf2f909c869e1", "filename": "src/test/run-pass/mlist.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmlist.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -9,6 +9,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n enum mlist { cons(int, @mlist), nil, }\n \n pub fn main() { cons(10, @cons(11, @cons(12, @nil))); }"}, {"sha": "0259c3955d82c0f0a5fd9eae7914dcc96d7cbdab", "filename": "src/test/run-pass/monomorphized-callees-with-ty-params-3314.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmonomorphized-callees-with-ty-params-3314.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmonomorphized-callees-with-ty-params-3314.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmonomorphized-callees-with-ty-params-3314.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n extern mod extra;\n \n use std::io;"}, {"sha": "c3335a0d45570c2cfb156a761034b09299614cc7", "filename": "src/test/run-pass/move-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-1.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct Triple { x: int, y: int, z: int }\n \n fn test(x: bool, foo: @Triple) -> int {"}, {"sha": "e915cf6aed79881229c0668cd3d36489a8fbb725", "filename": "src/test/run-pass/move-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-3.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n extern mod extra;\n \n struct Triple { x: int, y: int, z: int }"}, {"sha": "ec66e72ac6979edf125f883a1ab46a4ba031cc70", "filename": "src/test/run-pass/move-4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-4.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n extern mod extra;\n "}, {"sha": "18cee34c25ca6bcc2f2d5e9a01cfedafdbfbd2ee", "filename": "src/test/run-pass/move-arg-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-arg-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmove-arg-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmove-arg-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn test(foo: @~[int]) { assert!((foo[0] == 10)); }\n \n pub fn main() {"}, {"sha": "2a04ca4ccd2ef884d001b8ace6e63cfe40a56669", "filename": "src/test/run-pass/mutable-vec-drop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmutable-vec-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmutable-vec-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutable-vec-drop.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[allow(unused_mut)];\n \n struct Pair { a: int, b: int}"}, {"sha": "6698ed27fd7b239be85c289f77d6174365f2f630", "filename": "src/test/run-pass/mutual-recursion-group.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmutual-recursion-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fmutual-recursion-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutual-recursion-group.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n \n-\n-\n-// -*- rust -*-\n enum colour { red, green, blue, }\n \n enum tree { children(@list), leaf(colour), }"}, {"sha": "95f9702908969f24df40143bb23a877aefa9fb10", "filename": "src/test/run-pass/nested-patterns.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnested-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnested-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnested-patterns.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct A { a: int, b: @int }\n struct B { a: int, b: C }\n struct D { a: int, d: C }"}, {"sha": "4a2756f5446eb35eb43628fff73a6a65bc4e085b", "filename": "src/test/run-pass/new-vstore-mut-box-syntax.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnew-vstore-mut-box-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnew-vstore-mut-box-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnew-vstore-mut-box-syntax.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n pub fn main() {\n     let _x: @mut [int] = @mut [ 1, 2, 3 ];\n "}, {"sha": "8d1333941f7f263be6a7bf34fab592fc68a122cd", "filename": "src/test/run-pass/newtype-struct-drop-run.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnewtype-struct-drop-run.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnewtype-struct-drop-run.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-drop-run.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Make sure the destructor is run for newtype structs.\n \n struct Foo(@mut int);"}, {"sha": "408c6c037ccfa960151273965a02f5c7caaae2be", "filename": "src/test/run-pass/non-boolean-pure-fns.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon-boolean-pure-fns.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -10,6 +10,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n extern mod extra;\n \n use extra::list::{List, Cons, Nil, head, is_empty};"}, {"sha": "f0955ab8efa261d30b0799f0dce9864080930171", "filename": "src/test/run-pass/objects-coerce-from-managed-to-borrowed.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fobjects-coerce-from-managed-to-borrowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fobjects-coerce-from-managed-to-borrowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobjects-coerce-from-managed-to-borrowed.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Test that we can coerce an `@Object` to an `&Object`\n \n trait Foo {"}, {"sha": "d3893c4f976d5120bd2e9e41059bb36190b797a6", "filename": "src/test/run-pass/objects-owned-object-borrowed-method-header.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fobjects-owned-object-borrowed-method-header.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fobjects-owned-object-borrowed-method-header.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobjects-owned-object-borrowed-method-header.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -10,6 +10,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Test invoked `&self` methods on owned objects where the values\n // closed over contain managed values. This implies that the ~ boxes\n // will have headers that must be skipped over."}, {"sha": "ab9d5b9d2bff4d01ed682c0ea95d02b55b184e15", "filename": "src/test/run-pass/option-unwrap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foption-unwrap.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct dtor {\n     x: @mut int,\n "}, {"sha": "562a355b3b4f5bc5bfa50dbcce3190bdf984207d", "filename": "src/test/run-pass/output-slot-variants.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n #[allow(dead_assignment)];\n #[allow(unused_variable)];\n "}, {"sha": "c6550f24d5ccd9a43eeebcc44ea3cdfd0e3cd342", "filename": "src/test/run-pass/packed-struct-size.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fpacked-struct-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fpacked-struct-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-size.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::mem;\n \n #[packed]"}, {"sha": "ad83de6ef4882941f11646a1bdbc29af798c737a", "filename": "src/test/run-pass/packed-tuple-struct-size.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-size.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::mem;\n \n #[packed]"}, {"sha": "0f7e33ce340bb4faa31da2fa47de5b6f8a4ca26b", "filename": "src/test/run-pass/pass-by-copy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fpass-by-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fpass-by-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpass-by-copy.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n fn magic(x: A) { info!(\"{:?}\", x); }\n fn magic2(x: @int) { info!(\"{:?}\", x); }\n "}, {"sha": "9901f7493f7acea7e0969f0625be12708e26350c", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -10,6 +10,8 @@\n \n // xfail-fast\n \n+#[feature(managed_boxes)];\n+\n use std::libc::c_void;\n use std::ptr;\n use std::mem;"}, {"sha": "db68ee2b5002bf43f11300395fc4e8e3baafc907", "filename": "src/test/run-pass/reflect-visit-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::unstable::intrinsics::{TyDesc, get_tydesc, visit_tydesc, TyVisitor, Opaque};\n \n struct MyVisitor {"}, {"sha": "3025032fec1b8f1e4c5f2989a5e08fc7e87754ea", "filename": "src/test/run-pass/resource-assign-is-not-copy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct r {\n   i: @mut int,\n }"}, {"sha": "898f6327aeb17b6de37179aeabf61a9c581cd15c", "filename": "src/test/run-pass/resource-cycle.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Don't leak the unique pointers\n \n use std::cast;"}, {"sha": "c7ad9711ed45d147dbe6dec94eb91a585ff99df4", "filename": "src/test/run-pass/resource-cycle2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Don't leak the unique pointers\n \n use std::cast;"}, {"sha": "8d11eca44922d6905c34af1d18debc847845f7c0", "filename": "src/test/run-pass/resource-cycle3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // same as resource-cycle2, but be sure to give r multiple fields...\n \n // Don't leak the unique pointers"}, {"sha": "d85759dff192aaf49d0deccd776bc34095928733", "filename": "src/test/run-pass/resource-destruct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-destruct.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct shrinky_pointer {\n   i: @@mut int,\n }"}, {"sha": "c76a9659c26da1cf25897a516706c3d0825e91a6", "filename": "src/test/run-pass/resource-in-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Ensures that class dtors run if the object is inside an enum\n // variant\n "}, {"sha": "cb8d73108748bc85ecc54252700d1eaf2915756d", "filename": "src/test/run-pass/shape_intrinsic_tag_then_rec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshape_intrinsic_tag_then_rec.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Exercises a bug in the shape code that was exposed\n // on x86_64: when there is a enum embedded in an\n // interior record which is then itself interior to"}, {"sha": "b630884de86b8761821bb4d289ad74b730b4a555", "filename": "src/test/run-pass/terminate-in-initializer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Issue #787\n // Don't try to clean up uninitialized locals\n "}, {"sha": "e5d91608997658d9b359e231bddf666eb2b64519", "filename": "src/test/run-pass/trait-cast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftrait-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftrait-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-cast.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Test cyclic detector when using trait instances.\n \n struct Tree(@mut TreeR);"}, {"sha": "fe0194d6f8ceaaf45803f9bd57e573ab565d37ff", "filename": "src/test/run-pass/trait-default-method-xc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -1,3 +1,5 @@\n+#[feature(managed_boxes)];\n+\n // xfail-fast\n // aux-build:trait_default_method_xc_aux.rs\n "}, {"sha": "fdae975a637cc9c5b0621b6c537de06aaa4216df", "filename": "src/test/run-pass/trait-object-generics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftrait-object-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftrait-object-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-object-generics.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // test for #8664\n \n pub trait Trait2<A> {"}, {"sha": "a0c2a489bf64a18be4fa844c27684581d25b9cfd", "filename": "src/test/run-pass/typeclasses-eq-example-static.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example-static.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Example from lkuper's intern talk, August 2012 -- now with static\n // methods!\n "}, {"sha": "50af6cb71c1f44d53a9d68e3f72741bd7fefb77c", "filename": "src/test/run-pass/typeclasses-eq-example.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Example from lkuper's intern talk, August 2012.\n \n trait Equal {"}, {"sha": "f9a8efe5701d3f188b9ef13d1121ed4926f8aba6", "filename": "src/test/run-pass/uniq-cc-generic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funiq-cc-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funiq-cc-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funiq-cc-generic.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::ptr;\n \n enum maybe_pointy {"}, {"sha": "e08d3965b17b28a01a95d88b59742b161adf167a", "filename": "src/test/run-pass/uniq-cc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funiq-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funiq-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funiq-cc.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n enum maybe_pointy {\n     none,\n     p(@mut Pointy),"}, {"sha": "a7c326ba11c4222bd5c168e38042f1a7f410ae63", "filename": "src/test/run-pass/unique-pinned-nocopy-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n struct r {\n   i: @mut int,\n }"}, {"sha": "ab5ae3aca865cb9b7f7399072d5406431bb328da", "filename": "src/test/run-pass/unwind-resource2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n extern mod extra;\n \n use std::task;"}, {"sha": "d34350e969637201c2f56421799beb29cd69ef67", "filename": "src/test/run-pass/vec-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fvec-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fvec-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-drop.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n+#[feature(managed_boxes)];\n \n struct Pair { x: int, y: int }\n "}, {"sha": "c8493f0cb154b3e3054a4f09c4590008b257dc9d", "filename": "src/test/run-pass/vec-slice-drop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n // Make sure that destructors get run on slice literals\n struct foo {\n     x: @mut int,"}, {"sha": "a2a8c8d2b34c6cf23bf12554de64b6e0d6866659", "filename": "src/test/run-pass/vector-no-ann-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,4 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n pub fn main() { let _quux: @~[uint] = @~[]; }"}, {"sha": "70803c9bd55d092b12a98f137985f68a74482b71", "filename": "src/test/run-pass/weird-exprs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142672dca4314e9cfebf067d46c3b542c721cff6/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fweird-exprs.rs?ref=142672dca4314e9cfebf067d46c3b542c721cff6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[feature(managed_boxes)];\n+\n use std::util;\n \n // Just a grab bag of stuff that you wouldn't want to actually write."}]}