{"sha": "335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNWEzYzRiN2Y1YjY0ZjdjMGUzYzg2ZGI4ZmE3OTg5ZmI2YTQ3NzE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-05T13:48:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-05T13:48:40Z"}, "message": "Rollup merge of #83368 - jyn514:download-if-unchanged, r=Mark-Simulacrum\n\nAdd `download-rustc = \"if-unchanged\"`\n\nThis allows keeping the setting to a fixed value without having to\ntoggle it when you want to work on the compiler instead of on tools.\n\nThis sets `BOOTSTRAP_DOWNLOAD_RUSTC` in bootstrap.py so rustbuild doesn't have to try and replicate its logic.\n\nHelps with https://github.com/rust-lang/rust/issues/81930.\n\nr? `@Mark-Simulacrum` cc `@camelid`", "tree": {"sha": "89abb6c5bd5be7c48a871e20ceac6bba879d12fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89abb6c5bd5be7c48a871e20ceac6bba879d12fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgaxU5CRBK7hj4Ov3rIwAAdHIIABbkvLGzpfBHQj5poSlf68tV\nrqVaNjlZHifg2NAS3IL6HszAa+QMLDUc/VDMhMwiIzqkjTv0fEPrKPWpvrk+k6t4\n+jHZPxatd/O5XjjdxkJgU/ePusrh6zIM91j6TAaRIDVzZS5dni1bS/A8jhCMfiZj\nY+2VrtIMpSpkgYIFyBXjDUzK/GBcAMLyaCLHB8bE0/D38JhdooZB13tU1WIcHCeZ\nUHuwGRz2o1DQTStHu9p8QvW+aPzB1gIXnm7Ah5zxSFVPx+i1QVWEeHd0xaLCQmuG\nYocyRkGPIrcP2k1pQBGK+QMVZ1bopzcvO85KxKH82U9P3NIsQXI5qASUeXreKIo=\n=BZ93\n-----END PGP SIGNATURE-----\n", "payload": "tree 89abb6c5bd5be7c48a871e20ceac6bba879d12fd\nparent 39eee173fbcc21462d255b364b87715cd33b62db\nparent 580a740bdd35706e487abd5beb76bd28f2be4012\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617630520 +0200\ncommitter GitHub <noreply@github.com> 1617630520 +0200\n\nRollup merge of #83368 - jyn514:download-if-unchanged, r=Mark-Simulacrum\n\nAdd `download-rustc = \"if-unchanged\"`\n\nThis allows keeping the setting to a fixed value without having to\ntoggle it when you want to work on the compiler instead of on tools.\n\nThis sets `BOOTSTRAP_DOWNLOAD_RUSTC` in bootstrap.py so rustbuild doesn't have to try and replicate its logic.\n\nHelps with https://github.com/rust-lang/rust/issues/81930.\n\nr? `@Mark-Simulacrum` cc `@camelid`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771", "html_url": "https://github.com/rust-lang/rust/commit/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39eee173fbcc21462d255b364b87715cd33b62db", "url": "https://api.github.com/repos/rust-lang/rust/commits/39eee173fbcc21462d255b364b87715cd33b62db", "html_url": "https://github.com/rust-lang/rust/commit/39eee173fbcc21462d255b364b87715cd33b62db"}, {"sha": "580a740bdd35706e487abd5beb76bd28f2be4012", "url": "https://api.github.com/repos/rust-lang/rust/commits/580a740bdd35706e487abd5beb76bd28f2be4012", "html_url": "https://github.com/rust-lang/rust/commit/580a740bdd35706e487abd5beb76bd28f2be4012"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "b78e2b7b746c42aecb9b67c66fc4c6b8c4ed5e6f", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771", "patch": "@@ -373,7 +373,9 @@ changelog-seen = 2\n # Whether to download the stage 1 and 2 compilers from CI.\n # This is mostly useful for tools; if you have changes to `compiler/` they will be ignored.\n #\n-# FIXME: currently, this also uses the downloaded compiler for stage0, but that causes unnecessary rebuilds.\n+# You can set this to \"if-unchanged\" to only download if `compiler/` has not been modified.\n+#\n+# FIXME(#82739): currently, this also uses the downloaded compiler for stage0, but that causes unnecessary rebuilds.\n #download-rustc = false\n \n # Number of codegen units to use for each compiler invocation. A value of 0"}, {"sha": "23af00d62930ac2b01fb058013132d0e874360ed", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771", "patch": "@@ -644,8 +644,10 @@ def fix_bin_or_dylib(self, fname, rpath_libz=False):\n     # If `download-rustc` is set, download the most recent commit with CI artifacts\n     def maybe_download_ci_toolchain(self):\n         # If `download-rustc` is not set, default to rebuilding.\n-        if self.get_toml(\"download-rustc\", section=\"rust\") != \"true\":\n+        download_rustc = self.get_toml(\"download-rustc\", section=\"rust\")\n+        if download_rustc is None or download_rustc == \"false\":\n             return None\n+        assert download_rustc == \"true\" or download_rustc == \"if-unchanged\", download_rustc\n \n         # Handle running from a directory other than the top level\n         rev_parse = [\"git\", \"rev-parse\", \"--show-toplevel\"]\n@@ -660,6 +662,8 @@ def maybe_download_ci_toolchain(self):\n         # Warn if there were changes to the compiler since the ancestor commit.\n         status = subprocess.call([\"git\", \"diff-index\", \"--quiet\", commit, \"--\", compiler])\n         if status != 0:\n+            if download_rustc == \"if-unchanged\":\n+                return None\n             print(\"warning: `download-rustc` is enabled, but there are changes to compiler/\")\n \n         if self.verbose:\n@@ -1175,6 +1179,8 @@ def bootstrap(help_triggered):\n     env[\"RUSTC_BOOTSTRAP\"] = '1'\n     if toml_path:\n         env[\"BOOTSTRAP_CONFIG\"] = toml_path\n+    if build.rustc_commit is not None:\n+        env[\"BOOTSTRAP_DOWNLOAD_RUSTC\"] = '1'\n     run(args, env=env, verbose=build.verbose)\n \n "}, {"sha": "04afed60a00b68cac54403bd92cbd09e9e02bdf3", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=335a3c4b7f5b64f7c0e3c86db8fa7989fb6a4771", "patch": "@@ -510,7 +510,8 @@ struct Rust {\n     new_symbol_mangling: Option<bool>,\n     profile_generate: Option<String>,\n     profile_use: Option<String>,\n-    download_rustc: Option<bool>,\n+    // ignored; this is set from an env var set by bootstrap.py\n+    download_rustc: Option<StringOrBool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -852,7 +853,7 @@ impl Config {\n             config.rust_codegen_units_std = rust.codegen_units_std.map(threads_from_config);\n             config.rust_profile_use = flags.rust_profile_use.or(rust.profile_use);\n             config.rust_profile_generate = flags.rust_profile_generate.or(rust.profile_generate);\n-            config.download_rustc = rust.download_rustc.unwrap_or(false);\n+            config.download_rustc = env::var(\"BOOTSTRAP_DOWNLOAD_RUSTC\").as_deref() == Ok(\"1\");\n         } else {\n             config.rust_profile_use = flags.rust_profile_use;\n             config.rust_profile_generate = flags.rust_profile_generate;"}]}