{"sha": "e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MDcyZmEwYzRjMjJkNjJhY2YzZGNiNzhjOGVlMjYwYTEzNjhiZDc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-11T19:20:33Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-11T19:20:33Z"}, "message": "rustc: Deterministically link upstream C libraries\n\nPreviously, upstream C libraries were linked in a nondeterministic fashion\nbecause they were collected through iter_crate_data() which is a nodeterministic\ntraversal of a hash map. When upstream rlibs had interdependencies among their\nnative libraries (such as libfoo depending on libc), then the ordering would\noccasionally be wrong, causing linkage to fail.\n\nThis uses the topologically sorted list of libraries to collect native\nlibraries, so if a native library depends on libc it just needs to make sure\nthat the rust crate depends on liblibc.", "tree": {"sha": "d315f98d14a09983abbd05f8ffdc22beb3666dbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d315f98d14a09983abbd05f8ffdc22beb3666dbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "html_url": "https://github.com/rust-lang/rust/commit/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b6091e8f1f5531fe907f84b6a2b27af04a95e8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b6091e8f1f5531fe907f84b6a2b27af04a95e8f", "html_url": "https://github.com/rust-lang/rust/commit/8b6091e8f1f5531fe907f84b6a2b27af04a95e8f"}], "stats": {"total": 97, "additions": 92, "deletions": 5}, "files": [{"sha": "9ac99b267169e40fc44383e135e5f667c3d6ef40", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "patch": "@@ -1487,15 +1487,24 @@ fn add_upstream_rust_crates(args: &mut Vec<~str>, sess: &Session,\n //    crate as well.\n //\n // The use case for this is a little subtle. In theory the native\n-// dependencies of a crate a purely an implementation detail of the crate\n+// dependencies of a crate are purely an implementation detail of the crate\n // itself, but the problem arises with generic and inlined functions. If a\n // generic function calls a native function, then the generic function must\n // be instantiated in the target crate, meaning that the native symbol must\n // also be resolved in the target crate.\n fn add_upstream_native_libraries(args: &mut Vec<~str>, sess: &Session) {\n-    let cstore = &sess.cstore;\n-    cstore.iter_crate_data(|cnum, _| {\n-        let libs = csearch::get_native_libraries(cstore, cnum);\n+    // Be sure to use a topological sorting of crates becuase there may be\n+    // interdependencies between native libraries. When passing -nodefaultlibs,\n+    // for example, almost all native libraries depend on libc, so we have to\n+    // make sure that's all the way at the right (liblibc is near the base of\n+    // the dependency chain).\n+    //\n+    // This passes RequireStatic, but the actual requirement doesn't matter,\n+    // we're just getting an ordering of crate numbers, we're not worried about\n+    // the paths.\n+    let crates = sess.cstore.get_used_crates(cstore::RequireStatic);\n+    for (cnum, _) in crates.move_iter() {\n+        let libs = csearch::get_native_libraries(&sess.cstore, cnum);\n         for &(kind, ref lib) in libs.iter() {\n             match kind {\n                 cstore::NativeUnknown => args.push(\"-l\" + *lib),\n@@ -1508,5 +1517,5 @@ fn add_upstream_native_libraries(args: &mut Vec<~str>, sess: &Session) {\n                 }\n             }\n         }\n-    });\n+    }\n }"}, {"sha": "7654917b4623201a0f371c41327caf4868f7aa24", "filename": "src/test/run-make/interdependent-c-libraries/Makefile", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2FMakefile?ref=e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "patch": "@@ -0,0 +1,15 @@\n+-include ../tools.mk\n+\n+# The rust crate foo will link to the native library foo, while the rust crate\n+# bar will link to the native library bar. There is also a dependency between\n+# the native library bar to the natibe library foo.\n+#\n+# This test ensures that the ordering of -lfoo and -lbar on the command line is\n+# correct to complete the linkage. If passed as \"-lfoo -lbar\", then the 'foo'\n+# library will be stripped out, and the linkage will fail.\n+\n+all: $(call STATICLIB,foo) $(call STATICLIB,bar)\n+\t$(RUSTC) foo.rs\n+\t$(RUSTC) bar.rs\n+\t$(RUSTC) main.rs -Z print-link-args\n+"}, {"sha": "812c97535287233599c6f936f6cd97be7f3ea5e6", "filename": "src/test/run-make/interdependent-c-libraries/bar.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.c", "raw_url": "https://github.com/rust-lang/rust/raw/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.c?ref=e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "patch": "@@ -0,0 +1,3 @@\n+void foo();\n+\n+void bar() { foo(); }"}, {"sha": "5311af2959b2c609106282ba09738e9b28df1551", "filename": "src/test/run-make/interdependent-c-libraries/bar.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fbar.rs?ref=e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+\n+extern crate foo;\n+\n+#[link(name = \"bar\")]\n+extern {\n+    fn bar();\n+}\n+\n+pub fn doit() {\n+    unsafe { bar(); }\n+}\n+"}, {"sha": "85e6cd8c3909a7e67c41750f5210b1463dd7a90c", "filename": "src/test/run-make/interdependent-c-libraries/foo.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Ffoo.c?ref=e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "patch": "@@ -0,0 +1 @@\n+void foo() {}"}, {"sha": "f94c6edb97d7180fd7e69751be9352d149c50864", "filename": "src/test/run-make/interdependent-c-libraries/foo.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Ffoo.rs?ref=e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+\n+#[link(name = \"foo\")]\n+extern {\n+    fn foo();\n+}\n+\n+pub fn doit() {\n+    unsafe { foo(); }\n+}"}, {"sha": "f42e3dd44a92497bd7e13f2ea08e008452a83dac", "filename": "src/test/run-make/interdependent-c-libraries/main.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Finterdependent-c-libraries%2Fmain.rs?ref=e6072fa0c4c22d62acf3dcb78c8ee260a1368bd7", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate foo;\n+extern crate bar;\n+\n+fn main() {\n+    bar::doit();\n+}"}]}