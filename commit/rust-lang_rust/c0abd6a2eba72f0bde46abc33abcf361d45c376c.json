{"sha": "c0abd6a2eba72f0bde46abc33abcf361d45c376c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYWJkNmEyZWJhNzJmMGJkZTQ2YWJjMzNhYmNmMzYxZDQ1YzM3NmM=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-11T17:42:25Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-11T19:06:47Z"}, "message": "We're going to have a hard time if we want to pretty-print token trees.", "tree": {"sha": "177893a341d8e9db23b3eb07ad88ecf291d3a190", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/177893a341d8e9db23b3eb07ad88ecf291d3a190"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0abd6a2eba72f0bde46abc33abcf361d45c376c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0abd6a2eba72f0bde46abc33abcf361d45c376c", "html_url": "https://github.com/rust-lang/rust/commit/c0abd6a2eba72f0bde46abc33abcf361d45c376c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0abd6a2eba72f0bde46abc33abcf361d45c376c/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3e874635fa4acb021947d482a7c3a32090e5910", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3e874635fa4acb021947d482a7c3a32090e5910", "html_url": "https://github.com/rust-lang/rust/commit/f3e874635fa4acb021947d482a7c3a32090e5910"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "5453c3cf5eb58ee737e9de85a3d34c2a74c0058c", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c0abd6a2eba72f0bde46abc33abcf361d45c376c/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0abd6a2eba72f0bde46abc33abcf361d45c376c/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=c0abd6a2eba72f0bde46abc33abcf361d45c376c", "patch": "@@ -601,13 +601,29 @@ fn print_item(s: ps, &&item: @ast::item) {\n         for methods.each |meth| { print_ty_method(s, meth); }\n         bclose(s, item.span);\n       }\n-      ast::item_mac(_m) {\n-        fail \"item macros unimplemented\"\n+      ast::item_mac({node: ast::mac_invoc_tt(pth, tts), _}) {\n+\n+        word(s.s, *item.ident);\n+        bopen(s);\n+        for tts.each |tt| { print_tt(s, tt); }\n+        bclose(s, item.span);\n+      }\n+      ast::item_mac(_) {\n+        fail \"invalid item-position syntax bit\"\n       }\n     }\n     s.ann.post(ann_node);\n }\n \n+/// Unimplemented because ident tokens lose their meaning without the interner\n+/// present. Fixing that would make invoking the pretty printer painful.\n+/// If this did work, the naive way of implementing it would be really ugly.\n+/// A prettier option would involve scraping the macro grammar for formatting\n+/// advice. But that would be hard.\n+fn print_tt(_s: ps, _tt: ast::token_tree) {\n+    fail \"token trees cannot be pretty-printed\"\n+}\n+\n fn print_variant(s: ps, v: ast::variant) {\n     word(s.s, *v.node.name);\n     if vec::len(v.node.args) > 0u {\n@@ -822,6 +838,13 @@ fn print_mac(s: ps, m: ast::mac) {\n         option::iter(arg, |a| print_expr(s, a));\n         // FIXME: extension 'body' (#2339)\n       }\n+      ast::mac_invoc_tt(path, tts) {\n+        print_path(s, path, false);\n+        word(s.s, \"!\");\n+        bopen(s);\n+        for tts.each() |tt| { print_tt(s, tt); }\n+        bclose(s, m.span);\n+      }\n       ast::mac_embed_type(ty) {\n         word(s.s, \"#<\");\n         print_type(s, ty);"}]}