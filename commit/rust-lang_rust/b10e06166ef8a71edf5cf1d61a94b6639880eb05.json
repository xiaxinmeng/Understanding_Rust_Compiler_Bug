{"sha": "b10e06166ef8a71edf5cf1d61a94b6639880eb05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMGUwNjE2NmVmOGE3MWVkZjVjZjFkNjFhOTRiNjYzOTg4MGViMDU=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2017-01-13T22:41:50Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2017-01-13T22:41:50Z"}, "message": "Add try_wait to Redox process", "tree": {"sha": "153a51dc815feb4fa1312e5043dfb25312a2fd1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/153a51dc815feb4fa1312e5043dfb25312a2fd1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b10e06166ef8a71edf5cf1d61a94b6639880eb05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b10e06166ef8a71edf5cf1d61a94b6639880eb05", "html_url": "https://github.com/rust-lang/rust/commit/b10e06166ef8a71edf5cf1d61a94b6639880eb05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b10e06166ef8a71edf5cf1d61a94b6639880eb05/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8780962828858c5b858b847430514505497a2b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8780962828858c5b858b847430514505497a2b5c", "html_url": "https://github.com/rust-lang/rust/commit/8780962828858c5b858b847430514505497a2b5c"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "50dcd44b42e92d3836267ff050e00278042c5912", "filename": "src/libstd/sys/redox/process.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b10e06166ef8a71edf5cf1d61a94b6639880eb05/src%2Flibstd%2Fsys%2Fredox%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b10e06166ef8a71edf5cf1d61a94b6639880eb05/src%2Flibstd%2Fsys%2Fredox%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fprocess.rs?ref=b10e06166ef8a71edf5cf1d61a94b6639880eb05", "patch": "@@ -501,4 +501,18 @@ impl Process {\n         self.status = Some(ExitStatus(status as i32));\n         Ok(ExitStatus(status as i32))\n     }\n+\n+    pub fn try_wait(&mut self) -> io::Result<ExitStatus> {\n+        if let Some(status) = self.status {\n+            return Ok(status)\n+        }\n+        let mut status = 0;\n+        let pid = cvt(syscall::waitpid(self.pid, &mut status, syscall::WNOHANG))?;\n+        if pid == 0 {\n+            Err(io::Error::from_raw_os_error(syscall::EWOULDBLOCK))\n+        } else {\n+            self.status = Some(ExitStatus(status as i32));\n+            Ok(ExitStatus(status as i32))\n+        }\n+    }\n }"}]}