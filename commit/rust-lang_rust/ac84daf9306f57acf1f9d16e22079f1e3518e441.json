{"sha": "ac84daf9306f57acf1f9d16e22079f1e3518e441", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjODRkYWY5MzA2ZjU3YWNmMWY5ZDE2ZTIyMDc5ZjFlMzUxOGU0NDE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-04T23:49:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-04T23:49:49Z"}, "message": "Rollup merge of #71892 - integer32llc:btreemap-entry-vacant-docs, r=jonas-schievink\n\nUpdate btree_map::VacantEntry::insert docs to actually call insert\n\nIt looks like they were copied from the `or_insert` docs. This change\nmakes the example more like the hash_map::VacantEntry::insert docs.", "tree": {"sha": "3b9d67affe58b63e4cc17c51564c574ef8b0dad6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b9d67affe58b63e4cc17c51564c574ef8b0dad6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac84daf9306f57acf1f9d16e22079f1e3518e441", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesKodCRBK7hj4Ov3rIwAAdHIIABZ96pLMQXJHA/umtd9tCoKr\ncaajo88xkpa6LOjk6B/MCkQ0EIXWkIe3BaHczgStV95ZsAg5o2VyklAWnmFqD/ew\nfjrr4Qjcn5Nkssgk5IdfB0swYWm6Hb6xfTUTL+uajNrJ+vxd13UprDNS1pntJdJ3\nGbSVb5JIGyJs5qDkpgjglfJxEhm0d6MdFO/lPEWGlomDE5ISXmRTssMCR3LqSdyb\nek5RODZgtIpntwd3l8nGYmZzw7BRkMDOZPyUhGh4SiZxp/jwIojgfr/J/YcV4oWc\nj0l6EUCkqzpuI0DcVW4Uu5m9RWpWv6wKtYAIRt0vjSk/drlSXYV3MLOlv7ppi+Y=\n=HiF0\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b9d67affe58b63e4cc17c51564c574ef8b0dad6\nparent a93cc0664fee37010385b88918632332d2a4281f\nparent d02128f92f5e7ce4911ee9ce77fc969e19aad5ad\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588636189 +0200\ncommitter GitHub <noreply@github.com> 1588636189 +0200\n\nRollup merge of #71892 - integer32llc:btreemap-entry-vacant-docs, r=jonas-schievink\n\nUpdate btree_map::VacantEntry::insert docs to actually call insert\n\nIt looks like they were copied from the `or_insert` docs. This change\nmakes the example more like the hash_map::VacantEntry::insert docs.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac84daf9306f57acf1f9d16e22079f1e3518e441", "html_url": "https://github.com/rust-lang/rust/commit/ac84daf9306f57acf1f9d16e22079f1e3518e441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac84daf9306f57acf1f9d16e22079f1e3518e441/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a93cc0664fee37010385b88918632332d2a4281f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a93cc0664fee37010385b88918632332d2a4281f", "html_url": "https://github.com/rust-lang/rust/commit/a93cc0664fee37010385b88918632332d2a4281f"}, {"sha": "d02128f92f5e7ce4911ee9ce77fc969e19aad5ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d02128f92f5e7ce4911ee9ce77fc969e19aad5ad", "html_url": "https://github.com/rust-lang/rust/commit/d02128f92f5e7ce4911ee9ce77fc969e19aad5ad"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "b8f1a4199c64fc16cb1648026225eca42f5f7bfb", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ac84daf9306f57acf1f9d16e22079f1e3518e441/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac84daf9306f57acf1f9d16e22079f1e3518e441/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=ac84daf9306f57acf1f9d16e22079f1e3518e441", "patch": "@@ -2499,15 +2499,14 @@ impl<'a, K: Ord, V> VacantEntry<'a, K, V> {\n     ///\n     /// ```\n     /// use std::collections::BTreeMap;\n+    /// use std::collections::btree_map::Entry;\n     ///\n-    /// let mut count: BTreeMap<&str, usize> = BTreeMap::new();\n+    /// let mut map: BTreeMap<&str, u32> = BTreeMap::new();\n     ///\n-    /// // count the number of occurrences of letters in the vec\n-    /// for x in vec![\"a\",\"b\",\"a\",\"c\",\"a\",\"b\"] {\n-    ///     *count.entry(x).or_insert(0) += 1;\n+    /// if let Entry::Vacant(o) = map.entry(\"poneyland\") {\n+    ///     o.insert(37);\n     /// }\n-    ///\n-    /// assert_eq!(count[\"a\"], 3);\n+    /// assert_eq!(map[\"poneyland\"], 37);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn insert(self, value: V) -> &'a mut V {"}]}