{"sha": "b78c3daad0f0b7490988f4957bab7bc53049b3bb", "node_id": "C_kwDOAAsO6NoAKGI3OGMzZGFhZDBmMGI3NDkwOTg4ZjQ5NTdiYWI3YmM1MzA0OWIzYmI", "commit": {"author": {"name": "Jack Wrenn", "email": "jack@wrenn.fyi", "date": "2022-07-21T18:18:36Z"}, "committer": {"name": "Jack Wrenn", "email": "jack@wrenn.fyi", "date": "2022-07-27T17:33:57Z"}, "message": "safe transmute: reference tracking issue\n\nref: https://github.com/rust-lang/rust/pull/92268#discussion_r925266769", "tree": {"sha": "dc1f3284d81c369d59bd2406d48aa703b73543d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc1f3284d81c369d59bd2406d48aa703b73543d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b78c3daad0f0b7490988f4957bab7bc53049b3bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b78c3daad0f0b7490988f4957bab7bc53049b3bb", "html_url": "https://github.com/rust-lang/rust/commit/b78c3daad0f0b7490988f4957bab7bc53049b3bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b78c3daad0f0b7490988f4957bab7bc53049b3bb/comments", "author": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21d1ab4877c96a2b2fa802444f3a3d311a96beef", "url": "https://api.github.com/repos/rust-lang/rust/commits/21d1ab4877c96a2b2fa802444f3a3d311a96beef", "html_url": "https://github.com/rust-lang/rust/commit/21d1ab4877c96a2b2fa802444f3a3d311a96beef"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "b1cf5bd92d252538658c77148140f7cbedb74f48", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b78c3daad0f0b7490988f4957bab7bc53049b3bb/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78c3daad0f0b7490988f4957bab7bc53049b3bb/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=b78c3daad0f0b7490988f4957bab7bc53049b3bb", "patch": "@@ -28,7 +28,7 @@ mod valid_align;\n pub(crate) use valid_align::ValidAlign;\n \n mod transmutability;\n-#[unstable(feature = \"transmutability\", issue = \"none\")]\n+#[unstable(feature = \"transmutability\", issue = \"99571\")]\n pub use transmutability::{Assume, BikeshedIntrinsicFrom};\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "b59a5b89d839fb76bce65e51c70a3f4123a3fe8f", "filename": "library/core/src/mem/transmutability.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b78c3daad0f0b7490988f4957bab7bc53049b3bb/library%2Fcore%2Fsrc%2Fmem%2Ftransmutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78c3daad0f0b7490988f4957bab7bc53049b3bb/library%2Fcore%2Fsrc%2Fmem%2Ftransmutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Ftransmutability.rs?ref=b78c3daad0f0b7490988f4957bab7bc53049b3bb", "patch": "@@ -3,7 +3,7 @@\n /// This trait is implemented on-the-fly by the compiler for types `Src` and `Self` when the bits of\n /// any value of type `Self` are safely transmutable into a value of type `Dst`, in a given `Context`,\n /// notwithstanding whatever safety checks you have asked the compiler to [`Assume`] are satisfied.\n-#[unstable(feature = \"transmutability\", issue = \"none\")]\n+#[unstable(feature = \"transmutability\", issue = \"99571\")]\n #[cfg_attr(not(bootstrap), lang = \"transmute_trait\")]\n #[rustc_on_unimplemented(\n     message = \"`{Src}` cannot be safely transmuted into `{Self}` in the defining scope of `{Context}`.\",\n@@ -22,7 +22,7 @@ pub unsafe trait BikeshedIntrinsicFrom<\n }\n \n /// What transmutation safety conditions shall the compiler assume that *you* are checking?\n-#[unstable(feature = \"transmutability\", issue = \"none\")]\n+#[unstable(feature = \"transmutability\", issue = \"99571\")]\n #[derive(PartialEq, Eq, Clone, Copy, Debug)]\n pub struct Assume {\n     /// When `true`, the compiler assumes that *you* are ensuring (either dynamically or statically) that"}, {"sha": "30c381745d0f97b92cf83e8ed246727e9b0874a3", "filename": "src/test/ui/transmutability/malformed-program-gracefulness/feature-missing.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b78c3daad0f0b7490988f4957bab7bc53049b3bb/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Ffeature-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78c3daad0f0b7490988f4957bab7bc53049b3bb/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Ffeature-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Ffeature-missing.rs?ref=b78c3daad0f0b7490988f4957bab7bc53049b3bb", "patch": "@@ -4,3 +4,6 @@\n \n use std::mem::BikeshedIntrinsicFrom;\n //~^ ERROR use of unstable library feature 'transmutability' [E0658]\n+\n+use std::mem::Assume;\n+//~^ ERROR use of unstable library feature 'transmutability' [E0658]"}, {"sha": "ba8093f86146558555f3c20904627291c78a699e", "filename": "src/test/ui/transmutability/malformed-program-gracefulness/feature-missing.stderr", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b78c3daad0f0b7490988f4957bab7bc53049b3bb/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Ffeature-missing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b78c3daad0f0b7490988f4957bab7bc53049b3bb/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Ffeature-missing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Ffeature-missing.stderr?ref=b78c3daad0f0b7490988f4957bab7bc53049b3bb", "patch": "@@ -4,8 +4,18 @@ error[E0658]: use of unstable library feature 'transmutability'\n LL | use std::mem::BikeshedIntrinsicFrom;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n+   = note: see issue #99571 <https://github.com/rust-lang/rust/issues/99571> for more information\n    = help: add `#![feature(transmutability)]` to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0658]: use of unstable library feature 'transmutability'\n+  --> $DIR/feature-missing.rs:8:5\n+   |\n+LL | use std::mem::Assume;\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #99571 <https://github.com/rust-lang/rust/issues/99571> for more information\n+   = help: add `#![feature(transmutability)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}