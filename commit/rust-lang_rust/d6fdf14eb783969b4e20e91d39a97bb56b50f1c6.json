{"sha": "d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "node_id": "C_kwDOAAsO6NoAKGQ2ZmRmMTRlYjc4Mzk2OWI0ZTIwZTkxZDM5YTk3YmI1NmI1MGYxYzY", "commit": {"author": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-17T14:51:01Z"}, "committer": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-21T15:57:21Z"}, "message": "Migrate forbidden_let", "tree": {"sha": "34ad565b37e242e77e2de2c1de3fcc950756a209", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34ad565b37e242e77e2de2c1de3fcc950756a209"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "html_url": "https://github.com/rust-lang/rust/commit/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/comments", "author": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "committer": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b695f7c4e1a02d160fe7e159abd0f87027c0fcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b695f7c4e1a02d160fe7e159abd0f87027c0fcf", "html_url": "https://github.com/rust-lang/rust/commit/4b695f7c4e1a02d160fe7e159abd0f87027c0fcf"}], "stats": {"total": 63, "additions": 45, "deletions": 18}, "files": [{"sha": "cb245ce0ff828ef01c6b0cea39b7beec89a5fc85", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "patch": "@@ -3595,6 +3595,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_macros\",\n  \"rustc_parse\",\n  \"rustc_session\",\n  \"rustc_span\","}, {"sha": "37eff9207c128688b02768b9bddfac6c9b360719", "filename": "compiler/rustc_ast_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2FCargo.toml?ref=d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "patch": "@@ -11,6 +11,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n rustc_parse = { path = \"../rustc_parse\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "f8eca6a9337117858d555e33753dfef57cbbfa09", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "patch": "@@ -27,6 +27,8 @@ use rustc_target::spec::abi;\n use std::mem;\n use std::ops::{Deref, DerefMut};\n \n+use crate::errors::ForbiddenLet;\n+\n const MORE_EXTERN: &str =\n     \"for more information, visit https://doc.rust-lang.org/std/keyword.extern.html\";\n \n@@ -117,23 +119,7 @@ impl<'a> AstValidator<'a> {\n \n     /// Emits an error banning the `let` expression provided in the given location.\n     fn ban_let_expr(&self, expr: &'a Expr, forbidden_let_reason: ForbiddenLetReason) {\n-        let err = \"`let` expressions are not supported here\";\n-        let mut diag = self.session.struct_span_err(expr.span, err);\n-        diag.note(\"only supported directly in conditions of `if` and `while` expressions\");\n-        match forbidden_let_reason {\n-            ForbiddenLetReason::GenericForbidden => {}\n-            ForbiddenLetReason::NotSupportedOr(span) => {\n-                diag.span_note(span, \"`||` operators are not supported in let chain expressions\");\n-            }\n-            ForbiddenLetReason::NotSupportedParentheses(span) => {\n-                diag.span_note(\n-                    span,\n-                    \"`let`s wrapped in parentheses are not supported in a context with let \\\n-                    chains\",\n-                );\n-            }\n-        }\n-        diag.emit();\n+        self.session.emit_err(ForbiddenLet { span: expr.span, reason: forbidden_let_reason });\n     }\n \n     fn check_gat_where(\n@@ -1876,7 +1862,7 @@ pub fn check_crate(session: &Session, krate: &Crate, lints: &mut LintBuffer) ->\n \n /// Used to forbid `let` expressions in certain syntactic locations.\n #[derive(Clone, Copy)]\n-enum ForbiddenLetReason {\n+pub(crate) enum ForbiddenLetReason {\n     /// `let` is not valid and the source environment is not important\n     GenericForbidden,\n     /// A let chain with the `||` operator"}, {"sha": "397acd3b60912435b1511dcee8d973ddb2555272", "filename": "compiler/rustc_ast_passes/src/errors.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs?ref=d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "patch": "@@ -0,0 +1,32 @@\n+//! Errors emitted by ast_passes.\n+\n+use rustc_errors::fluent;\n+use rustc_errors::{AddSubdiagnostic, Diagnostic};\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+use crate::ast_validation::ForbiddenLetReason;\n+\n+#[derive(SessionDiagnostic)]\n+#[error(ast_passes::forbidden_let)]\n+#[note]\n+pub struct ForbiddenLet {\n+    #[primary_span]\n+    pub span: Span,\n+    #[subdiagnostic]\n+    pub(crate) reason: ForbiddenLetReason,\n+}\n+\n+impl AddSubdiagnostic for ForbiddenLetReason {\n+    fn add_to_diagnostic(self, diag: &mut Diagnostic) {\n+        match self {\n+            Self::GenericForbidden => {}\n+            Self::NotSupportedOr(span) => {\n+                diag.span_note(span, fluent::ast_passes::not_supported_or);\n+            }\n+            Self::NotSupportedParentheses(span) => {\n+                diag.span_note(span, fluent::ast_passes::not_supported_parentheses);\n+            },\n+        }\n+    }\n+}"}, {"sha": "6a8262989850cb23d6417bba225117c062d45547", "filename": "compiler/rustc_ast_passes/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs?ref=d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "patch": "@@ -12,6 +12,7 @@\n #![recursion_limit = \"256\"]\n \n pub mod ast_validation;\n+mod errors;\n pub mod feature_gate;\n pub mod node_count;\n pub mod show_span;"}, {"sha": "4f4235b6c815567f75f246f9f6f4cedce7dd8436", "filename": "compiler/rustc_error_messages/locales/en-US/ast_passes.ftl", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl?ref=d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "patch": "@@ -0,0 +1,5 @@\n+ast_passes_forbidden_let =\n+    `let` expressions are not supported here\n+    .note = only supported directly in conditions of `if` and `while` expressions\n+    .not_supported_or = `||` operators are not supported in let chain expressions\n+    .not_supported_parentheses = `let`s wrapped in parentheses are not supported in a context with let chains"}, {"sha": "3569c7f0630649d36721b26478892c5f4579aebc", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "patch": "@@ -32,6 +32,7 @@ pub use unic_langid::{langid, LanguageIdentifier};\n \n // Generates `DEFAULT_LOCALE_RESOURCES` static and `fluent_generated` module.\n fluent_messages! {\n+    ast_passes => \"../locales/en-US/ast_passes.ftl\",\n     borrowck => \"../locales/en-US/borrowck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n     const_eval => \"../locales/en-US/const_eval.ftl\","}]}