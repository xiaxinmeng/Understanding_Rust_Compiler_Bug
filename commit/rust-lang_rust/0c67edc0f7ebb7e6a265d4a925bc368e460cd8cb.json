{"sha": "0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNjdlZGMwZjdlYmI3ZTZhMjY1ZDRhOTI1YmMzNjhlNDYwY2Q4Y2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-16T10:50:09Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-16T10:50:09Z"}, "message": "Expand code order section", "tree": {"sha": "c0bec28be51fb28d6e92069388b2434e32c076b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0bec28be51fb28d6e92069388b2434e32c076b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb", "html_url": "https://github.com/rust-lang/rust/commit/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de202010948c94658235f7cfe9b25dda0c7ddf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de202010948c94658235f7cfe9b25dda0c7ddf3", "html_url": "https://github.com/rust-lang/rust/commit/1de202010948c94658235f7cfe9b25dda0c7ddf3"}], "stats": {"total": 61, "additions": 50, "deletions": 11}, "files": [{"sha": "7a64a0d228c7105e49211fb455b3852681ca9228", "filename": "docs/dev/style.md", "status": "modified", "additions": 50, "deletions": 11, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb", "patch": "@@ -366,27 +366,66 @@ People read things from top to bottom, so place most important things first.\n \n Specifically, if all items except one are private, always put the non-private item on top.\n \n-Put `struct`s and `enum`s first, functions and impls last.\n-\n-Do\n-\n ```rust\n // Good\n-struct Foo {\n-    bars: Vec<Bar>\n+pub(crate) fn frobnicate() {\n+    Helper::act()\n+}\n+\n+#[derive(Default)]\n+struct Helper { stuff: i32 }\n+\n+impl Helper {\n+    fn act(&self) {\n+\n+    }\n+}\n+\n+// Not as good\n+#[derive(Default)]\n+struct Helper { stuff: i32 }\n+\n+pub(crate) fn frobnicate() {\n+    Helper::act()\n }\n \n-struct Bar;\n+impl Helper {\n+    fn act(&self) {\n+\n+    }\n+}\n ```\n \n-rather than\n+If there's a mixture of private and public items, put public items first.\n+If function bodies are folded in the editor, the source code should read as documentation for the public API.\n+\n+Put `struct`s and `enum`s first, functions and impls last. Order types declarations in top-down manner.\n \n ```rust\n+// Good\n+struct Parent {\n+    children: Vec<Child>\n+}\n+\n+struct Child;\n+\n+impl Parent {\n+}\n+\n+impl Child {\n+}\n+\n // Not as good\n-struct Bar;\n+struct Child;\n \n-struct Foo {\n-    bars: Vec<Bar>\n+impl Child {\n+}\n+\n+struct Parent {\n+    children: Vec<Child>\n+}\n+\n+impl Parent {\n }\n ```\n "}]}