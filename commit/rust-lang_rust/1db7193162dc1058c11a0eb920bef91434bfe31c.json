{"sha": "1db7193162dc1058c11a0eb920bef91434bfe31c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYjcxOTMxNjJkYzEwNThjMTFhMGViOTIwYmVmOTE0MzRiZmUzMWM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-11-19T15:47:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-01-02T22:35:06Z"}, "message": "address tmandry nits", "tree": {"sha": "18cfd7c1db47f1c44c2d428dc022f058d8a5ebd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18cfd7c1db47f1c44c2d428dc022f058d8a5ebd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db7193162dc1058c11a0eb920bef91434bfe31c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db7193162dc1058c11a0eb920bef91434bfe31c", "html_url": "https://github.com/rust-lang/rust/commit/1db7193162dc1058c11a0eb920bef91434bfe31c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db7193162dc1058c11a0eb920bef91434bfe31c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf2f7cccb4fc170cd395f47569e8280e7081bf25", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf2f7cccb4fc170cd395f47569e8280e7081bf25", "html_url": "https://github.com/rust-lang/rust/commit/cf2f7cccb4fc170cd395f47569e8280e7081bf25"}], "stats": {"total": 77, "additions": 14, "deletions": 63}, "files": [{"sha": "fb9a7fbf7aba5e343edbfb3387bca9affc282a1a", "filename": "src/test/ui/coherence/coherence-subtyping.rs", "status": "modified", "additions": 3, "deletions": 29, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.rs?ref=1db7193162dc1058c11a0eb920bef91434bfe31c", "patch": "@@ -1,40 +1,14 @@\n // Test that two distinct impls which match subtypes of one another\n // yield coherence errors (or not) depending on the variance.\n \n-trait Contravariant {\n+trait TheTrait {\n     fn foo(&self) { }\n }\n \n-impl Contravariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n+impl TheTrait for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n }\n \n-impl Contravariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-    //~^ ERROR\n-}\n-\n-///////////////////////////////////////////////////////////////////////////\n-\n-trait Covariant {\n-    fn foo(&self) { }\n-}\n-\n-impl Covariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-}\n-\n-impl Covariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-    //~^ ERROR\n-}\n-\n-///////////////////////////////////////////////////////////////////////////\n-\n-trait Invariant {\n-    fn foo(&self) { }\n-}\n-\n-impl Invariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-}\n-\n-impl Invariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n+impl TheTrait for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n     //~^ ERROR\n }\n "}, {"sha": "1f9b2cb6fdfa3ac31b4664e501069a1bc02dd8a3", "filename": "src/test/ui/coherence/coherence-subtyping.stderr", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.stderr?ref=1db7193162dc1058c11a0eb920bef91434bfe31c", "patch": "@@ -1,30 +1,12 @@\n-error[E0119]: conflicting implementations of trait `Contravariant` for type `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`:\n+error[E0119]: conflicting implementations of trait `TheTrait` for type `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`:\n   --> $DIR/coherence-subtyping.rs:11:1\n    |\n-LL | impl Contravariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-   | -------------------------------------------------------------- first implementation here\n+LL | impl TheTrait for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n+   | --------------------------------------------------------- first implementation here\n ...\n-LL | impl Contravariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`\n+LL | impl TheTrait for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`\n \n-error[E0119]: conflicting implementations of trait `Covariant` for type `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`:\n-  --> $DIR/coherence-subtyping.rs:24:1\n-   |\n-LL | impl Covariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-   | ---------------------------------------------------------- first implementation here\n-...\n-LL | impl Covariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`\n-\n-error[E0119]: conflicting implementations of trait `Invariant` for type `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`:\n-  --> $DIR/coherence-subtyping.rs:37:1\n-   |\n-LL | impl Invariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-   | ---------------------------------------------------------- first implementation here\n-...\n-LL | impl Invariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0119`."}, {"sha": "828331cb950ed722009170c05d1d025290cab832", "filename": "src/test/ui/hrtb/hrtb-exists-forall-fn.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.rs?ref=1db7193162dc1058c11a0eb920bef91434bfe31c", "patch": "@@ -3,21 +3,16 @@\n // In particular, we test this pattern in trait solving, where it is not connected\n // to any part of the source code.\n \n-trait Trait<T> {}\n-\n fn foo<'a>() -> fn(&'a u32) {\n     panic!()\n }\n \n fn main() {\n-    // Here, proving that `(): Trait<for<'b> fn(&'b u32)>` uses the impl:\n+    // Here, proving that `fn(&'a u32) <: for<'b> fn(&'b u32)`:\n     //\n-    // - The impl provides the clause `forall<'a> { (): Trait<fn(&'a u32)> }`\n-    // - We instantiate `'a` existentially to get `(): Trait<fn(&?a u32)>`\n-    // - We unify `fn(&?a u32)` with `for<'b> fn(&'b u32)`\n-    //   - This requires (among other things) instantiating `'b` universally,\n-    //     yielding `fn(&!b u32)`, in a fresh universe U1\n-    //   - So we get `?a = !b` but the universe U0 assigned to `?a` cannot name `!b`.\n+    // - instantiates `'b` with a placeholder `!b`,\n+    // - requires that `&!b u32 <: &'a u32` and hence that `!b: 'a`,\n+    // - but we can never know this.\n \n     let _: for<'b> fn(&'b u32) = foo(); //~ ERROR mismatched types\n }"}, {"sha": "6301ed45ac277d7919b58d1e561de810f4086762", "filename": "src/test/ui/hrtb/hrtb-exists-forall-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1db7193162dc1058c11a0eb920bef91434bfe31c/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.stderr?ref=1db7193162dc1058c11a0eb920bef91434bfe31c", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/hrtb-exists-forall-fn.rs:22:34\n+  --> $DIR/hrtb-exists-forall-fn.rs:17:34\n    |\n LL |     let _: for<'b> fn(&'b u32) = foo(); //~ ERROR mismatched types\n    |                                  ^^^^^ one type is more general than the other"}]}