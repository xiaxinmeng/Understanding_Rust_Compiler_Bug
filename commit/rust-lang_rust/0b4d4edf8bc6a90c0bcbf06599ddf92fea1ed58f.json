{"sha": "0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNGQ0ZWRmOGJjNmE5MGMwYmNiZjA2NTk5ZGRmOTJmZWExZWQ1OGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-25T01:27:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-13T21:24:10Z"}, "message": "core::rt: Fix a warning about unnecessary mutable variable", "tree": {"sha": "86b30a17a6f3864865f5bf2b8ce66081601d48e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86b30a17a6f3864865f5bf2b8ce66081601d48e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f", "html_url": "https://github.com/rust-lang/rust/commit/0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34be071353adf441a9d324528dafadc7c4aba82c", "url": "https://api.github.com/repos/rust-lang/rust/commits/34be071353adf441a9d324528dafadc7c4aba82c", "html_url": "https://github.com/rust-lang/rust/commit/34be071353adf441a9d324528dafadc7c4aba82c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c6843c605d159aa89f446cf6d892e6ad4c13a25", "filename": "src/libcore/rt/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f/src%2Flibcore%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f/src%2Flibcore%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Ftest.rs?ref=0b4d4edf8bc6a90c0bcbf06599ddf92fea1ed58f", "patch": "@@ -77,7 +77,7 @@ pub fn spawntask_try(f: ~fn()) -> Result<(), ()> {\n \n     // Switch to the scheduler\n     let f = Cell(Cell(f));\n-    let mut sched = local_sched::take();\n+    let sched = local_sched::take();\n     do sched.deschedule_running_task_and_then() |old_task| {\n         let old_task = Cell(old_task);\n         let f = f.take();"}]}