{"sha": "5848c27c7995eabe0db76eb7c1360c77e9fefba4", "node_id": "C_kwDOAAsO6NoAKDU4NDhjMjdjNzk5NWVhYmUwZGI3NmViN2MxMzYwYzc3ZTlmZWZiYTQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T14:22:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T14:22:16Z"}, "message": "make raw_eq precondition more restrictive", "tree": {"sha": "9678bb2f4347ca53fdef46237ae0468709099cde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9678bb2f4347ca53fdef46237ae0468709099cde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5848c27c7995eabe0db76eb7c1360c77e9fefba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5848c27c7995eabe0db76eb7c1360c77e9fefba4", "html_url": "https://github.com/rust-lang/rust/commit/5848c27c7995eabe0db76eb7c1360c77e9fefba4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5848c27c7995eabe0db76eb7c1360c77e9fefba4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d60d88fe5cd55496b9ccb1511a9af4994b7c43d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d60d88fe5cd55496b9ccb1511a9af4994b7c43d0", "html_url": "https://github.com/rust-lang/rust/commit/d60d88fe5cd55496b9ccb1511a9af4994b7c43d0"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "a85f13a4b9e80e6125a3573941b9cbef27ba98d3", "filename": "library/core/src/array/equality.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5848c27c7995eabe0db76eb7c1360c77e9fefba4/library%2Fcore%2Fsrc%2Farray%2Fequality.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5848c27c7995eabe0db76eb7c1360c77e9fefba4/library%2Fcore%2Fsrc%2Farray%2Fequality.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fequality.rs?ref=5848c27c7995eabe0db76eb7c1360c77e9fefba4", "patch": "@@ -173,13 +173,14 @@ macro_rules! is_raw_eq_comparable {\n     )+};\n }\n \n-// SAFETY: All the ordinary integer types allow all bit patterns as distinct values\n+// SAFETY: All the ordinary integer types have no padding, and are no poointers.\n is_raw_eq_comparable!(u8, u16, u32, u64, u128, usize, i8, i16, i32, i64, i128, isize);\n \n-// SAFETY: bool and char have *niches*, but no *padding*, so this is sound\n+// SAFETY: bool and char have *niches*, but no *padding* (and these are not pointer types), so this\n+// is sound\n is_raw_eq_comparable!(bool, char);\n \n-// SAFETY: Similarly, the non-zero types have a niche, but no undef,\n+// SAFETY: Similarly, the non-zero types have a niche, but no undef and no pointers,\n // and they compare like their underlying numeric type.\n is_raw_eq_comparable!(\n     NonZeroU8,"}, {"sha": "565c32d688874214b76abe25ddbbfb23eea3a674", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5848c27c7995eabe0db76eb7c1360c77e9fefba4/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5848c27c7995eabe0db76eb7c1360c77e9fefba4/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=5848c27c7995eabe0db76eb7c1360c77e9fefba4", "patch": "@@ -2277,7 +2277,8 @@ extern \"rust-intrinsic\" {\n     ///\n     /// # Safety\n     ///\n-    /// It's UB to call this if any of the *bytes* in `*a` or `*b` are uninitialized.\n+    /// It's UB to call this if any of the *bytes* in `*a` or `*b` are uninitialized or carries a\n+    /// pointer value.\n     /// Note that this is a stricter criterion than just the *values* being\n     /// fully-initialized: if `T` has padding, it's UB to call this intrinsic.\n     ///"}]}