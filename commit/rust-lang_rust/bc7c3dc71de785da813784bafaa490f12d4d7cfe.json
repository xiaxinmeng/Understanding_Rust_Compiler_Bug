{"sha": "bc7c3dc71de785da813784bafaa490f12d4d7cfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjN2MzZGM3MWRlNzg1ZGE4MTM3ODRiYWZhYTQ5MGYxMmQ0ZDdjZmU=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-11-30T23:39:51Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-12-04T06:38:48Z"}, "message": "sort_by_cached_key -> sort_by", "tree": {"sha": "eff58c9f7fde6a052c956d6a0fb2ec9d3cd7cdd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eff58c9f7fde6a052c956d6a0fb2ec9d3cd7cdd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc7c3dc71de785da813784bafaa490f12d4d7cfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7c3dc71de785da813784bafaa490f12d4d7cfe", "html_url": "https://github.com/rust-lang/rust/commit/bc7c3dc71de785da813784bafaa490f12d4d7cfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc7c3dc71de785da813784bafaa490f12d4d7cfe/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65aa0a6249b7d7afddbd7d5b9cf4c8c68575e334", "url": "https://api.github.com/repos/rust-lang/rust/commits/65aa0a6249b7d7afddbd7d5b9cf4c8c68575e334", "html_url": "https://github.com/rust-lang/rust/commit/65aa0a6249b7d7afddbd7d5b9cf4c8c68575e334"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "528942df29fee5da3fc824147aa72e837551a97f", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc7c3dc71de785da813784bafaa490f12d4d7cfe/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7c3dc71de785da813784bafaa490f12d4d7cfe/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=bc7c3dc71de785da813784bafaa490f12d4d7cfe", "patch": "@@ -585,7 +585,7 @@ fn merge_codegen_units<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>,\n     // smallest into each other) we're sure to start off with a deterministic\n     // order (sorted by name). This'll mean that if two cgus have the same size\n     // the stable sort below will keep everything nice and deterministic.\n-    codegen_units.sort_by_key(|cgu| cgu.name().clone());\n+    codegen_units.sort_by_key(|cgu| *cgu.name());\n \n     // Merge the two smallest codegen units until the target size is reached.\n     while codegen_units.len() > target_cgu_count {\n@@ -985,7 +985,7 @@ fn collect_and_partition_mono_items<'a, 'tcx>(\n                 output.push_str(\" @@\");\n                 let mut empty = Vec::new();\n                 let cgus = item_to_cgus.get_mut(i).unwrap_or(&mut empty);\n-                cgus.as_mut_slice().sort_by_cached_key(|&(ref name, _)| name.clone());\n+                cgus.sort_by_key(|(name, _)| *name);\n                 cgus.dedup();\n                 for &(ref cgu_name, (linkage, _)) in cgus.iter() {\n                     output.push_str(\" \");"}]}