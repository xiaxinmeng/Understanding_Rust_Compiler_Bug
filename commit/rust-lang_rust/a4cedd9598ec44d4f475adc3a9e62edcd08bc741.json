{"sha": "a4cedd9598ec44d4f475adc3a9e62edcd08bc741", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Y2VkZDk1OThlYzQ0ZDRmNDc1YWRjM2E5ZTYyZWRjZDA4YmM3NDE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-07T00:44:07Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-07T01:01:26Z"}, "message": "Disallow multiple constructors or destructors in the same class\n\nCloses #2825", "tree": {"sha": "6e7019258860b52b9abc1efb727b16a52157b2b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e7019258860b52b9abc1efb727b16a52157b2b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4cedd9598ec44d4f475adc3a9e62edcd08bc741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cedd9598ec44d4f475adc3a9e62edcd08bc741", "html_url": "https://github.com/rust-lang/rust/commit/a4cedd9598ec44d4f475adc3a9e62edcd08bc741", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4cedd9598ec44d4f475adc3a9e62edcd08bc741/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "253dfc338775570a76d6c68bf349b2026e700797", "url": "https://api.github.com/repos/rust-lang/rust/commits/253dfc338775570a76d6c68bf349b2026e700797", "html_url": "https://github.com/rust-lang/rust/commit/253dfc338775570a76d6c68bf349b2026e700797"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "41b8b8f27d45624dac318067e8914bb7e408b810", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a4cedd9598ec44d4f475adc3a9e62edcd08bc741/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4cedd9598ec44d4f475adc3a9e62edcd08bc741/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a4cedd9598ec44d4f475adc3a9e62edcd08bc741", "patch": "@@ -225,6 +225,9 @@ class parser {\n     fn span_fatal(sp: span, m: ~str) -> ! {\n         self.sess.span_diagnostic.span_fatal(sp, m)\n     }\n+    fn span_note(sp: span, m: ~str) {\n+        self.sess.span_diagnostic.span_note(sp, m)\n+    }\n     fn bug(m: ~str) -> ! {\n         self.sess.span_diagnostic.span_bug(copy self.span, m)\n     }\n@@ -2529,10 +2532,30 @@ class parser {\n         while self.token != token::RBRACE {\n             match self.parse_class_item(class_path) {\n               ctor_decl(a_fn_decl, attrs, blk, s) => {\n-                the_ctor = some((a_fn_decl, attrs, blk, s));\n+                  match the_ctor {\n+                    some((_, _, _, s_first)) => {\n+                      self.span_note(s, #fmt(\"Duplicate constructor \\\n+                                   declaration for class %s\", *class_name));\n+                       self.span_fatal(copy s_first, ~\"First constructor \\\n+                                                      declared here\");\n+                    }\n+                    none    => {\n+                      the_ctor = some((a_fn_decl, attrs, blk, s));\n+                    }\n+                  }\n               }\n               dtor_decl(blk, attrs, s) => {\n-                the_dtor = some((blk, attrs, s));\n+                  match the_dtor {\n+                    some((_, _, s_first)) => {\n+                      self.span_note(s, #fmt(\"Duplicate destructor \\\n+                                    declaration for class %s\", *class_name));\n+                      self.span_fatal(copy s_first, ~\"First destructor \\\n+                                                      declared here\");\n+                    }\n+                    none => {\n+                      the_dtor = some((blk, attrs, s));\n+                    }\n+                  }\n               }\n               members(mms) => { ms = vec::append(ms, mms); }\n             }\n@@ -2557,9 +2580,6 @@ class parser {\n                  span: ct_s}), actual_dtor),\n              none)\n           }\n-          /*\n-          Is it strange for the parser to check this?\n-          */\n           none => {\n             (class_name,\n              item_class(ty_params, traits, ms, none, actual_dtor),"}, {"sha": "7b4a1bf3dba766ae1dafa4fd3ee20e4a097d4106", "filename": "src/test/compile-fail/issue-2825-b.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a4cedd9598ec44d4f475adc3a9e62edcd08bc741/src%2Ftest%2Fcompile-fail%2Fissue-2825-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4cedd9598ec44d4f475adc3a9e62edcd08bc741/src%2Ftest%2Fcompile-fail%2Fissue-2825-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2825-b.rs?ref=a4cedd9598ec44d4f475adc3a9e62edcd08bc741", "patch": "@@ -0,0 +1,14 @@\n+class example {\n+    let x: int;\n+    new() {\n+        self.x = 1;\n+    }\n+    drop {} //~ ERROR First destructor declared\n+    drop {\n+        debug!(\"Goodbye, cruel world\");\n+    }\n+}\n+\n+fn main(_args: ~[~str]) {\n+  let e: example = example();\n+}"}, {"sha": "847b7bccdb64f5708612be297a1665d5768ffbdb", "filename": "src/test/compile-fail/issue-2825.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a4cedd9598ec44d4f475adc3a9e62edcd08bc741/src%2Ftest%2Fcompile-fail%2Fissue-2825.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4cedd9598ec44d4f475adc3a9e62edcd08bc741/src%2Ftest%2Fcompile-fail%2Fissue-2825.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2825.rs?ref=a4cedd9598ec44d4f475adc3a9e62edcd08bc741", "patch": "@@ -0,0 +1,13 @@\n+class example {\n+  let x: int;\n+  new() { //~ ERROR First constructor declared here\n+    self.x = 1;\n+  }\n+  new(x_: int) {\n+    self.x = x_;\n+  }\n+}\n+\n+fn main(_args: ~[~str]) {\n+  let e: example = example();\n+}"}]}