{"sha": "09db05762b283bed62d4f92729cfee4646519833", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZGIwNTc2MmIyODNiZWQ2MmQ0ZjkyNzI5Y2ZlZTQ2NDY1MTk4MzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-01T11:53:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-01T11:53:24Z"}, "message": "Auto merge of #78360 - tmiasko:storage-markers, r=wesleywiser,oli-obk\n\nRemove storage markers if they won't be used during code generation\n\nThe storage markers constitute a substantial portion of all MIR\nstatements. At the same time, for builds without any optimizations,\nthe storage markers have no further use during and after MIR\noptimization phase.\n\nIf storage markers are not necessary for code generation, remove them.", "tree": {"sha": "0c3f7b485c837db35f7af1f5159df4a25f617d62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c3f7b485c837db35f7af1f5159df4a25f617d62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09db05762b283bed62d4f92729cfee4646519833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09db05762b283bed62d4f92729cfee4646519833", "html_url": "https://github.com/rust-lang/rust/commit/09db05762b283bed62d4f92729cfee4646519833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09db05762b283bed62d4f92729cfee4646519833/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2731d8e9338d8fe844e19d3fbb39617753e65f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2731d8e9338d8fe844e19d3fbb39617753e65f4", "html_url": "https://github.com/rust-lang/rust/commit/d2731d8e9338d8fe844e19d3fbb39617753e65f4"}, {"sha": "57de468ff98387a998afe089b77466ee50733c27", "url": "https://api.github.com/repos/rust-lang/rust/commits/57de468ff98387a998afe089b77466ee50733c27", "html_url": "https://github.com/rust-lang/rust/commit/57de468ff98387a998afe089b77466ee50733c27"}], "stats": {"total": 158, "additions": 155, "deletions": 3}, "files": [{"sha": "cc6b2ff5fd46ec190de893489297c94d03259162", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09db05762b283bed62d4f92729cfee4646519833/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db05762b283bed62d4f92729cfee4646519833/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=09db05762b283bed62d4f92729cfee4646519833", "patch": "@@ -42,6 +42,7 @@ pub mod no_landing_pads;\n pub mod nrvo;\n pub mod promote_consts;\n pub mod remove_noop_landing_pads;\n+pub mod remove_storage_markers;\n pub mod remove_unneeded_drops;\n pub mod required_consts;\n pub mod rustc_peek;\n@@ -493,6 +494,7 @@ fn run_optimization_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n \n     // The main optimizations that we do on MIR.\n     let optimizations: &[&dyn MirPass<'tcx>] = &[\n+        &remove_storage_markers::RemoveStorageMarkers,\n         &const_goto::ConstGoto,\n         &remove_unneeded_drops::RemoveUnneededDrops,\n         &match_branches::MatchBranchSimplification,"}, {"sha": "2d529feb072f952945754c66c21fa2863cf7f6d6", "filename": "compiler/rustc_mir/src/transform/remove_storage_markers.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/09db05762b283bed62d4f92729cfee4646519833/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_storage_markers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db05762b283bed62d4f92729cfee4646519833/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_storage_markers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_storage_markers.rs?ref=09db05762b283bed62d4f92729cfee4646519833", "patch": "@@ -0,0 +1,25 @@\n+//! This pass removes storage markers if they won't be emitted during codegen.\n+\n+use crate::transform::MirPass;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n+\n+pub struct RemoveStorageMarkers;\n+\n+impl<'tcx> MirPass<'tcx> for RemoveStorageMarkers {\n+    fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        if tcx.sess.emit_lifetime_markers() {\n+            return;\n+        }\n+\n+        trace!(\"Running RemoveStorageMarkers on {:?}\", body.source);\n+        for data in body.basic_blocks_mut() {\n+            data.statements.retain(|statement| match statement.kind {\n+                StatementKind::StorageLive(..)\n+                | StatementKind::StorageDead(..)\n+                | StatementKind::Nop => false,\n+                _ => true,\n+            })\n+        }\n+    }\n+}"}, {"sha": "d51bd575719d49a261910a50093dfc50e85f2faa", "filename": "src/test/codegen/try_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ftry_identity.rs?ref=09db05762b283bed62d4f92729cfee4646519833", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -C no-prepopulate-passes -Z mir-opt-level=2 -Zunsound-mir-opts\n+// compile-flags: -C no-prepopulate-passes -O -Z mir-opt-level=2 -Zunsound-mir-opts\n \n // Ensure that `x?` has no overhead on `Result<T, E>` due to identity `match`es in lowering.\n // This requires inlining to trigger the MIR optimizations in `SimplifyArmIdentity`."}, {"sha": "dd8a92510424614fc99a90db3b6f86220a6ca5c5", "filename": "src/test/mir-opt/remove_storage_markers.main.RemoveStorageMarkers.diff", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "raw_url": "https://github.com/rust-lang/rust/raw/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff?ref=09db05762b283bed62d4f92729cfee4646519833", "patch": "@@ -0,0 +1,115 @@\n+- // MIR for `main` before RemoveStorageMarkers\n++ // MIR for `main` after RemoveStorageMarkers\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/remove_storage_markers.rs:6:11: 6:11\n+      let mut _1: i32;                     // in scope 0 at $DIR/remove_storage_markers.rs:7:9: 7:16\n+      let mut _2: std::ops::Range<i32>;    // in scope 0 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+      let mut _3: std::ops::Range<i32>;    // in scope 0 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+      let mut _5: ();                      // in scope 0 at $DIR/remove_storage_markers.rs:6:1: 11:2\n+      let _7: ();                          // in scope 0 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+      let mut _8: std::option::Option<i32>; // in scope 0 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+      let mut _9: &mut std::ops::Range<i32>; // in scope 0 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+      let mut _10: &mut std::ops::Range<i32>; // in scope 0 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+      let mut _11: isize;                  // in scope 0 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+      let mut _13: i32;                    // in scope 0 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+      let mut _14: !;                      // in scope 0 at $DIR/remove_storage_markers.rs:8:5: 10:6\n+      let _16: ();                         // in scope 0 at $DIR/remove_storage_markers.rs:8:20: 10:6\n+      let mut _17: i32;                    // in scope 0 at $DIR/remove_storage_markers.rs:9:16: 9:17\n+      scope 1 {\n+          debug sum => _1;                 // in scope 1 at $DIR/remove_storage_markers.rs:7:9: 7:16\n+          let mut _4: std::ops::Range<i32>; // in scope 1 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          scope 2 {\n+              debug iter => _4;            // in scope 2 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+              let mut _6: i32;             // in scope 2 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+              scope 3 {\n+                  debug __next => _6;      // in scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+                  let _12: i32;            // in scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+                  let _15: i32;            // in scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+                  scope 4 {\n+                      debug val => _12;    // in scope 4 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+                  }\n+                  scope 5 {\n+                      debug i => _15;      // in scope 5 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+                  }\n+              }\n+          }\n+          scope 6 (inlined <std::ops::Range<i32> as IntoIterator>::into_iter) { // at $DIR/remove_storage_markers.rs:8:14: 8:19\n+              debug self => _3;            // in scope 6 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          }\n+      }\n+  \n+      bb0: {\n+-         StorageLive(_1);                 // scope 0 at $DIR/remove_storage_markers.rs:7:9: 7:16\n+          _1 = const 0_i32;                // scope 0 at $DIR/remove_storage_markers.rs:7:19: 7:20\n+-         StorageLive(_2);                 // scope 1 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageLive(_3);                 // scope 1 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          (_3.0: i32) = const 0_i32;       // scope 1 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          (_3.1: i32) = const 10_i32;      // scope 1 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          _2 = move _3;                    // scope 6 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageDead(_3);                 // scope 1 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageLive(_4);                 // scope 1 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          _4 = move _2;                    // scope 1 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          goto -> bb1;                     // scope 2 at $DIR/remove_storage_markers.rs:8:5: 10:6\n+      }\n+  \n+      bb1: {\n+-         StorageLive(_6);                 // scope 2 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageLive(_7);                 // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageLive(_8);                 // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageLive(_9);                 // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageLive(_10);                // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          _10 = &mut _4;                   // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          _9 = &mut (*_10);                // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+          _8 = <std::ops::Range<i32> as Iterator>::next(move _9) -> bb2; // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+                                           // mir::Constant\n+                                           // + span: $DIR/remove_storage_markers.rs:8:14: 8:19\n+                                           // + literal: Const { ty: for<'r> fn(&'r mut std::ops::Range<i32>) -> std::option::Option<<std::ops::Range<i32> as std::iter::Iterator>::Item> {<std::ops::Range<i32> as std::iter::Iterator>::next}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb2: {\n+-         StorageDead(_9);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+          _11 = discriminant(_8);          // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+          switchInt(move _11) -> [0_isize: bb3, otherwise: bb4]; // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+      }\n+  \n+      bb3: {\n+          _0 = const ();                   // scope 3 at $DIR/remove_storage_markers.rs:8:5: 10:6\n+-         StorageDead(_10);                // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageDead(_8);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageDead(_7);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageDead(_6);                 // scope 2 at $DIR/remove_storage_markers.rs:10:5: 10:6\n+-         StorageDead(_4);                 // scope 1 at $DIR/remove_storage_markers.rs:10:5: 10:6\n+-         StorageDead(_2);                 // scope 1 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageDead(_1);                 // scope 0 at $DIR/remove_storage_markers.rs:11:1: 11:2\n+          return;                          // scope 0 at $DIR/remove_storage_markers.rs:11:2: 11:2\n+      }\n+  \n+      bb4: {\n+-         StorageLive(_12);                // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+          _12 = ((_8 as Some).0: i32);     // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+-         StorageLive(_13);                // scope 4 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+          _13 = _12;                       // scope 4 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+          _6 = move _13;                   // scope 4 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+          _7 = const ();                   // scope 4 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+-         StorageDead(_13);                // scope 4 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+-         StorageDead(_12);                // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+-         StorageDead(_10);                // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageDead(_8);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageDead(_7);                 // scope 3 at $DIR/remove_storage_markers.rs:8:18: 8:19\n+-         StorageLive(_15);                // scope 3 at $DIR/remove_storage_markers.rs:8:9: 8:10\n+          _15 = _6;                        // scope 3 at $DIR/remove_storage_markers.rs:8:14: 8:19\n+-         StorageLive(_16);                // scope 5 at $DIR/remove_storage_markers.rs:8:20: 10:6\n+-         StorageLive(_17);                // scope 5 at $DIR/remove_storage_markers.rs:9:16: 9:17\n+          _17 = _15;                       // scope 5 at $DIR/remove_storage_markers.rs:9:16: 9:17\n+          _1 = Add(_1, move _17);          // scope 5 at $DIR/remove_storage_markers.rs:9:9: 9:17\n+-         StorageDead(_17);                // scope 5 at $DIR/remove_storage_markers.rs:9:16: 9:17\n+          _16 = const ();                  // scope 5 at $DIR/remove_storage_markers.rs:8:20: 10:6\n+-         StorageDead(_16);                // scope 5 at $DIR/remove_storage_markers.rs:10:5: 10:6\n+          _5 = const ();                   // scope 2 at $DIR/remove_storage_markers.rs:8:5: 10:6\n+-         StorageDead(_15);                // scope 3 at $DIR/remove_storage_markers.rs:10:5: 10:6\n+-         StorageDead(_6);                 // scope 2 at $DIR/remove_storage_markers.rs:10:5: 10:6\n+          goto -> bb1;                     // scope 2 at $DIR/remove_storage_markers.rs:8:5: 10:6\n+      }\n+  }\n+  "}, {"sha": "c144d3ff7950815b1e668ef5cf3ae0c54f796fa1", "filename": "src/test/mir-opt/remove_storage_markers.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.rs?ref=09db05762b283bed62d4f92729cfee4646519833", "patch": "@@ -0,0 +1,11 @@\n+// Checks that storage markers are removed at opt-level=0.\n+//\n+// compile-flags: -C opt-level=0 -Coverflow-checks=off\n+\n+// EMIT_MIR remove_storage_markers.main.RemoveStorageMarkers.diff\n+fn main() {\n+    let mut sum = 0;\n+    for i in 0..10 {\n+        sum += i;\n+    }\n+}"}, {"sha": "45d018cf305c615d1dbc372f40bb15c6d66a03bf", "filename": "src/test/run-make/const_fn_mir/dump.mir", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "raw_url": "https://github.com/rust-lang/rust/raw/09db05762b283bed62d4f92729cfee4646519833/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir?ref=09db05762b283bed62d4f92729cfee4646519833", "patch": "@@ -5,15 +5,13 @@ fn main() -> () {\n     let _1: i32;                         // in scope 0 at main.rs:9:5: 9:10\n \n     bb0: {\n-        StorageLive(_1);                 // scope 0 at main.rs:9:5: 9:10\n         _1 = foo() -> bb1;               // scope 0 at main.rs:9:5: 9:10\n                                          // mir::Constant\n                                          // + span: main.rs:9:5: 9:8\n                                          // + literal: Const { ty: fn() -> i32 {foo}, val: Value(Scalar(<ZST>)) }\n     }\n \n     bb1: {\n-        StorageDead(_1);                 // scope 0 at main.rs:9:10: 9:11\n         _0 = const ();                   // scope 0 at main.rs:8:11: 10:2\n         return;                          // scope 0 at main.rs:10:2: 10:2\n     }"}, {"sha": "723c7f8683219e02cef95403cd08d56ffb05ab28", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09db05762b283bed62d4f92729cfee4646519833/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db05762b283bed62d4f92729cfee4646519833/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=09db05762b283bed62d4f92729cfee4646519833", "patch": "@@ -1957,6 +1957,7 @@ impl<'test> TestCx<'test> {\n             }\n             MirOpt => {\n                 rustc.args(&[\n+                    \"-Copt-level=1\",\n                     \"-Zdump-mir=all\",\n                     \"-Zmir-opt-level=3\",\n                     \"-Zvalidate-mir\","}]}