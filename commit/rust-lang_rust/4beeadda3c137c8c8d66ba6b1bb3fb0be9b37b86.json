{"sha": "4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZWVhZGRhM2MxMzdjOGM4ZDY2YmE2YjFiYjNmYjBiZTliMzdiODY=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-12-31T13:27:20Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-01-10T23:33:27Z"}, "message": "Fix a deadlock", "tree": {"sha": "0c57da4a4683bc35d96f2b56cad3c392f1997f05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c57da4a4683bc35d96f2b56cad3c392f1997f05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86", "html_url": "https://github.com/rust-lang/rust/commit/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ce14479c5297521edfe70c8e4ef7c6d1a83536", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ce14479c5297521edfe70c8e4ef7c6d1a83536", "html_url": "https://github.com/rust-lang/rust/commit/f3ce14479c5297521edfe70c8e4ef7c6d1a83536"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "422a1ccd9b574da6bab3e15ad826d558e4ab1388", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86", "patch": "@@ -194,7 +194,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, DefIdMap, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_index::bit_set::GrowableBitSet;\n-\n+use smallvec::SmallVec;\n use std::iter;\n \n #[derive(PartialEq)]\n@@ -227,9 +227,7 @@ impl<'tcx> InliningMap<'tcx> {\n         }\n     }\n \n-    fn record_accesses<I>(&mut self, source: MonoItem<'tcx>, new_targets: I)\n-    where\n-        I: Iterator<Item = (MonoItem<'tcx>, bool)> + ExactSizeIterator,\n+    fn record_accesses(&mut self, source: MonoItem<'tcx>, new_targets: &[(MonoItem<'tcx>, bool)])\n     {\n         assert!(!self.index.contains_key(&source));\n \n@@ -240,9 +238,9 @@ impl<'tcx> InliningMap<'tcx> {\n         self.targets.reserve(new_items_count);\n         self.inlines.ensure(new_items_count_total);\n \n-        for (i, (target, inline)) in new_targets.enumerate() {\n-            self.targets.push(target);\n-            if inline {\n+        for (i, (target, inline)) in new_targets.iter().enumerate() {\n+            self.targets.push(*target);\n+            if *inline {\n                 self.inlines.insert(i + start_index);\n             }\n         }\n@@ -403,10 +401,12 @@ fn record_accesses<'tcx>(\n         mono_item.instantiation_mode(tcx) == InstantiationMode::LocalCopy\n     };\n \n-    let accesses =\n-        callees.into_iter().map(|mono_item| (*mono_item, is_inlining_candidate(mono_item)));\n+    let accesses: SmallVec<[_; 128]> = callees\n+        .into_iter()\n+        .map(|mono_item| (*mono_item, is_inlining_candidate(mono_item)))\n+        .collect();\n \n-    inlining_map.lock_mut().record_accesses(caller, accesses);\n+    inlining_map.lock_mut().record_accesses(caller, &accesses);\n }\n \n fn check_recursion_limit<'tcx>("}]}