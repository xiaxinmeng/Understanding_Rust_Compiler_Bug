{"sha": "c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNGMwMTVmZTI3MTBjYWY1M2JhN2FlOWQxNjQ0ZjliYTY1YTZmNzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-24T07:32:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-24T07:32:19Z"}, "message": "Auto merge of #77692 - PankajChaudhary5:issue-76630, r=davidtwco\n\nAdded better error message for shared borrow treated as unique for purposes of lifetimes\n\nPart of Issue #76630\n\nr? `@jyn514`", "tree": {"sha": "70c530d9f45f8418c78a96c0714bbecc19f03fd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c530d9f45f8418c78a96c0714bbecc19f03fd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "html_url": "https://github.com/rust-lang/rust/commit/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b104fc1bdd5b35891614ad9163ebef31442cc0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b104fc1bdd5b35891614ad9163ebef31442cc0c", "html_url": "https://github.com/rust-lang/rust/commit/5b104fc1bdd5b35891614ad9163ebef31442cc0c"}, {"sha": "50d9b30a3751388e629d246ad4428c3f3f8d2567", "url": "https://api.github.com/repos/rust-lang/rust/commits/50d9b30a3751388e629d246ad4428c3f3f8d2567", "html_url": "https://github.com/rust-lang/rust/commit/50d9b30a3751388e629d246ad4428c3f3f8d2567"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "56d8045813c425c2d7cb67a8cbdf8eec88d6b549", "filename": "compiler/rustc_mir/src/util/borrowck_errors.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/compiler%2Frustc_mir%2Fsrc%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/compiler%2Frustc_mir%2Fsrc%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fborrowck_errors.rs?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -68,9 +68,10 @@ impl<'cx, 'tcx> crate::borrow_check::MirBorrowckCtxt<'cx, 'tcx> {\n             err.span_label(\n                 new_loan_span,\n                 format!(\n-                    \"mutable borrow starts here in previous \\\n-                     iteration of loop{}\",\n-                    opt_via\n+                    \"{}{} was mutably borrowed here in the previous iteration of the loop{}\",\n+                    desc,\n+                    via(opt_via),\n+                    opt_via,\n                 ),\n             );\n             if let Some(old_load_end_span) = old_load_end_span {"}, {"sha": "a4090777939029b5b725667642285ed116a04e48", "filename": "src/test/ui/borrowck/borrowck-mut-borrow-linear-errors.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mut-borrow-linear-errors.stderr?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -23,7 +23,7 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n   --> $DIR/borrowck-mut-borrow-linear-errors.rs:12:30\n    |\n LL |             _ => { addr.push(&mut x); }\n-   |                              ^^^^^^ mutable borrow starts here in previous iteration of loop\n+   |                              ^^^^^^ `x` was mutably borrowed here in the previous iteration of the loop\n \n error: aborting due to 3 previous errors\n "}, {"sha": "b621694a548cfa3619b3e21dbc7766f924a67465", "filename": "src/test/ui/borrowck/mut-borrow-in-loop.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop.stderr?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -15,7 +15,7 @@ LL | impl<'a, T : 'a> FuncWrapper<'a, T> {\n LL |             (self.func)(arg)\n    |             ------------^^^-\n    |             |           |\n-   |             |           mutable borrow starts here in previous iteration of loop\n+   |             |           `*arg` was mutably borrowed here in the previous iteration of the loop\n    |             argument requires that `*arg` is borrowed for `'a`\n \n error[E0499]: cannot borrow `*arg` as mutable more than once at a time\n@@ -27,7 +27,7 @@ LL | impl<'a, T : 'a> FuncWrapper<'a, T> {\n LL |             (self.func)(arg)\n    |             ------------^^^-\n    |             |           |\n-   |             |           mutable borrow starts here in previous iteration of loop\n+   |             |           `*arg` was mutably borrowed here in the previous iteration of the loop\n    |             argument requires that `*arg` is borrowed for `'a`\n \n error[E0499]: cannot borrow `*arg` as mutable more than once at a time\n@@ -39,7 +39,7 @@ LL | impl<'a, T : 'a> FuncWrapper<'a, T> {\n LL |             (self.func)(arg)\n    |             ------------^^^-\n    |             |           |\n-   |             |           mutable borrow starts here in previous iteration of loop\n+   |             |           `*arg` was mutably borrowed here in the previous iteration of the loop\n    |             argument requires that `*arg` is borrowed for `'a`\n \n error: aborting due to 3 previous errors; 1 warning emitted"}, {"sha": "d4e515d12bbb5d563898fbbe6b5781ca77a574d7", "filename": "src/test/ui/borrowck/two-phase-across-loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-across-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-across-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-across-loop.stderr?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -2,7 +2,7 @@ error[E0499]: cannot borrow `foo` as mutable more than once at a time\n   --> $DIR/two-phase-across-loop.rs:17:22\n    |\n LL |         strings.push(foo.get_string());\n-   |                      ^^^ mutable borrow starts here in previous iteration of loop\n+   |                      ^^^ `foo` was mutably borrowed here in the previous iteration of the loop\n \n error: aborting due to previous error\n "}, {"sha": "2f134f83ced193ff188cdca97145dc8ad10830cc", "filename": "src/test/ui/nll/closures-in-loops.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosures-in-loops.stderr?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -15,7 +15,7 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n LL |         v.push(|| x = String::new());\n    |                ^^ - borrows occur due to use of `x` in closure\n    |                |\n-   |                mutable borrow starts here in previous iteration of loop\n+   |                `x` was mutably borrowed here in the previous iteration of the loop\n \n error[E0524]: two closures require unique access to `x` at the same time\n   --> $DIR/closures-in-loops.rs:20:16"}, {"sha": "0db9fe62c3869d409c76cdb697b8b5015d35cff1", "filename": "src/test/ui/nll/issue-62007-assign-const-index.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fissue-62007-assign-const-index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fissue-62007-assign-const-index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-62007-assign-const-index.stderr?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -5,7 +5,7 @@ LL | fn to_refs<T>(mut list: [&mut List<T>; 2]) -> Vec<&mut T> {\n    |                          - let's call the lifetime of this reference `'1`\n ...\n LL |         result.push(&mut list[0].value);\n-   |                     ^^^^^^^^^^^^^^^^^^ mutable borrow starts here in previous iteration of loop\n+   |                     ^^^^^^^^^^^^^^^^^^ `list[_].value` was mutably borrowed here in the previous iteration of the loop\n ...\n LL |             return result;\n    |                    ------ returning this value requires that `list[_].value` is borrowed for `'1`\n@@ -19,7 +19,7 @@ LL | fn to_refs<T>(mut list: [&mut List<T>; 2]) -> Vec<&mut T> {\n LL |         if let Some(n) = list[0].next.as_mut() {\n    |                          ^^^^^^^^^^^^---------\n    |                          |\n-   |                          mutable borrow starts here in previous iteration of loop\n+   |                          `list[_].next` was mutably borrowed here in the previous iteration of the loop\n    |                          argument requires that `list[_].next` is borrowed for `'1`\n \n error: aborting due to 2 previous errors"}, {"sha": "f1af2e855afe6c5fd501fc7054d496a579c3bdd6", "filename": "src/test/ui/nll/issue-62007-assign-differing-fields.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fissue-62007-assign-differing-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fissue-62007-assign-differing-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-62007-assign-differing-fields.stderr?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -5,7 +5,7 @@ LL | fn to_refs<'a, T>(mut list: (&'a mut List<T>, &'a mut List<T>)) -> Vec<&'a\n    |            -- lifetime `'a` defined here\n ...\n LL |         result.push(&mut (list.0).value);\n-   |                     ^^^^^^^^^^^^^^^^^^^ mutable borrow starts here in previous iteration of loop\n+   |                     ^^^^^^^^^^^^^^^^^^^ `list.0.value` was mutably borrowed here in the previous iteration of the loop\n ...\n LL |             return result;\n    |                    ------ returning this value requires that `list.0.value` is borrowed for `'a`\n@@ -19,7 +19,7 @@ LL | fn to_refs<'a, T>(mut list: (&'a mut List<T>, &'a mut List<T>)) -> Vec<&'a\n LL |         if let Some(n) = (list.0).next.as_mut() {\n    |                          ^^^^^^^^^^^^^---------\n    |                          |\n-   |                          mutable borrow starts here in previous iteration of loop\n+   |                          `list.0.next` was mutably borrowed here in the previous iteration of the loop\n    |                          argument requires that `list.0.next` is borrowed for `'a`\n \n error: aborting due to 2 previous errors"}, {"sha": "2fe6a53a49aefc47ad35a4c1b4f33191f3cba393", "filename": "src/test/ui/nll/polonius/assignment-to-differing-field.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fpolonius%2Fassignment-to-differing-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74/src%2Ftest%2Fui%2Fnll%2Fpolonius%2Fassignment-to-differing-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fpolonius%2Fassignment-to-differing-field.stderr?ref=c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "patch": "@@ -5,7 +5,7 @@ LL | fn assignment_to_field_projection<'a, T>(\n    |                                   -- lifetime `'a` defined here\n ...\n LL |         result.push(&mut (list.0).value);\n-   |                     ^^^^^^^^^^^^^^^^^^^ mutable borrow starts here in previous iteration of loop\n+   |                     ^^^^^^^^^^^^^^^^^^^ `list.0.value` was mutably borrowed here in the previous iteration of the loop\n ...\n LL |             return result;\n    |                    ------ returning this value requires that `list.0.value` is borrowed for `'a`\n@@ -19,7 +19,7 @@ LL | fn assignment_to_field_projection<'a, T>(\n LL |         if let Some(n) = (list.0).next.as_mut() {\n    |                          ^^^^^^^^^^^^^---------\n    |                          |\n-   |                          mutable borrow starts here in previous iteration of loop\n+   |                          `list.0.next` was mutably borrowed here in the previous iteration of the loop\n    |                          argument requires that `list.0.next` is borrowed for `'a`\n \n error[E0499]: cannot borrow `list.0.0.0.0.0.value` as mutable more than once at a time\n@@ -29,7 +29,7 @@ LL | fn assignment_through_projection_chain<'a, T>(\n    |                                        -- lifetime `'a` defined here\n ...\n LL |         result.push(&mut ((((list.0).0).0).0).0.value);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow starts here in previous iteration of loop\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `list.0.0.0.0.0.value` was mutably borrowed here in the previous iteration of the loop\n ...\n LL |             return result;\n    |                    ------ returning this value requires that `list.0.0.0.0.0.value` is borrowed for `'a`\n@@ -43,7 +43,7 @@ LL | fn assignment_through_projection_chain<'a, T>(\n LL |         if let Some(n) = ((((list.0).0).0).0).0.next.as_mut() {\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^---------\n    |                          |\n-   |                          mutable borrow starts here in previous iteration of loop\n+   |                          `list.0.0.0.0.0.next` was mutably borrowed here in the previous iteration of the loop\n    |                          argument requires that `list.0.0.0.0.0.next` is borrowed for `'a`\n \n error: aborting due to 4 previous errors"}]}