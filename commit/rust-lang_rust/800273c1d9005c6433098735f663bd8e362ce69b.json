{"sha": "800273c1d9005c6433098735f663bd8e362ce69b", "node_id": "C_kwDOAAsO6NoAKDgwMDI3M2MxZDkwMDVjNjQzMzA5ODczNWY2NjNiZDhlMzYyY2U2OWI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-21T13:14:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-21T13:20:46Z"}, "message": "cargo-miri: set RUSTC to us", "tree": {"sha": "ace356245b7e59fa2ba44870fa575c476712b460", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ace356245b7e59fa2ba44870fa575c476712b460"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/800273c1d9005c6433098735f663bd8e362ce69b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/800273c1d9005c6433098735f663bd8e362ce69b", "html_url": "https://github.com/rust-lang/rust/commit/800273c1d9005c6433098735f663bd8e362ce69b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/800273c1d9005c6433098735f663bd8e362ce69b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3800933ff00dec0086e379856eb4adac8f890a47", "url": "https://api.github.com/repos/rust-lang/rust/commits/3800933ff00dec0086e379856eb4adac8f890a47", "html_url": "https://github.com/rust-lang/rust/commit/3800933ff00dec0086e379856eb4adac8f890a47"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "d2c772d7d9220b793d8cc96bbab234fc1256bdff", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/800273c1d9005c6433098735f663bd8e362ce69b/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/800273c1d9005c6433098735f663bd8e362ce69b/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=800273c1d9005c6433098735f663bd8e362ce69b", "patch": "@@ -661,14 +661,17 @@ fn phase_cargo_miri(mut args: env::Args) {\n         );\n     }\n     cmd.env(\"RUSTC_WRAPPER\", &cargo_miri_path);\n-    // Having both `RUSTC_WRAPPER` and `RUSTC` set does some odd things, so let's avoid that.\n-    // See <https://github.com/rust-lang/miri/issues/2238>.\n+    // We are going to invoke `MIRI` for everything, not `RUSTC`.\n     if env::var_os(\"RUSTC\").is_some() && env::var_os(\"MIRI\").is_none() {\n         println!(\n             \"WARNING: Ignoring `RUSTC` environment variable; set `MIRI` if you want to control the binary used as the driver.\"\n         );\n     }\n-    cmd.env_remove(\"RUSTC\");\n+    // We'd prefer to just clear this env var, but cargo does not always honor `RUSTC_WRAPPER`\n+    // (https://github.com/rust-lang/cargo/issues/10885). There is no good way to single out these invocations;\n+    // some build scripts use the RUSTC env var as well. So we set it directly to the `miri` driver and\n+    // hope that all they do is ask for the version number -- things could quickly go downhill from here.\n+    cmd.env(\"RUSTC\", &find_miri());\n \n     let runner_env_name =\n         |triple: &str| format!(\"CARGO_TARGET_{}_RUNNER\", triple.to_uppercase().replace('-', \"_\"));\n@@ -1173,8 +1176,14 @@ fn main() {\n \n     match args.next().as_deref() {\n         Some(\"miri\") => phase_cargo_miri(args),\n-        Some(\"rustc\") => phase_rustc(args, RustcPhase::Build),\n         Some(arg) => {\n+            // If the first arg is equal to the RUSTC variable (which should be set at this point),\n+            // then we need to behave as rustc. This is the somewhat counter-intuitive behavior of\n+            // having both RUSTC and RUSTC_WRAPPER set (see\n+            // https://github.com/rust-lang/cargo/issues/10886).\n+            if arg == env::var_os(\"RUSTC\").unwrap() {\n+                return phase_rustc(args, RustcPhase::Build);\n+            }\n             // We have to distinguish the \"runner\" and \"rustdoc\" cases.\n             // As runner, the first argument is the binary (a file that should exist, with an absolute path);\n             // as rustdoc, the first argument is a flag (`--something`)."}]}