{"sha": "6c890bb9697c0971e70e1eba495b666516ecece6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjODkwYmI5Njk3YzA5NzFlNzBlMWViYTQ5NWI2NjY1MTZlY2VjZTY=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-06-14T15:30:12Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-06-27T10:05:17Z"}, "message": "Revert \"Revert tests added by PR 81167.\"\n\nThis reverts commit cebfcd3256a6ec8655f0d9f45426d6f42a92da9c.", "tree": {"sha": "c32953c9a3beea5e564363c694f4b985d03e1991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c32953c9a3beea5e564363c694f4b985d03e1991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c890bb9697c0971e70e1eba495b666516ecece6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEeQ9lb2ZjsXFBDRuFH1AezRu9cKcFAmDYTV0ACgkQH1AezRu9\ncKeYIA/+MRcrzxhJru4KuRY5qztYM5LNxkmBpf8vKs1+d2ZMQpD/wuZ2hP3rODjs\nhKSC2ArZ0X31pEZ9WUTFq1l8AlmrvAtsUIiF/Jcjlsk93mGVn9HwvZ2XWt6TqzxH\n36nHhhFiBRv9H3+2eXmQkXLqeoiNL1b9mXv98GqtzI5BsG/HtJMyMElXjjzI9mak\n0Z2pY0i7o3m7rCxM/NlY19e7YNZEa77HuHNwZOuoMUENrvvYMxi+krFXsOh7bE1S\niXxeR3Se2/M6nGH8OIMyUbvC9z22WcrsZncb6CbRAKjPWqpJg+0/zJizI4AcLkZI\nh8Jzs+fK6WGmB/lS/znOjGvzaE7USu8MlTBv+BENnIN28Iq1xOzvOHgz0DRfTqkx\nG8jtUYejZb7Rp7T2RdFHXe8eHwfL7/cAN+WgJ84T6WxyLHW6SbLHjEgwzQAel/7k\nbULyk1ZakWdjtKZXOG598jpRd/Q9poS7xFI+Yj0IrwMzHWUT4724o7kxCFb4dSpA\nqGCfK6lKMG20vUJ4H/7y0EIOV9SehNC334cLNSIn7Ab7mCGzZ9sgxFibFwQLaSOI\nomfKBXsK5cgAL9/cekv4s0CpFmawEv1h74Lt8bN1q2UI3jCBFz0ojNDTfMgYrfdp\nJR7/ATe3scEU99rupjr4elvCBv+/l6ih1SrJojbQhzx+8O+IaWk=\n=qn5v\n-----END PGP SIGNATURE-----", "payload": "tree c32953c9a3beea5e564363c694f4b985d03e1991\nparent 5fbb1354ce9c88c689cd11e127755f0cd3cf96af\nauthor Albin Hedman <albin9604@gmail.com> 1623684612 +0200\ncommitter Albin Hedman <albin9604@gmail.com> 1624788317 +0200\n\nRevert \"Revert tests added by PR 81167.\"\n\nThis reverts commit cebfcd3256a6ec8655f0d9f45426d6f42a92da9c.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c890bb9697c0971e70e1eba495b666516ecece6", "html_url": "https://github.com/rust-lang/rust/commit/6c890bb9697c0971e70e1eba495b666516ecece6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c890bb9697c0971e70e1eba495b666516ecece6/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fbb1354ce9c88c689cd11e127755f0cd3cf96af", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fbb1354ce9c88c689cd11e127755f0cd3cf96af", "html_url": "https://github.com/rust-lang/rust/commit/5fbb1354ce9c88c689cd11e127755f0cd3cf96af"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "152fed803ecdb751167ccbb31a3155958920523a", "filename": "library/core/tests/const_ptr.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/6c890bb9697c0971e70e1eba495b666516ecece6/library%2Fcore%2Ftests%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c890bb9697c0971e70e1eba495b666516ecece6/library%2Fcore%2Ftests%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fconst_ptr.rs?ref=6c890bb9697c0971e70e1eba495b666516ecece6", "patch": "@@ -49,3 +49,53 @@ fn mut_ptr_read() {\n     const UNALIGNED: u16 = unsafe { UNALIGNED_PTR.read_unaligned() };\n     assert_eq!(UNALIGNED, u16::from_ne_bytes([0x23, 0x45]));\n }\n+\n+#[test]\n+fn write() {\n+    use core::ptr;\n+\n+    const fn write_aligned() -> i32 {\n+        let mut res = 0;\n+        unsafe {\n+            ptr::write(&mut res as *mut _, 42);\n+        }\n+        res\n+    }\n+    const ALIGNED: i32 = write_aligned();\n+    assert_eq!(ALIGNED, 42);\n+\n+    const fn write_unaligned() -> [u16; 2] {\n+        let mut two_aligned = [0u16; 2];\n+        unsafe {\n+            let unaligned_ptr = (two_aligned.as_mut_ptr() as *mut u8).add(1) as *mut u16;\n+            ptr::write_unaligned(unaligned_ptr, u16::from_ne_bytes([0x23, 0x45]));\n+        }\n+        two_aligned\n+    }\n+    const UNALIGNED: [u16; 2] = write_unaligned();\n+    assert_eq!(UNALIGNED, [u16::from_ne_bytes([0x00, 0x23]), u16::from_ne_bytes([0x45, 0x00])]);\n+}\n+\n+#[test]\n+fn mut_ptr_write() {\n+    const fn aligned() -> i32 {\n+        let mut res = 0;\n+        unsafe {\n+            (&mut res as *mut i32).write(42);\n+        }\n+        res\n+    }\n+    const ALIGNED: i32 = aligned();\n+    assert_eq!(ALIGNED, 42);\n+\n+    const fn write_unaligned() -> [u16; 2] {\n+        let mut two_aligned = [0u16; 2];\n+        unsafe {\n+            let unaligned_ptr = (two_aligned.as_mut_ptr() as *mut u8).add(1) as *mut u16;\n+            unaligned_ptr.write_unaligned(u16::from_ne_bytes([0x23, 0x45]));\n+        }\n+        two_aligned\n+    }\n+    const UNALIGNED: [u16; 2] = write_unaligned();\n+    assert_eq!(UNALIGNED, [u16::from_ne_bytes([0x00, 0x23]), u16::from_ne_bytes([0x45, 0x00])]);\n+}"}]}