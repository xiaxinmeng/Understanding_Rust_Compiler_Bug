{"sha": "3aeac24048cb4947444980c69625cc4a4a116d18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZWFjMjQwNDhjYjQ5NDc0NDQ5ODBjNjk2MjVjYzRhNGExMTZkMTg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-18T22:24:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-18T22:24:38Z"}, "message": "Rollup merge of #55867 - RalfJung:dont-panic, r=Mark-Simulacrum\n\ndo not panic just because cargo failed\n\nCurrently, a rustc ICE during bootstrap shows *two* backtraces with `RUST_BACKTRACE`. Fix that by making bootstrap just exit when cargo fails. This matches what we do [when building a tool fails](https://github.com/rust-lang/rust/blob/master/src/bootstrap/tool.rs#L189) and [when other stuff (not called through `stream_cargo`, like `cargo test`) fails](https://github.com/rust-lang/rust/blob/master/src/build_helper/lib.rs#L43).\n\nFixes https://github.com/rust-lang/rust/issues/53379", "tree": {"sha": "67a73211bb3851d6d919691f2630fa78d4799602", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67a73211bb3851d6d919691f2630fa78d4799602"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aeac24048cb4947444980c69625cc4a4a116d18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb8eamCRBK7hj4Ov3rIwAAdHIIAEL/+7dsI+IouHeRI5LIl7C1\nRInV1Vxx41e6ep0EgPxVCQwTMdaOdbjv2tKeGAv6IPk7vfAvtFuYhkVqWy21J1Np\nROO8MaGwCObjS0yZKbOkDBjadsTOxsftl3HRXaAxl4/HdvwhYCx+9TAVvunxlXZq\ni2wfEWyR1mLkxIWwM+zdkggkfT+XLqyHSmc4HGqfQEDlBxp1KDVByHt5cRwowxJk\n3jtRH/WlZWdQNT+lxwlHCWR1uReLB+NFNxPPgIhiSJ1s7L/OmlCAw0sFQz1R9ycK\nDacRHep8ASPp0QZQa1Wy/RTeW54GSca/XqKoLuFMwjcH684YinWhVpRE6Bogd84=\n=SjiS\n-----END PGP SIGNATURE-----\n", "payload": "tree 67a73211bb3851d6d919691f2630fa78d4799602\nparent 9577734ff360235894db2904503a4d515dc89a29\nparent b7c319c56ae8380aa2ab03d2b9b6702ae43d49b3\nauthor Pietro Albini <pietro@pietroalbini.org> 1542579878 +0100\ncommitter GitHub <noreply@github.com> 1542579878 +0100\n\nRollup merge of #55867 - RalfJung:dont-panic, r=Mark-Simulacrum\n\ndo not panic just because cargo failed\n\nCurrently, a rustc ICE during bootstrap shows *two* backtraces with `RUST_BACKTRACE`. Fix that by making bootstrap just exit when cargo fails. This matches what we do [when building a tool fails](https://github.com/rust-lang/rust/blob/master/src/bootstrap/tool.rs#L189) and [when other stuff (not called through `stream_cargo`, like `cargo test`) fails](https://github.com/rust-lang/rust/blob/master/src/build_helper/lib.rs#L43).\n\nFixes https://github.com/rust-lang/rust/issues/53379\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aeac24048cb4947444980c69625cc4a4a116d18", "html_url": "https://github.com/rust-lang/rust/commit/3aeac24048cb4947444980c69625cc4a4a116d18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aeac24048cb4947444980c69625cc4a4a116d18/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9577734ff360235894db2904503a4d515dc89a29", "url": "https://api.github.com/repos/rust-lang/rust/commits/9577734ff360235894db2904503a4d515dc89a29", "html_url": "https://github.com/rust-lang/rust/commit/9577734ff360235894db2904503a4d515dc89a29"}, {"sha": "b7c319c56ae8380aa2ab03d2b9b6702ae43d49b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c319c56ae8380aa2ab03d2b9b6702ae43d49b3", "html_url": "https://github.com/rust-lang/rust/commit/b7c319c56ae8380aa2ab03d2b9b6702ae43d49b3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b6bb11d07ef049d2ebf16d5274800b1339518c01", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3aeac24048cb4947444980c69625cc4a4a116d18/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aeac24048cb4947444980c69625cc4a4a116d18/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=3aeac24048cb4947444980c69625cc4a4a116d18", "patch": "@@ -22,7 +22,7 @@ use std::fs::{self, File};\n use std::io::BufReader;\n use std::io::prelude::*;\n use std::path::{Path, PathBuf};\n-use std::process::{Command, Stdio};\n+use std::process::{Command, Stdio, exit};\n use std::str;\n \n use build_helper::{output, mtime, up_to_date};\n@@ -1098,7 +1098,7 @@ pub fn run_cargo(builder: &Builder,\n     });\n \n     if !ok {\n-        panic!(\"cargo must succeed\");\n+        exit(1);\n     }\n \n     // Ok now we need to actually find all the files listed in `toplevel`. We've"}]}