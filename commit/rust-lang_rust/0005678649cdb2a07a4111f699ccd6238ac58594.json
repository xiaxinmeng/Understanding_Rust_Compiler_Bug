{"sha": "0005678649cdb2a07a4111f699ccd6238ac58594", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMDU2Nzg2NDljZGIyYTA3YTQxMTFmNjk5Y2NkNjIzOGFjNTg1OTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-19T11:26:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-19T11:26:35Z"}, "message": "minor: simplify", "tree": {"sha": "bb79d844922aae3784a87faf0c0652b5bf4cf40d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb79d844922aae3784a87faf0c0652b5bf4cf40d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0005678649cdb2a07a4111f699ccd6238ac58594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0005678649cdb2a07a4111f699ccd6238ac58594", "html_url": "https://github.com/rust-lang/rust/commit/0005678649cdb2a07a4111f699ccd6238ac58594", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0005678649cdb2a07a4111f699ccd6238ac58594/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e458f66214c5adc3a8436e1d20f9517b5996f067", "url": "https://api.github.com/repos/rust-lang/rust/commits/e458f66214c5adc3a8436e1d20f9517b5996f067", "html_url": "https://github.com/rust-lang/rust/commit/e458f66214c5adc3a8436e1d20f9517b5996f067"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "f8b2f74a3a382b23fa3e6123c1ea8a3ebe45f599", "filename": "crates/parser/src/grammar/generic_args.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0005678649cdb2a07a4111f699ccd6238ac58594/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0005678649cdb2a07a4111f699ccd6238ac58594/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs?ref=0005678649cdb2a07a4111f699ccd6238ac58594", "patch": "@@ -48,27 +48,19 @@ fn generic_arg(p: &mut Parser) {\n                     path_ty.abandon(p);\n                     m.complete(p, ASSOC_TYPE_ARG);\n                 }\n-                T![:] if p.at(T![::]) => {\n-                    // NameRef::, this is a path type\n-                    path_seg.complete(p, PATH_SEGMENT);\n-                    let qual = path.complete(p, PATH);\n-                    paths::type_path_for_qualifier(p, qual);\n-                    path_ty.complete(p, PATH_TYPE);\n-                    m.complete(p, TYPE_ARG);\n-                }\n                 // NameRef<...>:\n-                T![:] => {\n+                T![:] if !p.at(T![::]) => {\n                     generic_params::bounds(p);\n \n                     path_seg.abandon(p);\n                     path.abandon(p);\n                     path_ty.abandon(p);\n                     m.complete(p, ASSOC_TYPE_ARG);\n                 }\n-                // NameRef, this is a single segment path type\n                 _ => {\n                     path_seg.complete(p, PATH_SEGMENT);\n-                    path.complete(p, PATH);\n+                    let qual = path.complete(p, PATH);\n+                    paths::type_path_for_qualifier(p, qual);\n                     path_ty.complete(p, PATH_TYPE);\n                     m.complete(p, TYPE_ARG);\n                 }"}]}