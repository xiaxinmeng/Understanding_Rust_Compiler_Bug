{"sha": "f6b96254fbf1cbdae067cb3dbef903104bfc01d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2Yjk2MjU0ZmJmMWNiZGFlMDY3Y2IzZGJlZjkwMzEwNGJmYzAxZDE=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-09-24T03:05:56Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-09-24T14:43:31Z"}, "message": "docs: add config info for match_arm_leading_pipes", "tree": {"sha": "ff068c97ae8051b822a5e9be616c322edf0d31c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff068c97ae8051b822a5e9be616c322edf0d31c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6b96254fbf1cbdae067cb3dbef903104bfc01d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b96254fbf1cbdae067cb3dbef903104bfc01d1", "html_url": "https://github.com/rust-lang/rust/commit/f6b96254fbf1cbdae067cb3dbef903104bfc01d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6b96254fbf1cbdae067cb3dbef903104bfc01d1/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4908ee19c388ff28d7413a0c892be9c9a4de0989", "url": "https://api.github.com/repos/rust-lang/rust/commits/4908ee19c388ff28d7413a0c892be9c9a4de0989", "html_url": "https://github.com/rust-lang/rust/commit/4908ee19c388ff28d7413a0c892be9c9a4de0989"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "e7bbb4fa44839336034c2d22e6ae929db5a873ac", "filename": "Configurations.md", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f6b96254fbf1cbdae067cb3dbef903104bfc01d1/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/f6b96254fbf1cbdae067cb3dbef903104bfc01d1/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=f6b96254fbf1cbdae067cb3dbef903104bfc01d1", "patch": "@@ -1463,6 +1463,88 @@ fn main() {\n \n See also: [`match_block_trailing_comma`](#match_block_trailing_comma).\n \n+## `match_arm_leading_pipes`\n+\n+Controls whether to include a leading pipe on match arms\n+\n+- **Default value**: `Never`\n+- **Possible values**: `Always`, `Never`, `Preserve`\n+- **Stable**: Yes\n+\n+#### `Never` (default):\n+```rust\n+// Leading pipes are removed from this:\n+// fn foo() {\n+//     match foo {\n+//         | \"foo\" | \"bar\" => {}\n+//         | \"baz\"\n+//         | \"something relatively long\"\n+//         | \"something really really really realllllllllllllly long\" => println!(\"x\"),\n+//         | \"qux\" => println!(\"y\"),\n+//         _ => {}\n+//     }\n+// }\n+\n+// Becomes\n+fn foo() {\n+    match foo {\n+        \"foo\" | \"bar\" => {}\n+        \"baz\"\n+        | \"something relatively long\"\n+        | \"something really really really realllllllllllllly long\" => println!(\"x\"),\n+        \"qux\" => println!(\"y\"),\n+        _ => {}\n+    }\n+}\n+```\n+\n+#### `Always`:\n+```rust\n+// Leading pipes are emitted on all arms of this:\n+// fn foo() {\n+//     match foo {\n+//         \"foo\" | \"bar\" => {}\n+//         \"baz\"\n+//         | \"something relatively long\"\n+//         | \"something really really really realllllllllllllly long\" => println!(\"x\"),\n+//         \"qux\" => println!(\"y\"),\n+//         _ => {}\n+//     }\n+// }\n+\n+// Becomes:\n+fn foo() {\n+    match foo {\n+        | \"foo\" | \"bar\" => {}\n+        | \"baz\"\n+        | \"something relatively long\"\n+        | \"something really really really realllllllllllllly long\" => println!(\"x\"),\n+        | \"qux\" => println!(\"y\"),\n+        | _ => {}\n+    }\n+}\n+```\n+\n+#### `Preserve`:\n+```rust\n+fn foo() {\n+    match foo {\n+        | \"foo\" | \"bar\" => {}\n+        | \"baz\"\n+        | \"something relatively long\"\n+        | \"something really really really realllllllllllllly long\" => println!(\"x\"),\n+        | \"qux\" => println!(\"y\"),\n+        _ => {}\n+    }\n+\n+    match baz {\n+        \"qux\" => {}\n+        \"foo\" | \"bar\" => {}\n+        _ => {}\n+    }\n+}\n+```\n+\n ## `match_block_trailing_comma`\n \n Put a trailing comma after a block based match arm (non-block arms are not affected)"}]}