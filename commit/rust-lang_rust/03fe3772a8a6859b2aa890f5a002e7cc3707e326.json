{"sha": "03fe3772a8a6859b2aa890f5a002e7cc3707e326", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZmUzNzcyYThhNjg1OWIyYWE4OTBmNWEwMDJlN2NjMzcwN2UzMjY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-20T12:31:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-20T12:31:47Z"}, "message": "make sure the raw_ptr macros also avoid UB", "tree": {"sha": "e79e8e52a350ad0a6738b836bce120691aa3c12a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e79e8e52a350ad0a6738b836bce120691aa3c12a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03fe3772a8a6859b2aa890f5a002e7cc3707e326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03fe3772a8a6859b2aa890f5a002e7cc3707e326", "html_url": "https://github.com/rust-lang/rust/commit/03fe3772a8a6859b2aa890f5a002e7cc3707e326", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03fe3772a8a6859b2aa890f5a002e7cc3707e326/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29f86b512a0a6a353c11f44af768da6bdc5c782", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29f86b512a0a6a353c11f44af768da6bdc5c782", "html_url": "https://github.com/rust-lang/rust/commit/a29f86b512a0a6a353c11f44af768da6bdc5c782"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "43419695ba044758a216b4463496dce7bf46bea4", "filename": "tests/run-pass/packed_struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/03fe3772a8a6859b2aa890f5a002e7cc3707e326/tests%2Frun-pass%2Fpacked_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fe3772a8a6859b2aa890f5a002e7cc3707e326/tests%2Frun-pass%2Fpacked_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpacked_struct.rs?ref=03fe3772a8a6859b2aa890f5a002e7cc3707e326", "patch": "@@ -1,7 +1,8 @@\n-#![feature(unsize, coerce_unsized, raw_ref_op)]\n+#![feature(unsize, coerce_unsized, raw_ref_op, raw_ref_macros)]\n \n use std::collections::hash_map::DefaultHasher;\n use std::hash::Hash;\n+use std::ptr;\n \n fn test_basic() {\n     #[repr(packed)]\n@@ -45,7 +46,9 @@ fn test_basic() {\n     assert_eq!({x.b}, 99);\n     // but we *can* take a raw pointer!\n     assert_eq!(unsafe { (&raw const x.a).read_unaligned() }, 42);\n+    assert_eq!(unsafe { ptr::raw_const!(x.a).read_unaligned() }, 42);\n     assert_eq!(unsafe { (&raw const x.b).read_unaligned() }, 99);\n+    assert_eq!(unsafe { ptr::raw_const!(x.b).read_unaligned() }, 99);\n \n     x.b = 77;\n     assert_eq!({x.b}, 77);"}]}