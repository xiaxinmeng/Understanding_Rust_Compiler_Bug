{"sha": "cae8680544418d838344d9c258030592f0461ee9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZTg2ODA1NDQ0MThkODM4MzQ0ZDljMjU4MDMwNTkyZjA0NjFlZTk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-07-26T16:31:39Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-07-26T16:31:39Z"}, "message": "lowering: Omit bare trait lint on macro call sites\n\nThis commit implements a hacky fix for detecting when a span is pointing\nat a macro call site so that bare trait lints are not made incorrectly.", "tree": {"sha": "d0e10b4a2bcd14c004e2aed7ade4df9c5ad006fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0e10b4a2bcd14c004e2aed7ade4df9c5ad006fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cae8680544418d838344d9c258030592f0461ee9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl07K3QACgkQJZLnbIc4\nH9kCHRAAssR4Hxf+jao2OV2/tBNAQl0rvFKPIbnK8W5ELQF51l50zlXwyVgR0fnt\njnNJa8ztU6orh4HMyd3SOWKg4j/QzlcT08TlNFFSfzBFSI1L4sEkRK0IrJLSG8FY\n+3UT2dzXtWpQsRTMnA8I1SezJldiM/lQ0O16C03CxRuDAvSLLQ60WqKeESJXWWgg\npCk6R13+pX2YTYj81fcNDuaN9zEqB4TVWKVhCwSmXHQZI+kaoVeQUQS2ANg7/Ix0\njD0SWB+jyJW6CqARVSAP860UTpCmt1pgYmIsAHIgOa9dmYdOleNRs2ph7WM7+nv7\nicrwpCuoLJK670wDoYoeY4R8H7fINpzx4YthiS8gOp7fjg1luR30q4aVmx4MlanG\n5HAUguy+KIhaEmOy7IxdMqcYrUs+pyMog/e8ZZ1+PXdJqty2fiHJBgA4jLx/4CXr\nISBD00Cf7prH1nL6WPLEnhH5Ers3Yb9YdfzuvEHjKAi+NMPVg+yUbFGFc0Cs5D9Y\np0hX8smIOfCtR7VzwrCell5wgAx0iO2MCot+lLXOrnwEa2pJ8tY/g4k8eDh0mrB5\nfPB3rvPfsFrAurpuZw2/N4r6W0sTGAoppAnhoHsJdKAEbvEwvZ2nTN2GeQQk6Efs\nPUfz2mz/+ip29tUh1DYWLZxtRUTqUOQ3WNj5endFDJwOwDlQn4k=\n=ohMd\n-----END PGP SIGNATURE-----", "payload": "tree d0e10b4a2bcd14c004e2aed7ade4df9c5ad006fe\nparent 44bf6b6f55be89926d9f18b4d90a9eaefb84d02c\nauthor David Wood <david@davidtw.co> 1564158699 +0100\ncommitter David Wood <david@davidtw.co> 1564158699 +0100\n\nlowering: Omit bare trait lint on macro call sites\n\nThis commit implements a hacky fix for detecting when a span is pointing\nat a macro call site so that bare trait lints are not made incorrectly.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cae8680544418d838344d9c258030592f0461ee9", "html_url": "https://github.com/rust-lang/rust/commit/cae8680544418d838344d9c258030592f0461ee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cae8680544418d838344d9c258030592f0461ee9/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44bf6b6f55be89926d9f18b4d90a9eaefb84d02c", "url": "https://api.github.com/repos/rust-lang/rust/commits/44bf6b6f55be89926d9f18b4d90a9eaefb84d02c", "html_url": "https://github.com/rust-lang/rust/commit/44bf6b6f55be89926d9f18b4d90a9eaefb84d02c"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "248a120e741aae1c24590afe6443c5097fe714d7", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cae8680544418d838344d9c258030592f0461ee9/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cae8680544418d838344d9c258030592f0461ee9/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=cae8680544418d838344d9c258030592f0461ee9", "patch": "@@ -5754,13 +5754,21 @@ impl<'a> LoweringContext<'a> {\n     }\n \n     fn maybe_lint_bare_trait(&self, span: Span, id: NodeId, is_global: bool) {\n-        self.sess.buffer_lint_with_diagnostic(\n-            builtin::BARE_TRAIT_OBJECTS,\n-            id,\n-            span,\n-            \"trait objects without an explicit `dyn` are deprecated\",\n-            builtin::BuiltinLintDiagnostics::BareTraitObject(span, is_global),\n-        )\n+        // FIXME(davidtwco): This is a hack to detect macros which produce spans of the\n+        // call site which do not have a macro backtrace. See #61963.\n+        let is_macro_callsite = self.sess.source_map()\n+            .span_to_snippet(span)\n+            .map(|snippet| snippet.starts_with(\"#[\"))\n+            .unwrap_or(true);\n+        if !is_macro_callsite {\n+            self.sess.buffer_lint_with_diagnostic(\n+                builtin::BARE_TRAIT_OBJECTS,\n+                id,\n+                span,\n+                \"trait objects without an explicit `dyn` are deprecated\",\n+                builtin::BuiltinLintDiagnostics::BareTraitObject(span, is_global),\n+            )\n+        }\n     }\n \n     fn wrap_in_try_constructor("}, {"sha": "c9d738f5a283e375591925ae40f68a8dbdf9e88d", "filename": "src/test/ui/suggestions/issue-61963.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cae8680544418d838344d9c258030592f0461ee9/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cae8680544418d838344d9c258030592f0461ee9/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.rs?ref=cae8680544418d838344d9c258030592f0461ee9", "patch": "@@ -15,7 +15,6 @@ pub trait Bar { }\n pub struct Qux<T>(T);\n \n #[dom_struct]\n-//~^ ERROR trait objects without an explicit `dyn` are deprecated [bare_trait_objects]\n pub struct Foo {\n     qux: Qux<Qux<Baz>>,\n     bar: Box<Bar>,"}, {"sha": "46943f40066ff5f343ebe29b17c88f13b2dad804", "filename": "src/test/ui/suggestions/issue-61963.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cae8680544418d838344d9c258030592f0461ee9/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cae8680544418d838344d9c258030592f0461ee9/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr?ref=cae8680544418d838344d9c258030592f0461ee9", "patch": "@@ -1,5 +1,5 @@\n error: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/issue-61963.rs:21:14\n+  --> $DIR/issue-61963.rs:20:14\n    |\n LL |     bar: Box<Bar>,\n    |              ^^^ help: use `dyn`: `dyn Bar`\n@@ -10,11 +10,5 @@ note: lint level defined here\n LL | #![deny(bare_trait_objects)]\n    |         ^^^^^^^^^^^^^^^^^^\n \n-error: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/issue-61963.rs:17:1\n-   |\n-LL | #[dom_struct]\n-   | ^^^^^^^^^^^^^ help: use `dyn`: `dyn #[dom_struct]`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}]}