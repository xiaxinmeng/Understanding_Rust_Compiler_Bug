{"sha": "79359315d6d096b4783b48a3550b5714b8c04d6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MzU5MzE1ZDZkMDk2YjQ3ODNiNDhhMzU1MGI1NzE0YjhjMDRkNmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-01-16T21:18:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-01-18T10:15:56Z"}, "message": "get rid of real_drop_in_place again", "tree": {"sha": "bd840cc68183d47d53c1822ac797ad9419e2bbdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd840cc68183d47d53c1822ac797ad9419e2bbdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79359315d6d096b4783b48a3550b5714b8c04d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79359315d6d096b4783b48a3550b5714b8c04d6b", "html_url": "https://github.com/rust-lang/rust/commit/79359315d6d096b4783b48a3550b5714b8c04d6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79359315d6d096b4783b48a3550b5714b8c04d6b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb4ac14c5ee035a48a90275441ec3ab0973621c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4ac14c5ee035a48a90275441ec3ab0973621c1", "html_url": "https://github.com/rust-lang/rust/commit/fb4ac14c5ee035a48a90275441ec3ab0973621c1"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "c1976868bf7607698803b7b947adedba30fb60cc", "filename": "src/libcore/ptr/mod.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/79359315d6d096b4783b48a3550b5714b8c04d6b/src%2Flibcore%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79359315d6d096b4783b48a3550b5714b8c04d6b/src%2Flibcore%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmod.rs?ref=79359315d6d096b4783b48a3550b5714b8c04d6b", "patch": "@@ -169,22 +169,12 @@ mod mut_ptr;\n /// i.e., you do not usually have to worry about such issues unless you call `drop_in_place`\n /// manually.\n #[stable(feature = \"drop_in_place\", since = \"1.8.0\")]\n-#[inline(always)]\n-pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\n-    real_drop_in_place(&mut *to_drop)\n-}\n-\n-// The real `drop_in_place` -- the one that gets called implicitly when variables go\n-// out of scope -- should have a safe reference and not a raw pointer as argument\n-// type.  When we drop a local variable, we access it with a pointer that behaves\n-// like a safe reference; transmuting that to a raw pointer does not mean we can\n-// actually access it with raw pointers.\n #[lang = \"drop_in_place\"]\n #[allow(unconditional_recursion)]\n-unsafe fn real_drop_in_place<T: ?Sized>(to_drop: &mut T) {\n+pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\n     // Code here does not matter - this is replaced by the\n     // real drop glue by the compiler.\n-    real_drop_in_place(to_drop)\n+    drop_in_place(to_drop)\n }\n \n /// Creates a null raw pointer."}]}