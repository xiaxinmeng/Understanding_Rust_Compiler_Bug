{"sha": "3791646c0211f561fbcc52ac55a4b36ddb6d94e8", "node_id": "C_kwDOAAsO6NoAKDM3OTE2NDZjMDIxMWY1NjFmYmNjNTJhYzU1YTRiMzZkZGI2ZDk0ZTg", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-10-01T17:08:16Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-11-25T16:38:49Z"}, "message": "Run stdarch tests in the CI", "tree": {"sha": "70a15fa2c874392533e278013614b991c05e1509", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70a15fa2c874392533e278013614b991c05e1509"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3791646c0211f561fbcc52ac55a4b36ddb6d94e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3791646c0211f561fbcc52ac55a4b36ddb6d94e8", "html_url": "https://github.com/rust-lang/rust/commit/3791646c0211f561fbcc52ac55a4b36ddb6d94e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3791646c0211f561fbcc52ac55a4b36ddb6d94e8/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2", "html_url": "https://github.com/rust-lang/rust/commit/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "2e81442298c60f8c71cfd04a6564cf4bdc40ce11", "filename": ".github/workflows/release.yml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3791646c0211f561fbcc52ac55a4b36ddb6d94e8/.github%2Fworkflows%2Frelease.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3791646c0211f561fbcc52ac55a4b36ddb6d94e8/.github%2Fworkflows%2Frelease.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yml?ref=3791646c0211f561fbcc52ac55a4b36ddb6d94e8", "patch": "@@ -105,3 +105,8 @@ jobs:\n     - name: Run tests\n       run: |\n         ./test.sh --release --clean --release-sysroot --build-sysroot --mini-tests --std-tests # --test-libcore # FIXME(antoyo): libcore tests fail.\n+\n+    - name: Run stdarch tests\n+      run: |\n+        cd build_sysroot/sysroot_src/library/stdarch/\n+        CHANNEL=release TARGET=x86_64-unknown-linux-gnu ../../../../cargo.sh test"}, {"sha": "ed3daddf43e9ebfb58146adbbfe2a1ac1499e0c3", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3791646c0211f561fbcc52ac55a4b36ddb6d94e8/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3791646c0211f561fbcc52ac55a4b36ddb6d94e8/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=3791646c0211f561fbcc52ac55a4b36ddb6d94e8", "patch": "@@ -101,7 +101,7 @@ pub fn compile_codegen_unit<'tcx>(tcx: TyCtxt<'tcx>, cgu_name: Symbol, supports_\n         context.add_command_line_option(\"-m64\");\n         context.add_command_line_option(\"-mbmi\");\n         context.add_command_line_option(\"-mgfni\");\n-        context.add_command_line_option(\"-mavxvnni\");\n+        //context.add_command_line_option(\"-mavxvnni\"); // The CI doesn't support this option.\n         context.add_command_line_option(\"-mf16c\");\n         context.add_command_line_option(\"-maes\");\n         context.add_command_line_option(\"-mxsavec\");"}, {"sha": "e52ee4818f3e3fc590bb957624b6b69aac44339b", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3791646c0211f561fbcc52ac55a4b36ddb6d94e8/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3791646c0211f561fbcc52ac55a4b36ddb6d94e8/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3791646c0211f561fbcc52ac55a4b36ddb6d94e8", "patch": "@@ -316,7 +316,8 @@ pub fn target_features(sess: &Session, allow_unstable: bool) -> Vec<Symbol> {\n             // gcc -march=native -Q --help=target\n             #[cfg(feature=\"master\")]\n             {\n-                (_feature.contains(\"sse\") || _feature.contains(\"avx\")) && !_feature.contains(\"avx512\")\n+                // NOTE: the CPU in the CI doesn't support sse4a, so disable it to make the stdarch tests pass in the CI.\n+                (_feature.contains(\"sse\") || _feature.contains(\"avx\")) && !_feature.contains(\"avx512\") && !_feature.contains(\"sse4a\")\n             }\n             #[cfg(not(feature=\"master\"))]\n             {"}]}