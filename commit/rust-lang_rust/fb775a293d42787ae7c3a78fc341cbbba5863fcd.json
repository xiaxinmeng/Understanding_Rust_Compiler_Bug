{"sha": "fb775a293d42787ae7c3a78fc341cbbba5863fcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNzc1YTI5M2Q0Mjc4N2FlN2MzYTc4ZmMzNDFjYmJiYTU4NjNmY2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T14:11:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T14:11:04Z"}, "message": "make FileSymbol private", "tree": {"sha": "460c6e30151ba4b15d67ee691388b79a8eba7d42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/460c6e30151ba4b15d67ee691388b79a8eba7d42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb775a293d42787ae7c3a78fc341cbbba5863fcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb775a293d42787ae7c3a78fc341cbbba5863fcd", "html_url": "https://github.com/rust-lang/rust/commit/fb775a293d42787ae7c3a78fc341cbbba5863fcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb775a293d42787ae7c3a78fc341cbbba5863fcd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e", "html_url": "https://github.com/rust-lang/rust/commit/830abe0c1b9fdbc20a78771d0b3df37d9eabdc3e"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "392437ad98ee3998abcd5c088f3f201bd55eed03", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fb775a293d42787ae7c3a78fc341cbbba5863fcd/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb775a293d42787ae7c3a78fc341cbbba5863fcd/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=fb775a293d42787ae7c3a78fc341cbbba5863fcd", "patch": "@@ -31,13 +31,12 @@ use relative_path::RelativePathBuf;\n \n use crate::{\n     imp::{AnalysisHostImpl, AnalysisImpl},\n-    symbol_index::SymbolIndex,\n+    symbol_index::{SymbolIndex, FileSymbol},\n };\n \n pub use crate::{\n     completion::{CompletionItem, CompletionItemKind, InsertText},\n     runnables::{Runnable, RunnableKind},\n-    symbol_index::FileSymbol,\n };\n pub use ra_editor::{\n     Fold, FoldKind, HighlightedRange, LineIndex, StructureNode, Severity"}, {"sha": "56a84a85089b0718ab19c9f48ee940b985fda968", "filename": "crates/ra_analysis/src/symbol_index.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fb775a293d42787ae7c3a78fc341cbbba5863fcd/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb775a293d42787ae7c3a78fc341cbbba5863fcd/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs?ref=fb775a293d42787ae7c3a78fc341cbbba5863fcd", "patch": "@@ -125,14 +125,14 @@ fn is_type(kind: SyntaxKind) -> bool {\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct FileSymbol {\n-    pub name: SmolStr,\n-    pub node_range: TextRange,\n-    pub kind: SyntaxKind,\n+pub(crate) struct FileSymbol {\n+    pub(crate) name: SmolStr,\n+    pub(crate) node_range: TextRange,\n+    pub(crate) kind: SyntaxKind,\n }\n \n impl FileSymbol {\n-    pub fn docs(&self, file: &SourceFileNode) -> Option<String> {\n+    pub(crate) fn docs(&self, file: &SourceFileNode) -> Option<String> {\n         file.syntax()\n             .descendants()\n             .filter(|node| node.kind() == self.kind && node.range() == self.node_range)\n@@ -162,7 +162,7 @@ impl FileSymbol {\n     /// Get a description of this node.\n     ///\n     /// e.g. `struct Name`, `enum Name`, `fn Name`\n-    pub fn description(&self, file: &SourceFileNode) -> Option<String> {\n+    pub(crate) fn description(&self, file: &SourceFileNode) -> Option<String> {\n         // TODO: After type inference is done, add type information to improve the output\n         file.syntax()\n             .descendants()"}]}