{"sha": "b220db03bd334b2e74c4dfd62ed1318941b82a3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMjBkYjAzYmQzMzRiMmU3NGM0ZGZkNjJlZDEzMTg5NDFiODJhM2M=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-08-29T05:16:23Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-08-29T05:24:55Z"}, "message": "Allow `!` as the return type of proc/closure literals\n\nFixes #13490.", "tree": {"sha": "8ac623aa515b3b959600356b202e7b2d4696f8c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ac623aa515b3b959600356b202e7b2d4696f8c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b220db03bd334b2e74c4dfd62ed1318941b82a3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b220db03bd334b2e74c4dfd62ed1318941b82a3c", "html_url": "https://github.com/rust-lang/rust/commit/b220db03bd334b2e74c4dfd62ed1318941b82a3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b220db03bd334b2e74c4dfd62ed1318941b82a3c/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee8423531bf88752e14ebfbdc2c1d1ade8a8fa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee8423531bf88752e14ebfbdc2c1d1ade8a8fa7", "html_url": "https://github.com/rust-lang/rust/commit/dee8423531bf88752e14ebfbdc2c1d1ade8a8fa7"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "c70a171ff7bab3f1998d8c7691affe32e202152a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b220db03bd334b2e74c4dfd62ed1318941b82a3c/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b220db03bd334b2e74c4dfd62ed1318941b82a3c/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b220db03bd334b2e74c4dfd62ed1318941b82a3c", "patch": "@@ -4092,20 +4092,20 @@ impl<'a> Parser<'a> {\n                 (optional_unboxed_closure_kind, args)\n             }\n         };\n-        let output = if self.eat(&token::RARROW) {\n-            self.parse_ty(true)\n+        let (style, output) = if self.token == token::RARROW {\n+            self.parse_ret_ty()\n         } else {\n-            P(Ty {\n+            (Return, P(Ty {\n                 id: ast::DUMMY_NODE_ID,\n                 node: TyInfer,\n                 span: self.span,\n-            })\n+            }))\n         };\n \n         (P(FnDecl {\n             inputs: inputs_captures,\n             output: output,\n-            cf: Return,\n+            cf: style,\n             variadic: false\n         }), optional_unboxed_closure_kind)\n     }\n@@ -4118,20 +4118,20 @@ impl<'a> Parser<'a> {\n                                      seq_sep_trailing_allowed(token::COMMA),\n                                      |p| p.parse_fn_block_arg());\n \n-        let output = if self.eat(&token::RARROW) {\n-            self.parse_ty(true)\n+        let (style, output) = if self.token == token::RARROW {\n+            self.parse_ret_ty()\n         } else {\n-            P(Ty {\n+            (Return, P(Ty {\n                 id: ast::DUMMY_NODE_ID,\n                 node: TyInfer,\n                 span: self.span,\n-            })\n+            }))\n         };\n \n         P(FnDecl {\n             inputs: inputs,\n             output: output,\n-            cf: Return,\n+            cf: style,\n             variadic: false\n         })\n     }"}, {"sha": "b5a94a02b346b319ad6c8e7d0c599ea78e4d089b", "filename": "src/test/run-pass/closure-syntax.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b220db03bd334b2e74c4dfd62ed1318941b82a3c/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b220db03bd334b2e74c4dfd62ed1318941b82a3c/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs?ref=b220db03bd334b2e74c4dfd62ed1318941b82a3c", "patch": "@@ -78,6 +78,10 @@ fn bar<'b>() {\n \n     let a = A;\n     a.foo::<<'a>||>();\n+\n+    // issue #13490\n+    let _ = || -> ! loop {};\n+    let _ = proc() -> ! loop {};\n }\n \n struct B<T>;"}]}