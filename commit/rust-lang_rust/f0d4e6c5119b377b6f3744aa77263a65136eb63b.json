{"sha": "f0d4e6c5119b377b6f3744aa77263a65136eb63b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZDRlNmM1MTE5YjM3N2I2ZjM3NDRhYTc3MjYzYTY1MTM2ZWI2M2I=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-18T22:40:27Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-18T22:41:24Z"}, "message": "Add stdio_reader to io, just use FILE* values for now. We have things to do.", "tree": {"sha": "5feefac9a0abf3ad73e9edc05b7ca6da9d9a1b4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5feefac9a0abf3ad73e9edc05b7ca6da9d9a1b4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0d4e6c5119b377b6f3744aa77263a65136eb63b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d4e6c5119b377b6f3744aa77263a65136eb63b", "html_url": "https://github.com/rust-lang/rust/commit/f0d4e6c5119b377b6f3744aa77263a65136eb63b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0d4e6c5119b377b6f3744aa77263a65136eb63b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4f92774d0b6b60b747f97344c18c5f51de18469", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4f92774d0b6b60b747f97344c18c5f51de18469", "html_url": "https://github.com/rust-lang/rust/commit/b4f92774d0b6b60b747f97344c18c5f51de18469"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "a7feba2fc5a9c81c4690984ab75e8bf84aa9b59a", "filename": "src/lib/_io.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2F_io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2F_io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_io.rs?ref=f0d4e6c5119b377b6f3744aa77263a65136eb63b", "patch": "@@ -1,7 +1,26 @@\n-import std.os;\n+import std.os.libc;\n import std._str;\n import std._vec;\n \n+\n+type stdio_reader = unsafe obj {\n+                           fn getc() -> int;\n+};\n+\n+fn new_stdio_reader(str path) -> stdio_reader {\n+  unsafe obj stdio_FILE_reader(os.libc.FILE f) {\n+    fn getc() -> int {\n+      ret os.libc.fgetc(f);\n+    }\n+    drop {\n+      os.libc.fclose(f);\n+    }\n+  }\n+  ret stdio_FILE_reader(os.libc.fopen(_str.buf(path),\n+                                      _str.buf(\"r\")));\n+}\n+\n+\n type buf_reader = unsafe obj {\n   fn read() -> vec[u8];\n };\n@@ -130,3 +149,14 @@ fn file_writer(str path,\n   }\n   ret fw(new_buf_writer(path, flags));\n }\n+\n+//\n+// Local Variables:\n+// mode: rust\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C .. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:\n+//"}, {"sha": "2ff61dc37a5585dc274e9867d1ab4b5f958e3829", "filename": "src/lib/linux_os.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2Flinux_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2Flinux_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Flinux_os.rs?ref=f0d4e6c5119b377b6f3744aa77263a65136eb63b", "patch": "@@ -8,6 +8,11 @@ native mod libc = \"libc.so.6\" {\n   fn write(int fd, vbuf buf, uint count) -> int;\n   fn close(int fd) -> int;\n \n+  type FILE;\n+  fn fopen(sbuf path, sbuf mode) -> FILE;\n+  fn fclose(FILE f);\n+  fn fgetc(FILE f) -> int;\n+\n   type dir;\n   // readdir is a mess; handle via wrapper function in rustrt.\n   fn opendir(sbuf d) -> dir;"}, {"sha": "6f5613062ed78084311d92ee7dd642fe801eb74a", "filename": "src/lib/macos_os.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2Fmacos_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2Fmacos_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmacos_os.rs?ref=f0d4e6c5119b377b6f3744aa77263a65136eb63b", "patch": "@@ -8,6 +8,11 @@ native mod libc = \"libc.dylib\" {\n   fn write(int fd, vbuf buf, uint count) -> int;\n   fn close(int fd) -> int;\n \n+  type FILE;\n+  fn fopen(sbuf path, sbuf mode) -> FILE;\n+  fn fclose(FILE f);\n+  fn fgetc(FILE f) -> int;\n+\n   type dir;\n   // readdir is a mess; handle via wrapper function in rustrt.\n   fn opendir(sbuf d) -> dir;"}, {"sha": "3e1ce65faa569d090844cf62c9e85d69689eb330", "filename": "src/lib/win32_os.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2Fwin32_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d4e6c5119b377b6f3744aa77263a65136eb63b/src%2Flib%2Fwin32_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_os.rs?ref=f0d4e6c5119b377b6f3744aa77263a65136eb63b", "patch": "@@ -6,6 +6,11 @@ native mod libc = \"msvcrt.dll\" {\n   fn read(int fd, vbuf buf, uint count) -> int = \"_read\";\n   fn write(int fd, vbuf buf, uint count) -> int = \"_write\";\n   fn close(int fd) -> int = \"_close\";\n+\n+  type FILE;\n+  fn fopen(sbuf path, sbuf mode) -> FILE;\n+  fn fclose(FILE f);\n+  fn fgetc(FILE f) -> int;\n }\n \n mod libc_constants {"}]}