{"sha": "ab6b6514038c4d280248e2371080d097dbe31be1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNmI2NTE0MDM4YzRkMjgwMjQ4ZTIzNzEwODBkMDk3ZGJlMzFiZTE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-02T13:16:40Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T14:34:05Z"}, "message": "regex_macros: fix fallout", "tree": {"sha": "5876545b56351f8636164ad2ffa155ffa671ee50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5876545b56351f8636164ad2ffa155ffa671ee50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab6b6514038c4d280248e2371080d097dbe31be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab6b6514038c4d280248e2371080d097dbe31be1", "html_url": "https://github.com/rust-lang/rust/commit/ab6b6514038c4d280248e2371080d097dbe31be1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab6b6514038c4d280248e2371080d097dbe31be1/comments", "author": null, "committer": null, "parents": [{"sha": "9dd65dd6243dc9cfee1381fc3f926aad9387df07", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd65dd6243dc9cfee1381fc3f926aad9387df07", "html_url": "https://github.com/rust-lang/rust/commit/9dd65dd6243dc9cfee1381fc3f926aad9387df07"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ebd1cc7e166d71e17cb7e4335c693f8c18b0c0c1", "filename": "src/libregex_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab6b6514038c4d280248e2371080d097dbe31be1/src%2Flibregex_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6b6514038c4d280248e2371080d097dbe31be1/src%2Flibregex_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex_macros%2Flib.rs?ref=ab6b6514038c4d280248e2371080d097dbe31be1", "patch": "@@ -603,7 +603,7 @@ fn exec<'t>(which: ::regex::native::MatchKind, input: &'t str,\n     // Converts `xs` to a `[x1, x2, .., xN]` expression by calling `to_expr`\n     // on each element in `xs`.\n     fn vec_expr<T, It, F>(&self, xs: It, mut to_expr: F) -> P<ast::Expr> where\n-        It: Iterator<T>,\n+        It: Iterator<Item=T>,\n         F: FnMut(&ExtCtxt, T) -> P<ast::Expr>,\n     {\n         let exprs = xs.map(|x| to_expr(self.cx, x)).collect();"}]}