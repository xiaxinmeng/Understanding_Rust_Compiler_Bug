{"sha": "ab9b7a5ad23bd2cb2097719ad9439277b8f5d987", "node_id": "C_kwDOAAsO6NoAKGFiOWI3YTVhZDIzYmQyY2IyMDk3NzE5YWQ5NDM5Mjc3YjhmNWQ5ODc", "commit": {"author": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-04-17T22:25:39Z"}, "committer": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-04-29T16:59:07Z"}, "message": "remove unnecessary reference", "tree": {"sha": "6a628657b6ab7eeae70100c35eccbec3352e7407", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a628657b6ab7eeae70100c35eccbec3352e7407"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab9b7a5ad23bd2cb2097719ad9439277b8f5d987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab9b7a5ad23bd2cb2097719ad9439277b8f5d987", "html_url": "https://github.com/rust-lang/rust/commit/ab9b7a5ad23bd2cb2097719ad9439277b8f5d987", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab9b7a5ad23bd2cb2097719ad9439277b8f5d987/comments", "author": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d08325293f0dcccd29700d6b14755f8fbd5f076", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d08325293f0dcccd29700d6b14755f8fbd5f076", "html_url": "https://github.com/rust-lang/rust/commit/1d08325293f0dcccd29700d6b14755f8fbd5f076"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fc6797d72c0df9479c7c1d3f4ee02ea9d734c159", "filename": "clippy_lints/src/loops/while_pop_unwrap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab9b7a5ad23bd2cb2097719ad9439277b8f5d987/clippy_lints%2Fsrc%2Floops%2Fwhile_pop_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab9b7a5ad23bd2cb2097719ad9439277b8f5d987/clippy_lints%2Fsrc%2Floops%2Fwhile_pop_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fwhile_pop_unwrap.rs?ref=ab9b7a5ad23bd2cb2097719ad9439277b8f5d987", "patch": "@@ -34,7 +34,7 @@ fn report_lint(cx: &LateContext<'_>, pop_span: Span, pop_stmt_kind: PopStmt<'_>,\n         pop_span,\n         \"you seem to be trying to pop elements from a `Vec` in a loop\",\n         |diag| {\n-            let (pat, pop_replacement) = match &pop_stmt_kind {\n+            let (pat, pop_replacement) = match pop_stmt_kind {\n                 PopStmt::Local(pat) => (snippet(cx, pat.span, \"..\"), String::new()),\n                 PopStmt::Anonymous => (Cow::Borrowed(\"element\"), \"element\".into()),\n             };\n@@ -78,7 +78,7 @@ fn check_local(cx: &LateContext<'_>, stmt: &Stmt<'_>, is_empty_recv: &Expr<'_>,\n         && let Some(init) = local.init\n         && is_vec_pop_unwrap(cx, init, is_empty_recv)\n     {\n-        report_lint(cx, stmt.span, PopStmt::Local(&local.pat), loop_span, is_empty_recv.span);\n+        report_lint(cx, stmt.span, PopStmt::Local(local.pat), loop_span, is_empty_recv.span);\n     }\n }\n "}]}