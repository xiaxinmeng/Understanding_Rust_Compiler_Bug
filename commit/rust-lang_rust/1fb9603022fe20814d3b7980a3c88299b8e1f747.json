{"sha": "1fb9603022fe20814d3b7980a3c88299b8e1f747", "node_id": "C_kwDOAAsO6NoAKDFmYjk2MDMwMjJmZTIwODE0ZDNiNzk4MGEzYzg4Mjk5YjhlMWY3NDc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-12T23:25:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-12T23:25:35Z"}, "message": "Auto merge of #98020 - TaKO8Ki:use-create-snapshot-for-diagnostic-in-rustc-expand, r=Dylan-DPC\n\nUse `create_snapshot_for_diagnostic` instead of `clone` for `Parser`\n\nUse [`create_snapshot_for_diagnostic`](https://github.com/rust-lang/rust/blob/cd119057160cedea245aa2679add56723f3dc784/compiler/rustc_parse/src/parser/diagnostics.rs#L214-L223) I implemented in https://github.com/rust-lang/rust/pull/94731 instead of `clone` to avoid duplicate unclosed delims errors being emitted when the `Parser` is dropped. I missed this one in #95068.", "tree": {"sha": "6142f1916e3b0c2b4175a4e53ce37f8a971fedb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6142f1916e3b0c2b4175a4e53ce37f8a971fedb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fb9603022fe20814d3b7980a3c88299b8e1f747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb9603022fe20814d3b7980a3c88299b8e1f747", "html_url": "https://github.com/rust-lang/rust/commit/1fb9603022fe20814d3b7980a3c88299b8e1f747", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fb9603022fe20814d3b7980a3c88299b8e1f747/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "546c826f0ccaab36e897860205281f490db274e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/546c826f0ccaab36e897860205281f490db274e6", "html_url": "https://github.com/rust-lang/rust/commit/546c826f0ccaab36e897860205281f490db274e6"}, {"sha": "84a13a28b749eb4765da0918131a47461fb99e3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/84a13a28b749eb4765da0918131a47461fb99e3d", "html_url": "https://github.com/rust-lang/rust/commit/84a13a28b749eb4765da0918131a47461fb99e3d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a66d36aaf72ee5b1cd565a23eb9b2c71b9346653", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fb9603022fe20814d3b7980a3c88299b8e1f747/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb9603022fe20814d3b7980a3c88299b8e1f747/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=1fb9603022fe20814d3b7980a3c88299b8e1f747", "patch": "@@ -123,7 +123,7 @@ impl<'a> ParserAnyMacro<'a> {\n             is_trailing_mac,\n             is_local,\n         } = *self;\n-        let snapshot = &mut parser.clone();\n+        let snapshot = &mut parser.create_snapshot_for_diagnostic();\n         let fragment = match parse_ast_fragment(parser, kind) {\n             Ok(f) => f,\n             Err(err) => {"}, {"sha": "6a44f5d6653ef1a30feae7a04af1fec32edda0c4", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fb9603022fe20814d3b7980a3c88299b8e1f747/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb9603022fe20814d3b7980a3c88299b8e1f747/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=1fb9603022fe20814d3b7980a3c88299b8e1f747", "patch": "@@ -336,7 +336,7 @@ struct InInTypo {\n // SnapshotParser is used to create a snapshot of the parser\n // without causing duplicate errors being emitted when the `Parser`\n // is dropped.\n-pub(super) struct SnapshotParser<'a> {\n+pub struct SnapshotParser<'a> {\n     parser: Parser<'a>,\n     unclosed_delims: Vec<UnmatchedBrace>,\n }\n@@ -392,7 +392,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Create a snapshot of the `Parser`.\n-    pub(super) fn create_snapshot_for_diagnostic(&self) -> SnapshotParser<'a> {\n+    pub fn create_snapshot_for_diagnostic(&self) -> SnapshotParser<'a> {\n         let mut snapshot = self.clone();\n         let unclosed_delims = self.unclosed_delims.clone();\n         // Clear `unclosed_delims` in snapshot to avoid"}]}