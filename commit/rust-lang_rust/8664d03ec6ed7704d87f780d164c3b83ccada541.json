{"sha": "8664d03ec6ed7704d87f780d164c3b83ccada541", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NjRkMDNlYzZlZDc3MDRkODdmNzgwZDE2NGMzYjgzY2NhZGE1NDE=", "commit": {"author": {"name": "Sebastian Ullrich", "email": "sebasti@nullri.ch", "date": "2016-10-30T01:33:57Z"}, "committer": {"name": "Sebastian Ullrich", "email": "sebasti@nullri.ch", "date": "2016-10-30T19:00:59Z"}, "message": "implement 'Re-implementing `PartialEq::ne`' lint\n\ncloses #86", "tree": {"sha": "8f9e14455592a8523351df7cc5c3c54cccd8d9ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f9e14455592a8523351df7cc5c3c54cccd8d9ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8664d03ec6ed7704d87f780d164c3b83ccada541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8664d03ec6ed7704d87f780d164c3b83ccada541", "html_url": "https://github.com/rust-lang/rust/commit/8664d03ec6ed7704d87f780d164c3b83ccada541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8664d03ec6ed7704d87f780d164c3b83ccada541/comments", "author": {"login": "Kha", "id": 109126, "node_id": "MDQ6VXNlcjEwOTEyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/109126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kha", "html_url": "https://github.com/Kha", "followers_url": "https://api.github.com/users/Kha/followers", "following_url": "https://api.github.com/users/Kha/following{/other_user}", "gists_url": "https://api.github.com/users/Kha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kha/subscriptions", "organizations_url": "https://api.github.com/users/Kha/orgs", "repos_url": "https://api.github.com/users/Kha/repos", "events_url": "https://api.github.com/users/Kha/events{/privacy}", "received_events_url": "https://api.github.com/users/Kha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kha", "id": 109126, "node_id": "MDQ6VXNlcjEwOTEyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/109126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kha", "html_url": "https://github.com/Kha", "followers_url": "https://api.github.com/users/Kha/followers", "following_url": "https://api.github.com/users/Kha/following{/other_user}", "gists_url": "https://api.github.com/users/Kha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kha/subscriptions", "organizations_url": "https://api.github.com/users/Kha/orgs", "repos_url": "https://api.github.com/users/Kha/repos", "events_url": "https://api.github.com/users/Kha/events{/privacy}", "received_events_url": "https://api.github.com/users/Kha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e536ff369093b758955d2be9e350b9736c5d182", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e536ff369093b758955d2be9e350b9736c5d182", "html_url": "https://github.com/rust-lang/rust/commit/3e536ff369093b758955d2be9e350b9736c5d182"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "07276a28abd0e87b8f61d26da58ec7592da88c68", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8664d03ec6ed7704d87f780d164c3b83ccada541/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/8664d03ec6ed7704d87f780d164c3b83ccada541/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=8664d03ec6ed7704d87f780d164c3b83ccada541", "patch": "@@ -319,6 +319,7 @@ All notable changes to this project will be documented in this file.\n [`out_of_bounds_indexing`]: https://github.com/Manishearth/rust-clippy/wiki#out_of_bounds_indexing\n [`overflow_check_conditional`]: https://github.com/Manishearth/rust-clippy/wiki#overflow_check_conditional\n [`panic_params`]: https://github.com/Manishearth/rust-clippy/wiki#panic_params\n+[`partialeq_ne_impl`]: https://github.com/Manishearth/rust-clippy/wiki#partialeq_ne_impl\n [`precedence`]: https://github.com/Manishearth/rust-clippy/wiki#precedence\n [`print_stdout`]: https://github.com/Manishearth/rust-clippy/wiki#print_stdout\n [`print_with_newline`]: https://github.com/Manishearth/rust-clippy/wiki#print_with_newline"}, {"sha": "61561167ceedf6167da0e8014cfce4d3dca04914", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8664d03ec6ed7704d87f780d164c3b83ccada541/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8664d03ec6ed7704d87f780d164c3b83ccada541/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8664d03ec6ed7704d87f780d164c3b83ccada541", "patch": "@@ -174,7 +174,7 @@ You can check out this great service at [clippy.bashy.io](https://clippy.bashy.i\n \n ## Lints\n \n-There are 175 lints included in this crate:\n+There are 176 lints included in this crate:\n \n name                                                                                                                   | default | triggers on\n -----------------------------------------------------------------------------------------------------------------------|---------|----------------------------------------------------------------------------------------------------------------------------------\n@@ -293,6 +293,7 @@ name\n [out_of_bounds_indexing](https://github.com/Manishearth/rust-clippy/wiki#out_of_bounds_indexing)                       | deny    | out of bounds constant indexing\n [overflow_check_conditional](https://github.com/Manishearth/rust-clippy/wiki#overflow_check_conditional)               | warn    | overflow checks inspired by C which are likely to panic\n [panic_params](https://github.com/Manishearth/rust-clippy/wiki#panic_params)                                           | warn    | missing parameters in `panic!` calls\n+[partialeq_ne_impl](https://github.com/Manishearth/rust-clippy/wiki#partialeq_ne_impl)                                 | warn    | re-implementing `PartialEq::ne`\n [precedence](https://github.com/Manishearth/rust-clippy/wiki#precedence)                                               | warn    | operations where precedence may be unclear\n [print_stdout](https://github.com/Manishearth/rust-clippy/wiki#print_stdout)                                           | allow   | printing on stdout\n [print_with_newline](https://github.com/Manishearth/rust-clippy/wiki#print_with_newline)                               | warn    | using `print!()` with a format string that ends in a newline"}, {"sha": "3f8385feb885f6546494027c8d5164cbb552aa21", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8664d03ec6ed7704d87f780d164c3b83ccada541/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8664d03ec6ed7704d87f780d164c3b83ccada541/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=8664d03ec6ed7704d87f780d164c3b83ccada541", "patch": "@@ -111,6 +111,7 @@ pub mod ok_if_let;\n pub mod open_options;\n pub mod overflow_check_conditional;\n pub mod panic;\n+pub mod partialeq_ne_impl;\n pub mod precedence;\n pub mod print;\n pub mod ptr;\n@@ -259,6 +260,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box missing_doc::MissingDoc::new());\n     reg.register_late_lint_pass(box ok_if_let::Pass);\n     reg.register_late_lint_pass(box if_let_redundant_pattern_matching::Pass);\n+    reg.register_late_lint_pass(box partialeq_ne_impl::Pass);\n \n     reg.register_lint_group(\"clippy_restrictions\", vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -415,6 +417,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         open_options::NONSENSICAL_OPEN_OPTIONS,\n         overflow_check_conditional::OVERFLOW_CHECK_CONDITIONAL,\n         panic::PANIC_PARAMS,\n+        partialeq_ne_impl::PARTIALEQ_NE_IMPL,\n         precedence::PRECEDENCE,\n         print::PRINT_WITH_NEWLINE,\n         ptr::CMP_NULL,"}, {"sha": "fdee5c256e191adafb272151cd2b50fc922bc263", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/8664d03ec6ed7704d87f780d164c3b83ccada541/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8664d03ec6ed7704d87f780d164c3b83ccada541/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=8664d03ec6ed7704d87f780d164c3b83ccada541", "patch": "@@ -0,0 +1,55 @@\n+use rustc::lint::*;\n+use rustc::hir::*;\n+use utils::{is_automatically_derived, span_lint};\n+\n+/// **What it does:** Checks for manual re-implementations of `PartialEq::ne`.\n+///\n+/// **Why is this bad?** `PartialEq::ne` is required to always return the\n+/// negated result of `PartialEq::eq`, which is exactly what the default\n+/// implementation does. Therefore, there should never be any need to\n+/// re-implement it.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// struct Foo;\n+///\n+/// impl PartialEq for Foo {\n+///    fn eq(&self, other: &Foo) -> bool { ... }\n+///    fn ne(&self, other: &Foo) -> bool { !(self == other) }\n+/// }\n+/// ```\n+declare_lint! {\n+    pub PARTIALEQ_NE_IMPL,\n+    Warn,\n+    \"re-implementing `PartialEq::ne`\"\n+}\n+\n+#[derive(Clone, Copy)]\n+pub struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(PARTIALEQ_NE_IMPL)\n+    }\n+}\n+\n+impl LateLintPass for Pass {\n+    fn check_item(&mut self, cx: &LateContext, item: &Item) {\n+        if_let_chain! {[\n+            let ItemImpl(_, _, _, Some(ref trait_ref), _, ref impl_items) = item.node,\n+            !is_automatically_derived(&*item.attrs),\n+            cx.tcx.expect_def(trait_ref.ref_id).def_id() == cx.tcx.lang_items.eq_trait().unwrap(),\n+        ], {\n+            for impl_item in impl_items {\n+                if &*impl_item.name.as_str() == \"ne\" {\n+                    span_lint(cx,\n+                              PARTIALEQ_NE_IMPL,\n+                              impl_item.span,\n+                              \"re-implementing `PartialEq::ne` is unnecessary\")\n+                }\n+            }\n+        }};\n+    }\n+}"}, {"sha": "f4ecdd4261a272862e502f3c649c2eceb601b416", "filename": "tests/compile-fail/partialeq_ne_impl.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8664d03ec6ed7704d87f780d164c3b83ccada541/tests%2Fcompile-fail%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8664d03ec6ed7704d87f780d164c3b83ccada541/tests%2Fcompile-fail%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpartialeq_ne_impl.rs?ref=8664d03ec6ed7704d87f780d164c3b83ccada541", "patch": "@@ -0,0 +1,15 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![deny(warnings)]\n+#![allow(dead_code)]\n+\n+struct Foo;\n+\n+impl PartialEq for Foo {\n+    fn eq(&self, _: &Foo) -> bool { true }\n+    fn ne(&self, _: &Foo) -> bool { false }\n+    //~^ ERROR re-implementing `PartialEq::ne` is unnecessary\n+}\n+\n+fn main() {}"}]}