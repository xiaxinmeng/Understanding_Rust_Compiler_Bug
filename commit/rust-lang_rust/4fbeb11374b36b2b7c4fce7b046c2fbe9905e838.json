{"sha": "4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYmViMTEzNzRiMzZiMmI3YzRmY2U3YjA0NmMyZmJlOTkwNWU4Mzg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-03-08T08:41:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-08T08:41:45Z"}, "message": "Rollup merge of #58877 - estebank:macro-borrow, r=davidtwco\n\nSuggest removal of `&` when borrowing macro and appropriate\n\nFix #58815.", "tree": {"sha": "573c781fbb83705cd9ef81f41c77e69b60149679", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/573c781fbb83705cd9ef81f41c77e69b60149679"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcgirJCRBK7hj4Ov3rIwAAdHIIAJf65Lhj0cXT1fG6ZJWYYT1n\nFGZ4vi+Qlbv1qIgsfwB20eGgF5DBoN772Ytdxd7QcsAx8PRbLR8zcHM7+4aWWbNT\nctu8Cp0VX3GB7UBhKBn2zoYzdiGAFG68VUbthx9diRMwQdsBvu7LMBen0tfLZSDV\nDADSm+5w86ehaqHKQJMTrTTJzYRyAJ0756DGbEgh+qgD45rC6DogU+33bY6sS+yO\nBI6iqtWBE6kOaY5Z3HgAAQeSQ70qOtHnRIMfYf8s9TNO8EKwshCOrypdigsi0AlB\nuZDG1FucMTHkkursXYE3NKS7APvB5U9BRW+ZhGpK9KiASVe7/LgIlKR2V1hp/dw=\n=xHBe\n-----END PGP SIGNATURE-----\n", "payload": "tree 573c781fbb83705cd9ef81f41c77e69b60149679\nparent a68f7600f40abba9fd6280ae9bbd969f8f4d6181\nparent edbbfad88f67b789bca682e4f2c4a58ac4dc81cb\nauthor Pietro Albini <pietro@pietroalbini.org> 1552034505 +0100\ncommitter GitHub <noreply@github.com> 1552034505 +0100\n\nRollup merge of #58877 - estebank:macro-borrow, r=davidtwco\n\nSuggest removal of `&` when borrowing macro and appropriate\n\nFix #58815.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "html_url": "https://github.com/rust-lang/rust/commit/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a68f7600f40abba9fd6280ae9bbd969f8f4d6181", "url": "https://api.github.com/repos/rust-lang/rust/commits/a68f7600f40abba9fd6280ae9bbd969f8f4d6181", "html_url": "https://github.com/rust-lang/rust/commit/a68f7600f40abba9fd6280ae9bbd969f8f4d6181"}, {"sha": "edbbfad88f67b789bca682e4f2c4a58ac4dc81cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/edbbfad88f67b789bca682e4f2c4a58ac4dc81cb", "html_url": "https://github.com/rust-lang/rust/commit/edbbfad88f67b789bca682e4f2c4a58ac4dc81cb"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "32ca854b2774469cf9effc8436bbbfb29a2f0189", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "patch": "@@ -367,6 +367,15 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         // Maybe remove `&`?\n                         hir::ExprKind::AddrOf(_, ref expr) => {\n                             if !cm.span_to_filename(expr.span).is_real() {\n+                                if let Ok(code) = cm.span_to_snippet(sp) {\n+                                    if code.chars().next() == Some('&') {\n+                                        return Some((\n+                                            sp,\n+                                            \"consider removing the borrow\",\n+                                            code[1..].to_string()),\n+                                        );\n+                                    }\n+                                }\n                                 return None;\n                             }\n                             if let Ok(code) = cm.span_to_snippet(expr.span) {"}, {"sha": "6a13b31fe932ff2a8636927edadd8d50a5049f04", "filename": "src/test/ui/block-result/issue-5500.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr?ref=4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "patch": "@@ -4,7 +4,10 @@ error[E0308]: mismatched types\n LL | fn main() {\n    |           - expected `()` because of default return type\n LL |     &panic!()\n-   |     ^^^^^^^^^ expected (), found reference\n+   |     ^^^^^^^^^\n+   |     |\n+   |     expected (), found reference\n+   |     help: consider removing the borrow: `panic!()`\n    |\n    = note: expected type `()`\n               found type `&_`"}, {"sha": "3457549a752392ce928ee309650deca03392297f", "filename": "src/test/ui/diverging-tuple-parts-39485.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fdiverging-tuple-parts-39485.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fdiverging-tuple-parts-39485.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdiverging-tuple-parts-39485.stderr?ref=4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "patch": "@@ -1,13 +1,19 @@\n error[E0308]: mismatched types\n   --> $DIR/diverging-tuple-parts-39485.rs:8:5\n    |\n-LL | fn g() {\n-   |        - help: try adding a return type: `-> &_`\n LL |     &panic!() //~ ERROR mismatched types\n    |     ^^^^^^^^^ expected (), found reference\n    |\n    = note: expected type `()`\n               found type `&_`\n+help: try adding a return type\n+   |\n+LL | fn g() -> &_ {\n+   |        ^^^^^\n+help: consider removing the borrow\n+   |\n+LL |     panic!() //~ ERROR mismatched types\n+   |     ^^^^^^^^\n \n error[E0308]: mismatched types\n   --> $DIR/diverging-tuple-parts-39485.rs:12:5"}, {"sha": "63930e7f787fd3f6d11abb3ee0d87c2f8c9b232f", "filename": "src/test/ui/suggestions/format-borrow.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fsuggestions%2Fformat-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fsuggestions%2Fformat-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fformat-borrow.rs?ref=4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let a: String = &String::from(\"a\");\n+    //~^ ERROR mismatched types\n+    let b: String = &format!(\"b\");\n+    //~^ ERROR mismatched types\n+}"}, {"sha": "44bb11faa7f38eab722a73a1c0f45d1a4d0f86ca", "filename": "src/test/ui/suggestions/format-borrow.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fsuggestions%2Fformat-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838/src%2Ftest%2Fui%2Fsuggestions%2Fformat-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fformat-borrow.stderr?ref=4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "patch": "@@ -0,0 +1,27 @@\n+error[E0308]: mismatched types\n+  --> $DIR/format-borrow.rs:2:21\n+   |\n+LL |     let a: String = &String::from(\"a\");\n+   |                     ^^^^^^^^^^^^^^^^^^\n+   |                     |\n+   |                     expected struct `std::string::String`, found reference\n+   |                     help: consider removing the borrow: `String::from(\"a\")`\n+   |\n+   = note: expected type `std::string::String`\n+              found type `&std::string::String`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/format-borrow.rs:4:21\n+   |\n+LL |     let b: String = &format!(\"b\");\n+   |                     ^^^^^^^^^^^^^\n+   |                     |\n+   |                     expected struct `std::string::String`, found reference\n+   |                     help: consider removing the borrow: `format!(\"b\")`\n+   |\n+   = note: expected type `std::string::String`\n+              found type `&std::string::String`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}