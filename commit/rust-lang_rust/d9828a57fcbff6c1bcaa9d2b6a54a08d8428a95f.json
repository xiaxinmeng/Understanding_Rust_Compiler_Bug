{"sha": "d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ODI4YTU3ZmNiZmY2YzFiY2FhOWQyYjZhNTRhMDhkODQyOGE5NWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-09T14:21:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-09T14:21:10Z"}, "message": "Add From should not move the cursor", "tree": {"sha": "b2cb4a30dfee7af71185dd53fa763905bed7bd35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2cb4a30dfee7af71185dd53fa763905bed7bd35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f", "html_url": "https://github.com/rust-lang/rust/commit/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5c07c2a0a1b4809c5aacef3c8e90034d00c3b03", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c07c2a0a1b4809c5aacef3c8e90034d00c3b03", "html_url": "https://github.com/rust-lang/rust/commit/c5c07c2a0a1b4809c5aacef3c8e90034d00c3b03"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "6a49b7dbd189e6d98e94c5737a7138d9d504e5a8", "filename": "crates/ra_assists/src/handlers/add_from_impl_for_enum.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs?ref=d9828a57fcbff6c1bcaa9d2b6a54a08d8428a95f", "patch": "@@ -1,8 +1,5 @@\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{\n-    ast::{self, AstNode, NameOwner},\n-    TextSize,\n-};\n+use ra_syntax::ast::{self, AstNode, NameOwner};\n use stdx::format_to;\n use test_utils::tested_by;\n \n@@ -69,7 +66,6 @@ impl From<{0}> for {1} {{\n                 variant_name\n             );\n             edit.insert(start_offset, buf);\n-            edit.set_cursor(start_offset + TextSize::of(\"\\n\\n\"));\n         },\n     )\n }\n@@ -97,19 +93,20 @@ fn existing_from_impl(\n \n #[cfg(test)]\n mod tests {\n-    use super::*;\n+    use test_utils::covers;\n \n     use crate::tests::{check_assist, check_assist_not_applicable};\n-    use test_utils::covers;\n+\n+    use super::*;\n \n     #[test]\n     fn test_add_from_impl_for_enum() {\n         check_assist(\n             add_from_impl_for_enum,\n             \"enum A { <|>One(u32) }\",\n-            r#\"enum A { One(u32) }\n+            r#\"enum A { <|>One(u32) }\n \n-<|>impl From<u32> for A {\n+impl From<u32> for A {\n     fn from(v: u32) -> Self {\n         A::One(v)\n     }\n@@ -121,10 +118,10 @@ mod tests {\n     fn test_add_from_impl_for_enum_complicated_path() {\n         check_assist(\n             add_from_impl_for_enum,\n-            \"enum A { <|>One(foo::bar::baz::Boo) }\",\n-            r#\"enum A { One(foo::bar::baz::Boo) }\n+            r#\"enum A { <|>One(foo::bar::baz::Boo) }\"#,\n+            r#\"enum A { <|>One(foo::bar::baz::Boo) }\n \n-<|>impl From<foo::bar::baz::Boo> for A {\n+impl From<foo::bar::baz::Boo> for A {\n     fn from(v: foo::bar::baz::Boo) -> Self {\n         A::One(v)\n     }\n@@ -184,9 +181,9 @@ impl From<String> for A {\n pub trait From<T> {\n     fn from(T) -> Self;\n }\"#,\n-            r#\"enum A { One(u32), Two(String), }\n+            r#\"enum A { <|>One(u32), Two(String), }\n \n-<|>impl From<u32> for A {\n+impl From<u32> for A {\n     fn from(v: u32) -> Self {\n         A::One(v)\n     }"}]}