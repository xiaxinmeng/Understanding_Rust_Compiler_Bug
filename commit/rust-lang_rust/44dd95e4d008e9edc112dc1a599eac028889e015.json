{"sha": "44dd95e4d008e9edc112dc1a599eac028889e015", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZGQ5NWU0ZDAwOGU5ZWRjMTEyZGMxYTU5OWVhYzAyODg4OWUwMTU=", "commit": {"author": {"name": "Roman Proskuryakov", "email": "humbug@deeptown.org", "date": "2020-07-05T16:06:02Z"}, "committer": {"name": "Roman Proskuryakov", "email": "humbug@deeptown.org", "date": "2020-07-05T16:06:02Z"}, "message": "Fix copypaste in test into-iter-impls-length-33 (const generic 32 -> 33)", "tree": {"sha": "6b6ebeb645b8a18f1b3e7a4df88f4abfb9db2e0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b6ebeb645b8a18f1b3e7a4df88f4abfb9db2e0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44dd95e4d008e9edc112dc1a599eac028889e015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44dd95e4d008e9edc112dc1a599eac028889e015", "html_url": "https://github.com/rust-lang/rust/commit/44dd95e4d008e9edc112dc1a599eac028889e015", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44dd95e4d008e9edc112dc1a599eac028889e015/comments", "author": {"login": "kpp", "id": 467709, "node_id": "MDQ6VXNlcjQ2NzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpp", "html_url": "https://github.com/kpp", "followers_url": "https://api.github.com/users/kpp/followers", "following_url": "https://api.github.com/users/kpp/following{/other_user}", "gists_url": "https://api.github.com/users/kpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpp/subscriptions", "organizations_url": "https://api.github.com/users/kpp/orgs", "repos_url": "https://api.github.com/users/kpp/repos", "events_url": "https://api.github.com/users/kpp/events{/privacy}", "received_events_url": "https://api.github.com/users/kpp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kpp", "id": 467709, "node_id": "MDQ6VXNlcjQ2NzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpp", "html_url": "https://github.com/kpp", "followers_url": "https://api.github.com/users/kpp/followers", "following_url": "https://api.github.com/users/kpp/following{/other_user}", "gists_url": "https://api.github.com/users/kpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpp/subscriptions", "organizations_url": "https://api.github.com/users/kpp/orgs", "repos_url": "https://api.github.com/users/kpp/repos", "events_url": "https://api.github.com/users/kpp/events{/privacy}", "received_events_url": "https://api.github.com/users/kpp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "html_url": "https://github.com/rust-lang/rust/commit/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "5503813c7aa3e0218b23640870948308f54ba5fd", "filename": "src/test/ui/const-generics/array-impls/into-iter-impls-length-33.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/44dd95e4d008e9edc112dc1a599eac028889e015/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44dd95e4d008e9edc112dc1a599eac028889e015/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Finto-iter-impls-length-33.rs?ref=44dd95e4d008e9edc112dc1a599eac028889e015", "patch": "@@ -10,31 +10,31 @@ use std::{\n };\n \n pub fn yes_iterator() -> impl Iterator<Item = i32> {\n-    IntoIter::new([0i32; 32])\n+    IntoIter::new([0i32; 33])\n }\n \n pub fn yes_double_ended_iterator() -> impl DoubleEndedIterator {\n-    IntoIter::new([0i32; 32])\n+    IntoIter::new([0i32; 33])\n }\n \n pub fn yes_exact_size_iterator() -> impl ExactSizeIterator {\n-    IntoIter::new([0i32; 32])\n+    IntoIter::new([0i32; 33])\n }\n \n pub fn yes_fused_iterator() -> impl FusedIterator {\n-    IntoIter::new([0i32; 32])\n+    IntoIter::new([0i32; 33])\n }\n \n pub fn yes_trusted_len() -> impl TrustedLen {\n-    IntoIter::new([0i32; 32])\n+    IntoIter::new([0i32; 33])\n }\n \n pub fn yes_clone() -> impl Clone {\n-    IntoIter::new([0i32; 32])\n+    IntoIter::new([0i32; 33])\n }\n \n pub fn yes_debug() -> impl Debug {\n-    IntoIter::new([0i32; 32])\n+    IntoIter::new([0i32; 33])\n }\n \n "}]}