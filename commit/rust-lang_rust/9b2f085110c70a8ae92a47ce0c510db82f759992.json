{"sha": "9b2f085110c70a8ae92a47ce0c510db82f759992", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMmYwODUxMTBjNzBhOGFlOTJhNDdjZTBjNTEwZGI4MmY3NTk5OTI=", "commit": {"author": {"name": "Lukas Lueg", "email": "lukas.lueg@gmail.com", "date": "2021-01-13T20:07:59Z"}, "committer": {"name": "Lukas Lueg", "email": "lukas.lueg@gmail.com", "date": "2021-01-13T20:07:59Z"}, "message": "Improve Iterator::intersperse_ docs", "tree": {"sha": "6eeccb33d26ef94607c2f088c02d341120bd7439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eeccb33d26ef94607c2f088c02d341120bd7439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b2f085110c70a8ae92a47ce0c510db82f759992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b2f085110c70a8ae92a47ce0c510db82f759992", "html_url": "https://github.com/rust-lang/rust/commit/9b2f085110c70a8ae92a47ce0c510db82f759992", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b2f085110c70a8ae92a47ce0c510db82f759992/comments", "author": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95289889fe4b9a69abe2963974e2df7c9a065927", "url": "https://api.github.com/repos/rust-lang/rust/commits/95289889fe4b9a69abe2963974e2df7c9a065927", "html_url": "https://github.com/rust-lang/rust/commit/95289889fe4b9a69abe2963974e2df7c9a065927"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "1d01e9b5fb7dc9533cf8eefbdf7699538ee84e09", "filename": "library/core/src/iter/adapters/intersperse.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b2f085110c70a8ae92a47ce0c510db82f759992/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fintersperse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b2f085110c70a8ae92a47ce0c510db82f759992/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fintersperse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fintersperse.rs?ref=9b2f085110c70a8ae92a47ce0c510db82f759992", "patch": "@@ -2,7 +2,7 @@ use super::Peekable;\n \n /// An iterator adapter that places a separator between all elements.\n ///\n-/// This `struct` is created by [`Iterator::intersperse`]. See it's documentation\n+/// This `struct` is created by [`Iterator::intersperse`]. See its documentation\n /// for more information.\n #[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue = \"79524\")]\n #[derive(Debug, Clone)]\n@@ -59,7 +59,7 @@ where\n \n /// An iterator adapter that places a separator between all elements.\n ///\n-/// This `struct` is created by [`Iterator::intersperse_with`]. See it's\n+/// This `struct` is created by [`Iterator::intersperse_with`]. See its\n /// documentation for more information.\n #[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue = \"79524\")]\n pub struct IntersperseWith<I, G>"}, {"sha": "732d465fcaeb359145d995b0758e794e22202b6a", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9b2f085110c70a8ae92a47ce0c510db82f759992/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b2f085110c70a8ae92a47ce0c510db82f759992/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=9b2f085110c70a8ae92a47ce0c510db82f759992", "patch": "@@ -571,16 +571,22 @@ pub trait Iterator {\n \n     /// Places a copy of `separator` between all elements.\n     ///\n+    /// In case the separator does not implement [`Clone`] or needs to be\n+    /// computed every time, use [`intersperse_with`].\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n     ///\n     /// ```\n     /// #![feature(iter_intersperse)]\n     ///\n-    /// let hello = [\"Hello\", \"World\"].iter().copied().intersperse(\" \").collect::<String>();\n-    /// assert_eq!(hello, \"Hello World\");\n+    /// let hello = [\"Hello\", \"World\", \"!\"].iter().copied().intersperse(\" \").collect::<String>();\n+    /// assert_eq!(hello, \"Hello World !\");\n     /// ```\n+    ///\n+    /// [`Clone`]: crate::clone::Clone\n+    /// [`intersperse_with`]: Iterator::intersperse_with\n     #[inline]\n     #[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue = \"79524\")]\n     fn intersperse(self, separator: Self::Item) -> Intersperse<Self>\n@@ -600,11 +606,13 @@ pub trait Iterator {\n     /// ```\n     /// #![feature(iter_intersperse)]\n     ///\n-    /// let src = [\"Hello\", \"to\", \"all\", \"people\"].iter().copied();\n-    /// let mut separator = [\" \u2764\ufe0f \", \" \ud83d\ude00 \"].iter().copied().cycle();\n+    /// let src = [\"Hello\", \"to\", \"all\", \"people\", \"!!\"].iter().copied();\n+    ///\n+    /// let mut happy_emojis = [\" \u2764\ufe0f \", \" \ud83d\ude00 \"].iter().copied();\n+    /// let separator = || happy_emojis.next().unwrap_or(\" \ud83e\udd80 \");\n     ///\n-    /// let result = src.intersperse_with(|| separator.next().unwrap()).collect::<String>();\n-    /// assert_eq!(result, \"Hello \u2764\ufe0f to \ud83d\ude00 all \u2764\ufe0f people\");\n+    /// let result = src.intersperse_with(separator).collect::<String>();\n+    /// assert_eq!(result, \"Hello \u2764\ufe0f to \ud83d\ude00 all \ud83e\udd80 people \ud83e\udd80 !!\");\n     /// ```\n     #[inline]\n     #[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue = \"79524\")]"}]}