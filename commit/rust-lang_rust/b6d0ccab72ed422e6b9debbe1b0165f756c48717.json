{"sha": "b6d0ccab72ed422e6b9debbe1b0165f756c48717", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZDBjY2FiNzJlZDQyMmU2YjlkZWJiZTFiMDE2NWY3NTZjNDg3MTc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-09-17T15:41:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T15:41:12Z"}, "message": "Rollup merge of #86422 - JohnTitor:clearer-parens-err-for-loop, r=estebank\n\nEmit clearer diagnostics for parens around `for` loop heads\n\nFixes #63113\nr? `@estebank`", "tree": {"sha": "bcb67864df7038e65eb85252edf5aba9b2e1904e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcb67864df7038e65eb85252edf5aba9b2e1904e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6d0ccab72ed422e6b9debbe1b0165f756c48717", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRLcZCRBK7hj4Ov3rIwAAfoEIACZRqZAq3/mlgOr0IWT/4+rS\nAOP6CDpJU7pvFG4Ju4+TyGIxCOpNRoEKkk8A4+8P4DcKDG39pJl32oLmQbm6kfYp\nWx/KhzYYYsOd1uMi534/dQTfRZ1QAx0yKMBde2rIe69e8jz8d/BCVJZsLTSXAr/k\nNa574urK7UzlsN5iglrYLlFysEmwS+inP0P4HW6W7mb8K6sOI6OSq2pzz82hvDGY\nMRIH6zSO88p+A5WimSApnbSIN1J3y6rgYhdIZ27OqVE250u+HhUFKeFxkkAx+Jp8\nP0Q7JQJgvNXKpIzop0a4uR7rlOEx+Y7XLGxnEW8B3HEBM6IoZOJr36AmE0CcB5c=\n=3Tsv\n-----END PGP SIGNATURE-----\n", "payload": "tree bcb67864df7038e65eb85252edf5aba9b2e1904e\nparent e0c38af27cb5f6f961809601b717d6afc3b190ee\nparent e9bf73cb2b025e188787683f1423177a9102d260\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1631893272 +0200\ncommitter GitHub <noreply@github.com> 1631893272 +0200\n\nRollup merge of #86422 - JohnTitor:clearer-parens-err-for-loop, r=estebank\n\nEmit clearer diagnostics for parens around `for` loop heads\n\nFixes #63113\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6d0ccab72ed422e6b9debbe1b0165f756c48717", "html_url": "https://github.com/rust-lang/rust/commit/b6d0ccab72ed422e6b9debbe1b0165f756c48717", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6d0ccab72ed422e6b9debbe1b0165f756c48717/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0c38af27cb5f6f961809601b717d6afc3b190ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c38af27cb5f6f961809601b717d6afc3b190ee", "html_url": "https://github.com/rust-lang/rust/commit/e0c38af27cb5f6f961809601b717d6afc3b190ee"}, {"sha": "e9bf73cb2b025e188787683f1423177a9102d260", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bf73cb2b025e188787683f1423177a9102d260", "html_url": "https://github.com/rust-lang/rust/commit/e9bf73cb2b025e188787683f1423177a9102d260"}], "stats": {"total": 50, "additions": 24, "deletions": 26}, "files": [{"sha": "88b5f89f6809f21f7a0f63ee2a3b96883fc2bdda", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b6d0ccab72ed422e6b9debbe1b0165f756c48717/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6d0ccab72ed422e6b9debbe1b0165f756c48717/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=b6d0ccab72ed422e6b9debbe1b0165f756c48717", "patch": "@@ -1334,30 +1334,25 @@ impl<'a> Parser<'a> {\n     pub(super) fn recover_parens_around_for_head(\n         &mut self,\n         pat: P<Pat>,\n-        expr: &Expr,\n         begin_paren: Option<Span>,\n     ) -> P<Pat> {\n         match (&self.token.kind, begin_paren) {\n             (token::CloseDelim(token::Paren), Some(begin_par_sp)) => {\n                 self.bump();\n \n-                let pat_str = self\n-                    // Remove the `(` from the span of the pattern:\n-                    .span_to_snippet(pat.span.trim_start(begin_par_sp).unwrap())\n-                    .unwrap_or_else(|_| pprust::pat_to_string(&pat));\n-\n-                self.struct_span_err(self.prev_token.span, \"unexpected closing `)`\")\n-                    .span_label(begin_par_sp, \"opening `(`\")\n-                    .span_suggestion(\n-                        begin_par_sp.to(self.prev_token.span),\n-                        \"remove parenthesis in `for` loop\",\n-                        format!(\"{} in {}\", pat_str, pprust::expr_to_string(&expr)),\n-                        // With e.g. `for (x) in y)` this would replace `(x) in y)`\n-                        // with `x) in y)` which is syntactically invalid.\n-                        // However, this is prevented before we get here.\n-                        Applicability::MachineApplicable,\n-                    )\n-                    .emit();\n+                self.struct_span_err(\n+                    MultiSpan::from_spans(vec![begin_par_sp, self.prev_token.span]),\n+                    \"unexpected parenthesis surrounding `for` loop head\",\n+                )\n+                .multipart_suggestion(\n+                    \"remove parenthesis in `for` loop\",\n+                    vec![(begin_par_sp, String::new()), (self.prev_token.span, String::new())],\n+                    // With e.g. `for (x) in y)` this would replace `(x) in y)`\n+                    // with `x) in y)` which is syntactically invalid.\n+                    // However, this is prevented before we get here.\n+                    Applicability::MachineApplicable,\n+                )\n+                .emit();\n \n                 // Unwrap `(pat)` into `pat` to avoid the `unused_parens` lint.\n                 pat.and_then(|pat| match pat.kind {"}, {"sha": "d8f9fc9179e890e9a6a012e7a81f16577184882c", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6d0ccab72ed422e6b9debbe1b0165f756c48717/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6d0ccab72ed422e6b9debbe1b0165f756c48717/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=b6d0ccab72ed422e6b9debbe1b0165f756c48717", "patch": "@@ -2042,7 +2042,7 @@ impl<'a> Parser<'a> {\n         self.check_for_for_in_in_typo(self.prev_token.span);\n         let expr = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n \n-        let pat = self.recover_parens_around_for_head(pat, &expr, begin_paren);\n+        let pat = self.recover_parens_around_for_head(pat, begin_paren);\n \n         let (iattrs, loop_block) = self.parse_inner_attrs_and_block()?;\n         attrs.extend(iattrs);"}, {"sha": "8080dbc332ae7146d13648157bc3e64fde3f2f77", "filename": "src/test/ui/parser/recover-for-loop-parens-around-head.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6d0ccab72ed422e6b9debbe1b0165f756c48717/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6d0ccab72ed422e6b9debbe1b0165f756c48717/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.rs?ref=b6d0ccab72ed422e6b9debbe1b0165f756c48717", "patch": "@@ -9,7 +9,7 @@ fn main() {\n \n     for ( elem in vec ) {\n         //~^ ERROR expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n-        //~| ERROR unexpected closing `)`\n+        //~| ERROR unexpected parenthesis surrounding `for` loop head\n         const RECOVERY_WITNESS: () = 0; //~ ERROR mismatched types\n     }\n }"}, {"sha": "21991348327b36e99d5f4c67b9aa5e2057b91a91", "filename": "src/test/ui/parser/recover-for-loop-parens-around-head.stderr", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b6d0ccab72ed422e6b9debbe1b0165f756c48717/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6d0ccab72ed422e6b9debbe1b0165f756c48717/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr?ref=b6d0ccab72ed422e6b9debbe1b0165f756c48717", "patch": "@@ -4,14 +4,17 @@ error: expected one of `)`, `,`, `@`, or `|`, found keyword `in`\n LL |     for ( elem in vec ) {\n    |                ^^ expected one of `)`, `,`, `@`, or `|`\n \n-error: unexpected closing `)`\n-  --> $DIR/recover-for-loop-parens-around-head.rs:10:23\n+error: unexpected parenthesis surrounding `for` loop head\n+  --> $DIR/recover-for-loop-parens-around-head.rs:10:9\n    |\n LL |     for ( elem in vec ) {\n-   |         --------------^\n-   |         |\n-   |         opening `(`\n-   |         help: remove parenthesis in `for` loop: `elem in vec`\n+   |         ^             ^\n+   |\n+help: remove parenthesis in `for` loop\n+   |\n+LL -     for ( elem in vec ) {\n+LL +     for  elem in vec  {\n+   | \n \n error[E0308]: mismatched types\n   --> $DIR/recover-for-loop-parens-around-head.rs:13:38"}]}