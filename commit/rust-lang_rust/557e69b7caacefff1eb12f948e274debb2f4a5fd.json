{"sha": "557e69b7caacefff1eb12f948e274debb2f4a5fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1N2U2OWI3Y2FhY2VmZmYxZWIxMmY5NDhlMjc0ZGViYjJmNGE1ZmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-08-15T20:44:22Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-09-23T16:34:44Z"}, "message": "bootstrap: Delete handling of `RUSTC_METADATA_SUFFIX`\n\nThis is already handled by `__CARGO_DEFAULT_LIB_METADATA` so there's no\nneed to doubly do it.", "tree": {"sha": "7d18f8398dc773e99a127b11e4a43ac6dc5e3596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d18f8398dc773e99a127b11e4a43ac6dc5e3596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/557e69b7caacefff1eb12f948e274debb2f4a5fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/557e69b7caacefff1eb12f948e274debb2f4a5fd", "html_url": "https://github.com/rust-lang/rust/commit/557e69b7caacefff1eb12f948e274debb2f4a5fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/557e69b7caacefff1eb12f948e274debb2f4a5fd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6c87aba328f5d648786237da70fd227642b9c20", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c87aba328f5d648786237da70fd227642b9c20", "html_url": "https://github.com/rust-lang/rust/commit/f6c87aba328f5d648786237da70fd227642b9c20"}], "stats": {"total": 36, "additions": 1, "deletions": 35}, "files": [{"sha": "e6102de18748198828fe2e75df99643ebd8a97ce", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/557e69b7caacefff1eb12f948e274debb2f4a5fd/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557e69b7caacefff1eb12f948e274debb2f4a5fd/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=557e69b7caacefff1eb12f948e274debb2f4a5fd", "patch": "@@ -24,23 +24,7 @@ use std::str::FromStr;\n use std::time::Instant;\n \n fn main() {\n-    let mut args = env::args_os().skip(1).collect::<Vec<_>>();\n-\n-    // Append metadata suffix for internal crates. See the corresponding entry\n-    // in bootstrap/lib.rs for details.\n-    if let Ok(s) = env::var(\"RUSTC_METADATA_SUFFIX\") {\n-        for i in 1..args.len() {\n-            // Dirty code for borrowing issues\n-            let mut new = None;\n-            if let Some(current_as_str) = args[i].to_str() {\n-                if (&*args[i - 1] == \"-C\" && current_as_str.starts_with(\"metadata\")) ||\n-                    current_as_str.starts_with(\"-Cmetadata\") {\n-                    new = Some(format!(\"{}-{}\", current_as_str, s));\n-                }\n-            }\n-            if let Some(new) = new { args[i] = new.into(); }\n-        }\n-    }\n+    let args = env::args_os().skip(1).collect::<Vec<_>>();\n \n     // Detect whether or not we're a build script depending on whether --target\n     // is passed (a bit janky...)"}, {"sha": "6323fa94ccfc3ae6be87115605e6f44b15585684", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/557e69b7caacefff1eb12f948e274debb2f4a5fd/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557e69b7caacefff1eb12f948e274debb2f4a5fd/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=557e69b7caacefff1eb12f948e274debb2f4a5fd", "patch": "@@ -939,24 +939,6 @@ impl<'a> Builder<'a> {\n \n         if !mode.is_tool() {\n             cargo.env(\"RUSTC_FORCE_UNSTABLE\", \"1\");\n-\n-            // Currently the compiler depends on crates from crates.io, and\n-            // then other crates can depend on the compiler (e.g., proc-macro\n-            // crates). Let's say, for example that rustc itself depends on the\n-            // bitflags crate. If an external crate then depends on the\n-            // bitflags crate as well, we need to make sure they don't\n-            // conflict, even if they pick the same version of bitflags. We'll\n-            // want to make sure that e.g., a plugin and rustc each get their\n-            // own copy of bitflags.\n-\n-            // Cargo ensures that this works in general through the -C metadata\n-            // flag. This flag will frob the symbols in the binary to make sure\n-            // they're different, even though the source code is the exact\n-            // same. To solve this problem for the compiler we extend Cargo's\n-            // already-passed -C metadata flag with our own. Our rustc.rs\n-            // wrapper around the actual rustc will detect -C metadata being\n-            // passed and frob it with this extra string we're passing in.\n-            cargo.env(\"RUSTC_METADATA_SUFFIX\", \"rustc\");\n         }\n \n         if let Some(x) = self.crt_static(target) {"}]}