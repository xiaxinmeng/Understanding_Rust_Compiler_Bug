{"sha": "bb81f9bdec4c4541c68673b3d01771793465e16e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiODFmOWJkZWM0YzQ1NDFjNjg2NzNiM2QwMTc3MTc5MzQ2NWUxNmU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-01-26T14:55:12Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:11Z"}, "message": "only export the two check* functions from check_match", "tree": {"sha": "2f9a6778853f5765e9da9c1b2a4754d65f94fe4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f9a6778853f5765e9da9c1b2a4754d65f94fe4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb81f9bdec4c4541c68673b3d01771793465e16e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53MACgkQpp+NIls6\n19n+OBAArLamON9o9EYIMm+JKLzAaJ5ghqnE4h1GBSOaWWIc+Wuxb5m78DTQI7Af\nslLbx9rTYD+/TaP6yYVSdhFsbXD5ji3sjol9ZfuML2d+JlRTWk06ETtmhGadbTGX\naQu6mHZ44iUrDwHfQIFqYQj2IpNGa3VX+/t3lsglNG93GSCzlPVF331i3KKxhc6c\nnKI65VPjXz4NteJlvH3GIrdOSUFgLkIA7djpxkobwx6tARWtsToyMl5/2GUQoB8q\nQVwxW2aNKy5KUMtuE+uoLvvS/ie/4PntcDf+wDtNEBMbqdEwI/nrOY4eiSOu5/ZB\n7nqjhc2pJsHVQf4XThF5Oof8/2WDoQlnfb3uWw1G7PCY4LDgJPtCWeWTJ4nsTR45\nbzolUg3w61JUoxTFqdrMZUxNmyAA0SKpRYpgg2HnM7PVLwjzpPETQmMg+fmz4Gc5\nLKOsMLodkxLEayogeYEf4Kh8z41hQdHbpxW0GjqNqlj/hTAurvgbbaKwlyNspaqb\nGaeCuuSNn9NFelz/wmDi6xXeEDLSzI0hlRU8f+GdJHbxEKvnVOP9kTVnQJuvuz7t\ndM3iOq9IEzAWzA15L0eF0H6V2xwGjjuBUxVIwdxmVb5YdGBAXgkcNqdbvEGtTqFs\naufPPmnOgRZehh6JKNVhIraLEm287/MOcsZMgBFX8iHNVXiRAO0=\n=b9Xb\n-----END PGP SIGNATURE-----", "payload": "tree 2f9a6778853f5765e9da9c1b2a4754d65f94fe4b\nparent 1543367624ac1a42f2dd4ad55fb54edaf4e0127a\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1516978512 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494451 +0100\n\nonly export the two check* functions from check_match\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb81f9bdec4c4541c68673b3d01771793465e16e", "html_url": "https://github.com/rust-lang/rust/commit/bb81f9bdec4c4541c68673b3d01771793465e16e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb81f9bdec4c4541c68673b3d01771793465e16e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1543367624ac1a42f2dd4ad55fb54edaf4e0127a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1543367624ac1a42f2dd4ad55fb54edaf4e0127a", "html_url": "https://github.com/rust-lang/rust/commit/1543367624ac1a42f2dd4ad55fb54edaf4e0127a"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "f6ceaba29ac68cba6bbbf4744ccc2e1809ef7f0b", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb81f9bdec4c4541c68673b3d01771793465e16e/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb81f9bdec4c4541c68673b3d01771793465e16e/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=bb81f9bdec4c4541c68673b3d01771793465e16e", "patch": "@@ -81,7 +81,7 @@ pub fn provide(providers: &mut Providers) {\n     shim::provide(providers);\n     transform::provide(providers);\n     providers.const_eval = interpret::const_eval_provider;\n-    providers.check_match = pattern::check_match::check_match;\n+    providers.check_match = pattern::check_match;\n }\n \n __build_diagnostic_array! { librustc_mir, DIAGNOSTICS }"}, {"sha": "c99dc4a7658d9c413b92fda85e7dfac9b211a7c6", "filename": "src/librustc_mir/pattern/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb81f9bdec4c4541c68673b3d01771793465e16e/src%2Flibrustc_mir%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb81f9bdec4c4541c68673b3d01771793465e16e/src%2Flibrustc_mir%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fpattern%2Fmod.rs?ref=bb81f9bdec4c4541c68673b3d01771793465e16e", "patch": "@@ -11,7 +11,8 @@\n //! constant evaluation on the HIR and code to validate patterns/matches\n \n mod _match;\n-pub(crate) mod check_match;\n+mod check_match;\n pub(crate) mod pattern;\n \n pub use self::check_match::check_crate;\n+pub(crate) use self::check_match::check_match;"}]}