{"sha": "9c1dea5eb247c505ff050b6cf0aa13d260b872e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMWRlYTVlYjI0N2M1MDVmZjA1MGI2Y2YwYWExM2QyNjBiODcyZTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-07-18T22:34:12Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-07-18T23:22:38Z"}, "message": "remove out of date text from tutorial regarding iface-less impls", "tree": {"sha": "b686d53ff8b1167a1e8acf73cb68c48b83a26e9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b686d53ff8b1167a1e8acf73cb68c48b83a26e9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c1dea5eb247c505ff050b6cf0aa13d260b872e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c1dea5eb247c505ff050b6cf0aa13d260b872e5", "html_url": "https://github.com/rust-lang/rust/commit/9c1dea5eb247c505ff050b6cf0aa13d260b872e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c1dea5eb247c505ff050b6cf0aa13d260b872e5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac5b4a86fa37d2b2c17ef5ffdb6e521630ea4ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac5b4a86fa37d2b2c17ef5ffdb6e521630ea4ac", "html_url": "https://github.com/rust-lang/rust/commit/3ac5b4a86fa37d2b2c17ef5ffdb6e521630ea4ac"}], "stats": {"total": 30, "additions": 7, "deletions": 23}, "files": [{"sha": "80c39ded41cbe758dcc853d837074ef9d5a3556a", "filename": "doc/tutorial.md", "status": "modified", "additions": 7, "deletions": 23, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9c1dea5eb247c505ff050b6cf0aa13d260b872e5/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/9c1dea5eb247c505ff050b6cf0aa13d260b872e5/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=9c1dea5eb247c505ff050b6cf0aa13d260b872e5", "patch": "@@ -485,7 +485,7 @@ and function signatures in the surrounding program.  For example, here\n the type of `x` is inferred to be `u16` because it is passed to a\n function that takes a `u16` argument:\n \n-~~~~~\n+~~~~\n let x = 3;\n \n fn identity_u16(n: u16) -> u16 { n }\n@@ -497,7 +497,7 @@ On the other hand, if the program gives conflicting information about\n what the type of the unsuffixed literal should be, you'll get an error\n message.\n \n-~~~~~{.xfail-test}\n+~~~~{.xfail-test}\n let x = 3;\n let y: i32 = 3;\n \n@@ -2572,27 +2572,11 @@ more expensive than statically resolved method calls.\n \n If you only intend to use an implementation for static overloading,\n and there is no interface available that it conforms to, you are free\n-to leave off the `of` clause.\n-\n-~~~~\n-# type currency = ();\n-# fn mk_currency(x: int, s: ~str) {}\n-impl int_util for int {\n-    fn times(b: fn(int)) {\n-        let mut i = 0;\n-        while i < self { b(i); i += 1; }\n-    }\n-    fn dollars() -> currency {\n-        mk_currency(self, ~\"USD\")\n-    }\n-}\n-~~~~\n-\n-This allows cutesy things like `send_payment(10.dollars())`. And the\n-nice thing is that it's fully scoped, so the uneasy feeling that\n-anybody with experience in object-oriented languages (with the\n-possible exception of Rubyists) gets at the sight of such things is\n-not justified. It's harmless!\n+to leave off the `of` clause.  However, this is only possible when you\n+are defining an implementation in the same module as the receiver\n+type, and the receiver type is a named type (i.e., an enum or a\n+class); [single-variant enums](#single_variant_enum) are a common\n+choice.\n \n # Interacting with foreign code\n "}]}