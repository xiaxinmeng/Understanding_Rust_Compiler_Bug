{"sha": "e3ca1c2fcac616d796c648b87bddd5acfb11bdda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzY2ExYzJmY2FjNjE2ZDc5NmM2NDhiODdiZGRkNWFjZmIxMWJkZGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-07T22:00:45Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-11T21:55:24Z"}, "message": "str -- borrow fields of self for use in closure since self.iter is borrowed", "tree": {"sha": "de9bf785ffa440f33828d360c8b724934f066599", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de9bf785ffa440f33828d360c8b724934f066599"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3ca1c2fcac616d796c648b87bddd5acfb11bdda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ca1c2fcac616d796c648b87bddd5acfb11bdda", "html_url": "https://github.com/rust-lang/rust/commit/e3ca1c2fcac616d796c648b87bddd5acfb11bdda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3ca1c2fcac616d796c648b87bddd5acfb11bdda/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0ac40a243b1385ecf0bc25505fa3e65f32013c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ac40a243b1385ecf0bc25505fa3e65f32013c3", "html_url": "https://github.com/rust-lang/rust/commit/b0ac40a243b1385ecf0bc25505fa3e65f32013c3"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "bc5991c6eebd01b647cc3631ae1b373b9b25ef46", "filename": "src/libstd/str.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e3ca1c2fcac616d796c648b87bddd5acfb11bdda/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3ca1c2fcac616d796c648b87bddd5acfb11bdda/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=e3ca1c2fcac616d796c648b87bddd5acfb11bdda", "patch": "@@ -625,15 +625,17 @@ impl<'a> Iterator<char> for Normalizations<'a> {\n \n         if !self.sorted {\n             for ch in self.iter {\n+                let buffer = &mut self.buffer;\n+                let sorted = &mut self.sorted;\n                 decomposer(ch, |d| {\n                     let class = canonical_combining_class(d);\n-                    if class == 0 && !self.sorted {\n-                        canonical_sort(self.buffer);\n-                        self.sorted = true;\n+                    if class == 0 && !*sorted {\n+                        canonical_sort(*buffer);\n+                        *sorted = true;\n                     }\n-                    self.buffer.push((d, class));\n+                    buffer.push((d, class));\n                 });\n-                if self.sorted { break }\n+                if *sorted { break }\n             }\n         }\n "}]}