{"sha": "1386420cad0ed926de268dff0648a815c317c032", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzODY0MjBjYWQwZWQ5MjZkZTI2OGRmZjA2NDhhODE1YzMxN2MwMzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T01:25:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T16:37:00Z"}, "message": "Move used_crate_files from session to cstore", "tree": {"sha": "5d37dbaea462ea7c72820416e405fdb70df1d86e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d37dbaea462ea7c72820416e405fdb70df1d86e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1386420cad0ed926de268dff0648a815c317c032", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1386420cad0ed926de268dff0648a815c317c032", "html_url": "https://github.com/rust-lang/rust/commit/1386420cad0ed926de268dff0648a815c317c032", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1386420cad0ed926de268dff0648a815c317c032/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82983e5005956b9f08151bdaa8c8a2e5ddbb058f", "url": "https://api.github.com/repos/rust-lang/rust/commits/82983e5005956b9f08151bdaa8c8a2e5ddbb058f", "html_url": "https://github.com/rust-lang/rust/commit/82983e5005956b9f08151bdaa8c8a2e5ddbb058f"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "60ab1c741a564af5c4d4c11d86236c15eeed7d20", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=1386420cad0ed926de268dff0648a815c317c032", "patch": "@@ -2,6 +2,7 @@\n \n // -*- rust -*-\n import metadata::creader;\n+import metadata::cstore;\n import syntax::parse::parser;\n import syntax::parse::token;\n import syntax::ast;\n@@ -352,8 +353,8 @@ fn build_session_options(str binary, getopts::match match, str binary_dir) ->\n \n fn build_session(@session::options sopts) -> session::session {\n     auto target_cfg = build_target_config();\n-    auto cstore = metadata::cstore::mk_cstore();\n-    ret session::session(target_cfg, sopts, cstore, [],\n+    auto cstore = cstore::mk_cstore();\n+    ret session::session(target_cfg, sopts, cstore,\n                          [], [], codemap::new_codemap(), 0u);\n }\n \n@@ -516,7 +517,7 @@ fn main(vec[str] args) {\n         };\n     }\n \n-    for (str cratepath in sess.get_used_crate_files()) {\n+    for (str cratepath in cstore::get_used_crate_files(sess.get_cstore())) {\n         auto dir = fs::dirname(cratepath);\n         if (dir != \"\") {\n             gcc_args += [\"-L\" + dir];"}, {"sha": "76429a4f13a99cf2b48db3eb870ad5758f6e3c77", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=1386420cad0ed926de268dff0648a815c317c032", "patch": "@@ -46,7 +46,6 @@ type crate_metadata = rec(str name, vec[u8] data);\n obj session(@config targ_cfg,\n             @options opts,\n             metadata::cstore::cstore cstore,\n-            mutable vec[str] used_crate_files,\n             mutable vec[str] used_libraries,\n             mutable vec[str] used_link_args,\n             codemap::codemap cm,\n@@ -123,19 +122,6 @@ obj session(@config targ_cfg,\n     fn get_used_libraries() -> vec[str] {\n        ret used_libraries;\n     }\n-    fn add_used_crate_file(&str lib) {\n-        // A program has a small number of crates, so a vector is probably\n-        // a good data structure in here.\n-        for (str l in used_crate_files) {\n-            if (l == lib) {\n-                ret;\n-            }\n-        }\n-        used_crate_files += [lib];\n-    }\n-    fn get_used_crate_files() -> vec[str] {\n-       ret used_crate_files;\n-    }\n     fn get_codemap() -> codemap::codemap { ret cm; }\n     fn lookup_pos(uint pos) -> codemap::loc {\n         ret codemap::lookup_pos(cm, pos);"}, {"sha": "f440773a11707f2083713d431c254bdc7dc54098", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=1386420cad0ed926de268dff0648a815c317c032", "patch": "@@ -138,9 +138,10 @@ fn load_library_crate(&session::session sess, span span, int cnum,\n                       &vec[str] library_search_paths) {\n     alt (find_library_crate(sess, ident, metas, library_search_paths)) {\n         case (some(?t)) {\n-            cstore::set_crate_data(sess.get_cstore(), cnum,\n+            auto cstore = sess.get_cstore();\n+            cstore::set_crate_data(cstore, cnum,\n                                    rec(name=ident, data=t._1));\n-            sess.add_used_crate_file(t._0);\n+            cstore::add_used_crate_file(cstore, t._0);\n             ret;\n         }\n         case (_) { }"}, {"sha": "e3ff7757bcba9519b3385cf98ced1761fdfdbb61", "filename": "src/comp/metadata/cstore.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1386420cad0ed926de268dff0648a815c317c032/src%2Fcomp%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcstore.rs?ref=1386420cad0ed926de268dff0648a815c317c032", "patch": "@@ -1,18 +1,19 @@\n import std::map;\n+import std::vec;\n \n type crate_metadata = rec(str name, vec[u8] data);\n \n type cstore = @rec(map::hashmap[int, crate_metadata] metas,\n-                   vec[str] used_crate_files,\n-                   vec[str] used_libraries,\n-                   vec[str] used_link_args);\n+                   mutable vec[str] used_crate_files,\n+                   mutable vec[str] used_libraries,\n+                   mutable vec[str] used_link_args);\n \n fn mk_cstore() -> cstore {\n     auto meta_cache = map::new_int_hash[crate_metadata]();\n     ret @rec(metas = meta_cache,\n-             used_crate_files = [],\n-             used_libraries = [],\n-             used_link_args = []);\n+             mutable used_crate_files = [],\n+             mutable used_libraries = [],\n+             mutable used_link_args = []);\n }\n \n fn get_crate_data(&cstore cstore, int cnum) -> crate_metadata {\n@@ -27,6 +28,16 @@ fn have_crate_data(&cstore cstore, int cnum) -> bool {\n     ret cstore.metas.contains_key(cnum);\n }\n \n+fn add_used_crate_file(&cstore cstore, &str lib) {\n+    if (!vec::member(lib, cstore.used_crate_files)) {\n+        cstore.used_crate_files += [lib];\n+    }\n+}\n+\n+fn get_used_crate_files(&cstore cstore) -> vec[str] {\n+    ret cstore.used_crate_files;\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}]}