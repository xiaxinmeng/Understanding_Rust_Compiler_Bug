{"sha": "7a6db3f982cea9c5c1ed9921358988c1180851dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNmRiM2Y5ODJjZWE5YzVjMWVkOTkyMTM1ODk4OGMxMTgwODUxZGM=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-02-14T13:14:59Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-02-14T13:14:59Z"}, "message": "Remove DVec from syntax::parse", "tree": {"sha": "3f6f2450dd82b900cebb48e3ad8311e614aba3a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f6f2450dd82b900cebb48e3ad8311e614aba3a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a6db3f982cea9c5c1ed9921358988c1180851dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6db3f982cea9c5c1ed9921358988c1180851dc", "html_url": "https://github.com/rust-lang/rust/commit/7a6db3f982cea9c5c1ed9921358988c1180851dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a6db3f982cea9c5c1ed9921358988c1180851dc/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6efa3543a8b38f0dcbe89e7bf6d14f571bad46ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/6efa3543a8b38f0dcbe89e7bf6d14f571bad46ac", "html_url": "https://github.com/rust-lang/rust/commit/6efa3543a8b38f0dcbe89e7bf6d14f571bad46ac"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "84d6ebd83c7cd81dbab77ac1610d87453b6eaab6", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a6db3f982cea9c5c1ed9921358988c1180851dc/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6db3f982cea9c5c1ed9921358988c1180851dc/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=7a6db3f982cea9c5c1ed9921358988c1180851dc", "patch": "@@ -227,12 +227,11 @@ mod test {\n     use super::*;\n     use std::serialize::Encodable;\n     use std;\n-    use core::dvec;\n     use core::str;\n     use util::testing::*;\n \n     #[test] fn to_json_str (val: Encodable<std::json::Encoder>) -> ~str {\n-        let bw = @io::BytesWriter {bytes: dvec::DVec(), pos: 0};\n+        let bw = @io::BytesWriter();\n         val.encode(~std::json::Encoder(bw as io::Writer));\n         str::from_bytes(bw.bytes.data)\n     }"}, {"sha": "c9ca28768db4650be94fb651757428c999e29bb0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7a6db3f982cea9c5c1ed9921358988c1180851dc/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6db3f982cea9c5c1ed9921358988c1180851dc/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7a6db3f982cea9c5c1ed9921358988c1180851dc", "patch": "@@ -84,8 +84,6 @@ use print::pprust::expr_to_str;\n use util::interner::Interner;\n \n use core::cmp;\n-use core::dvec::DVec;\n-use core::dvec;\n use core::either::{Either, Left, Right};\n use core::either;\n use core::result::Result;\n@@ -1323,11 +1321,11 @@ pub impl Parser {\n     }\n \n     fn parse_all_token_trees() -> ~[token_tree] {\n-        let tts = DVec();\n+        let mut tts = ~[];\n         while self.token != token::EOF {\n             tts.push(self.parse_token_tree());\n         }\n-        tts.get()\n+        tts\n     }\n \n     fn parse_matchers() -> ~[matcher] {\n@@ -3954,7 +3952,7 @@ pub impl Parser {\n             VIEW_ITEMS_AND_ITEMS_ALLOWED | IMPORTS_AND_ITEMS_ALLOWED => false\n         };\n \n-        let (view_items, items, foreign_items) = (DVec(), DVec(), DVec());\n+        let mut (view_items, items, foreign_items) = (~[], ~[], ~[]);\n         loop {\n             match self.parse_item_or_view_item(attrs, items_allowed,\n                                                foreign_items_allowed,\n@@ -3986,9 +3984,9 @@ pub impl Parser {\n         }\n \n         {attrs_remaining: attrs,\n-         view_items: dvec::unwrap(move view_items),\n-         items: dvec::unwrap(move items),\n-         foreign_items: dvec::unwrap(move foreign_items)}\n+         view_items: view_items,\n+         items: items,\n+         foreign_items: foreign_items}\n     }\n \n     // Parses a source module as a crate"}]}