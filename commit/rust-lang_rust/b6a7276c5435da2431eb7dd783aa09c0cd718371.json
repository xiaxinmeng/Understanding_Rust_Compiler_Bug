{"sha": "b6a7276c5435da2431eb7dd783aa09c0cd718371", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2YTcyNzZjNTQzNWRhMjQzMWViN2RkNzgzYWEwOWMwY2Q3MTgzNzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-19T18:03:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-19T18:03:56Z"}, "message": "Merge #8586\n\n8586: Replace SyntaxRewriter usage with ted in eager::eager_macro_recur r=Veykril a=Veykril\n\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "45a01bb69aad5cd74a330f560d22ee11f1a31d18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45a01bb69aad5cd74a330f560d22ee11f1a31d18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6a7276c5435da2431eb7dd783aa09c0cd718371", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgfcYMCRBK7hj4Ov3rIwAAUNYIAGetukDlsH7NUujMlqPTzFv3\nVpy7ldejVQdth49wfX1cdBPxKjZWBNS5wAVGU4+PIZidIsDrxCWD35rW23boGCBt\naxiTsEGbDwYqXLXllOg4+LQaTeaSUFcTGNJf0OXIUM25W1fF7jBnMMLP7IJlG66I\n+EpRi+iI/M/6qORnS6CkGqME1dQGPIu6BWwTcdyfmZUuvC3mY7XughzNKIyP64py\nndmCBI3rKpqaqd+FxtGLl/6u3hP/X2VIAGMMlMurY9MQAI7mMI1k8RDUxH+DdRof\nK2csc+6B5yCP5JJ9FyThadSoVwSHq/68szaNE4Hpky06QtiKUZ+C5gSzO179c+Q=\n=03wM\n-----END PGP SIGNATURE-----\n", "payload": "tree 45a01bb69aad5cd74a330f560d22ee11f1a31d18\nparent 9cfbb56afac972b317f3a2b314302a7b4cc92edc\nparent 952fc236948ce8a63e7f7ee49878aa2ffd011298\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618855436 +0000\ncommitter GitHub <noreply@github.com> 1618855436 +0000\n\nMerge #8586\n\n8586: Replace SyntaxRewriter usage with ted in eager::eager_macro_recur r=Veykril a=Veykril\n\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a7276c5435da2431eb7dd783aa09c0cd718371", "html_url": "https://github.com/rust-lang/rust/commit/b6a7276c5435da2431eb7dd783aa09c0cd718371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6a7276c5435da2431eb7dd783aa09c0cd718371/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cfbb56afac972b317f3a2b314302a7b4cc92edc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cfbb56afac972b317f3a2b314302a7b4cc92edc", "html_url": "https://github.com/rust-lang/rust/commit/9cfbb56afac972b317f3a2b314302a7b4cc92edc"}, {"sha": "952fc236948ce8a63e7f7ee49878aa2ffd011298", "url": "https://api.github.com/repos/rust-lang/rust/commits/952fc236948ce8a63e7f7ee49878aa2ffd011298", "html_url": "https://github.com/rust-lang/rust/commit/952fc236948ce8a63e7f7ee49878aa2ffd011298"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "f12132f84bfb4a92a75343a86cec8598c4b6d730", "filename": "crates/hir_expand/src/eager.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b6a7276c5435da2431eb7dd783aa09c0cd718371/crates%2Fhir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6a7276c5435da2431eb7dd783aa09c0cd718371/crates%2Fhir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Feager.rs?ref=b6a7276c5435da2431eb7dd783aa09c0cd718371", "patch": "@@ -29,7 +29,7 @@ use base_db::CrateId;\n use mbe::ExpandResult;\n use parser::FragmentKind;\n use std::sync::Arc;\n-use syntax::{algo::SyntaxRewriter, SyntaxNode};\n+use syntax::{ted, SyntaxNode};\n \n #[derive(Debug)]\n pub struct ErrorEmitted {\n@@ -192,10 +192,10 @@ fn eager_macro_recur(\n     macro_resolver: &dyn Fn(ast::Path) -> Option<MacroDefId>,\n     mut diagnostic_sink: &mut dyn FnMut(mbe::ExpandError),\n ) -> Result<SyntaxNode, ErrorEmitted> {\n-    let original = curr.value.clone();\n+    let original = curr.value.clone().clone_for_update();\n \n-    let children = curr.value.descendants().filter_map(ast::MacroCall::cast);\n-    let mut rewriter = SyntaxRewriter::default();\n+    let children = original.descendants().filter_map(ast::MacroCall::cast);\n+    let mut replacements = Vec::new();\n \n     // Collect replacement\n     for child in children {\n@@ -214,6 +214,7 @@ fn eager_macro_recur(\n                 .into();\n                 db.parse_or_expand(id.as_file())\n                     .expect(\"successful macro expansion should be parseable\")\n+                    .clone_for_update()\n             }\n             MacroDefKind::Declarative(_)\n             | MacroDefKind::BuiltIn(..)\n@@ -227,15 +228,14 @@ fn eager_macro_recur(\n             }\n         };\n \n-        // check if the whole original sytnax is replaced\n-        // Note that SyntaxRewriter cannot replace the root node itself\n+        // check if the whole original syntax is replaced\n         if child.syntax() == &original {\n             return Ok(insert);\n         }\n \n-        rewriter.replace(child.syntax(), &insert);\n+        replacements.push((child, insert));\n     }\n \n-    let res = rewriter.rewrite(&original);\n-    Ok(res)\n+    replacements.into_iter().rev().for_each(|(old, new)| ted::replace(old.syntax(), new));\n+    Ok(original)\n }"}, {"sha": "eebae5ebea50bd15e73c1e7f67c6155fec89d1d7", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b6a7276c5435da2431eb7dd783aa09c0cd718371/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6a7276c5435da2431eb7dd783aa09c0cd718371/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=b6a7276c5435da2431eb7dd783aa09c0cd718371", "patch": "@@ -3,9 +3,7 @@ use std::iter;\n use hir::Semantics;\n use ide_db::RootDatabase;\n use syntax::{\n-    algo::{find_node_at_offset, SyntaxRewriter},\n-    ast, AstNode, NodeOrToken, SyntaxKind,\n-    SyntaxKind::*,\n+    algo::find_node_at_offset, ast, ted, AstNode, NodeOrToken, SyntaxKind, SyntaxKind::*,\n     SyntaxNode, WalkEvent, T,\n };\n \n@@ -46,26 +44,23 @@ fn expand_macro_recur(\n     sema: &Semantics<RootDatabase>,\n     macro_call: &ast::MacroCall,\n ) -> Option<SyntaxNode> {\n-    let mut expanded = sema.expand(macro_call)?;\n+    let expanded = sema.expand(macro_call)?.clone_for_update();\n \n     let children = expanded.descendants().filter_map(ast::MacroCall::cast);\n-    let mut rewriter = SyntaxRewriter::default();\n+    let mut replacements = Vec::new();\n \n-    for child in children.into_iter() {\n+    for child in children {\n         if let Some(new_node) = expand_macro_recur(sema, &child) {\n-            // Replace the whole node if it is root\n-            // `replace_descendants` will not replace the parent node\n-            // but `SyntaxNode::descendants include itself\n+            // check if the whole original syntax is replaced\n             if expanded == *child.syntax() {\n-                expanded = new_node;\n-            } else {\n-                rewriter.replace(child.syntax(), &new_node)\n+                return Some(new_node);\n             }\n+            replacements.push((child, new_node));\n         }\n     }\n \n-    let res = rewriter.rewrite(&expanded);\n-    Some(res)\n+    replacements.into_iter().rev().for_each(|(old, new)| ted::replace(old.syntax(), new));\n+    Some(expanded)\n }\n \n // FIXME: It would also be cool to share logic here and in the mbe tests,"}]}