{"sha": "f267d9dc191debfef74cc211dbca3d286b51f761", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNjdkOWRjMTkxZGViZmVmNzRjYzIxMWRiY2EzZDI4NmI1MWY3NjE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-01-31T16:41:19Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-03-10T23:44:46Z"}, "message": "limit From impl to LengthAtMost32\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "8e5c7b998afe1f4972f1db4ddedcb124e69d3c27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e5c7b998afe1f4972f1db4ddedcb124e69d3c27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f267d9dc191debfef74cc211dbca3d286b51f761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f267d9dc191debfef74cc211dbca3d286b51f761", "html_url": "https://github.com/rust-lang/rust/commit/f267d9dc191debfef74cc211dbca3d286b51f761", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f267d9dc191debfef74cc211dbca3d286b51f761/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daeb8ece8c930174baa874aa3f2f278fbec9637d", "url": "https://api.github.com/repos/rust-lang/rust/commits/daeb8ece8c930174baa874aa3f2f278fbec9637d", "html_url": "https://github.com/rust-lang/rust/commit/daeb8ece8c930174baa874aa3f2f278fbec9637d"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8fede31847cd99b49f023708fc8872ced73df639", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f267d9dc191debfef74cc211dbca3d286b51f761/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f267d9dc191debfef74cc211dbca3d286b51f761/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=f267d9dc191debfef74cc211dbca3d286b51f761", "patch": "@@ -2398,7 +2398,10 @@ impl<T: Clone> From<&mut [T]> for Vec<T> {\n }\n \n #[stable(feature = \"vec_from_array\", since = \"1.42.0\")]\n-impl<T, const N: usize> From<[T; N]> for Vec<T> {\n+impl<T, const N: usize> From<[T; N]> for Vec<T>\n+where\n+    [T; N]: LengthAtMost32,\n+{\n     fn from(arr: [T; N]) -> Self {\n         <[T]>::into_vec(box arr)\n     }"}]}