{"sha": "a9430865b319ab2fc28602fe98df21146e54b7bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NDMwODY1YjMxOWFiMmZjMjg2MDJmZTk4ZGYyMTE0NmU1NGI3YmY=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-01-29T21:32:37Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-02-07T17:28:10Z"}, "message": "Fix crash", "tree": {"sha": "793dbb5187463f5b42b3979515e819cf89754049", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/793dbb5187463f5b42b3979515e819cf89754049"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9430865b319ab2fc28602fe98df21146e54b7bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9430865b319ab2fc28602fe98df21146e54b7bf", "html_url": "https://github.com/rust-lang/rust/commit/a9430865b319ab2fc28602fe98df21146e54b7bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9430865b319ab2fc28602fe98df21146e54b7bf/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5554dcb17defd2cda729ce0ae732062990391db", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5554dcb17defd2cda729ce0ae732062990391db", "html_url": "https://github.com/rust-lang/rust/commit/a5554dcb17defd2cda729ce0ae732062990391db"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "459b962809fd0c1c5795334dc67bdcbcd74b01b4", "filename": "crates/ra_hir_ty/src/lower.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a9430865b319ab2fc28602fe98df21146e54b7bf/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9430865b319ab2fc28602fe98df21146e54b7bf/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flower.rs?ref=a9430865b319ab2fc28602fe98df21146e54b7bf", "patch": "@@ -140,10 +140,13 @@ impl Ty {\n                     ImplTraitLoweringMode::Variable => {\n                         let idx = ctx.impl_trait_counter.get();\n                         ctx.impl_trait_counter.set(idx + 1);\n-                        let generics =\n-                            generics(ctx.db, ctx.resolver.generic_def().expect(\"generics in scope\"));\n-                        let (self_params, list_params, impl_trait_params) = generics.provenance_split();\n-                        assert!((idx as usize) < impl_trait_params);\n+                        let (self_params, list_params, _impl_trait_params) = if let Some(def) = ctx.resolver.generic_def() {\n+                            let generics = generics(ctx.db, def);\n+                            generics.provenance_split()\n+                        } else {\n+                            (0, 0, 0)\n+                        };\n+                        // assert!((idx as usize) < impl_trait_params); // TODO return position impl trait\n                         Ty::Bound(idx as u32 + self_params as u32 + list_params as u32)\n                     }\n                     ImplTraitLoweringMode::Disallowed => {"}]}