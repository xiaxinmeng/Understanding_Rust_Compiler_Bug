{"sha": "b0e1318164f6b496c513a93fd745faabfd225ef5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZTEzMTgxNjRmNmI0OTZjNTEzYTkzZmQ3NDVmYWFiZmQyMjVlZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-16T22:36:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-16T22:36:40Z"}, "message": "auto merge of #10420 : sanxiyn/rust/path, r=cmr\n\nFix #10283.", "tree": {"sha": "f33caab27e888a5a774464b4f7a0b30d821ecfe7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f33caab27e888a5a774464b4f7a0b30d821ecfe7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0e1318164f6b496c513a93fd745faabfd225ef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0e1318164f6b496c513a93fd745faabfd225ef5", "html_url": "https://github.com/rust-lang/rust/commit/b0e1318164f6b496c513a93fd745faabfd225ef5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0e1318164f6b496c513a93fd745faabfd225ef5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90754ae9c95c18841c0200d77da917af5ecde5ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/90754ae9c95c18841c0200d77da917af5ecde5ee", "html_url": "https://github.com/rust-lang/rust/commit/90754ae9c95c18841c0200d77da917af5ecde5ee"}, {"sha": "2337d88339c10b485d4e121ffabc8d9a89431a82", "url": "https://api.github.com/repos/rust-lang/rust/commits/2337d88339c10b485d4e121ffabc8d9a89431a82", "html_url": "https://github.com/rust-lang/rust/commit/2337d88339c10b485d4e121ffabc8d9a89431a82"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "e02bf9f4ba8a316cf57b81770635db5590df078b", "filename": "src/libstd/any.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0e1318164f6b496c513a93fd745faabfd225ef5/src%2Flibstd%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0e1318164f6b496c513a93fd745faabfd225ef5/src%2Flibstd%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fany.rs?ref=b0e1318164f6b496c513a93fd745faabfd225ef5", "patch": "@@ -207,7 +207,7 @@ mod tests {\n \n     #[test]\n     fn type_id_hash() {\n-        let (a, b) = (TypeId::of::<uint>(), TypeId::of::<uint>::());\n+        let (a, b) = (TypeId::of::<uint>(), TypeId::of::<uint>());\n \n         assert_eq!(a.hash(), b.hash());\n     }"}, {"sha": "ad5da0b9289365667507715481097da9ef461adf", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0e1318164f6b496c513a93fd745faabfd225ef5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0e1318164f6b496c513a93fd745faabfd225ef5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b0e1318164f6b496c513a93fd745faabfd225ef5", "patch": "@@ -1470,10 +1470,6 @@ impl Parser {\n         let mut segments = ~[];\n         loop {\n             // First, parse an identifier.\n-            match *self.token {\n-                token::IDENT(*) => {}\n-                _ => break,\n-            }\n             let identifier = self.parse_ident();\n \n             // Next, parse a colon and bounded type parameters, if applicable."}, {"sha": "4d5473faf73525d2883868c30bdd2173aace854a", "filename": "src/test/compile-fail/paamayim-nekudotayim.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b0e1318164f6b496c513a93fd745faabfd225ef5/src%2Ftest%2Fcompile-fail%2Fpaamayim-nekudotayim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0e1318164f6b496c513a93fd745faabfd225ef5/src%2Ftest%2Fcompile-fail%2Fpaamayim-nekudotayim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpaamayim-nekudotayim.rs?ref=b0e1318164f6b496c513a93fd745faabfd225ef5", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// http://phpsadness.com/sad/1\n+\n+fn main() {\n+    ::; //~ ERROR expected ident, found `;`\n+}"}]}