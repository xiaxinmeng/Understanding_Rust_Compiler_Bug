{"sha": "ba59ed05e334d70b50fca18befa1790f509dbee1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNTllZDA1ZTMzNGQ3MGI1MGZjYTE4YmVmYTE3OTBmNTA5ZGJlZTE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-30T17:46:28Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-30T17:46:28Z"}, "message": "Rust upgrade to rustc 1.6.0-nightly (52d95e644 2015-11-30)", "tree": {"sha": "2f9daf444c12424be41834857909775590838a91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f9daf444c12424be41834857909775590838a91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba59ed05e334d70b50fca18befa1790f509dbee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba59ed05e334d70b50fca18befa1790f509dbee1", "html_url": "https://github.com/rust-lang/rust/commit/ba59ed05e334d70b50fca18befa1790f509dbee1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba59ed05e334d70b50fca18befa1790f509dbee1/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ce2bc3345c9309404efa6b67bce402fa9583800", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce2bc3345c9309404efa6b67bce402fa9583800", "html_url": "https://github.com/rust-lang/rust/commit/2ce2bc3345c9309404efa6b67bce402fa9583800"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b6a7fc7fa5b8f02ab880897ac0173665cc171672", "filename": "src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba59ed05e334d70b50fca18befa1790f509dbee1/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba59ed05e334d70b50fca18befa1790f509dbee1/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=ba59ed05e334d70b50fca18befa1790f509dbee1", "patch": "@@ -140,7 +140,7 @@ fn is_unit_expr(expr: &Expr) -> bool {\n fn has_only_ref_pats(arms: &[Arm]) -> bool {\n     let mapped = arms.iter().flat_map(|a| &a.pats).map(|p| match p.node {\n         PatRegion(..) => Some(true),  // &-patterns\n-        PatWild(..) => Some(false),   // an \"anything\" wildcard is also fine\n+        PatWild => Some(false),   // an \"anything\" wildcard is also fine\n         _ => None,                    // any other pattern is not fine\n     }).collect::<Option<Vec<bool>>>();\n     // look for Some(v) where there's at least one true element"}]}