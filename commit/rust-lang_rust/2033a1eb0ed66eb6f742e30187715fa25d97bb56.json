{"sha": "2033a1eb0ed66eb6f742e30187715fa25d97bb56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMzNhMWViMGVkNjZlYjZmNzQyZTMwMTg3NzE1ZmEyNWQ5N2JiNTY=", "commit": {"author": {"name": "Terry Raimondo", "email": "terry.raimondo@gmail.com", "date": "2018-05-28T11:55:27Z"}, "committer": {"name": "Terry Raimondo", "email": "terry.raimondo@gmail.com", "date": "2018-05-28T11:55:27Z"}, "message": "unreadable_literal: Fills hexadecimal values with 0 to allow grouping (c.f #2300)", "tree": {"sha": "564643d777d1b6490d4cc8ca46929711b4bfc30c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/564643d777d1b6490d4cc8ca46929711b4bfc30c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2033a1eb0ed66eb6f742e30187715fa25d97bb56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJbC+4wAAoJECjyELSV0n2QDFUP/3d2e7UaCliYwFwGgbfahXXX\noS+G+0Fw+oUK3aFl8j7yv6y9kiQgIJPny+7Qcra0G2W4O7ZtZBmoAxvQeEqetbHZ\nfgEXcSUdZoQ70qDRMbw5qJ/GGsPhNKsiUiYlGMnQULJNl2m1esn6rt9vq5xt6sKE\nALbgKTiznZ/8lOHvpkqkgxCeQs0kCuauZJbSpo/EHyG+iA9L1uFnqBTUX870j6iW\n15SqxvOvJqosmGc9cOx2V7Xr9bmUVau1AqX173oa8azdcqzjqJ20n5ltlk5RNetw\nq2HJKG57zXOPs/k8n/dFCekb+Fjzr2kXncj5v2YA3z5Dn8vhPjKGmEt6i99QXwVH\n3Wwh1p/eM3wE5Z8wDD6Lsh5BkaurMcGHflmnedO2EFRRXcovJQoC6fpRNeZzHes+\nOgTuawSQhx2XF7qy/duxszOWd5HhrWTK7Ueo7/3aaiTOrfrZ/4eDqj864WEnYFIb\nPRHeXB+24d198H0Nk80M19FNLssHpguiwXYCtJLDF2Flaka3+x92ptlYqMjeRRVM\nIiPmGZHa7eA6dZPFVIa9r7xF5qz+KmI8QMb//dlkMlNM5hsIwAcXxhj+w1laTRq3\nPpD8JduKUiGj0YIv0YSwfevZJwDBU5vO91GF775iK/eTo31UjDeEPJoNrVOhKeAp\n01bn3wmuNIiT3cVr35jN\n=ZK8O\n-----END PGP SIGNATURE-----", "payload": "tree 564643d777d1b6490d4cc8ca46929711b4bfc30c\nparent fc008aa14c59a0b0cb0a1e60fe836f83019a722a\nauthor Terry Raimondo <terry.raimondo@gmail.com> 1527508527 +0200\ncommitter Terry Raimondo <terry.raimondo@gmail.com> 1527508527 +0200\n\nunreadable_literal: Fills hexadecimal values with 0 to allow grouping (c.f #2300)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2033a1eb0ed66eb6f742e30187715fa25d97bb56", "html_url": "https://github.com/rust-lang/rust/commit/2033a1eb0ed66eb6f742e30187715fa25d97bb56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2033a1eb0ed66eb6f742e30187715fa25d97bb56/comments", "author": {"login": "terry90", "id": 1941159, "node_id": "MDQ6VXNlcjE5NDExNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1941159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terry90", "html_url": "https://github.com/terry90", "followers_url": "https://api.github.com/users/terry90/followers", "following_url": "https://api.github.com/users/terry90/following{/other_user}", "gists_url": "https://api.github.com/users/terry90/gists{/gist_id}", "starred_url": "https://api.github.com/users/terry90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terry90/subscriptions", "organizations_url": "https://api.github.com/users/terry90/orgs", "repos_url": "https://api.github.com/users/terry90/repos", "events_url": "https://api.github.com/users/terry90/events{/privacy}", "received_events_url": "https://api.github.com/users/terry90/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terry90", "id": 1941159, "node_id": "MDQ6VXNlcjE5NDExNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1941159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terry90", "html_url": "https://github.com/terry90", "followers_url": "https://api.github.com/users/terry90/followers", "following_url": "https://api.github.com/users/terry90/following{/other_user}", "gists_url": "https://api.github.com/users/terry90/gists{/gist_id}", "starred_url": "https://api.github.com/users/terry90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terry90/subscriptions", "organizations_url": "https://api.github.com/users/terry90/orgs", "repos_url": "https://api.github.com/users/terry90/repos", "events_url": "https://api.github.com/users/terry90/events{/privacy}", "received_events_url": "https://api.github.com/users/terry90/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "html_url": "https://github.com/rust-lang/rust/commit/fc008aa14c59a0b0cb0a1e60fe836f83019a722a"}], "stats": {"total": 90, "additions": 60, "deletions": 30}, "files": [{"sha": "b40ddca5cbf539d9115c7636c1a2710eedb764ef", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2033a1eb0ed66eb6f742e30187715fa25d97bb56/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2033a1eb0ed66eb6f742e30187715fa25d97bb56/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=2033a1eb0ed66eb6f742e30187715fa25d97bb56", "patch": "@@ -193,7 +193,7 @@ impl<'a> DigitInfo<'a> {\n                 self.suffix.unwrap_or(\"\")\n             )\n         } else {\n-            let hint = self.digits\n+            let mut hint = self.digits\n                 .chars()\n                 .rev()\n                 .filter(|&c| c != '_')\n@@ -203,6 +203,12 @@ impl<'a> DigitInfo<'a> {\n                 .rev()\n                 .collect::<Vec<String>>()\n                 .join(\"_\");\n+            // Forces hexadecimal values to be grouped by 4 being filled with zeroes (e.g 0x00ab_cdef)\n+            let nb_digits_to_fill = self.digits.len() % 4;\n+            if self.radix == Radix::Hexadecimal && nb_digits_to_fill != 0 {\n+                let filled_digits = format!(\"{:0>1$}\", &hint[..nb_digits_to_fill], 4);\n+                hint = format!(\"{}{}\", filled_digits, &hint[nb_digits_to_fill..]);\n+            }\n             format!(\n                 \"{}{}{}\",\n                 self.prefix.unwrap_or(\"\"),"}, {"sha": "7be11072b0bb7c0000a1a41465df02070131f140", "filename": "tests/ui/literals.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2033a1eb0ed66eb6f742e30187715fa25d97bb56/tests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2033a1eb0ed66eb6f742e30187715fa25d97bb56/tests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.rs?ref=2033a1eb0ed66eb6f742e30187715fa25d97bb56", "patch": "@@ -1,5 +1,3 @@\n-\n-\n #![warn(mixed_case_hex_literals)]\n #![warn(unseparated_literal_suffix)]\n #![warn(zero_prefixed_literal)]\n@@ -31,4 +29,10 @@ fn main() {\n \n     let ok11 = 0o123;\n     let ok12 = 0b10_1010;\n+\n+    let ok6 = 0xab_abcd;\n+    let ok7 = 0xBAFE_BAFE;\n+    let fail9 = 0xabcdef;\n+    let fail10 = 0xBAFEBAFE;\n+    let fail11 = 0xabcdeff;\n }"}, {"sha": "703adbfd280ce4021d4036f575c0f80f490e70d9", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 47, "deletions": 27, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/2033a1eb0ed66eb6f742e30187715fa25d97bb56/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2033a1eb0ed66eb6f742e30187715fa25d97bb56/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=2033a1eb0ed66eb6f742e30187715fa25d97bb56", "patch": "@@ -1,90 +1,110 @@\n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:14:17\n+  --> $DIR/literals.rs:12:17\n    |\n-14 |     let fail1 = 0xabCD;\n+12 |     let fail1 = 0xabCD;\n    |                 ^^^^^^\n    |\n    = note: `-D mixed-case-hex-literals` implied by `-D warnings`\n \n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:15:17\n+  --> $DIR/literals.rs:13:17\n    |\n-15 |     let fail2 = 0xabCD_u32;\n+13 |     let fail2 = 0xabCD_u32;\n    |                 ^^^^^^^^^^\n \n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:16:17\n+  --> $DIR/literals.rs:14:17\n    |\n-16 |     let fail2 = 0xabCD_isize;\n+14 |     let fail2 = 0xabCD_isize;\n    |                 ^^^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:17:27\n+  --> $DIR/literals.rs:15:27\n    |\n-17 |     let fail_multi_zero = 000_123usize;\n+15 |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n    = note: `-D unseparated-literal-suffix` implied by `-D warnings`\n \n error: this is a decimal constant\n-  --> $DIR/literals.rs:17:27\n+  --> $DIR/literals.rs:15:27\n    |\n-17 |     let fail_multi_zero = 000_123usize;\n+15 |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n    = note: `-D zero-prefixed-literal` implied by `-D warnings`\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-17 |     let fail_multi_zero = 123usize;\n+15 |     let fail_multi_zero = 123usize;\n    |                           ^^^^^^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-17 |     let fail_multi_zero = 0o123usize;\n+15 |     let fail_multi_zero = 0o123usize;\n    |                           ^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:22:17\n+  --> $DIR/literals.rs:20:17\n    |\n-22 |     let fail3 = 1234i32;\n+20 |     let fail3 = 1234i32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:23:17\n+  --> $DIR/literals.rs:21:17\n    |\n-23 |     let fail4 = 1234u32;\n+21 |     let fail4 = 1234u32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:24:17\n+  --> $DIR/literals.rs:22:17\n    |\n-24 |     let fail5 = 1234isize;\n+22 |     let fail5 = 1234isize;\n    |                 ^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:25:17\n+  --> $DIR/literals.rs:23:17\n    |\n-25 |     let fail6 = 1234usize;\n+23 |     let fail6 = 1234usize;\n    |                 ^^^^^^^^^\n \n error: float type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:26:17\n+  --> $DIR/literals.rs:24:17\n    |\n-26 |     let fail7 = 1.5f32;\n+24 |     let fail7 = 1.5f32;\n    |                 ^^^^^^\n \n error: this is a decimal constant\n-  --> $DIR/literals.rs:30:17\n+  --> $DIR/literals.rs:28:17\n    |\n-30 |     let fail8 = 0123;\n+28 |     let fail8 = 0123;\n    |                 ^^^^\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-30 |     let fail8 = 123;\n+28 |     let fail8 = 123;\n    |                 ^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-30 |     let fail8 = 0o123;\n+28 |     let fail8 = 0o123;\n    |                 ^^^^^\n \n-error: aborting due to 11 previous errors\n+error: long literal lacking separators\n+  --> $DIR/literals.rs:35:17\n+   |\n+35 |     let fail9 = 0xabcdef;\n+   |                 ^^^^^^^^ help: consider: `0x00ab_cdef`\n+   |\n+   = note: `-D unreadable-literal` implied by `-D warnings`\n+\n+error: long literal lacking separators\n+  --> $DIR/literals.rs:36:18\n+   |\n+36 |     let fail10 = 0xBAFEBAFE;\n+   |                  ^^^^^^^^^^ help: consider: `0xBAFE_BAFE`\n+\n+error: long literal lacking separators\n+  --> $DIR/literals.rs:37:18\n+   |\n+37 |     let fail11 = 0xabcdeff;\n+   |                  ^^^^^^^^^ help: consider: `0x0abc_deff`\n+\n+error: aborting due to 14 previous errors\n "}]}