{"sha": "72444636d32b34743e14bbd25c3ffc579b881af8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNDQ0NjM2ZDMyYjM0NzQzZTE0YmJkMjVjM2ZmYzU3OWI4ODFhZjg=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-04-01T22:44:01Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-04-04T05:43:09Z"}, "message": "std: Flesh out result::extensions.", "tree": {"sha": "20a3c3ae486783988878951ccd56bcc4fe9df8c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20a3c3ae486783988878951ccd56bcc4fe9df8c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72444636d32b34743e14bbd25c3ffc579b881af8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72444636d32b34743e14bbd25c3ffc579b881af8", "html_url": "https://github.com/rust-lang/rust/commit/72444636d32b34743e14bbd25c3ffc579b881af8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72444636d32b34743e14bbd25c3ffc579b881af8/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ad20df40b94e38cc576b3d24977c1108ca3fe82", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad20df40b94e38cc576b3d24977c1108ca3fe82", "html_url": "https://github.com/rust-lang/rust/commit/2ad20df40b94e38cc576b3d24977c1108ca3fe82"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "64385fca9bf1da9735c8853d4102f6d4fea92be2", "filename": "src/libcore/result.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72444636d32b34743e14bbd25c3ffc579b881af8/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72444636d32b34743e14bbd25c3ffc579b881af8/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=72444636d32b34743e14bbd25c3ffc579b881af8", "patch": "@@ -109,6 +109,14 @@ fn chain_err<T: copy, U: copy, V: copy>(\n }\n \n impl extensions<T:copy, E:copy> for result<T,E> {\n+    fn get() -> T { get(self) }\n+\n+    fn get_err() -> E { get_err(self) }\n+\n+    fn success() -> bool { success(self) }\n+\n+    fn failure() -> bool { failure(self) }\n+\n     fn chain<U:copy>(op: fn(T) -> result<U,E>) -> result<U,E> {\n         chain(self, op)\n     }"}]}