{"sha": "3c59eaf91cd4cb12397fbcf963f751082afbe532", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNTllYWY5MWNkNGNiMTIzOTdmYmNmOTYzZjc1MTA4MmFmYmU1MzI=", "commit": {"author": {"name": "xiongmao86", "email": "xiongmao86dev@sina.com", "date": "2020-01-03T06:59:14Z"}, "committer": {"name": "xiongmao86", "email": "xiongmao86dev@sina.com", "date": "2020-01-12T11:54:17Z"}, "message": "Add lint logic.", "tree": {"sha": "fb1afd6355bd6ed16018f64bc483d3550c1509ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb1afd6355bd6ed16018f64bc483d3550c1509ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c59eaf91cd4cb12397fbcf963f751082afbe532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c59eaf91cd4cb12397fbcf963f751082afbe532", "html_url": "https://github.com/rust-lang/rust/commit/3c59eaf91cd4cb12397fbcf963f751082afbe532", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c59eaf91cd4cb12397fbcf963f751082afbe532/comments", "author": {"login": "xiongmao86", "id": 1770218, "node_id": "MDQ6VXNlcjE3NzAyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1770218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiongmao86", "html_url": "https://github.com/xiongmao86", "followers_url": "https://api.github.com/users/xiongmao86/followers", "following_url": "https://api.github.com/users/xiongmao86/following{/other_user}", "gists_url": "https://api.github.com/users/xiongmao86/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiongmao86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiongmao86/subscriptions", "organizations_url": "https://api.github.com/users/xiongmao86/orgs", "repos_url": "https://api.github.com/users/xiongmao86/repos", "events_url": "https://api.github.com/users/xiongmao86/events{/privacy}", "received_events_url": "https://api.github.com/users/xiongmao86/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xiongmao86", "id": 1770218, "node_id": "MDQ6VXNlcjE3NzAyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1770218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiongmao86", "html_url": "https://github.com/xiongmao86", "followers_url": "https://api.github.com/users/xiongmao86/followers", "following_url": "https://api.github.com/users/xiongmao86/following{/other_user}", "gists_url": "https://api.github.com/users/xiongmao86/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiongmao86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiongmao86/subscriptions", "organizations_url": "https://api.github.com/users/xiongmao86/orgs", "repos_url": "https://api.github.com/users/xiongmao86/repos", "events_url": "https://api.github.com/users/xiongmao86/events{/privacy}", "received_events_url": "https://api.github.com/users/xiongmao86/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96334d0d7cc2901acc80a67ba454409dcd452a30", "url": "https://api.github.com/repos/rust-lang/rust/commits/96334d0d7cc2901acc80a67ba454409dcd452a30", "html_url": "https://github.com/rust-lang/rust/commit/96334d0d7cc2901acc80a67ba454409dcd452a30"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "b833fb55157d8ccc34846c2f2a7b54d488f11bf6", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3c59eaf91cd4cb12397fbcf963f751082afbe532/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c59eaf91cd4cb12397fbcf963f751082afbe532/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3c59eaf91cd4cb12397fbcf963f751082afbe532", "patch": "@@ -1275,6 +1275,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n             [\"add\"] | [\"offset\"] | [\"sub\"] | [\"wrapping_offset\"] | [\"wrapping_add\"] | [\"wrapping_sub\"] => {\n                 check_pointer_offset(cx, expr, arg_lists[0])\n             },\n+            [\"is_file\", ..] => lint_filetype_is_file(cx, expr, arg_lists[0]),\n             _ => {},\n         }\n \n@@ -3259,3 +3260,26 @@ fn check_pointer_offset(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, args: &[\n         }\n     }\n }\n+\n+fn lint_filetype_is_file(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>]) {\n+    let ty = cx.tables.expr_ty(&args[0]);\n+\n+    if !match_type(cx, ty, &paths::FILE_TYPE) {\n+        return;\n+    }\n+\n+    if_chain! {\n+        if let Some(parent) = get_parent_expr(cx, expr);\n+        if let hir::ExprKind::Unary(op, _) = parent.kind;\n+        if op == hir::UnNot;\n+        then {\n+            let lint_msg = \"`!FileType::is_file()` does not deny all readable file types\";\n+            let help_msg = \"use `FileType::is_dir()` instead\";\n+            span_help_and_lint(cx, FILETYPE_IS_FILE, expr.span, lint_msg, help_msg);\n+        } else {\n+            let lint_msg = \"`FileType::is_file()` does not cover all readable file types\";\n+            let help_msg = \"use `!FileType::is_dir()` instead\";\n+            span_help_and_lint(cx, FILETYPE_IS_FILE, expr.span, lint_msg, help_msg);\n+        }\n+    }\n+}"}, {"sha": "4f8fe02dfd202d53960c40bb7aefaddd7f5a1d86", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c59eaf91cd4cb12397fbcf963f751082afbe532/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c59eaf91cd4cb12397fbcf963f751082afbe532/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=3c59eaf91cd4cb12397fbcf963f751082afbe532", "patch": "@@ -28,6 +28,7 @@ pub const DROP_TRAIT: [&str; 4] = [\"core\", \"ops\", \"drop\", \"Drop\"];\n pub const DURATION: [&str; 3] = [\"core\", \"time\", \"Duration\"];\n pub const EARLY_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"EarlyContext\"];\n pub const EXIT: [&str; 3] = [\"std\", \"process\", \"exit\"];\n+pub const FILE_TYPE: [&str; 3] = [\"std\", \"fs\", \"FileType\"];\n pub const FMT_ARGUMENTS_NEW_V1: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1\"];\n pub const FMT_ARGUMENTS_NEW_V1_FORMATTED: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1_formatted\"];\n pub const FMT_ARGUMENTV1_NEW: [&str; 4] = [\"core\", \"fmt\", \"ArgumentV1\", \"new\"];"}, {"sha": "298cb5ad0657ebb785bb9f3be45a822dad7ff591", "filename": "tests/ui/filetype_is_file.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3c59eaf91cd4cb12397fbcf963f751082afbe532/tests%2Fui%2Ffiletype_is_file.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c59eaf91cd4cb12397fbcf963f751082afbe532/tests%2Fui%2Ffiletype_is_file.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffiletype_is_file.stderr?ref=3c59eaf91cd4cb12397fbcf963f751082afbe532", "patch": "@@ -0,0 +1,27 @@\n+error: `FileType::is_file()` does not cover all readable file types\n+  --> $DIR/filetype_is_file.rs:8:8\n+   |\n+LL |     if fs::metadata(\"foo.txt\")?.file_type().is_file() {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::filetype-is-file` implied by `-D warnings`\n+   = help: use `!FileType::is_dir()` instead\n+\n+error: `!FileType::is_file()` does not deny all readable file types\n+  --> $DIR/filetype_is_file.rs:13:9\n+   |\n+LL |     if !fs::metadata(\"foo.txt\")?.file_type().is_file() {\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use `FileType::is_dir()` instead\n+\n+error: `FileType::is_file()` does not cover all readable file types\n+  --> $DIR/filetype_is_file.rs:18:9\n+   |\n+LL |     if !fs::metadata(\"foo.txt\")?.file_type().is_file().bitor(true) {\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: use `!FileType::is_dir()` instead\n+\n+error: aborting due to 3 previous errors\n+"}]}