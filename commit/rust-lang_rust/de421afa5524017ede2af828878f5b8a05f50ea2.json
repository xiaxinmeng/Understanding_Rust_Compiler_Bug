{"sha": "de421afa5524017ede2af828878f5b8a05f50ea2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNDIxYWZhNTUyNDAxN2VkZTJhZjgyODg3OGY1YjhhMDVmNTBlYTI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-14T18:02:31Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-14T18:03:10Z"}, "message": "rustc: Use walk instead of fold for the first item collection pass", "tree": {"sha": "df3bca02de795dac6c45985d3d052df9b6f05eb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df3bca02de795dac6c45985d3d052df9b6f05eb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de421afa5524017ede2af828878f5b8a05f50ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de421afa5524017ede2af828878f5b8a05f50ea2", "html_url": "https://github.com/rust-lang/rust/commit/de421afa5524017ede2af828878f5b8a05f50ea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de421afa5524017ede2af828878f5b8a05f50ea2/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b3f3594424200b28f0297b7b7024ecdbf79e665", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b3f3594424200b28f0297b7b7024ecdbf79e665", "html_url": "https://github.com/rust-lang/rust/commit/8b3f3594424200b28f0297b7b7024ecdbf79e665"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "2c7d80a8fca96978f75891916e0b74c7fd7d0a73", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/de421afa5524017ede2af828878f5b8a05f50ea2/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de421afa5524017ede2af828878f5b8a05f50ea2/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=de421afa5524017ede2af828878f5b8a05f50ea2", "patch": "@@ -658,8 +658,7 @@ mod collect {\n         ret result;\n     }\n \n-    fn collect(&@ty_item_table id_to_ty_item, &@ast::item i)\n-        -> @ty_item_table {\n+    fn collect(&@ty_item_table id_to_ty_item, &@ast::item i) {\n         alt (i.node) {\n             case (ast::item_ty(_, _, _, ?def_id, _)) {\n                 id_to_ty_item.insert(def_id, any_item_rust(i));\n@@ -672,22 +671,17 @@ mod collect {\n             }\n             case (_) { /* empty */ }\n         }\n-        ret id_to_ty_item;\n     }\n \n-    fn collect_native(&@ty_item_table id_to_ty_item, &@ast::native_item i)\n-        -> @ty_item_table {\n+    fn collect_native(&@ty_item_table id_to_ty_item, &@ast::native_item i) {\n         alt (i.node) {\n             case (ast::native_item_ty(_, ?def_id)) {\n                 // The abi of types is not used.\n                 id_to_ty_item.insert(def_id,\n-                                     any_item_native(i,\n-                                                     ast::native_abi_cdecl));\n-            }\n-            case (_) {\n+                    any_item_native(i, ast::native_abi_cdecl));\n             }\n+            case (_) { /* no-op */ }\n         }\n-        ret id_to_ty_item;\n     }\n \n     fn convert(&@env e, &@ast::item i) -> @env {\n@@ -884,11 +878,12 @@ mod collect {\n             vec(mutable);\n         let node_type_table ntt = @mutable ntt_sub;\n \n-        auto fld_1 = fold::new_identity_fold[@ty_item_table]();\n-        fld_1 = @rec(update_env_for_item = bind collect(_, _),\n-                     update_env_for_native_item = bind collect_native(_, _)\n-                     with *fld_1);\n-        fold::fold_crate[@ty_item_table](id_to_ty_item, fld_1, crate);\n+        auto visit = rec(\n+            visit_item_pre = bind collect(id_to_ty_item, _),\n+            visit_native_item_pre = bind collect_native(id_to_ty_item, _)\n+            with walk::default_visitor()\n+        );\n+        walk::walk_crate(visit, *crate);\n \n         // Second pass: translate the types of all items.\n         auto type_cache = common::new_def_hash[ty::ty_param_count_and_ty]();"}]}