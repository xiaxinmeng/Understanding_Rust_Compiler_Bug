{"sha": "0263a6f052aecc16f3e71300fefef440b19d4115", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNjNhNmYwNTJhZWNjMTZmM2U3MTMwMGZlZmVmNDQwYjE5ZDQxMTU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-12T15:07:29Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-12T15:07:29Z"}, "message": "Merge pull request #145 from birkenfeld/string_to_string\n\nmethods: lint against String.to_string (fixes #100)", "tree": {"sha": "ad3d71969bb3d61ca1223b8d141f46a407503378", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad3d71969bb3d61ca1223b8d141f46a407503378"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0263a6f052aecc16f3e71300fefef440b19d4115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0263a6f052aecc16f3e71300fefef440b19d4115", "html_url": "https://github.com/rust-lang/rust/commit/0263a6f052aecc16f3e71300fefef440b19d4115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0263a6f052aecc16f3e71300fefef440b19d4115/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ff1e9a7664275cc31fc00f30609d54849197123", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff1e9a7664275cc31fc00f30609d54849197123", "html_url": "https://github.com/rust-lang/rust/commit/6ff1e9a7664275cc31fc00f30609d54849197123"}, {"sha": "4074c1f968d5bd37b3dec36bc21cbf656de65907", "url": "https://api.github.com/repos/rust-lang/rust/commits/4074c1f968d5bd37b3dec36bc21cbf656de65907", "html_url": "https://github.com/rust-lang/rust/commit/4074c1f968d5bd37b3dec36bc21cbf656de65907"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "3299debbe0db339c92d97559f40e1cf77dad9a3b", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0263a6f052aecc16f3e71300fefef440b19d4115/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0263a6f052aecc16f3e71300fefef440b19d4115/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=0263a6f052aecc16f3e71300fefef440b19d4115", "patch": "@@ -83,5 +83,6 @@ pub fn plugin_registrar(reg: &mut Registry) {\n                                            methods::OPTION_UNWRAP_USED,\n                                            methods::RESULT_UNWRAP_USED,\n                                            methods::STR_TO_STRING,\n+                                           methods::STRING_TO_STRING,\n                                            ]);\n }"}, {"sha": "a5b12e52bdf5be5723eb492b48149a26d4c6ab0f", "filename": "src/methods.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0263a6f052aecc16f3e71300fefef440b19d4115/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0263a6f052aecc16f3e71300fefef440b19d4115/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=0263a6f052aecc16f3e71300fefef440b19d4115", "patch": "@@ -13,10 +13,12 @@ declare_lint!(pub RESULT_UNWRAP_USED, Allow,\n               \"Warn on using unwrap() on a Result value\");\n declare_lint!(pub STR_TO_STRING, Warn,\n               \"Warn when a String could use to_owned() instead of to_string()\");\n+declare_lint!(pub STRING_TO_STRING, Warn,\n+              \"Warn when calling String.to_string()\");\n \n impl LintPass for MethodsPass {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(OPTION_UNWRAP_USED, RESULT_UNWRAP_USED, STR_TO_STRING)\n+        lint_array!(OPTION_UNWRAP_USED, RESULT_UNWRAP_USED, STR_TO_STRING, STRING_TO_STRING)\n     }\n \n     fn check_expr(&mut self, cx: &Context, expr: &Expr) {\n@@ -41,6 +43,12 @@ impl LintPass for MethodsPass {\n                 if let ty::TyStr = *obj_ty {\n                     span_lint(cx, STR_TO_STRING, expr.span, \"`str.to_owned()` is faster\");\n                 }\n+                else if let ty::TyStruct(did, _) = *obj_ty {\n+                    if match_def_path(cx, did.did, &[\"collections\", \"string\", \"String\"]) {\n+                        span_lint(cx, STRING_TO_STRING, expr.span,\n+                                  \"`String.to_string()` is a no-op\")\n+                    }\n+                }\n             }\n         }\n     }"}, {"sha": "facf03783926ac79843c90bc3906ade9c58fca0d", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0263a6f052aecc16f3e71300fefef440b19d4115/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0263a6f052aecc16f3e71300fefef440b19d4115/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=0263a6f052aecc16f3e71300fefef440b19d4115", "patch": "@@ -2,10 +2,14 @@\n #![plugin(clippy)]\n \n #[deny(option_unwrap_used, result_unwrap_used)]\n+#[deny(str_to_string, string_to_string)]\n fn main() {\n     let opt = Some(0);\n     let _ = opt.unwrap();  //~ERROR\n \n     let res: Result<i32, ()> = Ok(0);\n     let _ = res.unwrap();  //~ERROR\n+\n+    let string = \"str\".to_string();  //~ERROR\n+    let _again = string.to_string();  //~ERROR\n }"}]}