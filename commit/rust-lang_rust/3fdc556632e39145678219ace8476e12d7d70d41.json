{"sha": "3fdc556632e39145678219ace8476e12d7d70d41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZGM1NTY2MzJlMzkxNDU2NzgyMTlhY2U4NDc2ZTEyZDdkNzBkNDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-13T18:59:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-13T18:59:52Z"}, "message": "Merge #7662\n\n7662: Group generate getter/setter assist r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "9f58b1f958cd01b9e5909c77d12f3479a3f5974f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f58b1f958cd01b9e5909c77d12f3479a3f5974f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fdc556632e39145678219ace8476e12d7d70d41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgKCGoCRBK7hj4Ov3rIwAAdHIIACjG6zVPcNWLxjzT5yEPyNRi\nQ+MBK6H/E5no/HWZJIUY68M+D0AquwcDtSHkEY8LP+oOoSv2tKitC8zY2w4Dyrti\nmtBnJ2w8EliJVr/GnxNZcXgk0XSe57m3+zqwjtMzwt09FAVfS4bA78NeyJliJxS0\nLzoBE9NwStIdtUYV0zAviRw9UVg+k37ss8KlB5VaHlJALwRPbWw1jsiyGvujYElO\nbF6zY6shGRDYaxs4cSuTXqyhMQ0AuZnwp2khUA8xv/DwD7jaN6cwMc+VUNx3aWp9\nwSRCYh0h6eP9JUnmOHnFEP/bsCzb3HhkfukQgFJxOgXhoxqAbDXd52pntjpU5Fc=\n=GKmw\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f58b1f958cd01b9e5909c77d12f3479a3f5974f\nparent 205e72f34d26898779c8ab11c8500e74fd8ce28b\nparent ed1f2b58f7360e96c3b23e6759678b0a185d5ce5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1613242792 +0000\ncommitter GitHub <noreply@github.com> 1613242792 +0000\n\nMerge #7662\n\n7662: Group generate getter/setter assist r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fdc556632e39145678219ace8476e12d7d70d41", "html_url": "https://github.com/rust-lang/rust/commit/3fdc556632e39145678219ace8476e12d7d70d41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fdc556632e39145678219ace8476e12d7d70d41/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "205e72f34d26898779c8ab11c8500e74fd8ce28b", "url": "https://api.github.com/repos/rust-lang/rust/commits/205e72f34d26898779c8ab11c8500e74fd8ce28b", "html_url": "https://github.com/rust-lang/rust/commit/205e72f34d26898779c8ab11c8500e74fd8ce28b"}, {"sha": "ed1f2b58f7360e96c3b23e6759678b0a185d5ce5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed1f2b58f7360e96c3b23e6759678b0a185d5ce5", "html_url": "https://github.com/rust-lang/rust/commit/ed1f2b58f7360e96c3b23e6759678b0a185d5ce5"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "df7d1bb9541ab68b8ff83da6db39b1b2c01b0168", "filename": "crates/assists/src/handlers/generate_getter.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fdc556632e39145678219ace8476e12d7d70d41/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_getter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fdc556632e39145678219ace8476e12d7d70d41/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_getter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_getter.rs?ref=3fdc556632e39145678219ace8476e12d7d70d41", "patch": "@@ -1,10 +1,9 @@\n use stdx::{format_to, to_lower_snake_case};\n-use syntax::ast::VisibilityOwner;\n-use syntax::ast::{self, AstNode, NameOwner};\n+use syntax::ast::{self, AstNode, NameOwner, VisibilityOwner};\n \n use crate::{\n     utils::{find_impl_block_end, find_struct_impl, generate_impl_text},\n-    AssistContext, AssistId, AssistKind, Assists,\n+    AssistContext, AssistId, AssistKind, Assists, GroupLabel,\n };\n \n // Assist: generate_getter\n@@ -42,7 +41,8 @@ pub(crate) fn generate_getter(acc: &mut Assists, ctx: &AssistContext) -> Option<\n     let impl_def = find_struct_impl(&ctx, &ast::Adt::Struct(strukt.clone()), fn_name.as_str())?;\n \n     let target = field.syntax().text_range();\n-    acc.add(\n+    acc.add_group(\n+        &GroupLabel(\"Generate getter/setter\".to_owned()),\n         AssistId(\"generate_getter\", AssistKind::Generate),\n         \"Generate a getter method\",\n         target,"}, {"sha": "821c2eed5468d1ffb235d7d8eaf37c58786c04f0", "filename": "crates/assists/src/handlers/generate_getter_mut.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fdc556632e39145678219ace8476e12d7d70d41/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_getter_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fdc556632e39145678219ace8476e12d7d70d41/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_getter_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_getter_mut.rs?ref=3fdc556632e39145678219ace8476e12d7d70d41", "patch": "@@ -1,10 +1,9 @@\n use stdx::{format_to, to_lower_snake_case};\n-use syntax::ast::VisibilityOwner;\n-use syntax::ast::{self, AstNode, NameOwner};\n+use syntax::ast::{self, AstNode, NameOwner, VisibilityOwner};\n \n use crate::{\n     utils::{find_impl_block_end, find_struct_impl, generate_impl_text},\n-    AssistContext, AssistId, AssistKind, Assists,\n+    AssistContext, AssistId, AssistKind, Assists, GroupLabel,\n };\n \n // Assist: generate_getter_mut\n@@ -46,7 +45,8 @@ pub(crate) fn generate_getter_mut(acc: &mut Assists, ctx: &AssistContext) -> Opt\n     )?;\n \n     let target = field.syntax().text_range();\n-    acc.add(\n+    acc.add_group(\n+        &GroupLabel(\"Generate getter/setter\".to_owned()),\n         AssistId(\"generate_getter_mut\", AssistKind::Generate),\n         \"Generate a mut getter method\",\n         target,"}, {"sha": "288cf745d5ff8c800f6e2b2b531c2a5c04bbb7d6", "filename": "crates/assists/src/handlers/generate_setter.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fdc556632e39145678219ace8476e12d7d70d41/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_setter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fdc556632e39145678219ace8476e12d7d70d41/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_setter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_setter.rs?ref=3fdc556632e39145678219ace8476e12d7d70d41", "patch": "@@ -1,10 +1,9 @@\n use stdx::{format_to, to_lower_snake_case};\n-use syntax::ast::VisibilityOwner;\n-use syntax::ast::{self, AstNode, NameOwner};\n+use syntax::ast::{self, AstNode, NameOwner, VisibilityOwner};\n \n use crate::{\n     utils::{find_impl_block_end, find_struct_impl, generate_impl_text},\n-    AssistContext, AssistId, AssistKind, Assists,\n+    AssistContext, AssistId, AssistKind, Assists, GroupLabel,\n };\n \n // Assist: generate_setter\n@@ -46,7 +45,8 @@ pub(crate) fn generate_setter(acc: &mut Assists, ctx: &AssistContext) -> Option<\n     )?;\n \n     let target = field.syntax().text_range();\n-    acc.add(\n+    acc.add_group(\n+        &GroupLabel(\"Generate getter/setter\".to_owned()),\n         AssistId(\"generate_setter\", AssistKind::Generate),\n         \"Generate a setter method\",\n         target,"}]}