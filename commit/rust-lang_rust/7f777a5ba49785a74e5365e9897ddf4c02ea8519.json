{"sha": "7f777a5ba49785a74e5365e9897ddf4c02ea8519", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNzc3YTViYTQ5Nzg1YTc0ZTUzNjVlOTg5N2RkZjRjMDJlYTg1MTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-10T20:17:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-10T20:17:10Z"}, "message": "auto merge of #14752 : jakub-/rust/issue-11940, r=alexcrichton\n\nFixes #8315\r\nFixes #11940", "tree": {"sha": "5ba334a7e23ea671ad328995811b52e0f7fa7312", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ba334a7e23ea671ad328995811b52e0f7fa7312"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f777a5ba49785a74e5365e9897ddf4c02ea8519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f777a5ba49785a74e5365e9897ddf4c02ea8519", "html_url": "https://github.com/rust-lang/rust/commit/7f777a5ba49785a74e5365e9897ddf4c02ea8519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f777a5ba49785a74e5365e9897ddf4c02ea8519/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bb8f88d3a79d3f8f10dca8cedf00cf57f6a94f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb8f88d3a79d3f8f10dca8cedf00cf57f6a94f6", "html_url": "https://github.com/rust-lang/rust/commit/9bb8f88d3a79d3f8f10dca8cedf00cf57f6a94f6"}, {"sha": "f8b4e821ea856d84f1521ea82148bd108c8faba2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b4e821ea856d84f1521ea82148bd108c8faba2", "html_url": "https://github.com/rust-lang/rust/commit/f8b4e821ea856d84f1521ea82148bd108c8faba2"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "f6fb6c8ba2013e6c4f0dacdab5c96d6c009ce500", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=7f777a5ba49785a74e5365e9897ddf4c02ea8519", "patch": "@@ -312,9 +312,12 @@ fn trans_opt<'a>(bcx: &'a Block<'a>, o: &Opt) -> opt_result<'a> {\n             let datum = datum::rvalue_scratch_datum(bcx, struct_ty, \"\");\n             return single_result(Result::new(bcx, datum.val));\n         }\n-        lit(ConstLit(lit_id)) => {\n-            let (llval, _) = consts::get_const_val(bcx.ccx(), lit_id);\n-            return single_result(Result::new(bcx, llval));\n+        lit(l @ ConstLit(ref def_id)) => {\n+            let lit_ty = ty::node_id_to_type(bcx.tcx(), lit_to_expr(bcx.tcx(), &l).id);\n+            let (llval, _) = consts::get_const_val(bcx.ccx(), *def_id);\n+            let lit_datum = immediate_rvalue(llval, lit_ty);\n+            let lit_datum = unpack_datum!(bcx, lit_datum.to_appropriate_datum(bcx));\n+            return single_result(Result::new(bcx, lit_datum.val));\n         }\n         var(disr_val, ref repr) => {\n             return adt::trans_case(bcx, &**repr, disr_val);"}, {"sha": "9bd6b8ed3618c97b57397d274a6212b0af441960", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=7f777a5ba49785a74e5365e9897ddf4c02ea8519", "patch": "@@ -599,7 +599,7 @@ pub fn C_str_slice(cx: &CrateContext, s: InternedString) -> ValueRef {\n         let len = s.get().len();\n         let cs = llvm::LLVMConstPointerCast(C_cstr(cx, s, false),\n                                             Type::i8p(cx).to_ref());\n-        C_struct(cx, [cs, C_uint(cx, len)], false)\n+        C_named_struct(cx.tn.find_type(\"str_slice\").unwrap(), [cs, C_uint(cx, len)])\n     }\n }\n "}, {"sha": "a80ae9e2596da0c16a2f0c2ad488f2a215dfb43e", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=7f777a5ba49785a74e5365e9897ddf4c02ea8519", "patch": "@@ -233,12 +233,12 @@ impl CrateContext {\n             ccx.int_type = Type::int(&ccx);\n             ccx.opaque_vec_type = Type::opaque_vec(&ccx);\n \n-            ccx.tn.associate_type(\"tydesc\", &Type::tydesc(&ccx));\n-\n             let mut str_slice_ty = Type::named_struct(&ccx, \"str_slice\");\n             str_slice_ty.set_struct_body([Type::i8p(&ccx), ccx.int_type], false);\n             ccx.tn.associate_type(\"str_slice\", &str_slice_ty);\n \n+            ccx.tn.associate_type(\"tydesc\", &Type::tydesc(&ccx, str_slice_ty));\n+\n             if ccx.sess().count_llvm_insns() {\n                 base::init_insn_ctxt()\n             }"}, {"sha": "a6290a8edb4421f33ab0b3419e22296889c966d8", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=7f777a5ba49785a74e5365e9897ddf4c02ea8519", "patch": "@@ -20,7 +20,6 @@ use middle::trans::cleanup;\n use middle::trans::common::*;\n use middle::trans::debuginfo;\n use middle::trans::expr;\n-use middle::trans::type_of;\n use middle::ty;\n use util::ppaux::Repr;\n \n@@ -343,14 +342,10 @@ pub fn trans_ret<'a>(bcx: &'a Block<'a>,\n \n fn str_slice_arg<'a>(bcx: &'a Block<'a>, s: InternedString) -> ValueRef {\n     let ccx = bcx.ccx();\n-    let t = ty::mk_str_slice(bcx.tcx(), ty::ReStatic, ast::MutImmutable);\n     let s = C_str_slice(ccx, s);\n     let slot = alloca(bcx, val_ty(s), \"__temp\");\n     Store(bcx, s, slot);\n-\n-    // The type of C_str_slice is { i8*, i64 }, but the type of the &str is\n-    // %str_slice, so we do a bitcast here to the right type.\n-    BitCast(bcx, slot, type_of::type_of(ccx, t).ptr_to())\n+    slot\n }\n \n pub fn trans_fail<'a>("}, {"sha": "5d58500f761a4581044d0af023814b4c5a4391ee", "filename": "src/librustc/middle/trans/type_.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs?ref=7f777a5ba49785a74e5365e9897ddf4c02ea8519", "patch": "@@ -186,7 +186,7 @@ impl Type {\n         Type::func([t], &Type::void(ccx))\n     }\n \n-    pub fn tydesc(ccx: &CrateContext) -> Type {\n+    pub fn tydesc(ccx: &CrateContext, str_slice_ty: Type) -> Type {\n         let mut tydesc = Type::named_struct(ccx, \"tydesc\");\n         let glue_fn_ty = Type::glue_fn(ccx, Type::i8p(ccx)).ptr_to();\n \n@@ -200,7 +200,7 @@ impl Type {\n                      int_ty,     // align\n                      glue_fn_ty, // drop\n                      glue_fn_ty, // visit\n-                     Type::struct_(ccx, [Type::i8p(ccx), Type::int(ccx)], false)]; // name\n+                     str_slice_ty]; // name\n         tydesc.set_struct_body(elems, false);\n \n         tydesc"}, {"sha": "bbe7eff229b0016beabb6b2e1263339428d4d652", "filename": "src/test/run-pass/issue-11940.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Ftest%2Frun-pass%2Fissue-11940.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f777a5ba49785a74e5365e9897ddf4c02ea8519/src%2Ftest%2Frun-pass%2Fissue-11940.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11940.rs?ref=7f777a5ba49785a74e5365e9897ddf4c02ea8519", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static TEST_STR: &'static str = \"abcd\";\n+\n+fn main() {\n+    let s = \"abcd\";\n+    match s {\n+        TEST_STR => (),\n+        _ => unreachable!()\n+    }\n+}"}]}