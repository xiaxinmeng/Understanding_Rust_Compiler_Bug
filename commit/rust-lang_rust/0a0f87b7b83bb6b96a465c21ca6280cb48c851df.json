{"sha": "0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMGY4N2I3YjgzYmI2Yjk2YTQ2NWMyMWNhNjI4MGNiNDhjODUxZGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-31T12:21:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-31T12:21:29Z"}, "message": "auto merge of #11918 : omasanori/rust/reduce-warnings, r=alexcrichton\n\nMoving forward to green waterfall.", "tree": {"sha": "ff7b5ed05da0f40290b90eb6718f2b594029f3af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff7b5ed05da0f40290b90eb6718f2b594029f3af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "html_url": "https://github.com/rust-lang/rust/commit/0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f910a977db8fb425f9dfbfcf01438adf2a134670", "url": "https://api.github.com/repos/rust-lang/rust/commits/f910a977db8fb425f9dfbfcf01438adf2a134670", "html_url": "https://github.com/rust-lang/rust/commit/f910a977db8fb425f9dfbfcf01438adf2a134670"}, {"sha": "5281d874ef65899891f57e8d1deed9f8add5bdb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5281d874ef65899891f57e8d1deed9f8add5bdb2", "html_url": "https://github.com/rust-lang/rust/commit/5281d874ef65899891f57e8d1deed9f8add5bdb2"}], "stats": {"total": 19, "additions": 5, "deletions": 14}, "files": [{"sha": "f6e87212d17bea29d2d9d6d65568477b897f2962", "filename": "src/libstd/io/extensions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fio%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fio%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fextensions.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -366,7 +366,7 @@ mod test {\n     fn push_bytes_fail_reset_len() {\n         // push_bytes unsafely sets the vector length. This is testing that\n         // upon failure the length is reset correctly.\n-        let reader = ErroringLaterReader {\n+        let _reader = ErroringLaterReader {\n             count: 0,\n         };\n         // FIXME (#7049): Figure out some other way to do this."}, {"sha": "29bf6261a0748c7dc726ce6629cc35b6fb7418c0", "filename": "src/libstd/io/net/addrinfo.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fio%2Fnet%2Faddrinfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fio%2Fnet%2Faddrinfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Faddrinfo.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -102,10 +102,6 @@ fn lookup(hostname: Option<&str>, servname: Option<&str>, hint: Option<Hint>)\n // permission without help of apk\n #[cfg(test, not(target_os = \"android\"))]\n mod test {\n-    use io::net::ip::Ipv4Addr;\n-    use prelude::*;\n-    use super::*;\n-\n     iotest!(fn dns_smoke_test() {\n         let ipaddrs = get_host_addresses(\"localhost\").unwrap();\n         let mut found_local = false;"}, {"sha": "475e3b206f2ace52f836c6b6ed38316f735b37bf", "filename": "src/libstd/io/net/tcp.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -632,7 +632,7 @@ mod test {\n \n         spawn(proc() {\n             port.recv();\n-            let stream = TcpStream::connect(addr);\n+            let _stream = TcpStream::connect(addr);\n             // Close\n             port.recv();\n         });\n@@ -641,12 +641,12 @@ mod test {\n             let mut acceptor = TcpListener::bind(addr).listen();\n             chan.send(());\n             {\n-                let stream = acceptor.accept();\n+                let _stream = acceptor.accept();\n                 // Close client\n                 chan.send(());\n             }\n             // Close listener\n         }\n-        let listener = TcpListener::bind(addr);\n+        let _listener = TcpListener::bind(addr);\n     })\n }"}, {"sha": "8acfd197618c5532c8ef31f2ac15146396106cd0", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -907,7 +907,6 @@ mod tests {\n \n     use num::*;\n     use num;\n-    use mem;\n \n     #[test]\n     fn test_num() {"}, {"sha": "6bb7bf6c5637fdad4618c816521545493aa0a5ed", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -909,7 +909,6 @@ mod tests {\n \n     use num::*;\n     use num;\n-    use mem;\n \n     #[test]\n     fn test_num() {"}, {"sha": "c0f67912cdec6c0080041635b60ee160940a519d", "filename": "src/libstd/num/int_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint_macros.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -444,7 +444,6 @@ mod tests {\n     use num;\n     use num::CheckedDiv;\n     use num::Bitwise;\n-    use mem;\n \n     #[test]\n     fn test_num() {"}, {"sha": "956c04db09c63416acabae661c8d83b763b6abf5", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -1075,7 +1075,6 @@ pub fn test_num<T:Num + NumCast>(ten: T, two: T) {\n mod tests {\n     use prelude::*;\n     use super::*;\n-    use num;\n     use i8;\n     use i16;\n     use i32;"}, {"sha": "224f16cc6639e42ad386d697a0410965a006536c", "filename": "src/libstd/num/uint_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fuint_macros.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -315,7 +315,6 @@ mod tests {\n     use num;\n     use num::CheckedDiv;\n     use num::Bitwise;\n-    use mem;\n     use u16;\n \n     #[test]"}, {"sha": "4d2dcb6c51caba65506984da645a32fc4f9740b9", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0f87b7b83bb6b96a465c21ca6280cb48c851df/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=0a0f87b7b83bb6b96a465c21ca6280cb48c851df", "patch": "@@ -77,7 +77,7 @@ mod libunwind {\n     //! Unwind library interface\n \n     #[allow(non_camel_case_types)];\n-    #[allow(dead_code)] // these are just bindings\n+    #[allow(dead_code)]; // these are just bindings\n \n     use libc::{uintptr_t};\n "}]}