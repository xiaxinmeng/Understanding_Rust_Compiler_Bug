{"sha": "5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMGQ0NmNkNDhjOTI4MWIzNTAyZDVhYTIwNDcxMjRmM2VlNmIyZTA=", "commit": {"author": {"name": "Marcin S", "email": "scatman@bu.edu", "date": "2019-01-03T18:07:21Z"}, "committer": {"name": "Marcin S", "email": "scatman@bu.edu", "date": "2019-01-03T18:07:21Z"}, "message": "Add ui/for_kv_map test for false positive in #1279", "tree": {"sha": "c07e8732f9d70be6cb1a4ccb9939cd0395c66491", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c07e8732f9d70be6cb1a4ccb9939cd0395c66491"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0", "html_url": "https://github.com/rust-lang/rust/commit/5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0/comments", "author": {"login": "mrcnski", "id": 6035856, "node_id": "MDQ6VXNlcjYwMzU4NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6035856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrcnski", "html_url": "https://github.com/mrcnski", "followers_url": "https://api.github.com/users/mrcnski/followers", "following_url": "https://api.github.com/users/mrcnski/following{/other_user}", "gists_url": "https://api.github.com/users/mrcnski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrcnski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrcnski/subscriptions", "organizations_url": "https://api.github.com/users/mrcnski/orgs", "repos_url": "https://api.github.com/users/mrcnski/repos", "events_url": "https://api.github.com/users/mrcnski/events{/privacy}", "received_events_url": "https://api.github.com/users/mrcnski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mrcnski", "id": 6035856, "node_id": "MDQ6VXNlcjYwMzU4NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6035856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrcnski", "html_url": "https://github.com/mrcnski", "followers_url": "https://api.github.com/users/mrcnski/followers", "following_url": "https://api.github.com/users/mrcnski/following{/other_user}", "gists_url": "https://api.github.com/users/mrcnski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrcnski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrcnski/subscriptions", "organizations_url": "https://api.github.com/users/mrcnski/orgs", "repos_url": "https://api.github.com/users/mrcnski/repos", "events_url": "https://api.github.com/users/mrcnski/events{/privacy}", "received_events_url": "https://api.github.com/users/mrcnski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b8b01e8dc9d5ba7209256061c8ace789f95e432", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8b01e8dc9d5ba7209256061c8ace789f95e432", "html_url": "https://github.com/rust-lang/rust/commit/5b8b01e8dc9d5ba7209256061c8ace789f95e432"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "549187756abd7d24862955ae2374dae2f59db4b8", "filename": "tests/ui/for_kv_map.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0/tests%2Fui%2Ffor_kv_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0/tests%2Fui%2Ffor_kv_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_kv_map.rs?ref=5f0d46cd48c9281b3502d5aa2047124f3ee6b2e0", "patch": "@@ -42,15 +42,18 @@ fn main() {\n     for (k, _value) in rm {\n         let _k = k;\n     }\n-    test_for_kv_map();\n-}\n \n-fn test_for_kv_map() {\n-    let m: HashMap<u64, u64> = HashMap::new();\n+    // The following should not produce warnings.\n \n+    let m: HashMap<u64, u64> = HashMap::new();\n     // No error, _value is actually used\n     for (k, _value) in &m {\n         let _ = _value;\n         let _k = k;\n     }\n+\n+    let m: HashMap<u64, String> = Default::default();\n+    for (_, v) in m {\n+        let _v = v;\n+    }\n }"}]}