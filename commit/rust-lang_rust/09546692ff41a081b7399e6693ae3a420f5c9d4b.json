{"sha": "09546692ff41a081b7399e6693ae3a420f5c9d4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NTQ2NjkyZmY0MWEwODFiNzM5OWU2NjkzYWUzYTQyMGY1YzlkNGI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-05-10T11:22:45Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-06-11T15:24:01Z"}, "message": "Add more tests for type alias impl Trait", "tree": {"sha": "ede80ded2b97b190435fb94400b8b77ad7907eb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ede80ded2b97b190435fb94400b8b77ad7907eb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09546692ff41a081b7399e6693ae3a420f5c9d4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09546692ff41a081b7399e6693ae3a420f5c9d4b", "html_url": "https://github.com/rust-lang/rust/commit/09546692ff41a081b7399e6693ae3a420f5c9d4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09546692ff41a081b7399e6693ae3a420f5c9d4b/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f97070db90b0e7310dd741673dd4048232d60b82", "url": "https://api.github.com/repos/rust-lang/rust/commits/f97070db90b0e7310dd741673dd4048232d60b82", "html_url": "https://github.com/rust-lang/rust/commit/f97070db90b0e7310dd741673dd4048232d60b82"}], "stats": {"total": 163, "additions": 163, "deletions": 0}, "files": [{"sha": "e05a3bc6d91807673ae47ea45433ed8f8d37d90e", "filename": "src/test/rustdoc/auxiliary/issue-73061.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-73061.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-73061.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-73061.rs?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,17 @@\n+//edition:2018\n+\n+#![feature(type_alias_impl_trait)]\n+\n+pub trait Foo {\n+    type X: std::future::Future<Output = ()>;\n+    fn x(&self) -> Self::X;\n+}\n+\n+pub struct F;\n+\n+impl Foo for F {\n+    type X = impl std::future::Future<Output = ()>;\n+    fn x(&self) -> Self::X {\n+        async {}\n+    }\n+}"}, {"sha": "2700f2370eec8e85ffa10c2138315d3cb9a74bf5", "filename": "src/test/rustdoc/issue-73061-cross-crate-opaque-assoc-type.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Frustdoc%2Fissue-73061-cross-crate-opaque-assoc-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Frustdoc%2Fissue-73061-cross-crate-opaque-assoc-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-73061-cross-crate-opaque-assoc-type.rs?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,14 @@\n+// Regression test for ICE #73061\n+\n+// aux-build:issue-73061.rs\n+\n+extern crate issue_73061;\n+\n+pub struct Z;\n+\n+impl issue_73061::Foo for Z {\n+    type X = <issue_73061::F as issue_73061::Foo>::X;\n+    fn x(&self) -> Self::X {\n+        issue_73061::F.x()\n+    }\n+}"}, {"sha": "3a7a5da075f11b841922ceeca209f97ebf952537", "filename": "src/test/ui/type-alias-impl-trait/issue-57188-associate-impl-capture.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57188-associate-impl-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57188-associate-impl-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57188-associate-impl-capture.rs?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,24 @@\n+// Regression test for #57188\n+\n+// check-pass\n+\n+#![feature(type_alias_impl_trait)]\n+\n+struct Baz<'a> {\n+    source: &'a str,\n+}\n+\n+trait Foo<'a> {\n+    type T: Iterator<Item = Baz<'a>> + 'a;\n+    fn foo(source: &'a str) -> Self::T;\n+}\n+\n+struct Bar;\n+impl<'a> Foo<'a> for Bar {\n+    type T = impl Iterator<Item = Baz<'a>> + 'a;\n+    fn foo(source: &'a str) -> Self::T {\n+        std::iter::once(Baz { source })\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "36779a0ce89c33b5839222c6721502834216a0c0", "filename": "src/test/ui/type-alias-impl-trait/issue-62000-associate-impl-trait-lifetimes.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-62000-associate-impl-trait-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-62000-associate-impl-trait-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-62000-associate-impl-trait-lifetimes.rs?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,38 @@\n+// Regression test for #62988\n+\n+// check-pass\n+\n+#![feature(type_alias_impl_trait)]\n+\n+trait MyTrait {\n+    type AssocType: Send;\n+    fn ret(&self) -> Self::AssocType;\n+}\n+\n+impl MyTrait for () {\n+    type AssocType = impl Send;\n+    fn ret(&self) -> Self::AssocType {\n+        ()\n+    }\n+}\n+\n+impl<'a> MyTrait for &'a () {\n+    type AssocType = impl Send;\n+    fn ret(&self) -> Self::AssocType {\n+        ()\n+    }\n+}\n+\n+trait MyLifetimeTrait<'a> {\n+    type AssocType: Send + 'a;\n+    fn ret(&self) -> Self::AssocType;\n+}\n+\n+impl<'a> MyLifetimeTrait<'a> for &'a () {\n+    type AssocType = impl Send + 'a;\n+    fn ret(&self) -> Self::AssocType {\n+        *self\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "6732902c09a504d7aef29f1291d36a998cfe3a8e", "filename": "src/test/ui/type-alias-impl-trait/issue-69136-inner-lifetime-resolve-error.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-error.rs?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,22 @@\n+// Regression test for #69136\n+\n+#![feature(type_alias_impl_trait)]\n+\n+trait SomeTrait {}\n+\n+impl SomeTrait for () {}\n+\n+trait WithAssoc<A> {\n+    type AssocType;\n+}\n+\n+impl<T> WithAssoc<T> for () {\n+    type AssocType = ();\n+}\n+\n+type Return<A> = impl WithAssoc<A, AssocType = impl SomeTrait + 'a>;\n+//~^ ERROR use of undeclared lifetime name `'a`\n+\n+fn my_fun() -> Return<()> {}\n+\n+fn main() {}"}, {"sha": "fe45e39d938f009e1b340cd155fbc6fb322cbe0b", "filename": "src/test/ui/type-alias-impl-trait/issue-69136-inner-lifetime-resolve-error.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-error.stderr?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,11 @@\n+error[E0261]: use of undeclared lifetime name `'a`\n+  --> $DIR/issue-69136-inner-lifetime-resolve-error.rs:17:65\n+   |\n+LL | type Return<A> = impl WithAssoc<A, AssocType = impl SomeTrait + 'a>;\n+   |             -                                                   ^^ undeclared lifetime\n+   |             |\n+   |             help: consider introducing lifetime `'a` here: `'a,`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0261`."}, {"sha": "a6916eda8b093c294a61ed786ee52b87d4f26688", "filename": "src/test/ui/type-alias-impl-trait/issue-69136-inner-lifetime-resolve-ok.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-69136-inner-lifetime-resolve-ok.rs?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,23 @@\n+// Test-pass variant of #69136\n+\n+// check-pass\n+\n+#![feature(type_alias_impl_trait)]\n+\n+trait SomeTrait {}\n+\n+impl SomeTrait for () {}\n+\n+trait WithAssoc {\n+    type AssocType;\n+}\n+\n+impl WithAssoc for () {\n+    type AssocType = ();\n+}\n+\n+type Return<'a> = impl WithAssoc<AssocType = impl Sized + 'a>;\n+\n+fn my_fun<'a>() -> Return<'a> {}\n+\n+fn main() {}"}, {"sha": "fd954801dc047c95593dab02422e2cb882b4ad43", "filename": "src/test/ui/type-alias-impl-trait/type-alias-nested-impl-trait.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-nested-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09546692ff41a081b7399e6693ae3a420f5c9d4b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-nested-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype-alias-nested-impl-trait.rs?ref=09546692ff41a081b7399e6693ae3a420f5c9d4b", "patch": "@@ -0,0 +1,14 @@\n+// run-pass\n+\n+#![feature(type_alias_impl_trait)]\n+\n+use std::iter::{once, Chain};\n+\n+type I<A> = Chain<A, impl Iterator<Item = &'static str>>;\n+fn test2<A: Iterator<Item = &'static str>>(x: A) -> I<A> {\n+    x.chain(once(\"5\"))\n+}\n+\n+fn main() {\n+    assert_eq!(vec![\"1\", \"3\", \"5\"], test2([\"1\", \"3\"].iter().cloned()).collect::<Vec<_>>());\n+}"}]}