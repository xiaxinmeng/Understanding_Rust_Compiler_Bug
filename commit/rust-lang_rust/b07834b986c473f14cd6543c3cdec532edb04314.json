{"sha": "b07834b986c473f14cd6543c3cdec532edb04314", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNzgzNGI5ODZjNDczZjE0Y2Q2NTQzYzNjZGVjNTMyZWRiMDQzMTQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-06T11:30:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-06T11:30:59Z"}, "message": "Rollup merge of #84945 - fee1-dead:E0583-better-message, r=petrochenkov\n\nE0583: Include secondary path in error message\n\nFixes #84819.", "tree": {"sha": "474930a742f3954aaf90022ceb51a00bc7fac10d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/474930a742f3954aaf90022ceb51a00bc7fac10d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b07834b986c473f14cd6543c3cdec532edb04314", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgk9NzCRBK7hj4Ov3rIwAAkTUIACfxxnoW5k37b+MCWuWNKIkG\nbeWfjc4cEpjE1GGKFn0W/GeCCrUrfKKitDVqn4ZmX0UVdSRehu5gCJ3cAhNtEHZ8\nD9PCPvCuy4Lkn1F8rk+6kmLqIJXsymsUT040aSMqD3zrjbcbPbjoMooa9FOZOtXY\nqpRGG5K2Pf1FThvg9HdEWCkL6yqgfcHH2CykJoCmbZcAGy4wXeFqoHEY6DkUf0jR\nmVp5NK2zzCoPu0jbVMuqdzDmFE5Bvvtdvptgkbey5VBg3XUulHNGr4JMmu+Rzc+s\nCNarUg1lzd6OSybIdeLr3Qc/5WYSGIM7c1LnEHxXPXE/ngjPbwO12N+1lfKg074=\n=5V1w\n-----END PGP SIGNATURE-----\n", "payload": "tree 474930a742f3954aaf90022ceb51a00bc7fac10d\nparent b5f40df95cf975feba9871346e67e0bc6799ed0e\nparent 4617b03316dc5816387a748f0f2e1196be28db23\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620300659 +0200\ncommitter GitHub <noreply@github.com> 1620300659 +0200\n\nRollup merge of #84945 - fee1-dead:E0583-better-message, r=petrochenkov\n\nE0583: Include secondary path in error message\n\nFixes #84819.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b07834b986c473f14cd6543c3cdec532edb04314", "html_url": "https://github.com/rust-lang/rust/commit/b07834b986c473f14cd6543c3cdec532edb04314", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b07834b986c473f14cd6543c3cdec532edb04314/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f40df95cf975feba9871346e67e0bc6799ed0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f40df95cf975feba9871346e67e0bc6799ed0e", "html_url": "https://github.com/rust-lang/rust/commit/b5f40df95cf975feba9871346e67e0bc6799ed0e"}, {"sha": "4617b03316dc5816387a748f0f2e1196be28db23", "url": "https://api.github.com/repos/rust-lang/rust/commits/4617b03316dc5816387a748f0f2e1196be28db23", "html_url": "https://github.com/rust-lang/rust/commit/4617b03316dc5816387a748f0f2e1196be28db23"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "4d777049f0d627614d9d322fa7b47d0f175c7753", "filename": "compiler/rustc_expand/src/module.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/compiler%2Frustc_expand%2Fsrc%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/compiler%2Frustc_expand%2Fsrc%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmodule.rs?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -36,7 +36,7 @@ crate struct ParsedExternalMod {\n pub enum ModError<'a> {\n     CircularInclusion(Vec<PathBuf>),\n     ModInBlock(Option<Ident>),\n-    FileNotFound(Ident, PathBuf),\n+    FileNotFound(Ident, PathBuf, PathBuf),\n     MultipleCandidates(Ident, PathBuf, PathBuf),\n     ParserError(DiagnosticBuilder<'a>),\n }\n@@ -219,7 +219,7 @@ pub fn default_submod_path<'a>(\n             file_path: secondary_path,\n             dir_ownership: DirOwnership::Owned { relative: None },\n         }),\n-        (false, false) => Err(ModError::FileNotFound(ident, default_path)),\n+        (false, false) => Err(ModError::FileNotFound(ident, default_path, secondary_path)),\n         (true, true) => Err(ModError::MultipleCandidates(ident, default_path, secondary_path)),\n     }\n }\n@@ -247,7 +247,7 @@ impl ModError<'_> {\n                 }\n                 err\n             }\n-            ModError::FileNotFound(ident, default_path) => {\n+            ModError::FileNotFound(ident, default_path, secondary_path) => {\n                 let mut err = struct_span_err!(\n                     diag,\n                     span,\n@@ -256,9 +256,10 @@ impl ModError<'_> {\n                     ident,\n                 );\n                 err.help(&format!(\n-                    \"to create the module `{}`, create file \\\"{}\\\"\",\n+                    \"to create the module `{}`, create file \\\"{}\\\" or \\\"{}\\\"\",\n                     ident,\n                     default_path.display(),\n+                    secondary_path.display(),\n                 ));\n                 err\n             }"}, {"sha": "c7bbbf114997d36b612fa344abc1b1a8f7c87ded", "filename": "src/test/ui/error-codes/E0583.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Ferror-codes%2FE0583.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Ferror-codes%2FE0583.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0583.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `module_that_doesnt_exist`\n LL | mod module_that_doesnt_exist;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: to create the module `module_that_doesnt_exist`, create file \"$DIR/module_that_doesnt_exist.rs\"\n+   = help: to create the module `module_that_doesnt_exist`, create file \"$DIR/module_that_doesnt_exist.rs\" or \"$DIR/module_that_doesnt_exist/mod.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "7bc8efd7e4a97ee2cdde8a50e7d015d6968f50da", "filename": "src/test/ui/invalid-module-declaration/invalid-module-declaration.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `baz`\n LL | pub mod baz;\n    | ^^^^^^^^^^^^\n    |\n-   = help: to create the module `baz`, create file \"$DIR/auxiliary/foo/bar/baz.rs\"\n+   = help: to create the module `baz`, create file \"$DIR/auxiliary/foo/bar/baz.rs\" or \"$DIR/auxiliary/foo/bar/baz/mod.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "31e4206a5463abeafc3656b63a5dc6cddbe959b8", "filename": "src/test/ui/missing_non_modrs_mod/missing_non_modrs_mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `missing`\n LL | mod missing;\n    | ^^^^^^^^^^^^\n    |\n-   = help: to create the module `missing`, create file \"$DIR/foo/missing.rs\"\n+   = help: to create the module `missing`, create file \"$DIR/foo/missing.rs\" or \"$DIR/foo/missing/mod.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "9d252398b7a14bf0d492678bfa82da2f75ea9442", "filename": "src/test/ui/missing_non_modrs_mod/missing_non_modrs_mod_inline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod_inline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod_inline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing_non_modrs_mod%2Fmissing_non_modrs_mod_inline.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `missing`\n LL |     mod missing;\n    |     ^^^^^^^^^^^^\n    |\n-   = help: to create the module `missing`, create file \"$DIR/foo_inline/inline/missing.rs\"\n+   = help: to create the module `missing`, create file \"$DIR/foo_inline/inline/missing.rs\" or \"$DIR/foo_inline/inline/missing/mod.rs\"\n \n error: aborting due to previous error\n "}, {"sha": "62456d518804feb0646358d5412a88b90d79f970", "filename": "src/test/ui/parser/mod_file_not_exist.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `not_a_real_file`\n LL | mod not_a_real_file;\n    | ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: to create the module `not_a_real_file`, create file \"$DIR/not_a_real_file.rs\"\n+   = help: to create the module `not_a_real_file`, create file \"$DIR/not_a_real_file.rs\" or \"$DIR/not_a_real_file/mod.rs\"\n \n error[E0433]: failed to resolve: use of undeclared crate or module `mod_file_aux`\n   --> $DIR/mod_file_not_exist.rs:7:16"}, {"sha": "d5143dbe982ae28703b94d9f45a9e72166e7df79", "filename": "src/test/ui/parser/mod_file_not_exist_windows.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmod_file_not_exist_windows.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `not_a_real_file`\n LL | mod not_a_real_file;\n    | ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: to create the module `not_a_real_file`, create file \"$DIR/not_a_real_file.rs\"\n+   = help: to create the module `not_a_real_file`, create file \"$DIR/not_a_real_file.rs\" or \"$DIR/not_a_real_file/mod.rs\"\n \n error[E0433]: failed to resolve: use of undeclared crate or module `mod_file_aux`\n   --> $DIR/mod_file_not_exist_windows.rs:7:16"}, {"sha": "dac6e7a3550567f89fcf5241381d2519ca84448d", "filename": "src/test/ui/parser/unsafe-mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fparser%2Funsafe-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Fparser%2Funsafe-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funsafe-mod.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `n`\n LL | unsafe mod n;\n    | ^^^^^^^^^^^^^\n    |\n-   = help: to create the module `n`, create file \"$DIR/n.rs\"\n+   = help: to create the module `n`, create file \"$DIR/n.rs\" or \"$DIR/n/mod.rs\"\n \n error: module cannot be declared unsafe\n   --> $DIR/unsafe-mod.rs:1:1"}, {"sha": "dd0dac95e36463f412007a7e1a0fb170137b2882", "filename": "src/test/ui/rfc-2457/mod_file_nonascii_forbidden.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Frfc-2457%2Fmod_file_nonascii_forbidden.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b07834b986c473f14cd6543c3cdec532edb04314/src%2Ftest%2Fui%2Frfc-2457%2Fmod_file_nonascii_forbidden.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2457%2Fmod_file_nonascii_forbidden.stderr?ref=b07834b986c473f14cd6543c3cdec532edb04314", "patch": "@@ -4,7 +4,7 @@ error[E0583]: file not found for module `\u0159\u0173\u015b\u0165`\n LL | mod \u0159\u0173\u015b\u0165;\n    | ^^^^^^^^^\n    |\n-   = help: to create the module `\u0159\u0173\u015b\u0165`, create file \"$DIR/\u0159\u0173\u015b\u0165.rs\"\n+   = help: to create the module `\u0159\u0173\u015b\u0165`, create file \"$DIR/\u0159\u0173\u015b\u0165.rs\" or \"$DIR/\u0159\u0173\u015b\u0165/mod.rs\"\n \n error[E0754]: trying to load file for module `\u0159\u0173\u015b\u0165` with non-ascii identifier name\n   --> $DIR/mod_file_nonascii_forbidden.rs:1:5"}]}