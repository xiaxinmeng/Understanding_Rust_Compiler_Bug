{"sha": "032d9aa7d5160f39ab745a5da13d686ec214bb9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMmQ5YWE3ZDUxNjBmMzlhYjc0NWE1ZGExM2Q2ODZlYzIxNGJiOWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T08:10:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T08:10:34Z"}, "message": "also do some float-to-float cast testing", "tree": {"sha": "eecd9fc7cfd5a22d987e5a02690862a78e6e52b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eecd9fc7cfd5a22d987e5a02690862a78e6e52b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/032d9aa7d5160f39ab745a5da13d686ec214bb9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/032d9aa7d5160f39ab745a5da13d686ec214bb9b", "html_url": "https://github.com/rust-lang/rust/commit/032d9aa7d5160f39ab745a5da13d686ec214bb9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/032d9aa7d5160f39ab745a5da13d686ec214bb9b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a97ce8d94b681f8fb23b70260a219e528047e52a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a97ce8d94b681f8fb23b70260a219e528047e52a", "html_url": "https://github.com/rust-lang/rust/commit/a97ce8d94b681f8fb23b70260a219e528047e52a"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "990745c85d67e6636fcc45dbd622bb4b06ecfa40", "filename": "tests/run-pass/floats.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/032d9aa7d5160f39ab745a5da13d686ec214bb9b/tests%2Frun-pass%2Ffloats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/032d9aa7d5160f39ab745a5da13d686ec214bb9b/tests%2Frun-pass%2Ffloats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffloats.rs?ref=032d9aa7d5160f39ab745a5da13d686ec214bb9b", "patch": "@@ -17,7 +17,7 @@ fn main() {\n     let y: f32 = unsafe { std::mem::transmute(x) };\n     assert_eq!(y, 42.0_f32);\n \n-    // f32 casts\n+    // f32-to-int casts\n     assert_eq!(5.0f32 as u32, 5);\n     assert_eq!(-5.0f32 as u32, 0);\n     assert_eq!(5.0f32 as i32, 5);\n@@ -36,7 +36,7 @@ fn main() {\n     assert_eq!((u32::MAX-127) as f32 as u32, u32::MAX); // rounding loss\n     assert_eq!((u32::MAX-128) as f32 as u32, u32::MAX-255); // rounding loss\n \n-    // f64 casts\n+    // f64-to-int casts\n     assert_eq!(5.0f64 as u64, 5);\n     assert_eq!(-5.0f64 as u64, 0);\n     assert_eq!(5.0f64 as i64, 5);\n@@ -55,6 +55,14 @@ fn main() {\n     assert_eq!((u64::MAX-1023) as f64 as u64, u64::MAX); // rounding loss\n     assert_eq!((u64::MAX-1024) as f64 as u64, u64::MAX-2047); // rounding loss\n \n+    // f32 <-> f64 casts\n+    assert_eq!(5.0f64 as f32, 5.0f32);\n+    assert_eq!(5.0f32 as f64, 5.0f64);\n+    assert_eq!(std::f64::MAX as f32, std::f32::INFINITY);\n+    assert_eq!(std::f64::MIN as f32, std::f32::NEG_INFINITY);\n+    assert_eq!(std::f32::INFINITY as f64, std::f64::INFINITY);\n+    assert_eq!(std::f32::NEG_INFINITY as f64, std::f64::NEG_INFINITY);\n+\n     // f32 min/max\n     assert_eq!((1.0 as f32).max(-1.0), 1.0);\n     assert_eq!((1.0 as f32).min(-1.0), -1.0);"}]}