{"sha": "4c8a6b64de024dc4ab6eaf2a97aad4978967f59f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOGE2YjY0ZGUwMjRkYzRhYjZlYWYyYTk3YWFkNDk3ODk2N2Y1OWY=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-19T13:10:17Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-19T13:10:17Z"}, "message": "Test looping and recursive factorial.", "tree": {"sha": "86f8e6120c2112fb3e63d09b906ab13df90ee583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86f8e6120c2112fb3e63d09b906ab13df90ee583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c8a6b64de024dc4ab6eaf2a97aad4978967f59f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c8a6b64de024dc4ab6eaf2a97aad4978967f59f", "html_url": "https://github.com/rust-lang/rust/commit/4c8a6b64de024dc4ab6eaf2a97aad4978967f59f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c8a6b64de024dc4ab6eaf2a97aad4978967f59f/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ce6a250d4d5d7ceb8835935ad922b2146bcdaac", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce6a250d4d5d7ceb8835935ad922b2146bcdaac", "html_url": "https://github.com/rust-lang/rust/commit/7ce6a250d4d5d7ceb8835935ad922b2146bcdaac"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "99a3fb39ad2caa360043775e89c3b2868e0cb795", "filename": "test/basic.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4c8a6b64de024dc4ab6eaf2a97aad4978967f59f/test%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8a6b64de024dc4ab6eaf2a97aad4978967f59f/test%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fbasic.rs?ref=4c8a6b64de024dc4ab6eaf2a97aad4978967f59f", "patch": "@@ -47,4 +47,30 @@ fn call() -> i32 {\n     increment(1)\n }\n \n+#[miri_run(expected = \"Int(3628800)\")]\n+fn factorial_loop() -> i32 {\n+    let mut product = 1;\n+    let mut i = 1;\n+\n+    while i <= 10 {\n+        product *= i;\n+        i += 1;\n+    }\n+\n+    product\n+}\n+\n+#[miri_run(expected = \"Int(3628800)\")]\n+fn factorial_recursive() -> i32 {\n+    fn fact(n: i32) -> i32 {\n+        if n == 0 {\n+            1\n+        } else {\n+            n * fact(n - 1)\n+        }\n+    }\n+\n+    fact(10)\n+}\n+\n fn main() {}"}]}