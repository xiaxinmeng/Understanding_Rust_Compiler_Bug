{"sha": "54812011600a2c19f7076c438e6eabe6a8063774", "node_id": "C_kwDOAAsO6NoAKDU0ODEyMDExNjAwYTJjMTlmNzA3NmM0MzhlNmVhYmU2YTgwNjM3NzQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-08T02:59:56Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-08T03:00:10Z"}, "message": "Ignore projection type when determining upvar ancestory", "tree": {"sha": "a183ca61d51ad1674cf44757a42637a9fd26099b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a183ca61d51ad1674cf44757a42637a9fd26099b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54812011600a2c19f7076c438e6eabe6a8063774", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54812011600a2c19f7076c438e6eabe6a8063774", "html_url": "https://github.com/rust-lang/rust/commit/54812011600a2c19f7076c438e6eabe6a8063774", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54812011600a2c19f7076c438e6eabe6a8063774/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "680ff86391f19e12b485293f01372036e85ba87c", "url": "https://api.github.com/repos/rust-lang/rust/commits/680ff86391f19e12b485293f01372036e85ba87c", "html_url": "https://github.com/rust-lang/rust/commit/680ff86391f19e12b485293f01372036e85ba87c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9b94fda515363d0d0c48a6bd462685832e49b17a", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54812011600a2c19f7076c438e6eabe6a8063774/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54812011600a2c19f7076c438e6eabe6a8063774/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=54812011600a2c19f7076c438e6eabe6a8063774", "patch": "@@ -2278,7 +2278,7 @@ fn determine_place_ancestry_relation(\n     let projections_b = &place_b.projections;\n \n     let same_initial_projections =\n-        iter::zip(projections_a, projections_b).all(|(proj_a, proj_b)| proj_a == proj_b);\n+        iter::zip(projections_a, projections_b).all(|(proj_a, proj_b)| proj_a.kind == proj_b.kind);\n \n     if same_initial_projections {\n         // First min(n, m) projections are the same"}]}