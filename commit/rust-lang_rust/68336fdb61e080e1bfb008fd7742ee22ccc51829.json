{"sha": "68336fdb61e080e1bfb008fd7742ee22ccc51829", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MzM2ZmRiNjFlMDgwZTFiZmIwMDhmZDc3NDJlZTIyY2NjNTE4Mjk=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-02T11:11:46Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-02T11:11:46Z"}, "message": "Implement HasAttrs for Type-, Const- and LifetimeParam", "tree": {"sha": "e60c618ae8143017bf5186f4b7e3eb73b58535c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e60c618ae8143017bf5186f4b7e3eb73b58535c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68336fdb61e080e1bfb008fd7742ee22ccc51829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68336fdb61e080e1bfb008fd7742ee22ccc51829", "html_url": "https://github.com/rust-lang/rust/commit/68336fdb61e080e1bfb008fd7742ee22ccc51829", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68336fdb61e080e1bfb008fd7742ee22ccc51829/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec448ca4b33202e384eb034b4e15ed751355488c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec448ca4b33202e384eb034b4e15ed751355488c", "html_url": "https://github.com/rust-lang/rust/commit/ec448ca4b33202e384eb034b4e15ed751355488c"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "99fb65bac3f2b9325811a4b846b9fbda43077910", "filename": "crates/hir/src/attrs.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/68336fdb61e080e1bfb008fd7742ee22ccc51829/crates%2Fhir%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68336fdb61e080e1bfb008fd7742ee22ccc51829/crates%2Fhir%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fattrs.rs?ref=68336fdb61e080e1bfb008fd7742ee22ccc51829", "patch": "@@ -10,8 +10,8 @@ use hir_ty::db::HirDatabase;\n use syntax::ast;\n \n use crate::{\n-    Adt, Const, Enum, Field, Function, GenericParam, MacroDef, Module, ModuleDef, Static, Struct,\n-    Trait, TypeAlias, Union, Variant,\n+    Adt, Const, ConstParam, Enum, Field, Function, GenericParam, LifetimeParam, MacroDef, Module,\n+    ModuleDef, Static, Struct, Trait, TypeAlias, TypeParam, Union, Variant,\n };\n \n pub trait HasAttrs {\n@@ -65,23 +65,24 @@ impl_has_attrs![\n     (GenericParam, GenericParamId),\n ];\n \n-macro_rules! impl_has_attrs_adt {\n-    ($($adt:ident),*) => {$(\n-        impl HasAttrs for $adt {\n+macro_rules! impl_has_attrs_enum {\n+    ($($variant:ident),* for $enum:ident) => {$(\n+        impl HasAttrs for $variant {\n             fn attrs(self, db: &dyn HirDatabase) -> Attrs {\n-                Adt::$adt(self).attrs(db)\n+                $enum::$variant(self).attrs(db)\n             }\n             fn docs(self, db: &dyn HirDatabase) -> Option<Documentation> {\n-                Adt::$adt(self).docs(db)\n+                $enum::$variant(self).docs(db)\n             }\n             fn resolve_doc_path(self, db: &dyn HirDatabase, link: &str, ns: Option<Namespace>) -> Option<ModuleDef> {\n-                Adt::$adt(self).resolve_doc_path(db, link, ns)\n+                $enum::$variant(self).resolve_doc_path(db, link, ns)\n             }\n         }\n     )*};\n }\n \n-impl_has_attrs_adt![Struct, Union, Enum];\n+impl_has_attrs_enum![Struct, Union, Enum for Adt];\n+impl_has_attrs_enum![TypeParam, ConstParam, LifetimeParam for GenericParam];\n \n fn resolve_doc_path(\n     db: &dyn HirDatabase,"}]}