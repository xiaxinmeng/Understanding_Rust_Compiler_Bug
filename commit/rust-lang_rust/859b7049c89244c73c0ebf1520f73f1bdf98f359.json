{"sha": "859b7049c89244c73c0ebf1520f73f1bdf98f359", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1OWI3MDQ5Yzg5MjQ0YzczYzBlYmYxNTIwZjczZjFiZGY5OGYzNTk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T14:49:51Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T14:49:51Z"}, "message": "add method to ensure that a Value::ByRef is now a Value::ByVal*", "tree": {"sha": "84dd28ea60468946b8bc0d1efd146549a1641be7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84dd28ea60468946b8bc0d1efd146549a1641be7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/859b7049c89244c73c0ebf1520f73f1bdf98f359", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYHKAPAAoJEFbW7qD8Z6xGyJIP/3GvUdlkuiVix0/C8tvz7Kx4\nvCffHo9f9G1baT9TauLbgl3MDO2V6ChrILBT7WPdK14Yx2mrTIaUt7NqkQjfzk2P\nB8H9U2xBUvOHTbwfSGT/chGdeuU/ygWU00h7ehklQDAs01sJcCtUapfNpOTg8Mv6\nNXSkVOgXmRJGh62mQdikch2AoK5ET641dcGc86w9kIARWPPhd/e2b9SayMGRMW5D\nnLXZnPf9VfbDZSY1e9gOtrQQggrUWq/1RiwtNBCo1/SPCOQk5pkiRR4XzVzCsB09\nTk3zeocqNgZg58iXmonHrzfbNJNDVQgNgV1tYDEydq8TLRIGUlOSjIWQEGK/mn4m\nFvAIweqkxW2jnyVtBtfnLEkCEzbEtwGmieqHMmg7hBi4m2kJpkh30iUMgqRBlaCG\nzs7TbO3mTDGyF16xwAZuDuIfGP0ao1274Shj+VeNymkA27GT+wV5lAdZlxXcjPpz\nOKKZR+bjnLPT5jdGBO4UrmVdlsXtGWhBWBE2tkjsv4SpITqAqFhjqFcW5D5TJNKE\n+pXi/WXcOMpB+dqa9Na/TWUu5f5QdJDcDvepQ33n6KbxHIU2wNTk46Q+sbp8BoTA\nvI81C9RLQ6cVg7NjhYzJRRJ+YKQIMhyOeBK89fGK8NqCiFTN+xEwiXw/BIeZGCju\n6STVWarkUEiaajzK3qEJ\n=feIv\n-----END PGP SIGNATURE-----", "payload": "tree 84dd28ea60468946b8bc0d1efd146549a1641be7\nparent 8003c570d8fe50063587e05dc09dc2be837c0a03\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478270991 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478270991 +0100\n\nadd method to ensure that a Value::ByRef is now a Value::ByVal*"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/859b7049c89244c73c0ebf1520f73f1bdf98f359", "html_url": "https://github.com/rust-lang/rust/commit/859b7049c89244c73c0ebf1520f73f1bdf98f359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/859b7049c89244c73c0ebf1520f73f1bdf98f359/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8003c570d8fe50063587e05dc09dc2be837c0a03", "url": "https://api.github.com/repos/rust-lang/rust/commits/8003c570d8fe50063587e05dc09dc2be837c0a03", "html_url": "https://github.com/rust-lang/rust/commit/8003c570d8fe50063587e05dc09dc2be837c0a03"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "689ef9245363e051f1587c845c030631c9684785", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/859b7049c89244c73c0ebf1520f73f1bdf98f359/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/859b7049c89244c73c0ebf1520f73f1bdf98f359/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=859b7049c89244c73c0ebf1520f73f1bdf98f359", "patch": "@@ -1115,13 +1115,17 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         }\n     }\n \n-    fn value_to_primval(&mut self, value: Value, ty: Ty<'tcx>) -> EvalResult<'tcx, PrimVal> {\n+    /// ensures this Value is not a ByRef\n+    fn follow_by_ref_value(&mut self, value: Value, ty: Ty<'tcx>) -> EvalResult<'tcx, Value> {\n         match value {\n-            Value::ByRef(ptr) => match self.read_value(ptr, ty)? {\n-                Value::ByRef(_) => bug!(\"read_value can't result in `ByRef`\"),\n-                Value::ByVal(primval) => Ok(primval),\n-                Value::ByValPair(..) => bug!(\"value_to_primval can't work with fat pointers\"),\n-            },\n+            Value::ByRef(ptr) => self.read_value(ptr, ty),\n+            other => Ok(other),\n+        }\n+    }\n+\n+    fn value_to_primval(&mut self, value: Value, ty: Ty<'tcx>) -> EvalResult<'tcx, PrimVal> {\n+        match self.follow_by_ref_value(value, ty)? {\n+            Value::ByRef(_) => bug!(\"follow_by_ref_value can't result in `ByRef`\"),\n \n             Value::ByVal(primval) => {\n                 let new_primval = self.transmute_primval(primval, ty)?;"}]}