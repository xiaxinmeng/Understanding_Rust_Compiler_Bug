{"sha": "4d627fc41b0a34d99afbaa21f3b8c301d942ffc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNjI3ZmM0MWIwYTM0ZDk5YWZiYWEyMWYzYjhjMzAxZDk0MmZmYzg=", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-03-13T15:05:15Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-08-26T08:54:01Z"}, "message": "require a `tcx` for `TypeVisitor`", "tree": {"sha": "9c6d406f8152370aef2c7992239a0241d241f639", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c6d406f8152370aef2c7992239a0241d241f639"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d627fc41b0a34d99afbaa21f3b8c301d942ffc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d627fc41b0a34d99afbaa21f3b8c301d942ffc8", "html_url": "https://github.com/rust-lang/rust/commit/4d627fc41b0a34d99afbaa21f3b8c301d942ffc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d627fc41b0a34d99afbaa21f3b8c301d942ffc8/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72df99a49b565c5e35264f8efb868d5e30f1be02", "url": "https://api.github.com/repos/rust-lang/rust/commits/72df99a49b565c5e35264f8efb868d5e30f1be02", "html_url": "https://github.com/rust-lang/rust/commit/72df99a49b565c5e35264f8efb868d5e30f1be02"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "2335d2248aa9a8409d9276f0859fc10e50cf2da2", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4d627fc41b0a34d99afbaa21f3b8c301d942ffc8/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d627fc41b0a34d99afbaa21f3b8c301d942ffc8/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=4d627fc41b0a34d99afbaa21f3b8c301d942ffc8", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::mir::{\n     visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor as _},\n     Mutability,\n };\n-use rustc_middle::ty::{self, fold::TypeVisitor, Ty};\n+use rustc_middle::ty::{self, fold::TypeVisitor, Ty, TyCtxt};\n use rustc_mir::dataflow::{Analysis, AnalysisDomain, GenKill, GenKillAnalysis, ResultsCursor};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};\n@@ -576,7 +576,7 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n                 self.possible_borrower.add(borrowed.local, lhs);\n             },\n             other => {\n-                if ContainsRegion\n+                if ContainsRegion(self.cx.tcx)\n                     .visit_ty(place.ty(&self.body.local_decls, self.cx.tcx).ty)\n                     .is_continue()\n                 {\n@@ -625,7 +625,7 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n                 .flat_map(HybridBitSet::iter)\n                 .collect();\n \n-            if ContainsRegion.visit_ty(self.body.local_decls[*dest].ty).is_break() {\n+            if ContainsRegion(self.cx.tcx).visit_ty(self.body.local_decls[*dest].ty).is_break() {\n                 mutable_variables.push(*dest);\n             }\n \n@@ -701,12 +701,15 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleOriginVisitor<'a, 'tcx> {\n     }\n }\n \n-struct ContainsRegion;\n+struct ContainsRegion<'tcx>(TyCtxt<'tcx>);\n \n-impl TypeVisitor<'_> for ContainsRegion {\n+impl<'tcx> TypeVisitor<'tcx> for ContainsRegion<'tcx> {\n     type BreakTy = ();\n+    fn tcx_for_anon_const_substs(&self) -> TyCtxt<'tcx> {\n+        self.0\n+    }\n \n-    fn visit_region(&mut self, _: ty::Region<'_>) -> ControlFlow<Self::BreakTy> {\n+    fn visit_region(&mut self, _: ty::Region<'tcx>) -> ControlFlow<Self::BreakTy> {\n         ControlFlow::BREAK\n     }\n }"}]}