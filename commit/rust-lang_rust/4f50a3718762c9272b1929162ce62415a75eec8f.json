{"sha": "4f50a3718762c9272b1929162ce62415a75eec8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNTBhMzcxODc2MmM5MjcyYjE5MjkxNjJjZTYyNDE1YTc1ZWVjOGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T11:48:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T11:48:50Z"}, "message": "Fix docs", "tree": {"sha": "a8e5e91aeef1d910a77ed2b664cd28e6d033de7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e5e91aeef1d910a77ed2b664cd28e6d033de7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f50a3718762c9272b1929162ce62415a75eec8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f50a3718762c9272b1929162ce62415a75eec8f", "html_url": "https://github.com/rust-lang/rust/commit/4f50a3718762c9272b1929162ce62415a75eec8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f50a3718762c9272b1929162ce62415a75eec8f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98d68fa6beec87020b89d01c060288794dc948f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/98d68fa6beec87020b89d01c060288794dc948f1", "html_url": "https://github.com/rust-lang/rust/commit/98d68fa6beec87020b89d01c060288794dc948f1"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "6f198df04097e78bf227dda0d3d7084eff41eacb", "filename": "crates/ra_ide_db/src/search.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4f50a3718762c9272b1929162ce62415a75eec8f/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f50a3718762c9272b1929162ce62415a75eec8f/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs?ref=4f50a3718762c9272b1929162ce62415a75eec8f", "patch": "@@ -1,7 +1,9 @@\n-//! Generally, `search_scope` returns files that might contain references for the element.\n-//! For `pub(crate)` things it's a crate, for `pub` things it's a crate and dependant crates.\n-//! In some cases, the location of the references is known to within a `TextRange`,\n-//! e.g. for things like local variables.\n+//! Implementation of find-usages functionality.\n+//!\n+//! It is based on the standard ide trick: first, we run a fast text search to\n+//! get a super-set of matches. Then, we we confirm each match using precise\n+//! name resolution.\n+\n use std::mem;\n \n use hir::{DefWithBody, HasSource, ModuleSource, Semantics};\n@@ -38,6 +40,10 @@ pub enum ReferenceAccess {\n     Write,\n }\n \n+/// Generally, `search_scope` returns files that might contain references for the element.\n+/// For `pub(crate)` things it's a crate, for `pub` things it's a crate and dependant crates.\n+/// In some cases, the location of the references is known to within a `TextRange`,\n+/// e.g. for things like local variables.\n pub struct SearchScope {\n     entries: FxHashMap<FileId, Option<TextRange>>,\n }"}]}