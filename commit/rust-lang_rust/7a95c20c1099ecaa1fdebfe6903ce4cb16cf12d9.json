{"sha": "7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhOTVjMjBjMTA5OWVjYWExZmRlYmZlNjkwM2NlNGNiMTZjZjEyZDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-14T08:47:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-14T08:47:43Z"}, "message": "Auto merge of #4162 - krk:static-static, r=flip1995\n\nAdd lint for statics with explicit static lifetime.\n\nchangelog: Add lint for statics with explicit static lifetime, fixes #4138.", "tree": {"sha": "54f700a05bd9fa0e6776ad3781d57328c6d0b2df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54f700a05bd9fa0e6776ad3781d57328c6d0b2df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "html_url": "https://github.com/rust-lang/rust/commit/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd39cea01ce5c539fa109f9ab576f5cf8cf329dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd39cea01ce5c539fa109f9ab576f5cf8cf329dc", "html_url": "https://github.com/rust-lang/rust/commit/bd39cea01ce5c539fa109f9ab576f5cf8cf329dc"}, {"sha": "7e07d1bed84e509fc39cf2bf8aa6892a22b1a5fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e07d1bed84e509fc39cf2bf8aa6892a22b1a5fc", "html_url": "https://github.com/rust-lang/rust/commit/7e07d1bed84e509fc39cf2bf8aa6892a22b1a5fc"}], "stats": {"total": 370, "additions": 236, "deletions": 134}, "files": [{"sha": "d40eb9513f4db3bcab30cdcb19e25353388ed9b2", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "patch": "@@ -881,7 +881,6 @@ All notable changes to this project will be documented in this file.\n [`cmp_owned`]: https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n [`cognitive_complexity`]: https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity\n [`collapsible_if`]: https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n-[`const_static_lifetime`]: https://rust-lang.github.io/rust-clippy/master/index.html#const_static_lifetime\n [`copy_iterator`]: https://rust-lang.github.io/rust-clippy/master/index.html#copy_iterator\n [`crosspointer_transmute`]: https://rust-lang.github.io/rust-clippy/master/index.html#crosspointer_transmute\n [`dbg_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#dbg_macro\n@@ -1068,6 +1067,7 @@ All notable changes to this project will be documented in this file.\n [`redundant_field_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n [`redundant_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern\n [`redundant_pattern_matching`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\n+[`redundant_static_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n [`ref_in_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_in_deref\n [`regex_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#regex_macro\n [`replace_consts`]: https://rust-lang.github.io/rust-clippy/master/index.html#replace_consts"}, {"sha": "cfd6070356d1b90cf49eb9fe6779514fa46aa829", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "patch": "@@ -157,7 +157,6 @@ pub mod cargo_common_metadata;\n pub mod checked_conversions;\n pub mod cognitive_complexity;\n pub mod collapsible_if;\n-pub mod const_static_lifetime;\n pub mod copies;\n pub mod copy_iterator;\n pub mod dbg_macro;\n@@ -249,6 +248,7 @@ pub mod ranges;\n pub mod redundant_clone;\n pub mod redundant_field_names;\n pub mod redundant_pattern_matching;\n+pub mod redundant_static_lifetimes;\n pub mod reference;\n pub mod regex;\n pub mod replace_consts;\n@@ -553,7 +553,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box invalid_ref::InvalidRef);\n     reg.register_late_lint_pass(box identity_conversion::IdentityConversion::default());\n     reg.register_late_lint_pass(box types::ImplicitHasher);\n-    reg.register_early_lint_pass(box const_static_lifetime::StaticConst);\n+    reg.register_early_lint_pass(box redundant_static_lifetimes::RedundantStaticLifetimes);\n     reg.register_late_lint_pass(box fallible_impl_from::FallibleImplFrom);\n     reg.register_late_lint_pass(box replace_consts::ReplaceConsts);\n     reg.register_late_lint_pass(box types::UnitArg);\n@@ -686,7 +686,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         bytecount::NAIVE_BYTECOUNT,\n         cognitive_complexity::COGNITIVE_COMPLEXITY,\n         collapsible_if::COLLAPSIBLE_IF,\n-        const_static_lifetime::CONST_STATIC_LIFETIME,\n         copies::IFS_SAME_COND,\n         copies::IF_SAME_THEN_ELSE,\n         derive::DERIVE_HASH_XOR_EQ,\n@@ -834,6 +833,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         ranges::RANGE_ZIP_WITH_LEN,\n         redundant_field_names::REDUNDANT_FIELD_NAMES,\n         redundant_pattern_matching::REDUNDANT_PATTERN_MATCHING,\n+        redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n         reference::DEREF_ADDROF,\n         reference::REF_IN_DEREF,\n         regex::INVALID_REGEX,\n@@ -901,7 +901,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         block_in_if_condition::BLOCK_IN_IF_CONDITION_EXPR,\n         block_in_if_condition::BLOCK_IN_IF_CONDITION_STMT,\n         collapsible_if::COLLAPSIBLE_IF,\n-        const_static_lifetime::CONST_STATIC_LIFETIME,\n         enum_variants::ENUM_VARIANT_NAMES,\n         enum_variants::MODULE_INCEPTION,\n         eq_op::OP_REF,\n@@ -957,6 +956,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         question_mark::QUESTION_MARK,\n         redundant_field_names::REDUNDANT_FIELD_NAMES,\n         redundant_pattern_matching::REDUNDANT_PATTERN_MATCHING,\n+        redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n         regex::REGEX_MACRO,\n         regex::TRIVIAL_REGEX,\n         returns::LET_AND_RETURN,\n@@ -1153,6 +1153,7 @@ pub fn register_renamed(ls: &mut rustc::lint::LintStore) {\n     ls.register_renamed(\"clippy::stutter\", \"clippy::module_name_repetitions\");\n     ls.register_renamed(\"clippy::new_without_default_derive\", \"clippy::new_without_default\");\n     ls.register_renamed(\"clippy::cyclomatic_complexity\", \"clippy::cognitive_complexity\");\n+    ls.register_renamed(\"clippy::const_static_lifetime\", \"clippy::redundant_static_lifetimes\");\n }\n \n // only exists to let the dogfood integration test works."}, {"sha": "bdd48fe8646122b039adca935f031ae2b842b51b", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "renamed", "additions": 28, "deletions": 29, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "patch": "@@ -5,7 +5,7 @@ use rustc_errors::Applicability;\n use syntax::ast::*;\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for constants with an explicit `'static` lifetime.\n+    /// **What it does:** Checks for constants and statics with an explicit `'static` lifetime.\n     ///\n     /// **Why is this bad?** Adding `'static` to every reference can create very\n     /// complicated types.\n@@ -16,29 +16,32 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// const FOO: &'static [(&'static str, &'static str, fn(&Bar) -> bool)] =\n     /// &[...]\n+    /// static FOO: &'static [(&'static str, &'static str, fn(&Bar) -> bool)] =\n+    /// &[...]\n     /// ```\n     /// This code can be rewritten as\n     /// ```ignore\n     ///  const FOO: &[(&str, &str, fn(&Bar) -> bool)] = &[...]\n+    ///  static FOO: &[(&str, &str, fn(&Bar) -> bool)] = &[...]\n     /// ```\n-    pub CONST_STATIC_LIFETIME,\n+    pub REDUNDANT_STATIC_LIFETIMES,\n     style,\n-    \"Using explicit `'static` lifetime for constants when elision rules would allow omitting them.\"\n+    \"Using explicit `'static` lifetime for constants or statics when elision rules would allow omitting them.\"\n }\n \n-declare_lint_pass!(StaticConst => [CONST_STATIC_LIFETIME]);\n+declare_lint_pass!(RedundantStaticLifetimes => [REDUNDANT_STATIC_LIFETIMES]);\n \n-impl StaticConst {\n+impl RedundantStaticLifetimes {\n     // Recursively visit types\n-    fn visit_type(&mut self, ty: &Ty, cx: &EarlyContext<'_>) {\n+    fn visit_type(&mut self, ty: &Ty, cx: &EarlyContext<'_>, reason: &str) {\n         match ty.node {\n             // Be careful of nested structures (arrays and tuples)\n             TyKind::Array(ref ty, _) => {\n-                self.visit_type(&*ty, cx);\n+                self.visit_type(&*ty, cx, reason);\n             },\n             TyKind::Tup(ref tup) => {\n                 for tup_ty in tup {\n-                    self.visit_type(&*tup_ty, cx);\n+                    self.visit_type(&*tup_ty, cx, reason);\n                 }\n             },\n             // This is what we are looking for !\n@@ -50,44 +53,40 @@ impl StaticConst {\n                             if lifetime.ident.name == syntax::symbol::kw::StaticLifetime {\n                                 let snip = snippet(cx, borrow_type.ty.span, \"<type>\");\n                                 let sugg = format!(\"&{}\", snip);\n-                                span_lint_and_then(\n-                                    cx,\n-                                    CONST_STATIC_LIFETIME,\n-                                    lifetime.ident.span,\n-                                    \"Constants have by default a `'static` lifetime\",\n-                                    |db| {\n-                                        db.span_suggestion(\n-                                            ty.span,\n-                                            \"consider removing `'static`\",\n-                                            sugg,\n-                                            Applicability::MachineApplicable, //snippet\n-                                        );\n-                                    },\n-                                );\n+                                span_lint_and_then(cx, REDUNDANT_STATIC_LIFETIMES, lifetime.ident.span, reason, |db| {\n+                                    db.span_suggestion(\n+                                        ty.span,\n+                                        \"consider removing `'static`\",\n+                                        sugg,\n+                                        Applicability::MachineApplicable, //snippet\n+                                    );\n+                                });\n                             }\n                         },\n                         _ => {},\n                     }\n                 }\n-                self.visit_type(&*borrow_type.ty, cx);\n+                self.visit_type(&*borrow_type.ty, cx, reason);\n             },\n             TyKind::Slice(ref ty) => {\n-                self.visit_type(ty, cx);\n+                self.visit_type(ty, cx, reason);\n             },\n             _ => {},\n         }\n     }\n }\n \n-impl EarlyLintPass for StaticConst {\n+impl EarlyLintPass for RedundantStaticLifetimes {\n     fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n         if !in_macro_or_desugar(item.span) {\n-            // Match only constants...\n             if let ItemKind::Const(ref var_type, _) = item.node {\n-                self.visit_type(var_type, cx);\n+                self.visit_type(var_type, cx, \"Constants have by default a `'static` lifetime\");\n+                // Don't check associated consts because `'static` cannot be elided on those (issue #2438)\n+            }\n+\n+            if let ItemKind::Static(ref var_type, _, _) = item.node {\n+                self.visit_type(var_type, cx, \"Statics have by default a `'static` lifetime\");\n             }\n         }\n     }\n-\n-    // Don't check associated consts because `'static` cannot be elided on those (issue #2438)\n }", "previous_filename": "clippy_lints/src/const_static_lifetime.rs"}, {"sha": "c329e860558e31741fab5e5ba9d1fd582457ec99", "filename": "tests/ui/const_static_lifetime.stderr", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/bd39cea01ce5c539fa109f9ab576f5cf8cf329dc/tests%2Fui%2Fconst_static_lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd39cea01ce5c539fa109f9ab576f5cf8cf329dc/tests%2Fui%2Fconst_static_lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.stderr?ref=bd39cea01ce5c539fa109f9ab576f5cf8cf329dc", "patch": "@@ -1,82 +0,0 @@\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:4:17\n-   |\n-LL | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n-   |                -^^^^^^^---- help: consider removing `'static`: `&str`\n-   |\n-   = note: `-D clippy::const-static-lifetime` implied by `-D warnings`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:8:21\n-   |\n-LL | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n-   |                    -^^^^^^^---- help: consider removing `'static`: `&str`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:10:32\n-   |\n-LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n-   |                               -^^^^^^^---- help: consider removing `'static`: `&str`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:10:47\n-   |\n-LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n-   |                                              -^^^^^^^---- help: consider removing `'static`: `&str`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:12:18\n-   |\n-LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n-   |                 -^^^^^^^------------------ help: consider removing `'static`: `&[&[&'static str]]`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:12:30\n-   |\n-LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n-   |                             -^^^^^^^---- help: consider removing `'static`: `&str`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:14:17\n-   |\n-LL | const VAR_SIX: &'static u8 = &5;\n-   |                -^^^^^^^--- help: consider removing `'static`: `&u8`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:16:29\n-   |\n-LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n-   |                            -^^^^^^^--------------- help: consider removing `'static`: `&[&'static str]`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:16:39\n-   |\n-LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n-   |                                      -^^^^^^^---- help: consider removing `'static`: `&str`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:18:20\n-   |\n-LL | const VAR_HEIGHT: &'static Foo = &Foo {};\n-   |                   -^^^^^^^---- help: consider removing `'static`: `&Foo`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:20:19\n-   |\n-LL | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n-   |                  -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:22:19\n-   |\n-LL | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n-   |                  -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n-\n-error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:24:19\n-   |\n-LL | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n-   |                  -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n-\n-error: aborting due to 13 previous errors\n-"}, {"sha": "fc9f0e066d43f61e1591eeb90c4fe8ac5f5ebc14", "filename": "tests/ui/redundant_static_lifetimes.rs", "status": "renamed", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_static_lifetimes.rs?ref=7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "patch": "@@ -23,6 +23,28 @@ const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static\n \n const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n \n+static STATIC_VAR_ONE: &'static str = \"Test static #1\"; // ERROR Consider removing 'static.\n+\n+static STATIC_VAR_TWO: &str = \"Test static #2\"; // This line should not raise a warning.\n+\n+static STATIC_VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n+\n+static STATIC_VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+\n+static STATIC_VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+\n+static STATIC_VAR_SIX: &'static u8 = &5;\n+\n+static STATIC_VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+\n+static STATIC_VAR_HEIGHT: &'static Foo = &Foo {};\n+\n+static STATIC_VAR_SLICE: &'static [u8] = b\"Test static #3\"; // ERROR Consider removing 'static.\n+\n+static STATIC_VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n+\n+static STATIC_VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n+\n fn main() {\n     let false_positive: &'static str = \"test\";\n     println!(\"{}\", VAR_ONE);", "previous_filename": "tests/ui/const_static_lifetime.rs"}, {"sha": "da6175d1debc4fb7f97edb8072a98b705cbd25be", "filename": "tests/ui/redundant_static_lifetimes.stderr", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Fredundant_static_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Fredundant_static_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_static_lifetimes.stderr?ref=7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "patch": "@@ -0,0 +1,160 @@\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:4:17\n+   |\n+LL | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n+   |                -^^^^^^^---- help: consider removing `'static`: `&str`\n+   |\n+   = note: `-D clippy::redundant-static-lifetimes` implied by `-D warnings`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:8:21\n+   |\n+LL | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n+   |                    -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:10:32\n+   |\n+LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+   |                               -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:10:47\n+   |\n+LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+   |                                              -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:12:18\n+   |\n+LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+   |                 -^^^^^^^------------------ help: consider removing `'static`: `&[&[&'static str]]`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:12:30\n+   |\n+LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+   |                             -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:14:17\n+   |\n+LL | const VAR_SIX: &'static u8 = &5;\n+   |                -^^^^^^^--- help: consider removing `'static`: `&u8`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:16:29\n+   |\n+LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+   |                            -^^^^^^^--------------- help: consider removing `'static`: `&[&'static str]`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:16:39\n+   |\n+LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+   |                                      -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:18:20\n+   |\n+LL | const VAR_HEIGHT: &'static Foo = &Foo {};\n+   |                   -^^^^^^^---- help: consider removing `'static`: `&Foo`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:20:19\n+   |\n+LL | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n+   |                  -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:22:19\n+   |\n+LL | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n+   |                  -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n+\n+error: Constants have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:24:19\n+   |\n+LL | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n+   |                  -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:26:25\n+   |\n+LL | static STATIC_VAR_ONE: &'static str = \"Test static #1\"; // ERROR Consider removing 'static.\n+   |                        -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:30:29\n+   |\n+LL | static STATIC_VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n+   |                            -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:32:40\n+   |\n+LL | static STATIC_VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+   |                                       -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:32:55\n+   |\n+LL | static STATIC_VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+   |                                                      -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:34:26\n+   |\n+LL | static STATIC_VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+   |                         -^^^^^^^------------------ help: consider removing `'static`: `&[&[&'static str]]`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:34:38\n+   |\n+LL | static STATIC_VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+   |                                     -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:36:25\n+   |\n+LL | static STATIC_VAR_SIX: &'static u8 = &5;\n+   |                        -^^^^^^^--- help: consider removing `'static`: `&u8`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:38:37\n+   |\n+LL | static STATIC_VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+   |                                    -^^^^^^^--------------- help: consider removing `'static`: `&[&'static str]`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:38:47\n+   |\n+LL | static STATIC_VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+   |                                              -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:40:28\n+   |\n+LL | static STATIC_VAR_HEIGHT: &'static Foo = &Foo {};\n+   |                           -^^^^^^^---- help: consider removing `'static`: `&Foo`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:42:27\n+   |\n+LL | static STATIC_VAR_SLICE: &'static [u8] = b\"Test static #3\"; // ERROR Consider removing 'static.\n+   |                          -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:44:27\n+   |\n+LL | static STATIC_VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n+   |                          -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/redundant_static_lifetimes.rs:46:27\n+   |\n+LL | static STATIC_VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n+   |                          -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n+\n+error: aborting due to 26 previous errors\n+"}, {"sha": "f3758174125a13956d1b696fbd08226966052d26", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "patch": "@@ -1,4 +1,11 @@\n-#![allow(stutter)]\n+//! Test for Clippy lint renames.\n+\n+// allow the new lint name here, to test if the new name works\n+#![allow(clippy::module_name_repetitions)]\n+#![allow(clippy::new_without_default)]\n+#![allow(clippy::cognitive_complexity)]\n+#![allow(clippy::redundant_static_lifetimes)]\n+// warn for the old lint name here, to test if the renaming worked\n #![warn(clippy::cyclomatic_complexity)]\n \n #[warn(clippy::stutter)]\n@@ -7,6 +14,9 @@ fn main() {}\n #[warn(clippy::new_without_default_derive)]\n struct Foo;\n \n+#[warn(clippy::const_static_lifetime)]\n+static Bar: &'static str = \"baz\";\n+\n impl Foo {\n     fn new() -> Self {\n         Foo"}, {"sha": "0765e6e954a1a300f32e18579af182f64b87cff3", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=7a95c20c1099ecaa1fdebfe6903ce4cb16cf12d9", "patch": "@@ -1,42 +1,34 @@\n-error: unknown lint: `stutter`\n-  --> $DIR/rename.rs:1:10\n-   |\n-LL | #![allow(stutter)]\n-   |          ^^^^^^^\n-   |\n-   = note: `-D unknown-lints` implied by `-D warnings`\n-\n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:2:9\n+  --> $DIR/rename.rs:9:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n-  --> $DIR/rename.rs:4:8\n+  --> $DIR/rename.rs:11:8\n    |\n LL | #[warn(clippy::stutter)]\n    |        ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n \n error: lint `clippy::new_without_default_derive` has been renamed to `clippy::new_without_default`\n-  --> $DIR/rename.rs:7:8\n+  --> $DIR/rename.rs:14:8\n    |\n LL | #[warn(clippy::new_without_default_derive)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n-error: unknown lint: `stutter`\n-  --> $DIR/rename.rs:1:10\n+error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n+  --> $DIR/rename.rs:17:8\n    |\n-LL | #![allow(stutter)]\n-   |          ^^^^^^^\n+LL | #[warn(clippy::const_static_lifetime)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:2:9\n+  --> $DIR/rename.rs:9:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n "}]}