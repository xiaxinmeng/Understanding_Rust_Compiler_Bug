{"sha": "7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMzVkMGFiOTQ0ZjBiZmE1ZWY0Y2VjZmQxZGZkZDhhNzk2NDdjNTM=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-05T14:29:06Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-05T14:29:06Z"}, "message": "Fix make tidy", "tree": {"sha": "c3d22355f7162ebf8a9ce87d4b786429b6279fc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3d22355f7162ebf8a9ce87d4b786429b6279fc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53", "html_url": "https://github.com/rust-lang/rust/commit/7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dbb1e4fee5218b338ed1c8307665342c2b99e4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dbb1e4fee5218b338ed1c8307665342c2b99e4f", "html_url": "https://github.com/rust-lang/rust/commit/0dbb1e4fee5218b338ed1c8307665342c2b99e4f"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "6f33b4fad769f20d9e7d06b053a0a014fafbb5c3", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=7135d0ab944f0bfa5ef4cecfd1dfdd8a79647c53", "patch": "@@ -310,8 +310,9 @@ fn check_arms<'a, 'tcx>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n                                     let mut diagnostic = Diagnostic::new(Level::Warning,\n                                                                          \"unreachable pattern\");\n                                     diagnostic.set_span(pat.span);\n-                                    cx.tcx.sess.add_lint_diagnostic(lint::builtin::UNREACHABLE_PATTERNS,\n-                                                                    hir_pat.id, diagnostic);\n+                                    cx.tcx.sess.add_lint_diagnostic(\n+                                            lint::builtin::UNREACHABLE_PATTERNS,\n+                                            hir_pat.id, diagnostic);\n                                 },\n                                 // The arm with the wildcard pattern.\n                                 1 => {"}]}