{"sha": "f6d6fda85b1f96c319294be2efa706f6bea9b7ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZDZmZGE4NWIxZjk2YzMxOTI5NGJlMmVmYTcwNmY2YmVhOWI3ZmY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-10T15:03:38Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-10T15:03:38Z"}, "message": "Refine functional update completion some more", "tree": {"sha": "c5bd42e9a015a385e1a91c0f4f12407a8f943d71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5bd42e9a015a385e1a91c0f4f12407a8f943d71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6d6fda85b1f96c319294be2efa706f6bea9b7ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d6fda85b1f96c319294be2efa706f6bea9b7ff", "html_url": "https://github.com/rust-lang/rust/commit/f6d6fda85b1f96c319294be2efa706f6bea9b7ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6d6fda85b1f96c319294be2efa706f6bea9b7ff/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1dcec0e02fdfaba47f68703bf82529165e99601", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1dcec0e02fdfaba47f68703bf82529165e99601", "html_url": "https://github.com/rust-lang/rust/commit/e1dcec0e02fdfaba47f68703bf82529165e99601"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "54fc748d1c4822f8cf6b3a57051e4cc100036c71", "filename": "crates/ide_completion/src/completions/record.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f6d6fda85b1f96c319294be2efa706f6bea9b7ff/crates%2Fide_completion%2Fsrc%2Fcompletions%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d6fda85b1f96c319294be2efa706f6bea9b7ff/crates%2Fide_completion%2Fsrc%2Fcompletions%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Frecord.rs?ref=f6d6fda85b1f96c319294be2efa706f6bea9b7ff", "patch": "@@ -1,15 +1,18 @@\n //! Complete fields in record literals and patterns.\n use ide_db::{helpers::FamousDefs, SymbolKind};\n-use syntax::ast::Expr;\n+use syntax::{ast::Expr, T};\n \n use crate::{\n     item::CompletionKind, patterns::ImmediateLocation, CompletionContext, CompletionItem,\n-    Completions,\n+    CompletionItemKind, Completions,\n };\n \n pub(crate) fn complete_record(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let missing_fields = match &ctx.completion_location {\n-        Some(ImmediateLocation::RecordExpr(record_expr)) => {\n+        Some(\n+            ImmediateLocation::RecordExpr(record_expr)\n+            | ImmediateLocation::RecordExprUpdate(record_expr),\n+        ) => {\n             let ty = ctx.sema.type_of_expr(&Expr::RecordExpr(record_expr.clone()));\n             let default_trait = FamousDefs(&ctx.sema, ctx.krate).core_default_Default();\n             let impl_default_trait = default_trait.zip(ty).map_or(false, |(default_trait, ty)| {\n@@ -29,7 +32,13 @@ pub(crate) fn complete_record(acc: &mut Completions, ctx: &CompletionContext) ->\n                 item.insert_text(completion_text).kind(SymbolKind::Field);\n                 item.add_to(acc);\n             }\n-\n+            if ctx.previous_token_is(T![.]) {\n+                let mut item =\n+                    CompletionItem::new(CompletionKind::Snippet, ctx.source_range(), \"..\");\n+                item.insert_text(\".\").kind(CompletionItemKind::Snippet);\n+                item.add_to(acc);\n+                return None;\n+            }\n             missing_fields\n         }\n         Some(ImmediateLocation::RecordPat(record_pat)) => {"}, {"sha": "bcbd63b43adc261b455c83f2efd5c174fa53c5ff", "filename": "crates/ide_completion/src/patterns.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f6d6fda85b1f96c319294be2efa706f6bea9b7ff/crates%2Fide_completion%2Fsrc%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d6fda85b1f96c319294be2efa706f6bea9b7ff/crates%2Fide_completion%2Fsrc%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fpatterns.rs?ref=f6d6fda85b1f96c319294be2efa706f6bea9b7ff", "patch": "@@ -63,6 +63,9 @@ pub(crate) enum ImmediateLocation {\n     /// The record expr of the field name we are completing\n     RecordExpr(ast::RecordExpr),\n     // Original file ast node\n+    /// The record expr of the functional update syntax we are completing\n+    RecordExprUpdate(ast::RecordExpr),\n+    // Original file ast node\n     /// The record pat of the field name we are completing\n     RecordPat(ast::RecordPat),\n }\n@@ -209,7 +212,7 @@ pub(crate) fn determine_location(\n             },\n             ast::RecordExprFieldList(_it) => sema\n                 .find_node_at_offset_with_macros(original_file, offset)\n-                .map(ImmediateLocation::RecordExpr)?,\n+                .map(ImmediateLocation::RecordExprUpdate)?,\n             ast::TupleField(_it) => ImmediateLocation::TupleField,\n             ast::TupleFieldList(_it) => ImmediateLocation::TupleField,\n             ast::TypeBound(_it) => ImmediateLocation::TypeBound,"}, {"sha": "326c1abee550043163665a61cd8171fb61e0ac40", "filename": "crates/ide_completion/src/tests/record.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f6d6fda85b1f96c319294be2efa706f6bea9b7ff/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d6fda85b1f96c319294be2efa706f6bea9b7ff/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs?ref=f6d6fda85b1f96c319294be2efa706f6bea9b7ff", "patch": "@@ -136,8 +136,7 @@ fn main() {\n \"#,\n         expect![[r#\"\n             fd ..Default::default()\n-            fd foo1                 u32\n-            fd foo2                 u32\n+            sn ..\n         \"#]],\n     );\n     check(\n@@ -155,6 +154,28 @@ fn main() {\n }\n \"#,\n         expect![[r#\"\n+            kw unsafe\n+            kw match\n+            kw while\n+            kw while let\n+            kw loop\n+            kw if\n+            kw if let\n+            kw for\n+            kw true\n+            kw false\n+            kw return\n+            kw self\n+            kw super\n+            kw crate\n+            lc foo                  Foo\n+            lc thing                i32\n+            st Foo\n+            fn main()               fn()\n+            md core\n+            bt u32\n+            tt Sized\n+            tt Default\n             fd ..Default::default()\n             fd foo1                 u32\n             fd foo2                 u32"}]}