{"sha": "427e6308bcb1e47d253848b35bef051151a3212c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyN2U2MzA4YmNiMWU0N2QyNTM4NDhiMzViZWYwNTExNTFhMzIxMmM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-12-21T17:00:55Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-12-21T17:06:52Z"}, "message": "rustc: Sort CGUs before merging\n\nThis commit fixes some nondeterminism in compilation when using multiple codegen\nunits. The algorithm for splitting codegen units currently takes the\notherwise-would-be-for-incremental partitioning and then continuously merges the\ntwo smallest codegen units until the desired number of codegen units are\nreached.\n\nWe want to be sure to merge the same codegen units each time a compilation is\nrun but there's some subtle reorderings amongst all the items which was causing\nthis step to be slightly buggy. Notably this step involves sorting codegen units\nby size, but if two codegen units had the same size they would appear in\ndifferent locations in the list each time.\n\nThis commit fixes this issue by sorting codegen units by name before doing the\nloop to merge the two smallest. This means that we've got a deterministic\norder going in and since we're using a stable sort this should mean that we're\nalways now getting a deterministic merging of codegen units.\n\nCloses #46846", "tree": {"sha": "f8f60e2759e821c8d94a9dd45dcbaf8e00e1feaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8f60e2759e821c8d94a9dd45dcbaf8e00e1feaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/427e6308bcb1e47d253848b35bef051151a3212c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/427e6308bcb1e47d253848b35bef051151a3212c", "html_url": "https://github.com/rust-lang/rust/commit/427e6308bcb1e47d253848b35bef051151a3212c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/427e6308bcb1e47d253848b35bef051151a3212c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de38f49528b537414385d42a66dda711c8c8a309", "url": "https://api.github.com/repos/rust-lang/rust/commits/de38f49528b537414385d42a66dda711c8c8a309", "html_url": "https://github.com/rust-lang/rust/commit/de38f49528b537414385d42a66dda711c8c8a309"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "b1fef274cba4b9d323518174cf132c1f0eca113b", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/427e6308bcb1e47d253848b35bef051151a3212c/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427e6308bcb1e47d253848b35bef051151a3212c/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=427e6308bcb1e47d253848b35bef051151a3212c", "patch": "@@ -377,6 +377,17 @@ fn merge_codegen_units<'tcx>(initial_partitioning: &mut PreInliningPartitioning<\n     assert!(target_cgu_count >= 1);\n     let codegen_units = &mut initial_partitioning.codegen_units;\n \n+    // Note that at this point in time the `codegen_units` here may not be in a\n+    // deterministic order (but we know they're deterministically the same set).\n+    // We want this merging to produce a deterministic ordering of codegen units\n+    // from the input.\n+    //\n+    // Due to basically how we've implemented the merging below (merge the two\n+    // smallest into each other) we're sure to start off with a deterministic\n+    // order (sorted by name). This'll mean that if two cgus have the same size\n+    // the stable sort below will keep everything nice and deterministic.\n+    codegen_units.sort_by_key(|cgu| cgu.name().clone());\n+\n     // Merge the two smallest codegen units until the target size is reached.\n     // Note that \"size\" is estimated here rather inaccurately as the number of\n     // translation items in a given unit. This could be improved on."}]}