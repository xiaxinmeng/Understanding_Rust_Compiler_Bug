{"sha": "8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMTYzMGNiM2IwNmQ0ZDJkMmE4YTM4ZDA4YWZhMzY4ZGNlZmEwYzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-07T07:55:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-07T07:55:59Z"}, "message": "tweak and slightly extend box-box-trait test", "tree": {"sha": "68bb9c57ddec0498c65c7967ac836aa2688dd19d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68bb9c57ddec0498c65c7967ac836aa2688dd19d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4", "html_url": "https://github.com/rust-lang/rust/commit/8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ddc37df7a27d442e72db07f02108a71f6ab3f6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ddc37df7a27d442e72db07f02108a71f6ab3f6e", "html_url": "https://github.com/rust-lang/rust/commit/4ddc37df7a27d442e72db07f02108a71f6ab3f6e"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "5ce0e8f5957bed806a50861a0225e1d5541e0853", "filename": "tests/run-pass/box_box_trait.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4/tests%2Frun-pass%2Fbox_box_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4/tests%2Frun-pass%2Fbox_box_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbox_box_trait.rs?ref=8b1630cb3b06d4d2d2a8a38d08afa368dcefa0c4", "patch": "@@ -1,5 +1,3 @@\n-#![feature(box_syntax)]\n-\n struct DroppableStruct;\n \n static mut DROPPED: bool = false;\n@@ -13,7 +11,6 @@ impl Drop for DroppableStruct {\n trait MyTrait { fn dummy(&self) { } }\n impl MyTrait for Box<DroppableStruct> {}\n \n-#[allow(dead_code)]\n struct Whatever { w: Box<dyn MyTrait+'static> }\n \n impl  Whatever {\n@@ -24,8 +21,9 @@ impl  Whatever {\n \n fn main() {\n     {\n-        let f: Box<_> = box DroppableStruct;\n-        let _a = Whatever::new(box f as Box<dyn MyTrait>);\n+        let f = Box::new(DroppableStruct);\n+        let a = Whatever::new(Box::new(f) as Box<dyn MyTrait>);\n+        a.w.dummy();\n     }\n     assert!(unsafe { DROPPED });\n }"}]}