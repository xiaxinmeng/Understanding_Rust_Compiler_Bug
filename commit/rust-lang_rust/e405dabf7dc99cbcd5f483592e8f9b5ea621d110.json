{"sha": "e405dabf7dc99cbcd5f483592e8f9b5ea621d110", "node_id": "C_kwDOAAsO6NoAKGU0MDVkYWJmN2RjOTljYmNkNWY0ODM1OTJlOGY5YjVlYTYyMWQxMTA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-19T13:14:03Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-20T13:43:11Z"}, "message": "Some style nits", "tree": {"sha": "ff1231e31a23830daaf8c54cb73b1c7b478aa673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff1231e31a23830daaf8c54cb73b1c7b478aa673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e405dabf7dc99cbcd5f483592e8f9b5ea621d110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e405dabf7dc99cbcd5f483592e8f9b5ea621d110", "html_url": "https://github.com/rust-lang/rust/commit/e405dabf7dc99cbcd5f483592e8f9b5ea621d110", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e405dabf7dc99cbcd5f483592e8f9b5ea621d110/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b1530260c66069ce1f5cd8d5d32a98b9e1b49cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b1530260c66069ce1f5cd8d5d32a98b9e1b49cb", "html_url": "https://github.com/rust-lang/rust/commit/8b1530260c66069ce1f5cd8d5d32a98b9e1b49cb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2973f8b7f85f9b111c712bc8788b3869b498e6ff", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e405dabf7dc99cbcd5f483592e8f9b5ea621d110/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e405dabf7dc99cbcd5f483592e8f9b5ea621d110/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=e405dabf7dc99cbcd5f483592e8f9b5ea621d110", "patch": "@@ -1163,7 +1163,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                 tcx,\n                 self.param_env,\n                 proj,\n-                |this, field, _| {\n+                |this, field, ()| {\n                     let ty = this.field_ty(tcx, field);\n                     self.normalize(ty, locations)\n                 },"}, {"sha": "1d96893c7a3ea966aecc4852e79ea01fba386200", "filename": "compiler/rustc_mir_build/src/build/expr/as_constant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e405dabf7dc99cbcd5f483592e8f9b5ea621d110/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e405dabf7dc99cbcd5f483592e8f9b5ea621d110/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs?ref=e405dabf7dc99cbcd5f483592e8f9b5ea621d110", "patch": "@@ -66,14 +66,14 @@ pub fn as_constant_inner<'tcx>(\n \n             let literal = ConstantKind::Val(ConstValue::Scalar(Scalar::Int(lit)), ty);\n \n-            Constant { span, user_ty: user_ty, literal }\n+            Constant { span, user_ty, literal }\n         }\n         ExprKind::ZstLiteral { ref user_ty } => {\n             let user_ty = user_ty.as_ref().map(push_cuta).flatten();\n \n             let literal = ConstantKind::Val(ConstValue::ZeroSized, ty);\n \n-            Constant { span, user_ty: user_ty, literal }\n+            Constant { span, user_ty, literal }\n         }\n         ExprKind::NamedConst { def_id, substs, ref user_ty } => {\n             let user_ty = user_ty.as_ref().map(push_cuta).flatten();"}, {"sha": "f90aba80bf3cf574f17fb3b0571cac22b5b4d6d2", "filename": "compiler/rustc_mir_build/src/build/matches/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e405dabf7dc99cbcd5f483592e8f9b5ea621d110/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e405dabf7dc99cbcd5f483592e8f9b5ea621d110/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs?ref=e405dabf7dc99cbcd5f483592e8f9b5ea621d110", "patch": "@@ -2210,7 +2210,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             BindingMode::ByValue => ty::BindingMode::BindByValue(mutability),\n             BindingMode::ByRef(_) => ty::BindingMode::BindByReference(mutability),\n         };\n-        let local = LocalDecl::<'tcx> {\n+        let local = LocalDecl {\n             mutability,\n             ty: var_ty,\n             user_ty: if user_ty.is_empty() { None } else { Some(Box::new(user_ty)) },"}]}