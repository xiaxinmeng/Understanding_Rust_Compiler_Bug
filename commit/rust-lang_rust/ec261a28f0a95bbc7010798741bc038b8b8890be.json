{"sha": "ec261a28f0a95bbc7010798741bc038b8b8890be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMjYxYTI4ZjBhOTViYmM3MDEwNzk4NzQxYmMwMzhiOGI4ODkwYmU=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-31T07:27:04Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-31T07:27:04Z"}, "message": "Rustup: unused trim result", "tree": {"sha": "b6e17a2f451a883b598652ecbdb47daf5f7ec440", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6e17a2f451a883b598652ecbdb47daf5f7ec440"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec261a28f0a95bbc7010798741bc038b8b8890be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlxSo2AACgkQtvoGpuDi\nZlu3Iw//dj+AjFI49FjY4j3I7XjRZ564oO3nGz04AlnJLppK7i0Cw+4BnjOgtvS7\n1TIVF9A3X6xSimTuWMReOZYDcRQcxwFMgtuBYQUDmAi4dXrkQwW4cLG/A7CBU1BO\na7HV+3doksIbd57F81erAICJ86X8GLYuKvXFcpTsZGCDgaRSC/EoLhD/JHQ+vycr\niuKog0pwicLO5GkEaLQ97Fhd/0ZTFfnvNux3zm+Xz9ws92bFKZJMXjgYVr2/rozT\n1/KJ3ozNeGb28FkzJ9bzHQHjo2denLpd4KBq4sHzK+0NeB1vAvvPk/seCKxQQ70G\ntz2ARwczCeeArO+lv/ed/JpBTrbbJksTJ3jld+oG1/07L+SjEUJ/3g0p16aRz5PJ\nFJxPoSitMb1t0DNCKSvBmXPTz168YSybkX3+vtSIr7ZIOJGtSAdhwGiKxF3FH4ZQ\nZJJYBq0tDWpFhoeYukd4iZ5VyEkWFyPnQlZdL7kxxCrQFffRvosFfZLYbMKNfXHG\n9HHk4RSzvDWbomXtPsuRCZfow/F1YPNBpfQFm7jjnnyOxmvmYPr1yPjpjjWXutgH\nRfOFpAYQe5zwa4HIfx+QHVHAIK5kA0HUSX6NZTy82GfxgxEC5i4rpF6pExE1lvSS\nYfFc9BISHsY7Zd9rOFefxYLbAu1LN5igifvPSztgqnSWJyd9PAU=\n=pqbo\n-----END PGP SIGNATURE-----", "payload": "tree b6e17a2f451a883b598652ecbdb47daf5f7ec440\nparent 6ce78d1257ac6fd77f245730fcfbadd536a173eb\nauthor Philipp Hansch <dev@phansch.net> 1548919624 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1548919624 +0100\n\nRustup: unused trim result\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec261a28f0a95bbc7010798741bc038b8b8890be", "html_url": "https://github.com/rust-lang/rust/commit/ec261a28f0a95bbc7010798741bc038b8b8890be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec261a28f0a95bbc7010798741bc038b8b8890be/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce78d1257ac6fd77f245730fcfbadd536a173eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce78d1257ac6fd77f245730fcfbadd536a173eb", "html_url": "https://github.com/rust-lang/rust/commit/6ce78d1257ac6fd77f245730fcfbadd536a173eb"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "2dd217903891a08eb7a7e54f59bd45ab3c31ea9a", "filename": "tests/ui/single_char_pattern.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec261a28f0a95bbc7010798741bc038b8b8890be/tests%2Fui%2Fsingle_char_pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ec261a28f0a95bbc7010798741bc038b8b8890be/tests%2Fui%2Fsingle_char_pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.fixed?ref=ec261a28f0a95bbc7010798741bc038b8b8890be", "patch": "@@ -1,5 +1,7 @@\n // run-rustfix\n \n+#![allow(unused_must_use)]\n+\n use std::collections::HashSet;\n \n fn main() {"}, {"sha": "dc2f9fe4959a1aa7470be4f2f63771cfd149cd6e", "filename": "tests/ui/single_char_pattern.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec261a28f0a95bbc7010798741bc038b8b8890be/tests%2Fui%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec261a28f0a95bbc7010798741bc038b8b8890be/tests%2Fui%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.rs?ref=ec261a28f0a95bbc7010798741bc038b8b8890be", "patch": "@@ -1,5 +1,7 @@\n // run-rustfix\n \n+#![allow(unused_must_use)]\n+\n use std::collections::HashSet;\n \n fn main() {"}, {"sha": "0fcb203dbc1288c2bbfd19781e14082247e5e3ff", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ec261a28f0a95bbc7010798741bc038b8b8890be/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec261a28f0a95bbc7010798741bc038b8b8890be/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=ec261a28f0a95bbc7010798741bc038b8b8890be", "patch": "@@ -1,121 +1,121 @@\n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:7:13\n+  --> $DIR/single_char_pattern.rs:9:13\n    |\n LL |     x.split(\"x\");\n    |             ^^^ help: try using a char instead: `'x'`\n    |\n    = note: `-D clippy::single-char-pattern` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:24:16\n+  --> $DIR/single_char_pattern.rs:26:16\n    |\n LL |     x.contains(\"x\");\n    |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:25:19\n+  --> $DIR/single_char_pattern.rs:27:19\n    |\n LL |     x.starts_with(\"x\");\n    |                   ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:26:17\n+  --> $DIR/single_char_pattern.rs:28:17\n    |\n LL |     x.ends_with(\"x\");\n    |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:27:12\n+  --> $DIR/single_char_pattern.rs:29:12\n    |\n LL |     x.find(\"x\");\n    |            ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:28:13\n+  --> $DIR/single_char_pattern.rs:30:13\n    |\n LL |     x.rfind(\"x\");\n    |             ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:29:14\n+  --> $DIR/single_char_pattern.rs:31:14\n    |\n LL |     x.rsplit(\"x\");\n    |              ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:30:24\n+  --> $DIR/single_char_pattern.rs:32:24\n    |\n LL |     x.split_terminator(\"x\");\n    |                        ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:31:25\n+  --> $DIR/single_char_pattern.rs:33:25\n    |\n LL |     x.rsplit_terminator(\"x\");\n    |                         ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:32:17\n+  --> $DIR/single_char_pattern.rs:34:17\n    |\n LL |     x.splitn(0, \"x\");\n    |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:33:18\n+  --> $DIR/single_char_pattern.rs:35:18\n    |\n LL |     x.rsplitn(0, \"x\");\n    |                  ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:34:15\n+  --> $DIR/single_char_pattern.rs:36:15\n    |\n LL |     x.matches(\"x\");\n    |               ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:35:16\n+  --> $DIR/single_char_pattern.rs:37:16\n    |\n LL |     x.rmatches(\"x\");\n    |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:36:21\n+  --> $DIR/single_char_pattern.rs:38:21\n    |\n LL |     x.match_indices(\"x\");\n    |                     ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:37:22\n+  --> $DIR/single_char_pattern.rs:39:22\n    |\n LL |     x.rmatch_indices(\"x\");\n    |                      ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:38:26\n+  --> $DIR/single_char_pattern.rs:40:26\n    |\n LL |     x.trim_start_matches(\"x\");\n    |                          ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:39:24\n+  --> $DIR/single_char_pattern.rs:41:24\n    |\n LL |     x.trim_end_matches(\"x\");\n    |                        ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:41:13\n+  --> $DIR/single_char_pattern.rs:43:13\n    |\n LL |     x.split(\"/n\");\n    |             ^^^^ help: try using a char instead: `'/n'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:46:31\n+  --> $DIR/single_char_pattern.rs:48:31\n    |\n LL |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n    |                               ^^^ help: try using a char instead: `','`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:47:19\n+  --> $DIR/single_char_pattern.rs:49:19\n    |\n LL |     x.starts_with(\"/x03\"); // issue #2996\n    |                   ^^^^^^ help: try using a char instead: `'/x03'`"}]}