{"sha": "36266b3e6cd3d58716cd1fcd21f05148d322d204", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MjY2YjNlNmNkM2Q1ODcxNmNkMWZjZDIxZjA1MTQ4ZDMyMmQyMDQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-11T19:50:55Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-11T19:50:55Z"}, "message": "test reformatting: revert more questionable changes done by rustfmt and add #[rustfmt::skip]", "tree": {"sha": "6f832153912986599fc996702b7027e7957a8325", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f832153912986599fc996702b7027e7957a8325"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36266b3e6cd3d58716cd1fcd21f05148d322d204", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36266b3e6cd3d58716cd1fcd21f05148d322d204", "html_url": "https://github.com/rust-lang/rust/commit/36266b3e6cd3d58716cd1fcd21f05148d322d204", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36266b3e6cd3d58716cd1fcd21f05148d322d204/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "743e9e356115721ced5dce2cfc0c398c6d107cdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/743e9e356115721ced5dce2cfc0c398c6d107cdc", "html_url": "https://github.com/rust-lang/rust/commit/743e9e356115721ced5dce2cfc0c398c6d107cdc"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "d7823b0b819b46fd172c8f9557beac643f881378", "filename": "tests/ui/decimal_literal_representation.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fdecimal_literal_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fdecimal_literal_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.rs?ref=36266b3e6cd3d58716cd1fcd21f05148d322d204", "patch": "@@ -9,9 +9,9 @@\n \n #[warn(clippy::decimal_literal_representation)]\n #[allow(unused_variables)]\n+#[rustfmt::skip]\n fn main() {\n-    let good = (\n-        // Hex:\n+    let good = (       // Hex:\n         127,           // 0x7F\n         256,           // 0x100\n         511,           // 0x1FF\n@@ -21,8 +21,7 @@ fn main() {\n         61_683,        // 0xF0F3\n         2_131_750_925, // 0x7F0F_F00D\n     );\n-    let bad = (\n-        // Hex:\n+    let bad = (        // Hex:\n         32_773,        // 0x8005\n         65_280,        // 0xFF00\n         2_131_750_927, // 0x7F0F_F00F"}, {"sha": "c68a25f3dc398f394a0c4b15d989b14bc623f062", "filename": "tests/ui/decimal_literal_representation.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fdecimal_literal_representation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fdecimal_literal_representation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.stderr?ref=36266b3e6cd3d58716cd1fcd21f05148d322d204", "patch": "@@ -1,33 +1,33 @@\n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:26:9\n+  --> $DIR/decimal_literal_representation.rs:25:9\n    |\n-26 |         32_773,        // 0x8005\n+25 |         32_773,        // 0x8005\n    |         ^^^^^^ help: consider: `0x8005`\n    |\n    = note: `-D clippy::decimal-literal-representation` implied by `-D warnings`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:27:9\n+  --> $DIR/decimal_literal_representation.rs:26:9\n    |\n-27 |         65_280,        // 0xFF00\n+26 |         65_280,        // 0xFF00\n    |         ^^^^^^ help: consider: `0xFF00`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:28:9\n+  --> $DIR/decimal_literal_representation.rs:27:9\n    |\n-28 |         2_131_750_927, // 0x7F0F_F00F\n+27 |         2_131_750_927, // 0x7F0F_F00F\n    |         ^^^^^^^^^^^^^ help: consider: `0x7F0F_F00F`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:29:9\n+  --> $DIR/decimal_literal_representation.rs:28:9\n    |\n-29 |         2_147_483_647, // 0x7FFF_FFFF\n+28 |         2_147_483_647, // 0x7FFF_FFFF\n    |         ^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:30:9\n+  --> $DIR/decimal_literal_representation.rs:29:9\n    |\n-30 |         4_042_322_160, // 0xF0F0_F0F0\n+29 |         4_042_322_160, // 0xF0F0_F0F0\n    |         ^^^^^^^^^^^^^ help: consider: `0xF0F0_F0F0`\n \n error: aborting due to 5 previous errors"}, {"sha": "acd5a52ff386f65934f3ba0da46ee3c63d6e0049", "filename": "tests/ui/implicit_hasher.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.rs?ref=36266b3e6cd3d58716cd1fcd21f05148d322d204", "patch": "@@ -85,8 +85,8 @@ macro_rules! gen {\n         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n     };\n }\n-\n-gen!(impl );\n+#[rustfmt::skip]\n+gen!(impl);\n gen!(fn bar);\n \n // When the macro is in a different file, the suggestion spans can't be combined properly"}, {"sha": "35306e77aecf078ba0133dd71789a05666853184", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=36266b3e6cd3d58716cd1fcd21f05148d322d204", "patch": "@@ -96,8 +96,8 @@ error: impl for `HashMap` should be generalized over different hashers\n 77 |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n    |                                           ^^^^^^^^^^^^^\n ...\n-89 | gen!(impl );\n-   | ------------ in this macro invocation\n+89 | gen!(impl);\n+   | ----------- in this macro invocation\n help: consider adding a type parameter\n    |\n 77 |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {"}, {"sha": "20fa9c8757446fbdcde382e129cd6d68318703cf", "filename": "tests/ui/swap.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.rs?ref=36266b3e6cd3d58716cd1fcd21f05148d322d204", "patch": "@@ -39,6 +39,7 @@ fn vec() {\n     foo.swap(0, 1);\n }\n \n+#[rustfmt::skip]\n fn main() {\n     array();\n     slice();\n@@ -50,7 +51,7 @@ fn main() {\n     a = b;\n     b = a;\n \n-;    let t = a;\n+    ; let t = a;\n     a = b;\n     b = t;\n \n@@ -59,7 +60,7 @@ fn main() {\n     c.0 = a;\n     a = c.0;\n \n-;    let t = c.0;\n+    ; let t = c.0;\n     c.0 = a;\n     a = t;\n }"}, {"sha": "c8e803c4afd7680092697b15be7874c2bd583df2", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36266b3e6cd3d58716cd1fcd21f05148d322d204/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=36266b3e6cd3d58716cd1fcd21f05148d322d204", "patch": "@@ -25,42 +25,42 @@ error: this looks like you are swapping elements of `foo` manually\n    | |_________________^ help: try: `foo.swap(0, 1)`\n \n error: this looks like you are swapping `a` and `b` manually\n-  --> $DIR/swap.rs:53:6\n+  --> $DIR/swap.rs:54:7\n    |\n-53 |   ;    let t = a;\n-   |  ______^\n-54 | |     a = b;\n-55 | |     b = t;\n+54 |       ; let t = a;\n+   |  _______^\n+55 | |     a = b;\n+56 | |     b = t;\n    | |_________^ help: try: `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `c.0` and `a` manually\n-  --> $DIR/swap.rs:62:6\n+  --> $DIR/swap.rs:63:7\n    |\n-62 |   ;    let t = c.0;\n-   |  ______^\n-63 | |     c.0 = a;\n-64 | |     a = t;\n+63 |       ; let t = c.0;\n+   |  _______^\n+64 | |     c.0 = a;\n+65 | |     a = t;\n    | |_________^ help: try: `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n-  --> $DIR/swap.rs:50:5\n+  --> $DIR/swap.rs:51:5\n    |\n-50 | /     a = b;\n-51 | |     b = a;\n+51 | /     a = b;\n+52 | |     b = a;\n    | |_________^ help: try: `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: `-D clippy::almost-swapped` implied by `-D warnings`\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `c.0` and `a`\n-  --> $DIR/swap.rs:59:5\n+  --> $DIR/swap.rs:60:5\n    |\n-59 | /     c.0 = a;\n-60 | |     a = c.0;\n+60 | /     c.0 = a;\n+61 | |     a = c.0;\n    | |___________^ help: try: `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: or maybe you should use `std::mem::replace`?"}]}