{"sha": "9fd34e0c7522fd52bf7d015de4ed78c24596498b", "node_id": "C_kwDOAAsO6NoAKDlmZDM0ZTBjNzUyMmZkNTJiZjdkMDE1ZGU0ZWQ3OGMyNDU5NjQ5OGI", "commit": {"author": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2023-05-23T00:02:45Z"}, "committer": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2023-05-23T00:02:45Z"}, "message": "Use #[rustfmt::skip]", "tree": {"sha": "da5c9e4818afa04f6dceff0fc3db1b8a928a14b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da5c9e4818afa04f6dceff0fc3db1b8a928a14b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fd34e0c7522fd52bf7d015de4ed78c24596498b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd34e0c7522fd52bf7d015de4ed78c24596498b", "html_url": "https://github.com/rust-lang/rust/commit/9fd34e0c7522fd52bf7d015de4ed78c24596498b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fd34e0c7522fd52bf7d015de4ed78c24596498b/comments", "author": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e92614818879f24994c3890dcb958b8baa2d0678", "url": "https://api.github.com/repos/rust-lang/rust/commits/e92614818879f24994c3890dcb958b8baa2d0678", "html_url": "https://github.com/rust-lang/rust/commit/e92614818879f24994c3890dcb958b8baa2d0678"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "3455ca5537af089881eb92c75cc9dbda21198461", "filename": "tests/ui/single_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.rs?ref=9fd34e0c7522fd52bf7d015de4ed78c24596498b", "patch": "@@ -255,8 +255,8 @@ fn issue_10808(bar: Option<i32>) {\n     }\n \n     match bar {\n+        #[rustfmt::skip]\n         Some(v) => {\n-            // this comment prevents rustfmt from collapsing the block\n             unsafe {\n                 let r = &v as *const i32;\n                 println!(\"{}\", *r);"}, {"sha": "dad66e2ab2ec3aa7c352945efc993691362fdf86", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=9fd34e0c7522fd52bf7d015de4ed78c24596498b", "patch": "@@ -179,8 +179,8 @@ error: you seem to be trying to use `match` for destructuring a single pattern.\n   --> $DIR/single_match.rs:257:5\n    |\n LL | /     match bar {\n+LL | |         #[rustfmt::skip]\n LL | |         Some(v) => {\n-LL | |             // this comment prevents rustfmt from collapsing the block\n LL | |             unsafe {\n ...  |\n LL | |         _ => {},\n@@ -190,7 +190,6 @@ LL | |     }\n help: try this\n    |\n LL ~     if let Some(v) = bar {\n-LL +         // this comment prevents rustfmt from collapsing the block\n LL +         unsafe {\n LL +             let r = &v as *const i32;\n LL +             println!(\"{}\", *r);"}, {"sha": "ec97bfc845f8f6b4a052b8ddf412c1b873ddb515", "filename": "tests/ui/single_match_else.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.rs?ref=9fd34e0c7522fd52bf7d015de4ed78c24596498b", "patch": "@@ -153,8 +153,8 @@ fn issue_10808(bar: Option<i32>) {\n     }\n \n     match bar {\n+        #[rustfmt::skip]\n         Some(v) => {\n-            // this comment prevents rustfmt from collapsing the block\n             unsafe {\n                 let r = &v as *const i32;\n                 println!(\"{}\", *r);\n@@ -171,8 +171,8 @@ fn issue_10808(bar: Option<i32>) {\n             println!(\"Some\");\n             println!(\"{v}\");\n         },\n+        #[rustfmt::skip]\n         None => {\n-            // this comment prevents rustfmt from collapsing the block\n             unsafe {\n                 let v = 0;\n                 let r = &v as *const i32;\n@@ -182,15 +182,15 @@ fn issue_10808(bar: Option<i32>) {\n     }\n \n     match bar {\n+        #[rustfmt::skip]\n         Some(v) => {\n-            // this comment prevents rustfmt from collapsing the block\n             unsafe {\n                 let r = &v as *const i32;\n                 println!(\"{}\", *r);\n             }\n         },\n+        #[rustfmt::skip]\n         None => {\n-            // this comment prevents rustfmt from collapsing the block\n             unsafe {\n                 let v = 0;\n                 let r = &v as *const i32;"}, {"sha": "228236f3bb8e84723d79d270f15eefe2599a1491", "filename": "tests/ui/single_match_else.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9fd34e0c7522fd52bf7d015de4ed78c24596498b/tests%2Fui%2Fsingle_match_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.stderr?ref=9fd34e0c7522fd52bf7d015de4ed78c24596498b", "patch": "@@ -175,8 +175,8 @@ error: you seem to be trying to use `match` for destructuring a single pattern.\n   --> $DIR/single_match_else.rs:155:5\n    |\n LL | /     match bar {\n+LL | |         #[rustfmt::skip]\n LL | |         Some(v) => {\n-LL | |             // this comment prevents rustfmt from collapsing the block\n LL | |             unsafe {\n ...  |\n LL | |         },\n@@ -186,7 +186,6 @@ LL | |     }\n help: try this\n    |\n LL ~     if let Some(v) = bar {\n-LL +         // this comment prevents rustfmt from collapsing the block\n LL +         unsafe {\n LL +             let r = &v as *const i32;\n LL +             println!(\"{}\", *r);"}]}