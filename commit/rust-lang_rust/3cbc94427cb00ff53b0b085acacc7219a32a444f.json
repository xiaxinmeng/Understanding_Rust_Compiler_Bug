{"sha": "3cbc94427cb00ff53b0b085acacc7219a32a444f", "node_id": "C_kwDOAAsO6NoAKDNjYmM5NDQyN2NiMDBmZjUzYjBiMDg1YWNhY2M3MjE5YTMyYTQ0NGY", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-28T01:20:55Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-28T01:20:55Z"}, "message": "avoid `Symbol` to `String` conversions", "tree": {"sha": "3c095291a80781a47b230547eb3f91c2d39dc95c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c095291a80781a47b230547eb3f91c2d39dc95c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cbc94427cb00ff53b0b085acacc7219a32a444f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cbc94427cb00ff53b0b085acacc7219a32a444f", "html_url": "https://github.com/rust-lang/rust/commit/3cbc94427cb00ff53b0b085acacc7219a32a444f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cbc94427cb00ff53b0b085acacc7219a32a444f/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ae03e027a66744e934a7bfa7127256489bed3c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ae03e027a66744e934a7bfa7127256489bed3c2", "html_url": "https://github.com/rust-lang/rust/commit/3ae03e027a66744e934a7bfa7127256489bed3c2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ccc29adc0153ee206a14d14fa03e1ffaf07af8ee", "filename": "compiler/rustc_expand/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cbc94427cb00ff53b0b085acacc7219a32a444f/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cbc94427cb00ff53b0b085acacc7219a32a444f/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fconfig.rs?ref=3cbc94427cb00ff53b0b085acacc7219a32a444f", "patch": "@@ -129,7 +129,7 @@ fn get_features(\n                         .span_suggestion(\n                             mi.span(),\n                             \"expected just one word\",\n-                            format!(\"{}\", ident.name),\n+                            ident.name,\n                             Applicability::MaybeIncorrect,\n                         )\n                         .emit();"}, {"sha": "ecb9d473c0053bacf5aa0112fe3428e60f848cc4", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3cbc94427cb00ff53b0b085acacc7219a32a444f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cbc94427cb00ff53b0b085acacc7219a32a444f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=3cbc94427cb00ff53b0b085acacc7219a32a444f", "patch": "@@ -184,7 +184,7 @@ pub trait InferCtxtExt<'tcx> {\n         trait_pred: ty::PolyTraitPredicate<'tcx>,\n     ) -> bool;\n \n-    fn get_closure_name(&self, def_id: DefId, err: &mut Diagnostic, msg: &str) -> Option<String>;\n+    fn get_closure_name(&self, def_id: DefId, err: &mut Diagnostic, msg: &str) -> Option<Symbol>;\n \n     fn suggest_fn_call(\n         &self,\n@@ -737,13 +737,13 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n     /// Given a closure's `DefId`, return the given name of the closure.\n     ///\n     /// This doesn't account for reassignments, but it's only used for suggestions.\n-    fn get_closure_name(&self, def_id: DefId, err: &mut Diagnostic, msg: &str) -> Option<String> {\n-        let get_name = |err: &mut Diagnostic, kind: &hir::PatKind<'_>| -> Option<String> {\n+    fn get_closure_name(&self, def_id: DefId, err: &mut Diagnostic, msg: &str) -> Option<Symbol> {\n+        let get_name = |err: &mut Diagnostic, kind: &hir::PatKind<'_>| -> Option<Symbol> {\n             // Get the local name of this closure. This can be inaccurate because\n             // of the possibility of reassignment, but this should be good enough.\n             match &kind {\n-                hir::PatKind::Binding(hir::BindingAnnotation::Unannotated, _, name, None) => {\n-                    Some(format!(\"{}\", name))\n+                hir::PatKind::Binding(hir::BindingAnnotation::Unannotated, _, ident, None) => {\n+                    Some(ident.name)\n                 }\n                 _ => {\n                     err.note(msg);"}]}