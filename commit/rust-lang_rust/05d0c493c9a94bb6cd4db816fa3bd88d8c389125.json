{"sha": "05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZDBjNDkzYzlhOTRiYjZjZDRkYjgxNmZhM2JkODhkOGMzODkxMjU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-26T12:42:14Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-26T12:42:14Z"}, "message": "Merge #672\n\n672: dont overwrite memfies r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "6635a8619836d0c0b262ec095f50bc9668f24436", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6635a8619836d0c0b262ec095f50bc9668f24436"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "html_url": "https://github.com/rust-lang/rust/commit/05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05d0c493c9a94bb6cd4db816fa3bd88d8c389125/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "2acaa92c93bcd54d97221d0cede8780ff817476e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2acaa92c93bcd54d97221d0cede8780ff817476e", "html_url": "https://github.com/rust-lang/rust/commit/2acaa92c93bcd54d97221d0cede8780ff817476e"}, {"sha": "07a4b9f1a0c36c6bff4b0dbaaeaa93baea8b1f0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a4b9f1a0c36c6bff4b0dbaaeaa93baea8b1f0e", "html_url": "https://github.com/rust-lang/rust/commit/07a4b9f1a0c36c6bff4b0dbaaeaa93baea8b1f0e"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "70a13f7655228c8f1a1357da59ace48d06ce6d34", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05d0c493c9a94bb6cd4db816fa3bd88d8c389125/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d0c493c9a94bb6cd4db816fa3bd88d8c389125/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "patch": "@@ -264,7 +264,9 @@ impl Vfs {\n                 self.pending_changes.push(change);\n             }\n             TaskResult::AddSingleFile { root, path, text } => {\n-                self.do_add_file(root, path, text, false);\n+                if self.find_file(root, &path).is_none() {\n+                    self.do_add_file(root, path, text, false);\n+                }\n             }\n             TaskResult::ChangeSingleFile { root, path, text } => {\n                 if let Some(file) = self.find_file(root, &path) {"}, {"sha": "545e1dbdd2568a561e341c0fd599fd643e72ade4", "filename": "crates/ra_vfs/tests/vfs.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/05d0c493c9a94bb6cd4db816fa3bd88d8c389125/crates%2Fra_vfs%2Ftests%2Fvfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d0c493c9a94bb6cd4db816fa3bd88d8c389125/crates%2Fra_vfs%2Ftests%2Fvfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Ftests%2Fvfs.rs?ref=05d0c493c9a94bb6cd4db816fa3bd88d8c389125", "patch": "@@ -165,6 +165,18 @@ fn test_vfs_works() -> std::io::Result<()> {\n         assert_eq!(path, \"sub1/sub2/new1.rs\")\n     );\n \n+    {\n+        vfs.add_file_overlay(&dir.path().join(\"a/memfile.rs\"), \"memfile\".to_string());\n+        assert_match!(\n+            vfs.commit_changes().as_slice(),\n+            [VfsChange::AddFile { text, .. }],\n+            assert_eq!(text.as_str(), \"memfile\")\n+        );\n+        fs::write(&dir.path().join(\"a/memfile.rs\"), \"ignore me\").unwrap();\n+        process_tasks(&mut vfs, 1);\n+        assert_match!(vfs.commit_changes().as_slice(), []);\n+    }\n+\n     // should be ignored\n     fs::create_dir_all(dir.path().join(\"a/target\")).unwrap();\n     fs::write(&dir.path().join(\"a/target/new.rs\"), \"ignore me\").unwrap();"}]}