{"sha": "0f3fada1184aebdc30f102df59e43313e27b3e25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmM2ZhZGExMTg0YWViZGMzMGYxMDJkZjU5ZTQzMzEzZTI3YjNlMjU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T08:47:06Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T08:47:06Z"}, "message": "Rollup merge of #27757 - AlisdairO:diagnostics366, r=Manishearth\n\nAs title :-)\r\nPart of #24407.\r\n\r\nr? @Manishearth", "tree": {"sha": "642dd50698ad69651b16002a5fb903c723458ea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/642dd50698ad69651b16002a5fb903c723458ea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f3fada1184aebdc30f102df59e43313e27b3e25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f3fada1184aebdc30f102df59e43313e27b3e25", "html_url": "https://github.com/rust-lang/rust/commit/0f3fada1184aebdc30f102df59e43313e27b3e25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f3fada1184aebdc30f102df59e43313e27b3e25/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d0bca42e0fc63af49072826cec462e25310bd9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0bca42e0fc63af49072826cec462e25310bd9c", "html_url": "https://github.com/rust-lang/rust/commit/9d0bca42e0fc63af49072826cec462e25310bd9c"}, {"sha": "b7e009b386260732755784e93f9a347dca40d912", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e009b386260732755784e93f9a347dca40d912", "html_url": "https://github.com/rust-lang/rust/commit/b7e009b386260732755784e93f9a347dca40d912"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "fd1a5595e8f1f3e8affb1af7874438c785c8a3d1", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 71, "deletions": 2, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/0f3fada1184aebdc30f102df59e43313e27b3e25/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f3fada1184aebdc30f102df59e43313e27b3e25/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=0f3fada1184aebdc30f102df59e43313e27b3e25", "patch": "@@ -2429,6 +2429,77 @@ fn main() {\n ```\n \"##,\n \n+E0366: r##\"\n+An attempt was made to implement `Drop` on a concrete specialization of a\n+generic type. An example is shown below:\n+\n+```\n+struct Foo<T> {\n+    t: T\n+}\n+\n+impl Drop for Foo<u32> {\n+    fn drop(&mut self) {}\n+}\n+```\n+\n+This code is not legal: it is not possible to specialize `Drop` to a subset of\n+implementations of a generic type. One workaround for this is to wrap the\n+generic type, as shown below:\n+\n+```\n+struct Foo<T> {\n+    t: T\n+}\n+\n+struct Bar {\n+    t: Foo<u32>\n+}\n+\n+impl Drop for Bar {\n+    fn drop(&mut self) {}\n+}\n+```\n+\"##,\n+\n+E0367: r##\"\n+An attempt was made to implement `Drop` on a specialization of a generic type.\n+An example is shown below:\n+\n+```\n+trait Foo{}\n+\n+struct MyStruct<T> {\n+    t: T\n+}\n+\n+impl<T: Foo> Drop for MyStruct<T> {\n+    fn drop(&mut self) {}\n+}\n+```\n+\n+This code is not legal: it is not possible to specialize `Drop` to a subset of\n+implementations of a generic type. In order for this code to work, `MyStruct`\n+must also require that `T` implements `Foo`. Alternatively, another option is\n+to wrap the generic type in another that specializes appropriately:\n+\n+```\n+trait Foo{}\n+\n+struct MyStruct<T> {\n+    t: T\n+}\n+\n+struct MyStructWrapper<T: Foo> {\n+    t: MyStruct<T>\n+}\n+\n+impl <T: Foo> Drop for MyStructWrapper<T> {\n+    fn drop(&mut self) {}\n+}\n+```\n+\"##,\n+\n E0368: r##\"\n This error indicates that a binary assignment operator like `+=` or `^=` was\n applied to the wrong types. For example:\n@@ -2659,8 +2730,6 @@ register_diagnostics! {\n     E0325, // implemented an associated type when another trait item expected\n     E0328, // cannot implement Unsize explicitly\n     E0329, // associated const depends on type parameter or Self.\n-    E0366, // dropck forbid specialization to concrete type or region\n-    E0367, // dropck forbid specialization to predicate not in struct/enum\n     E0369, // binary operation `<op>` cannot be applied to types\n     E0370, // discriminant overflow\n     E0374, // the trait `CoerceUnsized` may only be implemented for a coercion"}]}