{"sha": "52d37826858ee4dad6b66a3060994f41df247770", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZDM3ODI2ODU4ZWU0ZGFkNmI2NmEzMDYwOTk0ZjQxZGYyNDc3NzA=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-17T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-26T09:41:44Z"}, "message": "simplify-locals: Remove unused set-discriminant statements\n\nUpdate affected ui & incremental tests to use a user declared variable\nbindings instead of temporaries. The former are preserved because of\ndebuginfo, the latter are not.", "tree": {"sha": "2d1bc76c92806acd3d79e0bd8e707657d6daf2f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d1bc76c92806acd3d79e0bd8e707657d6daf2f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52d37826858ee4dad6b66a3060994f41df247770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52d37826858ee4dad6b66a3060994f41df247770", "html_url": "https://github.com/rust-lang/rust/commit/52d37826858ee4dad6b66a3060994f41df247770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52d37826858ee4dad6b66a3060994f41df247770/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1e48ae29b52d214f93d816e99056aacb102a90a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1e48ae29b52d214f93d816e99056aacb102a90a", "html_url": "https://github.com/rust-lang/rust/commit/e1e48ae29b52d214f93d816e99056aacb102a90a"}], "stats": {"total": 47, "additions": 20, "deletions": 27}, "files": [{"sha": "183111877d1ceb41fc546d038cd37cb468c6e385", "filename": "compiler/rustc_mir/src/transform/simplify.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -427,7 +427,6 @@ impl Visitor<'_> for UsedLocals {\n     fn visit_statement(&mut self, statement: &Statement<'tcx>, location: Location) {\n         match statement.kind {\n             StatementKind::LlvmInlineAsm(..)\n-            | StatementKind::SetDiscriminant { .. } // FIXME: Try to remove those as well.\n             | StatementKind::Retag(..)\n             | StatementKind::Coverage(..)\n             | StatementKind::FakeRead(..)\n@@ -467,6 +466,10 @@ impl Visitor<'_> for UsedLocals {\n                 }\n                 self.visit_rvalue(rvalue, location);\n             }\n+\n+            StatementKind::SetDiscriminant { ref place, variant_index: _ } => {\n+                self.visit_lhs(place, location);\n+            }\n         }\n     }\n \n@@ -481,10 +484,7 @@ impl Visitor<'_> for UsedLocals {\n }\n \n /// Removes unused definitions. Updates the used locals to reflect the changes made.\n-fn remove_unused_definitions<'a, 'tcx>(\n-    used_locals: &'a mut UsedLocals,\n-    body: &mut Body<'tcx>,\n-) {\n+fn remove_unused_definitions<'a, 'tcx>(used_locals: &'a mut UsedLocals, body: &mut Body<'tcx>) {\n     // The use counts are updated as we remove the statements. A local might become unused\n     // during the retain operation, leading to a temporary inconsistency (storage statements or\n     // definitions referencing the local might remain). For correctness it is crucial that this\n@@ -502,6 +502,10 @@ fn remove_unused_definitions<'a, 'tcx>(\n                         used_locals.is_used(*local)\n                     }\n                     StatementKind::Assign(box (place, _)) => used_locals.is_used(place.local),\n+\n+                    StatementKind::SetDiscriminant { ref place, .. } => {\n+                        used_locals.is_used(place.local)\n+                    }\n                     _ => true,\n                 };\n "}, {"sha": "26ff6b109dc326f2703462523cf07418d32114fb", "filename": "src/test/incremental/hashes/enum_constructors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -7,7 +7,7 @@\n \n // build-pass (FIXME(62277): could be check-pass?)\n // revisions: cfail1 cfail2 cfail3\n-// compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n+// compile-flags: -Z query-dep-graph -Zincremental-ignore-spans -Zmir-opt-level=0\n \n #![allow(warnings)]\n #![feature(rustc_attrs)]"}, {"sha": "76bf175d073d788338e1f1ad86037bf4fef1815b", "filename": "src/test/mir-opt/simplify_locals.d1.SimplifyLocals.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d1.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d1.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d1.SimplifyLocals.diff?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -3,14 +3,14 @@\n   \n   fn d1() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:20:9: 20:9\n-      let mut _1: E;                       // in scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n+-     let mut _1: E;                       // in scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n       scope 1 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n-          discriminant(_1) = 0;            // scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n-          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:22:17: 22:18\n+-         StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n+-         discriminant(_1) = 0;            // scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n+-         StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:22:17: 22:18\n           _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:20:9: 23:2\n           return;                          // scope 0 at $DIR/simplify-locals.rs:23:2: 23:2\n       }"}, {"sha": "c06fa09053ce8f7b9cc7bd1f38263745f505cd32", "filename": "src/test/mir-opt/simplify_locals.d2.SimplifyLocals.diff", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d2.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d2.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d2.SimplifyLocals.diff?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -3,14 +3,13 @@\n   \n   fn d2() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:26:9: 26:9\n-      let mut _1: E;                       // in scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n+-     let mut _1: E;                       // in scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n -     let mut _2: (i32, E);                // in scope 0 at $DIR/simplify-locals.rs:28:5: 28:17\n -     let mut _3: E;                       // in scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n-+     let mut _2: E;                       // in scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n-          discriminant(_1) = 1;            // scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n+-         StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n+-         discriminant(_1) = 1;            // scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n -         StorageLive(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:5: 28:17\n -         StorageLive(_3);                 // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n -         discriminant(_3) = 0;            // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n@@ -30,10 +29,7 @@\n -                                          // mir::Constant\n -                                          // + span: $DIR/simplify-locals.rs:28:5: 28:26\n -                                          // + literal: Const { ty: E, val: Value(Scalar(0x01)) }\n-+         StorageLive(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n-+         discriminant(_2) = 0;            // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n-+         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:15: 28:16\n-          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:28:25: 28:26\n+-         StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:28:25: 28:26\n -         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:26: 28:27\n           _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:26:9: 29:2\n           return;                          // scope 0 at $DIR/simplify-locals.rs:29:2: 29:2"}, {"sha": "dae0cbb65a4b3f871ddfe1a5f333b86cbeb86999", "filename": "src/test/mir-opt/while_let_loops.change_loop_body.PreCodegen.after.32bit.mir", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.32bit.mir?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -3,18 +3,14 @@\n fn change_loop_body() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/while_let_loops.rs:5:27: 5:27\n     let mut _1: i32;                     // in scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n-    let mut _2: std::option::Option<u32>; // in scope 0 at $DIR/while_let_loops.rs:7:28: 7:32\n     scope 1 {\n         debug _x => _1;                  // in scope 1 at $DIR/while_let_loops.rs:6:9: 6:15\n     }\n \n     bb0: {\n         StorageLive(_1);                 // scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n         _1 = const 0_i32;                // scope 0 at $DIR/while_let_loops.rs:6:18: 6:19\n-        StorageLive(_2);                 // scope 1 at $DIR/while_let_loops.rs:7:28: 7:32\n-        discriminant(_2) = 0;            // scope 1 at $DIR/while_let_loops.rs:7:28: 7:32\n         _0 = const ();                   // scope 1 at $DIR/while_let_loops.rs:7:5: 10:6\n-        StorageDead(_2);                 // scope 1 at $DIR/while_let_loops.rs:10:5: 10:6\n         StorageDead(_1);                 // scope 0 at $DIR/while_let_loops.rs:11:1: 11:2\n         return;                          // scope 0 at $DIR/while_let_loops.rs:11:2: 11:2\n     }"}, {"sha": "dae0cbb65a4b3f871ddfe1a5f333b86cbeb86999", "filename": "src/test/mir-opt/while_let_loops.change_loop_body.PreCodegen.after.64bit.mir", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.64bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.64bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.PreCodegen.after.64bit.mir?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -3,18 +3,14 @@\n fn change_loop_body() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/while_let_loops.rs:5:27: 5:27\n     let mut _1: i32;                     // in scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n-    let mut _2: std::option::Option<u32>; // in scope 0 at $DIR/while_let_loops.rs:7:28: 7:32\n     scope 1 {\n         debug _x => _1;                  // in scope 1 at $DIR/while_let_loops.rs:6:9: 6:15\n     }\n \n     bb0: {\n         StorageLive(_1);                 // scope 0 at $DIR/while_let_loops.rs:6:9: 6:15\n         _1 = const 0_i32;                // scope 0 at $DIR/while_let_loops.rs:6:18: 6:19\n-        StorageLive(_2);                 // scope 1 at $DIR/while_let_loops.rs:7:28: 7:32\n-        discriminant(_2) = 0;            // scope 1 at $DIR/while_let_loops.rs:7:28: 7:32\n         _0 = const ();                   // scope 1 at $DIR/while_let_loops.rs:7:5: 10:6\n-        StorageDead(_2);                 // scope 1 at $DIR/while_let_loops.rs:10:5: 10:6\n         StorageDead(_1);                 // scope 0 at $DIR/while_let_loops.rs:11:1: 11:2\n         return;                          // scope 0 at $DIR/while_let_loops.rs:11:2: 11:2\n     }"}, {"sha": "0895f4c18e3879b3a674f70b38b72ea5a3e929fe", "filename": "src/test/ui/lint/issue-69485-var-size-diffs-too-large.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fui%2Flint%2Fissue-69485-var-size-diffs-too-large.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fui%2Flint%2Fissue-69485-var-size-diffs-too-large.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-69485-var-size-diffs-too-large.rs?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -1,5 +1,6 @@\n // build-fail\n // only-x86_64\n+// compile-flags: -Zmir-opt-level=0\n \n fn main() {\n     Bug::V([0; !0]); //~ ERROR is too big for the current"}, {"sha": "51eac95afb9ceb093699f85db530ae8d6de71a93", "filename": "src/test/ui/lint/issue-69485-var-size-diffs-too-large.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fui%2Flint%2Fissue-69485-var-size-diffs-too-large.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52d37826858ee4dad6b66a3060994f41df247770/src%2Ftest%2Fui%2Flint%2Fissue-69485-var-size-diffs-too-large.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-69485-var-size-diffs-too-large.stderr?ref=52d37826858ee4dad6b66a3060994f41df247770", "patch": "@@ -1,5 +1,5 @@\n error: the type `[u8; 18446744073709551615]` is too big for the current architecture\n-  --> $DIR/issue-69485-var-size-diffs-too-large.rs:5:12\n+  --> $DIR/issue-69485-var-size-diffs-too-large.rs:6:12\n    |\n LL |     Bug::V([0; !0]);\n    |            ^^^^^^^"}]}