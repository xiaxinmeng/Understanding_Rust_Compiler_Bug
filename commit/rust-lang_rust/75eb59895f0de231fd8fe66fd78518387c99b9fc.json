{"sha": "75eb59895f0de231fd8fe66fd78518387c99b9fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZWI1OTg5NWYwZGUyMzFmZDhmZTY2ZmQ3ODUxODM4N2M5OWI5ZmM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-13T00:32:36Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:24Z"}, "message": "Copy a comment", "tree": {"sha": "5ba3f52744ea67f450c783d22589e56164aa0314", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ba3f52744ea67f450c783d22589e56164aa0314"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75eb59895f0de231fd8fe66fd78518387c99b9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75eb59895f0de231fd8fe66fd78518387c99b9fc", "html_url": "https://github.com/rust-lang/rust/commit/75eb59895f0de231fd8fe66fd78518387c99b9fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75eb59895f0de231fd8fe66fd78518387c99b9fc/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "098d6f05971d68aa6e24a46a3505a4b9ec42d992", "url": "https://api.github.com/repos/rust-lang/rust/commits/098d6f05971d68aa6e24a46a3505a4b9ec42d992", "html_url": "https://github.com/rust-lang/rust/commit/098d6f05971d68aa6e24a46a3505a4b9ec42d992"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "9d5494d1fbab638663ecceb90bc9cb93ac7c50cc", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75eb59895f0de231fd8fe66fd78518387c99b9fc/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75eb59895f0de231fd8fe66fd78518387c99b9fc/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=75eb59895f0de231fd8fe66fd78518387c99b9fc", "patch": "@@ -1500,6 +1500,9 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n             return Ok(());\n         }\n \n+        // ok to skip binder because the substs on generator types never\n+        // touch bound regions, they just capture the in-scope\n+        // type/region parameters\n         let self_ty = *obligation.self_ty().skip_binder();\n         let (closure_def_id, substs) = match self_ty.sty {\n             ty::TyGenerator(id, substs, _) => (id, substs),"}]}