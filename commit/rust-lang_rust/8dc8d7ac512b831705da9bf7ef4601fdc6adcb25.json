{"sha": "8dc8d7ac512b831705da9bf7ef4601fdc6adcb25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYzhkN2FjNTEyYjgzMTcwNWRhOWJmN2VmNDYwMWZkYzZhZGNiMjU=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-12-20T16:57:03Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-12-20T16:57:03Z"}, "message": "split extra_scripts to handle root_path shenanigans", "tree": {"sha": "28636f189e41a4c64ff3e4521a35000224ac69ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28636f189e41a4c64ff3e4521a35000224ac69ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25", "html_url": "https://github.com/rust-lang/rust/commit/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd", "html_url": "https://github.com/rust-lang/rust/commit/0b0a00cc0551b7f525515e4e53bc0a11bd1b2ebd"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "d8a57bc93fd6c1e1c3ce8d8c5966b05450313456", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=8dc8d7ac512b831705da9bf7ef4601fdc6adcb25", "patch": "@@ -30,11 +30,13 @@ pub struct Page<'a> {\n     pub description: &'a str,\n     pub keywords: &'a str,\n     pub resource_suffix: &'a str,\n+    pub extra_scripts: &'a [&'a str],\n+    pub static_extra_scripts: &'a [&'a str],\n }\n \n pub fn render<T: fmt::Display, S: fmt::Display>(\n     dst: &mut dyn io::Write, layout: &Layout, page: &Page, sidebar: &S, t: &T,\n-    css_file_extension: bool, themes: &[PathBuf], extra_scripts: &[&str])\n+    css_file_extension: bool, themes: &[PathBuf])\n     -> io::Result<()>\n {\n     let static_root_path = page.static_root_path.unwrap_or(page.root_path);\n@@ -164,6 +166,7 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     </script>\\\n     <script src=\\\"{root_path}aliases.js\\\"></script>\\\n     <script src=\\\"{static_root_path}main{suffix}.js\\\"></script>\\\n+    {static_extra_scripts}\\\n     {extra_scripts}\\\n     <script defer src=\\\"{root_path}search-index.js\\\"></script>\\\n </body>\\\n@@ -211,9 +214,12 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n                                     page.resource_suffix))\n                    .collect::<String>(),\n     suffix=page.resource_suffix,\n-    // TODO: break out a separate `static_extra_scripts` that uses `static_root_path` instead,\n-    // then leave `source-files.js` here and move `source-script.js` to the static version\n-    extra_scripts=extra_scripts.iter().map(|e| {\n+    static_extra_scripts=page.static_extra_scripts.iter().map(|e| {\n+        format!(\"<script src=\\\"{static_root_path}{extra_script}.js\\\"></script>\",\n+                static_root_path=static_root_path,\n+                extra_script=e)\n+    }).collect::<String>(),\n+    extra_scripts=page.extra_scripts.iter().map(|e| {\n         format!(\"<script src=\\\"{root_path}{extra_script}.js\\\"></script>\",\n                 root_path=page.root_path,\n                 extra_script=e)"}, {"sha": "d171d74744508c9e8210d0acdf48f14e02eb618e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8dc8d7ac512b831705da9bf7ef4601fdc6adcb25", "patch": "@@ -1089,6 +1089,8 @@ themePicker.onblur = handleThemeButtonsBlur;\n                 description: \"List of crates\",\n                 keywords: BASIC_KEYWORDS,\n                 resource_suffix: &cx.shared.resource_suffix,\n+                extra_scripts: &[],\n+                static_extra_scripts: &[],\n             };\n             krates.push(krate.name.clone());\n             krates.sort();\n@@ -1107,7 +1109,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n             try_err!(layout::render(&mut w, &cx.shared.layout,\n                                     &page, &(\"\"), &content,\n                                     cx.shared.css_file_extension.is_some(),\n-                                    &cx.shared.themes, &[]), &dst);\n+                                    &cx.shared.themes), &dst);\n             try_err!(w.flush(), &dst);\n         }\n     }\n@@ -1376,12 +1378,13 @@ impl<'a> SourceCollector<'a> {\n             description: &desc,\n             keywords: BASIC_KEYWORDS,\n             resource_suffix: &self.scx.resource_suffix,\n+            extra_scripts: &[\"source-files\"],\n+            static_extra_scripts: &[&format!(\"source-script{}\", self.scx.resource_suffix)],\n         };\n         layout::render(&mut w, &self.scx.layout,\n                        &page, &(\"\"), &Source(contents),\n                        self.scx.css_file_extension.is_some(),\n-                       &self.scx.themes, &[\"source-files\",\n-                                           &format!(\"source-script{}\", page.resource_suffix)])?;\n+                       &self.scx.themes)?;\n         w.flush()?;\n         self.scx.local_sources.insert(p.clone(), href);\n         Ok(())\n@@ -1967,6 +1970,8 @@ impl Context {\n             description: \"List of all items in this crate\",\n             keywords: BASIC_KEYWORDS,\n             resource_suffix: &self.shared.resource_suffix,\n+            extra_scripts: &[],\n+            static_extra_scripts: &[],\n         };\n         let sidebar = if let Some(ref version) = cache().crate_version {\n             format!(\"<p class='location'>Crate {}</p>\\\n@@ -1981,7 +1986,7 @@ impl Context {\n         try_err!(layout::render(&mut w, &self.shared.layout,\n                                 &page, &sidebar, &all,\n                                 self.shared.css_file_extension.is_some(),\n-                                &self.shared.themes, &[]),\n+                                &self.shared.themes),\n                  &final_file);\n \n         // Generating settings page.\n@@ -2001,7 +2006,7 @@ impl Context {\n         try_err!(layout::render(&mut w, &layout,\n                                 &page, &sidebar, &settings,\n                                 self.shared.css_file_extension.is_some(),\n-                                &themes, &[]),\n+                                &themes),\n                  &settings_file);\n \n         Ok(())\n@@ -2048,6 +2053,8 @@ impl Context {\n             description: &desc,\n             keywords: &keywords,\n             resource_suffix: &self.shared.resource_suffix,\n+            extra_scripts: &[],\n+            static_extra_scripts: &[],\n         };\n \n         {\n@@ -2060,7 +2067,7 @@ impl Context {\n                            &Sidebar{ cx: self, item: it },\n                            &Item{ cx: self, item: it },\n                            self.shared.css_file_extension.is_some(),\n-                           &self.shared.themes, &[])?;\n+                           &self.shared.themes)?;\n         } else {\n             let mut url = self.root_path();\n             if let Some(&(ref names, ty)) = cache().paths.get(&it.def_id) {"}, {"sha": "7df3fee3365834264c6ec89e1508326c855e450b", "filename": "src/test/rustdoc/static-root-path.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc8d7ac512b831705da9bf7ef4601fdc6adcb25/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs?ref=8dc8d7ac512b831705da9bf7ef4601fdc6adcb25", "patch": "@@ -16,3 +16,9 @@\n // @matches - '\"\\.\\./search-index\\.js\"'\n // @!matches - '\"/cache/search-index\\.js\"'\n pub struct SomeStruct;\n+\n+// @has src/static_root_path/static-root-path.rs.html\n+// @matches - '\"/cache/source-script\\.js\"'\n+// @!matches - '\"\\.\\./\\.\\./source-script\\.js\"'\n+// @matches - '\"\\.\\./\\.\\./source-files.js\"'\n+// @!matches - '\"/cache/source-files\\.js\"'"}]}