{"sha": "e05e2f9a94f4fa43f9a77bb59184eeb46fd49577", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNWUyZjlhOTRmNGZhNDNmOWE3N2JiNTkxODRlZWI0NmZkNDk1Nzc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-09-30T11:54:12Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-09-30T11:54:12Z"}, "message": "bootstrap: add ./x.py run src/tools/build-manifest", "tree": {"sha": "d64fc281c8b6483f681d9b2b92e7ff451d796b26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d64fc281c8b6483f681d9b2b92e7ff451d796b26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl90cfIACgkQPgar6Auq\n8Zx/fhAApKgzDUESqLLDW3mzbnj/VgyWkVfEz8z9zICbGYPhv1+eTB/KLAUxRShJ\nnXsngN+1y4duH6Q7sIbPDZ1qK53fv9c//iG9X2EXvsIeNrqDroVHIbDQjr30LgoE\nsFErUYcvLSzfJUoKVEY6VmUGn7Sfpfg2Lzr0tpUeXTwp+WBxoKnEJ6Xrcs8akKeW\nCemEMWRLj47RWe2ZhyL75YDzUHK9jJAkfunvieK1eCz7jDcsibfPi4PC4Q1vAAG1\nas0sSAn6qcrEGpecGK8rkZ+SpZuWhiq7yjIvEvT55gRKNDaS5/byUJ/Cv1HefRp1\nFhGjVLzqTHr4FvpbCbdbrheOXBZfMHGt17qTilyQTzrnzljcKxFlHreV7Bwlxeb6\nHmK88ebOIT7cs5kXBc+JfzcbVesFdQ4LXTJIFLULfaJ8y1ifqBegLo3e8gX8Jn+V\n+oNhkiT/TzBHOXlTnhCVrV183vZjKofubOxVAAvsN2BXuPyzbPodkVkHprQ9IMT9\nAsKJPX2XKhw4lEtZFvZQZT3TOcjGNhguFVQfJwoWBU+a5yM+VIjPgDZFlVqlDqMb\nTOdSZCR4S4Sh9CKvFArcQZgIxkZOcmma7EtL9a4m606k9ydEZGtuWSq/VtV/rHHM\n/X3VI9+umhZv1OqAVqhwzKQYoEOKibgwwBKcyp/H0laziFVZwiU=\n=a3Eb\n-----END PGP SIGNATURE-----", "payload": "tree d64fc281c8b6483f681d9b2b92e7ff451d796b26\nparent 12f667fac30c5d074a0e5c766222b5a7b6c88246\nauthor Pietro Albini <pietro@pietroalbini.org> 1601466852 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1601466852 +0200\n\nbootstrap: add ./x.py run src/tools/build-manifest\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577", "html_url": "https://github.com/rust-lang/rust/commit/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12f667fac30c5d074a0e5c766222b5a7b6c88246", "url": "https://api.github.com/repos/rust-lang/rust/commits/12f667fac30c5d074a0e5c766222b5a7b6c88246", "html_url": "https://github.com/rust-lang/rust/commit/12f667fac30c5d074a0e5c766222b5a7b6c88246"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "3de5797180cf273c91645ba0566b59edfbc17bd7", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=e05e2f9a94f4fa43f9a77bb59184eeb46fd49577", "patch": "@@ -477,7 +477,7 @@ impl<'a> Builder<'a> {\n                 install::Src,\n                 install::Rustc\n             ),\n-            Kind::Run => describe!(run::ExpandYamlAnchors,),\n+            Kind::Run => describe!(run::ExpandYamlAnchors, run::BuildManifest,),\n         }\n     }\n "}, {"sha": "8cdd293239ec3df083a83f148bca596b01922776", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=e05e2f9a94f4fa43f9a77bb59184eeb46fd49577", "patch": "@@ -46,7 +46,7 @@ pub fn pkgname(builder: &Builder<'_>, component: &str) -> String {\n     }\n }\n \n-fn distdir(builder: &Builder<'_>) -> PathBuf {\n+pub(crate) fn distdir(builder: &Builder<'_>) -> PathBuf {\n     builder.out.join(\"dist\")\n }\n "}, {"sha": "80c093e713eff8619d427c5ec2872b5a6b0c9e27", "filename": "src/bootstrap/run.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577/src%2Fbootstrap%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e05e2f9a94f4fa43f9a77bb59184eeb46fd49577/src%2Fbootstrap%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frun.rs?ref=e05e2f9a94f4fa43f9a77bb59184eeb46fd49577", "patch": "@@ -1,5 +1,7 @@\n use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n+use crate::dist::distdir;\n use crate::tool::Tool;\n+use build_helper::output;\n use std::process::Command;\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n@@ -41,3 +43,43 @@ fn try_run(builder: &Builder<'_>, cmd: &mut Command) -> bool {\n     }\n     true\n }\n+\n+#[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct BuildManifest;\n+\n+impl Step for BuildManifest {\n+    type Output = ();\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        run.path(\"src/tools/build-manifest\")\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(BuildManifest);\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) {\n+        // This gets called by `promote-release`\n+        // (https://github.com/rust-lang/promote-release).\n+        let mut cmd = builder.tool_cmd(Tool::BuildManifest);\n+        let sign = builder.config.dist_sign_folder.as_ref().unwrap_or_else(|| {\n+            panic!(\"\\n\\nfailed to specify `dist.sign-folder` in `config.toml`\\n\\n\")\n+        });\n+        let addr = builder.config.dist_upload_addr.as_ref().unwrap_or_else(|| {\n+            panic!(\"\\n\\nfailed to specify `dist.upload-addr` in `config.toml`\\n\\n\")\n+        });\n+\n+        let today = output(Command::new(\"date\").arg(\"+%Y-%m-%d\"));\n+\n+        cmd.arg(sign);\n+        cmd.arg(distdir(builder));\n+        cmd.arg(today.trim());\n+        cmd.arg(addr);\n+        cmd.arg(&builder.config.channel);\n+        cmd.arg(&builder.src);\n+\n+        builder.create_dir(&distdir(builder));\n+        builder.run(&mut cmd);\n+    }\n+}"}]}