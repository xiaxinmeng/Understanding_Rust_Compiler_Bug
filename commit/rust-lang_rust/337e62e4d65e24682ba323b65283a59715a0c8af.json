{"sha": "337e62e4d65e24682ba323b65283a59715a0c8af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzN2U2MmU0ZDY1ZTI0NjgyYmEzMjNiNjUyODNhNTk3MTVhMGM4YWY=", "commit": {"author": {"name": "Yuri Kunde Schlesner", "email": "yuriks@yuriks.net", "date": "2014-02-06T21:14:42Z"}, "committer": {"name": "Derek Guenther", "email": "dguenther9@gmail.com", "date": "2014-02-09T05:40:17Z"}, "message": "Allow codepoints 128-255 in fourc!!\n\nCodepoints with those values will be interpreted as bytes with their\nraw codepoint value. ('\\xAB' -> 0xABu8, etc.) Codepoints > 255 remain\nforbidden.", "tree": {"sha": "f16040fc72557ccedbd0d4c7a6655b6ce28d3a0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f16040fc72557ccedbd0d4c7a6655b6ce28d3a0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/337e62e4d65e24682ba323b65283a59715a0c8af", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/337e62e4d65e24682ba323b65283a59715a0c8af", "html_url": "https://github.com/rust-lang/rust/commit/337e62e4d65e24682ba323b65283a59715a0c8af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/337e62e4d65e24682ba323b65283a59715a0c8af/comments", "author": {"login": "yuriks", "id": 341401, "node_id": "MDQ6VXNlcjM0MTQwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/341401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuriks", "html_url": "https://github.com/yuriks", "followers_url": "https://api.github.com/users/yuriks/followers", "following_url": "https://api.github.com/users/yuriks/following{/other_user}", "gists_url": "https://api.github.com/users/yuriks/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuriks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuriks/subscriptions", "organizations_url": "https://api.github.com/users/yuriks/orgs", "repos_url": "https://api.github.com/users/yuriks/repos", "events_url": "https://api.github.com/users/yuriks/events{/privacy}", "received_events_url": "https://api.github.com/users/yuriks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dguenther", "id": 767083, "node_id": "MDQ6VXNlcjc2NzA4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/767083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguenther", "html_url": "https://github.com/dguenther", "followers_url": "https://api.github.com/users/dguenther/followers", "following_url": "https://api.github.com/users/dguenther/following{/other_user}", "gists_url": "https://api.github.com/users/dguenther/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguenther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguenther/subscriptions", "organizations_url": "https://api.github.com/users/dguenther/orgs", "repos_url": "https://api.github.com/users/dguenther/repos", "events_url": "https://api.github.com/users/dguenther/events{/privacy}", "received_events_url": "https://api.github.com/users/dguenther/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6381daab773ca97ef6553d4d244cc9a8f49475a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6381daab773ca97ef6553d4d244cc9a8f49475a4", "html_url": "https://github.com/rust-lang/rust/commit/6381daab773ca97ef6553d4d244cc9a8f49475a4"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "ea82d31bbe7306ec601c0078589f53d38213598f", "filename": "src/libfourcc/lib.rs", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/337e62e4d65e24682ba323b65283a59715a0c8af/src%2Flibfourcc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/337e62e4d65e24682ba323b65283a59715a0c8af/src%2Flibfourcc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfourcc%2Flib.rs?ref=337e62e4d65e24682ba323b65283a59715a0c8af", "patch": "@@ -70,8 +70,6 @@ pub fn macro_registrar(register: |Name, SyntaxExtension|) {\n         None));\n }\n \n-use std::ascii::AsciiCast;\n-\n pub fn expand_syntax_ext(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree]) -> base::MacResult {\n     let (expr, endian) = parse_tts(cx, tts);\n \n@@ -93,9 +91,7 @@ pub fn expand_syntax_ext(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree]) ->\n         ast::ExprLit(lit) => match lit.node {\n             // string literal\n             ast::LitStr(ref s, _) => {\n-                if !s.get().is_ascii() {\n-                    cx.span_err(expr.span, \"non-ascii string literal in fourcc!\");\n-                } else if s.get().len() != 4 {\n+                if s.get().char_len() != 4 {\n                     cx.span_err(expr.span, \"string literal with len != 4 in fourcc!\");\n                 }\n                 s\n@@ -112,14 +108,19 @@ pub fn expand_syntax_ext(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree]) ->\n     };\n \n     let mut val = 0u32;\n-    if little {\n-        for byte in s.get().bytes_rev().take(4) {\n-            val = (val << 8) | (byte as u32);\n-        }\n-    } else {\n-        for byte in s.get().bytes().take(4) {\n-            val = (val << 8) | (byte as u32);\n-        }\n+    for codepoint in s.get().chars().take(4) {\n+        let byte = if codepoint as u32 > 0xFF {\n+            cx.span_err(expr.span, \"fourcc! literal character out of range 0-255\");\n+            0u8\n+        } else {\n+            codepoint as u8\n+        };\n+\n+        val = if little {\n+            (val >> 8) | ((byte as u32) << 24)\n+        } else {\n+            (val << 8) | (byte as u32)\n+        };\n     }\n     let e = cx.expr_lit(sp, ast::LitUint(val as u64, ast::TyU32));\n     MRExpr(e)"}, {"sha": "5cc29b9d49fac3b9519b8dccc3c1eac9b6fd5884", "filename": "src/test/compile-fail/syntax-extension-fourcc-non-ascii-str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/337e62e4d65e24682ba323b65283a59715a0c8af/src%2Ftest%2Fcompile-fail%2Fsyntax-extension-fourcc-non-ascii-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/337e62e4d65e24682ba323b65283a59715a0c8af/src%2Ftest%2Fcompile-fail%2Fsyntax-extension-fourcc-non-ascii-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsyntax-extension-fourcc-non-ascii-str.rs?ref=337e62e4d65e24682ba323b65283a59715a0c8af", "patch": "@@ -18,5 +18,5 @@\n extern mod fourcc;\n \n fn main() {\n-    let v = fourcc!(\"foo\u03bb\"); //~ ERROR non-ascii string literal in fourcc!\n+    let v = fourcc!(\"foo\u03bb\"); //~ ERROR fourcc! literal character out of range 0-255\n }"}, {"sha": "f22626fb3a1a21012b2fe7c136ae3aa6501c92c5", "filename": "src/test/run-pass-fulldeps/syntax-extension-fourcc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/337e62e4d65e24682ba323b65283a59715a0c8af/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/337e62e4d65e24682ba323b65283a59715a0c8af/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs?ref=337e62e4d65e24682ba323b65283a59715a0c8af", "patch": "@@ -40,4 +40,6 @@ fn main() {\n     assert_eq!(static_val_le, 0x206f6f66u32);\n     let exp = if cfg!(target_endian = \"big\") { 0x666f6f20u32 } else { 0x206f6f66u32 };\n     assert_eq!(static_val_target, exp);\n+\n+    assert_eq!(fourcc!(\"\\xC0\\xFF\\xEE!\"), 0xC0FFEE21);\n }"}]}