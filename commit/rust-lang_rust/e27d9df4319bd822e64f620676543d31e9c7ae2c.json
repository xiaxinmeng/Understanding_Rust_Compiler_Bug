{"sha": "e27d9df4319bd822e64f620676543d31e9c7ae2c", "node_id": "C_kwDOAAsO6NoAKGUyN2Q5ZGY0MzE5YmQ4MjJlNjRmNjIwNjc2NTQzZDMxZTljN2FlMmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-17T22:54:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-17T22:54:55Z"}, "message": "Auto merge of #93530 - anonion0:pthread_sigmask_fix, r=JohnTitor\n\nfix error handling for pthread_sigmask(3)\n\nErrors from `pthread_sigmask(3)` were handled using `cvt()`, which expects a return value of `-1` on error and uses `errno`.\nHowever, `pthread_sigmask(3)` returns `0` on success and an error number otherwise.\n\nFix it by replacing `cvt()` with `cvt_nz()`.", "tree": {"sha": "a4047a4be0f46c929032000d5a77a61fde0fa7b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4047a4be0f46c929032000d5a77a61fde0fa7b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e27d9df4319bd822e64f620676543d31e9c7ae2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e27d9df4319bd822e64f620676543d31e9c7ae2c", "html_url": "https://github.com/rust-lang/rust/commit/e27d9df4319bd822e64f620676543d31e9c7ae2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e27d9df4319bd822e64f620676543d31e9c7ae2c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec77f252434a532fdb5699ae4f21a3072d211edd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec77f252434a532fdb5699ae4f21a3072d211edd", "html_url": "https://github.com/rust-lang/rust/commit/ec77f252434a532fdb5699ae4f21a3072d211edd"}, {"sha": "e6aafbc70781bd346c6363a166641baa4f224a14", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6aafbc70781bd346c6363a166641baa4f224a14", "html_url": "https://github.com/rust-lang/rust/commit/e6aafbc70781bd346c6363a166641baa4f224a14"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "1956b3692a7ea8f2cc37dfb9c9ff6a99a781c6eb", "filename": "library/std/src/sys/unix/process/process_common/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e27d9df4319bd822e64f620676543d31e9c7ae2c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e27d9df4319bd822e64f620676543d31e9c7ae2c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs?ref=e27d9df4319bd822e64f620676543d31e9c7ae2c", "patch": "@@ -3,7 +3,7 @@ use super::*;\n use crate::ffi::OsStr;\n use crate::mem;\n use crate::ptr;\n-use crate::sys::cvt;\n+use crate::sys::{cvt, cvt_nz};\n \n macro_rules! t {\n     ($e:expr) => {\n@@ -39,7 +39,7 @@ fn test_process_mask() {\n         let mut old_set = mem::MaybeUninit::<libc::sigset_t>::uninit();\n         t!(cvt(sigemptyset(set.as_mut_ptr())));\n         t!(cvt(sigaddset(set.as_mut_ptr(), libc::SIGINT)));\n-        t!(cvt(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), old_set.as_mut_ptr())));\n+        t!(cvt_nz(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), old_set.as_mut_ptr())));\n \n         cmd.stdin(Stdio::MakePipe);\n         cmd.stdout(Stdio::MakePipe);\n@@ -48,7 +48,7 @@ fn test_process_mask() {\n         let stdin_write = pipes.stdin.take().unwrap();\n         let stdout_read = pipes.stdout.take().unwrap();\n \n-        t!(cvt(libc::pthread_sigmask(libc::SIG_SETMASK, old_set.as_ptr(), ptr::null_mut())));\n+        t!(cvt_nz(libc::pthread_sigmask(libc::SIG_SETMASK, old_set.as_ptr(), ptr::null_mut())));\n \n         t!(cvt(libc::kill(cat.id() as libc::pid_t, libc::SIGINT)));\n         // We need to wait until SIGINT is definitely delivered. The"}, {"sha": "d48faaa88fb4f56e91082d73172a97ceed6d8cc7", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e27d9df4319bd822e64f620676543d31e9c7ae2c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e27d9df4319bd822e64f620676543d31e9c7ae2c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=e27d9df4319bd822e64f620676543d31e9c7ae2c", "patch": "@@ -328,6 +328,7 @@ impl Command {\n         #[cfg(not(target_os = \"emscripten\"))]\n         {\n             use crate::mem::MaybeUninit;\n+            use crate::sys::cvt_nz;\n             // Reset signal handling so the child process starts in a\n             // standardized state. libstd ignores SIGPIPE, and signal-handling\n             // libraries often set a mask. Child processes inherit ignored\n@@ -337,7 +338,7 @@ impl Command {\n             // we're about to run.\n             let mut set = MaybeUninit::<libc::sigset_t>::uninit();\n             cvt(sigemptyset(set.as_mut_ptr()))?;\n-            cvt(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), ptr::null_mut()))?;\n+            cvt_nz(libc::pthread_sigmask(libc::SIG_SETMASK, set.as_ptr(), ptr::null_mut()))?;\n \n             #[cfg(target_os = \"android\")] // see issue #88585\n             {"}]}