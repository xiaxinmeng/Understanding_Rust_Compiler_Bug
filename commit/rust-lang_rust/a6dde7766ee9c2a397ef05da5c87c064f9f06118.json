{"sha": "a6dde7766ee9c2a397ef05da5c87c064f9f06118", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZGRlNzc2NmVlOWMyYTM5N2VmMDVkYTVjODdjMDY0ZjlmMDYxMTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-08T20:55:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-08T20:55:19Z"}, "message": "fix bug that causes premature pops from obstack\n\nbasically, the alignment step did not check if it walked off\nthe end of the buffer", "tree": {"sha": "be39a1b2683c9d72c5054e2363caa5f906588e24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be39a1b2683c9d72c5054e2363caa5f906588e24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6dde7766ee9c2a397ef05da5c87c064f9f06118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6dde7766ee9c2a397ef05da5c87c064f9f06118", "html_url": "https://github.com/rust-lang/rust/commit/a6dde7766ee9c2a397ef05da5c87c064f9f06118", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6dde7766ee9c2a397ef05da5c87c064f9f06118/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f8e0ddccfe4d9797b1e2b293788d023d9916e31", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f8e0ddccfe4d9797b1e2b293788d023d9916e31", "html_url": "https://github.com/rust-lang/rust/commit/5f8e0ddccfe4d9797b1e2b293788d023d9916e31"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "ec12c8f4554338b1a3ae5a5bf64aa7b7650d6e4f", "filename": "src/rt/rust_obstack.cpp", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a6dde7766ee9c2a397ef05da5c87c064f9f06118/src%2Frt%2Frust_obstack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a6dde7766ee9c2a397ef05da5c87c064f9f06118/src%2Frt%2Frust_obstack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_obstack.cpp?ref=a6dde7766ee9c2a397ef05da5c87c064f9f06118", "patch": "@@ -18,7 +18,7 @@\n #endif\n \n #undef DPRINT\n-#define DPRINT(fmt, ...)\n+#define DPRINT(fmt, ...) \n \n const size_t DEFAULT_CHUNK_SIZE = 128;\n const size_t MAX_CHUNK_SIZE = (1024*64);\n@@ -38,16 +38,20 @@ struct rust_obstack_alloc {\n \n void *\n rust_obstack_chunk::alloc(size_t len, type_desc *tydesc) {\n-    alen = align_to(alen, DEFAULT_ALIGNMENT);\n+    DPRINT(\"alloc(%lu) alen=%lu size=%lu\\n\", len, alen, size);\n \n-    if (sizeof(rust_obstack_alloc) + len > size - alen) {\n-        DPRINT(\"Not enough space, len=%lu!\\n\", len);\n+    size_t aligned_alen = align_to(alen, DEFAULT_ALIGNMENT);\n+    size_t end_alen = aligned_alen + sizeof(rust_obstack_alloc) + len;\n+    if (end_alen > size) {\n+        DPRINT(\"Not enough space, len=%lu alen=%lu aligned=%lu end=%lu!\\n\",\n+               len, alen, aligned_alen, end_alen);\n         return NULL;    // Not enough space.\n     }\n \n-    rust_obstack_alloc *a = new(data + alen) rust_obstack_alloc(len, tydesc);\n-    alen += sizeof(*a) + len;\n+    rust_obstack_alloc *a =\n+      new(data + aligned_alen) rust_obstack_alloc(len, tydesc);\n     memset(a->data, '\\0', len); // FIXME: For GC.\n+    alen = end_alen;\n     return &a->data;\n }\n \n@@ -63,7 +67,9 @@ rust_obstack_chunk::free(void *ptr) {\n \n void *\n rust_obstack_chunk::mark() {\n-    return data + alen;\n+    uint8_t *m = data + alen;\n+    assert (m >= data && m <= data+size);\n+    return m;\n }\n \n // Allocates the given number of bytes in a new chunk.\n@@ -109,7 +115,9 @@ rust_obstack::free(void *ptr) {\n \n     assert(chunk);\n     while (!chunk->free(ptr)) {\n-        DPRINT(\"deleting chunk at %p\\n\", chunk);\n+        DPRINT(\"deleting chunk at %p (ptr=%p, data=%p-%p)\\n\",\n+               chunk, ptr,\n+               chunk->data, chunk->data + chunk->size);\n         rust_obstack_chunk *prev = chunk->prev;\n         task->free(chunk);\n         chunk = prev;\n@@ -119,7 +127,11 @@ rust_obstack::free(void *ptr) {\n \n void *\n rust_obstack::mark() {\n-    return chunk ? chunk->mark() : NULL;\n+    void *m = chunk ? chunk->mark() : NULL;\n+    DPRINT(\"mark == %p, chunk == %p, data == %p-%p\\n\", m, chunk,\n+           (chunk ? chunk->data : NULL),\n+           (chunk ? chunk->data + chunk->size : NULL));\n+    return m;\n }\n \n "}]}