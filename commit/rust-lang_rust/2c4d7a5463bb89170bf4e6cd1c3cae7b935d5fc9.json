{"sha": "2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9", "node_id": "C_kwDOAAsO6NoAKDJjNGQ3YTU0NjNiYjg5MTcwYmY0ZTZjZDFjM2NhZTdiOTM1ZDVmYzk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-08T19:31:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-08T19:31:17Z"}, "message": "Rollup merge of #96828 - scottmcm:clarify-hasher-write, r=Amanieu\n\nFurther elaborate the lack of guarantees from `Hasher`\n\nI realized that I got too excited in #94598 by adding new methods, and forgot to do the documentation to really answer the core question in #94026.\n\nThis PR just has that doc update.\n\nr? `@Amanieu`", "tree": {"sha": "da2a16274d63e0d4d188e18e1aca933e09e1415c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da2a16274d63e0d4d188e18e1aca933e09e1415c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJieBqFCRBK7hj4Ov3rIwAAuO8IAG+oGCC2Wvw4OP8XYrTTtu7P\nIJfFuO2sQ3AkT7/WzhBh4Ep0k5eaefLr4kGWllAFllhxEotbl5b38E5c8uAgtcji\nzcF+UbMlr1lNmIKJaj0O/kulrYl06+JxpjPAyvIstKZV66L6MMmPLh/8jjIJ1qBo\ncRxJ2ECCyrk+2d9kU2N5zBiFpjTgxqMCxO6BZnEgWP+04cIXUjWGAH9xbO3Bn2B/\nlphDzoB0EXT6SB6Gc83nnlhKOS9JzNUkrmrzhcMokby/O6gWMT+UBH8esb0Wsh73\nyY/vYpvHkRo5jqUmlK/tnjlaBglN8COnV1GB4dH8sxpmQ+IOrJIoxkVq4gqjgiY=\n=VzJ9\n-----END PGP SIGNATURE-----\n", "payload": "tree da2a16274d63e0d4d188e18e1aca933e09e1415c\nparent cdaa5c03c92e172d7777347dc2f55432ac45b4f7\nparent 83f785bff9569ae14d4437e3cf795e1ed88b8195\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1652038277 +0200\ncommitter GitHub <noreply@github.com> 1652038277 +0200\n\nRollup merge of #96828 - scottmcm:clarify-hasher-write, r=Amanieu\n\nFurther elaborate the lack of guarantees from `Hasher`\n\nI realized that I got too excited in #94598 by adding new methods, and forgot to do the documentation to really answer the core question in #94026.\n\nThis PR just has that doc update.\n\nr? `@Amanieu`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9", "html_url": "https://github.com/rust-lang/rust/commit/2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdaa5c03c92e172d7777347dc2f55432ac45b4f7", "html_url": "https://github.com/rust-lang/rust/commit/cdaa5c03c92e172d7777347dc2f55432ac45b4f7"}, {"sha": "83f785bff9569ae14d4437e3cf795e1ed88b8195", "url": "https://api.github.com/repos/rust-lang/rust/commits/83f785bff9569ae14d4437e3cf795e1ed88b8195", "html_url": "https://github.com/rust-lang/rust/commit/83f785bff9569ae14d4437e3cf795e1ed88b8195"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "3d168f62a09f5ff7e2b5e9e566c598343b0f64e6", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=2c4d7a5463bb89170bf4e6cd1c3cae7b935d5fc9", "patch": "@@ -268,10 +268,29 @@ pub use macros::Hash;\n /// instance (with [`write`] and [`write_u8`] etc.). Most of the time, `Hasher`\n /// instances are used in conjunction with the [`Hash`] trait.\n ///\n-/// This trait makes no assumptions about how the various `write_*` methods are\n+/// This trait provides no guarantees about how the various `write_*` methods are\n /// defined and implementations of [`Hash`] should not assume that they work one\n /// way or another. You cannot assume, for example, that a [`write_u32`] call is\n-/// equivalent to four calls of [`write_u8`].\n+/// equivalent to four calls of [`write_u8`].  Nor can you assume that adjacent\n+/// `write` calls are merged, so it's possible, for example, that\n+/// ```\n+/// # fn foo(hasher: &mut impl std::hash::Hasher) {\n+/// hasher.write(&[1, 2]);\n+/// hasher.write(&[3, 4, 5, 6]);\n+/// # }\n+/// ```\n+/// and\n+/// ```\n+/// # fn foo(hasher: &mut impl std::hash::Hasher) {\n+/// hasher.write(&[1, 2, 3, 4]);\n+/// hasher.write(&[5, 6]);\n+/// # }\n+/// ```\n+/// end up producing different hashes.\n+///\n+/// Thus to produce the same hash value, [`Hash`] implementations must ensure\n+/// for equivalent items that exactly the same sequence of calls is made -- the\n+/// same methods with the same parameters in the same order.\n ///\n /// # Examples\n ///"}]}