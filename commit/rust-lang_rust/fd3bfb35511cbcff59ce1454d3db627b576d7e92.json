{"sha": "fd3bfb35511cbcff59ce1454d3db627b576d7e92", "node_id": "C_kwDOAAsO6NoAKGZkM2JmYjM1NTExY2JjZmY1OWNlMTQ1NGQzZGI2MjdiNTc2ZDdlOTI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-18T13:12:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-18T13:12:18Z"}, "message": "Auto merge of #104330 - CastilloDel:ast_lowering, r=cjgillot\n\nRemove allow(rustc::potential_query_instability) from rustc_ast_lowering\n\nRelated to https://github.com/rust-lang/rust/issues/84447.\n\n`@cjgillot` Thanks for helping me!", "tree": {"sha": "0cb0ee3044925996f1aaf0c67d20cb8b79fbbeec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cb0ee3044925996f1aaf0c67d20cb8b79fbbeec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd3bfb35511cbcff59ce1454d3db627b576d7e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3bfb35511cbcff59ce1454d3db627b576d7e92", "html_url": "https://github.com/rust-lang/rust/commit/fd3bfb35511cbcff59ce1454d3db627b576d7e92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd3bfb35511cbcff59ce1454d3db627b576d7e92/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d46c7a3e69966782e163877151c1f0cea8b630a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d46c7a3e69966782e163877151c1f0cea8b630a", "html_url": "https://github.com/rust-lang/rust/commit/9d46c7a3e69966782e163877151c1f0cea8b630a"}, {"sha": "557226348f9b5cc06931faf6c510114e2ccea55b", "url": "https://api.github.com/repos/rust-lang/rust/commits/557226348f9b5cc06931faf6c510114e2ccea55b", "html_url": "https://github.com/rust-lang/rust/commit/557226348f9b5cc06931faf6c510114e2ccea55b"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "db0d8b08a947f9521d7840d448d9c149b218abdc", "filename": "compiler/rustc_ast_lowering/src/asm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd3bfb35511cbcff59ce1454d3db627b576d7e92/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd3bfb35511cbcff59ce1454d3db627b576d7e92/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs?ref=fd3bfb35511cbcff59ce1454d3db627b576d7e92", "patch": "@@ -11,7 +11,7 @@ use super::LoweringContext;\n \n use rustc_ast::ptr::P;\n use rustc_ast::*;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::definitions::DefPathData;\n@@ -71,7 +71,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             .emit();\n         }\n \n-        let mut clobber_abis = FxHashMap::default();\n+        let mut clobber_abis = FxIndexMap::default();\n         if let Some(asm_arch) = asm_arch {\n             for (abi_name, abi_span) in &asm.clobber_abis {\n                 match asm::InlineAsmClobberAbi::parse(asm_arch, &self.tcx.sess.target, *abi_name) {"}, {"sha": "77c5ed6036e702caa2fea4bb6a3f99e7502f9540", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fd3bfb35511cbcff59ce1454d3db627b576d7e92/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd3bfb35511cbcff59ce1454d3db627b576d7e92/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=fd3bfb35511cbcff59ce1454d3db627b576d7e92", "patch": "@@ -6,7 +6,6 @@ use super::{FnDeclKind, LoweringContext, ParamMode};\n use rustc_ast::ptr::P;\n use rustc_ast::visit::AssocCtxt;\n use rustc_ast::*;\n-use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sorted_map::SortedMap;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n@@ -67,7 +66,7 @@ impl<'a, 'hir> ItemLowerer<'a, 'hir> {\n             // HirId handling.\n             bodies: Vec::new(),\n             attrs: SortedMap::default(),\n-            children: FxHashMap::default(),\n+            children: Vec::default(),\n             current_hir_id_owner: hir::CRATE_OWNER_ID,\n             item_local_id_counter: hir::ItemLocalId::new(0),\n             node_id_to_local_id: Default::default(),\n@@ -534,12 +533,12 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 for new_node_id in [id1, id2] {\n                     let new_id = self.local_def_id(new_node_id);\n                     let Some(res) = resolutions.next() else {\n+                        debug_assert!(self.children.iter().find(|(id, _)| id == &new_id).is_none());\n                         // Associate an HirId to both ids even if there is no resolution.\n-                        let _old = self.children.insert(\n+                        self.children.push((\n                             new_id,\n-                            hir::MaybeOwner::NonOwner(hir::HirId::make_owner(new_id)),\n+                            hir::MaybeOwner::NonOwner(hir::HirId::make_owner(new_id))),\n                         );\n-                        debug_assert!(_old.is_none());\n                         continue;\n                     };\n                     let ident = *ident;"}, {"sha": "ecc2578dd2aa93bca7a8823167060e759aec19b5", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fd3bfb35511cbcff59ce1454d3db627b576d7e92/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd3bfb35511cbcff59ce1454d3db627b576d7e92/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=fd3bfb35511cbcff59ce1454d3db627b576d7e92", "patch": "@@ -34,7 +34,6 @@\n #![feature(let_chains)]\n #![feature(never_type)]\n #![recursion_limit = \"256\"]\n-#![allow(rustc::potential_query_instability)]\n #![deny(rustc::untranslatable_diagnostic)]\n #![deny(rustc::diagnostic_outside_of_impl)]\n \n@@ -107,7 +106,7 @@ struct LoweringContext<'a, 'hir> {\n     /// Attributes inside the owner being lowered.\n     attrs: SortedMap<hir::ItemLocalId, &'hir [Attribute]>,\n     /// Collect items that were created by lowering the current owner.\n-    children: FxHashMap<LocalDefId, hir::MaybeOwner<&'hir hir::OwnerInfo<'hir>>>,\n+    children: Vec<(LocalDefId, hir::MaybeOwner<&'hir hir::OwnerInfo<'hir>>)>,\n \n     generator_kind: Option<hir::GeneratorKind>,\n \n@@ -611,8 +610,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         self.impl_trait_defs = current_impl_trait_defs;\n         self.impl_trait_bounds = current_impl_trait_bounds;\n \n-        let _old = self.children.insert(def_id, hir::MaybeOwner::Owner(info));\n-        debug_assert!(_old.is_none())\n+        debug_assert!(self.children.iter().find(|(id, _)| id == &def_id).is_none());\n+        self.children.push((def_id, hir::MaybeOwner::Owner(info)));\n     }\n \n     /// Installs the remapping `remap` in scope while `f` is being executed.\n@@ -719,8 +718,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n                 assert_ne!(local_id, hir::ItemLocalId::new(0));\n                 if let Some(def_id) = self.opt_local_def_id(ast_node_id) {\n-                    // Do not override a `MaybeOwner::Owner` that may already here.\n-                    self.children.entry(def_id).or_insert(hir::MaybeOwner::NonOwner(hir_id));\n+                    self.children.push((def_id, hir::MaybeOwner::NonOwner(hir_id)));\n                     self.local_id_to_def_id.insert(local_id, def_id);\n                 }\n "}]}