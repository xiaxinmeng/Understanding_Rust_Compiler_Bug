{"sha": "93417fa71ee73ddbb2e5c531e79ba39ec45beb5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNDE3ZmE3MWVlNzNkZGJiMmU1YzUzMWU3OWJhMzllYzQ1YmViNWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-04T17:10:33Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-18T20:39:01Z"}, "message": "Add invalid doc comment help message", "tree": {"sha": "fecafe4ca5880cc1b4ee504afd230c664d72d923", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fecafe4ca5880cc1b4ee504afd230c664d72d923"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c", "html_url": "https://github.com/rust-lang/rust/commit/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16eeeac783d2ede28e09f2a433c612dea309fe33", "url": "https://api.github.com/repos/rust-lang/rust/commits/16eeeac783d2ede28e09f2a433c612dea309fe33", "html_url": "https://github.com/rust-lang/rust/commit/16eeeac783d2ede28e09f2a433c612dea309fe33"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "01f81e5e2de17312f56df60d53cbd7e1e7f2657d", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=93417fa71ee73ddbb2e5c531e79ba39ec45beb5c", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use attr::HasAttrs;\n-use feature_gate::{emit_feature_err, EXPLAIN_STMT_ATTR_SYNTAX, Features, get_features, GateIssue};\n+use feature_gate::{feature_err, EXPLAIN_STMT_ATTR_SYNTAX, Features, get_features, GateIssue};\n use {fold, attr};\n use ast;\n use codemap::{Spanned, respan};\n@@ -157,11 +157,15 @@ impl<'a> StripUnconfigured<'a> {\n         // flag the offending attributes\n         for attr in attrs.iter() {\n             if !self.features.map(|features| features.stmt_expr_attributes).unwrap_or(true) {\n-                emit_feature_err(&self.sess,\n-                                 \"stmt_expr_attributes\",\n-                                 attr.span,\n-                                 GateIssue::Language,\n-                                 EXPLAIN_STMT_ATTR_SYNTAX);\n+                let mut err = feature_err(&self.sess,\n+                                          \"stmt_expr_attributes\",\n+                                          attr.span,\n+                                          GateIssue::Language,\n+                                          EXPLAIN_STMT_ATTR_SYNTAX);\n+                if attr.node.is_sugared_doc {\n+                    err.help(\"`///` is for documentation comments. For a plain comment, use `//`.\");\n+                }\n+                err.emit();\n             }\n         }\n     }"}, {"sha": "2e7a706a583f1d15e781d23bc311981574944848", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93417fa71ee73ddbb2e5c531e79ba39ec45beb5c/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=93417fa71ee73ddbb2e5c531e79ba39ec45beb5c", "patch": "@@ -30,7 +30,7 @@ use ast::{self, NodeId, PatKind};\n use attr;\n use codemap::{CodeMap, Spanned};\n use syntax_pos::Span;\n-use errors::Handler;\n+use errors::{DiagnosticBuilder, Handler};\n use visit::{self, FnKind, Visitor};\n use parse::ParseSess;\n use parse::token::InternedString;\n@@ -792,6 +792,11 @@ pub enum GateIssue {\n \n pub fn emit_feature_err(sess: &ParseSess, feature: &str, span: Span, issue: GateIssue,\n                         explain: &str) {\n+    feature_err(sess, feature, span, issue, explain).emit();\n+}\n+\n+pub fn feature_err<'a>(sess: &'a ParseSess, feature: &str, span: Span, issue: GateIssue,\n+                   explain: &str) -> DiagnosticBuilder<'a> {\n     let diag = &sess.span_diagnostic;\n \n     let issue = match issue {\n@@ -812,7 +817,7 @@ pub fn emit_feature_err(sess: &ParseSess, feature: &str, span: Span, issue: Gate\n                           feature));\n     }\n \n-    err.emit();\n+    err\n }\n \n const EXPLAIN_BOX_SYNTAX: &'static str ="}]}