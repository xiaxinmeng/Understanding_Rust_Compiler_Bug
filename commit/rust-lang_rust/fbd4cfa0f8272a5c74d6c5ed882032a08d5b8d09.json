{"sha": "fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "node_id": "C_kwDOAAsO6NoAKGZiZDRjZmEwZjgyNzJhNWM3NGQ2YzVlZDg4MjAzMmEwOGQ1YjhkMDk", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-03-07T17:50:47Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-03-07T17:54:17Z"}, "message": "diagnostics: only talk about `Cargo.toml` if running under Cargo\n\nFixes #94646", "tree": {"sha": "b1dd69ea6f952f3800e54d16b1910726684427bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1dd69ea6f952f3800e54d16b1910726684427bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "html_url": "https://github.com/rust-lang/rust/commit/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d137c3a7bd3b180317044f8ccb9a8b4b3bb07db3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d137c3a7bd3b180317044f8ccb9a8b4b3bb07db3", "html_url": "https://github.com/rust-lang/rust/commit/d137c3a7bd3b180317044f8ccb9a8b4b3bb07db3"}], "stats": {"total": 165, "additions": 132, "deletions": 33}, "files": [{"sha": "39ebd57b4b296decfddd85a1874c3efe8559b399", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -7,6 +7,7 @@ use crate::SuggestionStyle;\n use crate::ToolMetadata;\n use rustc_lint_defs::Applicability;\n use rustc_serialize::json::Json;\n+use rustc_span::edition::LATEST_STABLE_EDITION;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use std::fmt;\n use std::hash::{Hash, Hasher};\n@@ -342,6 +343,18 @@ impl Diagnostic {\n         self\n     }\n \n+    /// Help the user upgrade to the latest edition.\n+    /// This is factored out to make sure it does the right thing with `Cargo.toml`.\n+    pub fn help_use_latest_edition(&mut self) -> &mut Self {\n+        if std::env::var_os(\"CARGO\").is_some() {\n+            self.help(&format!(\"set `edition = \\\"{}\\\"` in `Cargo.toml`\", LATEST_STABLE_EDITION));\n+        } else {\n+            self.help(&format!(\"pass `--edition {}` to `rustc`\", LATEST_STABLE_EDITION));\n+        }\n+        self.note(\"for more on editions, read https://doc.rust-lang.org/edition-guide\");\n+        self\n+    }\n+\n     /// Disallow attaching suggestions this diagnostic.\n     /// Any suggestions attached e.g. with the `span_suggestion_*` methods\n     /// (before and after the call to `disable_suggestions`) will be ignored."}, {"sha": "98b8b2a569edde1bfb6f4f5e1261cb3e2e99087b", "filename": "compiler/rustc_errors/src/diagnostic_builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -409,6 +409,7 @@ impl<'a, G: EmissionGuarantee> DiagnosticBuilder<'a, G> {\n         sp: impl Into<MultiSpan>,\n         msg: &str,\n     ) -> &mut Self);\n+    forward!(pub fn help_use_latest_edition(&mut self,) -> &mut Self);\n     forward!(pub fn set_is_lint(&mut self,) -> &mut Self);\n \n     forward!(pub fn disable_suggestions(&mut self,) -> &mut Self);"}, {"sha": "b993d48c995b4748ec20c05d3a1b148215e8b108", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -20,7 +20,6 @@ use rustc_ast_pretty::pprust;\n use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, ErrorGuaranteed, PResult};\n use rustc_session::lint::builtin::BREAK_WITH_LABEL_AND_LOOP;\n use rustc_session::lint::BuiltinLintDiagnostics;\n-use rustc_span::edition::LATEST_STABLE_EDITION;\n use rustc_span::source_map::{self, Span, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{BytePos, Pos};\n@@ -2712,8 +2711,7 @@ impl<'a> Parser<'a> {\n         let mut async_block_err = |e: &mut Diagnostic, span: Span| {\n             recover_async = true;\n             e.span_label(span, \"`async` blocks are only allowed in Rust 2018 or later\");\n-            e.help(&format!(\"set `edition = \\\"{}\\\"` in `Cargo.toml`\", LATEST_STABLE_EDITION));\n-            e.note(\"for more on editions, read https://doc.rust-lang.org/edition-guide\");\n+            e.help_use_latest_edition();\n         };\n \n         while self.token != token::CloseDelim(close_delim) {"}, {"sha": "06460c7b1b31ddcc8e21ec89ff01fe4bdbfb2c00", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -14,7 +14,7 @@ use rustc_ast::{FnHeader, ForeignItem, Path, PathSegment, Visibility, Visibility\n use rustc_ast::{MacArgs, MacCall, MacDelimiter};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, PResult, StashKey};\n-use rustc_span::edition::{Edition, LATEST_STABLE_EDITION};\n+use rustc_span::edition::Edition;\n use rustc_span::lev_distance::lev_distance;\n use rustc_span::source_map::{self, Span};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n@@ -2102,8 +2102,7 @@ impl<'a> Parser<'a> {\n             let diag = self.diagnostic();\n             struct_span_err!(diag, span, E0670, \"`async fn` is not permitted in Rust 2015\")\n                 .span_label(span, \"to use `async fn`, switch to Rust 2018 or later\")\n-                .help(&format!(\"set `edition = \\\"{}\\\"` in `Cargo.toml`\", LATEST_STABLE_EDITION))\n-                .note(\"for more on editions, read https://doc.rust-lang.org/edition-guide\")\n+                .help_use_latest_edition()\n                 .emit();\n         }\n     }"}, {"sha": "7e7104f62fdc67588d58a2b91cf844d982422644", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -43,7 +43,6 @@ use rustc_middle::ty::error::TypeError::{FieldMisMatch, Sorts};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, AdtKind, Ty, TypeFoldable};\n use rustc_session::parse::feature_err;\n-use rustc_span::edition::LATEST_STABLE_EDITION;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::lev_distance::find_best_match_for_name;\n use rustc_span::source_map::Span;\n@@ -2010,8 +2009,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // We know by construction that `<expr>.await` is either on Rust 2015\n             // or results in `ExprKind::Await`. Suggest switching the edition to 2018.\n             err.note(\"to `.await` a `Future`, switch to Rust 2018 or later\");\n-            err.help(&format!(\"set `edition = \\\"{}\\\"` in `Cargo.toml`\", LATEST_STABLE_EDITION));\n-            err.note(\"for more on editions, read https://doc.rust-lang.org/edition-guide\");\n+            err.help_use_latest_edition();\n         }\n \n         err.emit();"}, {"sha": "35f9c581c7b21b254a4add1f516668fa17c24229", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -4,7 +4,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL | async fn foo() {}\n    | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -13,7 +13,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL | fn baz() { async fn foo() {} }\n    |            ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -22,7 +22,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL | async fn async_baz() {\n    | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -31,7 +31,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL |     async fn bar() {}\n    |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -40,7 +40,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL |     async fn foo() {}\n    |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -49,7 +49,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL |     async fn foo() {}\n    |     ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -58,7 +58,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL |         async fn bar() {}\n    |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -67,7 +67,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL |         async fn foo() {}\n    |         ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0670]: `async fn` is not permitted in Rust 2015\n@@ -76,7 +76,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL |             async fn bar() {}\n    |             ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0706]: functions in traits cannot be declared `async`"}, {"sha": "4919e0a051dcb411b601429bedc6be8b87a951a5", "filename": "src/test/ui/async-await/suggest-switching-edition-on-await-cargo.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await-cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await-cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await-cargo.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -0,0 +1,47 @@\n+// rustc-env:CARGO=/usr/bin/cargo\n+\n+use std::pin::Pin;\n+use std::future::Future;\n+\n+fn main() {}\n+\n+fn await_on_struct_missing() {\n+    struct S;\n+    let x = S;\n+    x.await;\n+    //~^ ERROR no field `await` on type\n+    //~| NOTE unknown field\n+    //~| NOTE to `.await` a `Future`, switch to Rust 2018\n+    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n+}\n+\n+fn await_on_struct_similar() {\n+    struct S {\n+        awai: u8,\n+    }\n+    let x = S { awai: 42 };\n+    x.await;\n+    //~^ ERROR no field `await` on type\n+    //~| HELP a field with a similar name exists\n+    //~| NOTE to `.await` a `Future`, switch to Rust 2018\n+    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n+}\n+\n+fn await_on_63533(x: Pin<&mut dyn Future<Output = ()>>) {\n+    x.await;\n+    //~^ ERROR no field `await` on type\n+    //~| NOTE unknown field\n+    //~| NOTE to `.await` a `Future`, switch to Rust 2018\n+    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n+}\n+\n+fn await_on_apit(x: impl Future<Output = ()>) {\n+    x.await;\n+    //~^ ERROR no field `await` on type\n+    //~| NOTE to `.await` a `Future`, switch to Rust 2018\n+    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n+}"}, {"sha": "409eb179e83a05f7263f9acef4bf951532bf0448", "filename": "src/test/ui/async-await/suggest-switching-edition-on-await-cargo.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await-cargo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await-cargo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await-cargo.stderr?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -0,0 +1,43 @@\n+error[E0609]: no field `await` on type `await_on_struct_missing::S`\n+  --> $DIR/suggest-switching-edition-on-await-cargo.rs:11:7\n+   |\n+LL |     x.await;\n+   |       ^^^^^ unknown field\n+   |\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n+   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0609]: no field `await` on type `await_on_struct_similar::S`\n+  --> $DIR/suggest-switching-edition-on-await-cargo.rs:24:7\n+   |\n+LL |     x.await;\n+   |       ^^^^^ help: a field with a similar name exists: `awai`\n+   |\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n+   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0609]: no field `await` on type `Pin<&mut dyn Future<Output = ()>>`\n+  --> $DIR/suggest-switching-edition-on-await-cargo.rs:33:7\n+   |\n+LL |     x.await;\n+   |       ^^^^^ unknown field\n+   |\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n+   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error[E0609]: no field `await` on type `impl Future<Output = ()>`\n+  --> $DIR/suggest-switching-edition-on-await-cargo.rs:42:7\n+   |\n+LL |     x.await;\n+   |       ^^^^^\n+   |\n+   = note: to `.await` a `Future`, switch to Rust 2018 or later\n+   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0609`."}, {"sha": "9852e8fc918fe61e2647c48e25a747444c73bd35", "filename": "src/test/ui/async-await/suggest-switching-edition-on-await.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -10,7 +10,7 @@ fn await_on_struct_missing() {\n     //~^ ERROR no field `await` on type\n     //~| NOTE unknown field\n     //~| NOTE to `.await` a `Future`, switch to Rust 2018\n-    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| HELP pass `--edition 2021` to `rustc`\n     //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n }\n \n@@ -23,7 +23,7 @@ fn await_on_struct_similar() {\n     //~^ ERROR no field `await` on type\n     //~| HELP a field with a similar name exists\n     //~| NOTE to `.await` a `Future`, switch to Rust 2018\n-    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| HELP pass `--edition 2021` to `rustc`\n     //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n }\n \n@@ -32,14 +32,14 @@ fn await_on_63533(x: Pin<&mut dyn Future<Output = ()>>) {\n     //~^ ERROR no field `await` on type\n     //~| NOTE unknown field\n     //~| NOTE to `.await` a `Future`, switch to Rust 2018\n-    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| HELP pass `--edition 2021` to `rustc`\n     //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n }\n \n fn await_on_apit(x: impl Future<Output = ()>) {\n     x.await;\n     //~^ ERROR no field `await` on type\n     //~| NOTE to `.await` a `Future`, switch to Rust 2018\n-    //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+    //~| HELP pass `--edition 2021` to `rustc`\n     //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n }"}, {"sha": "ef3334381b71524e051480a56a2a212c854caa81", "filename": "src/test/ui/async-await/suggest-switching-edition-on-await.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-switching-edition-on-await.stderr?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -5,7 +5,7 @@ LL |     x.await;\n    |       ^^^^^ unknown field\n    |\n    = note: to `.await` a `Future`, switch to Rust 2018 or later\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0609]: no field `await` on type `await_on_struct_similar::S`\n@@ -15,7 +15,7 @@ LL |     x.await;\n    |       ^^^^^ help: a field with a similar name exists: `awai`\n    |\n    = note: to `.await` a `Future`, switch to Rust 2018 or later\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0609]: no field `await` on type `Pin<&mut dyn Future<Output = ()>>`\n@@ -25,7 +25,7 @@ LL |     x.await;\n    |       ^^^^^ unknown field\n    |\n    = note: to `.await` a `Future`, switch to Rust 2018 or later\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0609]: no field `await` on type `impl Future<Output = ()>`\n@@ -35,7 +35,7 @@ LL |     x.await;\n    |       ^^^^^\n    |\n    = note: to `.await` a `Future`, switch to Rust 2018 or later\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error: aborting due to 4 previous errors"}, {"sha": "3daf4930c5b4b349f981f98c9f6c815318897d44", "filename": "src/test/ui/editions/async-block-2015.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.rs?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -1,7 +1,7 @@\n async fn foo() {\n //~^ ERROR `async fn` is not permitted in Rust 2015\n //~| NOTE to use `async fn`, switch to Rust 2018 or later\n-//~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+//~| HELP pass `--edition 2021` to `rustc`\n //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n \n     let x = async {};\n@@ -11,15 +11,15 @@ async fn foo() {\n         let x = 42;\n         //~^ ERROR expected identifier, found keyword `let`\n         //~| NOTE expected identifier, found keyword\n-        //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+        //~| HELP pass `--edition 2021` to `rustc`\n         //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n         42\n     };\n     let z = async { //~ NOTE `async` blocks are only allowed in Rust 2018 or later\n         42\n         //~^ ERROR expected identifier, found `42`\n         //~| NOTE expected identifier\n-        //~| HELP set `edition = \"2021\"` in `Cargo.toml`\n+        //~| HELP pass `--edition 2021` to `rustc`\n         //~| NOTE for more on editions, read https://doc.rust-lang.org/edition-guide\n     };\n     y.await;"}, {"sha": "b792b8c1e0dd84834e9b3353c851786df87a4022", "filename": "src/test/ui/editions/async-block-2015.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fasync-block-2015.stderr?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -4,7 +4,7 @@ error[E0670]: `async fn` is not permitted in Rust 2015\n LL | async fn foo() {\n    | ^^^^^ to use `async fn`, switch to Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error: expected identifier, found keyword `let`\n@@ -15,7 +15,7 @@ LL |     let y = async {\n LL |         let x = 42;\n    |         ^^^ expected identifier, found keyword\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error: expected identifier, found `42`\n@@ -26,7 +26,7 @@ LL |     let z = async {\n LL |         42\n    |         ^^ expected identifier\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0422]: cannot find struct, variant or union type `async` in this scope"}, {"sha": "362c67dafd2c5e88c7d050ba45e0bdbcbdcfb7d3", "filename": "src/test/ui/impl-trait/issues/issue-79099.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-79099.stderr?ref=fbd4cfa0f8272a5c74d6c5ed882032a08d5b8d09", "patch": "@@ -6,7 +6,7 @@ LL |         let f: impl core::future::Future<Output = u8> = async { 1 };\n    |                                                         |\n    |                                                         `async` blocks are only allowed in Rust 2018 or later\n    |\n-   = help: set `edition = \"2021\"` in `Cargo.toml`\n+   = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n error[E0562]: `impl Trait` only allowed in function and inherent method return types, not in variable binding"}]}