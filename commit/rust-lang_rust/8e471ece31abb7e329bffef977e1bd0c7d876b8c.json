{"sha": "8e471ece31abb7e329bffef977e1bd0c7d876b8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNDcxZWNlMzFhYmI3ZTMyOWJmZmVmOTc3ZTFiZDBjN2Q4NzZiOGM=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-09-09T21:14:09Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-09-10T22:53:01Z"}, "message": "Add some tests for match blocks", "tree": {"sha": "c6437373230c2e9aa53e3610b9a41bd8045662b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6437373230c2e9aa53e3610b9a41bd8045662b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e471ece31abb7e329bffef977e1bd0c7d876b8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e471ece31abb7e329bffef977e1bd0c7d876b8c", "html_url": "https://github.com/rust-lang/rust/commit/8e471ece31abb7e329bffef977e1bd0c7d876b8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e471ece31abb7e329bffef977e1bd0c7d876b8c/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abe8e7de990b88e2b3d7349bc1fc240b4eb49bad", "url": "https://api.github.com/repos/rust-lang/rust/commits/abe8e7de990b88e2b3d7349bc1fc240b4eb49bad", "html_url": "https://github.com/rust-lang/rust/commit/abe8e7de990b88e2b3d7349bc1fc240b4eb49bad"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "4eaf0f5acb5370d29566fb832ae43b08cb680359", "filename": "src/chains.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e471ece31abb7e329bffef977e1bd0c7d876b8c/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e471ece31abb7e329bffef977e1bd0c7d876b8c/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=8e471ece31abb7e329bffef977e1bd0c7d876b8c", "patch": "@@ -8,6 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// Formatting of chained expressions, i.e. expressions which are chained by\n+// dots: struct and enum field access and method calls.\n+//\n+// Instead of walking these subexpressions one-by-one, as is our usual strategy\n+// for expression formatting, we collect maximal sequences of these expressions\n+// and handle them simultaneously.\n+//\n+// Whenever possible, the entire chain is put on a single line. If that fails,\n+// we put each subexpression on a separate, much like the (default) function\n+// argument function argument strategy.\n+\n use rewrite::{Rewrite, RewriteContext};\n use utils::{make_indent, extra_offset};\n use expr::rewrite_call;"}, {"sha": "d0eeba9a7c1e5d77d03297ca099edff339f39736", "filename": "src/comment.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8e471ece31abb7e329bffef977e1bd0c7d876b8c/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e471ece31abb7e329bffef977e1bd0c7d876b8c/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=8e471ece31abb7e329bffef977e1bd0c7d876b8c", "patch": "@@ -150,17 +150,6 @@ pub fn contains_comment(text: &str) -> bool {\n     CharClasses::new(text.chars()).any(|(kind, _)| kind == CodeCharKind::Comment)\n }\n \n-pub fn uncommented(text: &str) -> String {\n-    CharClasses::new(text.chars())\n-        .filter_map(|(s, c)| {\n-            match s {\n-                CodeCharKind::Normal => Some(c),\n-                CodeCharKind::Comment => None,\n-            }\n-        })\n-        .collect()\n-}\n-\n struct CharClasses<T>\n     where T: Iterator,\n           T::Item: RichChar\n@@ -321,10 +310,14 @@ mod test {\n     // This is probably intended to be a non-test fn, but it is not used. I'm\n     // keeping it around unless it helps us test stuff.\n     fn uncommented(text: &str) -> String {\n-        CharClasses::new(text.chars()).filter_map(|(s, c)| match s {\n-            CodeCharKind::Normal => Some(c),\n-            CodeCharKind::Comment => None\n-        }).collect()\n+        CharClasses::new(text.chars())\n+            .filter_map(|(s, c)| {\n+                match s {\n+                    CodeCharKind::Normal => Some(c),\n+                    CodeCharKind::Comment => None,\n+                }\n+            })\n+            .collect()\n     }\n \n     #[test]"}, {"sha": "8282c3baa6b04e4e732a1a6e0ec3948fa84521c1", "filename": "tests/source/chains.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8e471ece31abb7e329bffef977e1bd0c7d876b8c/tests%2Fsource%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e471ece31abb7e329bffef977e1bd0c7d876b8c/tests%2Fsource%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains.rs?ref=8e471ece31abb7e329bffef977e1bd0c7d876b8c", "patch": "@@ -21,6 +21,15 @@ fn main() {\n             2\n         });\n \n+    fffffffffffffffffffffffffffffffffff(a,\n+                                        {\n+                                            SCRIPT_TASK_ROOT\n+                                            .with(|root| {\n+                                                                // Another case of write_list failing us.\n+                                                *root.borrow_mut()  =   Some(&script_task);\n+                                            });\n+                                        });                                        \n+\n     let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum = xxxxxxx\n         .map(|x| x + 5)\n         .map(|x| x / 2)"}, {"sha": "daa60d0985598ffa8eed3691c1a75fa88f39b4ab", "filename": "tests/target/chains.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8e471ece31abb7e329bffef977e1bd0c7d876b8c/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e471ece31abb7e329bffef977e1bd0c7d876b8c/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=8e471ece31abb7e329bffef977e1bd0c7d876b8c", "patch": "@@ -25,6 +25,14 @@ fn main() {\n             }\n         });\n \n+    fffffffffffffffffffffffffffffffffff(a,\n+                                        {\n+                                            SCRIPT_TASK_ROOT.with(|root| {\n+                                                                // Another case of write_list failing us.\n+                                                                *root.borrow_mut() = Some(&script_task);\n+                                                            });\n+                                        });\n+\n     let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum = xxxxxxx.map(|x| x + 5)\n                                                                        .map(|x| x / 2)\n                                                                        .fold(0, |acc, x| acc + x);"}]}