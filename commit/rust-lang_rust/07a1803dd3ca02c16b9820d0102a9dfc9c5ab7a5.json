{"sha": "07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YTE4MDNkZDNjYTAyYzE2Yjk4MjBkMDEwMmE5ZGZjOWM1YWI3YTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-05T16:58:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-05T16:58:20Z"}, "message": "Auto merge of #31700 - oli-obk:skip_double_ended, r=alexcrichton\n\n[Playground Example](https://play.rust-lang.org/?gist=66fdb4fe1cf4d8aa2ad4&version=stable)", "tree": {"sha": "71e4619d1445498e4c10d04fcfbb23d5b4d8e5d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71e4619d1445498e4c10d04fcfbb23d5b4d8e5d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5", "html_url": "https://github.com/rust-lang/rust/commit/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da0ccd8cc98b5a4f2edcaf1e4f67738f720bc86b", "url": "https://api.github.com/repos/rust-lang/rust/commits/da0ccd8cc98b5a4f2edcaf1e4f67738f720bc86b", "html_url": "https://github.com/rust-lang/rust/commit/da0ccd8cc98b5a4f2edcaf1e4f67738f720bc86b"}, {"sha": "25e5de3f7ea6f81599b567c3a14e762e4e90cd7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/25e5de3f7ea6f81599b567c3a14e762e4e90cd7a", "html_url": "https://github.com/rust-lang/rust/commit/25e5de3f7ea6f81599b567c3a14e762e4e90cd7a"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "37fe4d39db86f8df86aa7c65c8ca0fea58014020", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5", "patch": "@@ -3851,6 +3851,17 @@ impl<I> Iterator for Skip<I> where I: Iterator {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<I> ExactSizeIterator for Skip<I> where I: ExactSizeIterator {}\n \n+#[stable(feature = \"double_ended_skip_iterator\", since = \"1.8.0\")]\n+impl<I> DoubleEndedIterator for Skip<I> where I: DoubleEndedIterator + ExactSizeIterator {\n+    fn next_back(&mut self) -> Option<Self::Item> {\n+        if self.len() > 0 {\n+            self.iter.next_back()\n+        } else {\n+            None\n+        }\n+    }\n+}\n+\n /// An iterator that only iterates over the first `n` iterations of `iter`.\n ///\n /// This `struct` is created by the [`take()`] method on [`Iterator`]. See its"}, {"sha": "acdced64928161b9fb9ee043ce52198f6c799e8d", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=07a1803dd3ca02c16b9820d0102a9dfc9c5ab7a5", "patch": "@@ -303,6 +303,44 @@ fn test_iterator_skip() {\n     assert_eq!(it.len(), 0);\n }\n \n+#[test]\n+fn test_iterator_skip_doubleended() {\n+    let xs = [0, 1, 2, 3, 5, 13, 15, 16, 17, 19, 20, 30];\n+    let mut it = xs.iter().rev().skip(5);\n+    assert_eq!(it.next(), Some(&15));\n+    assert_eq!(it.by_ref().rev().next(), Some(&0));\n+    assert_eq!(it.next(), Some(&13));\n+    assert_eq!(it.by_ref().rev().next(), Some(&1));\n+    assert_eq!(it.next(), Some(&5));\n+    assert_eq!(it.by_ref().rev().next(), Some(&2));\n+    assert_eq!(it.next(), Some(&3));\n+    assert_eq!(it.next(), None);\n+    let mut it = xs.iter().rev().skip(5).rev();\n+    assert_eq!(it.next(), Some(&0));\n+    assert_eq!(it.rev().next(), Some(&15));\n+    let mut it_base = xs.iter();\n+    {\n+        let mut it = it_base.by_ref().skip(5).rev();\n+        assert_eq!(it.next(), Some(&30));\n+        assert_eq!(it.next(), Some(&20));\n+        assert_eq!(it.next(), Some(&19));\n+        assert_eq!(it.next(), Some(&17));\n+        assert_eq!(it.next(), Some(&16));\n+        assert_eq!(it.next(), Some(&15));\n+        assert_eq!(it.next(), Some(&13));\n+        assert_eq!(it.next(), None);\n+    }\n+    // make sure the skipped parts have not been consumed\n+    assert_eq!(it_base.next(), Some(&0));\n+    assert_eq!(it_base.next(), Some(&1));\n+    assert_eq!(it_base.next(), Some(&2));\n+    assert_eq!(it_base.next(), Some(&3));\n+    assert_eq!(it_base.next(), Some(&5));\n+    assert_eq!(it_base.next(), None);\n+    let it = xs.iter().skip(5).rev();\n+    assert_eq!(it.last(), Some(&13));\n+}\n+\n #[test]\n fn test_iterator_skip_nth() {\n     let xs = [0, 1, 2, 3, 5, 13, 15, 16, 17, 19, 20, 30];"}]}