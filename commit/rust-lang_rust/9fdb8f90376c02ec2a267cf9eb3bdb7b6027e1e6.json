{"sha": "9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZGI4ZjkwMzc2YzAyZWMyYTI2N2NmOWViM2JkYjdiNjAyN2UxZTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-03T14:11:20Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-03T16:09:21Z"}, "message": "Make it opt-in", "tree": {"sha": "b816f97fd66df5bb827d7e2456b6a492a7199d34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b816f97fd66df5bb827d7e2456b6a492a7199d34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "html_url": "https://github.com/rust-lang/rust/commit/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5a2c6596ddd11b0d57042224ac7c1d7691ec33b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5a2c6596ddd11b0d57042224ac7c1d7691ec33b", "html_url": "https://github.com/rust-lang/rust/commit/e5a2c6596ddd11b0d57042224ac7c1d7691ec33b"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "c977971cd484d1ec687e813f5d8c4809b1983b18", "filename": "crates/hir_def/src/db.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fhir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fhir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdb.rs?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -51,6 +51,9 @@ pub trait InternDatabase: SourceDatabase {\n \n #[salsa::query_group(DefDatabaseStorage)]\n pub trait DefDatabase: InternDatabase + AstDatabase + Upcast<dyn AstDatabase> {\n+    #[salsa::input]\n+    fn enable_proc_attr_macros(&self) -> bool;\n+\n     #[salsa::invoke(ItemTree::file_item_tree_query)]\n     fn file_item_tree(&self, file_id: HirFileId) -> Arc<ItemTree>;\n "}, {"sha": "b2ce739bdbe14e9607c869592cc3e3a1cc7ad1a0", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -1067,6 +1067,10 @@ impl DefCollector<'_> {\n                         }\n                     }\n \n+                    if !self.db.enable_proc_attr_macros() {\n+                        return true;\n+                    }\n+\n                     // Not resolved to a derive helper, so try to resolve as a macro.\n                     match attr_macro_as_call_id(\n                         ast_id,"}, {"sha": "b20b066e24a1320fc4138dd4f45ab03c501f56d9", "filename": "crates/hir_def/src/test_db.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftest_db.rs?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -30,12 +30,19 @@ use crate::{\n     crate::db::InternDatabaseStorage,\n     crate::db::DefDatabaseStorage\n )]\n-#[derive(Default)]\n pub(crate) struct TestDB {\n     storage: salsa::Storage<TestDB>,\n     events: Mutex<Option<Vec<salsa::Event>>>,\n }\n \n+impl Default for TestDB {\n+    fn default() -> Self {\n+        let mut this = Self { storage: Default::default(), events: Default::default() };\n+        this.set_enable_proc_attr_macros(true);\n+        this\n+    }\n+}\n+\n impl Upcast<dyn AstDatabase> for TestDB {\n     fn upcast(&self) -> &(dyn AstDatabase + 'static) {\n         &*self"}, {"sha": "105607dca475272ad39b9a3d89c33ff2cfa8f480", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -93,6 +93,7 @@ impl RootDatabase {\n         db.set_crate_graph_with_durability(Default::default(), Durability::HIGH);\n         db.set_local_roots_with_durability(Default::default(), Durability::HIGH);\n         db.set_library_roots_with_durability(Default::default(), Durability::HIGH);\n+        db.set_enable_proc_attr_macros(Default::default());\n         db.update_lru_capacity(lru_capacity);\n         db\n     }"}, {"sha": "d1f3c1b06f55c687b92e6b6af47893231affeb04", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -126,6 +126,9 @@ config_data! {\n         /// and a blue icon in the `Problems Panel`.\n         diagnostics_warningsAsInfo: Vec<String> = \"[]\",\n \n+        /// Expand attribute macros.\n+        experimental_procAttrMacros: bool = \"false\",\n+\n         /// Controls file watching implementation.\n         files_watcher: String = \"\\\"client\\\"\",\n         /// These directories will be ignored by rust-analyzer.\n@@ -546,6 +549,9 @@ impl Config {\n         let path = self.data.procMacro_server.clone().or_else(|| std::env::current_exe().ok())?;\n         Some((path, vec![\"proc-macro\".into()]))\n     }\n+    pub fn expand_proc_attr_macros(&self) -> bool {\n+        self.data.experimental_procAttrMacros\n+    }\n     pub fn files(&self) -> FilesConfig {\n         FilesConfig {\n             watcher: match self.data.files_watcher.as_str() {"}, {"sha": "582a89667761e4fb606e4d022ddb13dc5636647d", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -119,12 +119,12 @@ impl GlobalState {\n \n         let analysis_host = AnalysisHost::new(config.lru_capacity());\n         let (flycheck_sender, flycheck_receiver) = unbounded();\n-        GlobalState {\n+        let mut this = GlobalState {\n             sender,\n             req_queue: ReqQueue::default(),\n             task_pool,\n             loader,\n-            config: Arc::new(config),\n+            config: Arc::new(config.clone()),\n             analysis_host,\n             diagnostics: Default::default(),\n             mem_docs: FxHashMap::default(),\n@@ -151,7 +151,10 @@ impl GlobalState {\n \n             fetch_build_data_queue: OpQueue::default(),\n             latest_requests: Default::default(),\n-        }\n+        };\n+        // Apply any required database inputs from the config.\n+        this.update_configuration(config);\n+        this\n     }\n \n     pub(crate) fn process_changes(&mut self) -> bool {"}, {"sha": "bd31d1d13dc067995ad3d4f52e4d85f117b9824b", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -2,6 +2,7 @@\n use std::{mem, sync::Arc};\n \n use flycheck::{FlycheckConfig, FlycheckHandle};\n+use hir::db::DefDatabase;\n use ide::Change;\n use ide_db::base_db::{CrateGraph, SourceRoot, VfsPath};\n use project_model::{BuildDataCollector, BuildDataResult, ProcMacroClient, ProjectWorkspace};\n@@ -47,6 +48,11 @@ impl GlobalState {\n         } else if self.config.flycheck() != old_config.flycheck() {\n             self.reload_flycheck();\n         }\n+\n+        // Apply experimental feature flags.\n+        self.analysis_host\n+            .raw_database_mut()\n+            .set_enable_proc_attr_macros(self.config.expand_proc_attr_macros());\n     }\n     pub(crate) fn maybe_refresh(&mut self, changes: &[(AbsPathBuf, ChangeKind)]) {\n         if !changes.iter().any(|(path, kind)| is_interesting(path, *kind)) {"}, {"sha": "4eec8455df2319586a4db2e11247511e9c1c0a3b", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -181,6 +181,11 @@ List of warnings that should be displayed with info severity.\n The warnings will be indicated by a blue squiggly underline in code\n and a blue icon in the `Problems Panel`.\n --\n+[[rust-analyzer.experimental.procAttrMacros]]rust-analyzer.experimental.procAttrMacros (default: `false`)::\n++\n+--\n+Expand attribute macros.\n+--\n [[rust-analyzer.files.watcher]]rust-analyzer.files.watcher (default: `\"client\"`)::\n +\n --"}, {"sha": "bffc1e05b73e7633e179f8f562ba5c8825293854", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=9fdb8f90376c02ec2a267cf9eb3bdb7b6027e1e6", "patch": "@@ -617,6 +617,11 @@\n                         \"type\": \"string\"\n                     }\n                 },\n+                \"rust-analyzer.experimental.procAttrMacros\": {\n+                    \"markdownDescription\": \"Expand attribute macros.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n                 \"rust-analyzer.files.watcher\": {\n                     \"markdownDescription\": \"Controls file watching implementation.\",\n                     \"default\": \"client\","}]}