{"sha": "33e747d786e588ab61133fe2c0fb6341826e2cea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZTc0N2Q3ODZlNTg4YWI2MTEzM2ZlMmMwZmI2MzQxODI2ZTJjZWE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-07T14:05:36Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-06-07T14:05:36Z"}, "message": "Make \"expand macro\" command work with attribute macros", "tree": {"sha": "d892ce322c13fff532d1c50c5803148b276a4540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d892ce322c13fff532d1c50c5803148b276a4540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33e747d786e588ab61133fe2c0fb6341826e2cea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33e747d786e588ab61133fe2c0fb6341826e2cea", "html_url": "https://github.com/rust-lang/rust/commit/33e747d786e588ab61133fe2c0fb6341826e2cea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33e747d786e588ab61133fe2c0fb6341826e2cea/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d87f9b298f41b8eb1e9fa0481c5092c1c136ef9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d87f9b298f41b8eb1e9fa0481c5092c1c136ef9", "html_url": "https://github.com/rust-lang/rust/commit/8d87f9b298f41b8eb1e9fa0481c5092c1c136ef9"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "920e18208ee89aa81929ee8553f9b98fd3c56eeb", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33e747d786e588ab61133fe2c0fb6341826e2cea/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33e747d786e588ab61133fe2c0fb6341826e2cea/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=33e747d786e588ab61133fe2c0fb6341826e2cea", "patch": "@@ -117,6 +117,12 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n     pub fn expand(&self, macro_call: &ast::MacroCall) -> Option<SyntaxNode> {\n         self.imp.expand(macro_call)\n     }\n+\n+    /// If `item` has an attribute macro attached to it, expands it.\n+    pub fn expand_attr_macro(&self, item: &ast::Item) -> Option<SyntaxNode> {\n+        self.imp.expand_attr_macro(item)\n+    }\n+\n     pub fn speculative_expand(\n         &self,\n         actual_macro_call: &ast::MacroCall,\n@@ -332,6 +338,16 @@ impl<'db> SemanticsImpl<'db> {\n         Some(node)\n     }\n \n+    fn expand_attr_macro(&self, item: &ast::Item) -> Option<SyntaxNode> {\n+        let sa = self.analyze(item.syntax());\n+        let src = InFile::new(sa.file_id, item.clone());\n+        let macro_call_id = self.with_ctx(|ctx| ctx.item_to_macro_call(src))?;\n+        let file_id = macro_call_id.as_file();\n+        let node = self.db.parse_or_expand(file_id)?;\n+        self.cache(node.clone(), file_id);\n+        Some(node)\n+    }\n+\n     fn speculative_expand(\n         &self,\n         actual_macro_call: &ast::MacroCall,"}, {"sha": "3f38e2145edfe025899f30c6eca7661c1538ef84", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/33e747d786e588ab61133fe2c0fb6341826e2cea/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33e747d786e588ab61133fe2c0fb6341826e2cea/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=33e747d786e588ab61133fe2c0fb6341826e2cea", "patch": "@@ -3,8 +3,7 @@ use std::iter;\n use hir::Semantics;\n use ide_db::RootDatabase;\n use syntax::{\n-    algo::find_node_at_offset, ast, ted, AstNode, NodeOrToken, SyntaxKind, SyntaxKind::*,\n-    SyntaxNode, WalkEvent, T,\n+    ast, match_ast, ted, AstNode, NodeOrToken, SyntaxKind, SyntaxKind::*, SyntaxNode, WalkEvent, T,\n };\n \n use crate::FilePosition;\n@@ -28,16 +27,37 @@ pub struct ExpandedMacro {\n pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<ExpandedMacro> {\n     let sema = Semantics::new(db);\n     let file = sema.parse(position.file_id);\n-    let mac = find_node_at_offset::<ast::MacroCall>(file.syntax(), position.offset)?;\n-    let name = mac.path()?.segment()?.name_ref()?;\n \n-    let expanded = expand_macro_recur(&sema, &mac)?;\n+    let tok = file.syntax().token_at_offset(position.offset).left_biased()?;\n+    let mut expanded = None;\n+    let mut name = None;\n+    for node in tok.ancestors() {\n+        match_ast! {\n+            match node {\n+                ast::MacroCall(mac) => {\n+                    name = Some(mac.path()?.segment()?.name_ref()?.to_string());\n+                    expanded = expand_macro_recur(&sema, &mac);\n+                    break;\n+                },\n+                ast::Item(item) => {\n+                    // FIXME: add the macro name\n+                    // FIXME: make this recursive too\n+                    name = Some(\"?\".to_string());\n+                    expanded = sema.expand_attr_macro(&item);\n+                    if expanded.is_some() {\n+                        break;\n+                    }\n+                },\n+                _ => {}\n+            }\n+        }\n+    }\n \n     // FIXME:\n     // macro expansion may lose all white space information\n     // But we hope someday we can use ra_fmt for that\n-    let expansion = insert_whitespaces(expanded);\n-    Some(ExpandedMacro { name: name.to_string(), expansion })\n+    let expansion = insert_whitespaces(expanded?);\n+    Some(ExpandedMacro { name: name?, expansion })\n }\n \n fn expand_macro_recur("}]}