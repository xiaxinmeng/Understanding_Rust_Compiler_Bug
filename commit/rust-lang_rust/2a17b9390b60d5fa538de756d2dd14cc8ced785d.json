{"sha": "2a17b9390b60d5fa538de756d2dd14cc8ced785d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMTdiOTM5MGI2MGQ1ZmE1MzhkZTc1NmQyZGQxNGNjOGNlZDc4NWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-06T21:25:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-07T10:28:03Z"}, "message": "test more failure cases for approximating the \"longer\" side\n\nas suggested by arielb1", "tree": {"sha": "54c3a2eb42c6bb5e1ed2b1d590aa59d06640db4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54c3a2eb42c6bb5e1ed2b1d590aa59d06640db4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a17b9390b60d5fa538de756d2dd14cc8ced785d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a17b9390b60d5fa538de756d2dd14cc8ced785d", "html_url": "https://github.com/rust-lang/rust/commit/2a17b9390b60d5fa538de756d2dd14cc8ced785d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a17b9390b60d5fa538de756d2dd14cc8ced785d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca60826110dcba2014f439605c2100ae0b095394", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca60826110dcba2014f439605c2100ae0b095394", "html_url": "https://github.com/rust-lang/rust/commit/ca60826110dcba2014f439605c2100ae0b095394"}], "stats": {"total": 205, "additions": 157, "deletions": 48}, "files": [{"sha": "ed8938dd6b9fceaaecd2020a99eff24038b5eb9a", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-to-empty.stderr", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-to-empty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca60826110dcba2014f439605c2100ae0b095394/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-to-empty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-to-empty.stderr?ref=ca60826110dcba2014f439605c2100ae0b095394", "patch": "@@ -1,46 +0,0 @@\n-warning: not reporting region error due to -Znll\n-  --> $DIR/propagate-approximated-to-empty.rs:41:9\n-   |\n-41 |         demand_y(x, y, x.get())\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: free region `'_#6r` does not outlive free region `'_#4r`\n-  --> $DIR/propagate-approximated-to-empty.rs:41:21\n-   |\n-41 |         demand_y(x, y, x.get())\n-   |                     ^\n-\n-note: External requirements\n-  --> $DIR/propagate-approximated-to-empty.rs:39:47\n-   |\n-39 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-   |  _______________________________________________^\n-40 | |         // Only works if 'x: 'y:\n-41 | |         demand_y(x, y, x.get())\n-42 | |         //~^ WARN not reporting region error due to -Znll\n-43 | |         //~| ERROR free region `'_#6r` does not outlive free region `'_#4r`\n-44 | |     });\n-   | |_____^\n-   |\n-   = note: defining type: DefId(0/1:18 ~ propagate_approximated_to_empty[317d]::supply[0]::{{closure}}[0]) with closure substs [\n-               i16,\n-               for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n-           ]\n-   = note: number of external vids: 2\n-\n-note: No external requirements\n-  --> $DIR/propagate-approximated-to-empty.rs:38:1\n-   |\n-38 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-39 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-40 | |         // Only works if 'x: 'y:\n-41 | |         demand_y(x, y, x.get())\n-...  |\n-44 | |     });\n-45 | | }\n-   | |_^\n-   |\n-   = note: defining type: DefId(0/0:6 ~ propagate_approximated_to_empty[317d]::supply[0]) with substs []\n-\n-error: aborting due to previous error\n-"}, {"sha": "4bbdcc4494486040f42bb0e41ccc18f97ce69888", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.rs", "status": "renamed", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs?ref=2a17b9390b60d5fa538de756d2dd14cc8ced785d", "patch": "@@ -8,8 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Test a case where we fail to approximate one of the regions and\n-// hence report an error while checking the closure.\n+// Similarly to escape-argument-callee, a test case where the closure\n+// requires a relationship between 2 unrelated higher-ranked regions,\n+// with no helpful relations between the HRRs and free regions.\n+//\n+// In this case, the error is reported by the closure itself. This is\n+// because it is unable to approximate the higher-ranked region `'x`,\n+// as it knows of no relationships between `'x` and any\n+// non-higher-ranked regions.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n ", "previous_filename": "src/test/ui/nll/closure-requirements/propagate-approximated-to-empty.rs"}, {"sha": "6094f9aad81da7683ccb97532b5173b700615eb5", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.stderr", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr?ref=2a17b9390b60d5fa538de756d2dd14cc8ced785d", "patch": "@@ -0,0 +1,46 @@\n+warning: not reporting region error due to -Znll\n+  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:9\n+   |\n+47 |         demand_y(x, y, x.get())\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: free region `'_#6r` does not outlive free region `'_#4r`\n+  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:21\n+   |\n+47 |         demand_y(x, y, x.get())\n+   |                     ^\n+\n+note: External requirements\n+  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:45:47\n+   |\n+45 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+   |  _______________________________________________^\n+46 | |         // Only works if 'x: 'y:\n+47 | |         demand_y(x, y, x.get())\n+48 | |         //~^ WARN not reporting region error due to -Znll\n+49 | |         //~| ERROR free region `'_#6r` does not outlive free region `'_#4r`\n+50 | |     });\n+   | |_____^\n+   |\n+   = note: defining type: DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]) with closure substs [\n+               i16,\n+               for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n+           ]\n+   = note: number of external vids: 2\n+\n+note: No external requirements\n+  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:44:1\n+   |\n+44 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+45 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+46 | |         // Only works if 'x: 'y:\n+47 | |         demand_y(x, y, x.get())\n+...  |\n+50 | |     });\n+51 | | }\n+   | |_^\n+   |\n+   = note: defining type: DefId(0/0:6 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]) with substs []\n+\n+error: aborting due to previous error\n+"}, {"sha": "69fad354792f08775bc1585addd96a8e4988b6af", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-wrong-bounds.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.rs?ref=2a17b9390b60d5fa538de756d2dd14cc8ced785d", "patch": "@@ -0,0 +1,57 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Similarly to escape-argument-callee, a test case where the closure\n+// requires a relationship between 2 unrelated higher-ranked regions,\n+// with no helpful relations between the HRRs and free regions.\n+//\n+// In this case, the error is reported by the closure itself. This is\n+// because it is unable to approximate the higher-ranked region `'x`,\n+// as it only knows of regions that `'x` is outlived by, and none that\n+// `'x` outlives.\n+\n+// compile-flags:-Znll -Zborrowck=mir -Zverbose\n+\n+#![feature(rustc_attrs)]\n+\n+use std::cell::Cell;\n+\n+// Callee knows that:\n+//\n+// 'a: 'x\n+// 'b: 'y\n+//\n+// but this doesn't really help us in proving that `'x: 'y`, so\n+// closure gets an error.  In particular, we would need to know that\n+// `'x: 'a`, so that we could approximate `'x` \"downwards\" to `'a`.\n+fn establish_relationships<'a, 'b, F>(_cell_a: &Cell<&'a u32>, _cell_b: &Cell<&'b u32>, _closure: F)\n+where\n+    F: for<'x, 'y> FnMut(\n+        &Cell<&'x &'a u32>, // shows that 'a: 'x\n+        &Cell<&'y &'b u32>, // shows that 'b: 'y\n+        &Cell<&'x u32>,\n+        &Cell<&'y u32>,\n+    ),\n+{\n+}\n+\n+fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u32) {}\n+\n+#[rustc_regions]\n+fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+    establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+        // Only works if 'x: 'y:\n+        demand_y(x, y, x.get())\n+        //~^ WARN not reporting region error due to -Znll\n+        //~| ERROR free region `'_#5r` does not outlive free region `'_#7r`\n+    });\n+}\n+\n+fn main() {}"}, {"sha": "6658ee63abd9dc2d74bdada139aa8e82b67a15bc", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-wrong-bounds.stderr", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a17b9390b60d5fa538de756d2dd14cc8ced785d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr?ref=2a17b9390b60d5fa538de756d2dd14cc8ced785d", "patch": "@@ -0,0 +1,46 @@\n+warning: not reporting region error due to -Znll\n+  --> $DIR/propagate-fail-to-approximate-longer-wrong-bounds.rs:51:9\n+   |\n+51 |         demand_y(x, y, x.get())\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: free region `'_#5r` does not outlive free region `'_#7r`\n+  --> $DIR/propagate-fail-to-approximate-longer-wrong-bounds.rs:51:21\n+   |\n+51 |         demand_y(x, y, x.get())\n+   |                     ^\n+\n+note: External requirements\n+  --> $DIR/propagate-fail-to-approximate-longer-wrong-bounds.rs:49:47\n+   |\n+49 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+   |  _______________________________________________^\n+50 | |         // Only works if 'x: 'y:\n+51 | |         demand_y(x, y, x.get())\n+52 | |         //~^ WARN not reporting region error due to -Znll\n+53 | |         //~| ERROR free region `'_#5r` does not outlive free region `'_#7r`\n+54 | |     });\n+   | |_____^\n+   |\n+   = note: defining type: DefId(0/1:18 ~ propagate_fail_to_approximate_longer_wrong_bounds[317d]::supply[0]::{{closure}}[0]) with closure substs [\n+               i16,\n+               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) &'_#2r u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n+           ]\n+   = note: number of external vids: 3\n+\n+note: No external requirements\n+  --> $DIR/propagate-fail-to-approximate-longer-wrong-bounds.rs:48:1\n+   |\n+48 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+49 | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+50 | |         // Only works if 'x: 'y:\n+51 | |         demand_y(x, y, x.get())\n+...  |\n+54 | |     });\n+55 | | }\n+   | |_^\n+   |\n+   = note: defining type: DefId(0/0:6 ~ propagate_fail_to_approximate_longer_wrong_bounds[317d]::supply[0]) with substs []\n+\n+error: aborting due to previous error\n+"}]}