{"sha": "582b9cbc45334a73467d6ccaf0a8b9de559c2011", "node_id": "C_kwDOAAsO6NoAKDU4MmI5Y2JjNDUzMzRhNzM0NjdkNmNjYWYwYThiOWRlNTU5YzIwMTE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-07T03:30:08Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-07T21:01:26Z"}, "message": "Don't pass in a vector to `Encoder::new`.\n\nIt's not necessary.", "tree": {"sha": "3ecef238c65bc2288c5f4262529f7a7ac7bf4fb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ecef238c65bc2288c5f4262529f7a7ac7bf4fb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/582b9cbc45334a73467d6ccaf0a8b9de559c2011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/582b9cbc45334a73467d6ccaf0a8b9de559c2011", "html_url": "https://github.com/rust-lang/rust/commit/582b9cbc45334a73467d6ccaf0a8b9de559c2011", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/582b9cbc45334a73467d6ccaf0a8b9de559c2011/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92b1ab8d57c73468dd648b013ec8b7952b6e3c53", "url": "https://api.github.com/repos/rust-lang/rust/commits/92b1ab8d57c73468dd648b013ec8b7952b6e3c53", "html_url": "https://github.com/rust-lang/rust/commit/92b1ab8d57c73468dd648b013ec8b7952b6e3c53"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "cc7efaac8930d76e2ebc1b19840a0931b9eb7b58", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=582b9cbc45334a73467d6ccaf0a8b9de559c2011", "patch": "@@ -203,7 +203,7 @@ const RUSTC_VERSION: Option<&str> = option_env!(\"CFG_VERSION\");\n \n impl CodegenResults {\n     pub fn serialize_rlink(codegen_results: &CodegenResults) -> Vec<u8> {\n-        let mut encoder = opaque::Encoder::new(vec![]);\n+        let mut encoder = opaque::Encoder::new();\n         encoder.emit_raw_bytes(RLINK_MAGIC).unwrap();\n         // `emit_raw_bytes` is used to make sure that the version representation does not depend on\n         // Encoder's inner representation of `u32`."}, {"sha": "2b606018f86f5645d1f6ceeb75fa5de5f21fb439", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=582b9cbc45334a73467d6ccaf0a8b9de559c2011", "patch": "@@ -2194,7 +2194,7 @@ pub fn encode_metadata(tcx: TyCtxt<'_>) -> EncodedMetadata {\n }\n \n fn encode_metadata_impl(tcx: TyCtxt<'_>) -> EncodedMetadata {\n-    let mut encoder = opaque::Encoder::new(vec![]);\n+    let mut encoder = opaque::Encoder::new();\n     encoder.emit_raw_bytes(METADATA_HEADER).unwrap();\n \n     // Will be filled with the root position after encoding everything."}, {"sha": "40b79ba89ef4ee16b46aeb0423adf5abb8124d1f", "filename": "compiler/rustc_serialize/src/opaque.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs?ref=582b9cbc45334a73467d6ccaf0a8b9de559c2011", "patch": "@@ -18,8 +18,8 @@ pub struct Encoder {\n }\n \n impl Encoder {\n-    pub fn new(data: Vec<u8>) -> Encoder {\n-        Encoder { data }\n+    pub fn new() -> Encoder {\n+        Encoder { data: vec![] }\n     }\n \n     pub fn into_inner(self) -> Vec<u8> {"}, {"sha": "ec3c34f8bdb5d2ccce0f349bbb0447be5f927d27", "filename": "compiler/rustc_serialize/tests/opaque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_serialize%2Ftests%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/582b9cbc45334a73467d6ccaf0a8b9de559c2011/compiler%2Frustc_serialize%2Ftests%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Ftests%2Fopaque.rs?ref=582b9cbc45334a73467d6ccaf0a8b9de559c2011", "patch": "@@ -31,7 +31,7 @@ struct Struct {\n fn check_round_trip<T: Encodable<Encoder> + for<'a> Decodable<Decoder<'a>> + PartialEq + Debug>(\n     values: Vec<T>,\n ) {\n-    let mut encoder = Encoder::new(Vec::new());\n+    let mut encoder = Encoder::new();\n \n     for value in &values {\n         Encodable::encode(value, &mut encoder).unwrap();"}]}