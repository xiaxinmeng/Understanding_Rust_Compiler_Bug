{"sha": "17f7536fb220fc53cd0af2de46528070cfab012c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3Zjc1MzZmYjIyMGZjNTNjZDBhZjJkZTQ2NTI4MDcwY2ZhYjAxMmM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-07-22T02:04:05Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-07-24T01:29:42Z"}, "message": "Remove detection of rustup and cargo in 'missing extern crate' diagnostics\n\nPreviously, this would change the test output when RUSTUP_HOME was set:\n\n```\n---- [ui] ui/issues/issue-49851/compiler-builtins-error.rs stdout ----\ndiff of stderr:\n\n1       error[E0463]: can't find crate for `core`\n2          |\n3          = note: the `thumbv7em-none-eabihf` target may not be installed\n+          = help: consider downloading the target with `rustup target add thumbv7em-none-eabihf`\n4\n5       error: aborting due to previous error\n6\n```\n\nOriginally, I fixed it by explicitly unsetting RUSTUP_HOME in\ncompiletest. Then I realized that almost no one has RUSTUP_HOME set,\nsince rustup doesn't set it itself; although it does set RUST_RECURSION_COUNT\nwhenever it launches a proxy. Then it was pointed out that this runtime\ncheck doesn't really make sense and it's fine to make it unconditional.", "tree": {"sha": "9678b24670047f8107935dbc19b154dc94412994", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9678b24670047f8107935dbc19b154dc94412994"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17f7536fb220fc53cd0af2de46528070cfab012c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17f7536fb220fc53cd0af2de46528070cfab012c", "html_url": "https://github.com/rust-lang/rust/commit/17f7536fb220fc53cd0af2de46528070cfab012c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17f7536fb220fc53cd0af2de46528070cfab012c/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "url": "https://api.github.com/repos/rust-lang/rust/commits/32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "html_url": "https://github.com/rust-lang/rust/commit/32c9b7b091534f6d80e7e85da0cd425acb6c9a79"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "4936b22c7b983010e15e699bda1f5ed370ba793e", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/17f7536fb220fc53cd0af2de46528070cfab012c/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f7536fb220fc53cd0af2de46528070cfab012c/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=17f7536fb220fc53cd0af2de46528070cfab012c", "patch": "@@ -1080,7 +1080,10 @@ impl CrateError {\n                                 locator.triple\n                             ));\n                         }\n-                        if missing_core && std::env::var(\"RUSTUP_HOME\").is_ok() {\n+                        // NOTE: this suggests using rustup, even though the user may not have it installed.\n+                        // That's because they could choose to install it; or this may give them a hint which\n+                        // target they need to install from their distro.\n+                        if missing_core {\n                             err.help(&format!(\n                                 \"consider downloading the target with `rustup target add {}`\",\n                                 locator.triple\n@@ -1097,7 +1100,7 @@ impl CrateError {\n                                 current_crate\n                             ));\n                         }\n-                        if sess.is_nightly_build() && std::env::var(\"CARGO\").is_ok() {\n+                        if sess.is_nightly_build() {\n                             err.help(\"consider building the standard library from source with `cargo build -Zbuild-std`\");\n                         }\n                     } else if Some(crate_name)"}, {"sha": "1a34c21ba541370129ee2d367550506a06ec9f14", "filename": "src/test/ui/crate-loading/missing-std.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.rs?ref=17f7536fb220fc53cd0af2de46528070cfab012c", "patch": "@@ -1,7 +1,6 @@\n // compile-flags: --target x86_64-unknown-uefi\n // needs-llvm-components: x86\n // rustc-env:CARGO=/usr/bin/cargo\n-// rustc-env:RUSTUP_HOME=/home/bors/.rustup\n #![no_core]\n extern crate core;\n //~^ ERROR can't find crate for `core`"}, {"sha": "25808efdfa6993e94c45af96bfd0878e1598f4ad", "filename": "src/test/ui/crate-loading/missing-std.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.stderr?ref=17f7536fb220fc53cd0af2de46528070cfab012c", "patch": "@@ -1,5 +1,5 @@\n error[E0463]: can't find crate for `core`\n-  --> $DIR/missing-std.rs:6:1\n+  --> $DIR/missing-std.rs:5:1\n    |\n LL | extern crate core;\n    | ^^^^^^^^^^^^^^^^^^ can't find crate"}, {"sha": "b45574f0c49af80d563b5a5404b2a12f6728939f", "filename": "src/test/ui/issues/issue-37131.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fissues%2Fissue-37131.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fissues%2Fissue-37131.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37131.stderr?ref=17f7536fb220fc53cd0af2de46528070cfab012c", "patch": "@@ -1,6 +1,8 @@\n error[E0463]: can't find crate for `std`\n    |\n    = note: the `thumbv6m-none-eabi` target may not be installed\n+   = help: consider downloading the target with `rustup target add thumbv6m-none-eabi`\n+   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n \n error: aborting due to previous error\n "}, {"sha": "d963c07ea91750ac12704dc65c4af389233d6d91", "filename": "src/test/ui/issues/issue-49851/compiler-builtins-error.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17f7536fb220fc53cd0af2de46528070cfab012c/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.stderr?ref=17f7536fb220fc53cd0af2de46528070cfab012c", "patch": "@@ -1,6 +1,8 @@\n error[E0463]: can't find crate for `core`\n    |\n    = note: the `thumbv7em-none-eabihf` target may not be installed\n+   = help: consider downloading the target with `rustup target add thumbv7em-none-eabihf`\n+   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n \n error: aborting due to previous error\n "}]}