{"sha": "bc76f397c6464d5946deaa8f658605a1c2f72ac9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNzZmMzk3YzY0NjRkNTk0NmRlYWE4ZjY1ODYwNWExYzJmNzJhYzk=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-09-29T06:49:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-29T06:49:27Z"}, "message": "Merge pull request #2084 from ykrivopalov/bit_mask_verbosity_threshold\n\nConfiguration option for VERBOSE_BIT_MASK threshold", "tree": {"sha": "209c504c29413f944bbfcce872effdf2e69d8b5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/209c504c29413f944bbfcce872effdf2e69d8b5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc76f397c6464d5946deaa8f658605a1c2f72ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc76f397c6464d5946deaa8f658605a1c2f72ac9", "html_url": "https://github.com/rust-lang/rust/commit/bc76f397c6464d5946deaa8f658605a1c2f72ac9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc76f397c6464d5946deaa8f658605a1c2f72ac9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13caa00c9398e60a6714a2ad8b127ca5d1c73c4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/13caa00c9398e60a6714a2ad8b127ca5d1c73c4b", "html_url": "https://github.com/rust-lang/rust/commit/13caa00c9398e60a6714a2ad8b127ca5d1c73c4b"}, {"sha": "5c56c924fc587b0343f1a878f04895e2e20bae73", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c56c924fc587b0343f1a878f04895e2e20bae73", "html_url": "https://github.com/rust-lang/rust/commit/5c56c924fc587b0343f1a878f04895e2e20bae73"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "6372221fd4405de1451b04a353aac7875dacc56d", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bc76f397c6464d5946deaa8f658605a1c2f72ac9/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc76f397c6464d5946deaa8f658605a1c2f72ac9/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=bc76f397c6464d5946deaa8f658605a1c2f72ac9", "patch": "@@ -90,7 +90,17 @@ declare_lint! {\n }\n \n #[derive(Copy, Clone)]\n-pub struct BitMask;\n+pub struct BitMask {\n+    verbose_bit_mask_threshold: u64,\n+}\n+\n+impl BitMask {\n+    pub fn new(verbose_bit_mask_threshold: u64) -> Self {\n+        Self {\n+            verbose_bit_mask_threshold: verbose_bit_mask_threshold,\n+        }\n+    }\n+}\n \n impl LintPass for BitMask {\n     fn get_lints(&self) -> LintArray {\n@@ -119,6 +129,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BitMask {\n             let Expr_::ExprLit(ref lit1) = right.node,\n             let LitKind::Int(0, _) = lit1.node,\n             n.leading_zeros() == n.count_zeros(),\n+            n > u128::from(self.verbose_bit_mask_threshold),\n         ], {\n             span_lint_and_then(cx,\n                                VERBOSE_BIT_MASK,"}, {"sha": "bca15f693265ddeac8517a61e16e1e92ac00512f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc76f397c6464d5946deaa8f658605a1c2f72ac9/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc76f397c6464d5946deaa8f658605a1c2f72ac9/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=bc76f397c6464d5946deaa8f658605a1c2f72ac9", "patch": "@@ -232,7 +232,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_early_lint_pass(box enum_variants::EnumVariantNames::new(conf.enum_variant_name_threshold));\n     reg.register_late_lint_pass(box enum_glob_use::EnumGlobUse);\n     reg.register_late_lint_pass(box enum_clike::UnportableVariant);\n-    reg.register_late_lint_pass(box bit_mask::BitMask);\n+    reg.register_late_lint_pass(box bit_mask::BitMask::new(conf.verbose_bit_mask_threshold));\n     reg.register_late_lint_pass(box ptr::PointerPass);\n     reg.register_late_lint_pass(box needless_bool::NeedlessBool);\n     reg.register_late_lint_pass(box needless_bool::BoolComparison);"}, {"sha": "68ac74d4eefb0e6c1fe0a9d2a096d03571fbc8d9", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc76f397c6464d5946deaa8f658605a1c2f72ac9/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc76f397c6464d5946deaa8f658605a1c2f72ac9/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=bc76f397c6464d5946deaa8f658605a1c2f72ac9", "patch": "@@ -175,6 +175,8 @@ define_Conf! {\n     (enum_variant_name_threshold, \"enum_variant_name_threshold\", 3 => u64),\n     /// Lint: LARGE_ENUM_VARIANT. The maximum size of a emum's variant to avoid box suggestion\n     (enum_variant_size_threshold, \"enum_variant_size_threshold\", 200 => u64),\n+    /// Lint: VERBOSE_BIT_MASK. The maximum allowed size of a bit mask before suggesting to use 'trailing_zeros'\n+    (verbose_bit_mask_threshold, \"verbose_bit_mask_threshold\", 1 => u64),\n }\n \n /// Search for the configuration file."}, {"sha": "40aa585d12430a4f4e24c84e958684dc49febd07", "filename": "tests/ui/bit_masks.stderr", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc76f397c6464d5946deaa8f658605a1c2f72ac9/tests%2Fui%2Fbit_masks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc76f397c6464d5946deaa8f658605a1c2f72ac9/tests%2Fui%2Fbit_masks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.stderr?ref=bc76f397c6464d5946deaa8f658605a1c2f72ac9", "patch": "@@ -6,20 +6,6 @@ error: &-masking with zero\n    |\n    = note: `-D bad-bit-mask` implied by `-D warnings`\n \n-error: bit mask could be simplified with a call to `trailing_zeros`\n-  --> $DIR/bit_masks.rs:12:5\n-   |\n-12 |     x & 0 == 0;\n-   |     ^^^^^^^^^^ help: try: `x.trailing_zeros() >= 0`\n-   |\n-   = note: `-D verbose-bit-mask` implied by `-D warnings`\n-\n-error: bit mask could be simplified with a call to `trailing_zeros`\n-  --> $DIR/bit_masks.rs:14:5\n-   |\n-14 |     x & 1 == 0; //ok, compared with zero\n-   |     ^^^^^^^^^^ help: try: `x.trailing_zeros() >= 1`\n-\n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n   --> $DIR/bit_masks.rs:15:5\n    |\n@@ -106,5 +92,5 @@ error: ineffective bit mask: `x | 1` compared to `8`, is the same as x compared\n 55 |     x | 1 >= 8;\n    |     ^^^^^^^^^^\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 15 previous errors\n "}, {"sha": "8de3cd93370e249f0195f8d724574b421be68de6", "filename": "tests/ui/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc76f397c6464d5946deaa8f658605a1c2f72ac9/tests%2Fui%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc76f397c6464d5946deaa8f658605a1c2f72ac9/tests%2Fui%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_unknown_key.stderr?ref=bc76f397c6464d5946deaa8f658605a1c2f72ac9", "patch": "@@ -1,4 +1,4 @@\n-error: error reading Clippy's configuration file: unknown field `foobar`, expected one of `blacklisted-names`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `third-party`\n+error: error reading Clippy's configuration file: unknown field `foobar`, expected one of `blacklisted-names`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `third-party`\n \n error: aborting due to previous error\n "}, {"sha": "9fc71506ffe422caabd35657174a606463c7bd74", "filename": "tests/ui/trailing_zeros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc76f397c6464d5946deaa8f658605a1c2f72ac9/tests%2Fui%2Ftrailing_zeros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc76f397c6464d5946deaa8f658605a1c2f72ac9/tests%2Fui%2Ftrailing_zeros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_zeros.rs?ref=bc76f397c6464d5946deaa8f658605a1c2f72ac9", "patch": "@@ -7,4 +7,5 @@ fn main() {\n     let _ = #[clippy(author)] (x & 0b1111 == 0);  // suggest trailing_zeros\n     let _ = x & 0b1_1111 == 0; // suggest trailing_zeros\n     let _ = x & 0b1_1010 == 0; // do not lint\n+    let _ = x & 1 == 0; // do not lint\n }"}]}