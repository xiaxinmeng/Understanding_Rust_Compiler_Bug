{"sha": "3c39668ca464919ed4180049945b3e2b9bf6191a", "node_id": "C_kwDOAAsO6NoAKDNjMzk2NjhjYTQ2NDkxOWVkNDE4MDA0OTk0NWIzZTJiOWJmNjE5MWE", "commit": {"author": {"name": "btwotwo", "email": "10519967+btwotwo@users.noreply.github.com", "date": "2022-10-11T17:23:41Z"}, "committer": {"name": "btwotwo", "email": "10519967+btwotwo@users.noreply.github.com", "date": "2022-10-11T17:23:41Z"}, "message": "Remove extra parameter, access Db through semantics", "tree": {"sha": "1220924a6a21c4dc354afaf68356cceb879d4b54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1220924a6a21c4dc354afaf68356cceb879d4b54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c39668ca464919ed4180049945b3e2b9bf6191a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE7WZLfNy5oeDQue2p1FagNJ1zoKMFAmNFpp0ACgkQ1FagNJ1z\noKNDTg//e7yhjRN7A+oYcrEkZK2rNJZ5YbhtwM0K3ZEAgIXE/gjkHVM1PrAriN9U\nQNK21bLovoKSg3wWMFQ0KZP9y2PHgUVHgvKHmUozsIljfsvksaAF1R/cHaFy0OZp\nDCfwl0BUg4MrWmxjA1NiLgdWEhlzT0rfReOl40WeL71f7dDv/CgLKDLqKkMSEG6C\nDoqHeLi568ioSOz6cfBDqGND52vW81+Us2QKfgIQzQUO3k3MWbvXT/MWUOS2I3PU\neRbpihd2HJcrz19DhgsqhDA4aLKeJuCz1lIzHeUkAcVf2EmENub3rzHVOLx6+sjR\nEmMFVQeNJ5sJQ/kd3WOT+t4k8lXtZpfmq233GUvZeFNvTHTlSUGhy/Oj/kaWsAdx\nWY2kxSzS3++iERW0huJjTQ3DpsjnFEgQ8zBeQAL1GqfokTmSn0gW2VRJcYa1+NK/\n+jFkC7VIzrtx8Os7L5krPwE70zRiEOV/Rm8bPLqlGIEqw5Fna/dV0kOK1cRAX00G\nrpVzxw7fw9TpSDkrwtgRn9PaVdEkpbfgkIAAvXh1pI+Mhu2jFCzBRsINkOpc9Es+\nVM4l9q8OEB6ZKEOMXQJfLgK7uPKIkS9lVFUploxGkJLqaBl2CB0FF8AzD39cvkdr\nd7A1sgaU7r/UfcdPyU9BZn90+OiN6wq5H03I6lEM4+yavnHPsFY=\n=+7Tp\n-----END PGP SIGNATURE-----", "payload": "tree 1220924a6a21c4dc354afaf68356cceb879d4b54\nparent 3732d159b2e7dec436f8bb91c53832e56b1f2720\nauthor btwotwo <10519967+btwotwo@users.noreply.github.com> 1665509021 +0200\ncommitter btwotwo <10519967+btwotwo@users.noreply.github.com> 1665509021 +0200\n\nRemove extra parameter, access Db through semantics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c39668ca464919ed4180049945b3e2b9bf6191a", "html_url": "https://github.com/rust-lang/rust/commit/3c39668ca464919ed4180049945b3e2b9bf6191a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c39668ca464919ed4180049945b3e2b9bf6191a/comments", "author": {"login": "btwotwo", "id": 10519967, "node_id": "MDQ6VXNlcjEwNTE5OTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10519967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btwotwo", "html_url": "https://github.com/btwotwo", "followers_url": "https://api.github.com/users/btwotwo/followers", "following_url": "https://api.github.com/users/btwotwo/following{/other_user}", "gists_url": "https://api.github.com/users/btwotwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/btwotwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btwotwo/subscriptions", "organizations_url": "https://api.github.com/users/btwotwo/orgs", "repos_url": "https://api.github.com/users/btwotwo/repos", "events_url": "https://api.github.com/users/btwotwo/events{/privacy}", "received_events_url": "https://api.github.com/users/btwotwo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "btwotwo", "id": 10519967, "node_id": "MDQ6VXNlcjEwNTE5OTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10519967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btwotwo", "html_url": "https://github.com/btwotwo", "followers_url": "https://api.github.com/users/btwotwo/followers", "following_url": "https://api.github.com/users/btwotwo/following{/other_user}", "gists_url": "https://api.github.com/users/btwotwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/btwotwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btwotwo/subscriptions", "organizations_url": "https://api.github.com/users/btwotwo/orgs", "repos_url": "https://api.github.com/users/btwotwo/repos", "events_url": "https://api.github.com/users/btwotwo/events{/privacy}", "received_events_url": "https://api.github.com/users/btwotwo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3732d159b2e7dec436f8bb91c53832e56b1f2720", "url": "https://api.github.com/repos/rust-lang/rust/commits/3732d159b2e7dec436f8bb91c53832e56b1f2720", "html_url": "https://github.com/rust-lang/rust/commit/3732d159b2e7dec436f8bb91c53832e56b1f2720"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "a3a971303948e9aa06bef9037c62bc117e592227", "filename": "crates/ide-completion/src/completions/env_vars.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3c39668ca464919ed4180049945b3e2b9bf6191a/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fenv_vars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c39668ca464919ed4180049945b3e2b9bf6191a/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fenv_vars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fenv_vars.rs?ref=3c39668ca464919ed4180049945b3e2b9bf6191a", "patch": "@@ -18,7 +18,8 @@ const CARGO_DEFINED_VARS: &[(&str, &str)] = &[\n (\"CARGO_PKG_NAME\",\"The name of your package\"),\n (\"CARGO_PKG_DESCRIPTION\",\"The description from the manifest of your package\"),\n (\"CARGO_PKG_HOMEPAGE\",\"The home page from the manifest of your package\"),\n-(\"CARGO_PKG_REPOSITORY\",\"The repository from the manifest of your package\"),\n+        (\"CARGO_PKG_REPOSITORY\",\n+\"The repository from the manifest of your package\"),\n (\"CARGO_PKG_LICENSE\",\"The license from the manifest of your package\"),\n (\"CARGO_PKG_LICENSE_FILE\",\"The license file from the manifest of your package\"),\n (\"CARGO_PKG_RUST_VERSION\",\"The Rust version from the manifest of your package. Note that this is the minimum Rust version supported by the package, not the current Rust version\"),\n@@ -33,7 +34,7 @@ pub(crate) fn complete_cargo_env_vars(\n     ctx: &CompletionContext<'_>,\n     expanded: &ast::String,\n ) -> Option<()> {\n-    guard_env_macro(expanded, &ctx.sema, &ctx.db)?;\n+    guard_env_macro(expanded, &ctx.sema)?;\n     let range = expanded.text_range_between_quotes()?;\n \n     CARGO_DEFINED_VARS.iter().for_each(|(var, detail)| {\n@@ -48,11 +49,11 @@ pub(crate) fn complete_cargo_env_vars(\n fn guard_env_macro(\n     string: &ast::String,\n     semantics: &Semantics<'_, RootDatabase>,\n-    db: &RootDatabase,\n ) -> Option<()> {\n     let call = get_outer_macro(string)?;\n     let name = call.path()?.segment()?.name_ref()?;\n     let makro = semantics.resolve_macro_call(&call)?;\n+    let db = semantics.db;\n \n     match name.text().as_str() {\n         \"env\" | \"option_env\" if makro.kind(db) == hir::MacroKind::BuiltIn => Some(()),"}]}