{"sha": "821b92b102064cdef6787fe1114dae948fbbb62d", "node_id": "C_kwDOAAsO6NoAKDgyMWI5MmIxMDIwNjRjZGVmNjc4N2ZlMTExNGRhZTk0OGZiYmI2MmQ", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-11-29T18:31:17Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-11-29T18:31:17Z"}, "message": "Improve error message for incorrect field accesses through raw pointers", "tree": {"sha": "d1916f13aa08beb3b175447235f92ecc00ebe557", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1916f13aa08beb3b175447235f92ecc00ebe557"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/821b92b102064cdef6787fe1114dae948fbbb62d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/821b92b102064cdef6787fe1114dae948fbbb62d", "html_url": "https://github.com/rust-lang/rust/commit/821b92b102064cdef6787fe1114dae948fbbb62d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/821b92b102064cdef6787fe1114dae948fbbb62d/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fd3a5c7c175f228afaf5fc6ff00c177b83d8055", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd3a5c7c175f228afaf5fc6ff00c177b83d8055", "html_url": "https://github.com/rust-lang/rust/commit/5fd3a5c7c175f228afaf5fc6ff00c177b83d8055"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "311106474bea008dff0a8608316965513a02f095", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/821b92b102064cdef6787fe1114dae948fbbb62d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821b92b102064cdef6787fe1114dae948fbbb62d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=821b92b102064cdef6787fe1114dae948fbbb62d", "patch": "@@ -46,6 +46,7 @@ use rustc_span::hygiene::DesugaringKind;\n use rustc_span::lev_distance::find_best_match_for_name;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n+use rustc_span::{BytePos, Pos};\n use rustc_trait_selection::traits::{self, ObligationCauseCode};\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n@@ -2063,7 +2064,36 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 Some(span),\n             );\n         } else {\n-            err.help(\"methods are immutable and cannot be assigned to\");\n+            let mut found = false;\n+\n+            if let ty::RawPtr(ty_and_mut) = expr_t.kind() {\n+                if let ty::Adt(adt_def, _) = ty_and_mut.ty.kind() {\n+                    if adt_def.variants.len() == 1\n+                        && adt_def\n+                            .variants\n+                            .iter()\n+                            .next()\n+                            .unwrap()\n+                            .fields\n+                            .iter()\n+                            .any(|f| f.ident == field)\n+                    {\n+                        if let Some(dot_loc) = expr_snippet.rfind('.') {\n+                            found = true;\n+                            err.span_suggestion(\n+                                expr.span.with_hi(expr.span.lo() + BytePos::from_usize(dot_loc)),\n+                                \"to access the field, dereference first\",\n+                                format!(\"(*{})\", &expr_snippet[0..dot_loc]),\n+                                Applicability::MaybeIncorrect,\n+                            );\n+                        }\n+                    }\n+                }\n+            }\n+\n+            if !found {\n+                err.help(\"methods are immutable and cannot be assigned to\");\n+            }\n         }\n \n         err.emit();"}, {"sha": "94200cce73ec0fb353cd94776115e7424f9de7fb", "filename": "src/test/ui/typeck/issue-91210-ptr-method.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/821b92b102064cdef6787fe1114dae948fbbb62d/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/821b92b102064cdef6787fe1114dae948fbbb62d/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.fixed?ref=821b92b102064cdef6787fe1114dae948fbbb62d", "patch": "@@ -0,0 +1,15 @@\n+// Regression test for issue #91210.\n+\n+// run-rustfix\n+\n+#![allow(unused)]\n+\n+struct Foo { read: i32 }\n+\n+unsafe fn blah(x: *mut Foo) {\n+    (*x).read = 4;\n+    //~^ ERROR: attempted to take value of method\n+    //~| HELP: to access the field, dereference first\n+}\n+\n+fn main() {}"}, {"sha": "ed0ce6effe7d90488f4cc550abfb56fde3cd399d", "filename": "src/test/ui/typeck/issue-91210-ptr-method.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/821b92b102064cdef6787fe1114dae948fbbb62d/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821b92b102064cdef6787fe1114dae948fbbb62d/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.rs?ref=821b92b102064cdef6787fe1114dae948fbbb62d", "patch": "@@ -0,0 +1,15 @@\n+// Regression test for issue #91210.\n+\n+// run-rustfix\n+\n+#![allow(unused)]\n+\n+struct Foo { read: i32 }\n+\n+unsafe fn blah(x: *mut Foo) {\n+    x.read = 4;\n+    //~^ ERROR: attempted to take value of method\n+    //~| HELP: to access the field, dereference first\n+}\n+\n+fn main() {}"}, {"sha": "503a32373d5707fc32b80c4ebc059da7c31fcb31", "filename": "src/test/ui/typeck/issue-91210-ptr-method.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/821b92b102064cdef6787fe1114dae948fbbb62d/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/821b92b102064cdef6787fe1114dae948fbbb62d/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91210-ptr-method.stderr?ref=821b92b102064cdef6787fe1114dae948fbbb62d", "patch": "@@ -0,0 +1,11 @@\n+error[E0615]: attempted to take value of method `read` on type `*mut Foo`\n+  --> $DIR/issue-91210-ptr-method.rs:10:7\n+   |\n+LL |     x.read = 4;\n+   |     - ^^^^ method, not a field\n+   |     |\n+   |     help: to access the field, dereference first: `(*x)`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0615`."}]}