{"sha": "957ee5ce347999ef2c1acfdb63a76643c61f6516", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1N2VlNWNlMzQ3OTk5ZWYyYzFhY2ZkYjYzYTc2NjQzYzYxZjY1MTY=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2015-12-28T21:34:01Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2016-03-14T22:04:35Z"}, "message": "Add subst helper for inheriting FnSpace from another subst", "tree": {"sha": "d616ca34154b419235cafc431a4e2790f16caf91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d616ca34154b419235cafc431a4e2790f16caf91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/957ee5ce347999ef2c1acfdb63a76643c61f6516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/957ee5ce347999ef2c1acfdb63a76643c61f6516", "html_url": "https://github.com/rust-lang/rust/commit/957ee5ce347999ef2c1acfdb63a76643c61f6516", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/957ee5ce347999ef2c1acfdb63a76643c61f6516/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f34086e947139d498847dce49ba437748f17c2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f34086e947139d498847dce49ba437748f17c2d", "html_url": "https://github.com/rust-lang/rust/commit/1f34086e947139d498847dce49ba437748f17c2d"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "9f8e2a22133ef2dba9b2df319de11fc693ffeec6", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/957ee5ce347999ef2c1acfdb63a76643c61f6516/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957ee5ce347999ef2c1acfdb63a76643c61f6516/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=957ee5ce347999ef2c1acfdb63a76643c61f6516", "patch": "@@ -160,6 +160,15 @@ impl<'tcx> Substs<'tcx> {\n         Substs { types: types, regions: regions }\n     }\n \n+    pub fn with_method_from_subst(self, other: &Substs<'tcx>) -> Substs<'tcx> {\n+        let Substs { types, regions } = self;\n+        let types = types.with_vec(FnSpace, other.types.get_slice(FnSpace).to_vec());\n+        let regions = regions.map(|r| {\n+            r.with_vec(FnSpace, other.regions().get_slice(FnSpace).to_vec())\n+        });\n+        Substs { types: types, regions: regions }\n+    }\n+\n     /// Creates a trait-ref out of this substs, ignoring the FnSpace substs\n     pub fn to_trait_ref(&self, tcx: &TyCtxt<'tcx>, trait_id: DefId)\n                         -> ty::TraitRef<'tcx> {"}]}