{"sha": "aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "node_id": "C_kwDOAAsO6NoAKGFhN2Y0NTIwYTFkNWZjNjM0ZjgwYTZlYmU1MzJmZTJiZGZhNTI1MDE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T22:37:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T22:37:32Z"}, "message": "Rollup merge of #93038 - GuillaumeGomez:block-doc-comments, r=notriddle\n\nFix star handling in block doc comments\n\nFixes #92872.\n\nSome extra explanation about this PR and why https://github.com/rust-lang/rust/pull/92357 created this regression: when we merge doc comment kinds for example in:\n\n```rust\n/// he\n/**\n* hello\n*/\n#[doc = \"boom\"]\n```\n\nWe don't want to remove the empty lines between them. However, to correctly compute the \"horizontal trim\", we still need it, so instead, I put back a part of the \"vertical trim\" directly in the \"horizontal trim\" computation so it doesn't impact the output buffer but allows us to correctly handle the stars.\n\nr? ``@camelid``", "tree": {"sha": "3848647bb2e7c33f7b9684a2ad9ebf5b58801f8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3848647bb2e7c33f7b9684a2ad9ebf5b58801f8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6eQsCRBK7hj4Ov3rIwAAvrYIACOjx2yDDLip1Fwi0axnB8H8\nUWBTjRRyP5+z+x6Aym/yH+hoV1J5/ikuLlmPcnZD1mhjr9WljWs65U/YezDAtiDt\nQc/EFzTr2i60bUzoKR1TCqiXSX0T2/odbRGDC8/qtHpE6xt0vXyONTKg5Is3030e\nNjPoVYYsupkNgQ5SdGFEA3SQiHOmoUEdlvpf6KW7ZQ5RCMUM+rVVt1b9P8BxTkPm\nto9llryalQZpWN2hWuXCSGHUIEfAYVZrHXNoMedNNAu25spMqO2HJBD1J3FitYcm\nkhGQCLp+6isypmTOnVEFWQs2Nxkfy9SsaxV+COWY8aGmeFhiClfow1po3QEaGms=\n=Ylzn\n-----END PGP SIGNATURE-----\n", "payload": "tree 3848647bb2e7c33f7b9684a2ad9ebf5b58801f8e\nparent 530c884372cbee0ab81df404c90b0bc3b551a474\nparent 06b00ad19972c18150fe25a9b3716ffdf5300a83\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642718252 +0100\ncommitter GitHub <noreply@github.com> 1642718252 +0100\n\nRollup merge of #93038 - GuillaumeGomez:block-doc-comments, r=notriddle\n\nFix star handling in block doc comments\n\nFixes #92872.\n\nSome extra explanation about this PR and why https://github.com/rust-lang/rust/pull/92357 created this regression: when we merge doc comment kinds for example in:\n\n```rust\n/// he\n/**\n* hello\n*/\n#[doc = \"boom\"]\n```\n\nWe don't want to remove the empty lines between them. However, to correctly compute the \"horizontal trim\", we still need it, so instead, I put back a part of the \"vertical trim\" directly in the \"horizontal trim\" computation so it doesn't impact the output buffer but allows us to correctly handle the stars.\n\nr? ``@camelid``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "html_url": "https://github.com/rust-lang/rust/commit/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "530c884372cbee0ab81df404c90b0bc3b551a474", "url": "https://api.github.com/repos/rust-lang/rust/commits/530c884372cbee0ab81df404c90b0bc3b551a474", "html_url": "https://github.com/rust-lang/rust/commit/530c884372cbee0ab81df404c90b0bc3b551a474"}, {"sha": "06b00ad19972c18150fe25a9b3716ffdf5300a83", "url": "https://api.github.com/repos/rust-lang/rust/commits/06b00ad19972c18150fe25a9b3716ffdf5300a83", "html_url": "https://github.com/rust-lang/rust/commit/06b00ad19972c18150fe25a9b3716ffdf5300a83"}], "stats": {"total": 75, "additions": 60, "deletions": 15}, "files": [{"sha": "6a0ace04d4b618066d683a949d5f1ed4bdc74f4c", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "patch": "@@ -242,6 +242,17 @@ impl Attribute {\n         }\n     }\n \n+    pub fn doc_str_and_comment_kind(&self) -> Option<(Symbol, CommentKind)> {\n+        match self.kind {\n+            AttrKind::DocComment(kind, data) => Some((data, kind)),\n+            AttrKind::Normal(ref item, _) if item.path == sym::doc => item\n+                .meta_kind()\n+                .and_then(|kind| kind.value_str())\n+                .map(|data| (data, CommentKind::Line)),\n+            _ => None,\n+        }\n+    }\n+\n     pub fn doc_str(&self) -> Option<Symbol> {\n         match self.kind {\n             AttrKind::DocComment(.., data) => Some(data),"}, {"sha": "612ee71f350f16e31b218607a8dabdd2bdbea7d4", "filename": "compiler/rustc_ast/src/util/comments.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments.rs?ref=aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "patch": "@@ -1,3 +1,4 @@\n+use crate::token::CommentKind;\n use rustc_span::source_map::SourceMap;\n use rustc_span::{BytePos, CharPos, FileName, Pos, Symbol};\n \n@@ -25,7 +26,7 @@ pub struct Comment {\n \n /// Makes a doc string more presentable to users.\n /// Used by rustdoc and perhaps other tools, but not by rustc.\n-pub fn beautify_doc_string(data: Symbol) -> Symbol {\n+pub fn beautify_doc_string(data: Symbol, kind: CommentKind) -> Symbol {\n     fn get_vertical_trim(lines: &[&str]) -> Option<(usize, usize)> {\n         let mut i = 0;\n         let mut j = lines.len();\n@@ -42,10 +43,28 @@ pub fn beautify_doc_string(data: Symbol) -> Symbol {\n         if i != 0 || j != lines.len() { Some((i, j)) } else { None }\n     }\n \n-    fn get_horizontal_trim(lines: &[&str]) -> Option<usize> {\n+    fn get_horizontal_trim(lines: &[&str], kind: CommentKind) -> Option<usize> {\n         let mut i = usize::MAX;\n         let mut first = true;\n \n+        // In case we have doc comments like `/**` or `/*!`, we want to remove stars if they are\n+        // present. However, we first need to strip the empty lines so they don't get in the middle\n+        // when we try to compute the \"horizontal trim\".\n+        let lines = if kind == CommentKind::Block {\n+            let mut i = 0;\n+            let mut j = lines.len();\n+\n+            while i < j && lines[i].trim().is_empty() {\n+                i += 1;\n+            }\n+            while j > i && lines[j - 1].trim().is_empty() {\n+                j -= 1;\n+            }\n+            &lines[i..j]\n+        } else {\n+            lines\n+        };\n+\n         for line in lines {\n             for (j, c) in line.chars().enumerate() {\n                 if j > i || !\"* \\t\".contains(c) {\n@@ -79,11 +98,13 @@ pub fn beautify_doc_string(data: Symbol) -> Symbol {\n         } else {\n             &mut lines\n         };\n-        if let Some(horizontal) = get_horizontal_trim(&lines) {\n+        if let Some(horizontal) = get_horizontal_trim(&lines, kind) {\n             changes = true;\n             // remove a \"[ \\t]*\\*\" block from each line, if possible\n             for line in lines.iter_mut() {\n-                *line = &line[horizontal + 1..];\n+                if horizontal + 1 < line.len() {\n+                    *line = &line[horizontal + 1..];\n+                }\n             }\n         }\n         if changes {"}, {"sha": "98f692a7724e2778b9410ff4e8d85ae8e59273dd", "filename": "compiler/rustc_ast/src/util/comments/tests.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Futil%2Fcomments%2Ftests.rs?ref=aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "patch": "@@ -5,7 +5,7 @@ use rustc_span::create_default_session_globals_then;\n fn test_block_doc_comment_1() {\n     create_default_session_globals_then(|| {\n         let comment = \"\\n * Test \\n **  Test\\n *   Test\\n\";\n-        let stripped = beautify_doc_string(Symbol::intern(comment));\n+        let stripped = beautify_doc_string(Symbol::intern(comment), CommentKind::Block);\n         assert_eq!(stripped.as_str(), \" Test \\n*  Test\\n   Test\");\n     })\n }\n@@ -14,7 +14,7 @@ fn test_block_doc_comment_1() {\n fn test_block_doc_comment_2() {\n     create_default_session_globals_then(|| {\n         let comment = \"\\n * Test\\n *  Test\\n\";\n-        let stripped = beautify_doc_string(Symbol::intern(comment));\n+        let stripped = beautify_doc_string(Symbol::intern(comment), CommentKind::Block);\n         assert_eq!(stripped.as_str(), \" Test\\n  Test\");\n     })\n }\n@@ -23,21 +23,21 @@ fn test_block_doc_comment_2() {\n fn test_block_doc_comment_3() {\n     create_default_session_globals_then(|| {\n         let comment = \"\\n let a: *i32;\\n *a = 5;\\n\";\n-        let stripped = beautify_doc_string(Symbol::intern(comment));\n+        let stripped = beautify_doc_string(Symbol::intern(comment), CommentKind::Block);\n         assert_eq!(stripped.as_str(), \" let a: *i32;\\n *a = 5;\");\n     })\n }\n \n #[test]\n fn test_line_doc_comment() {\n     create_default_session_globals_then(|| {\n-        let stripped = beautify_doc_string(Symbol::intern(\" test\"));\n+        let stripped = beautify_doc_string(Symbol::intern(\" test\"), CommentKind::Line);\n         assert_eq!(stripped.as_str(), \" test\");\n-        let stripped = beautify_doc_string(Symbol::intern(\"! test\"));\n+        let stripped = beautify_doc_string(Symbol::intern(\"! test\"), CommentKind::Line);\n         assert_eq!(stripped.as_str(), \"! test\");\n-        let stripped = beautify_doc_string(Symbol::intern(\"test\"));\n+        let stripped = beautify_doc_string(Symbol::intern(\"test\"), CommentKind::Line);\n         assert_eq!(stripped.as_str(), \"test\");\n-        let stripped = beautify_doc_string(Symbol::intern(\"!test\"));\n+        let stripped = beautify_doc_string(Symbol::intern(\"!test\"), CommentKind::Line);\n         assert_eq!(stripped.as_str(), \"!test\");\n     })\n }"}, {"sha": "b95fe1b0549bd68232e4dc96374d42c49e66dcf7", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "patch": "@@ -821,9 +821,9 @@ impl<'tcx> SaveContext<'tcx> {\n         let mut result = String::new();\n \n         for attr in attrs {\n-            if let Some(val) = attr.doc_str() {\n+            if let Some((val, kind)) = attr.doc_str_and_comment_kind() {\n                 // FIXME: Should save-analysis beautify doc strings itself or leave it to users?\n-                result.push_str(beautify_doc_string(val).as_str());\n+                result.push_str(beautify_doc_string(val, kind).as_str());\n                 result.push('\\n');\n             }\n         }"}, {"sha": "993503005d7df07ed2409b1c5906665cf482ad88", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "patch": "@@ -1041,9 +1041,9 @@ impl Attributes {\n     ) -> Attributes {\n         let mut doc_strings: Vec<DocFragment> = vec![];\n         let clean_attr = |(attr, parent_module): (&ast::Attribute, Option<DefId>)| {\n-            if let Some(value) = attr.doc_str() {\n+            if let Some((value, kind)) = attr.doc_str_and_comment_kind() {\n                 trace!(\"got doc_str={:?}\", value);\n-                let value = beautify_doc_string(value);\n+                let value = beautify_doc_string(value, kind);\n                 let kind = if attr.is_doc_comment() {\n                     DocFragmentKind::SugaredDoc\n                 } else {"}, {"sha": "22b0b5dc47e282b5272448238c13983b6c2a4b96", "filename": "src/test/rustdoc/strip-block-doc-comments-stars.docblock.html", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.docblock.html", "raw_url": "https://github.com/rust-lang/rust/raw/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.docblock.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.docblock.html?ref=aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "patch": "@@ -0,0 +1,2 @@\n+<div class=\"docblock\"><p>a</p>\n+</div>\n\\ No newline at end of file"}, {"sha": "ed2297b4fac5daf07f482667879b495fe947ec38", "filename": "src/test/rustdoc/strip-block-doc-comments-stars.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstrip-block-doc-comments-stars.rs?ref=aa7f4520a1d5fc634f80a6ebe532fe2bdfa52501", "patch": "@@ -0,0 +1,11 @@\n+#![crate_name = \"foo\"]\n+\n+// The goal of this test is to answer that it won't be generated as a list because\n+// block doc comments can have their lines starting with a star.\n+\n+// @has foo/fn.foo.html\n+// @snapshot docblock - '//*[@class=\"rustdoc-toggle top-doc\"]//*[@class=\"docblock\"]'\n+/**\n+ *     a\n+ */\n+pub fn foo() {}"}]}