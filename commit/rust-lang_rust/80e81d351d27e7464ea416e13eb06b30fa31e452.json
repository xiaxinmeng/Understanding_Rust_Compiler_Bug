{"sha": "80e81d351d27e7464ea416e13eb06b30fa31e452", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZTgxZDM1MWQyN2U3NDY0ZWE0MTZlMTNlYjA2YjMwZmEzMWU0NTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-30T10:47:04Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-30T10:47:04Z"}, "message": "add version check to the unit tests", "tree": {"sha": "32bf637eaf9618dec195d4458c470ab2f655305a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32bf637eaf9618dec195d4458c470ab2f655305a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80e81d351d27e7464ea416e13eb06b30fa31e452", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXTBooAAoJEFbW7qD8Z6xG5IkP/j0OWJEsJ867tLcr2rjbEA/D\nmoJOH/nRrjPBwANSMXIidqgp/gg3eC3J6t6yeCtniIEAR9QsH0h+PsuWbV0BYqpZ\nWHUKLBocK/B+NoBK+9KvhTklSH+RX9/5RvoYa6mWlQeiOH1++GbZK6QhpvPjPHYs\nCOtvaLKrK9ARswoIjeiuwZa2fSbDA5BfooDTTMZX+xyWNZcB+nu1XQ/EuIR/AjTa\nefHVtO5Z4/7oXkk6pKd+QMS1fJB8F13/Eu3koapYko0RrzusEGAfwYz3odcldX5o\n5QabRFKVfwT+HFInAUoc++o2SImGdlry30+gq0nAht3HevHuy03CSOWd0S4n+Bia\n53yG4rJjIAKPwOEMtlvAXgaLrdUtWIcn9L9X61WSstp70tgdNkeqUOTXupJJbGcX\n3hNyJv/ic4B2Zh3aCZmepnu8XhTRReWQH290fqVAz9NWVPa/3Izfw0TvMbOTyxtK\n0BJIqGfRaf7Zkjhj1L4X53BAoHGubv39unmjFbMtMJP3shSIJIYmCoXOGTo809Al\nJBUzAagbL1NbVmlmVLC9GTYYsc49EP9Of/hdRheixQXtQKOowFnT7SwXGaQeJfCw\n39Nkxb4E/uU6Loc04yY9N5PTmpk/GdxkAy2KBX7KcV37tBzFQ/W5H3Wb/g3dy9OD\nyr8J1YzNQJUhV9k7W2Ii\n=6FKS\n-----END PGP SIGNATURE-----", "payload": "tree 32bf637eaf9618dec195d4458c470ab2f655305a\nparent 3ad0a49632b6c06c259ba6e09e55fdda61d5f6d5\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464605224 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464605224 +0200\n\nadd version check to the unit tests"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80e81d351d27e7464ea416e13eb06b30fa31e452", "html_url": "https://github.com/rust-lang/rust/commit/80e81d351d27e7464ea416e13eb06b30fa31e452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80e81d351d27e7464ea416e13eb06b30fa31e452/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ad0a49632b6c06c259ba6e09e55fdda61d5f6d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ad0a49632b6c06c259ba6e09e55fdda61d5f6d5", "html_url": "https://github.com/rust-lang/rust/commit/3ad0a49632b6c06c259ba6e09e55fdda61d5f6d5"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "c309b7a63e242ee62f3996dbc6b00e9eea330188", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=80e81d351d27e7464ea416e13eb06b30fa31e452", "patch": "@@ -21,6 +21,7 @@ semver = \"0.2.1\"\n toml = \"0.1\"\n unicode-normalization = \"0.1\"\n quine-mc_cluskey = \"0.2.2\"\n+rustc-serialize = \"0.3\"\n \n [features]\n debugging = []"}, {"sha": "944825e2bdc6f68fbf6a2ba837a58f1511af51b9", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=80e81d351d27e7464ea416e13eb06b30fa31e452", "patch": "@@ -36,6 +36,8 @@ extern crate regex_syntax;\n // for finding minimal boolean expressions\n extern crate quine_mc_cluskey;\n \n+extern crate rustc_serialize;\n+\n extern crate rustc_plugin;\n extern crate rustc_const_eval;\n extern crate rustc_const_math;"}, {"sha": "c6004864bf09455fade440b29cf7266ad2c5bc13", "filename": "clippy_lints/src/utils/cargo.rs", "status": "renamed", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcargo.rs?ref=80e81d351d27e7464ea416e13eb06b30fa31e452", "patch": "@@ -1,4 +1,8 @@\n use std::collections::HashMap;\n+use std::process::Command;\n+use std::str::{from_utf8, Utf8Error};\n+use std::io;\n+use rustc_serialize::json;\n \n #[derive(RustcDecodable, Debug)]\n pub struct Metadata {\n@@ -9,21 +13,21 @@ pub struct Metadata {\n \n #[derive(RustcDecodable, Debug)]\n pub struct Package {\n-    name: String,\n-    version: String,\n+    pub name: String,\n+    pub version: String,\n     id: String,\n     source: Option<()>,\n-    dependencies: Vec<Dependency>,\n+    pub dependencies: Vec<Dependency>,\n     pub targets: Vec<Target>,\n     features: HashMap<String, Vec<String>>,\n     manifest_path: String,\n }\n \n #[derive(RustcDecodable, Debug)]\n pub struct Dependency {\n-    name: String,\n+    pub name: String,\n     source: Option<String>,\n-    req: String,\n+    pub req: String,\n     kind: Option<String>,\n     optional: bool,\n     uses_default_features: bool,\n@@ -46,3 +50,26 @@ pub struct Target {\n     pub kind: Vec<Kind>,\n     src_path: String,\n }\n+\n+#[derive(Debug)]\n+pub enum Error {\n+    Io(io::Error),\n+    Utf8(Utf8Error),\n+    Json(json::DecoderError),\n+}\n+\n+impl From<io::Error> for Error {\n+    fn from(err: io::Error) -> Self { Error::Io(err) }\n+}\n+impl From<Utf8Error> for Error {\n+    fn from(err: Utf8Error) -> Self { Error::Utf8(err) }\n+}\n+impl From<json::DecoderError> for Error {\n+    fn from(err: json::DecoderError) -> Self { Error::Json(err) }\n+}\n+\n+pub fn metadata() -> Result<Metadata, Error> {\n+    let output = Command::new(\"cargo\").args(&[\"metadata\", \"--no-deps\"]).output()?;\n+    let stdout = from_utf8(&output.stdout)?;\n+    Ok(json::decode(stdout)?)\n+}", "previous_filename": "src/cargo.rs"}, {"sha": "986462b37237b9045fa8056cb4022517b279e2eb", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e81d351d27e7464ea416e13eb06b30fa31e452/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=80e81d351d27e7464ea416e13eb06b30fa31e452", "patch": "@@ -23,6 +23,7 @@ pub mod conf;\n mod hir;\n pub mod paths;\n pub use self::hir::{SpanlessEq, SpanlessHash};\n+pub mod cargo;\n \n pub type MethodArgs = HirVec<P<Expr>>;\n "}, {"sha": "3ad32a540587cf39fd54422f6a66f6897ab18bfa", "filename": "src/main.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80e81d351d27e7464ea416e13eb06b30fa31e452/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e81d351d27e7464ea416e13eb06b30fa31e452/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=80e81d351d27e7464ea416e13eb06b30fa31e452", "patch": "@@ -18,7 +18,7 @@ use syntax::diagnostics;\n use std::path::PathBuf;\n use std::process::Command;\n \n-mod cargo;\n+use clippy_lints::utils::cargo;\n \n struct ClippyCompilerCalls(RustcDefaultCalls);\n \n@@ -122,9 +122,7 @@ pub fn main() {\n     };\n \n     if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n-        let output = std::process::Command::new(\"cargo\").args(&[\"metadata\", \"--no-deps\"]).output().expect(\"could not run `cargo metadata`\");\n-        let stdout = std::str::from_utf8(&output.stdout).expect(\"`cargo metadata` output is not utf8\");\n-        let mut metadata: cargo::Metadata = rustc_serialize::json::decode(stdout).expect(\"`cargo metadata` output is not valid json\");\n+        let mut metadata = cargo::metadata().expect(\"could not obtain cargo metadata\");\n         assert_eq!(metadata.version, 1);\n         for target in metadata.packages.remove(0).targets {\n             let args = std::env::args().skip(2);"}, {"sha": "b2a2f416a8f2a434a97e727d7ab219fe96e3c8b2", "filename": "tests/versioncheck.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/80e81d351d27e7464ea416e13eb06b30fa31e452/tests%2Fversioncheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e81d351d27e7464ea416e13eb06b30fa31e452/tests%2Fversioncheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fversioncheck.rs?ref=80e81d351d27e7464ea416e13eb06b30fa31e452", "patch": "@@ -0,0 +1,16 @@\n+extern crate clippy_lints;\n+use clippy_lints::utils::cargo;\n+\n+#[test]\n+fn check_that_clippy_lints_has_the_same_version_as_clippy() {\n+    let clippy_meta = cargo::metadata().expect(\"could not obtain cargo metadata\");\n+    std::env::set_current_dir(std::env::current_dir().unwrap().join(\"clippy_lints\")).unwrap();\n+    let clippy_lints_meta = cargo::metadata().expect(\"could not obtain cargo metadata\");\n+    assert_eq!(clippy_lints_meta.packages[0].version, clippy_meta.packages[0].version);\n+    for package in &clippy_meta.packages[0].dependencies {\n+        if package.name == \"clippy_lints\" {\n+            assert_eq!(clippy_lints_meta.packages[0].version, package.req[1..]);\n+            return;\n+        }\n+    }\n+}"}]}