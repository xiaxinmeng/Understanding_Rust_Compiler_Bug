{"sha": "413d255916a314ab8377a308e6b8f98a55301a55", "node_id": "C_kwDOAAsO6NoAKDQxM2QyNTU5MTZhMzE0YWI4Mzc3YTMwOGU2YjhmOThhNTUzMDFhNTU", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2021-11-07T18:52:34Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2021-11-08T22:53:50Z"}, "message": "Add MSRV to deprecated_cfg_attr", "tree": {"sha": "ff0661158ab1912a401d0f0dbc6ea9c433e60954", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff0661158ab1912a401d0f0dbc6ea9c433e60954"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/413d255916a314ab8377a308e6b8f98a55301a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/413d255916a314ab8377a308e6b8f98a55301a55", "html_url": "https://github.com/rust-lang/rust/commit/413d255916a314ab8377a308e6b8f98a55301a55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/413d255916a314ab8377a308e6b8f98a55301a55/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "url": "https://api.github.com/repos/rust-lang/rust/commits/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "html_url": "https://github.com/rust-lang/rust/commit/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638"}], "stats": {"total": 61, "additions": 42, "deletions": 19}, "files": [{"sha": "9c5db18336fc1d3c6ea72241d979e7f0fe9e854f", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/413d255916a314ab8377a308e6b8f98a55301a55/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413d255916a314ab8377a308e6b8f98a55301a55/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=413d255916a314ab8377a308e6b8f98a55301a55", "patch": "@@ -1,8 +1,9 @@\n //! checks for attributes\n \n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then};\n-use clippy_utils::match_panic_def_id;\n+use clippy_utils::msrvs;\n use clippy_utils::source::{first_line_of_span, is_present_in_source, snippet_opt, without_block_comments};\n+use clippy_utils::{extract_msrv_attr, match_panic_def_id, meets_msrv};\n use if_chain::if_chain;\n use rustc_ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use rustc_errors::Applicability;\n@@ -12,7 +13,8 @@ use rustc_hir::{\n use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty;\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_semver::RustcVersion;\n+use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::sym;\n use rustc_span::symbol::{Symbol, SymbolStr};\n@@ -497,7 +499,11 @@ fn is_word(nmi: &NestedMetaItem, expected: Symbol) -> bool {\n     }\n }\n \n-declare_lint_pass!(EarlyAttributes => [\n+pub struct EarlyAttributes {\n+    pub msrv: Option<RustcVersion>,\n+}\n+\n+impl_lint_pass!(EarlyAttributes => [\n     DEPRECATED_CFG_ATTR,\n     MISMATCHED_TARGET_OS,\n     EMPTY_LINE_AFTER_OUTER_ATTR,\n@@ -509,9 +515,11 @@ impl EarlyLintPass for EarlyAttributes {\n     }\n \n     fn check_attribute(&mut self, cx: &EarlyContext<'_>, attr: &Attribute) {\n-        check_deprecated_cfg_attr(cx, attr);\n+        check_deprecated_cfg_attr(cx, attr, self.msrv);\n         check_mismatched_target_os(cx, attr);\n     }\n+\n+    extract_msrv_attr!(EarlyContext);\n }\n \n fn check_empty_line_after_outer_attr(cx: &EarlyContext<'_>, item: &rustc_ast::Item) {\n@@ -548,8 +556,9 @@ fn check_empty_line_after_outer_attr(cx: &EarlyContext<'_>, item: &rustc_ast::It\n     }\n }\n \n-fn check_deprecated_cfg_attr(cx: &EarlyContext<'_>, attr: &Attribute) {\n+fn check_deprecated_cfg_attr(cx: &EarlyContext<'_>, attr: &Attribute, msrv: Option<RustcVersion>) {\n     if_chain! {\n+        if meets_msrv(msrv.as_ref(), &msrvs::TOOL_ATTRIBUTES);\n         // check cfg_attr\n         if attr.has_name(sym::cfg_attr);\n         if let Some(items) = attr.meta_item_list();"}, {"sha": "d91b2e1f448d628f2f9f133e365abe271bda9b31", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/413d255916a314ab8377a308e6b8f98a55301a55/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413d255916a314ab8377a308e6b8f98a55301a55/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=413d255916a314ab8377a308e6b8f98a55301a55", "patch": "@@ -404,10 +404,21 @@ use crate::utils::conf::TryConf;\n /// level (i.e `#![cfg_attr(...)]`) will still be expanded even when using a pre-expansion pass.\n ///\n /// Used in `./src/driver.rs`.\n-pub fn register_pre_expansion_lints(store: &mut rustc_lint::LintStore) {\n+pub fn register_pre_expansion_lints(store: &mut rustc_lint::LintStore, sess: &Session, conf: &Conf) {\n     // NOTE: Do not add any more pre-expansion passes. These should be removed eventually.\n+\n+    let msrv = conf.msrv.as_ref().and_then(|s| {\n+        parse_msrv(s, None, None).or_else(|| {\n+            sess.err(&format!(\n+                \"error reading Clippy's configuration file. `{}` is not a valid Rust version\",\n+                s\n+            ));\n+            None\n+        })\n+    });\n+\n     store.register_pre_expansion_pass(|| Box::new(write::Write::default()));\n-    store.register_pre_expansion_pass(|| Box::new(attrs::EarlyAttributes));\n+    store.register_pre_expansion_pass(move || Box::new(attrs::EarlyAttributes { msrv }));\n     store.register_pre_expansion_pass(|| Box::new(dbg_macro::DbgMacro));\n }\n "}, {"sha": "3c4f114fe59786de010622207d5faa8d21e07ea7", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/413d255916a314ab8377a308e6b8f98a55301a55/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413d255916a314ab8377a308e6b8f98a55301a55/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=413d255916a314ab8377a308e6b8f98a55301a55", "patch": "@@ -148,7 +148,7 @@ define_Conf! {\n     ///\n     /// Suppress lints whenever the suggested change would cause breakage for other crates.\n     (avoid_breaking_exported_api: bool = true),\n-    /// Lint: MANUAL_SPLIT_ONCE, MANUAL_STR_REPEAT, CLONED_INSTEAD_OF_COPIED, REDUNDANT_FIELD_NAMES, REDUNDANT_STATIC_LIFETIMES, FILTER_MAP_NEXT, CHECKED_CONVERSIONS, MANUAL_RANGE_CONTAINS, USE_SELF, MEM_REPLACE_WITH_DEFAULT, MANUAL_NON_EXHAUSTIVE, OPTION_AS_REF_DEREF, MAP_UNWRAP_OR, MATCH_LIKE_MATCHES_MACRO, MANUAL_STRIP, MISSING_CONST_FOR_FN, UNNESTED_OR_PATTERNS, FROM_OVER_INTO, PTR_AS_PTR, IF_THEN_SOME_ELSE_NONE, APPROX_CONSTANT.\n+    /// Lint: MANUAL_SPLIT_ONCE, MANUAL_STR_REPEAT, CLONED_INSTEAD_OF_COPIED, REDUNDANT_FIELD_NAMES, REDUNDANT_STATIC_LIFETIMES, FILTER_MAP_NEXT, CHECKED_CONVERSIONS, MANUAL_RANGE_CONTAINS, USE_SELF, MEM_REPLACE_WITH_DEFAULT, MANUAL_NON_EXHAUSTIVE, OPTION_AS_REF_DEREF, MAP_UNWRAP_OR, MATCH_LIKE_MATCHES_MACRO, MANUAL_STRIP, MISSING_CONST_FOR_FN, UNNESTED_OR_PATTERNS, FROM_OVER_INTO, PTR_AS_PTR, IF_THEN_SOME_ELSE_NONE, APPROX_CONSTANT, DEPRECATED_CFG_ATTR.\n     ///\n     /// The minimum rust version that the project supports\n     (msrv: Option<String> = None),"}, {"sha": "f3913203f4b4f21a67263ac1d7afd8a1402ec248", "filename": "clippy_utils/src/msrvs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/413d255916a314ab8377a308e6b8f98a55301a55/clippy_utils%2Fsrc%2Fmsrvs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413d255916a314ab8377a308e6b8f98a55301a55/clippy_utils%2Fsrc%2Fmsrvs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmsrvs.rs?ref=413d255916a314ab8377a308e6b8f98a55301a55", "patch": "@@ -27,7 +27,7 @@ msrv_aliases! {\n     1,36,0 { ITERATOR_COPIED }\n     1,35,0 { OPTION_COPIED, RANGE_CONTAINS }\n     1,34,0 { TRY_FROM }\n-    1,30,0 { ITERATOR_FIND_MAP }\n+    1,30,0 { ITERATOR_FIND_MAP, TOOL_ATTRIBUTES }\n     1,17,0 { FIELD_INIT_SHORTHAND, STATIC_IN_CONST }\n     1,16,0 { STR_REPEAT }\n }"}, {"sha": "a8aa3a76abc6c04a2bc1ec508af74ba946c96c45", "filename": "src/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/413d255916a314ab8377a308e6b8f98a55301a55/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413d255916a314ab8377a308e6b8f98a55301a55/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=413d255916a314ab8377a308e6b8f98a55301a55", "patch": "@@ -108,7 +108,7 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n \n             let conf = clippy_lints::read_conf(sess);\n             clippy_lints::register_plugins(lint_store, sess, &conf);\n-            clippy_lints::register_pre_expansion_lints(lint_store);\n+            clippy_lints::register_pre_expansion_lints(lint_store, sess, &conf);\n             clippy_lints::register_renamed(lint_store);\n         }));\n "}, {"sha": "57ed453da10b1137d54c2c9e70146bb835080e3c", "filename": "tests/ui/min_rust_version_attr.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/413d255916a314ab8377a308e6b8f98a55301a55/tests%2Fui%2Fmin_rust_version_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413d255916a314ab8377a308e6b8f98a55301a55/tests%2Fui%2Fmin_rust_version_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.rs?ref=413d255916a314ab8377a308e6b8f98a55301a55", "patch": "@@ -137,6 +137,9 @@ fn unnest_or_patterns() {\n     if let TS(0, x) | TS(1, x) = TS(0, 0) {}\n }\n \n+#[cfg_attr(rustfmt, rustfmt_skip)]\n+fn deprecated_cfg_attr() {}\n+\n fn main() {\n     filter_map_next();\n     checked_conversion();\n@@ -155,9 +158,9 @@ fn main() {\n     unnest_or_patterns();\n }\n \n-mod meets_msrv {\n+mod just_under_msrv {\n     #![feature(custom_inner_attributes)]\n-    #![clippy::msrv = \"1.45.0\"]\n+    #![clippy::msrv = \"1.44.0\"]\n \n     fn main() {\n         let s = \"hello, world!\";\n@@ -167,9 +170,9 @@ mod meets_msrv {\n     }\n }\n \n-mod just_under_msrv {\n+mod meets_msrv {\n     #![feature(custom_inner_attributes)]\n-    #![clippy::msrv = \"1.46.0\"]\n+    #![clippy::msrv = \"1.45.0\"]\n \n     fn main() {\n         let s = \"hello, world!\";\n@@ -181,7 +184,7 @@ mod just_under_msrv {\n \n mod just_above_msrv {\n     #![feature(custom_inner_attributes)]\n-    #![clippy::msrv = \"1.44.0\"]\n+    #![clippy::msrv = \"1.46.0\"]\n \n     fn main() {\n         let s = \"hello, world!\";"}, {"sha": "4388b78f832a3227cd2474f936142013d6175fea", "filename": "tests/ui/min_rust_version_attr.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/413d255916a314ab8377a308e6b8f98a55301a55/tests%2Fui%2Fmin_rust_version_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/413d255916a314ab8377a308e6b8f98a55301a55/tests%2Fui%2Fmin_rust_version_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.stderr?ref=413d255916a314ab8377a308e6b8f98a55301a55", "patch": "@@ -1,12 +1,12 @@\n error: stripping a prefix manually\n-  --> $DIR/min_rust_version_attr.rs:165:24\n+  --> $DIR/min_rust_version_attr.rs:180:24\n    |\n LL |             assert_eq!(s[\"hello, \".len()..].to_uppercase(), \"WORLD!\");\n    |                        ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::manual-strip` implied by `-D warnings`\n note: the prefix was tested here\n-  --> $DIR/min_rust_version_attr.rs:164:9\n+  --> $DIR/min_rust_version_attr.rs:179:9\n    |\n LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -17,13 +17,13 @@ LL ~             assert_eq!(<stripped>.to_uppercase(), \"WORLD!\");\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/min_rust_version_attr.rs:177:24\n+  --> $DIR/min_rust_version_attr.rs:192:24\n    |\n LL |             assert_eq!(s[\"hello, \".len()..].to_uppercase(), \"WORLD!\");\n    |                        ^^^^^^^^^^^^^^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/min_rust_version_attr.rs:176:9\n+  --> $DIR/min_rust_version_attr.rs:191:9\n    |\n LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}