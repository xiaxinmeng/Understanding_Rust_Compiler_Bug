{"sha": "9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "node_id": "C_kwDOAAsO6NoAKDlmNTlhYjU1ZTZlNWU4ODI1Y2ZjMzZiZDkwZWQ0ZDViMzg3ZWNkNzA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-07T03:03:35Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-27T17:56:57Z"}, "message": "Restore cyclic closure message", "tree": {"sha": "c29e64b29ec6bd647fefcc688a174c4d4c10e715", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c29e64b29ec6bd647fefcc688a174c4d4c10e715"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "html_url": "https://github.com/rust-lang/rust/commit/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0817b1d3ed26898e7d9ed71f6a2218d912ea6de5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0817b1d3ed26898e7d9ed71f6a2218d912ea6de5", "html_url": "https://github.com/rust-lang/rust/commit/0817b1d3ed26898e7d9ed71f6a2218d912ea6de5"}], "stats": {"total": 55, "additions": 37, "deletions": 18}, "files": [{"sha": "3453da500b984f8f55f706d150d6d138efb0c575", "filename": "compiler/rustc_hir_typeck/src/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs?ref=9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "patch": "@@ -227,7 +227,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 );\n                 // Make sure that we didn't infer a signature that mentions itself.\n                 // This can happen when we elaborate certain supertrait bounds that\n-                // mention projections containing the `Self` type. See \n+                // mention projections containing the `Self` type. See #105401.\n                 struct MentionsTy<'tcx> {\n                     expected_ty: Ty<'tcx>,\n                 }"}, {"sha": "fb7791879a150b6a5a88e08b34215adeaf7a5eff", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "patch": "@@ -33,7 +33,7 @@ use rustc_infer::infer::error_reporting::TypeErrCtxt;\n use rustc_infer::infer::{InferOk, TypeTrace};\n use rustc_middle::traits::select::OverflowError;\n use rustc_middle::ty::abstract_const::NotConstEvaluatable;\n-use rustc_middle::ty::error::ExpectedFound;\n+use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::fold::{TypeFolder, TypeSuperFoldable};\n use rustc_middle::ty::print::{with_forced_trimmed_paths, FmtPrinter, Print};\n use rustc_middle::ty::{\n@@ -1215,6 +1215,25 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                 }\n             }\n \n+            OutputTypeParameterMismatch(\n+                found_trait_ref,\n+                expected_trait_ref,\n+                terr @ TypeError::CyclicTy(_),\n+            ) => {\n+                let self_ty = found_trait_ref.self_ty().skip_binder();\n+                let (cause, terr) = if let ty::Closure(def_id, _) = self_ty.kind() {\n+                    (\n+                        ObligationCause::dummy_with_span(tcx.def_span(def_id)),\n+                        TypeError::CyclicTy(self_ty),\n+                    )\n+                } else {\n+                    (obligation.cause.clone(), terr)\n+                };\n+                self.report_and_explain_type_error(\n+                    TypeTrace::poly_trait_refs(&cause, true, expected_trait_ref, found_trait_ref),\n+                    terr,\n+                )\n+            }\n             OutputTypeParameterMismatch(found_trait_ref, expected_trait_ref, _) => {\n                 let found_trait_ref = self.resolve_vars_if_possible(found_trait_ref);\n                 let expected_trait_ref = self.resolve_vars_if_possible(expected_trait_ref);"}, {"sha": "dadae23fdf39989a69f63b5546e882ef92ab0a88", "filename": "src/test/ui/issues/issue-25439.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/src%2Ftest%2Fui%2Fissues%2Fissue-25439.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/src%2Ftest%2Fui%2Fissues%2Fissue-25439.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25439.stderr?ref=9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "patch": "@@ -1,13 +1,13 @@\n-error[E0631]: type mismatch in closure arguments\n-  --> $DIR/issue-25439.rs:8:5\n+error[E0644]: closure/generator type that references itself\n+  --> $DIR/issue-25439.rs:8:9\n    |\n LL |     fix(|_, x| x);\n-   |     ^^^ ------ found signature defined here\n-   |     |\n-   |     expected due to this\n+   |         ^^^^^^ cyclic type of infinite size\n    |\n-   = note: expected closure signature `for<'a> fn(Helper<'a, [closure@$DIR/issue-25439.rs:8:9: 8:15]>, i32) -> _`\n-              found closure signature `fn(_, _) -> _`\n+   = note: closures cannot capture themselves or take themselves as argument;\n+           this error may be the result of a recent compiler bug-fix,\n+           see issue #46062 <https://github.com/rust-lang/rust/issues/46062>\n+           for more information\n note: required by a bound in `fix`\n   --> $DIR/issue-25439.rs:3:33\n    |\n@@ -16,4 +16,4 @@ LL | fn fix<F>(f: F) -> i32 where F: Fn(Helper<F>, i32) -> i32 {\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0631`.\n+For more information about this error, try `rustc --explain E0644`."}, {"sha": "6d5dbca0558580a0e2dc934c7c112f946c83e4ed", "filename": "src/test/ui/unboxed-closures/unboxed-closure-no-cyclic-sig.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-no-cyclic-sig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-no-cyclic-sig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-no-cyclic-sig.stderr?ref=9f59ab55e6e5e8825cfc36bd90ed4d5b387ecd70", "patch": "@@ -1,13 +1,13 @@\n-error[E0631]: type mismatch in closure arguments\n-  --> $DIR/unboxed-closure-no-cyclic-sig.rs:8:5\n+error[E0644]: closure/generator type that references itself\n+  --> $DIR/unboxed-closure-no-cyclic-sig.rs:8:7\n    |\n LL |     g(|_| {  });\n-   |     ^ --- found signature defined here\n-   |     |\n-   |     expected due to this\n+   |       ^^^ cyclic type of infinite size\n    |\n-   = note: expected closure signature `fn(Option<[closure@$DIR/unboxed-closure-no-cyclic-sig.rs:8:7: 8:10]>) -> _`\n-              found closure signature `fn(_) -> _`\n+   = note: closures cannot capture themselves or take themselves as argument;\n+           this error may be the result of a recent compiler bug-fix,\n+           see issue #46062 <https://github.com/rust-lang/rust/issues/46062>\n+           for more information\n note: required by a bound in `g`\n   --> $DIR/unboxed-closure-no-cyclic-sig.rs:5:24\n    |\n@@ -16,4 +16,4 @@ LL | fn g<F>(_: F) where F: FnOnce(Option<F>) {}\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0631`.\n+For more information about this error, try `rustc --explain E0644`."}]}