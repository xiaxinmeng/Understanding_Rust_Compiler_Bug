{"sha": "b6c662c573014710d4e8d9fd9253793141d8bbe0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2YzY2MmM1NzMwMTQ3MTBkNGU4ZDlmZDkyNTM3OTMxNDFkOGJiZTA=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-07-19T05:53:12Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-07-20T18:39:04Z"}, "message": "If possible, show type lenses for the let bindings", "tree": {"sha": "2b680a1c7c50125ed6a90d8de20d9d15460349b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b680a1c7c50125ed6a90d8de20d9d15460349b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6c662c573014710d4e8d9fd9253793141d8bbe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6c662c573014710d4e8d9fd9253793141d8bbe0", "html_url": "https://github.com/rust-lang/rust/commit/b6c662c573014710d4e8d9fd9253793141d8bbe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6c662c573014710d4e8d9fd9253793141d8bbe0/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bde8012cb28c44de7ffc779003781d385323808", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bde8012cb28c44de7ffc779003781d385323808", "html_url": "https://github.com/rust-lang/rust/commit/7bde8012cb28c44de7ffc779003781d385323808"}], "stats": {"total": 64, "additions": 48, "deletions": 16}, "files": [{"sha": "223941688ac61971c5af0c39d443b4066db58aa7", "filename": "crates/ra_ide_api/src/display/structure.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b6c662c573014710d4e8d9fd9253793141d8bbe0/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6c662c573014710d4e8d9fd9253793141d8bbe0/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs?ref=b6c662c573014710d4e8d9fd9253793141d8bbe0", "patch": "@@ -1,5 +1,6 @@\n use crate::TextRange;\n \n+use ra_syntax::ast::PatKind;\n use ra_syntax::{\n     algo::visit::{visitor, Visitor},\n     ast::{self, AttrsOwner, NameOwner, TypeAscriptionOwner, TypeParamsOwner},\n@@ -155,6 +156,27 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n             }\n             decl(mc)\n         })\n+        .visit(|let_statement: &ast::LetStmt| {\n+            let let_syntax = let_statement.syntax();\n+\n+            let mut label = String::new();\n+            collapse_ws(let_syntax, &mut label);\n+\n+            let pat = match let_statement.pat()?.kind() {\n+                PatKind::BindPat(bind_pat) => bind_pat,\n+                _ => return None,\n+            };\n+\n+            Some(StructureNode {\n+                parent: None,\n+                label,\n+                navigation_range: pat.syntax().range(),\n+                node_range: let_syntax.range(),\n+                kind: let_syntax.kind(),\n+                detail: None,\n+                deprecated: false,\n+            })\n+        })\n         .accept(&node)?\n }\n "}, {"sha": "ea947417fb617644ba5ea81596e05b3aedc480c2", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/b6c662c573014710d4e8d9fd9253793141d8bbe0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6c662c573014710d4e8d9fd9253793141d8bbe0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=b6c662c573014710d4e8d9fd9253793141d8bbe0", "patch": "@@ -726,29 +726,39 @@ pub fn handle_code_lens(\n         }\n     }\n \n-    // Handle impls\n-    lenses.extend(\n-        world\n-            .analysis()\n-            .file_structure(file_id)\n-            .into_iter()\n-            .filter(|it| match it.kind {\n-                SyntaxKind::TRAIT_DEF | SyntaxKind::STRUCT_DEF | SyntaxKind::ENUM_DEF => true,\n-                _ => false,\n-            })\n-            .map(|it| {\n+    lenses.extend(world.analysis().file_structure(file_id).into_iter().filter_map(|it| {\n+        match it.kind {\n+            // Handle impls\n+            SyntaxKind::TRAIT_DEF | SyntaxKind::STRUCT_DEF | SyntaxKind::ENUM_DEF => {\n                 let range = it.node_range.conv_with(&line_index);\n                 let pos = range.start;\n                 let lens_params =\n                     req::TextDocumentPositionParams::new(params.text_document.clone(), pos);\n-                CodeLens {\n+                Some(CodeLens {\n                     range,\n                     command: None,\n                     data: Some(to_value(CodeLensResolveData::Impls(lens_params)).unwrap()),\n-                }\n-            }),\n-    );\n-\n+                })\n+            }\n+            // handle let statements\n+            SyntaxKind::LET_STMT => world\n+                .analysis()\n+                .type_of(FileRange { range: it.navigation_range, file_id })\n+                .ok()\n+                .and_then(std::convert::identity)\n+                .filter(|resolved_type| \"{unknown}\" != resolved_type)\n+                .map(|resolved_type| CodeLens {\n+                    range: it.node_range.conv_with(&line_index),\n+                    command: Some(Command {\n+                        title: resolved_type,\n+                        command: String::new(),\n+                        arguments: None,\n+                    }),\n+                    data: None,\n+                }),\n+            _ => None,\n+        }\n+    }));\n     Ok(Some(lenses))\n }\n "}]}