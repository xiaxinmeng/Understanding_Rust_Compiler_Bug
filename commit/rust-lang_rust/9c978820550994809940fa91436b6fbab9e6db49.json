{"sha": "9c978820550994809940fa91436b6fbab9e6db49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljOTc4ODIwNTUwOTk0ODA5OTQwZmE5MTQzNmI2ZmJhYjllNmRiNDk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-04-22T12:56:36Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-04-22T12:56:36Z"}, "message": "Fix line display", "tree": {"sha": "999be9edfdc4d0405dd0e446bd9e9309fd8cc54a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/999be9edfdc4d0405dd0e446bd9e9309fd8cc54a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c978820550994809940fa91436b6fbab9e6db49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c978820550994809940fa91436b6fbab9e6db49", "html_url": "https://github.com/rust-lang/rust/commit/9c978820550994809940fa91436b6fbab9e6db49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c978820550994809940fa91436b6fbab9e6db49/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91fb6bc1eb9874096e30cdac5152cdbd9d25dbf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/91fb6bc1eb9874096e30cdac5152cdbd9d25dbf4", "html_url": "https://github.com/rust-lang/rust/commit/91fb6bc1eb9874096e30cdac5152cdbd9d25dbf4"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "85a28bbfbc6d0bb0e636356327fbde67030cb00c", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9c978820550994809940fa91436b6fbab9e6db49/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c978820550994809940fa91436b6fbab9e6db49/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=9c978820550994809940fa91436b6fbab9e6db49", "patch": "@@ -719,7 +719,7 @@ pub fn old_find_testable_code(doc: &str, tests: &mut ::test::Collector, position\n                     text: *const hoedown_buffer,\n                     lang: *const hoedown_buffer,\n                     data: *const hoedown_renderer_data,\n-                    _line: libc::size_t) {\n+                    line: libc::size_t) {\n         unsafe {\n             if text.is_null() { return }\n             let block_info = if lang.is_null() {\n@@ -737,22 +737,18 @@ pub fn old_find_testable_code(doc: &str, tests: &mut ::test::Collector, position\n             let lines = text.lines().map(|l| {\n                 stripped_filtered_line(l).unwrap_or(l)\n             });\n+            let text = lines.collect::<Vec<&str>>().join(\"\\n\");\n             let filename = tests.get_filename();\n \n             if tests.render_type == RenderType::Hoedown {\n-                let text = (*text).as_bytes();\n-                let text = str::from_utf8(text).unwrap();\n-                let lines = text.lines().map(|l| {\n-                    stripped_filtered_line(l).unwrap_or(l)\n-                });\n-                let text = lines.collect::<Vec<&str>>().join(\"\\n\");\n+                let line = tests.get_line() + line;\n                 tests.add_test(text.to_owned(),\n                                block_info.should_panic, block_info.no_run,\n                                block_info.ignore, block_info.test_harness,\n                                block_info.compile_fail, block_info.error_codes,\n                                line, filename);\n             } else {\n-                tests.add_old_test(lines.collect::<Vec<&str>>().join(\"\\n\"), filename);\n+                tests.add_old_test(text, filename);\n             }\n         }\n     }"}, {"sha": "5b9ab304db0a9667ff27843166d7baca1aabf8d0", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c978820550994809940fa91436b6fbab9e6db49/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c978820550994809940fa91436b6fbab9e6db49/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=9c978820550994809940fa91436b6fbab9e6db49", "patch": "@@ -464,19 +464,19 @@ impl Collector {\n                     as_test_harness: bool, compile_fail: bool, error_codes: Vec<String>,\n                     line: usize, filename: String) {\n         let name = self.generate_name(line, &filename);\n+        // to be removed when hoedown is removed\n         if self.render_type == RenderType::Pulldown {\n             let name_beg = self.generate_name_beginning(&filename);\n             let mut found = false;\n-            // to be removed when hoedown is removed\n             let test = test.trim().to_owned();\n             if let Some(entry) = self.old_tests.get_mut(&name_beg) {\n                 found = entry.remove_item(&test).is_some();\n             }\n             if !found {\n                 let _ = writeln!(&mut io::stderr(),\n-                                 \"WARNING: {} Code block is not currently run as a test, but will in \\\n-                                  future versions of rustdoc. Please ensure this code block is a \\\n-                                  runnable test, or use the `ignore` directive.\",\n+                                 \"WARNING: {} Code block is not currently run as a test, but will \\\n+                                  in future versions of rustdoc. Please ensure this code block is \\\n+                                  a runnable test, or use the `ignore` directive.\",\n                                  name);\n                 return\n             }"}]}