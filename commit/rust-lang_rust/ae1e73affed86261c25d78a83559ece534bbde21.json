{"sha": "ae1e73affed86261c25d78a83559ece534bbde21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMWU3M2FmZmVkODYyNjFjMjVkNzhhODM1NTllY2U1MzRiYmRlMjE=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-05-16T12:50:01Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-05-17T10:46:08Z"}, "message": "Print secondary labels as notes in old skool mode", "tree": {"sha": "3045720ef30bcf1594895df02995ce6e5135b0ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3045720ef30bcf1594895df02995ce6e5135b0ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae1e73affed86261c25d78a83559ece534bbde21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1e73affed86261c25d78a83559ece534bbde21", "html_url": "https://github.com/rust-lang/rust/commit/ae1e73affed86261c25d78a83559ece534bbde21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae1e73affed86261c25d78a83559ece534bbde21/comments", "author": null, "committer": null, "parents": [{"sha": "5743564f2d0139b8249d2ede4e720a6452d9c1d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5743564f2d0139b8249d2ede4e720a6452d9c1d9", "html_url": "https://github.com/rust-lang/rust/commit/5743564f2d0139b8249d2ede4e720a6452d9c1d9"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "d797c6541e35e8c3bee64bd6bac9b9d1ea41033b", "filename": "src/libsyntax/errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae1e73affed86261c25d78a83559ece534bbde21/src%2Flibsyntax%2Ferrors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae1e73affed86261c25d78a83559ece534bbde21/src%2Flibsyntax%2Ferrors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Femitter.rs?ref=ae1e73affed86261c25d78a83559ece534bbde21", "patch": "@@ -524,6 +524,9 @@ impl Destination {\n             }\n             Style::Quotation => {\n             }\n+            Style::OldSkoolNote => {\n+                self.start_attr(term::Attr::Bold)?;\n+            }\n             Style::UnderlinePrimary | Style::LabelPrimary => {\n                 self.start_attr(term::Attr::Bold)?;\n                 self.start_attr(term::Attr::ForegroundColor(lvl.color()))?;"}, {"sha": "3b7e2f30706ead47f9591b1759d03bbf649a46e4", "filename": "src/libsyntax/errors/snippet/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ae1e73affed86261c25d78a83559ece534bbde21/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae1e73affed86261c25d78a83559ece534bbde21/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Fsnippet%2Fmod.rs?ref=ae1e73affed86261c25d78a83559ece534bbde21", "patch": "@@ -90,6 +90,7 @@ pub enum Style {\n     UnderlineSecondary,\n     LabelPrimary,\n     LabelSecondary,\n+    OldSkoolNote,\n     NoStyle,\n }\n \n@@ -497,6 +498,28 @@ impl FileInfo {\n                     match self.primary_span {\n                         Some(span) => {\n                             let lo = codemap.lookup_char_pos(span.lo);\n+                            //Before each secondary line in old skool-mode, print the label\n+                            //as an old-style note\n+                            if !line.annotations[0].is_primary {\n+                                if let Some(ann) = line.annotations[0].label.clone() {\n+                                    output.push(RenderedLine {\n+                                        text: vec![StyledString {\n+                                            text: lo.file.name.clone(),\n+                                            style: Style::FileNameStyle,\n+                                        }, StyledString {\n+                                            text: format!(\":{}:{}: \", lo.line, lo.col.0 + 1),\n+                                            style: Style::LineAndColumn,\n+                                        }, StyledString {\n+                                            text: format!(\"note: \"),\n+                                            style: Style::LabelSecondary,\n+                                        }, StyledString {\n+                                            text: format!(\"{}\", ann),\n+                                            style: Style::OldSkoolNote,\n+                                        }],\n+                                        kind: RenderedLineKind::Annotations,\n+                                    });\n+                                }\n+                            }\n                             rendered_lines[0].text.insert(0, StyledString {\n                                 text: format!(\":{} \", lo.line),\n                                 style: Style::LineAndColumn,"}]}