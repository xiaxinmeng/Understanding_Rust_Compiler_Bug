{"sha": "3ec8e6c5fdc16941da234476b3a59f0ef937cb39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYzhlNmM1ZmRjMTY5NDFkYTIzNDQ3NmIzYTU5ZjBlZjkzN2NiMzk=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-01T21:20:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-01T21:20:33Z"}, "message": "Rollup merge of #86783 - mark-i-m:mutex-drop-unsized, r=Xanewok\n\nMove Mutex::unlock to T: ?Sized\n\nr? ``@mbrubeck``\n\ncc https://github.com/rust-lang/rust/issues/81872", "tree": {"sha": "2eb1eb4f66d074c840df73a9a1c9584c32fd0333", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eb1eb4f66d074c840df73a9a1c9584c32fd0333"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ec8e6c5fdc16941da234476b3a59f0ef937cb39", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg3jGhCRBK7hj4Ov3rIwAATGYIABGRgNsBjgmvzFQpJusrXwTj\nTd64QSZzooWF1SUmyP7wehcsOfn9gSxGp/eUMjhNmdP46fpUyNGDCs4snbeF5wBh\ngdhCu795QH1KNRpEtkTjlHhB2BSQaAYlmLvvQobJ1WzrZQ09Hxzz8h8FTNS0nAo2\n9OTZihiQpKUM7J9ObEUQ8LXtTVtg22lUleghRia8gMr5ciyGHsyVfXzUXdil/SDQ\nJUTkTYjA+rv5sdaRgcxoUybp3mcxOxaqPLScYkD2DC2mxIQ8S9WWaxRrfv6Tf7hj\nZrFMOZ9mXyaBV+KGVtzgE4GjWbMbl8IjnfG275hdnj6rxvsHe57OhGV4c0Y0FEU=\n=Kc+J\n-----END PGP SIGNATURE-----\n", "payload": "tree 2eb1eb4f66d074c840df73a9a1c9584c32fd0333\nparent 59674cb259c686caf65d7a684f23a30fe2eda138\nparent 057bc913998fb9b057eb9723392b54f657c9ec4b\nauthor Yuki Okushi <jtitor@2k36.org> 1625174433 +0900\ncommitter GitHub <noreply@github.com> 1625174433 +0900\n\nRollup merge of #86783 - mark-i-m:mutex-drop-unsized, r=Xanewok\n\nMove Mutex::unlock to T: ?Sized\n\nr? ``@mbrubeck``\n\ncc https://github.com/rust-lang/rust/issues/81872\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec8e6c5fdc16941da234476b3a59f0ef937cb39", "html_url": "https://github.com/rust-lang/rust/commit/3ec8e6c5fdc16941da234476b3a59f0ef937cb39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ec8e6c5fdc16941da234476b3a59f0ef937cb39/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59674cb259c686caf65d7a684f23a30fe2eda138", "url": "https://api.github.com/repos/rust-lang/rust/commits/59674cb259c686caf65d7a684f23a30fe2eda138", "html_url": "https://github.com/rust-lang/rust/commit/59674cb259c686caf65d7a684f23a30fe2eda138"}, {"sha": "057bc913998fb9b057eb9723392b54f657c9ec4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/057bc913998fb9b057eb9723392b54f657c9ec4b", "html_url": "https://github.com/rust-lang/rust/commit/057bc913998fb9b057eb9723392b54f657c9ec4b"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "e1d6324c17e336e021714b71f5ae6bd34cfb7784", "filename": "library/std/src/sync/mutex.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3ec8e6c5fdc16941da234476b3a59f0ef937cb39/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ec8e6c5fdc16941da234476b3a59f0ef937cb39/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs?ref=3ec8e6c5fdc16941da234476b3a59f0ef937cb39", "patch": "@@ -217,26 +217,6 @@ impl<T> Mutex<T> {\n             data: UnsafeCell::new(t),\n         }\n     }\n-\n-    /// Immediately drops the guard, and consequently unlocks the mutex.\n-    ///\n-    /// This function is equivalent to calling [`drop`] on the guard but is more self-documenting.\n-    /// Alternately, the guard will be automatically dropped when it goes out of scope.\n-    ///\n-    /// ```\n-    /// #![feature(mutex_unlock)]\n-    ///\n-    /// use std::sync::Mutex;\n-    /// let mutex = Mutex::new(0);\n-    ///\n-    /// let mut guard = mutex.lock().unwrap();\n-    /// *guard += 20;\n-    /// Mutex::unlock(guard);\n-    /// ```\n-    #[unstable(feature = \"mutex_unlock\", issue = \"81872\")]\n-    pub fn unlock(guard: MutexGuard<'_, T>) {\n-        drop(guard);\n-    }\n }\n \n impl<T: ?Sized> Mutex<T> {\n@@ -333,6 +313,26 @@ impl<T: ?Sized> Mutex<T> {\n         }\n     }\n \n+    /// Immediately drops the guard, and consequently unlocks the mutex.\n+    ///\n+    /// This function is equivalent to calling [`drop`] on the guard but is more self-documenting.\n+    /// Alternately, the guard will be automatically dropped when it goes out of scope.\n+    ///\n+    /// ```\n+    /// #![feature(mutex_unlock)]\n+    ///\n+    /// use std::sync::Mutex;\n+    /// let mutex = Mutex::new(0);\n+    ///\n+    /// let mut guard = mutex.lock().unwrap();\n+    /// *guard += 20;\n+    /// Mutex::unlock(guard);\n+    /// ```\n+    #[unstable(feature = \"mutex_unlock\", issue = \"81872\")]\n+    pub fn unlock(guard: MutexGuard<'_, T>) {\n+        drop(guard);\n+    }\n+\n     /// Determines whether the mutex is poisoned.\n     ///\n     /// If another thread is active, the mutex can still become poisoned at any"}]}