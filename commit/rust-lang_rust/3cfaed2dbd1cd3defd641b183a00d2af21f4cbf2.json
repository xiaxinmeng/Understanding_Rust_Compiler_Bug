{"sha": "3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZmFlZDJkYmQxY2QzZGVmZDY0MWIxODNhMDBkMmFmMjFmNGNiZjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-20T09:40:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-20T09:40:55Z"}, "message": "Merge pull request #533 from RalfJung/cargo-miri-2018\n\nport cargo-miri-test to 2018 edition, mostly to test that that works with cargo miri", "tree": {"sha": "61b16542bf226272f01fef4537ff92098272bc56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61b16542bf226272f01fef4537ff92098272bc56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb89anCRBK7hj4Ov3rIwAAdHIIAKftgQcjvyCnHb7Xn+VjUEcE\na7YaphpDIucCVLQJUAqmsXRl0n6429earOONvl1gPTSgWLg1acYI+zkwQ0WDXIdj\ntweyoFcwpM/kF2INu60yx2Zw4GAVPPFmVyAE9KZEyaN71uRH2ZDnPvQb0U0HA/yl\nTeITtFKoWz+iIXMTj9ETLZbx0zndOQDJ6Br60wXU/xLtP3cGKVCw1tOP/Cvd/2Lk\nRjmJFsyP75ULfzSaYNmD9G2LaagzfgIku+/jejDpYlx5o7wxXIupUuwghlmePk0k\nKlT8kWfLzYSysmoBk3k49z2CViwtKIY6tPPSPXDhQj8ep/9oXPDVOYxXvXO79go=\n=/BLL\n-----END PGP SIGNATURE-----\n", "payload": "tree 61b16542bf226272f01fef4537ff92098272bc56\nparent adfede5cec2c8a136830f7fc309dbb45ac7a098a\nparent f41decc6e11b863e195c680c1965362929d731ff\nauthor Ralf Jung <post@ralfj.de> 1542706855 +0100\ncommitter GitHub <noreply@github.com> 1542706855 +0100\n\nMerge pull request #533 from RalfJung/cargo-miri-2018\n\nport cargo-miri-test to 2018 edition, mostly to test that that works with cargo miri"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2", "html_url": "https://github.com/rust-lang/rust/commit/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adfede5cec2c8a136830f7fc309dbb45ac7a098a", "url": "https://api.github.com/repos/rust-lang/rust/commits/adfede5cec2c8a136830f7fc309dbb45ac7a098a", "html_url": "https://github.com/rust-lang/rust/commit/adfede5cec2c8a136830f7fc309dbb45ac7a098a"}, {"sha": "f41decc6e11b863e195c680c1965362929d731ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/f41decc6e11b863e195c680c1965362929d731ff", "html_url": "https://github.com/rust-lang/rust/commit/f41decc6e11b863e195c680c1965362929d731ff"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "4fe009e025e137c75abe602b2e0d25e965186c56", "filename": "cargo-miri-test/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2/cargo-miri-test%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2/cargo-miri-test%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri-test%2FCargo.toml?ref=3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2", "patch": "@@ -2,6 +2,7 @@\n name = \"cargo-miri-test\"\n version = \"0.1.0\"\n authors = [\"Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de>\"]\n+edition = \"2018\"\n \n [dependencies]\n-byteorder = \"1.0\"\n\\ No newline at end of file\n+byteorder = \"1.0\""}, {"sha": "1ae88a7db5940884ac1e1cf487fdb28cbaca835d", "filename": "cargo-miri-test/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2/cargo-miri-test%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2/cargo-miri-test%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri-test%2Fsrc%2Fmain.rs?ref=3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2", "patch": "@@ -1,5 +1,3 @@\n-extern crate byteorder;\n-\n use byteorder::{BigEndian, ByteOrder};\n \n fn main() {"}, {"sha": "da4a351368d32a7028022281ced6affb8effa465", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=3cfaed2dbd1cd3defd641b183a00d2af21f4cbf2", "patch": "@@ -46,11 +46,15 @@ fn main() {\n     }\n \n     if let Some(\"miri\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n-        // this arm is when `cargo miri` is called\n+        // this arm is when `cargo miri` is called.  We call `cargo rustc` for\n+        // each applicable target, but with the RUSTC env var set to the `cargo-miri`\n+        // binary so that we come back in the other branch, and dispatch\n+        // the invocations to rustc and miri, respectively.\n \n         let test = std::env::args().nth(2).map_or(false, |text| text == \"test\");\n         let skip = if test { 3 } else { 2 };\n \n+        // We need to get the manifest, and then the metadata, to enumerate targets.\n         let manifest_path_arg = std::env::args().skip(skip).find(|val| {\n             val.starts_with(\"--manifest-path=\")\n         });\n@@ -92,6 +96,9 @@ fn main() {\n             })\n             .expect(\"could not find matching package\");\n         let package = metadata.packages.remove(package_index);\n+\n+        // Finally we got the metadata, iterate all targets and see for which ones\n+        // we do anything.\n         for target in package.targets {\n             let args = std::env::args().skip(skip);\n             let kind = target.kind.get(0).expect(\n@@ -139,7 +146,8 @@ fn main() {\n             }\n         }\n     } else {\n-        // this arm is executed when cargo-miri runs `cargo rustc` with the `RUSTC` env var set to itself\n+        // This arm is executed when cargo-miri runs `cargo rustc` with the `RUSTC` env var set to itself:\n+        // Dependencies get dispatched to rustc, the final test/binary to miri.\n \n         let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n         let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));"}]}