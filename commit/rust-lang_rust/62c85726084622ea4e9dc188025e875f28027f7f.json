{"sha": "62c85726084622ea4e9dc188025e875f28027f7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYzg1NzI2MDg0NjIyZWE0ZTlkYzE4ODAyNWU4NzVmMjgwMjdmN2Y=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-10T11:57:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-10T11:57:20Z"}, "message": "Merge #9840\n\n9840: minor: reword a bit r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "8c71c368c47c78f5e4e79e9295062c8694a0d73e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c71c368c47c78f5e4e79e9295062c8694a0d73e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62c85726084622ea4e9dc188025e875f28027f7f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhEmmgCRBK7hj4Ov3rIwAATYkIADVLyhrdSRJYA/jIFZ40KNRs\nh95Eok6JKw2t3cSJ/7VuFoaKyfsa5w323Z4/nAUk0gxaCIeE9jfqulaLyl87uqB/\nm3iC4nAKyIFwC9owo46VR5e63kJC8Jy0TOkNGilsFy85Dtkh92/GTu/H5J1HjW1G\ngp3o6wKSTRAAbANPvc4ut1TXjdSFxgD0+81Lugwz+oTycSqJl9GdvHtSqoB+SBUO\nwBPgmWI1X18+8rbvmIlBTNLp9xDvSvDt9O/WnCin3+B8OiIYRizs9gkVth+SkuvR\n22/9uP0yJsnPhi8F83hRoRFPt1mt4O6aPw15sED3xMJBoWNPbI1LyzBFg2lrmeM=\n=5k1y\n-----END PGP SIGNATURE-----\n", "payload": "tree 8c71c368c47c78f5e4e79e9295062c8694a0d73e\nparent 19c68f6392ffeb118612755946e2aeadd32bd8c0\nparent fc48def916795496588abc836b190a49bf97ceaa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628596640 +0000\ncommitter GitHub <noreply@github.com> 1628596640 +0000\n\nMerge #9840\n\n9840: minor: reword a bit r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62c85726084622ea4e9dc188025e875f28027f7f", "html_url": "https://github.com/rust-lang/rust/commit/62c85726084622ea4e9dc188025e875f28027f7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62c85726084622ea4e9dc188025e875f28027f7f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c68f6392ffeb118612755946e2aeadd32bd8c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/19c68f6392ffeb118612755946e2aeadd32bd8c0", "html_url": "https://github.com/rust-lang/rust/commit/19c68f6392ffeb118612755946e2aeadd32bd8c0"}, {"sha": "fc48def916795496588abc836b190a49bf97ceaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc48def916795496588abc836b190a49bf97ceaa", "html_url": "https://github.com/rust-lang/rust/commit/fc48def916795496588abc836b190a49bf97ceaa"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "257049915df7f634c67f0e598f4d09e09c7cdb0d", "filename": "docs/dev/style.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/62c85726084622ea4e9dc188025e875f28027f7f/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/62c85726084622ea4e9dc188025e875f28027f7f/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=62c85726084622ea4e9dc188025e875f28027f7f", "patch": "@@ -927,7 +927,7 @@ Between `ref` and mach ergonomics, the latter is more ergonomic in most cases, a\n \n ## Functional Combinators\n \n-Use high order monadic combinators like `map`, `then`, only when they are a natural choice, don't bend the code to fit into some combinator.\n+Use high order monadic combinators like `map`, `then` when they are a natural choice; don't bend the code to fit into some combinator.\n If writing a chain of combinators creates friction, replace them with control flow constructs: `for`, `if`, `match`.\n Mostly avoid `bool::then` and `Option::filter`.\n \n@@ -944,7 +944,7 @@ Some(x).filter(|it| it.cond())\n \n This rule is more \"soft\" then others, and boils down mostly to taste.\n The guiding principle behind this rule is that code should be dense in computation, and sparse in the number of expressions per line.\n-The second example contains *less* computation -- `filter` function is an indirection for `if`, it doesn't do any useful work by itself.\n+The second example contains *less* computation -- the `filter` function is an indirection for `if`, it doesn't do any useful work by itself.\n At the same time, it is more crowded -- it takes more time to visually scan it.\n \n **Rationale:** consistency, playing to language's strengths."}]}