{"sha": "91f8144906137335c3683b99d9c5c4ccaaebcde6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZjgxNDQ5MDYxMzczMzVjMzY4M2I5OWQ5YzVjNGNjYWFlYmNkZTY=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2016-12-13T17:50:30Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2017-01-19T21:52:38Z"}, "message": "Implement the \"static-nobundle\" library kind (RFC 1717).\n\nThese are static libraries that are not bundled (as the name implies) into rlibs and staticlibs that rustc generates,\nand must be present when the final binary artifact is being linked.", "tree": {"sha": "d77de7af4b93d41896cbb6fa1705e6ad55d14ac4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d77de7af4b93d41896cbb6fa1705e6ad55d14ac4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91f8144906137335c3683b99d9c5c4ccaaebcde6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91f8144906137335c3683b99d9c5c4ccaaebcde6", "html_url": "https://github.com/rust-lang/rust/commit/91f8144906137335c3683b99d9c5c4ccaaebcde6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91f8144906137335c3683b99d9c5c4ccaaebcde6/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e29b4d3876fc141a0c451c65045bda2c1f39534", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e29b4d3876fc141a0c451c65045bda2c1f39534", "html_url": "https://github.com/rust-lang/rust/commit/8e29b4d3876fc141a0c451c65045bda2c1f39534"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "e674b6ea8363e5413d4f685ccc379b3daa14ca1f", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -46,7 +46,7 @@ use rustc_back::target::Target;\n use hir;\n use rustc_back::PanicStrategy;\n \n-pub use self::NativeLibraryKind::{NativeStatic, NativeFramework, NativeUnknown};\n+pub use self::NativeLibraryKind::*;\n \n // lonely orphan structs and enums looking for a better home\n \n@@ -122,6 +122,7 @@ pub enum LinkagePreference {\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, RustcEncodable, RustcDecodable)]\n pub enum NativeLibraryKind {\n     NativeStatic,    // native static library (.a archive)\n+    NativeStaticNobundle, // native static library, which doesn't get bundled into .rlibs\n     NativeFramework, // OSX-specific\n     NativeUnknown,   // default way to specify a dynamic library\n }"}, {"sha": "ef68b2f76b07f6bfda1921769b98133e40646041", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -1473,6 +1473,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n             (Some(name), \"dylib\") => (name, cstore::NativeUnknown),\n             (Some(name), \"framework\") => (name, cstore::NativeFramework),\n             (Some(name), \"static\") => (name, cstore::NativeStatic),\n+            (Some(name), \"static-nobundle\") => (name, cstore::NativeStaticNobundle),\n             (_, s) => {\n                 early_error(error_format, &format!(\"unknown library kind `{}`, expected \\\n                                                   one of dylib, framework, or static\","}, {"sha": "d9c64d3e7b343069136ae145e643cdb853db4453", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -917,6 +917,7 @@ impl<'a> CrateLoader<'a> {\n             }).and_then(|a| a.value_str()).map(Symbol::as_str);\n             let kind = match kind.as_ref().map(|s| &s[..]) {\n                 Some(\"static\") => cstore::NativeStatic,\n+                Some(\"static-nobundle\") => cstore::NativeStaticNobundle,\n                 Some(\"dylib\") => cstore::NativeUnknown,\n                 Some(\"framework\") => cstore::NativeFramework,\n                 Some(k) => {"}, {"sha": "beba5faf3d03407c67f3c8558317a6b7188b1d97", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -32,7 +32,7 @@ use syntax::symbol::Symbol;\n use syntax_pos;\n \n pub use rustc::middle::cstore::{NativeLibrary, NativeLibraryKind, LinkagePreference};\n-pub use rustc::middle::cstore::{NativeStatic, NativeFramework, NativeUnknown};\n+pub use rustc::middle::cstore::NativeLibraryKind::*;\n pub use rustc::middle::cstore::{CrateSource, LinkMeta, LibSource};\n \n // A map from external crate numbers (as decoded from some crate file) to"}, {"sha": "aa42364f951c7a28a9c00f1b700dff312ae5de07", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -476,6 +476,7 @@ fn link_rlib<'a>(sess: &'a Session,\n     for lib in sess.cstore.used_libraries() {\n         match lib.kind {\n             NativeLibraryKind::NativeStatic => {}\n+            NativeLibraryKind::NativeStaticNobundle |\n             NativeLibraryKind::NativeFramework |\n             NativeLibraryKind::NativeUnknown => continue,\n         }\n@@ -674,6 +675,7 @@ fn link_staticlib(sess: &Session, objects: &[PathBuf], out_filename: &Path,\n \n     for lib in all_native_libs.iter().filter(|l| relevant_lib(sess, l)) {\n         let name = match lib.kind {\n+            NativeLibraryKind::NativeStaticNobundle |\n             NativeLibraryKind::NativeUnknown => \"library\",\n             NativeLibraryKind::NativeFramework => \"framework\",\n             // These are included, no need to print them\n@@ -985,6 +987,7 @@ fn add_local_native_libraries(cmd: &mut Linker, sess: &Session) {\n         match lib.kind {\n             NativeLibraryKind::NativeUnknown => cmd.link_dylib(&lib.name.as_str()),\n             NativeLibraryKind::NativeFramework => cmd.link_framework(&lib.name.as_str()),\n+            NativeLibraryKind::NativeStaticNobundle => cmd.link_staticlib(&lib.name.as_str()),\n             NativeLibraryKind::NativeStatic => bug!(),\n         }\n     }\n@@ -1229,6 +1232,7 @@ fn add_upstream_native_libraries(cmd: &mut Linker, sess: &Session) {\n             match lib.kind {\n                 NativeLibraryKind::NativeUnknown => cmd.link_dylib(&lib.name.as_str()),\n                 NativeLibraryKind::NativeFramework => cmd.link_framework(&lib.name.as_str()),\n+                NativeLibraryKind::NativeStaticNobundle => cmd.link_staticlib(&lib.name.as_str()),\n \n                 // ignore statically included native libraries here as we've\n                 // already included them when we included the rust library"}, {"sha": "b184d54ff9c6f7e14abbd869e1261b2dda18448b", "filename": "src/test/run-make/static-nobundle/Makefile", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-nobundle%2FMakefile?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -0,0 +1,13 @@\n+-include ../tools.mk\n+\n+all: $(call NATIVE_STATICLIB,foo)\n+\t$(RUSTC) bar.rs\n+\n+\t# Check that libbar.rlib does not contain the definition of `func`\n+\tnm $(TMPDIR)/libbar.rlib | (! grep \"T _*func\")\n+\tnm $(TMPDIR)/libbar.rlib | grep \"U _*func\"\n+\n+\t# Check that foo gets passed to the linker (as either `-l foo` or `foo.lib`)\n+\t$(RUSTC) main.rs -Z print-link-args | grep -e \"-l[\\\" ]*foo\" -e \"foo.lib\"\n+\n+\t$(call RUN,main)"}, {"sha": "e14b5a669f4407eb3923b02ba0cde5a7a04d1606", "filename": "src/test/run-make/static-nobundle/bar.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Fbar.rs?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+\n+#[link(name = \"foo\", kind = \"static-nobundle\")]\n+extern {\n+    pub fn func();\n+}\n+\n+pub fn wrapped_func() {\n+    unsafe {\n+        func();\n+    }\n+}"}, {"sha": "5ccf713f79c61dc964114278db8b80f7722f0e36", "filename": "src/test/run-make/static-nobundle/foo.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Ffoo.c?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+void func() {}"}, {"sha": "7aa730f1dd26bb9ebece7ce8eb30bf5778d11099", "filename": "src/test/run-make/static-nobundle/main.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f8144906137335c3683b99d9c5c4ccaaebcde6/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-nobundle%2Fmain.rs?ref=91f8144906137335c3683b99d9c5c4ccaaebcde6", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate bar;\n+\n+fn main() {\n+    unsafe { bar::func(); }\n+    bar::wrapped_func();\n+}"}]}