{"sha": "6c45e4540be20b7027ee6364eefc444b432b82ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNDVlNDU0MGJlMjBiNzAyN2VlNjM2NGVlZmM0NDRiNDMyYjgyYmE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-02-15T23:18:13Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-02-17T14:18:33Z"}, "message": "Drop unused argument to float functions", "tree": {"sha": "4e5c1f0479314301cc9f78e38b767688ae77952a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e5c1f0479314301cc9f78e38b767688ae77952a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c45e4540be20b7027ee6364eefc444b432b82ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c45e4540be20b7027ee6364eefc444b432b82ba", "html_url": "https://github.com/rust-lang/rust/commit/6c45e4540be20b7027ee6364eefc444b432b82ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c45e4540be20b7027ee6364eefc444b432b82ba/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd12cd3d2fe2fd69cff05d4b710c8020dea2cdf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd12cd3d2fe2fd69cff05d4b710c8020dea2cdf7", "html_url": "https://github.com/rust-lang/rust/commit/bd12cd3d2fe2fd69cff05d4b710c8020dea2cdf7"}], "stats": {"total": 464, "additions": 224, "deletions": 240}, "files": [{"sha": "5ef673009bb6d8469d765d081344db442194d33a", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c45e4540be20b7027ee6364eefc444b432b82ba/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c45e4540be20b7027ee6364eefc444b432b82ba/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=6c45e4540be20b7027ee6364eefc444b432b82ba", "patch": "@@ -29,7 +29,6 @@ where\n             *num,\n             sign,\n             precision,\n-            false,\n             buf.get_mut(),\n             parts.get_mut(),\n         );\n@@ -59,7 +58,6 @@ where\n             *num,\n             sign,\n             precision,\n-            false,\n             buf.get_mut(),\n             parts.get_mut(),\n         );"}, {"sha": "f5cd26a1852d61efbb1bd9d0303218059091f0f5", "filename": "src/libcore/num/flt2dec/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c45e4540be20b7027ee6364eefc444b432b82ba/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c45e4540be20b7027ee6364eefc444b432b82ba/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fflt2dec%2Fmod.rs?ref=6c45e4540be20b7027ee6364eefc444b432b82ba", "patch": "@@ -462,7 +462,6 @@ pub fn to_shortest_str<'a, T, F>(\n     v: T,\n     sign: Sign,\n     frac_digits: usize,\n-    _upper: bool,\n     buf: &'a mut [u8],\n     parts: &'a mut [Part<'a>],\n ) -> Formatted<'a>\n@@ -679,7 +678,6 @@ pub fn to_exact_fixed_str<'a, T, F>(\n     v: T,\n     sign: Sign,\n     frac_digits: usize,\n-    _upper: bool,\n     buf: &'a mut [u8],\n     parts: &'a mut [Part<'a>],\n ) -> Formatted<'a>"}, {"sha": "e945d9c4a54ce26c09e3c88d3dab4ef5d7275139", "filename": "src/libcore/tests/num/flt2dec/mod.rs", "status": "modified", "additions": 224, "deletions": 236, "changes": 460, "blob_url": "https://github.com/rust-lang/rust/blob/6c45e4540be20b7027ee6364eefc444b432b82ba/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c45e4540be20b7027ee6364eefc444b432b82ba/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs?ref=6c45e4540be20b7027ee6364eefc444b432b82ba", "patch": "@@ -500,102 +500,99 @@ where\n {\n     use core::num::flt2dec::Sign::*;\n \n-    fn to_string<T, F>(f: &mut F, v: T, sign: Sign, frac_digits: usize, upper: bool) -> String\n+    fn to_string<T, F>(f: &mut F, v: T, sign: Sign, frac_digits: usize) -> String\n     where\n         T: DecodableFloat,\n         F: FnMut(&Decoded, &mut [u8]) -> (usize, i16),\n     {\n         to_string_with_parts(|buf, parts| {\n-            to_shortest_str(|d, b| f(d, b), v, sign, frac_digits, upper, buf, parts)\n+            to_shortest_str(|d, b| f(d, b), v, sign, frac_digits, buf, parts)\n         })\n     }\n \n     let f = &mut f_;\n \n-    assert_eq!(to_string(f, 0.0, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlus, 0, false), \"+0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 0, false), \"+0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 0, false), \"-0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 0, false), \"+0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 0, false), \"-0\");\n-    assert_eq!(to_string(f, 0.0, Minus, 1, true), \"0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 1, true), \"0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlus, 1, true), \"+0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 1, true), \"+0.0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 8, true), \"0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 8, true), \"-0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 8, true), \"+0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 8, true), \"-0.00000000\");\n-\n-    assert_eq!(to_string(f, 1.0 / 0.0, Minus, 0, false), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, 0, true), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 0, false), \"+inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, 0, true), \"+inf\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, Minus, 0, false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, 1, true), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8, false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, 64, true), \"NaN\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, Minus, 0, false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, 1, true), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 8, false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, 64, true), \"-inf\");\n-\n-    assert_eq!(to_string(f, 3.14, Minus, 0, false), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 0, false), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 0, false), \"+3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 0, false), \"+3.14\");\n-    assert_eq!(to_string(f, -3.14, Minus, 0, false), \"-3.14\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 0, false), \"-3.14\");\n-    assert_eq!(to_string(f, -3.14, MinusPlus, 0, false), \"-3.14\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 0, false), \"-3.14\");\n-    assert_eq!(to_string(f, 3.14, Minus, 1, true), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 2, true), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 3, true), \"+3.140\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 4, true), \"+3.1400\");\n-    assert_eq!(to_string(f, -3.14, Minus, 8, true), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 8, true), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusPlus, 8, true), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 8, true), \"-3.14000000\");\n-\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 0, false), \"0.000000000075\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 3, false), \"0.000000000075\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 12, false), \"0.000000000075\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 13, false), \"0.0000000000750\");\n-\n-    assert_eq!(to_string(f, 1.9971e20, Minus, 0, false), \"199710000000000000000\");\n-    assert_eq!(to_string(f, 1.9971e20, Minus, 1, false), \"199710000000000000000.0\");\n-    assert_eq!(to_string(f, 1.9971e20, Minus, 8, false), \"199710000000000000000.00000000\");\n-\n-    assert_eq!(to_string(f, f32::MAX, Minus, 0, false), format!(\"34028235{:0>31}\", \"\"));\n-    assert_eq!(to_string(f, f32::MAX, Minus, 1, false), format!(\"34028235{:0>31}.0\", \"\"));\n-    assert_eq!(to_string(f, f32::MAX, Minus, 8, false), format!(\"34028235{:0>31}.00000000\", \"\"));\n+    assert_eq!(to_string(f, 0.0, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, 0.0, MinusRaw, 0), \"0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlus, 0), \"+0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 0), \"+0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, -0.0, MinusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 0), \"+0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, 0.0, Minus, 1), \"0.0\");\n+    assert_eq!(to_string(f, 0.0, MinusRaw, 1), \"0.0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlus, 1), \"+0.0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 1), \"+0.0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 8), \"0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusRaw, 8), \"-0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 8), \"+0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 8), \"-0.00000000\");\n+\n+    assert_eq!(to_string(f, 1.0 / 0.0, Minus, 0), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, 0), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 0), \"+inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, 0), \"+inf\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, Minus, 0), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, 1), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, 64), \"NaN\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, Minus, 0), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, 1), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 8), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, 64), \"-inf\");\n+\n+    assert_eq!(to_string(f, 3.14, Minus, 0), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusRaw, 0), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 0), \"+3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 0), \"+3.14\");\n+    assert_eq!(to_string(f, -3.14, Minus, 0), \"-3.14\");\n+    assert_eq!(to_string(f, -3.14, MinusRaw, 0), \"-3.14\");\n+    assert_eq!(to_string(f, -3.14, MinusPlus, 0), \"-3.14\");\n+    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 0), \"-3.14\");\n+    assert_eq!(to_string(f, 3.14, Minus, 1), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusRaw, 2), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 3), \"+3.140\");\n+    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 4), \"+3.1400\");\n+    assert_eq!(to_string(f, -3.14, Minus, 8), \"-3.14000000\");\n+    assert_eq!(to_string(f, -3.14, MinusRaw, 8), \"-3.14000000\");\n+    assert_eq!(to_string(f, -3.14, MinusPlus, 8), \"-3.14000000\");\n+    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 8), \"-3.14000000\");\n+\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 0), \"0.000000000075\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 3), \"0.000000000075\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 12), \"0.000000000075\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 13), \"0.0000000000750\");\n+\n+    assert_eq!(to_string(f, 1.9971e20, Minus, 0), \"199710000000000000000\");\n+    assert_eq!(to_string(f, 1.9971e20, Minus, 1), \"199710000000000000000.0\");\n+    assert_eq!(to_string(f, 1.9971e20, Minus, 8), \"199710000000000000000.00000000\");\n+\n+    assert_eq!(to_string(f, f32::MAX, Minus, 0), format!(\"34028235{:0>31}\", \"\"));\n+    assert_eq!(to_string(f, f32::MAX, Minus, 1), format!(\"34028235{:0>31}.0\", \"\"));\n+    assert_eq!(to_string(f, f32::MAX, Minus, 8), format!(\"34028235{:0>31}.00000000\", \"\"));\n \n     let minf32 = ldexp_f32(1.0, -149);\n-    assert_eq!(to_string(f, minf32, Minus, 0, false), format!(\"0.{:0>44}1\", \"\"));\n-    assert_eq!(to_string(f, minf32, Minus, 45, false), format!(\"0.{:0>44}1\", \"\"));\n-    assert_eq!(to_string(f, minf32, Minus, 46, false), format!(\"0.{:0>44}10\", \"\"));\n+    assert_eq!(to_string(f, minf32, Minus, 0), format!(\"0.{:0>44}1\", \"\"));\n+    assert_eq!(to_string(f, minf32, Minus, 45), format!(\"0.{:0>44}1\", \"\"));\n+    assert_eq!(to_string(f, minf32, Minus, 46), format!(\"0.{:0>44}10\", \"\"));\n \n-    assert_eq!(to_string(f, f64::MAX, Minus, 0, false), format!(\"17976931348623157{:0>292}\", \"\"));\n-    assert_eq!(to_string(f, f64::MAX, Minus, 1, false), format!(\"17976931348623157{:0>292}.0\", \"\"));\n-    assert_eq!(\n-        to_string(f, f64::MAX, Minus, 8, false),\n-        format!(\"17976931348623157{:0>292}.00000000\", \"\")\n-    );\n+    assert_eq!(to_string(f, f64::MAX, Minus, 0), format!(\"17976931348623157{:0>292}\", \"\"));\n+    assert_eq!(to_string(f, f64::MAX, Minus, 1), format!(\"17976931348623157{:0>292}.0\", \"\"));\n+    assert_eq!(to_string(f, f64::MAX, Minus, 8), format!(\"17976931348623157{:0>292}.00000000\", \"\"));\n \n     let minf64 = ldexp_f64(1.0, -1074);\n-    assert_eq!(to_string(f, minf64, Minus, 0, false), format!(\"0.{:0>323}5\", \"\"));\n-    assert_eq!(to_string(f, minf64, Minus, 324, false), format!(\"0.{:0>323}5\", \"\"));\n-    assert_eq!(to_string(f, minf64, Minus, 325, false), format!(\"0.{:0>323}50\", \"\"));\n+    assert_eq!(to_string(f, minf64, Minus, 0), format!(\"0.{:0>323}5\", \"\"));\n+    assert_eq!(to_string(f, minf64, Minus, 324), format!(\"0.{:0>323}5\", \"\"));\n+    assert_eq!(to_string(f, minf64, Minus, 325), format!(\"0.{:0>323}50\", \"\"));\n \n     if cfg!(miri) {\n         // Miri is too slow\n         return;\n     }\n \n     // very large output\n-    assert_eq!(to_string(f, 1.1, Minus, 80000, false), format!(\"1.1{:0>79999}\", \"\"));\n+    assert_eq!(to_string(f, 1.1, Minus, 80000), format!(\"1.1{:0>79999}\", \"\"));\n }\n \n pub fn to_shortest_exp_str_test<F>(mut f_: F)\n@@ -996,207 +993,198 @@ where\n {\n     use core::num::flt2dec::Sign::*;\n \n-    fn to_string<T, F>(f: &mut F, v: T, sign: Sign, frac_digits: usize, upper: bool) -> String\n+    fn to_string<T, F>(f: &mut F, v: T, sign: Sign, frac_digits: usize) -> String\n     where\n         T: DecodableFloat,\n         F: FnMut(&Decoded, &mut [u8], i16) -> (usize, i16),\n     {\n         to_string_with_parts(|buf, parts| {\n-            to_exact_fixed_str(|d, b, l| f(d, b, l), v, sign, frac_digits, upper, buf, parts)\n+            to_exact_fixed_str(|d, b, l| f(d, b, l), v, sign, frac_digits, buf, parts)\n         })\n     }\n \n     let f = &mut f_;\n \n-    assert_eq!(to_string(f, 0.0, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlus, 0, false), \"+0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 0, false), \"+0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 0, false), \"-0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 0, false), \"+0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 0, false), \"-0\");\n-    assert_eq!(to_string(f, 0.0, Minus, 1, true), \"0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 1, true), \"0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlus, 1, true), \"+0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 1, true), \"+0.0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 8, true), \"0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 8, true), \"-0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 8, true), \"+0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 8, true), \"-0.00000000\");\n-\n-    assert_eq!(to_string(f, 1.0 / 0.0, Minus, 0, false), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, 1, true), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 8, false), \"+inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, 64, true), \"+inf\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, Minus, 0, false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, 1, true), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8, false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, 64, true), \"NaN\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, Minus, 0, false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, 1, true), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 8, false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, 64, true), \"-inf\");\n-\n-    assert_eq!(to_string(f, 3.14, Minus, 0, false), \"3\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 0, false), \"3\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 0, false), \"+3\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 0, false), \"+3\");\n-    assert_eq!(to_string(f, -3.14, Minus, 0, false), \"-3\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 0, false), \"-3\");\n-    assert_eq!(to_string(f, -3.14, MinusPlus, 0, false), \"-3\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 0, false), \"-3\");\n-    assert_eq!(to_string(f, 3.14, Minus, 1, true), \"3.1\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 2, true), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 3, true), \"+3.140\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 4, true), \"+3.1400\");\n-    assert_eq!(to_string(f, -3.14, Minus, 8, true), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 8, true), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusPlus, 8, true), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 8, true), \"-3.14000000\");\n-\n-    assert_eq!(to_string(f, 0.195, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.195, MinusRaw, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.195, MinusPlus, 0, false), \"+0\");\n-    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 0, false), \"+0\");\n-    assert_eq!(to_string(f, -0.195, Minus, 0, false), \"-0\");\n-    assert_eq!(to_string(f, -0.195, MinusRaw, 0, false), \"-0\");\n-    assert_eq!(to_string(f, -0.195, MinusPlus, 0, false), \"-0\");\n-    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 0, false), \"-0\");\n-    assert_eq!(to_string(f, 0.195, Minus, 1, true), \"0.2\");\n-    assert_eq!(to_string(f, 0.195, MinusRaw, 2, true), \"0.20\");\n-    assert_eq!(to_string(f, 0.195, MinusPlus, 3, true), \"+0.195\");\n-    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 4, true), \"+0.1950\");\n-    assert_eq!(to_string(f, -0.195, Minus, 5, true), \"-0.19500\");\n-    assert_eq!(to_string(f, -0.195, MinusRaw, 6, true), \"-0.195000\");\n-    assert_eq!(to_string(f, -0.195, MinusPlus, 7, true), \"-0.1950000\");\n-    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 8, true), \"-0.19500000\");\n-\n-    assert_eq!(to_string(f, 999.5, Minus, 0, false), \"1000\");\n-    assert_eq!(to_string(f, 999.5, Minus, 1, false), \"999.5\");\n-    assert_eq!(to_string(f, 999.5, Minus, 2, false), \"999.50\");\n-    assert_eq!(to_string(f, 999.5, Minus, 3, false), \"999.500\");\n-    assert_eq!(to_string(f, 999.5, Minus, 30, false), \"999.500000000000000000000000000000\");\n-\n-    assert_eq!(to_string(f, 0.5, Minus, 0, false), \"1\");\n-    assert_eq!(to_string(f, 0.5, Minus, 1, false), \"0.5\");\n-    assert_eq!(to_string(f, 0.5, Minus, 2, false), \"0.50\");\n-    assert_eq!(to_string(f, 0.5, Minus, 3, false), \"0.500\");\n-\n-    assert_eq!(to_string(f, 0.95, Minus, 0, false), \"1\");\n-    assert_eq!(to_string(f, 0.95, Minus, 1, false), \"0.9\"); // because it really is less than 0.95\n-    assert_eq!(to_string(f, 0.95, Minus, 2, false), \"0.95\");\n-    assert_eq!(to_string(f, 0.95, Minus, 3, false), \"0.950\");\n-    assert_eq!(to_string(f, 0.95, Minus, 10, false), \"0.9500000000\");\n-    assert_eq!(to_string(f, 0.95, Minus, 30, false), \"0.949999999999999955591079014994\");\n-\n-    assert_eq!(to_string(f, 0.095, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.095, Minus, 1, false), \"0.1\");\n-    assert_eq!(to_string(f, 0.095, Minus, 2, false), \"0.10\");\n-    assert_eq!(to_string(f, 0.095, Minus, 3, false), \"0.095\");\n-    assert_eq!(to_string(f, 0.095, Minus, 4, false), \"0.0950\");\n-    assert_eq!(to_string(f, 0.095, Minus, 10, false), \"0.0950000000\");\n-    assert_eq!(to_string(f, 0.095, Minus, 30, false), \"0.095000000000000001110223024625\");\n-\n-    assert_eq!(to_string(f, 0.0095, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, 0.0095, Minus, 1, false), \"0.0\");\n-    assert_eq!(to_string(f, 0.0095, Minus, 2, false), \"0.01\");\n-    assert_eq!(to_string(f, 0.0095, Minus, 3, false), \"0.009\"); // really is less than 0.0095\n-    assert_eq!(to_string(f, 0.0095, Minus, 4, false), \"0.0095\");\n-    assert_eq!(to_string(f, 0.0095, Minus, 5, false), \"0.00950\");\n-    assert_eq!(to_string(f, 0.0095, Minus, 10, false), \"0.0095000000\");\n-    assert_eq!(to_string(f, 0.0095, Minus, 30, false), \"0.009499999999999999764077607267\");\n-\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 3, false), \"0.000\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 10, false), \"0.0000000001\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 11, false), \"0.00000000007\"); // ditto\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 12, false), \"0.000000000075\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 13, false), \"0.0000000000750\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 20, false), \"0.00000000007500000000\");\n-    assert_eq!(to_string(f, 7.5e-11, Minus, 30, false), \"0.000000000074999999999999999501\");\n-\n-    assert_eq!(to_string(f, 1.0e25, Minus, 0, false), \"10000000000000000905969664\");\n-    assert_eq!(to_string(f, 1.0e25, Minus, 1, false), \"10000000000000000905969664.0\");\n-    assert_eq!(to_string(f, 1.0e25, Minus, 3, false), \"10000000000000000905969664.000\");\n-\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 3, false), \"0.000\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 6, false), \"0.000001\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 9, false), \"0.000001000\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 12, false), \"0.000001000000\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 22, false), \"0.0000010000000000000000\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 23, false), \"0.00000099999999999999995\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 24, false), \"0.000000999999999999999955\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 25, false), \"0.0000009999999999999999547\");\n-    assert_eq!(to_string(f, 1.0e-6, Minus, 35, false), \"0.00000099999999999999995474811182589\");\n+    assert_eq!(to_string(f, 0.0, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, 0.0, MinusRaw, 0), \"0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlus, 0), \"+0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 0), \"+0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, -0.0, MinusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 0), \"+0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, 0.0, Minus, 1), \"0.0\");\n+    assert_eq!(to_string(f, 0.0, MinusRaw, 1), \"0.0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlus, 1), \"+0.0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 1), \"+0.0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 8), \"0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusRaw, 8), \"-0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 8), \"+0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 8), \"-0.00000000\");\n+\n+    assert_eq!(to_string(f, 1.0 / 0.0, Minus, 0), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, 1), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 8), \"+inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, 64), \"+inf\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, Minus, 0), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, 1), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, 64), \"NaN\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, Minus, 0), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, 1), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 8), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, 64), \"-inf\");\n+\n+    assert_eq!(to_string(f, 3.14, Minus, 0), \"3\");\n+    assert_eq!(to_string(f, 3.14, MinusRaw, 0), \"3\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 0), \"+3\");\n+    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 0), \"+3\");\n+    assert_eq!(to_string(f, -3.14, Minus, 0), \"-3\");\n+    assert_eq!(to_string(f, -3.14, MinusRaw, 0), \"-3\");\n+    assert_eq!(to_string(f, -3.14, MinusPlus, 0), \"-3\");\n+    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 0), \"-3\");\n+    assert_eq!(to_string(f, 3.14, Minus, 1), \"3.1\");\n+    assert_eq!(to_string(f, 3.14, MinusRaw, 2), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 3), \"+3.140\");\n+    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 4), \"+3.1400\");\n+    assert_eq!(to_string(f, -3.14, Minus, 8), \"-3.14000000\");\n+    assert_eq!(to_string(f, -3.14, MinusRaw, 8), \"-3.14000000\");\n+    assert_eq!(to_string(f, -3.14, MinusPlus, 8), \"-3.14000000\");\n+    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 8), \"-3.14000000\");\n+\n+    assert_eq!(to_string(f, 0.195, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, 0.195, MinusRaw, 0), \"0\");\n+    assert_eq!(to_string(f, 0.195, MinusPlus, 0), \"+0\");\n+    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 0), \"+0\");\n+    assert_eq!(to_string(f, -0.195, Minus, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.195, MinusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.195, MinusPlus, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, 0.195, Minus, 1), \"0.2\");\n+    assert_eq!(to_string(f, 0.195, MinusRaw, 2), \"0.20\");\n+    assert_eq!(to_string(f, 0.195, MinusPlus, 3), \"+0.195\");\n+    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 4), \"+0.1950\");\n+    assert_eq!(to_string(f, -0.195, Minus, 5), \"-0.19500\");\n+    assert_eq!(to_string(f, -0.195, MinusRaw, 6), \"-0.195000\");\n+    assert_eq!(to_string(f, -0.195, MinusPlus, 7), \"-0.1950000\");\n+    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 8), \"-0.19500000\");\n+\n+    assert_eq!(to_string(f, 999.5, Minus, 0), \"1000\");\n+    assert_eq!(to_string(f, 999.5, Minus, 1), \"999.5\");\n+    assert_eq!(to_string(f, 999.5, Minus, 2), \"999.50\");\n+    assert_eq!(to_string(f, 999.5, Minus, 3), \"999.500\");\n+    assert_eq!(to_string(f, 999.5, Minus, 30), \"999.500000000000000000000000000000\");\n+\n+    assert_eq!(to_string(f, 0.5, Minus, 0), \"1\");\n+    assert_eq!(to_string(f, 0.5, Minus, 1), \"0.5\");\n+    assert_eq!(to_string(f, 0.5, Minus, 2), \"0.50\");\n+    assert_eq!(to_string(f, 0.5, Minus, 3), \"0.500\");\n+\n+    assert_eq!(to_string(f, 0.95, Minus, 0), \"1\");\n+    assert_eq!(to_string(f, 0.95, Minus, 1), \"0.9\"); // because it really is less than 0.95\n+    assert_eq!(to_string(f, 0.95, Minus, 2), \"0.95\");\n+    assert_eq!(to_string(f, 0.95, Minus, 3), \"0.950\");\n+    assert_eq!(to_string(f, 0.95, Minus, 10), \"0.9500000000\");\n+    assert_eq!(to_string(f, 0.95, Minus, 30), \"0.949999999999999955591079014994\");\n+\n+    assert_eq!(to_string(f, 0.095, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, 0.095, Minus, 1), \"0.1\");\n+    assert_eq!(to_string(f, 0.095, Minus, 2), \"0.10\");\n+    assert_eq!(to_string(f, 0.095, Minus, 3), \"0.095\");\n+    assert_eq!(to_string(f, 0.095, Minus, 4), \"0.0950\");\n+    assert_eq!(to_string(f, 0.095, Minus, 10), \"0.0950000000\");\n+    assert_eq!(to_string(f, 0.095, Minus, 30), \"0.095000000000000001110223024625\");\n+\n+    assert_eq!(to_string(f, 0.0095, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, 0.0095, Minus, 1), \"0.0\");\n+    assert_eq!(to_string(f, 0.0095, Minus, 2), \"0.01\");\n+    assert_eq!(to_string(f, 0.0095, Minus, 3), \"0.009\"); // really is less than 0.0095\n+    assert_eq!(to_string(f, 0.0095, Minus, 4), \"0.0095\");\n+    assert_eq!(to_string(f, 0.0095, Minus, 5), \"0.00950\");\n+    assert_eq!(to_string(f, 0.0095, Minus, 10), \"0.0095000000\");\n+    assert_eq!(to_string(f, 0.0095, Minus, 30), \"0.009499999999999999764077607267\");\n+\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 3), \"0.000\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 10), \"0.0000000001\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 11), \"0.00000000007\"); // ditto\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 12), \"0.000000000075\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 13), \"0.0000000000750\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 20), \"0.00000000007500000000\");\n+    assert_eq!(to_string(f, 7.5e-11, Minus, 30), \"0.000000000074999999999999999501\");\n+\n+    assert_eq!(to_string(f, 1.0e25, Minus, 0), \"10000000000000000905969664\");\n+    assert_eq!(to_string(f, 1.0e25, Minus, 1), \"10000000000000000905969664.0\");\n+    assert_eq!(to_string(f, 1.0e25, Minus, 3), \"10000000000000000905969664.000\");\n+\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 3), \"0.000\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 6), \"0.000001\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 9), \"0.000001000\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 12), \"0.000001000000\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 22), \"0.0000010000000000000000\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 23), \"0.00000099999999999999995\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 24), \"0.000000999999999999999955\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 25), \"0.0000009999999999999999547\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 35), \"0.00000099999999999999995474811182589\");\n+    assert_eq!(to_string(f, 1.0e-6, Minus, 45), \"0.000000999999999999999954748111825886258685614\");\n     assert_eq!(\n-        to_string(f, 1.0e-6, Minus, 45, false),\n-        \"0.000000999999999999999954748111825886258685614\"\n-    );\n-    assert_eq!(\n-        to_string(f, 1.0e-6, Minus, 55, false),\n+        to_string(f, 1.0e-6, Minus, 55),\n         \"0.0000009999999999999999547481118258862586856139387236908\"\n     );\n     assert_eq!(\n-        to_string(f, 1.0e-6, Minus, 65, false),\n+        to_string(f, 1.0e-6, Minus, 65),\n         \"0.00000099999999999999995474811182588625868561393872369080781936646\"\n     );\n     assert_eq!(\n-        to_string(f, 1.0e-6, Minus, 75, false),\n+        to_string(f, 1.0e-6, Minus, 75),\n         \"0.000000999999999999999954748111825886258685613938723690807819366455078125000\"\n     );\n \n-    assert_eq!(to_string(f, f32::MAX, Minus, 0, false), \"340282346638528859811704183484516925440\");\n-    assert_eq!(\n-        to_string(f, f32::MAX, Minus, 1, false),\n-        \"340282346638528859811704183484516925440.0\"\n-    );\n-    assert_eq!(\n-        to_string(f, f32::MAX, Minus, 2, false),\n-        \"340282346638528859811704183484516925440.00\"\n-    );\n+    assert_eq!(to_string(f, f32::MAX, Minus, 0), \"340282346638528859811704183484516925440\");\n+    assert_eq!(to_string(f, f32::MAX, Minus, 1), \"340282346638528859811704183484516925440.0\");\n+    assert_eq!(to_string(f, f32::MAX, Minus, 2), \"340282346638528859811704183484516925440.00\");\n \n     if cfg!(miri) {\n         // Miri is too slow\n         return;\n     }\n \n     let minf32 = ldexp_f32(1.0, -149);\n-    assert_eq!(to_string(f, minf32, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, minf32, Minus, 1, false), \"0.0\");\n-    assert_eq!(to_string(f, minf32, Minus, 2, false), \"0.00\");\n-    assert_eq!(to_string(f, minf32, Minus, 4, false), \"0.0000\");\n-    assert_eq!(to_string(f, minf32, Minus, 8, false), \"0.00000000\");\n-    assert_eq!(to_string(f, minf32, Minus, 16, false), \"0.0000000000000000\");\n-    assert_eq!(to_string(f, minf32, Minus, 32, false), \"0.00000000000000000000000000000000\");\n+    assert_eq!(to_string(f, minf32, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, minf32, Minus, 1), \"0.0\");\n+    assert_eq!(to_string(f, minf32, Minus, 2), \"0.00\");\n+    assert_eq!(to_string(f, minf32, Minus, 4), \"0.0000\");\n+    assert_eq!(to_string(f, minf32, Minus, 8), \"0.00000000\");\n+    assert_eq!(to_string(f, minf32, Minus, 16), \"0.0000000000000000\");\n+    assert_eq!(to_string(f, minf32, Minus, 32), \"0.00000000000000000000000000000000\");\n     assert_eq!(\n-        to_string(f, minf32, Minus, 64, false),\n+        to_string(f, minf32, Minus, 64),\n         \"0.0000000000000000000000000000000000000000000014012984643248170709\"\n     );\n     assert_eq!(\n-        to_string(f, minf32, Minus, 128, false),\n+        to_string(f, minf32, Minus, 128),\n         \"0.0000000000000000000000000000000000000000000014012984643248170709\\\n                   2372958328991613128026194187651577175706828388979108268586060149\"\n     );\n     assert_eq!(\n-        to_string(f, minf32, Minus, 256, false),\n+        to_string(f, minf32, Minus, 256),\n         \"0.0000000000000000000000000000000000000000000014012984643248170709\\\n                   2372958328991613128026194187651577175706828388979108268586060148\\\n                   6638188362121582031250000000000000000000000000000000000000000000\\\n                   0000000000000000000000000000000000000000000000000000000000000000\"\n     );\n \n     assert_eq!(\n-        to_string(f, f64::MAX, Minus, 0, false),\n+        to_string(f, f64::MAX, Minus, 0),\n         \"1797693134862315708145274237317043567980705675258449965989174768\\\n                 0315726078002853876058955863276687817154045895351438246423432132\\\n                 6889464182768467546703537516986049910576551282076245490090389328\\\n                 9440758685084551339423045832369032229481658085593321233482747978\\\n                 26204144723168738177180919299881250404026184124858368\"\n     );\n     assert_eq!(\n-        to_string(f, f64::MAX, Minus, 10, false),\n+        to_string(f, f64::MAX, Minus, 10),\n         \"1797693134862315708145274237317043567980705675258449965989174768\\\n                 0315726078002853876058955863276687817154045895351438246423432132\\\n                 6889464182768467546703537516986049910576551282076245490090389328\\\n@@ -1205,16 +1193,16 @@ where\n     );\n \n     let minf64 = ldexp_f64(1.0, -1074);\n-    assert_eq!(to_string(f, minf64, Minus, 0, false), \"0\");\n-    assert_eq!(to_string(f, minf64, Minus, 1, false), \"0.0\");\n-    assert_eq!(to_string(f, minf64, Minus, 10, false), \"0.0000000000\");\n+    assert_eq!(to_string(f, minf64, Minus, 0), \"0\");\n+    assert_eq!(to_string(f, minf64, Minus, 1), \"0.0\");\n+    assert_eq!(to_string(f, minf64, Minus, 10), \"0.0000000000\");\n     assert_eq!(\n-        to_string(f, minf64, Minus, 100, false),\n+        to_string(f, minf64, Minus, 100),\n         \"0.0000000000000000000000000000000000000000000000000000000000000000\\\n                   000000000000000000000000000000000000\"\n     );\n     assert_eq!(\n-        to_string(f, minf64, Minus, 1000, false),\n+        to_string(f, minf64, Minus, 1000),\n         \"0.0000000000000000000000000000000000000000000000000000000000000000\\\n                   0000000000000000000000000000000000000000000000000000000000000000\\\n                   0000000000000000000000000000000000000000000000000000000000000000\\\n@@ -1234,15 +1222,15 @@ where\n     );\n \n     // very large output\n-    assert_eq!(to_string(f, 0.0, Minus, 80000, false), format!(\"0.{:0>80000}\", \"\"));\n-    assert_eq!(to_string(f, 1.0e1, Minus, 80000, false), format!(\"10.{:0>80000}\", \"\"));\n-    assert_eq!(to_string(f, 1.0e0, Minus, 80000, false), format!(\"1.{:0>80000}\", \"\"));\n+    assert_eq!(to_string(f, 0.0, Minus, 80000), format!(\"0.{:0>80000}\", \"\"));\n+    assert_eq!(to_string(f, 1.0e1, Minus, 80000), format!(\"10.{:0>80000}\", \"\"));\n+    assert_eq!(to_string(f, 1.0e0, Minus, 80000), format!(\"1.{:0>80000}\", \"\"));\n     assert_eq!(\n-        to_string(f, 1.0e-1, Minus, 80000, false),\n+        to_string(f, 1.0e-1, Minus, 80000),\n         format!(\"0.1000000000000000055511151231257827021181583404541015625{:0>79945}\", \"\")\n     );\n     assert_eq!(\n-        to_string(f, 1.0e-20, Minus, 80000, false),\n+        to_string(f, 1.0e-20, Minus, 80000),\n         format!(\n             \"0.0000000000000000000099999999999999994515327145420957165172950370\\\n                           2787392447107715776066783064379706047475337982177734375{:0>79881}\","}]}