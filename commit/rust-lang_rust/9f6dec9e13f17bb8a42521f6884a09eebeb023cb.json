{"sha": "9f6dec9e13f17bb8a42521f6884a09eebeb023cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNmRlYzllMTNmMTdiYjhhNDI1MjFmNjg4NGEwOWVlYmViMDIzY2I=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-10T23:03:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-10T23:03:58Z"}, "message": "Always bounce mul/div/mod ops. Closes #131 harder.", "tree": {"sha": "51ba27c76d0d129b4103b46282e8e3d252509a77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51ba27c76d0d129b4103b46282e8e3d252509a77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f6dec9e13f17bb8a42521f6884a09eebeb023cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6dec9e13f17bb8a42521f6884a09eebeb023cb", "html_url": "https://github.com/rust-lang/rust/commit/9f6dec9e13f17bb8a42521f6884a09eebeb023cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f6dec9e13f17bb8a42521f6884a09eebeb023cb/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b5bcf9cfb4f3f59e8f91ef4e178359dd499ef42", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5bcf9cfb4f3f59e8f91ef4e178359dd499ef42", "html_url": "https://github.com/rust-lang/rust/commit/5b5bcf9cfb4f3f59e8f91ef4e178359dd499ef42"}], "stats": {"total": 44, "additions": 7, "deletions": 37}, "files": [{"sha": "63cc67d0a275b04f07da08e833ca76e3393c6a8c", "filename": "src/Makefile", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f6dec9e13f17bb8a42521f6884a09eebeb023cb/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/9f6dec9e13f17bb8a42521f6884a09eebeb023cb/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=9f6dec9e13f17bb8a42521f6884a09eebeb023cb", "patch": "@@ -385,11 +385,7 @@ TASK_XFAILS := test/run-pass/acyclic-unwind.rs \\\n                test/run-pass/threads.rs \\\n                test/run-pass/yield.rs\n \n-TEST_XFAILS := test/run-pass/arith-0.rs\n-\n TEST_XFAILS_X86 :=  $(TASK_XFAILS) \\\n-\t\t\t\t\t$(TEST_XFAILS) \\\n-                    test/run-pass/arithmetic-interference.rs \\\n                     test/run-pass/bind-obj-ctor.rs \\\n                     test/run-pass/child-outlives-parent.rs \\\n                     test/run-pass/clone-with-exterior.rs \\\n@@ -419,13 +415,11 @@ TEST_XFAILS_X86 :=  $(TASK_XFAILS) \\\n                     test/compile-fail/writing-through-read-alias.rs\n \n TEST_XFAILS_LLVM := $(TASK_XFAILS) \\\n-\t\t\t\t\t$(TEST_XFAILS) \\\n                     $(addprefix test/run-pass/, \\\n                       arith-1.rs \\\n                       acyclic-unwind.rs \\\n                       alt-pattern-simple.rs \\\n                       alt-tag.rs \\\n-                      arithmetic-interference.rs \\\n                       argv.rs \\\n                       autoderef-full-lval.rs \\\n                       autoderef-objfn.rs \\"}, {"sha": "71f9cdcf084af0cc7120045c5ef85f69e7f013aa", "filename": "src/boot/be/x86.ml", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9f6dec9e13f17bb8a42521f6884a09eebeb023cb/src%2Fboot%2Fbe%2Fx86.ml", "raw_url": "https://github.com/rust-lang/rust/raw/9f6dec9e13f17bb8a42521f6884a09eebeb023cb/src%2Fboot%2Fbe%2Fx86.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fx86.ml?ref=9f6dec9e13f17bb8a42521f6884a09eebeb023cb", "patch": "@@ -303,48 +303,31 @@ let emit_target_specific\n                   let dst_eax = hr_like_cell eax dst in\n                   let lhs_eax = hr_like_op eax lhs in\n                   let rhs_ecx = hr_like_op ecx rhs in\n-                    (* Horrible: we bounce complex mul inputs off spill slots\n+                    (* Horrible: we bounce mul/div/mod inputs off spill slots\n                      * to ensure non-interference between the temporaries used\n                      * during mem-base-reg reloads and the registers we're\n                      * preparing.  *)\n                   let next_spill_like op =\n                     Il.Mem (Il.next_spill_slot e\n                               (Il.ScalarTy (Il.operand_scalar_ty op)))\n                   in\n-                  let is_mem op =\n-                    match op with\n-                        Il.Cell (Il.Mem _) -> true\n-                      | _ -> false\n-                  in\n-                  let bounce_lhs = is_mem lhs in\n-                  let bounce_rhs = is_mem rhs in\n                   let lhs_spill = next_spill_like lhs in\n                   let rhs_spill = next_spill_like rhs in\n \n-                    if bounce_lhs\n-                    then mov lhs_spill lhs;\n-\n-                    if bounce_rhs\n-                    then mov rhs_spill rhs;\n+                    mov lhs_spill lhs;\n+                    mov rhs_spill rhs;\n \n-                    mov lhs_eax\n-                      (if bounce_lhs\n-                       then (Il.Cell lhs_spill)\n-                       else lhs);\n+                    mov lhs_eax (Il.Cell lhs_spill);\n+                    mov rhs_ecx (Il.Cell rhs_spill);\n \n-                    mov rhs_ecx\n-                      (if bounce_rhs\n-                       then (Il.Cell rhs_spill)\n-                       else rhs);\n-                    \n                     put (Il.Binary\n                            { b with\n                                Il.binary_lhs = (Il.Cell lhs_eax);\n                                Il.binary_rhs = (Il.Cell rhs_ecx);\n                                Il.binary_dst = dst_eax; });\n                     if dst <> dst_eax\n                     then mov dst (Il.Cell dst_eax);\n-                    \n+\n               | _ when (Il.Cell dst) <> lhs ->\n                   mov dst lhs;\n                   put (Il.Binary"}, {"sha": "4fe6301217d75e812372ff0266eda0cc3daa18da", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f6dec9e13f17bb8a42521f6884a09eebeb023cb/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/9f6dec9e13f17bb8a42521f6884a09eebeb023cb/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=9f6dec9e13f17bb8a42521f6884a09eebeb023cb", "patch": "@@ -181,7 +181,7 @@ let trans_visitor\n       match q with\n         Il.Jmp _ -> flush_emitter_size_cache();\n         | _ -> ()\n-    end;        \n+    end;\n     Il.emit (emitter()) q\n   in\n "}, {"sha": "588148bb81fbfc1eb8ccd6607f745fdbf7aa5e56", "filename": "src/test/run-pass/arithmetic-interference.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5b5bcf9cfb4f3f59e8f91ef4e178359dd499ef42/src%2Ftest%2Frun-pass%2Farithmetic-interference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5bcf9cfb4f3f59e8f91ef4e178359dd499ef42/src%2Ftest%2Frun-pass%2Farithmetic-interference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farithmetic-interference.rs?ref=5b5bcf9cfb4f3f59e8f91ef4e178359dd499ef42", "patch": "@@ -1,7 +0,0 @@\n-// Testcase for issue #131.\n-\n-fn main() -> () {\n-  let int a = 10;\n-  log a;\n-  check (a * (a - 1) == 90);\n-}"}]}