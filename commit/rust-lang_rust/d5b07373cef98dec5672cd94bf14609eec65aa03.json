{"sha": "d5b07373cef98dec5672cd94bf14609eec65aa03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YjA3MzczY2VmOThkZWM1NjcyY2Q5NGJmMTQ2MDllZWM2NWFhMDM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-11T21:53:32Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-19T09:10:54Z"}, "message": "ty: projections in `transparent_newtype_field`\n\nThis commit modifies `transparent_newtype_field` so that it handles\nprojections with generic parameters, where `normalize_erasing_regions`\nwould ICE.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "695583d2fb9a40679893f2b08dc83557b2a3859c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/695583d2fb9a40679893f2b08dc83557b2a3859c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5b07373cef98dec5672cd94bf14609eec65aa03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl7sgR4ACgkQJZLnbIc4\nH9kt0A/8ClTI4q9mUHdqNnBW894Q1KPMxTKaugKJjnLYfurQdYhZ+M+dg2Uu4Vqk\niwi3qGHyfpcPYk4AlFsY0UqS4gyhLdxTePxSMOj9rp2ynODVXx1OafpsbkKElo8E\ntiGsaC93gQN6lkJgB95PFR5RlkurjmQJ/wcckOUMhzjuNM+z1VRHDwRZ4vioSfCr\nEGlq95LEwDG5KTmdSmmJ2WnRIQ5iGEbVXr6XjdwYIsqsj9zSu/2Cl01f560hGBOo\nrOkcvPCWti/gMJsi0l9T9eT3ZdW0sGnmeEOyUjIDBh4/Gc0wyizOd7sg/WRpGBG9\nkYqW/BVS3ScvjWLTUVo1cTBaJ2hxI3zM7mN5zz42Wd3xNu3DXGWkgG0M7gj29iEu\nH+UZUOFMPMZqNZN5M5HuvMOsJjLydqyJ0PiTw3c0cD3WdTNfMvjHV+kw5P4ADvk/\nHokXkkFEZ66yx0tg6qaWx+01TrqZegwsbD5xBoXCWqy4bpLH7ftungRZEv60CN+N\nXCrjHVN+nVxrBu/iaHdkGocND/0VwlYxTDz0oVG6gn1PYaGQ6VFMlN4pfLWVv9Xi\nPizk+Sog0c8MpQUTFErDCHjTrV1t73tILOXgafiPY9kY3cH9b5fsGcZDDJ/jcmCG\ndQxgPmHIflsBjH1qJMg4wbQhQKb/D2tlPc4DjJJonN8AkFL7tXA=\n=TpGW\n-----END PGP SIGNATURE-----", "payload": "tree 695583d2fb9a40679893f2b08dc83557b2a3859c\nparent a39c7787ba246353178e099373b9240be0d9e603\nauthor David Wood <david@davidtw.co> 1591912412 +0100\ncommitter David Wood <david@davidtw.co> 1592557854 +0100\n\nty: projections in `transparent_newtype_field`\n\nThis commit modifies `transparent_newtype_field` so that it handles\nprojections with generic parameters, where `normalize_erasing_regions`\nwould ICE.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b07373cef98dec5672cd94bf14609eec65aa03", "html_url": "https://github.com/rust-lang/rust/commit/d5b07373cef98dec5672cd94bf14609eec65aa03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5b07373cef98dec5672cd94bf14609eec65aa03/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a39c7787ba246353178e099373b9240be0d9e603", "url": "https://api.github.com/repos/rust-lang/rust/commits/a39c7787ba246353178e099373b9240be0d9e603", "html_url": "https://github.com/rust-lang/rust/commit/a39c7787ba246353178e099373b9240be0d9e603"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "1f94c28b3572374dc358cc1ce79298c5bf00ee57", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d5b07373cef98dec5672cd94bf14609eec65aa03/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b07373cef98dec5672cd94bf14609eec65aa03/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=d5b07373cef98dec5672cd94bf14609eec65aa03", "patch": "@@ -2387,11 +2387,15 @@ impl<'tcx> AdtDef {\n         assert!(self.is_struct() && self.repr.transparent());\n \n         for field in &self.non_enum_variant().fields {\n-            let field_ty = tcx.normalize_erasing_regions(\n-                param_env,\n-                field.ty(tcx, InternalSubsts::identity_for_item(tcx, self.did)),\n-            );\n+            let field_ty = field.ty(tcx, InternalSubsts::identity_for_item(tcx, self.did));\n+\n+            // `normalize_erasing_regions` will fail for projections that contain generic\n+            // parameters, so check these before normalizing.\n+            if field_ty.has_projections() && field_ty.needs_subst() {\n+                return Some(field);\n+            }\n \n+            let field_ty = tcx.normalize_erasing_regions(param_env, field_ty);\n             if !field_ty.is_zst(tcx, self.did) {\n                 return Some(field);\n             }"}, {"sha": "cf416c3fe8b12a85aca5507bff6a37ed532157ff", "filename": "src/test/ui/lint/lint-ctypes-73249-1.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d5b07373cef98dec5672cd94bf14609eec65aa03/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b07373cef98dec5672cd94bf14609eec65aa03/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249-1.rs?ref=d5b07373cef98dec5672cd94bf14609eec65aa03", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+#![deny(improper_ctypes)]\n+\n+pub trait Foo {\n+    type Assoc: 'static;\n+}\n+\n+impl Foo for () {\n+    type Assoc = u32;\n+}\n+\n+extern \"C\" {\n+    pub fn lint_me(x: Bar<()>);\n+}\n+\n+#[repr(transparent)]\n+pub struct Bar<T: Foo> {\n+    value: &'static <T as Foo>::Assoc,\n+}\n+\n+fn main() {}"}, {"sha": "5b48fa9b7376f50d33156c61ca8ddccc8a1be234", "filename": "src/test/ui/lint/lint-ctypes-73249.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d5b07373cef98dec5672cd94bf14609eec65aa03/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b07373cef98dec5672cd94bf14609eec65aa03/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-73249.rs?ref=d5b07373cef98dec5672cd94bf14609eec65aa03", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+#![deny(improper_ctypes)]\n+\n+pub trait Foo {\n+    type Assoc;\n+}\n+\n+impl Foo for () {\n+    type Assoc = u32;\n+}\n+\n+extern \"C\" {\n+    pub fn lint_me(x: Bar<()>);\n+}\n+\n+#[repr(transparent)]\n+pub struct Bar<T: Foo> {\n+    value: <T as Foo>::Assoc,\n+}\n+\n+fn main() {}"}]}