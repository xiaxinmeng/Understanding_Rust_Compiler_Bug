{"sha": "e97825ed5ef3975ff6b138e16147802979df4ef3", "node_id": "C_kwDOAAsO6NoAKGU5NzgyNWVkNWVmMzk3NWZmNmIxMzhlMTYxNDc4MDI5NzlkZjRlZjM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-11T11:06:11Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-16T01:10:13Z"}, "message": "Shrink `ast::Attribute`.", "tree": {"sha": "d607d46cef4ca3d0b1a01512cb5b919d5099743d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d607d46cef4ca3d0b1a01512cb5b919d5099743d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e97825ed5ef3975ff6b138e16147802979df4ef3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e97825ed5ef3975ff6b138e16147802979df4ef3", "html_url": "https://github.com/rust-lang/rust/commit/e97825ed5ef3975ff6b138e16147802979df4ef3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e97825ed5ef3975ff6b138e16147802979df4ef3/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76be14b5cadd56e18af721c830c5592621b19cb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/76be14b5cadd56e18af721c830c5592621b19cb7", "html_url": "https://github.com/rust-lang/rust/commit/76be14b5cadd56e18af721c830c5592621b19cb7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "032922d421df7a340d9f55b699bb7ffac46a0a6d", "filename": "src/skip.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97825ed5ef3975ff6b138e16147802979df4ef3/src%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97825ed5ef3975ff6b138e16147802979df4ef3/src%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fskip.rs?ref=e97825ed5ef3975ff6b138e16147802979df4ef3", "patch": "@@ -58,8 +58,8 @@ fn get_skip_names(kind: &str, attrs: &[ast::Attribute]) -> Vec<String> {\n     for attr in attrs {\n         // rustc_ast::ast::Path is implemented partialEq\n         // but it is designed for segments.len() == 1\n-        if let ast::AttrKind::Normal(attr_item, _) = &attr.kind {\n-            if pprust::path_to_string(&attr_item.path) != path {\n+        if let ast::AttrKind::Normal(normal) = &attr.kind {\n+            if pprust::path_to_string(&normal.item.path) != path {\n                 continue;\n             }\n         }"}, {"sha": "7bb745eeb8b9b7752dd85fd9ddef94b45bf7ea61", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97825ed5ef3975ff6b138e16147802979df4ef3/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97825ed5ef3975ff6b138e16147802979df4ef3/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=e97825ed5ef3975ff6b138e16147802979df4ef3", "patch": "@@ -811,8 +811,8 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 );\n             } else {\n                 match &attr.kind {\n-                    ast::AttrKind::Normal(ref attribute_item, _)\n-                        if self.is_unknown_rustfmt_attr(&attribute_item.path.segments) =>\n+                    ast::AttrKind::Normal(ref normal)\n+                        if self.is_unknown_rustfmt_attr(&normal.item.path.segments) =>\n                     {\n                         let file_name = self.parse_sess.span_to_filename(attr.span);\n                         self.report.append("}]}