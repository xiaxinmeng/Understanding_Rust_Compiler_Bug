{"sha": "0670d0b59bf49f6f5d9700abdb4add828e1ddc2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NzBkMGI1OWJmNDlmNmY1ZDk3MDBhYmRiNGFkZDgyOGUxZGRjMmM=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-08-06T09:09:53Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-08-06T09:09:53Z"}, "message": "fixing dogfood", "tree": {"sha": "94d874ea45bd9acb5f0a110e7aeaeb45eafe3b42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94d874ea45bd9acb5f0a110e7aeaeb45eafe3b42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0670d0b59bf49f6f5d9700abdb4add828e1ddc2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0670d0b59bf49f6f5d9700abdb4add828e1ddc2c", "html_url": "https://github.com/rust-lang/rust/commit/0670d0b59bf49f6f5d9700abdb4add828e1ddc2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0670d0b59bf49f6f5d9700abdb4add828e1ddc2c/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb2d61b4afaaee0e6370573ef99fa8b71cd4994", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb2d61b4afaaee0e6370573ef99fa8b71cd4994", "html_url": "https://github.com/rust-lang/rust/commit/4bb2d61b4afaaee0e6370573ef99fa8b71cd4994"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "70f25e7dff0a93e08d1faab2b8fe59a879640c5d", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0670d0b59bf49f6f5d9700abdb4add828e1ddc2c/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0670d0b59bf49f6f5d9700abdb4add828e1ddc2c/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=0670d0b59bf49f6f5d9700abdb4add828e1ddc2c", "patch": "@@ -407,7 +407,7 @@ fn is_allowed(cx: &LateContext, expr: &Expr) -> bool {\n             FloatTy::F32 => {\n                 let zero = ConstFloat {\n                     ty: FloatTy::F32,\n-                    bits: 0.0f32.to_bits() as u128,\n+                    bits: 0.0_f32.to_bits() as u128,\n                 };\n \n                 let infinity = ConstFloat {\n@@ -426,7 +426,7 @@ fn is_allowed(cx: &LateContext, expr: &Expr) -> bool {\n             FloatTy::F64 => {\n                 let zero = ConstFloat {\n                     ty: FloatTy::F64,\n-                    bits: 0.0f64.to_bits() as u128,\n+                    bits: 0.0_f64.to_bits() as u128,\n                 };\n \n                 let infinity = ConstFloat {"}]}