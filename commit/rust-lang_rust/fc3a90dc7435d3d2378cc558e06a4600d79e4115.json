{"sha": "fc3a90dc7435d3d2378cc558e06a4600d79e4115", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjM2E5MGRjNzQzNWQzZDIzNzhjYzU1OGUwNmE0NjAwZDc5ZTQxMTU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-08-13T13:29:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-13T13:29:11Z"}, "message": "Rollup merge of #87966 - pietroalbini:fix-pidfd-test, r=m-ou-se\n\nFix `command-create-pidfd` test inside unprivileged Docker containers\n\nIn `src/test/ui/command/command-create-pidfd.rs` (added #81825), the detection code to skip the test on unsupported platforms doesn't account for unprivileged Docker containers (CI uses privileged containers), which leads to a test failure as you can't call the `clone3` syscall in that environment. This PR enhances the detection code to also consider unprivileged containers.", "tree": {"sha": "23ed6179372472243b2695486b8a74f4e264ff29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23ed6179372472243b2695486b8a74f4e264ff29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc3a90dc7435d3d2378cc558e06a4600d79e4115", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhFnOnCRBK7hj4Ov3rIwAA+S0IABUBkXaBNPb6K5UPHoQhuy9R\nF71w148/pKynvV/kEt5ca/g/xpKkDsgmy/rmgiA/j+t2ctTUe89MFAbwC2LIcDHy\nCF2H7wwzziwfxwQEIDb8b5Pu3AQza+b26mN5xvTQFPE1XJXneotBjmMYnQkCTo4w\nPuZDwLIlLi6T78MPGeuzwwe9V/feN7DkiFc7HbwZBfbtO7pn1qaFa2giRrEGIfaY\nt93C0NE0MwMpQbt3vWcxMVAUtSP7TlCzuu1ohij1CSeOuDcgEtvi1VKl9gAlPk14\nNjE89JeqO2rI0asSXZIgCMHTV8qGoCbrL9q0BTaX+ghah38Defj1/tmAjiKm5KM=\n=hkeJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 23ed6179372472243b2695486b8a74f4e264ff29\nparent 717f9e37696703670108f47c5dff261ca9d4d834\nparent 7a7d2d1779d47cba5686136047e591346ca9f097\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1628861351 +0200\ncommitter GitHub <noreply@github.com> 1628861351 +0200\n\nRollup merge of #87966 - pietroalbini:fix-pidfd-test, r=m-ou-se\n\nFix `command-create-pidfd` test inside unprivileged Docker containers\n\nIn `src/test/ui/command/command-create-pidfd.rs` (added #81825), the detection code to skip the test on unsupported platforms doesn't account for unprivileged Docker containers (CI uses privileged containers), which leads to a test failure as you can't call the `clone3` syscall in that environment. This PR enhances the detection code to also consider unprivileged containers.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3a90dc7435d3d2378cc558e06a4600d79e4115", "html_url": "https://github.com/rust-lang/rust/commit/fc3a90dc7435d3d2378cc558e06a4600d79e4115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc3a90dc7435d3d2378cc558e06a4600d79e4115/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717f9e37696703670108f47c5dff261ca9d4d834", "url": "https://api.github.com/repos/rust-lang/rust/commits/717f9e37696703670108f47c5dff261ca9d4d834", "html_url": "https://github.com/rust-lang/rust/commit/717f9e37696703670108f47c5dff261ca9d4d834"}, {"sha": "7a7d2d1779d47cba5686136047e591346ca9f097", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7d2d1779d47cba5686136047e591346ca9f097", "html_url": "https://github.com/rust-lang/rust/commit/7a7d2d1779d47cba5686136047e591346ca9f097"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "4df443c66d65bc0b2339b0e9a89b17f7663ecc8c", "filename": "src/test/ui/command/command-create-pidfd.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fc3a90dc7435d3d2378cc558e06a4600d79e4115/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3a90dc7435d3d2378cc558e06a4600d79e4115/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcommand%2Fcommand-create-pidfd.rs?ref=fc3a90dc7435d3d2378cc558e06a4600d79e4115", "patch": "@@ -15,7 +15,18 @@ fn has_clone3() -> bool {\n     let err = (res == -1)\n         .then(|| Error::last_os_error())\n         .expect(\"probe syscall should not succeed\");\n-    err.raw_os_error() != Some(libc::ENOSYS)\n+\n+    // If the `clone3` syscall is not implemented in the current kernel version it should return an\n+    // `ENOSYS` error. Docker also blocks the whole syscall inside unprivileged containers, and\n+    // returns `EPERM` (instead of `ENOSYS`) when a program tries to invoke the syscall. Because of\n+    // that we need to check for *both* `ENOSYS` and `EPERM`.\n+    //\n+    // Note that Docker's behavior is breaking other projects (notably glibc), so they're planning\n+    // to update their filtering to return `ENOSYS` in a future release:\n+    //\n+    //     https://github.com/moby/moby/issues/42680\n+    //\n+    err.raw_os_error() != Some(libc::ENOSYS) && err.raw_os_error() != Some(libc::EPERM)\n }\n \n fn main() {"}]}