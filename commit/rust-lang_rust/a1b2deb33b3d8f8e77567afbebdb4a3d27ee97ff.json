{"sha": "a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYjJkZWIzM2IzZDhmOGU3NzU2N2FmYmViZGI0YTNkMjdlZTk3ZmY=", "commit": {"author": {"name": "Tim JIANG", "email": "p90eri@gmail.com", "date": "2015-08-09T05:15:50Z"}, "committer": {"name": "Overmind JIANG", "email": "p90eri@gmail.com", "date": "2015-08-23T07:38:11Z"}, "message": "New cross target: i686-linux-android\n\n- All the libstd tests are now passing in the optimized build against\n  a Zenfone2 and the x86 Android simulator.", "tree": {"sha": "fe7a50dc54fd4d3525d5888fad69433ece2bede9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe7a50dc54fd4d3525d5888fad69433ece2bede9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "html_url": "https://github.com/rust-lang/rust/commit/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/comments", "author": {"login": "overminder", "id": 465133, "node_id": "MDQ6VXNlcjQ2NTEzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/465133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/overminder", "html_url": "https://github.com/overminder", "followers_url": "https://api.github.com/users/overminder/followers", "following_url": "https://api.github.com/users/overminder/following{/other_user}", "gists_url": "https://api.github.com/users/overminder/gists{/gist_id}", "starred_url": "https://api.github.com/users/overminder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/overminder/subscriptions", "organizations_url": "https://api.github.com/users/overminder/orgs", "repos_url": "https://api.github.com/users/overminder/repos", "events_url": "https://api.github.com/users/overminder/events{/privacy}", "received_events_url": "https://api.github.com/users/overminder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "overminder", "id": 465133, "node_id": "MDQ6VXNlcjQ2NTEzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/465133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/overminder", "html_url": "https://github.com/overminder", "followers_url": "https://api.github.com/users/overminder/followers", "following_url": "https://api.github.com/users/overminder/following{/other_user}", "gists_url": "https://api.github.com/users/overminder/gists{/gist_id}", "starred_url": "https://api.github.com/users/overminder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/overminder/subscriptions", "organizations_url": "https://api.github.com/users/overminder/orgs", "repos_url": "https://api.github.com/users/overminder/repos", "events_url": "https://api.github.com/users/overminder/events{/privacy}", "received_events_url": "https://api.github.com/users/overminder/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e617a17369ef403268adcebc5e3e32a0bb5cf04c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e617a17369ef403268adcebc5e3e32a0bb5cf04c", "html_url": "https://github.com/rust-lang/rust/commit/e617a17369ef403268adcebc5e3e32a0bb5cf04c"}], "stats": {"total": 87, "additions": 77, "deletions": 10}, "files": [{"sha": "7c54bcd5a4f14554fe82ffa847500e7b9845e531", "filename": "configure", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/configure", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "patch": "@@ -602,6 +602,7 @@ valopt python \"\" \"set path to python\"\n valopt jemalloc-root \"\" \"set directory where libjemalloc_pic.a is located\"\n valopt build \"${DEFAULT_BUILD}\" \"GNUs ./configure syntax LLVM build triple\"\n valopt android-cross-path \"/opt/ndk_standalone\" \"Android NDK standalone path (deprecated)\"\n+valopt i686-linux-android-ndk \"\" \"i686-linux-android NDK standalone path\"\n valopt arm-linux-androideabi-ndk \"\" \"arm-linux-androideabi NDK standalone path\"\n valopt aarch64-linux-android-ndk \"\" \"aarch64-linux-android NDK standalone path\"\n valopt release-channel \"dev\" \"the name of the release channel to build\"\n@@ -1693,6 +1694,7 @@ putvar CFG_LIBDIR_RELATIVE\n putvar CFG_DISABLE_MANAGE_SUBMODULES\n putvar CFG_AARCH64_LINUX_ANDROID_NDK\n putvar CFG_ARM_LINUX_ANDROIDEABI_NDK\n+putvar CFG_I686_LINUX_ANDROID_NDK\n putvar CFG_MANDIR\n \n # Avoid spurious warnings from clang by feeding it original source on"}, {"sha": "2843a8e9be53f98e15bc73e2dd25c90b836f3b6e", "filename": "mk/cfg/i686-linux-android.mk", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/mk%2Fcfg%2Fi686-linux-android.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/mk%2Fcfg%2Fi686-linux-android.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fi686-linux-android.mk?ref=a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "patch": "@@ -0,0 +1,25 @@\n+# i686-linux-android configuration\n+CC_i686-linux-android=$(CFG_I686_LINUX_ANDROID_NDK)/bin/i686-linux-android-gcc\n+CXX_i686-linux-android=$(CFG_I686_LINUX_ANDROID_NDK)/bin/i686-linux-android-g++\n+CPP_i686-linux-android=$(CFG_I686_LINUX_ANDROID_NDK)/bin/i686-linux-android-gcc -E\n+AR_i686-linux-android=$(CFG_I686_LINUX_ANDROID_NDK)/bin/i686-linux-android-ar\n+CFG_LIB_NAME_i686-linux-android=lib$(1).so\n+CFG_STATIC_LIB_NAME_i686-linux-android=lib$(1).a\n+CFG_LIB_GLOB_i686-linux-android=lib$(1)-*.so\n+CFG_LIB_DSYM_GLOB_i686-linux-android=lib$(1)-*.dylib.dSYM\n+CFG_JEMALLOC_CFLAGS_i686-linux-android := -D__i686__ -DANDROID -D__ANDROID__ $(CFLAGS)\n+CFG_GCCISH_CFLAGS_i686-linux-android := -Wall -g -fPIC -D__i686__ -DANDROID -D__ANDROID__ $(CFLAGS)\n+CFG_GCCISH_CXXFLAGS_i686-linux-android := -fno-rtti $(CXXFLAGS)\n+CFG_GCCISH_LINK_FLAGS_i686-linux-android := -shared -fPIC -ldl -g -lm -lsupc++\n+CFG_GCCISH_DEF_FLAG_i686-linux-android := -Wl,--export-dynamic,--dynamic-list=\n+CFG_LLC_FLAGS_i686-linux-android :=\n+CFG_INSTALL_NAME_i686-linux-android =\n+CFG_EXE_SUFFIX_i686-linux-android :=\n+CFG_WINDOWSY_i686-linux-android :=\n+CFG_UNIXY_i686-linux-android := 1\n+CFG_LDPATH_i686-linux-android :=\n+CFG_RUN_i686-linux-android=\n+CFG_RUN_TARG_i686-linux-android=\n+RUSTC_FLAGS_i686-linux-android :=\n+RUSTC_CROSS_FLAGS_i686-linux-android :=\n+CFG_GNU_TRIPLE_i686-linux-android := i686-linux-android"}, {"sha": "6f5c3e27347a3b89ac815da4ffc8595fdfcfe8cd", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "patch": "@@ -465,18 +465,19 @@ pub mod types {\n                 pub type off_t = i32;\n                 pub type dev_t = u32;\n                 pub type ino_t = u32;\n+\n                 pub type pid_t = i32;\n                 pub type uid_t = u32;\n                 pub type gid_t = u32;\n                 pub type useconds_t = u32;\n+\n                 pub type mode_t = u16;\n                 pub type ssize_t = i32;\n             }\n-            #[cfg(any(target_arch = \"x86\",\n+            #[cfg(any(all(any(target_arch = \"arm\", target_arch = \"x86\"),\n+                          not(target_os = \"android\")),\n                       target_arch = \"le32\",\n-                      target_arch = \"powerpc\",\n-                      all(any(target_arch = \"arm\", target_arch = \"x86\"),\n-                          not(target_os = \"android\"))))]\n+                      target_arch = \"powerpc\"))]\n             pub mod posix01 {\n                 use types::os::arch::c95::{c_short, c_long, time_t};\n                 use types::os::arch::posix88::{dev_t, gid_t, ino_t};\n@@ -522,12 +523,13 @@ pub mod types {\n                     pub __size: [u32; 9]\n                 }\n             }\n+\n             #[cfg(all(any(target_arch = \"arm\", target_arch = \"x86\"),\n-                          target_os = \"android\"))]\n+                      target_os = \"android\"))]\n             pub mod posix01 {\n-                use types::os::arch::c95::{c_uchar, c_uint, c_ulong, time_t};\n+                use types::os::arch::c95::{c_uchar, c_uint, c_ulong, c_long, time_t};\n                 use types::os::arch::c99::{c_longlong, c_ulonglong};\n-                use types::os::arch::posix88::{uid_t, gid_t, ino_t};\n+                use types::os::arch::posix88::{uid_t, gid_t};\n \n                 pub type nlink_t = u16;\n                 pub type blksize_t = u32;\n@@ -537,15 +539,15 @@ pub mod types {\n                 #[derive(Copy, Clone)] pub struct stat {\n                     pub st_dev: c_ulonglong,\n                     pub __pad0: [c_uchar; 4],\n-                    pub __st_ino: ino_t,\n+                    pub __st_ino: c_long,\n                     pub st_mode: c_uint,\n                     pub st_nlink: c_uint,\n                     pub st_uid: uid_t,\n                     pub st_gid: gid_t,\n                     pub st_rdev: c_ulonglong,\n                     pub __pad3: [c_uchar; 4],\n                     pub st_size: c_longlong,\n-                    pub st_blksize: blksize_t,\n+                    pub st_blksize: c_ulong,\n                     pub st_blocks: c_ulonglong,\n                     pub st_atime: time_t,\n                     pub st_atime_nsec: c_ulong,\n@@ -567,6 +569,7 @@ pub mod types {\n                     pub __size: [u32; 9]\n                 }\n             }\n+\n             #[cfg(any(target_arch = \"mips\",\n                       target_arch = \"mipsel\"))]\n             pub mod posix01 {\n@@ -993,7 +996,12 @@ pub mod types {\n             pub mod posix88 {\n                 pub type off_t = i64;\n                 pub type dev_t = u32;\n+\n+                #[cfg(target_os = \"android\")]\n+                pub type ino_t = u64;\n+                #[cfg(not(target_os = \"android\"))]\n                 pub type ino_t = u32;\n+\n                 pub type pid_t = i32;\n                 pub type uid_t = u32;\n                 pub type gid_t = u32;"}, {"sha": "1fb962d3c6c8e1e063bbdcdd3d380d8c31165d3e", "filename": "src/librustc_back/target/i686_linux_android.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs?ref=a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::Target;\n+\n+pub fn target() -> Target {\n+    Target {\n+        llvm_target: \"i686-linux-android\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        arch: \"x86\".to_string(),\n+        target_os: \"android\".to_string(),\n+        target_env: \"gnu\".to_string(),\n+        options: super::android_base::opts(),\n+    }\n+}"}, {"sha": "847ab937b370c43efb0bda12f975a07611035ca6", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "patch": "@@ -373,6 +373,7 @@ impl Target {\n             aarch64_unknown_linux_gnu,\n             x86_64_unknown_linux_musl,\n \n+            i686_linux_android,\n             arm_linux_androideabi,\n             aarch64_linux_android,\n "}, {"sha": "cad80c55140c793322e11099093c4b99e1dcdbb5", "filename": "src/libstd/os/android/raw.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs?ref=a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "patch": "@@ -15,7 +15,7 @@\n #[doc(inline)]\n pub use self::arch::{dev_t, mode_t, blkcnt_t, blksize_t, ino_t, nlink_t, off_t, stat, time_t};\n \n-#[cfg(target_arch = \"arm\")]\n+#[cfg(any(target_arch = \"arm\", target_arch = \"x86\"))]\n mod arch {\n     use os::raw::{c_uint, c_uchar, c_ulonglong, c_longlong, c_ulong};\n     use os::unix::raw::{uid_t, gid_t};\n@@ -150,3 +150,4 @@ mod arch {\n         pub st_ino: ino_t,\n     }\n }\n+"}, {"sha": "945057f86122e219de0d33c14dc78dc1817f66f4", "filename": "src/rt/rust_builtin.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Frt%2Frust_builtin.c", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff/src%2Frt%2Frust_builtin.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.c?ref=a1b2deb33b3d8f8e77567afbebdb4a3d27ee97ff", "patch": "@@ -39,6 +39,13 @@ rust_list_dir_val(struct dirent* entry_ptr) {\n     return entry_ptr->d_name;\n }\n \n+// Android's struct dirent does have d_type from the very beginning\n+// (android-3). _DIRENT_HAVE_D_TYPE is not defined all the way to android-21\n+// though...\n+#if defined(__ANDROID__)\n+# define _DIRENT_HAVE_D_TYPE\n+#endif\n+\n int\n rust_dir_get_mode(struct dirent* entry_ptr) {\n #if defined(_DIRENT_HAVE_D_TYPE) || defined(__APPLE__)"}]}