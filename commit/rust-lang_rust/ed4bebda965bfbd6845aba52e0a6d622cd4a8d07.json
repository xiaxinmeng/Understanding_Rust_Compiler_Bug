{"sha": "ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNGJlYmRhOTY1YmZiZDY4NDVhYmE1MmUwYTZkNjIyY2Q0YThkMDc=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-07T23:36:38Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-07T23:37:04Z"}, "message": "remove some `slicing_syntax` feature gates", "tree": {"sha": "6a38a89a4836a589b2e77b690c73491f96513621", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a38a89a4836a589b2e77b690c73491f96513621"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "html_url": "https://github.com/rust-lang/rust/commit/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/comments", "author": null, "committer": null, "parents": [{"sha": "8327bcc167661c26ca5c6b967309ff745d302329", "url": "https://api.github.com/repos/rust-lang/rust/commits/8327bcc167661c26ca5c6b967309ff745d302329", "html_url": "https://github.com/rust-lang/rust/commit/8327bcc167661c26ca5c6b967309ff745d302329"}], "stats": {"total": 49, "additions": 1, "deletions": 48}, "files": [{"sha": "bd4b8e5e97f4922fc44235e749e26d1f478d5616", "filename": "src/test/bench/shootout-fannkuch-redux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -38,8 +38,6 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n-#![feature(slicing_syntax)]\n-\n use std::{cmp, iter, mem};\n use std::thread::Thread;\n "}, {"sha": "5a47f9fbc573a7f5ecbac739de55d877bdc9e402", "filename": "src/test/bench/shootout-fasta-redux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -38,8 +38,6 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n-#![feature(slicing_syntax)]\n-\n use std::cmp::min;\n use std::io::{stdout, IoResult};\n use std::iter::repeat;"}, {"sha": "e9da34615c19237a9651959565c5f9785f710be0", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -38,8 +38,6 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n-#![feature(slicing_syntax)]\n-\n use std::cmp::min;\n use std::io::{BufferedWriter, File};\n use std::io;"}, {"sha": "7bca722e53ef3985bfcc9b3ab2d3918b13be98fc", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -13,8 +13,6 @@\n \n // multi tasking k-nucleotide\n \n-#![feature(slicing_syntax)]\n-\n use std::ascii::{AsciiExt, OwnedAsciiExt};\n use std::cmp::Ordering::{self, Less, Greater, Equal};\n use std::collections::HashMap;"}, {"sha": "25a23ffed4eacb55f571a98d37b00b9076debde9", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -40,8 +40,6 @@\n \n // ignore-android see #10393 #13206\n \n-#![feature(slicing_syntax)]\n-\n use std::ascii::OwnedAsciiExt;\n use std::iter::repeat;\n use std::slice;"}, {"sha": "60d33d92549284202363e8cf6fbeddc1922ceba7", "filename": "src/test/bench/shootout-regex-dna.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -41,8 +41,6 @@\n // ignore-stage1\n // ignore-cross-compile #12102\n \n-#![feature(plugin, slicing_syntax)]\n-\n extern crate regex;\n \n use std::io;"}, {"sha": "841f70e13c4f919a019e4ce9ff7f28ec5c1cf93e", "filename": "src/test/bench/shootout-reverse-complement.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -40,7 +40,7 @@\n \n // ignore-android see #10393 #13206\n \n-#![feature(slicing_syntax, unboxed_closures)]\n+#![feature(unboxed_closures)]\n \n extern crate libc;\n "}, {"sha": "6631d92103803791847c3fdc7f03e4413be10d7a", "filename": "src/test/compile-fail/packed-struct-generic-transmute.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpacked-struct-generic-transmute.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -15,8 +15,6 @@\n \n // error-pattern: transmute called on types with different size\n \n-#![feature(slicing_syntax)]\n-\n use std::mem;\n \n #[repr(packed)]"}, {"sha": "1668b868e641ec9d2f8b58fefe4fb34b202d4917", "filename": "src/test/compile-fail/range-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Frange-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Frange-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange-1.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // Test range syntax - type errors.\n-#![feature(slicing_syntax)]\n \n pub fn main() {\n     // Mixed types."}, {"sha": "40690bd844bce6f6980e95b770b41c18fa75bcd2", "filename": "src/test/compile-fail/range-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Frange-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Frange-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange-2.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // Test range syntax - borrow errors.\n-#![feature(slicing_syntax)]\n \n pub fn main() {\n     let r = {"}, {"sha": "07162293565ed2c9e3f93e4d89521212497bda44", "filename": "src/test/compile-fail/slice-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-2.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test that slicing syntax gives errors if we have not implemented the trait.\n \n-#![feature(slicing_syntax)]\n-\n struct Foo;\n \n fn main() {"}, {"sha": "43c4326628d338f24af8fe61b69fc3752a59a187", "filename": "src/test/compile-fail/slice-borrow.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test slicing expressions doesn't defeat the borrow checker.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let y;\n     {"}, {"sha": "12f184d410c900e3539021c81c6a77c115941c0e", "filename": "src/test/compile-fail/slice-mut-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test mutability and slicing syntax.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     // Can't mutably slice an immutable slice"}, {"sha": "9bd9a752e4e890e0574db32ca22e0975d7871f77", "filename": "src/test/compile-fail/slice-mut.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test mutability and slicing syntax.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     // Immutable slices are not mutable."}, {"sha": "949dffaac068f474bda3a2649f0a4fcfc43d6068", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -77,7 +77,6 @@\n // lldb-check:[...]$5 = &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }]\n \n #![allow(unused_variables)]\n-#![feature(slicing_syntax)]\n #![omit_gdb_pretty_printer_section]\n \n struct AStruct {"}, {"sha": "72daa0cba4104abcb20783e2f34d66589fabdb16", "filename": "src/test/run-pass/issue-15730.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-15730.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-15730.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15730.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let mut array = [1, 2, 3];\n     let pie_slice = &array[1..2];"}, {"sha": "259895fffc95bd2446df4464a40d854b52e7ae07", "filename": "src/test/run-pass/issue-17503.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-17503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-17503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17503.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let s: &[int] = &[0, 1, 2, 3, 4];\n     let ss: &&[int] = &s;"}, {"sha": "f74b09a3d246fb540652facc940710b27832ea0f", "filename": "src/test/run-pass/issue-20644.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-20644.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-20644.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20644.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -11,7 +11,6 @@\n // A reduced version of the rustbook ice. The problem this encountered\n // had to do with trans ignoring binders.\n \n-#![feature(slicing_syntax)]\n #![feature(associated_types)]\n #![feature(macro_rules)]\n "}, {"sha": "bf3d0b786af65c48b53ce212626d61732bc305b7", "filename": "src/test/run-pass/issue-3888-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn vec_peek<'r, T>(v: &'r [T]) -> &'r [T] {\n     &v[1..5]\n }"}, {"sha": "33a5c7a167f9991ab9a121c95dd3bae5188cc6ab", "filename": "src/test/run-pass/issue-4464.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-4464.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-4464.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4464.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn broken(v: &[u8], i: uint, j: uint) -> &[u8] { &v[i..j] }\n \n pub fn main() {}"}, {"sha": "42739628eed75c8dcb8f8dbd47316131a266c4e4", "filename": "src/test/run-pass/issue-8898.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8898.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn assert_repr_eq<T: std::fmt::Show>(obj : T, expected : String) {\n     assert_eq!(expected, format!(\"{:?}\", obj));\n }"}, {"sha": "90e871689908256f21eb237506693b7a86e597c5", "filename": "src/test/run-pass/range.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frange.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test range syntax.\n \n-#![feature(slicing_syntax)]\n-\n fn foo() -> int { 42 }\n \n pub fn main() {"}, {"sha": "eb1c34ee5eb128c2d84490b4e5e509453c27d7d6", "filename": "src/test/run-pass/repeated-vector-syntax.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n pub fn main() {\n     let x = [ [true]; 512 ];\n     let y = [ 0i; 1 ];"}, {"sha": "8f031d2e97e3ffd90d61a671466b9a32ff4cdef2", "filename": "src/test/run-pass/slice-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-2.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test slicing expressions on slices and Vecs.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     let cmp: &[int] = &[1, 2, 3, 4, 5];"}, {"sha": "b2e3d83ca9b36791513f748c6b3c9e07464c91bf", "filename": "src/test/run-pass/slice-panic-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice-panic-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice-panic-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-panic-1.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test that if a slicing expr[..] fails, the correct cleanups happen.\n \n-#![feature(slicing_syntax)]\n-\n use std::thread::Thread;\n \n struct Foo;"}, {"sha": "dea45e63ab000db72e4614059cc3d40d9e2d60f0", "filename": "src/test/run-pass/slice-panic-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice-panic-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice-panic-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-panic-2.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,8 +10,6 @@\n \n // Test that if a slicing expr[..] fails, the correct cleanups happen.\n \n-#![feature(slicing_syntax)]\n-\n use std::thread::Thread;\n \n struct Foo;"}, {"sha": "9cb7cfd7fe98bc80a41efc7544424e49076f26ce", "filename": "src/test/run-pass/slice.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed4bebda965bfbd6845aba52e0a6d622cd4a8d07/src%2Ftest%2Frun-pass%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice.rs?ref=ed4bebda965bfbd6845aba52e0a6d622cd4a8d07", "patch": "@@ -10,7 +10,6 @@\n \n // Test slicing sugar.\n \n-#![feature(slicing_syntax)]\n #![feature(associated_types)]\n \n extern crate core;"}]}