{"sha": "088b7e2108abd54a31d573301d7c90e012d09150", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4OGI3ZTIxMDhhYmQ1NGEzMWQ1NzMzMDFkN2M5MGUwMTJkMDkxNTA=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-03-13T18:03:48Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-06-08T20:58:53Z"}, "message": "fix translation of unsized types and arrays", "tree": {"sha": "da0d9328f2e5e669fdef8fe3dfb59465f2485e10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da0d9328f2e5e669fdef8fe3dfb59465f2485e10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/088b7e2108abd54a31d573301d7c90e012d09150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/088b7e2108abd54a31d573301d7c90e012d09150", "html_url": "https://github.com/rust-lang/rust/commit/088b7e2108abd54a31d573301d7c90e012d09150", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/088b7e2108abd54a31d573301d7c90e012d09150/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70c25c848c3dc0f75675622e59d6dca47de84b0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/70c25c848c3dc0f75675622e59d6dca47de84b0b", "html_url": "https://github.com/rust-lang/rust/commit/70c25c848c3dc0f75675622e59d6dca47de84b0b"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "bdfe014051c6a1d60205c978f4a6c4c223eb4b8d", "filename": "src/librustc_trans/_match.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/088b7e2108abd54a31d573301d7c90e012d09150/src%2Flibrustc_trans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/088b7e2108abd54a31d573301d7c90e012d09150/src%2Flibrustc_trans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2F_match.rs?ref=088b7e2108abd54a31d573301d7c90e012d09150", "patch": "@@ -729,7 +729,14 @@ fn bind_subslice_pat(bcx: Block,\n     let (base, len) = vec_datum.get_vec_base_and_len(bcx);\n \n     let slice_begin = InBoundsGEP(bcx, base, &[C_uint(bcx.ccx(), offset_left)]);\n-    let slice_len_offset = C_uint(bcx.ccx(), offset_left + offset_right);\n+    let diff = offset_left + offset_right;\n+    if let ty::TyArray(ty, n) = vec_ty_contents.sty {\n+        let array_ty = bcx.tcx().mk_array(ty, n-diff);\n+        let llty_array = type_of::type_of(bcx.ccx(), array_ty);\n+        return PointerCast(bcx, slice_begin, llty_array.ptr_to());\n+    }\n+\n+    let slice_len_offset = C_uint(bcx.ccx(), diff);\n     let slice_len = Sub(bcx, len, slice_len_offset, DebugLoc::None);\n     let slice_ty = bcx.tcx().mk_imm_ref(bcx.tcx().mk_region(ty::ReErased),\n                                          bcx.tcx().mk_slice(unit_ty));\n@@ -1205,7 +1212,12 @@ fn compile_submatch_continue<'a, 'p, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n         }\n         Some(field_vals)\n     } else if any_uniq_pat(m, col) || any_region_pat(m, col) {\n-        Some(vec!(Load(bcx, val.val)))\n+        let ptr = if type_is_fat_ptr(bcx.tcx(), left_ty) {\n+            val.val\n+        } else {\n+            Load(bcx, val.val)\n+        };\n+        Some(vec!(ptr))\n     } else {\n         match left_ty.sty {\n             ty::TyArray(_, n) => {"}, {"sha": "7253672a7ff47425541e0a06911aaf3bcc601759", "filename": "src/test/run-pass/match-unsized.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/088b7e2108abd54a31d573301d7c90e012d09150/src%2Ftest%2Frun-pass%2Fmatch-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/088b7e2108abd54a31d573301d7c90e012d09150/src%2Ftest%2Frun-pass%2Fmatch-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-unsized.rs?ref=088b7e2108abd54a31d573301d7c90e012d09150", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let data: &'static str = \"Hello, World!\";\n+    match data {\n+        &ref xs => {\n+            assert_eq!(data, xs);\n+        }\n+    }\n+}"}]}