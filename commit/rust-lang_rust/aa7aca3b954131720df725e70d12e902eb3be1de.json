{"sha": "aa7aca3b954131720df725e70d12e902eb3be1de", "node_id": "C_kwDOAAsO6NoAKGFhN2FjYTNiOTU0MTMxNzIwZGY3MjVlNzBkMTJlOTAyZWIzYmUxZGU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-30T20:23:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-30T20:23:47Z"}, "message": "Auto merge of #89282 - sexxi-goose:fix-88118, r=nikomatsakis\n\n2229: Consume IfLet expr\n\nWhen using the IfLet guard feature, we can ICE when attempting to resolve PlaceBuilders.\nFor pattern matching, we currently don't consume the IfLet expression when \"visiting\" the arms leading us to not \"read\" all variables and hence not being able to resolve them.\n\nr? `@nikomatsakis`\nCloses https://github.com/rust-lang/rust/issues/88118", "tree": {"sha": "ec4c0188a45ca8210d9fb58dd4a5b23aa6fb9ccb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec4c0188a45ca8210d9fb58dd4a5b23aa6fb9ccb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa7aca3b954131720df725e70d12e902eb3be1de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7aca3b954131720df725e70d12e902eb3be1de", "html_url": "https://github.com/rust-lang/rust/commit/aa7aca3b954131720df725e70d12e902eb3be1de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa7aca3b954131720df725e70d12e902eb3be1de/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dc08b909b469d58dd8fa54c57ab193b8cf95257", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc08b909b469d58dd8fa54c57ab193b8cf95257", "html_url": "https://github.com/rust-lang/rust/commit/6dc08b909b469d58dd8fa54c57ab193b8cf95257"}, {"sha": "d0e2b607de9b3b4e7e6495206a21847201248144", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0e2b607de9b3b4e7e6495206a21847201248144", "html_url": "https://github.com/rust-lang/rust/commit/d0e2b607de9b3b4e7e6495206a21847201248144"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "b5c4d6ac261670f7905fe16d521505bdeb544971", "filename": "compiler/rustc_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa7aca3b954131720df725e70d12e902eb3be1de/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7aca3b954131720df725e70d12e902eb3be1de/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=aa7aca3b954131720df725e70d12e902eb3be1de", "patch": "@@ -619,6 +619,8 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n \n         if let Some(hir::Guard::If(ref e)) = arm.guard {\n             self.consume_expr(e)\n+        } else if let Some(hir::Guard::IfLet(_, ref e)) = arm.guard {\n+            self.consume_expr(e)\n         }\n \n         self.consume_expr(&arm.body);"}, {"sha": "0cfb1a55bf27faa6fe2317fb63b765e71d1ba6c3", "filename": "src/test/ui/closures/2229_closure_analysis/issue-88118-2.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/aa7aca3b954131720df725e70d12e902eb3be1de/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7aca3b954131720df725e70d12e902eb3be1de/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.rs?ref=aa7aca3b954131720df725e70d12e902eb3be1de", "patch": "@@ -0,0 +1,24 @@\n+// edition:2021\n+// run-pass\n+#![feature(if_let_guard)]\n+#[allow(unused_must_use)]\n+#[allow(dead_code)]\n+\n+fn print_error_count(registry: &Registry) {\n+    |x: &Registry| {\n+        match &x {\n+            Registry if let _ = registry.try_find_description() => { }\n+            //~^ WARNING: irrefutable `if let` guard pattern\n+            _ => {}\n+        }\n+    };\n+}\n+\n+struct Registry;\n+impl Registry {\n+    pub fn try_find_description(&self) {\n+        unimplemented!()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "15689023d818aad4e16f02a82deca31a1fcda53d", "filename": "src/test/ui/closures/2229_closure_analysis/issue-88118-2.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aa7aca3b954131720df725e70d12e902eb3be1de/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa7aca3b954131720df725e70d12e902eb3be1de/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-88118-2.stderr?ref=aa7aca3b954131720df725e70d12e902eb3be1de", "patch": "@@ -0,0 +1,12 @@\n+warning: irrefutable `if let` guard pattern\n+  --> $DIR/issue-88118-2.rs:10:29\n+   |\n+LL |             Registry if let _ = registry.try_find_description() => { }\n+   |                             ^\n+   |\n+   = note: `#[warn(irrefutable_let_patterns)]` on by default\n+   = note: this pattern will always match, so the guard is useless\n+   = help: consider removing the guard and adding a `let` inside the match arm\n+\n+warning: 1 warning emitted\n+"}]}