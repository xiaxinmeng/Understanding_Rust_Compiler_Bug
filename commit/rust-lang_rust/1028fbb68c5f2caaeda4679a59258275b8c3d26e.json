{"sha": "1028fbb68c5f2caaeda4679a59258275b8c3d26e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMjhmYmI2OGM1ZjJjYWFlZGE0Njc5YTU5MjU4Mjc1YjhjM2QyNmU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-30T13:00:15Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-30T13:00:15Z"}, "message": "Fix release builds", "tree": {"sha": "bf6d5fb531777ca2a2113edaab643e724653bd60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf6d5fb531777ca2a2113edaab643e724653bd60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1028fbb68c5f2caaeda4679a59258275b8c3d26e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1028fbb68c5f2caaeda4679a59258275b8c3d26e", "html_url": "https://github.com/rust-lang/rust/commit/1028fbb68c5f2caaeda4679a59258275b8c3d26e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1028fbb68c5f2caaeda4679a59258275b8c3d26e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b62e892fb5f9215addd3e8e7f33dc84d6ff69946", "url": "https://api.github.com/repos/rust-lang/rust/commits/b62e892fb5f9215addd3e8e7f33dc84d6ff69946", "html_url": "https://github.com/rust-lang/rust/commit/b62e892fb5f9215addd3e8e7f33dc84d6ff69946"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "c66dbe3958d91c1d436bc1de0302054928bd9d94", "filename": "src/abi.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1028fbb68c5f2caaeda4679a59258275b8c3d26e/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1028fbb68c5f2caaeda4679a59258275b8c3d26e/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=1028fbb68c5f2caaeda4679a59258275b8c3d26e", "patch": "@@ -274,7 +274,9 @@ impl<'a, 'tcx: 'a, B: Backend + 'a> FunctionCx<'a, 'tcx, B> {\n             .module\n             .declare_func_in_func(func_id, &mut self.bcx.func);\n         let call_inst = self.bcx.ins().call(func_ref, args);\n-        self.add_comment(call_inst, format!(\"easy_call {}\", name));\n+        #[cfg(debug_assertions)] {\n+            self.add_comment(call_inst, format!(\"easy_call {}\", name));\n+        }\n         let results = self.bcx.inst_results(call_inst);\n         assert!(results.len() <= 2, \"{}\", results.len());\n         results"}, {"sha": "c4e2cf35766bce5f3565dd9d8a4fa504fea914d2", "filename": "src/trap.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1028fbb68c5f2caaeda4679a59258275b8c3d26e/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1028fbb68c5f2caaeda4679a59258275b8c3d26e/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=1028fbb68c5f2caaeda4679a59258275b8c3d26e", "patch": "@@ -7,7 +7,9 @@ fn codegen_print(fx: &mut FunctionCx<'_, '_, impl cranelift_module::Backend>, ms\n         returns: vec![],\n     }).unwrap();\n     let puts = fx.module.declare_func_in_func(puts, &mut fx.bcx.func);\n-    fx.add_entity_comment(puts, \"puts\");\n+    #[cfg(debug_assertions)] {\n+        fx.add_entity_comment(puts, \"puts\");\n+    }\n \n     let symbol_name = fx.tcx.symbol_name(fx.instance);\n     let real_msg = format!(\"trap at {:?} ({}): {}\\0\", fx.instance, symbol_name, msg);\n@@ -19,7 +21,9 @@ fn codegen_print(fx: &mut FunctionCx<'_, '_, impl cranelift_module::Backend>, ms\n     let _ = fx.module.define_data(msg_id, &data_ctx);\n \n     let local_msg_id = fx.module.declare_data_in_func(msg_id, fx.bcx.func);\n-    fx.add_entity_comment(local_msg_id, msg);\n+    #[cfg(debug_assertions)] {\n+        fx.add_entity_comment(local_msg_id, msg);\n+    }\n     let msg_ptr = fx.bcx.ins().global_value(pointer_ty(fx.tcx), local_msg_id);\n     fx.bcx.ins().call(puts, &[msg_ptr]);\n }"}]}