{"sha": "6f3912850ad92784434a79e0e5062f517d642201", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMzkxMjg1MGFkOTI3ODQ0MzRhNzllMGU1MDYyZjUxN2Q2NDIyMDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-31T09:25:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-31T09:25:18Z"}, "message": "Auto merge of #3590 - jorpic:i3559-if_same_then_else, r=phansch\n\nFix if_same_then_else false positive\n\nThis fixes false positive in #3559.\nThe problem was that `SpanlessEq` does not check patterns in declarations. So this two blocks considered equal.\n```rust\nif true {\n    let (x, y) = foo();\n} else {\n   let (y, x) = foo();\n}\n```\nNot sure if the proposed change is safe as `SpanlessEq` is used extensively in other lints, but I tried hard to come up with counterexample and failed.", "tree": {"sha": "253e50426b8a7b96e5a2866c39fef60487434281", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/253e50426b8a7b96e5a2866c39fef60487434281"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f3912850ad92784434a79e0e5062f517d642201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3912850ad92784434a79e0e5062f517d642201", "html_url": "https://github.com/rust-lang/rust/commit/6f3912850ad92784434a79e0e5062f517d642201", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f3912850ad92784434a79e0e5062f517d642201/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "529f698c23099cbdb0afe5fe308814639808233d", "url": "https://api.github.com/repos/rust-lang/rust/commits/529f698c23099cbdb0afe5fe308814639808233d", "html_url": "https://github.com/rust-lang/rust/commit/529f698c23099cbdb0afe5fe308814639808233d"}, {"sha": "911a7525619b1c8b283c1019f3b497264c7e0a5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/911a7525619b1c8b283c1019f3b497264c7e0a5d", "html_url": "https://github.com/rust-lang/rust/commit/911a7525619b1c8b283c1019f3b497264c7e0a5d"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "377e56ddcac92f4fa18ded611fbb8a137333b4a9", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f3912850ad92784434a79e0e5062f517d642201/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3912850ad92784434a79e0e5062f517d642201/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=6f3912850ad92784434a79e0e5062f517d642201", "patch": "@@ -54,7 +54,9 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n         match (&left.node, &right.node) {\n             (&StmtKind::Decl(ref l, _), &StmtKind::Decl(ref r, _)) => {\n                 if let (&DeclKind::Local(ref l), &DeclKind::Local(ref r)) = (&l.node, &r.node) {\n-                    both(&l.ty, &r.ty, |l, r| self.eq_ty(l, r)) && both(&l.init, &r.init, |l, r| self.eq_expr(l, r))\n+                    self.eq_pat(&l.pat, &r.pat)\n+                        && both(&l.ty, &r.ty, |l, r| self.eq_ty(l, r))\n+                        && both(&l.init, &r.init, |l, r| self.eq_expr(l, r))\n                 } else {\n                     false\n                 }"}, {"sha": "8147edb98eb0c2bb6725a41141f42bcae34d099c", "filename": "tests/ui/copies.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6f3912850ad92784434a79e0e5062f517d642201/tests%2Fui%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3912850ad92784434a79e0e5062f517d642201/tests%2Fui%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.rs?ref=6f3912850ad92784434a79e0e5062f517d642201", "patch": "@@ -335,6 +335,17 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n         let foo = \"\";\n         return Ok(&foo[0..]);\n     }\n+\n+    // false positive if_same_then_else, let(x,y) vs let(y,x), see #3559\n+    if true {\n+        let foo = \"\";\n+        let (x, y) = (1, 2);\n+        return Ok(&foo[x..y]);\n+    } else {\n+        let foo = \"\";\n+        let (y, x) = (1, 2);\n+        return Ok(&foo[x..y]);\n+    }\n }\n \n #[warn(clippy::ifs_same_cond)]"}, {"sha": "4c0bc4b01739b4b6900b0bf6c0f6cc5a3b8911ba", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6f3912850ad92784434a79e0e5062f517d642201/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f3912850ad92784434a79e0e5062f517d642201/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=6f3912850ad92784434a79e0e5062f517d642201", "patch": "@@ -352,38 +352,38 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has the same condition as a previous if\n-  --> $DIR/copies.rs:347:15\n+  --> $DIR/copies.rs:358:15\n    |\n LL |     } else if b {\n    |               ^\n    |\n    = note: `-D clippy::ifs-same-cond` implied by `-D warnings`\n note: same as this\n-  --> $DIR/copies.rs:346:8\n+  --> $DIR/copies.rs:357:8\n    |\n LL |     if b {\n    |        ^\n \n error: this `if` has the same condition as a previous if\n-  --> $DIR/copies.rs:352:15\n+  --> $DIR/copies.rs:363:15\n    |\n LL |     } else if a == 1 {\n    |               ^^^^^^\n    |\n note: same as this\n-  --> $DIR/copies.rs:351:8\n+  --> $DIR/copies.rs:362:8\n    |\n LL |     if a == 1 {\n    |        ^^^^^^\n \n error: this `if` has the same condition as a previous if\n-  --> $DIR/copies.rs:358:15\n+  --> $DIR/copies.rs:369:15\n    |\n LL |     } else if 2 * a == 1 {\n    |               ^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/copies.rs:356:8\n+  --> $DIR/copies.rs:367:8\n    |\n LL |     if 2 * a == 1 {\n    |        ^^^^^^^^^^"}]}