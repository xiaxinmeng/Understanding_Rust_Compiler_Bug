{"sha": "74f4da44a5743e88ce2bbb76f585c02e67af83a1", "node_id": "C_kwDOAAsO6NoAKDc0ZjRkYTQ0YTU3NDNlODhjZTJiYmI3NmY1ODVjMDJlNjdhZjgzYTE", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-12-08T19:20:16Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-12-14T20:17:52Z"}, "message": "add helper to get DefId from MonoItem", "tree": {"sha": "32f83c059664da8c3f7a613696fcd570f0c6d437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32f83c059664da8c3f7a613696fcd570f0c6d437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f4da44a5743e88ce2bbb76f585c02e67af83a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f4da44a5743e88ce2bbb76f585c02e67af83a1", "html_url": "https://github.com/rust-lang/rust/commit/74f4da44a5743e88ce2bbb76f585c02e67af83a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f4da44a5743e88ce2bbb76f585c02e67af83a1/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbf8b937b44d39ba03835b82ed7ea443321eb7c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbf8b937b44d39ba03835b82ed7ea443321eb7c7", "html_url": "https://github.com/rust-lang/rust/commit/fbf8b937b44d39ba03835b82ed7ea443321eb7c7"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "1e8d5f7eae87a8881edadb729794f43e43fc9a9e", "filename": "compiler/rustc_middle/src/mir/mono.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/74f4da44a5743e88ce2bbb76f585c02e67af83a1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f4da44a5743e88ce2bbb76f585c02e67af83a1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs?ref=74f4da44a5743e88ce2bbb76f585c02e67af83a1", "patch": "@@ -200,6 +200,15 @@ impl<'tcx> MonoItem<'tcx> {\n             MonoItem::GlobalAsm(..) => LOCAL_CRATE,\n         }\n     }\n+\n+    /// Returns the item's `DefId`\n+    pub fn def_id(&self) -> DefId {\n+        match *self {\n+            MonoItem::Fn(Instance { def, .. }) => def.def_id(),\n+            MonoItem::Static(def_id) => def_id,\n+            MonoItem::GlobalAsm(item_id) => item_id.owner_id.to_def_id(),\n+        }\n+    }\n }\n \n impl<'tcx> fmt::Display for MonoItem<'tcx> {"}]}