{"sha": "77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YmMyNmY0ZjNjYjVmMDUzZGJlNzJiMzYzYjU1YTUzZjYyNmYwY2Q=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-01-28T19:23:49Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-01-29T09:02:04Z"}, "message": "Require yield types to be sized", "tree": {"sha": "8c974781ae7a6602722047118186666c44fa20f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c974781ae7a6602722047118186666c44fa20f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "html_url": "https://github.com/rust-lang/rust/commit/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6f68c87275fc1be2b0c3aa1455bead5c9dce18", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18", "html_url": "https://github.com/rust-lang/rust/commit/7a6f68c87275fc1be2b0c3aa1455bead5c9dce18"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "3cb9449901d0b6b1889944b1b02bddb4c9b11fb1", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "patch": "@@ -1261,6 +1261,10 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                 err.note(\"the return type of a function must have a \\\n                           statically known size\");\n             }\n+            ObligationCauseCode::SizedYieldType => {\n+                err.note(\"the yield type of a generator must have a \\\n+                          statically known size\");\n+            }\n             ObligationCauseCode::AssignmentLhsSized => {\n                 err.note(\"the left-hand-side of an assignment must have a statically known size\");\n             }"}, {"sha": "5bfa6f936db7d5df85ace5b5e6e628ddf80e1581", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "patch": "@@ -138,6 +138,8 @@ pub enum ObligationCauseCode<'tcx> {\n     VariableType(ast::NodeId),\n     /// Return type must be Sized\n     SizedReturnType,\n+    /// Yield type must be Sized\n+    SizedYieldType,\n     /// [T,..n] --> T must be Copy\n     RepeatVec,\n "}, {"sha": "1eb14a222787db67a998033be8cae3e884d47f7b", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "patch": "@@ -209,6 +209,7 @@ impl<'a, 'tcx> Lift<'tcx> for traits::ObligationCauseCode<'a> {\n             super::VariableType(id) => Some(super::VariableType(id)),\n             super::ReturnType(id) => Some(super::ReturnType(id)),\n             super::SizedReturnType => Some(super::SizedReturnType),\n+            super::SizedYieldType => Some(super::SizedYieldType),\n             super::RepeatVec => Some(super::RepeatVec),\n             super::FieldSized(item) => Some(super::FieldSized(item)),\n             super::ConstSized => Some(super::ConstSized),\n@@ -526,6 +527,7 @@ impl<'tcx> TypeFoldable<'tcx> for traits::ObligationCauseCode<'tcx> {\n             super::VariableType(_) |\n             super::ReturnType(_) |\n             super::SizedReturnType |\n+            super::SizedYieldType |\n             super::ReturnNoExpression |\n             super::RepeatVec |\n             super::FieldSized(_) |\n@@ -574,6 +576,7 @@ impl<'tcx> TypeFoldable<'tcx> for traits::ObligationCauseCode<'tcx> {\n             super::VariableType(_) |\n             super::ReturnType(_) |\n             super::SizedReturnType |\n+            super::SizedYieldType |\n             super::ReturnNoExpression |\n             super::RepeatVec |\n             super::FieldSized(_) |"}, {"sha": "098a98a8d92f34dcf89d0df6d13e6cd2ed017e32", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "patch": "@@ -1001,7 +1001,9 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n     let span = body.value.span;\n \n     if body.is_generator && can_be_generator.is_some() {\n-        fcx.yield_ty = Some(fcx.next_ty_var(TypeVariableOrigin::TypeInference(span)));\n+        let yield_ty = fcx.next_ty_var(TypeVariableOrigin::TypeInference(span));\n+        fcx.require_type_is_sized(yield_ty, span, traits::SizedYieldType);\n+        fcx.yield_ty = Some(yield_ty);\n     }\n \n     GatherLocalsVisitor { fcx: &fcx, }.visit_body(body);"}, {"sha": "f38ebf8b9463669abdf23d6d63348ef5ee77ea06", "filename": "src/test/ui/generator/sized-yield.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.rs?ref=77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(generators, generator_trait)]\n+\n+use std::ops::Generator;\n+\n+fn main() {\n+   let s = String::from(\"foo\");\n+   let mut gen = move || { //~ ERROR the trait bound `str: std::marker::Sized` is not satisfied\n+       yield s[..];\n+   };\n+   gen.resume(); //~ ERROR the trait bound `str: std::marker::Sized` is not satisfied\n+}"}, {"sha": "7adb2cc5598dc15efaa5590e34b6fe50700e973c", "filename": "src/test/ui/generator/sized-yield.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77bc26f4f3cb5f053dbe72b363b55a53f626f0cd/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.stderr?ref=77bc26f4f3cb5f053dbe72b363b55a53f626f0cd", "patch": "@@ -0,0 +1,22 @@\n+error[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n+  --> $DIR/sized-yield.rs:17:26\n+   |\n+17 |      let mut gen = move || { //~ ERROR the trait bound `str: std::marker::Sized` is not satisfied\n+   |  __________________________^\n+18 | |        yield s[..];\n+19 | |    };\n+   | |____^ `str` does not have a constant size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: the yield type of a generator must have a statically known size\n+\n+error[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n+  --> $DIR/sized-yield.rs:20:8\n+   |\n+20 |    gen.resume(); //~ ERROR the trait bound `str: std::marker::Sized` is not satisfied\n+   |        ^^^^^^ `str` does not have a constant size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `str`\n+\n+error: aborting due to 2 previous errors\n+"}]}