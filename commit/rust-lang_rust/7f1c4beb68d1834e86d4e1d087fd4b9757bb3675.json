{"sha": "7f1c4beb68d1834e86d4e1d087fd4b9757bb3675", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMWM0YmViNjhkMTgzNGU4NmQ0ZTFkMDg3ZmQ0Yjk3NTdiYjM2NzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-06T05:29:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-06T05:29:09Z"}, "message": "Auto merge of #43001 - estebank:try-on-unimplemented, r=aturon\n\nAdd `rustc_on_unimplemented` message to `std::ops::Try`\n\n#42694, #35946.", "tree": {"sha": "e405f7f77c23d183d3c1e1077cd6bbaab1721010", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e405f7f77c23d183d3c1e1077cd6bbaab1721010"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675", "html_url": "https://github.com/rust-lang/rust/commit/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cab2c73d47a4b0ec7dc1bf40eb59492139fb707", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cab2c73d47a4b0ec7dc1bf40eb59492139fb707", "html_url": "https://github.com/rust-lang/rust/commit/8cab2c73d47a4b0ec7dc1bf40eb59492139fb707"}, {"sha": "d71caadee22f5a6cd1b16a8c6978efd4135707d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d71caadee22f5a6cd1b16a8c6978efd4135707d0", "html_url": "https://github.com/rust-lang/rust/commit/d71caadee22f5a6cd1b16a8c6978efd4135707d0"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "9da9879d38ab8a623c60a5c46bfb9a61bef3c82f", "filename": "src/libcore/ops/try.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675/src%2Flibcore%2Fops%2Ftry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675/src%2Flibcore%2Fops%2Ftry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Ftry.rs?ref=7f1c4beb68d1834e86d4e1d087fd4b9757bb3675", "patch": "@@ -15,6 +15,8 @@\n /// extracting those success or failure values from an existing instance and\n /// creating a new instance from a success or failure value.\n #[unstable(feature = \"try_trait\", issue = \"42327\")]\n+#[rustc_on_unimplemented = \"the `?` operator can only be used in a function that returns `Result` \\\n+                            (or another type that implements `std::ops::Try`)\"]\n pub trait Try {\n     /// The type of this value when viewed as successful.\n     #[unstable(feature = \"try_trait\", issue = \"42327\")]"}, {"sha": "55154e3507e87b837a1d92b9f3ef03a3bb125202", "filename": "src/test/ui/suggestions/try-operator-on-main.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675/src%2Ftest%2Fui%2Fsuggestions%2Ftry-operator-on-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675/src%2Ftest%2Fui%2Fsuggestions%2Ftry-operator-on-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftry-operator-on-main.rs?ref=7f1c4beb68d1834e86d4e1d087fd4b9757bb3675", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    std::fs::File::open(\"foo\")?;\n+}"}, {"sha": "cf0481bdab77285ba4065388ad3367935742f76f", "filename": "src/test/ui/suggestions/try-operator-on-main.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675/src%2Ftest%2Fui%2Fsuggestions%2Ftry-operator-on-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f1c4beb68d1834e86d4e1d087fd4b9757bb3675/src%2Ftest%2Fui%2Fsuggestions%2Ftry-operator-on-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftry-operator-on-main.stderr?ref=7f1c4beb68d1834e86d4e1d087fd4b9757bb3675", "patch": "@@ -0,0 +1,14 @@\n+error[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n+  --> $DIR/try-operator-on-main.rs:12:5\n+   |\n+12 |     std::fs::File::open(\"foo\")?;\n+   |     ---------------------------\n+   |     |\n+   |     the `?` operator can only be used in a function that returns `Result` (or another type that implements `std::ops::Try`)\n+   |     in this macro invocation\n+   |\n+   = help: the trait `std::ops::Try` is not implemented for `()`\n+   = note: required by `std::ops::Try::from_error`\n+\n+error: aborting due to previous error\n+"}]}