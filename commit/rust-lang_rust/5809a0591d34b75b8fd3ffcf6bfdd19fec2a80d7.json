{"sha": "5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7", "node_id": "C_kwDOAAsO6NoAKDU4MDlhMDU5MWQzNGI3NWI4ZmQzZmZjZjZiZmRkMTlmZWMyYTgwZDc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-02T04:01:59Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-02T04:56:57Z"}, "message": "Properly synthesize fn sig value during cycle", "tree": {"sha": "1651d77284b14a2dddfd2cfc499a5c615327786b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1651d77284b14a2dddfd2cfc499a5c615327786b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7", "html_url": "https://github.com/rust-lang/rust/commit/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ac7e08aaf10d2882c6addcf220872c9390ed91e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac7e08aaf10d2882c6addcf220872c9390ed91e", "html_url": "https://github.com/rust-lang/rust/commit/5ac7e08aaf10d2882c6addcf220872c9390ed91e"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "70b98e59a8beab34f6e801b412526d6d5ac15aed", "filename": "compiler/rustc_middle/src/values.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs?ref=5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7", "patch": "@@ -32,13 +32,23 @@ impl<'tcx> Value<TyCtxt<'tcx>> for ty::SymbolName<'_> {\n }\n \n impl<'tcx> Value<TyCtxt<'tcx>> for ty::Binder<'_, ty::FnSig<'_>> {\n-    fn from_cycle_error(tcx: TyCtxt<'tcx>, _: &[QueryInfo]) -> Self {\n+    fn from_cycle_error(tcx: TyCtxt<'tcx>, stack: &[QueryInfo]) -> Self {\n         let err = tcx.ty_error();\n-        // FIXME(compiler-errors): It would be nice if we could get the\n-        // query key, so we could at least generate a fn signature that\n-        // has the right arity.\n+\n+        let arity = if let Some(frame) = stack.get(0)\n+            && frame.query.name == \"fn_sig\"\n+            && let Some(def_id) = frame.query.def_id\n+            && let Some(node) = tcx.hir().get_if_local(def_id)\n+            && let Some(sig) = node.fn_sig()\n+        {\n+            sig.decl.inputs.len() + sig.decl.implicit_self.has_implicit_self() as usize\n+        } else {\n+            tcx.sess.abort_if_errors();\n+            unreachable!()\n+        };\n+\n         let fn_sig = ty::Binder::dummy(tcx.mk_fn_sig(\n-            [].into_iter(),\n+            std::iter::repeat(err).take(arity),\n             err,\n             false,\n             rustc_hir::Unsafety::Normal,"}, {"sha": "7a9b8469c9e19ebfdffa471c6b834f976e6b5c52", "filename": "src/test/ui/query-system/fn-sig-cycle-arity.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7/src%2Ftest%2Fui%2Fquery-system%2Ffn-sig-cycle-arity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7/src%2Ftest%2Fui%2Fquery-system%2Ffn-sig-cycle-arity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fquery-system%2Ffn-sig-cycle-arity.rs?ref=5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7", "patch": "@@ -0,0 +1,8 @@\n+trait Dancer {\n+    fn dance(&self) -> _ {\n+        //~^ ERROR the placeholder `_` is not allowed within types on item signatures for return types\n+        self.dance()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "67e0c2545515eb402f7dd479034a44a1c39146d8", "filename": "src/test/ui/query-system/fn-sig-cycle-arity.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7/src%2Ftest%2Fui%2Fquery-system%2Ffn-sig-cycle-arity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7/src%2Ftest%2Fui%2Fquery-system%2Ffn-sig-cycle-arity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fquery-system%2Ffn-sig-cycle-arity.stderr?ref=5809a0591d34b75b8fd3ffcf6bfdd19fec2a80d7", "patch": "@@ -0,0 +1,9 @@\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/fn-sig-cycle-arity.rs:2:24\n+   |\n+LL |     fn dance(&self) -> _ {\n+   |                        ^ not allowed in type signatures\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0121`."}]}