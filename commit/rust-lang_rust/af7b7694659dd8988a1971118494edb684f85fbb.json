{"sha": "af7b7694659dd8988a1971118494edb684f85fbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmN2I3Njk0NjU5ZGQ4OTg4YTE5NzExMTg0OTRlZGI2ODRmODVmYmI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-20T22:47:47Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-20T23:23:19Z"}, "message": "[3/4 for #2365, #2671] Fix exit/kill race with scheds during rust_kernel::fail", "tree": {"sha": "75b28f06c7c8715dd42384b259afae38ac69cde7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75b28f06c7c8715dd42384b259afae38ac69cde7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af7b7694659dd8988a1971118494edb684f85fbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af7b7694659dd8988a1971118494edb684f85fbb", "html_url": "https://github.com/rust-lang/rust/commit/af7b7694659dd8988a1971118494edb684f85fbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af7b7694659dd8988a1971118494edb684f85fbb/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18c645a8839dd86d7f353d0fe98eaf27e246a525", "url": "https://api.github.com/repos/rust-lang/rust/commits/18c645a8839dd86d7f353d0fe98eaf27e246a525", "html_url": "https://github.com/rust-lang/rust/commit/18c645a8839dd86d7f353d0fe98eaf27e246a525"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "331aaf85a94b001073cc6b139ee3695ef2578681", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=af7b7694659dd8988a1971118494edb684f85fbb", "patch": "@@ -162,7 +162,7 @@ rust_kernel::wait_for_schedulers()\n             rust_scheduler *sched = iter->second;\n             sched_table.erase(iter);\n             sched->join_task_threads();\n-            delete sched;\n+            sched->deref();\n             if (sched_table.size() == 1) {\n                 KLOG_(\"Allowing osmain scheduler to exit\");\n                 // It's only the osmain scheduler left. Tell it to exit\n@@ -197,30 +197,29 @@ rust_kernel::fail() {\n #if defined(__WIN32__)\n     exit(rval);\n #endif\n-    // Copy the list of schedulers so that we don't hold the lock while\n-    // running kill_all_tasks.\n     // I think this only needs to be done by one task ever; as it is,\n     // multiple tasks invoking kill_all might get here. Currently libcore\n     // ensures only one task will ever invoke it, but this would really be\n     // fine either way, so I'm leaving it as it is. -- bblum\n-    // FIXME (#2671): There's a lot that happens under kill_all_tasks,\n-    // and I don't know that holding sched_lock here is ok, but we need\n-    // to hold the sched lock to prevent the scheduler from being\n-    // destroyed while we are using it. Probably we need to make\n-    // rust_scheduler atomicly reference counted.\n+\n+    // Copy the list of schedulers so that we don't hold the lock while\n+    // running kill_all_tasks. Refcount to ensure they stay alive.\n     std::vector<rust_scheduler*> scheds;\n     {\n         scoped_lock with(sched_lock);\n+        // All schedulers created after this flag is set will be doomed.\n         killed = true;\n         for (sched_map::iterator iter = sched_table.begin();\n              iter != sched_table.end(); iter++) {\n+            iter->second->ref();\n             scheds.push_back(iter->second);\n         }\n     }\n \n     for (std::vector<rust_scheduler*>::iterator iter = scheds.begin();\n          iter != scheds.end(); iter++) {\n         (*iter)->kill_all_tasks();\n+        (*iter)->deref();\n     }\n }\n "}, {"sha": "5dd1a261c0efd138405db601ef39a32f098cff71", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=af7b7694659dd8988a1971118494edb684f85fbb", "patch": "@@ -11,6 +11,7 @@ rust_scheduler::rust_scheduler(rust_kernel *kernel,\n                                bool allow_exit,\n                                bool killed,\n                                rust_sched_launcher_factory *launchfac) :\n+    ref_count(1),\n     kernel(kernel),\n     live_threads(num_threads),\n     live_tasks(0),\n@@ -22,8 +23,9 @@ rust_scheduler::rust_scheduler(rust_kernel *kernel,\n     create_task_threads(launchfac, killed);\n }\n \n-rust_scheduler::~rust_scheduler() {\n+void rust_scheduler::delete_this() {\n     destroy_task_threads();\n+    delete this;\n }\n \n rust_sched_launcher *"}, {"sha": "767ecaf7d1e3bc1d36944dfc04d398fc4df1e274", "filename": "src/rt/rust_scheduler.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_scheduler.h", "raw_url": "https://github.com/rust-lang/rust/raw/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_scheduler.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.h?ref=af7b7694659dd8988a1971118494edb684f85fbb", "patch": "@@ -11,11 +11,13 @@\n #include \"rust_globals.h\"\n #include \"util/array_list.h\"\n #include \"rust_kernel.h\"\n+#include \"rust_refcount.h\"\n \n class rust_sched_launcher;\n class rust_sched_launcher_factory;\n \n class rust_scheduler : public kernel_owned<rust_scheduler> {\n+    RUST_ATOMIC_REFCOUNT();\n     // FIXME (#2693): Make these private\n public:\n     rust_kernel *kernel;\n@@ -45,11 +47,13 @@ class rust_scheduler : public kernel_owned<rust_scheduler> {\n \n     void exit();\n \n+    // Called when refcount reaches zero\n+    void delete_this();\n+\n public:\n     rust_scheduler(rust_kernel *kernel, size_t num_threads,\n                    rust_sched_id id, bool allow_exit, bool killed,\n                    rust_sched_launcher_factory *launchfac);\n-    ~rust_scheduler();\n \n     void start_task_threads();\n     void join_task_threads();"}, {"sha": "2db882d11e30ddbc250df78ad8ecab4782d7961c", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/af7b7694659dd8988a1971118494edb684f85fbb/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=af7b7694659dd8988a1971118494edb684f85fbb", "patch": "@@ -122,8 +122,6 @@ rust_task_fail(rust_task *task,\n struct\n rust_task : public kernel_owned<rust_task>\n {\n-    // FIXME(#1789) Refcounting no longer seems needed now that tasks don't\n-    // ref their parents. I'll leave it in just in case... -- bblum\n     RUST_ATOMIC_REFCOUNT();\n \n     rust_task_id id;"}]}