{"sha": "fb0fbad5caa97da949cb2c6dbc56a1185bb53af9", "node_id": "C_kwDOAAsO6NoAKGZiMGZiYWQ1Y2FhOTdkYTk0OWNiMmM2ZGJjNTZhMTE4NWJiNTNhZjk", "commit": {"author": {"name": "Dharma Saputra Wijaya", "email": "dswijj@gmail.com", "date": "2021-10-26T13:22:22Z"}, "committer": {"name": "Dharma Saputra Wijaya", "email": "dswijj@gmail.com", "date": "2021-10-26T13:22:22Z"}, "message": "Rename variable name in `question_mark`", "tree": {"sha": "cd8c603cd4c41f1271f9ceee2a8094a35d9083c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd8c603cd4c41f1271f9ceee2a8094a35d9083c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb0fbad5caa97da949cb2c6dbc56a1185bb53af9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb0fbad5caa97da949cb2c6dbc56a1185bb53af9", "html_url": "https://github.com/rust-lang/rust/commit/fb0fbad5caa97da949cb2c6dbc56a1185bb53af9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb0fbad5caa97da949cb2c6dbc56a1185bb53af9/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fd168285a77c0b39941c9b418a6c8418d75d45a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fd168285a77c0b39941c9b418a6c8418d75d45a", "html_url": "https://github.com/rust-lang/rust/commit/2fd168285a77c0b39941c9b418a6c8418d75d45a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f63ef163bcbd0f1b76ddfd92fcac4d38b50a48bc", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fb0fbad5caa97da949cb2c6dbc56a1185bb53af9/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb0fbad5caa97da949cb2c6dbc56a1185bb53af9/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=fb0fbad5caa97da949cb2c6dbc56a1185bb53af9", "patch": "@@ -172,17 +172,17 @@ impl QuestionMark {\n         }\n     }\n \n-    fn expression_returns_unmodified_err(cx: &LateContext<'_>, expression: &Expr<'_>, cond_expr: &Expr<'_>) -> bool {\n-        match expression.kind {\n+    fn expression_returns_unmodified_err(cx: &LateContext<'_>, expr: &Expr<'_>, cond_expr: &Expr<'_>) -> bool {\n+        match expr.kind {\n             ExprKind::Block(block, _) => {\n                 if let Some(return_expression) = Self::return_expression(block) {\n                     return Self::expression_returns_unmodified_err(cx, return_expression, cond_expr);\n                 }\n \n                 false\n             },\n-            ExprKind::Ret(Some(expr)) => Self::expression_returns_unmodified_err(cx, expr, cond_expr),\n-            ExprKind::Path(_) => path_to_local(expression) == path_to_local(cond_expr),\n+            ExprKind::Ret(Some(ret_expr)) => Self::expression_returns_unmodified_err(cx, ret_expr, cond_expr),\n+            ExprKind::Path(_) => path_to_local(expr) == path_to_local(cond_expr),\n             _ => false,\n         }\n     }"}]}