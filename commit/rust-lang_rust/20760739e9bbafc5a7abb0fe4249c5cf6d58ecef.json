{"sha": "20760739e9bbafc5a7abb0fe4249c5cf6d58ecef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNzYwNzM5ZTliYmFmYzVhN2FiYjBmZTQyNDljNWNmNmQ1OGVjZWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-03T00:01:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-03T00:01:32Z"}, "message": "auto merge of #9689 : luisbg/rust/strftime, r=alexcrichton\n\nPlus testing added for %X and %x which were supported but not tested.\r\n\r\nWorking towards #2350", "tree": {"sha": "20dc255657002af8f2bc62e1265778e8eee74b90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20dc255657002af8f2bc62e1265778e8eee74b90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20760739e9bbafc5a7abb0fe4249c5cf6d58ecef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20760739e9bbafc5a7abb0fe4249c5cf6d58ecef", "html_url": "https://github.com/rust-lang/rust/commit/20760739e9bbafc5a7abb0fe4249c5cf6d58ecef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20760739e9bbafc5a7abb0fe4249c5cf6d58ecef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "371a7ec56959323fd8add557219c4cbcac89825f", "url": "https://api.github.com/repos/rust-lang/rust/commits/371a7ec56959323fd8add557219c4cbcac89825f", "html_url": "https://github.com/rust-lang/rust/commit/371a7ec56959323fd8add557219c4cbcac89825f"}, {"sha": "8f6e43e273eac4b9fc1202d09369af3d98957ebd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f6e43e273eac4b9fc1202d09369af3d98957ebd", "html_url": "https://github.com/rust-lang/rust/commit/8f6e43e273eac4b9fc1202d09369af3d98957ebd"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "795da44e224670313dde2834580a2625e64dd817", "filename": "src/libextra/time.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/20760739e9bbafc5a7abb0fe4249c5cf6d58ecef/src%2Flibextra%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20760739e9bbafc5a7abb0fe4249c5cf6d58ecef/src%2Flibextra%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftime.rs?ref=20760739e9bbafc5a7abb0fe4249c5cf6d58ecef", "patch": "@@ -788,7 +788,6 @@ fn do_strftime(format: &str, tm: &Tm) -> ~str {\n     }\n \n     fn parse_type(ch: char, tm: &Tm) -> ~str {\n-        //FIXME (#2350): Implement missing types.\n       let die = || format!(\"strftime: can't understand this format {} \", ch);\n         match ch {\n           'A' => match tm.tm_wday as int {\n@@ -920,10 +919,9 @@ fn do_strftime(format: &str, tm: &Tm) -> ~str {\n                 parse_type('b', tm),\n                 parse_type('Y', tm))\n           }\n-          //'W' {}\n+          'W' => format!(\"{:02d}\", (tm.tm_yday - (tm.tm_wday - 1 + 7) % 7 + 7)\n+                         / 7),\n           'w' => (tm.tm_wday as int).to_str(),\n-          //'X' {}\n-          //'x' {}\n           'Y' => (tm.tm_year as int + 1900).to_str(),\n           'y' => format!(\"{:02d}\", (tm.tm_year as int + 1900) % 100),\n           'Z' => tm.tm_zone.clone(),\n@@ -934,7 +932,7 @@ fn do_strftime(format: &str, tm: &Tm) -> ~str {\n             m -= h * 60_i32;\n             format!(\"{}{:02d}{:02d}\", sign, h, m)\n           }\n-          //'+' {}\n+          '+' => tm.rfc3339(),\n           '%' => ~\"%\",\n           _   => die()\n         }\n@@ -1297,12 +1295,13 @@ mod tests {\n         assert_eq!(local.strftime(\"%u\"), ~\"5\");\n         assert_eq!(local.strftime(\"%V\"), ~\"07\");\n         assert_eq!(local.strftime(\"%v\"), ~\"13-Feb-2009\");\n-        // assert!(local.strftime(\"%W\") == \"06\");\n+        assert_eq!(local.strftime(\"%W\"), ~\"06\");\n         assert_eq!(local.strftime(\"%w\"), ~\"5\");\n-        // handle \"%X\"\n-        // handle \"%x\"\n+        assert_eq!(local.strftime(\"%X\"), ~\"15:31:30\"); // FIXME (#2350): support locale\n+        assert_eq!(local.strftime(\"%x\"), ~\"02/13/09\"); // FIXME (#2350): support locale\n         assert_eq!(local.strftime(\"%Y\"), ~\"2009\");\n         assert_eq!(local.strftime(\"%y\"), ~\"09\");\n+        assert_eq!(local.strftime(\"%+\"), ~\"2009-02-13T15:31:30-08:00\");\n \n         // FIXME (#2350): We should probably standardize on the timezone\n         // abbreviation."}]}