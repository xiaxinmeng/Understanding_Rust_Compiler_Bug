{"sha": "6137ad49e45713c7bdd3703814829d6362bf1dd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMzdhZDQ5ZTQ1NzEzYzdiZGQzNzAzODE0ODI5ZDYzNjJiZjFkZDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-30T06:48:16Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-30T12:50:20Z"}, "message": "move demand_eqtype_pat* to pat.rs", "tree": {"sha": "0839b65d4f3f5ef73846181e8ed1eab2bc9d8866", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0839b65d4f3f5ef73846181e8ed1eab2bc9d8866"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6137ad49e45713c7bdd3703814829d6362bf1dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6137ad49e45713c7bdd3703814829d6362bf1dd1", "html_url": "https://github.com/rust-lang/rust/commit/6137ad49e45713c7bdd3703814829d6362bf1dd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6137ad49e45713c7bdd3703814829d6362bf1dd1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e952377ddc7bdddfee03ee09f3530a1c025f1d99", "url": "https://api.github.com/repos/rust-lang/rust/commits/e952377ddc7bdddfee03ee09f3530a1c025f1d99", "html_url": "https://github.com/rust-lang/rust/commit/e952377ddc7bdddfee03ee09f3530a1c025f1d99"}], "stats": {"total": 57, "additions": 30, "deletions": 27}, "files": [{"sha": "8120183e6e1355027b4d5a036a5980ac09cc2226", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6137ad49e45713c7bdd3703814829d6362bf1dd1/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6137ad49e45713c7bdd3703814829d6362bf1dd1/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=6137ad49e45713c7bdd3703814829d6362bf1dd1", "patch": "@@ -1,6 +1,6 @@\n use crate::check::FnCtxt;\n use rustc::infer::InferOk;\n-use rustc::traits::{self, ObligationCause, ObligationCauseCode};\n+use rustc::traits::{self, ObligationCause};\n \n use errors::{Applicability, DiagnosticBuilder};\n use rustc::hir::{self, is_range_literal, print, Node};\n@@ -79,32 +79,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n-    pub fn demand_eqtype_pat_diag(\n-        &self,\n-        cause_span: Span,\n-        expected: Ty<'tcx>,\n-        actual: Ty<'tcx>,\n-        match_expr_span: Option<Span>,\n-    ) -> Option<DiagnosticBuilder<'tcx>> {\n-        let cause = if let Some(span) = match_expr_span {\n-            self.cause(cause_span, ObligationCauseCode::Pattern { span, ty: expected })\n-        } else {\n-            self.misc(cause_span)\n-        };\n-        self.demand_eqtype_with_origin(&cause, expected, actual)\n-    }\n-\n-    pub fn demand_eqtype_pat(\n-        &self,\n-        cause_span: Span,\n-        expected: Ty<'tcx>,\n-        actual: Ty<'tcx>,\n-        match_expr_span: Option<Span>,\n-    ) {\n-        self.demand_eqtype_pat_diag(cause_span, expected, actual, match_expr_span)\n-            .map(|mut err| err.emit());\n-    }\n-\n     pub fn demand_coerce(\n         &self,\n         expr: &hir::Expr<'_>,"}, {"sha": "c7986311242b449415ce901e4653b937ee3227f7", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6137ad49e45713c7bdd3703814829d6362bf1dd1/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6137ad49e45713c7bdd3703814829d6362bf1dd1/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=6137ad49e45713c7bdd3703814829d6362bf1dd1", "patch": "@@ -6,6 +6,7 @@ use rustc::hir::pat_util::EnumerateAndAdjustIterator;\n use rustc::hir::{self, HirId, Pat, PatKind};\n use rustc::infer;\n use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc::traits::Pattern;\n use rustc::ty::subst::GenericArg;\n use rustc::ty::{self, BindingMode, Ty, TypeFoldable};\n use syntax::ast;\n@@ -29,6 +30,34 @@ pointers. If you encounter this error you should try to avoid dereferencing the\n You can read more about trait objects in the Trait Objects section of the Reference: \\\n https://doc.rust-lang.org/reference/types.html#trait-objects\";\n \n+impl<'tcx> FnCtxt<'_, 'tcx> {\n+    fn demand_eqtype_pat_diag(\n+        &self,\n+        cause_span: Span,\n+        expected: Ty<'tcx>,\n+        actual: Ty<'tcx>,\n+        match_expr_span: Option<Span>,\n+    ) -> Option<DiagnosticBuilder<'tcx>> {\n+        let cause = if let Some(span) = match_expr_span {\n+            self.cause(cause_span, Pattern { span, ty: expected })\n+        } else {\n+            self.misc(cause_span)\n+        };\n+        self.demand_eqtype_with_origin(&cause, expected, actual)\n+    }\n+\n+    fn demand_eqtype_pat(\n+        &self,\n+        cause_span: Span,\n+        expected: Ty<'tcx>,\n+        actual: Ty<'tcx>,\n+        match_expr_span: Option<Span>,\n+    ) {\n+        self.demand_eqtype_pat_diag(cause_span, expected, actual, match_expr_span)\n+            .map(|mut err| err.emit());\n+    }\n+}\n+\n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     pub fn check_pat_top(\n         &self,"}]}