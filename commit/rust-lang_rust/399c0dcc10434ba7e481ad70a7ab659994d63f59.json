{"sha": "399c0dcc10434ba7e481ad70a7ab659994d63f59", "node_id": "C_kwDOAAsO6NoAKDM5OWMwZGNjMTA0MzRiYTdlNDgxYWQ3MGE3YWI2NTk5OTRkNjNmNTk", "commit": {"author": {"name": "Eduardo S\u00e1nchez Mu\u00f1oz", "email": "eduardosm-dev@e64.io", "date": "2022-04-13T17:15:34Z"}, "committer": {"name": "Eduardo S\u00e1nchez Mu\u00f1oz", "email": "eduardosm-dev@e64.io", "date": "2022-04-14T17:35:40Z"}, "message": "`Unique<T>` is now considered FFI-safe", "tree": {"sha": "080255345a8868281e9aac7dae11c02896e0dd8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/080255345a8868281e9aac7dae11c02896e0dd8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/399c0dcc10434ba7e481ad70a7ab659994d63f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/399c0dcc10434ba7e481ad70a7ab659994d63f59", "html_url": "https://github.com/rust-lang/rust/commit/399c0dcc10434ba7e481ad70a7ab659994d63f59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/399c0dcc10434ba7e481ad70a7ab659994d63f59/comments", "author": {"login": "eduardosm", "id": 761151, "node_id": "MDQ6VXNlcjc2MTE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/761151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eduardosm", "html_url": "https://github.com/eduardosm", "followers_url": "https://api.github.com/users/eduardosm/followers", "following_url": "https://api.github.com/users/eduardosm/following{/other_user}", "gists_url": "https://api.github.com/users/eduardosm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eduardosm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eduardosm/subscriptions", "organizations_url": "https://api.github.com/users/eduardosm/orgs", "repos_url": "https://api.github.com/users/eduardosm/repos", "events_url": "https://api.github.com/users/eduardosm/events{/privacy}", "received_events_url": "https://api.github.com/users/eduardosm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eduardosm", "id": 761151, "node_id": "MDQ6VXNlcjc2MTE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/761151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eduardosm", "html_url": "https://github.com/eduardosm", "followers_url": "https://api.github.com/users/eduardosm/followers", "following_url": "https://api.github.com/users/eduardosm/following{/other_user}", "gists_url": "https://api.github.com/users/eduardosm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eduardosm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eduardosm/subscriptions", "organizations_url": "https://api.github.com/users/eduardosm/orgs", "repos_url": "https://api.github.com/users/eduardosm/repos", "events_url": "https://api.github.com/users/eduardosm/events{/privacy}", "received_events_url": "https://api.github.com/users/eduardosm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58af72a03b8215b70cfb33d358519917fc9458b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c58af72a03b8215b70cfb33d358519917fc9458b", "html_url": "https://github.com/rust-lang/rust/commit/c58af72a03b8215b70cfb33d358519917fc9458b"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "7c20608059398d6c3477476b7b41ccd895ab2a9d", "filename": "src/test/ui/lint/lint-ctypes-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/399c0dcc10434ba7e481ad70a7ab659994d63f59/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399c0dcc10434ba7e481ad70a7ab659994d63f59/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.rs?ref=399c0dcc10434ba7e481ad70a7ab659994d63f59", "patch": "@@ -67,7 +67,6 @@ extern \"C\" {\n    fn option_fn(x: Option<extern \"C\" fn()>);\n    fn nonnull(x: Option<std::ptr::NonNull<u8>>);\n    fn unique(x: Option<std::ptr::Unique<u8>>);\n-   //~^ ERROR `extern` block uses type `Option<Unique<u8>>`\n    fn nonzero_u8(x: Option<num::NonZeroU8>);\n    fn nonzero_u16(x: Option<num::NonZeroU16>);\n    fn nonzero_u32(x: Option<num::NonZeroU32>);"}, {"sha": "1601bd9d62927f4fe9fa202d8c8247f43bd43115", "filename": "src/test/ui/lint/lint-ctypes-enum.stderr", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/399c0dcc10434ba7e481ad70a7ab659994d63f59/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/399c0dcc10434ba7e481ad70a7ab659994d63f59/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-enum.stderr?ref=399c0dcc10434ba7e481ad70a7ab659994d63f59", "patch": "@@ -54,33 +54,24 @@ LL | |     G,\n LL | | }\n    | |_^\n \n-error: `extern` block uses type `Option<Unique<u8>>`, which is not FFI-safe\n-  --> $DIR/lint-ctypes-enum.rs:69:17\n-   |\n-LL |    fn unique(x: Option<std::ptr::Unique<u8>>);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n-   |\n-   = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n-   = note: enum has no representation hint\n-\n error: `extern` block uses type `u128`, which is not FFI-safe\n-  --> $DIR/lint-ctypes-enum.rs:75:23\n+  --> $DIR/lint-ctypes-enum.rs:74:23\n    |\n LL |    fn nonzero_u128(x: Option<num::NonZeroU128>);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n    |\n    = note: 128-bit integers don't currently have a known stable ABI\n \n error: `extern` block uses type `i128`, which is not FFI-safe\n-  --> $DIR/lint-ctypes-enum.rs:82:23\n+  --> $DIR/lint-ctypes-enum.rs:81:23\n    |\n LL |    fn nonzero_i128(x: Option<num::NonZeroI128>);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n    |\n    = note: 128-bit integers don't currently have a known stable ABI\n \n error: `extern` block uses type `Option<TransparentUnion<NonZeroU8>>`, which is not FFI-safe\n-  --> $DIR/lint-ctypes-enum.rs:87:28\n+  --> $DIR/lint-ctypes-enum.rs:86:28\n    |\n LL |    fn transparent_union(x: Option<TransparentUnion<num::NonZeroU8>>);\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n@@ -89,7 +80,7 @@ LL |    fn transparent_union(x: Option<TransparentUnion<num::NonZeroU8>>);\n    = note: enum has no representation hint\n \n error: `extern` block uses type `Option<Rust<NonZeroU8>>`, which is not FFI-safe\n-  --> $DIR/lint-ctypes-enum.rs:89:20\n+  --> $DIR/lint-ctypes-enum.rs:88:20\n    |\n LL |    fn repr_rust(x: Option<Rust<num::NonZeroU8>>);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n@@ -98,13 +89,13 @@ LL |    fn repr_rust(x: Option<Rust<num::NonZeroU8>>);\n    = note: enum has no representation hint\n \n error: `extern` block uses type `Result<(), NonZeroI32>`, which is not FFI-safe\n-  --> $DIR/lint-ctypes-enum.rs:90:20\n+  --> $DIR/lint-ctypes-enum.rs:89:20\n    |\n LL |    fn no_result(x: Result<(), num::NonZeroI32>);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n    |\n    = help: consider adding a `#[repr(C)]`, `#[repr(transparent)]`, or integer `#[repr(...)]` attribute to this enum\n    = note: enum has no representation hint\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 8 previous errors\n "}]}