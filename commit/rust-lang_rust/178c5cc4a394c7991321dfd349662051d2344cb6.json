{"sha": "178c5cc4a394c7991321dfd349662051d2344cb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3OGM1Y2M0YTM5NGM3OTkxMzIxZGZkMzQ5NjYyMDUxZDIzNDRjYjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-15T22:04:29Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-31T04:23:34Z"}, "message": "rt: Add yet another allocating upcall\n\nupcall_exchange_malloc_dyn, for allocating unique boxes for types that don't\nhave a fixed size.", "tree": {"sha": "b45064f9e980c54fcf8d409b0d8e0450605846f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b45064f9e980c54fcf8d409b0d8e0450605846f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/178c5cc4a394c7991321dfd349662051d2344cb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/178c5cc4a394c7991321dfd349662051d2344cb6", "html_url": "https://github.com/rust-lang/rust/commit/178c5cc4a394c7991321dfd349662051d2344cb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/178c5cc4a394c7991321dfd349662051d2344cb6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6a23cddfb66c97c5c5a5836a08c602ba2bb4f02", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a23cddfb66c97c5c5a5836a08c602ba2bb4f02", "html_url": "https://github.com/rust-lang/rust/commit/c6a23cddfb66c97c5c5a5836a08c602ba2bb4f02"}], "stats": {"total": 58, "additions": 44, "deletions": 14}, "files": [{"sha": "6a9d663f8fdcd3b79688f608a31d4330b119821d", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 43, "deletions": 14, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/178c5cc4a394c7991321dfd349662051d2344cb6/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/178c5cc4a394c7991321dfd349662051d2344cb6/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=178c5cc4a394c7991321dfd349662051d2344cb6", "patch": "@@ -155,31 +155,38 @@ upcall_trace(char const *msg,\n  * Allocate an object in the exchange heap\n  */\n \n-struct s_exchange_malloc_args {\n-    uintptr_t retval;\n-    type_desc *td;\n-};\n-\n-extern \"C\" CDECL void\n-upcall_s_exchange_malloc(s_exchange_malloc_args *args) {\n-    rust_task *task = rust_get_current_task();\n-    LOG_UPCALL_ENTRY(task);\n+extern \"C\" CDECL uintptr_t\n+exchange_malloc(rust_task *task, type_desc *td, uintptr_t size) {\n \n-    LOG(task, mem, \"upcall exchange malloc(0x%\" PRIxPTR \")\", args->td);\n+    LOG(task, mem, \"upcall exchange malloc(0x%\" PRIxPTR \")\", td);\n \n     // Copied from boxed_region\n     size_t header_size = sizeof(rust_opaque_box);\n-    size_t body_size = args->td->size;\n-    size_t body_align = args->td->align;\n+    size_t body_size = size;\n+    size_t body_align = td->align;\n     size_t total_size = align_to(header_size, body_align) + body_size;\n \n     void *p = task->kernel->malloc(total_size, \"exchange malloc\");\n     memset(p, '\\0', total_size);\n \n     rust_opaque_box *header = static_cast<rust_opaque_box*>(p);\n-    header->td = args->td;\n+    header->td = td;\n+\n+    return (uintptr_t)header;\n+}\n+\n+struct s_exchange_malloc_args {\n+    uintptr_t retval;\n+    type_desc *td;\n+};\n+\n+extern \"C\" CDECL void\n+upcall_s_exchange_malloc(s_exchange_malloc_args *args) {\n+    rust_task *task = rust_get_current_task();\n+    LOG_UPCALL_ENTRY(task);\n \n-    args->retval = (uintptr_t)header;\n+    uintptr_t retval = exchange_malloc(task, args->td, args->td->size);\n+    args->retval = retval;\n }\n \n extern \"C\" CDECL uintptr_t\n@@ -189,6 +196,28 @@ upcall_exchange_malloc(type_desc *td) {\n     return args.retval;\n }\n \n+struct s_exchange_malloc_dyn_args {\n+    uintptr_t retval;\n+    type_desc *td;\n+    uintptr_t size;\n+};\n+\n+extern \"C\" CDECL void\n+upcall_s_exchange_malloc_dyn(s_exchange_malloc_dyn_args *args) {\n+    rust_task *task = rust_get_current_task();\n+    LOG_UPCALL_ENTRY(task);\n+\n+    uintptr_t retval = exchange_malloc(task, args->td, args->size);\n+    args->retval = retval;\n+}\n+\n+extern \"C\" CDECL uintptr_t\n+upcall_exchange_malloc_dyn(type_desc *td, uintptr_t size) {\n+    s_exchange_malloc_dyn_args args = {0, td, size};\n+    UPCALL_SWITCH_STACK(&args, upcall_s_exchange_malloc_dyn);\n+    return args.retval;\n+}\n+\n struct s_exchange_free_args {\n     void *ptr;\n };"}, {"sha": "7c04902de5779157665b13c6a63c56ec7f5ba838", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/178c5cc4a394c7991321dfd349662051d2344cb6/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/178c5cc4a394c7991321dfd349662051d2344cb6/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=178c5cc4a394c7991321dfd349662051d2344cb6", "patch": "@@ -89,6 +89,7 @@ upcall_new_stack\n upcall_del_stack\n upcall_reset_stack_limit\n upcall_exchange_malloc\n+upcall_exchange_malloc_dyn\n upcall_exchange_free\n rust_uv_loop_new\n rust_uv_loop_delete"}]}