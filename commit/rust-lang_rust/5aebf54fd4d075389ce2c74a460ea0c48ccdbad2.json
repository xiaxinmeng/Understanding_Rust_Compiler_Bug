{"sha": "5aebf54fd4d075389ce2c74a460ea0c48ccdbad2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhZWJmNTRmZDRkMDc1Mzg5Y2UyYzc0YTQ2MGVhMGM0OGNjZGJhZDI=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-07T23:26:55Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-09T22:42:20Z"}, "message": "Add tests", "tree": {"sha": "faef62064ec661d3577d98d59e8d19f307b29163", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faef62064ec661d3577d98d59e8d19f307b29163"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aebf54fd4d075389ce2c74a460ea0c48ccdbad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aebf54fd4d075389ce2c74a460ea0c48ccdbad2", "html_url": "https://github.com/rust-lang/rust/commit/5aebf54fd4d075389ce2c74a460ea0c48ccdbad2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aebf54fd4d075389ce2c74a460ea0c48ccdbad2/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbf70cd015454cf125fda9b006251fa2782fbc7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf70cd015454cf125fda9b006251fa2782fbc7f", "html_url": "https://github.com/rust-lang/rust/commit/dbf70cd015454cf125fda9b006251fa2782fbc7f"}], "stats": {"total": 153, "additions": 153, "deletions": 0}, "files": [{"sha": "049e99674aa702b5c4942e6785262651f9887b0b", "filename": "crates/ide/src/completion/complete_mod.rs", "status": "modified", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/rust-lang/rust/blob/5aebf54fd4d075389ce2c74a460ea0c48ccdbad2/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5aebf54fd4d075389ce2c74a460ea0c48ccdbad2/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fcomplete_mod.rs?ref=5aebf54fd4d075389ce2c74a460ea0c48ccdbad2", "patch": "@@ -147,3 +147,156 @@ fn module_chain_to_containing_module_file(\n \n     path\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::completion::{test_utils::completion_list, CompletionKind};\n+    use expect_test::{expect, Expect};\n+\n+    fn check(ra_fixture: &str, expect: Expect) {\n+        let actual = completion_list(ra_fixture, CompletionKind::Magic);\n+        expect.assert_eq(&actual);\n+    }\n+\n+    #[test]\n+    fn lib_module_completion() {\n+        check(\n+            r#\"\n+            //- /lib.rs\n+            mod <|>\n+            //- /foo.rs\n+            fn foo() {}\n+            //- /foo/ignored_foo.rs\n+            fn ignored_foo() {}\n+            //- /bar/mod.rs\n+            fn bar() {}\n+            //- /bar/ignored_bar.rs\n+            fn ignored_bar() {}\n+        \"#,\n+            expect![[r#\"\n+                md bar;\n+                md foo;\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn main_module_completion() {\n+        check(\n+            r#\"\n+            //- /main.rs\n+            mod <|>\n+            //- /foo.rs\n+            fn foo() {}\n+            //- /foo/ignored_foo.rs\n+            fn ignored_foo() {}\n+            //- /bar/mod.rs\n+            fn bar() {}\n+            //- /bar/ignored_bar.rs\n+            fn ignored_bar() {}\n+        \"#,\n+            expect![[r#\"\n+                md bar;\n+                md foo;\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn main_test_module_completion() {\n+        check(\n+            r#\"\n+            //- /main.rs\n+            mod tests {\n+                mod <|>;\n+            }\n+            //- /tests/foo.rs\n+            fn foo() {}\n+        \"#,\n+            expect![[r#\"\n+                md foo\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn directly_nested_module_completion() {\n+        check(\n+            r#\"\n+            //- /lib.rs\n+            mod foo;\n+            //- /foo.rs\n+            mod <|>;\n+            //- /foo/bar.rs\n+            fn bar() {}\n+            //- /foo/bar/ignored_bar.rs\n+            fn ignored_bar() {}\n+            //- /foo/baz/mod.rs\n+            fn baz() {}\n+            //- /foo/moar/ignored_moar.rs\n+            fn ignored_moar() {}\n+        \"#,\n+            expect![[r#\"\n+                md bar\n+                md baz\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn nested_in_source_module_completion() {\n+        check(\n+            r#\"\n+            //- /lib.rs\n+            mod foo;\n+            //- /foo.rs\n+            mod bar {\n+                mod <|>\n+            }\n+            //- /foo/bar/baz.rs\n+            fn baz() {}\n+        \"#,\n+            expect![[r#\"\n+                md baz;\n+            \"#]],\n+        );\n+    }\n+\n+    // FIXME binart modules are not picked up in tests\n+    // #[test]\n+    // fn regular_bin_module_completion() {\n+    //     check(\n+    //         r#\"\n+    //         //- /src/main.rs\n+    //         fn main() {}\n+    //         //- /src/main/foo.rs\n+    //         mod <|>\n+    //         //- /src/main/bar.rs\n+    //         fn bar() {}\n+    //         //- /src/main/bar/bar_ignored.rs\n+    //         fn bar_ignored() {}\n+    //     \"#,\n+    //         expect![[r#\"\n+    //             md bar;\n+    //         \"#]],\n+    //     );\n+    // }\n+\n+    #[test]\n+    fn already_declared_bin_module_completion_omitted() {\n+        check(\n+            r#\"\n+            //- /src/main.rs\n+            fn main() {}\n+            //- /src/main/foo.rs\n+            mod <|>\n+            //- /src/main/bar.rs\n+            mod foo;\n+            fn bar() {}\n+            //- /src/main/bar/bar_ignored.rs\n+            fn bar_ignored() {}\n+        \"#,\n+            expect![[r#\"\"#]],\n+        );\n+    }\n+}"}]}