{"sha": "86e6e3235ee0df25ce41dcb48a08387125d31d35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZTZlMzIzNWVlMGRmMjVjZTQxZGNiNDhhMDgzODcxMjVkMzFkMzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-14T08:25:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-14T08:25:39Z"}, "message": "Auto merge of #31391 - frewsxcv:test, r=alexcrichton\n\nPart of #31185", "tree": {"sha": "1900b9613b5651a8233eb975dd3caeaeccf443e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1900b9613b5651a8233eb975dd3caeaeccf443e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86e6e3235ee0df25ce41dcb48a08387125d31d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86e6e3235ee0df25ce41dcb48a08387125d31d35", "html_url": "https://github.com/rust-lang/rust/commit/86e6e3235ee0df25ce41dcb48a08387125d31d35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86e6e3235ee0df25ce41dcb48a08387125d31d35/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d98390765bbe61ce2a39b40c99ae1a68bb6d1cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d98390765bbe61ce2a39b40c99ae1a68bb6d1cc", "html_url": "https://github.com/rust-lang/rust/commit/9d98390765bbe61ce2a39b40c99ae1a68bb6d1cc"}, {"sha": "e5e2cdb9e3aa49ac1e83d6375c324a90e0329b7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e2cdb9e3aa49ac1e83d6375c324a90e0329b7d", "html_url": "https://github.com/rust-lang/rust/commit/e5e2cdb9e3aa49ac1e83d6375c324a90e0329b7d"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "acb75bb7cdc3b0ced461a73676972e5b6b5cb16b", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86e6e3235ee0df25ce41dcb48a08387125d31d35/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/86e6e3235ee0df25ce41dcb48a08387125d31d35/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=86e6e3235ee0df25ce41dcb48a08387125d31d35", "patch": "@@ -1071,7 +1071,8 @@ $(3)/test/run-make/%-$(1)-T-$(2)-H-$(3).ok: \\\n \t    $$(S) \\\n \t    $(3) \\\n \t    \"$$(LLVM_LIBDIR_RUSTFLAGS_$(3))\" \\\n-\t    \"$$(LLVM_ALL_COMPONENTS_$(3))\"\n+\t    \"$$(LLVM_ALL_COMPONENTS_$(3))\" \\\n+\t    \"$$(LLVM_CXXFLAGS_$(3))\"\n \t@touch -r $$@.start_time $$@ && rm $$@.start_time\n else\n # FIXME #11094 - The above rule doesn't work right for multiple targets"}, {"sha": "1687838289babc0bd42cb11587fa995864e07435", "filename": "src/etc/maketest.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Fetc%2Fmaketest.py", "raw_url": "https://github.com/rust-lang/rust/raw/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Fetc%2Fmaketest.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmaketest.py?ref=86e6e3235ee0df25ce41dcb48a08387125d31d35", "patch": "@@ -46,6 +46,7 @@ def convert_path_spec(name, value):\n putenv('RUSTC', os.path.abspath(sys.argv[3]))\n putenv('TMPDIR', os.path.abspath(sys.argv[4]))\n putenv('CC', sys.argv[5] + ' ' + sys.argv[6])\n+putenv('CFLAGS', sys.argv[6])\n putenv('RUSTDOC', os.path.abspath(sys.argv[7]))\n filt = sys.argv[8]\n putenv('LD_LIB_PATH_ENVVAR', sys.argv[9])\n@@ -55,6 +56,7 @@ def convert_path_spec(name, value):\n putenv('S', os.path.abspath(sys.argv[13]))\n putenv('RUSTFLAGS', sys.argv[15])\n putenv('LLVM_COMPONENTS', sys.argv[16])\n+putenv('LLVM_CXXFLAGS', sys.argv[17])\n putenv('PYTHON', sys.executable)\n os.putenv('TARGET', target_triple)\n "}, {"sha": "93c7c4f5001423db63b91d72a6b25b89213dbdc7", "filename": "src/test/run-make/llvm-module-pass/Makefile", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-module-pass%2FMakefile?ref=86e6e3235ee0df25ce41dcb48a08387125d31d35", "patch": "@@ -0,0 +1,14 @@\n+-include ../tools.mk\n+\n+# Windows doesn't correctly handle include statements with escaping paths,\n+# so this test will not get run on Windows.\n+ifdef IS_WINDOWS\n+all:\n+else\n+all: $(call NATIVE_STATICLIB,llvm-pass)\n+\t$(RUSTC) plugin.rs -C prefer-dynamic\n+\t$(RUSTC) main.rs\n+\n+$(TMPDIR)/libllvm-pass.o:\n+\t$(CXX) $(CFLAGS) $(LLVM_CXXFLAGS) -c llvm-pass.so.cc -o $(TMPDIR)/libllvm-pass.o\n+endif"}, {"sha": "06b0d6c300caf38973ff41924c729469c3708151", "filename": "src/test/run-make/llvm-module-pass/llvm-pass.so.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fllvm-pass.so.cc", "raw_url": "https://github.com/rust-lang/rust/raw/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fllvm-pass.so.cc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fllvm-pass.so.cc?ref=86e6e3235ee0df25ce41dcb48a08387125d31d35", "patch": "@@ -0,0 +1,55 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <unistd.h>\n+\n+#include \"llvm/IR/Module.h\"\n+\n+using namespace llvm;\n+\n+namespace {\n+\n+  class TestLLVMPass : public ModulePass {\n+\n+  public:\n+\n+    static char ID;\n+    TestLLVMPass() : ModulePass(ID) { }\n+\n+    bool runOnModule(Module &M) override;\n+\n+    const char *getPassName() const override {\n+      return \"Some LLVM pass\";\n+    }\n+\n+  };\n+\n+}\n+\n+bool TestLLVMPass::runOnModule(Module &M) {\n+  // A couple examples of operations that previously caused segmentation faults\n+  // https://github.com/rust-lang/rust/issues/31067\n+\n+  for (auto F = M.begin(); F != M.end(); ++F) {\n+    /* code */\n+  }\n+\n+  LLVMContext &C = M.getContext();\n+  IntegerType *Int8Ty  = IntegerType::getInt8Ty(C);\n+  PointerType::get(Int8Ty, 0);\n+  return true;\n+}\n+\n+char TestLLVMPass::ID = 0;\n+\n+static RegisterPass<TestLLVMPass> RegisterAFLPass(\n+  \"some-llvm-pass\", \"Some LLVM pass\");"}, {"sha": "5b5ab94bcef02c139cb8493936050b5b2c0ca5ce", "filename": "src/test/run-make/llvm-module-pass/main.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fmain.rs?ref=86e6e3235ee0df25ce41dcb48a08387125d31d35", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(plugin)]\n+#![plugin(some_plugin)]\n+\n+fn main() {}"}, {"sha": "039de3c717961d483d34bf3b05c9035fc96ad8dc", "filename": "src/test/run-make/llvm-module-pass/plugin.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86e6e3235ee0df25ce41dcb48a08387125d31d35/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fllvm-module-pass%2Fplugin.rs?ref=86e6e3235ee0df25ce41dcb48a08387125d31d35", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(plugin_registrar, rustc_private)]\n+#![crate_type = \"dylib\"]\n+#![crate_name = \"some_plugin\"]\n+\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+#[link(name = \"llvm-pass\", kind = \"static\")]\n+extern {}\n+\n+use rustc_plugin::registry::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_llvm_pass(\"some-llvm-pass\");\n+}"}]}