{"sha": "77e1a7c578f61572bbb4e40c5a12e2d0a74329b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZTFhN2M1NzhmNjE1NzJiYmI0ZTQwYzVhMTJlMmQwYTc0MzI5Yjg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-07T22:07:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-07T22:07:33Z"}, "message": "Rollup merge of #64177 - petrochenkov:curmod, r=matthewjasper\n\nresolve: Do not afraid to set current module to enums and traits\n\nAfter https://github.com/rust-lang/rust/pull/63535/commits/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53 it's ok.\n\nThis is likely required for https://github.com/rust-lang/rust/pull/63468 to work correctly, because that PR starts resolving attributes on enum variants.\n\nr? @matthewjasper @c410-f3r", "tree": {"sha": "565995d5d63496fb383886dcf4995b0a9c96c405", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/565995d5d63496fb383886dcf4995b0a9c96c405"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJddColCRBK7hj4Ov3rIwAAdHIIAFMLXmEM2BXCX36d6OfP9rcF\nzeRWvR/BwypXrYUqBR0a8MgHXXtV1XONCBdosz/STUfJOMQ1ObFy0JZfAI/Udav9\nxV6IpVhfjBn1dzkNHRp2mG/nr7eDzPQIQZc+9vF5rjYIRNWscrLlbCEdzDzf8pId\n2fIeBUCohKSRSlQXrT9QSIWbB+ksa11hAdN/ubuyCttRRR8qm5Tg5RLw36itTUwj\nSHPzb3g2EIQCr3sib+65OZ41Fv5mjcKm47iXAXs7EB2Usle0aDBuDXY3YDaON0DF\nZSwvFykZhGDieWkn64lgHHqtLXCzAcD2kGIXscfSX9ZVF+ErlgQL/+fOB6dd5pQ=\n=7hJ0\n-----END PGP SIGNATURE-----\n", "payload": "tree 565995d5d63496fb383886dcf4995b0a9c96c405\nparent 4ea77975ab2d9fd31309d8c11013d553d22745d6\nparent 56f635304b7a2689cfe5e98577428d67f059b413\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567894053 +0200\ncommitter GitHub <noreply@github.com> 1567894053 +0200\n\nRollup merge of #64177 - petrochenkov:curmod, r=matthewjasper\n\nresolve: Do not afraid to set current module to enums and traits\n\nAfter https://github.com/rust-lang/rust/pull/63535/commits/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53 it's ok.\n\nThis is likely required for https://github.com/rust-lang/rust/pull/63468 to work correctly, because that PR starts resolving attributes on enum variants.\n\nr? @matthewjasper @c410-f3r\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8", "html_url": "https://github.com/rust-lang/rust/commit/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ea77975ab2d9fd31309d8c11013d553d22745d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea77975ab2d9fd31309d8c11013d553d22745d6", "html_url": "https://github.com/rust-lang/rust/commit/4ea77975ab2d9fd31309d8c11013d553d22745d6"}, {"sha": "56f635304b7a2689cfe5e98577428d67f059b413", "url": "https://api.github.com/repos/rust-lang/rust/commits/56f635304b7a2689cfe5e98577428d67f059b413", "html_url": "https://github.com/rust-lang/rust/commit/56f635304b7a2689cfe5e98577428d67f059b413"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "333509e18504d9c9a2e11cab81af5f6df36c7b12", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=77e1a7c578f61572bbb4e40c5a12e2d0a74329b8", "patch": "@@ -728,9 +728,10 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                                              expansion,\n                                              item.span);\n                 self.r.define(parent, ident, TypeNS, (module, vis, sp, expansion));\n+                self.parent_scope.module = module;\n \n                 for variant in &(*enum_definition).variants {\n-                    self.build_reduced_graph_for_variant(variant, module, vis);\n+                    self.build_reduced_graph_for_variant(variant, vis);\n                 }\n             }\n \n@@ -818,10 +819,8 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n \n     // Constructs the reduced graph for one variant. Variants exist in the\n     // type and value namespaces.\n-    fn build_reduced_graph_for_variant(&mut self,\n-                                       variant: &Variant,\n-                                       parent: Module<'a>,\n-                                       vis: ty::Visibility) {\n+    fn build_reduced_graph_for_variant(&mut self, variant: &Variant, vis: ty::Visibility) {\n+        let parent = self.parent_scope.module;\n         let expn_id = self.parent_scope.expansion;\n         let ident = variant.ident;\n \n@@ -1253,9 +1252,7 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n         let expansion = self.parent_scope.expansion;\n         self.r.define(parent, item.ident, ns, (res, vis, item.span, expansion));\n \n-        self.parent_scope.module = parent.parent.unwrap(); // nearest normal ancestor\n         visit::walk_trait_item(self, item);\n-        self.parent_scope.module = parent;\n     }\n \n     fn visit_token(&mut self, t: Token) {"}, {"sha": "6e131c04722a92c6431b43f1c4c5785a5848a93f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=77e1a7c578f61572bbb4e40c5a12e2d0a74329b8", "patch": "@@ -535,7 +535,11 @@ impl<'a> ModuleData<'a> {\n     }\n \n     fn nearest_item_scope(&'a self) -> Module<'a> {\n-        if self.is_trait() { self.parent.unwrap() } else { self }\n+        match self.kind {\n+            ModuleKind::Def(DefKind::Enum, ..) | ModuleKind::Def(DefKind::Trait, ..) =>\n+                self.parent.expect(\"enum or trait module without a parent\"),\n+            _ => self,\n+        }\n     }\n \n     fn is_ancestor_of(&self, mut other: &Self) -> bool {\n@@ -1637,7 +1641,7 @@ impl<'a> Resolver<'a> {\n         }\n \n         if let ModuleKind::Block(..) = module.kind {\n-            return Some(module.parent.unwrap());\n+            return Some(module.parent.unwrap().nearest_item_scope());\n         }\n \n         None"}, {"sha": "bc86f94e921cb232ffa63a666363ea0732c438f9", "filename": "src/test/ui/resolve/block-with-trait-parent.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8/src%2Ftest%2Fui%2Fresolve%2Fblock-with-trait-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e1a7c578f61572bbb4e40c5a12e2d0a74329b8/src%2Ftest%2Fui%2Fresolve%2Fblock-with-trait-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fblock-with-trait-parent.rs?ref=77e1a7c578f61572bbb4e40c5a12e2d0a74329b8", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+\n+trait Trait {\n+    fn method(&self) {\n+        // Items inside a block turn it into a module internally.\n+        struct S;\n+        impl Trait for S {}\n+\n+        // OK, `Trait` is in scope here from method resolution point of view.\n+        S.method();\n+    }\n+}\n+\n+fn main() {}"}]}