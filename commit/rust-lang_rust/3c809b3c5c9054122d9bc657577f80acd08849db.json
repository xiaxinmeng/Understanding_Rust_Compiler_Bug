{"sha": "3c809b3c5c9054122d9bc657577f80acd08849db", "node_id": "C_kwDOAAsO6NoAKDNjODA5YjNjNWM5MDU0MTIyZDliYzY1NzU3N2Y4MGFjZDA4ODQ5ZGI", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-12-12T15:18:44Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-12-12T15:19:18Z"}, "message": "Add a \"the\" to proc_macro documentation", "tree": {"sha": "1a5638f3d8128fb54657bf9ef409ee9e07dafb4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a5638f3d8128fb54657bf9ef409ee9e07dafb4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c809b3c5c9054122d9bc657577f80acd08849db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c809b3c5c9054122d9bc657577f80acd08849db", "html_url": "https://github.com/rust-lang/rust/commit/3c809b3c5c9054122d9bc657577f80acd08849db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c809b3c5c9054122d9bc657577f80acd08849db/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d5573e6daf99a5b98ace3dfcc4be2eb64867169", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d5573e6daf99a5b98ace3dfcc4be2eb64867169", "html_url": "https://github.com/rust-lang/rust/commit/0d5573e6daf99a5b98ace3dfcc4be2eb64867169"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f0e4f5d8a8013d613098c4ecd0a2dfee921ac24a", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c809b3c5c9054122d9bc657577f80acd08849db/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c809b3c5c9054122d9bc657577f80acd08849db/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=3c809b3c5c9054122d9bc657577f80acd08849db", "patch": "@@ -1493,7 +1493,7 @@ pub mod tracked_env {\n     use std::ffi::OsStr;\n \n     /// Retrieve an environment variable and add it to build dependency info.\n-    /// Build system executing the compiler will know that the variable was accessed during\n+    /// The build system executing the compiler will know that the variable was accessed during\n     /// compilation, and will be able to rerun the build when the value of that variable changes.\n     /// Besides the dependency tracking this function should be equivalent to `env::var` from the\n     /// standard library, except that the argument must be UTF-8."}]}