{"sha": "6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5", "node_id": "C_kwDOAAsO6NoAKDZiYmFjYTdkMDMwYjJjNzc4YTdhN2I5NzYyZjNhZmIyYTI0MDhmZjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-10T11:20:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-10T11:20:54Z"}, "message": "Rollup merge of #94788 - estebank:removal-suggestion, r=petrochenkov\n\nAccount for suggestions for complete removal of lines\n\nFix  #94192.", "tree": {"sha": "105db756b12dd627ca64493bdf505fc263acec05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/105db756b12dd627ca64493bdf505fc263acec05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiKd8WCRBK7hj4Ov3rIwAAzbQIACHUcrgXa9AyTpaXDS6SvG71\nenoLR1actzEemesqFNi95EfIW4xjMtyZed4DfbXRc1VLfCg9mNyH8Ehkmb1XSSxl\nuVo8+s1eBkozPUMTTE4g8lsgOY1c7u3ZAKsxLq/OWd8neBoWZ1YNe7ZSIszQs6wv\np6AFpxFGZuQ7QAl4sMNJB7jIs4N+99Uu6F9xhOtEJfSt/sEvCnysxCzqXKt+XIKB\nbraZctp5yXZdPD6jUIA8DWqtI7+sKrtjNyio1eOITNONvZlzWxCk3qcNNZVlkZNQ\nKunS+YH57d6CbdwM706MSnvh0LenKE4OzEO3wjaMheeQDcG1FDPSCVzGEHUWYcg=\n=KezF\n-----END PGP SIGNATURE-----\n", "payload": "tree 105db756b12dd627ca64493bdf505fc263acec05\nparent e7281d08de338fc091ce12f90b48d7b4de50a138\nparent ac2afa033443cd697e92b17e5a5263bd9640d9d0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646911254 +0100\ncommitter GitHub <noreply@github.com> 1646911254 +0100\n\nRollup merge of #94788 - estebank:removal-suggestion, r=petrochenkov\n\nAccount for suggestions for complete removal of lines\n\nFix  #94192.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5", "html_url": "https://github.com/rust-lang/rust/commit/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7281d08de338fc091ce12f90b48d7b4de50a138", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7281d08de338fc091ce12f90b48d7b4de50a138", "html_url": "https://github.com/rust-lang/rust/commit/e7281d08de338fc091ce12f90b48d7b4de50a138"}, {"sha": "ac2afa033443cd697e92b17e5a5263bd9640d9d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac2afa033443cd697e92b17e5a5263bd9640d9d0", "html_url": "https://github.com/rust-lang/rust/commit/ac2afa033443cd697e92b17e5a5263bd9640d9d0"}], "stats": {"total": 138, "additions": 138, "deletions": 0}, "files": [{"sha": "831d408195e2feede83e3e6f26f7f475bcff38cf", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5", "patch": "@@ -1657,6 +1657,31 @@ impl EmitterWriter {\n             let line_start = sm.lookup_char_pos(parts[0].span.lo()).line;\n             draw_col_separator_no_space(&mut buffer, 1, max_line_num_len + 1);\n             let mut lines = complete.lines();\n+            if lines.clone().next().is_none() {\n+                // Account for a suggestion to completely remove a line(s) with whitespace (#94192).\n+                let line_end = sm.lookup_char_pos(parts[0].span.hi()).line;\n+                for line in line_start..=line_end {\n+                    buffer.puts(\n+                        row_num - 1 + line - line_start,\n+                        0,\n+                        &self.maybe_anonymized(line),\n+                        Style::LineNumber,\n+                    );\n+                    buffer.puts(\n+                        row_num - 1 + line - line_start,\n+                        max_line_num_len + 1,\n+                        \"- \",\n+                        Style::Removal,\n+                    );\n+                    buffer.puts(\n+                        row_num - 1 + line - line_start,\n+                        max_line_num_len + 3,\n+                        &normalize_whitespace(&*file_lines.file.get_line(line - 1).unwrap()),\n+                        Style::Removal,\n+                    );\n+                }\n+                row_num += line_end - line_start;\n+            }\n             for (line_pos, (line, highlight_parts)) in\n                 lines.by_ref().zip(highlights).take(MAX_SUGGESTION_HIGHLIGHT_LINES).enumerate()\n             {"}, {"sha": "56aed77c10e6877ee4b453e28cb620f6d316fb30", "filename": "src/test/ui/suggestions/removal-of-multiline-trait-bound-in-where-clause.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5/src%2Ftest%2Fui%2Fsuggestions%2Fremoval-of-multiline-trait-bound-in-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5/src%2Ftest%2Fui%2Fsuggestions%2Fremoval-of-multiline-trait-bound-in-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoval-of-multiline-trait-bound-in-where-clause.rs?ref=6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5", "patch": "@@ -0,0 +1,30 @@\n+struct Wrapper<T>(T);\n+\n+fn foo<T>(foo: Wrapper<T>)\n+//~^ ERROR the size for values of type `T` cannot be known at compilation time\n+where\n+    T\n+    :\n+    ?\n+    Sized\n+{\n+    //\n+}\n+\n+fn bar<T>(foo: Wrapper<T>)\n+//~^ ERROR the size for values of type `T` cannot be known at compilation time\n+where T: ?Sized\n+{\n+    //\n+}\n+\n+fn qux<T>(foo: Wrapper<T>)\n+//~^ ERROR the size for values of type `T` cannot be known at compilation time\n+where\n+    T: ?Sized\n+{\n+    //\n+}\n+\n+\n+fn main() {}"}, {"sha": "3df17056ef42cbbf034457dfdd8c697ca1413dd2", "filename": "src/test/ui/suggestions/removal-of-multiline-trait-bound-in-where-clause.stderr", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5/src%2Ftest%2Fui%2Fsuggestions%2Fremoval-of-multiline-trait-bound-in-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5/src%2Ftest%2Fui%2Fsuggestions%2Fremoval-of-multiline-trait-bound-in-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoval-of-multiline-trait-bound-in-where-clause.stderr?ref=6bbaca7d030b2c778a7a7b9762f3afb2a2408ff5", "patch": "@@ -0,0 +1,83 @@\n+error[E0277]: the size for values of type `T` cannot be known at compilation time\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:3:16\n+   |\n+LL | fn foo<T>(foo: Wrapper<T>)\n+   |        -       ^^^^^^^^^^ doesn't have a size known at compile-time\n+   |        |\n+   |        this type parameter needs to be `std::marker::Sized`\n+   |\n+note: required by a bound in `Wrapper`\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:1:16\n+   |\n+LL | struct Wrapper<T>(T);\n+   |                ^ required by this bound in `Wrapper`\n+help: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&T` or `Box<T>`\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:1:16\n+   |\n+LL | struct Wrapper<T>(T);\n+   |                ^  - ...if indirection were used here: `Box<T>`\n+   |                |\n+   |                this could be changed to `T: ?Sized`...\n+help: consider removing the `?Sized` bound to make the type parameter `Sized`\n+   |\n+LL - where\n+LL -     T\n+LL -     :\n+LL -     ?\n+LL -     Sized\n+   | \n+\n+error[E0277]: the size for values of type `T` cannot be known at compilation time\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:14:16\n+   |\n+LL | fn bar<T>(foo: Wrapper<T>)\n+   |        -       ^^^^^^^^^^ doesn't have a size known at compile-time\n+   |        |\n+   |        this type parameter needs to be `std::marker::Sized`\n+   |\n+note: required by a bound in `Wrapper`\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:1:16\n+   |\n+LL | struct Wrapper<T>(T);\n+   |                ^ required by this bound in `Wrapper`\n+help: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&T` or `Box<T>`\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:1:16\n+   |\n+LL | struct Wrapper<T>(T);\n+   |                ^  - ...if indirection were used here: `Box<T>`\n+   |                |\n+   |                this could be changed to `T: ?Sized`...\n+help: consider removing the `?Sized` bound to make the type parameter `Sized`\n+   |\n+LL - where T: ?Sized\n+   | \n+\n+error[E0277]: the size for values of type `T` cannot be known at compilation time\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:21:16\n+   |\n+LL | fn qux<T>(foo: Wrapper<T>)\n+   |        -       ^^^^^^^^^^ doesn't have a size known at compile-time\n+   |        |\n+   |        this type parameter needs to be `std::marker::Sized`\n+   |\n+note: required by a bound in `Wrapper`\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:1:16\n+   |\n+LL | struct Wrapper<T>(T);\n+   |                ^ required by this bound in `Wrapper`\n+help: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&T` or `Box<T>`\n+  --> $DIR/removal-of-multiline-trait-bound-in-where-clause.rs:1:16\n+   |\n+LL | struct Wrapper<T>(T);\n+   |                ^  - ...if indirection were used here: `Box<T>`\n+   |                |\n+   |                this could be changed to `T: ?Sized`...\n+help: consider removing the `?Sized` bound to make the type parameter `Sized`\n+   |\n+LL - where\n+LL -     T: ?Sized\n+   | \n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}