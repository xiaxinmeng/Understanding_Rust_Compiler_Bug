{"sha": "60a146bf0f76c47d24cb4b01a408a329425d11f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYTE0NmJmMGY3NmM0N2QyNGNiNGIwMWE0MDhhMzI5NDI1ZDExZjk=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-01-25T07:39:07Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-01-25T23:01:58Z"}, "message": "Correctly increment sess.byte_pos.", "tree": {"sha": "1a341b9f9cde35d6c9c17b2d1b3181a444e424a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a341b9f9cde35d6c9c17b2d1b3181a444e424a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60a146bf0f76c47d24cb4b01a408a329425d11f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60a146bf0f76c47d24cb4b01a408a329425d11f9", "html_url": "https://github.com/rust-lang/rust/commit/60a146bf0f76c47d24cb4b01a408a329425d11f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60a146bf0f76c47d24cb4b01a408a329425d11f9/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5e03e0e599e49f74303bbafc6d559f3138b5f72", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5e03e0e599e49f74303bbafc6d559f3138b5f72", "html_url": "https://github.com/rust-lang/rust/commit/c5e03e0e599e49f74303bbafc6d559f3138b5f72"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "2530c794c94fe5f3fdc48af27486c713b5620551", "filename": "src/comp/syntax/parse/eval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60a146bf0f76c47d24cb4b01a408a329425d11f9/src%2Fcomp%2Fsyntax%2Fparse%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60a146bf0f76c47d24cb4b01a408a329425d11f9/src%2Fcomp%2Fsyntax%2Fparse%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Feval.rs?ref=60a146bf0f76c47d24cb4b01a408a329425d11f9", "patch": "@@ -79,7 +79,7 @@ fn parse_companion_mod(cx: ctx, prefix: str, suffix: option::t<str>)\n         let first_item_outer_attrs = inner_attrs.next;\n         let m0 = parse_mod_items(p0, token::EOF, first_item_outer_attrs);\n         cx.sess.chpos = p0.reader.chpos;\n-        cx.sess.byte_pos = p0.reader.pos;\n+        cx.sess.byte_pos = cx.sess.byte_pos + p0.reader.pos;\n         ret (m0.view_items, m0.items, inner_attrs.inner);\n     } else {\n         ret ([], [], []);\n@@ -117,7 +117,7 @@ fn eval_crate_directive(cx: ctx, cdir: @ast::crate_directive, prefix: str,\n                                            ast::item_mod(m0), mod_attrs);\n         // Thread defids, chpos and byte_pos through the parsers\n         cx.sess.chpos = p0.reader.chpos;\n-        cx.sess.byte_pos = p0.reader.pos;\n+        cx.sess.byte_pos = cx.sess.byte_pos + p0.reader.pos;\n         items += [i];\n       }\n       ast::cdir_dir_mod(id, cdirs, attrs) {"}, {"sha": "4d8acc6fa44783c516a1151a7eec7d9df4f7b054", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60a146bf0f76c47d24cb4b01a408a329425d11f9/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60a146bf0f76c47d24cb4b01a408a329425d11f9/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=60a146bf0f76c47d24cb4b01a408a329425d11f9", "patch": "@@ -2458,7 +2458,7 @@ fn parse_crate_from_source_file(input: str, cfg: ast::crate_cfg,\n     let p = new_parser_from_file(sess, cfg, input, SOURCE_FILE);\n     let r = parse_crate_mod(p, cfg);\n     sess.chpos = p.reader.chpos;\n-    sess.byte_pos = p.reader.pos;\n+    sess.byte_pos = sess.byte_pos + p.reader.pos;\n     ret r;\n }\n \n@@ -2468,7 +2468,7 @@ fn parse_expr_from_source_str(name: str, source: @str, cfg: ast::crate_cfg,\n     let p = new_parser_from_source_str(sess, cfg, name, source);\n     let r = parse_expr(p);\n     sess.chpos = p.reader.chpos;\n-    sess.byte_pos = p.reader.pos;\n+    sess.byte_pos = sess.byte_pos + p.reader.pos;\n     ret r;\n }\n \n@@ -2477,7 +2477,7 @@ fn parse_crate_from_source_str(name: str, source: @str, cfg: ast::crate_cfg,\n     let p = new_parser_from_source_str(sess, cfg, name, source);\n     let r = parse_crate_mod(p, cfg);\n     sess.chpos = p.reader.chpos;\n-    sess.byte_pos = p.reader.pos;\n+    sess.byte_pos = sess.byte_pos + p.reader.pos;\n     ret r;\n }\n \n@@ -2579,7 +2579,7 @@ fn parse_crate_from_crate_file(input: str, cfg: ast::crate_cfg,\n     let first_cdir_attr = leading_attrs.next;\n     let cdirs = parse_crate_directives(p, token::EOF, first_cdir_attr);\n     sess.chpos = p.reader.chpos;\n-    sess.byte_pos = p.reader.pos;\n+    sess.byte_pos = sess.byte_pos + p.reader.pos;\n     let cx =\n         @{p: p,\n           sess: sess,"}]}