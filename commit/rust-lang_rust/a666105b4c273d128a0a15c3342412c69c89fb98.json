{"sha": "a666105b4c273d128a0a15c3342412c69c89fb98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NjYxMDViNGMyNzNkMTI4YTBhMTVjMzM0MjQxMmM2OWM4OWZiOTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-21T07:21:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-21T17:27:38Z"}, "message": "std: Don't parse argv as a String\n\nInstead, just pass everything through as a Vec<u8> to get worried about later.\n\nCloses #20091", "tree": {"sha": "72709d7280f6af2b3895d4aab47c39248f0653ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72709d7280f6af2b3895d4aab47c39248f0653ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a666105b4c273d128a0a15c3342412c69c89fb98", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a666105b4c273d128a0a15c3342412c69c89fb98", "html_url": "https://github.com/rust-lang/rust/commit/a666105b4c273d128a0a15c3342412c69c89fb98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a666105b4c273d128a0a15c3342412c69c89fb98/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c141f223d4fd4d8c8be8649877e08ddceaa43783", "url": "https://api.github.com/repos/rust-lang/rust/commits/c141f223d4fd4d8c8be8649877e08ddceaa43783", "html_url": "https://github.com/rust-lang/rust/commit/c141f223d4fd4d8c8be8649877e08ddceaa43783"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "b1f268597c7ad99fb83df15edd9f7d6a2d652183", "filename": "src/libstd/rt/args.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a666105b4c273d128a0a15c3342412c69c89fb98/src%2Flibstd%2Frt%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a666105b4c273d128a0a15c3342412c69c89fb98/src%2Flibstd%2Frt%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fargs.rs?ref=a666105b4c273d128a0a15c3342412c69c89fb98", "patch": "@@ -44,12 +44,10 @@ pub fn clone() -> Option<Vec<Vec<u8>>> { imp::clone() }\n           target_os = \"freebsd\",\n           target_os = \"dragonfly\"))]\n mod imp {\n-    use core::prelude::*;\n+    use prelude::*;\n \n-    use boxed::Box;\n-    use vec::Vec;\n-    use string::String;\n     use mem;\n+    use slice;\n \n     use sync::{StaticMutex, MUTEX_INIT};\n \n@@ -98,7 +96,12 @@ mod imp {\n \n     unsafe fn load_argc_and_argv(argc: int, argv: *const *const u8) -> Vec<Vec<u8>> {\n         Vec::from_fn(argc as uint, |i| {\n-            String::from_raw_buf(*argv.offset(i as int)).into_bytes()\n+            let arg = *argv.offset(i as int);\n+            let mut len = 0u;\n+            while *arg.offset(len as int) != 0 {\n+                len += 1u;\n+            }\n+            slice::from_raw_buf(&arg, len).to_vec()\n         })\n     }\n "}, {"sha": "daf898faef76aa528a411308295548d995be835b", "filename": "src/test/run-pass/issue-20091.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a666105b4c273d128a0a15c3342412c69c89fb98/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a666105b4c273d128a0a15c3342412c69c89fb98/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20091.rs?ref=a666105b4c273d128a0a15c3342412c69c89fb98", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io::Command;\n+use std::os;\n+\n+fn main() {\n+    if os::args().len() == 1 {\n+        assert!(Command::new(os::self_exe_name().unwrap()).arg(b\"\\xff\")\n+                        .status().unwrap().success())\n+    }\n+}"}]}