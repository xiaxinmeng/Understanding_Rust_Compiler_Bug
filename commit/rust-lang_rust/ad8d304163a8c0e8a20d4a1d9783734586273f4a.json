{"sha": "ad8d304163a8c0e8a20d4a1d9783734586273f4a", "node_id": "C_kwDOAAsO6NoAKGFkOGQzMDQxNjNhOGMwZThhMjBkNGExZDk3ODM3MzQ1ODYyNzNmNGE", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-16T13:44:03Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-16T13:44:03Z"}, "message": "Implement StableHasher::write_u128 via write_u64", "tree": {"sha": "2b8959e081bd1cee016c1d8c2d638ff82fef0358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b8959e081bd1cee016c1d8c2d638ff82fef0358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad8d304163a8c0e8a20d4a1d9783734586273f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8d304163a8c0e8a20d4a1d9783734586273f4a", "html_url": "https://github.com/rust-lang/rust/commit/ad8d304163a8c0e8a20d4a1d9783734586273f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad8d304163a8c0e8a20d4a1d9783734586273f4a/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd57c6b407d5f038060d7b94ce9af22ea4b0dcf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd57c6b407d5f038060d7b94ce9af22ea4b0dcf0", "html_url": "https://github.com/rust-lang/rust/commit/fd57c6b407d5f038060d7b94ce9af22ea4b0dcf0"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "1608009809f4c09682268925e329a976a738e9a8", "filename": "compiler/rustc_data_structures/src/stable_hasher.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad8d304163a8c0e8a20d4a1d9783734586273f4a/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad8d304163a8c0e8a20d4a1d9783734586273f4a/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs?ref=ad8d304163a8c0e8a20d4a1d9783734586273f4a", "patch": "@@ -107,7 +107,8 @@ impl Hasher for StableHasher {\n \n     #[inline]\n     fn write_u128(&mut self, i: u128) {\n-        self.state.write(&i.to_le_bytes());\n+        self.write_u64(i as u64);\n+        self.write_u64((i >> 64) as u64);\n     }\n \n     #[inline]"}]}