{"sha": "f1bdd4fae21e3053cedaa850691edd7a25a62dd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxYmRkNGZhZTIxZTMwNTNjZWRhYTg1MDY5MWVkZDdhMjVhNjJkZDI=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-09-14T17:11:11Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-11-22T05:21:21Z"}, "message": "Expand is_uninhabited for references", "tree": {"sha": "60ed5024bfe7413b06d393f418aab4e5fa08d2ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60ed5024bfe7413b06d393f418aab4e5fa08d2ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1bdd4fae21e3053cedaa850691edd7a25a62dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1bdd4fae21e3053cedaa850691edd7a25a62dd2", "html_url": "https://github.com/rust-lang/rust/commit/f1bdd4fae21e3053cedaa850691edd7a25a62dd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1bdd4fae21e3053cedaa850691edd7a25a62dd2/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75140512ebe0138d630e4af52216352300d12d08", "url": "https://api.github.com/repos/rust-lang/rust/commits/75140512ebe0138d630e4af52216352300d12d08", "html_url": "https://github.com/rust-lang/rust/commit/75140512ebe0138d630e4af52216352300d12d08"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "9fcccacdbe137c24d7ed003f56b50775a018f56b", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f1bdd4fae21e3053cedaa850691edd7a25a62dd2/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bdd4fae21e3053cedaa850691edd7a25a62dd2/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=f1bdd4fae21e3053cedaa850691edd7a25a62dd2", "patch": "@@ -178,8 +178,9 @@ enum Void {}\n            issue = \"0\")]\n #[doc(hidden)]\n pub struct ArgumentV1<'a> {\n-    value: &'a Void,\n-    formatter: fn(&Void, &mut Formatter) -> Result,\n+    _ph: PhantomData<&'a ()>,\n+    value: *const Void,\n+    formatter: fn(*const Void, &mut Formatter) -> Result,\n }\n \n #[unstable(feature = \"fmt_internals\", reason = \"internal to format_args!\",\n@@ -203,6 +204,7 @@ impl<'a> ArgumentV1<'a> {\n                       f: fn(&T, &mut Formatter) -> Result) -> ArgumentV1<'b> {\n         unsafe {\n             ArgumentV1 {\n+                _ph: PhantomData,\n                 formatter: mem::transmute(f),\n                 value: mem::transmute(x)\n             }\n@@ -218,7 +220,7 @@ impl<'a> ArgumentV1<'a> {\n \n     fn as_usize(&self) -> Option<usize> {\n         if self.formatter as usize == ArgumentV1::show_usize as usize {\n-            Some(unsafe { *(self.value as *const _ as *const usize) })\n+            Some(unsafe { *(self.value as *const usize) })\n         } else {\n             None\n         }"}, {"sha": "39461dc4f74f571473a01a07e5bc181b373fdb85", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f1bdd4fae21e3053cedaa850691edd7a25a62dd2/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bdd4fae21e3053cedaa850691edd7a25a62dd2/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=f1bdd4fae21e3053cedaa850691edd7a25a62dd2", "patch": "@@ -946,11 +946,10 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n             },\n \n             TyNever => true,\n-            TyTuple(ref tys) => tys.iter().any(|ty| ty.is_uninhabited(cx)),\n-            TyArray(ty, len) => len > 0 && ty.is_uninhabited(cx),\n+            TyTuple(ref tys) => tys.iter().any(|ty| ty.is_uninhabited_recurse(visited, cx)),\n+            TyArray(ty, len) => len > 0 && ty.is_uninhabited_recurse(visited, cx),\n+            TyRef(_, ref tm) => tm.ty.is_uninhabited_recurse(visited, cx),\n \n-            // FIXME(canndrew): this line breaks core::fmt\n-            //TyRef(_, ref tm) => tm.ty.is_uninhabited(cx),\n             _ => false,\n         }\n     }"}]}