{"sha": "9ca3ff16ad14e187b970ac1714b9e050ccbbf825", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYTNmZjE2YWQxNGUxODdiOTcwYWMxNzE0YjllMDUwY2NiYmY4MjU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-13T10:31:40Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-13T10:46:19Z"}, "message": "Fixes #32222", "tree": {"sha": "c09fcea52d7f2095442244f53522e764d2b3d675", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c09fcea52d7f2095442244f53522e764d2b3d675"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ca3ff16ad14e187b970ac1714b9e050ccbbf825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ca3ff16ad14e187b970ac1714b9e050ccbbf825", "html_url": "https://github.com/rust-lang/rust/commit/9ca3ff16ad14e187b970ac1714b9e050ccbbf825", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ca3ff16ad14e187b970ac1714b9e050ccbbf825/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa18403a2f4acf203964c2ea7c8660752ee99cc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa18403a2f4acf203964c2ea7c8660752ee99cc3", "html_url": "https://github.com/rust-lang/rust/commit/fa18403a2f4acf203964c2ea7c8660752ee99cc3"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "31524b9a12accd4feb973dc0a660f1aeb4669117", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9ca3ff16ad14e187b970ac1714b9e050ccbbf825/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ca3ff16ad14e187b970ac1714b9e050ccbbf825/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=9ca3ff16ad14e187b970ac1714b9e050ccbbf825", "patch": "@@ -276,12 +276,6 @@ impl<'a> ::ModuleS<'a> {\n             .increment_outstanding_references(is_public);\n     }\n \n-    fn decrement_outstanding_references_for(&self, name: Name, ns: Namespace, is_public: bool) {\n-        self.update_resolution(name, ns, |resolution| {\n-            resolution.decrement_outstanding_references(is_public);\n-        })\n-    }\n-\n     // Use `update` to mutate the resolution for the name.\n     // If the resolution becomes a success, define it in the module's glob importers.\n     fn update_resolution<T, F>(&self, name: Name, ns: Namespace, update: F) -> T\n@@ -485,7 +479,8 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                 // Temporarily count the directive as determined so that the resolution fails\n                 // (as opposed to being indeterminate) when it can only be defined by the directive.\n                 if !determined {\n-                    module_.decrement_outstanding_references_for(target, ns, directive.is_public)\n+                    module_.resolutions.borrow_mut().get_mut(&(target, ns)).unwrap()\n+                           .decrement_outstanding_references(directive.is_public);\n                 }\n                 let result =\n                     self.resolver.resolve_name_in_module(target_module, source, ns, false, true);\n@@ -522,7 +517,10 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                     self.report_conflict(target, ns, &directive.import(binding, None), old_binding);\n                 }\n             }\n-            module_.decrement_outstanding_references_for(target, ns, directive.is_public);\n+\n+            module_.update_resolution(target, ns, |resolution| {\n+                resolution.decrement_outstanding_references(directive.is_public);\n+            })\n         }\n \n         match (&value_result, &type_result) {"}]}