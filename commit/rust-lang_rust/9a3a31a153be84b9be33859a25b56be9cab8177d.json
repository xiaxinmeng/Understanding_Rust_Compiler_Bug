{"sha": "9a3a31a153be84b9be33859a25b56be9cab8177d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhM2EzMWExNTNiZTg0YjliZTMzODU5YTI1YjU2YmU5Y2FiODE3N2Q=", "commit": {"author": {"name": "Teddy_Wang", "email": "wangtheo662@gmail.com", "date": "2020-07-13T02:38:37Z"}, "committer": {"name": "Teddy_Wang", "email": "wangtheo662@gmail.com", "date": "2020-07-13T02:38:37Z"}, "message": "Added tests for volatile and nearbyint intrinsics", "tree": {"sha": "64beff7c93fa6de424c1226fcb90f0742672c6f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64beff7c93fa6de424c1226fcb90f0742672c6f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a3a31a153be84b9be33859a25b56be9cab8177d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a3a31a153be84b9be33859a25b56be9cab8177d", "html_url": "https://github.com/rust-lang/rust/commit/9a3a31a153be84b9be33859a25b56be9cab8177d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a3a31a153be84b9be33859a25b56be9cab8177d/comments", "author": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5db778affee7c6600c8e7a177c48282dab3f6292", "url": "https://api.github.com/repos/rust-lang/rust/commits/5db778affee7c6600c8e7a177c48282dab3f6292", "html_url": "https://github.com/rust-lang/rust/commit/5db778affee7c6600c8e7a177c48282dab3f6292"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "520fe2f1886ebea54bd02293869c455da47f46ee", "filename": "src/test/codegen/intrinsics/nearby.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9a3a31a153be84b9be33859a25b56be9cab8177d/src%2Ftest%2Fcodegen%2Fintrinsics%2Fnearby.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a3a31a153be84b9be33859a25b56be9cab8177d/src%2Ftest%2Fcodegen%2Fintrinsics%2Fnearby.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fintrinsics%2Fnearby.rs?ref=9a3a31a153be84b9be33859a25b56be9cab8177d", "patch": "@@ -0,0 +1,18 @@\n+#![crate_type = \"lib\"]\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics;\n+\n+// CHECK-LABEL: @nearbyintf32\n+#[no_mangle]\n+pub unsafe fn nearbyintf32(a: f32) -> f32 {\n+    // CHECK: llvm.nearbyint.f32\n+    intrinsics::nearbyintf32(a)\n+}\n+\n+// CHECK-LABEL: @nearbyintf64\n+#[no_mangle]\n+pub unsafe fn nearbyintf64(a: f64) -> f64 {\n+    // CHECK: llvm.nearbyint.f64\n+    intrinsics::nearbyintf64(a)\n+}"}, {"sha": "1970517e7326249069b1e5f3eff1ea4e012c20a0", "filename": "src/test/codegen/intrinsics/volatile.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/9a3a31a153be84b9be33859a25b56be9cab8177d/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a3a31a153be84b9be33859a25b56be9cab8177d/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile.rs?ref=9a3a31a153be84b9be33859a25b56be9cab8177d", "patch": "@@ -0,0 +1,55 @@\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![crate_type = \"lib\"]\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics;\n+\n+// CHECK-LABEL: @volatile_copy_memory\n+#[no_mangle]\n+pub unsafe fn volatile_copy_memory(a: *mut u8, b: *const u8) {\n+    // CHECK: llvm.memmove.p0i8.p0i8.{{\\w*(.*true)}}\n+    intrinsics::volatile_copy_memory(a, b, 1)\n+}\n+\n+// CHECK-LABEL: @volatile_copy_nonoverlapping_memory\n+#[no_mangle]\n+pub unsafe fn volatile_copy_nonoverlapping_memory(a: *mut u8, b: *const u8) {\n+    // CHECK: llvm.memcpy.p0i8.p0i8.{{\\w*(.*true)}}\n+    intrinsics::volatile_copy_nonoverlapping_memory(a, b, 1)\n+}\n+\n+// CHECK-LABEL: @volatile_set_memory\n+#[no_mangle]\n+pub unsafe fn volatile_set_memory(a: *mut u8, b: u8) {\n+    // CHECK: llvm.memset.p0i8.{{\\w*(.*true)}}\n+    intrinsics::volatile_set_memory(a, b, 1)\n+}\n+\n+// CHECK-LABEL: @volatile_load\n+#[no_mangle]\n+pub unsafe fn volatile_load(a: *const u8) -> u8 {\n+    // CHECK: load volatile\n+    intrinsics::volatile_load(a)\n+}\n+\n+// CHECK-LABEL: @volatile_store\n+#[no_mangle]\n+pub unsafe fn volatile_store(a: *mut u8, b: u8) {\n+    // CHECK: store volatile\n+    intrinsics::volatile_store(a, b)\n+}\n+\n+// CHECK-LABEL: @unaligned_volatile_load\n+#[no_mangle]\n+pub unsafe fn unaligned_volatile_load(a: *const u8) -> u8 {\n+    // CHECK: load volatile\n+    intrinsics::unaligned_volatile_load(a)\n+}\n+\n+// CHECK-LABEL: @unaligned_volatile_store\n+#[no_mangle]\n+pub unsafe fn unaligned_volatile_store(a: *mut u8, b: u8) {\n+    // CHECK: store volatile\n+    intrinsics::unaligned_volatile_store(a, b)\n+}"}]}