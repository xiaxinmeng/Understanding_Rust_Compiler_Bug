{"sha": "ec125fe46af50a552b1045da1a1f1c5b08b2ade2", "node_id": "C_kwDOAAsO6NoAKGVjMTI1ZmU0NmFmNTBhNTUyYjEwNDVkYTFhMWYxYzViMDhiMmFkZTI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-12-31T11:08:25Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-12-31T11:08:25Z"}, "message": "Improve exit point highlighting for non-loop loops in tail position", "tree": {"sha": "816bd4612c8b40f4f46b3f265ea8d9084277babc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/816bd4612c8b40f4f46b3f265ea8d9084277babc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec125fe46af50a552b1045da1a1f1c5b08b2ade2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec125fe46af50a552b1045da1a1f1c5b08b2ade2", "html_url": "https://github.com/rust-lang/rust/commit/ec125fe46af50a552b1045da1a1f1c5b08b2ade2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec125fe46af50a552b1045da1a1f1c5b08b2ade2/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d782a90958ec42aab87eb09dd84b1374945ec97", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d782a90958ec42aab87eb09dd84b1374945ec97", "html_url": "https://github.com/rust-lang/rust/commit/1d782a90958ec42aab87eb09dd84b1374945ec97"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "b72003ff36339cc88533165b6bd4d563c94ac3bd", "filename": "crates/ide-db/src/syntax_helpers/node_ext.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ec125fe46af50a552b1045da1a1f1c5b08b2ade2/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec125fe46af50a552b1045da1a1f1c5b08b2ade2/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fnode_ext.rs?ref=ec125fe46af50a552b1045da1a1f1c5b08b2ade2", "patch": "@@ -252,6 +252,11 @@ pub fn is_pattern_cond(expr: ast::Expr) -> bool {\n /// Note that modifying the tree while iterating it will cause undefined iteration which might\n /// potentially results in an out of bounds panic.\n pub fn for_each_tail_expr(expr: &ast::Expr, cb: &mut dyn FnMut(&ast::Expr)) {\n+    let walk_loop = |cb: &mut dyn FnMut(&ast::Expr), label, body: Option<ast::BlockExpr>| {\n+        for_each_break_expr(label, body.and_then(|it| it.stmt_list()), &mut |b| {\n+            cb(&ast::Expr::BreakExpr(b))\n+        })\n+    };\n     match expr {\n         ast::Expr::BlockExpr(b) => {\n             match b.modifier() {\n@@ -291,11 +296,9 @@ pub fn for_each_tail_expr(expr: &ast::Expr, cb: &mut dyn FnMut(&ast::Expr)) {\n                 }\n             }\n         }\n-        ast::Expr::LoopExpr(l) => {\n-            for_each_break_expr(l.label(), l.loop_body().and_then(|it| it.stmt_list()), &mut |b| {\n-                cb(&ast::Expr::BreakExpr(b))\n-            })\n-        }\n+        ast::Expr::LoopExpr(l) => walk_loop(cb, l.label(), l.loop_body()),\n+        ast::Expr::WhileExpr(w) => walk_loop(cb, w.label(), w.loop_body()),\n+        ast::Expr::ForExpr(f) => walk_loop(cb, f.label(), f.loop_body()),\n         ast::Expr::MatchExpr(m) => {\n             if let Some(arms) = m.match_arm_list() {\n                 arms.arms().filter_map(|arm| arm.expr()).for_each(|e| for_each_tail_expr(&e, cb));\n@@ -311,7 +314,6 @@ pub fn for_each_tail_expr(expr: &ast::Expr, cb: &mut dyn FnMut(&ast::Expr)) {\n         | ast::Expr::ClosureExpr(_)\n         | ast::Expr::ContinueExpr(_)\n         | ast::Expr::FieldExpr(_)\n-        | ast::Expr::ForExpr(_)\n         | ast::Expr::IndexExpr(_)\n         | ast::Expr::Literal(_)\n         | ast::Expr::MacroExpr(_)\n@@ -325,7 +327,6 @@ pub fn for_each_tail_expr(expr: &ast::Expr, cb: &mut dyn FnMut(&ast::Expr)) {\n         | ast::Expr::ReturnExpr(_)\n         | ast::Expr::TryExpr(_)\n         | ast::Expr::TupleExpr(_)\n-        | ast::Expr::WhileExpr(_)\n         | ast::Expr::LetExpr(_)\n         | ast::Expr::UnderscoreExpr(_)\n         | ast::Expr::YieldExpr(_)"}, {"sha": "28f65a11cfa6427d0850ed8601b218d267010efd", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ec125fe46af50a552b1045da1a1f1c5b08b2ade2/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec125fe46af50a552b1045da1a1f1c5b08b2ade2/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=ec125fe46af50a552b1045da1a1f1c5b08b2ade2", "patch": "@@ -765,6 +765,23 @@ fn foo() ->$0 u32 {\n         );\n     }\n \n+    #[test]\n+    fn test_hl_inner_tail_exit_points_loops() {\n+        check(\n+            r#\"\n+fn foo() ->$0 u32 {\n+    'foo: while { return 0; true } {\n+               // ^^^^^^\n+        break 'foo 0;\n+     // ^^^^^\n+        return 0;\n+     // ^^^^^^\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hl_break_loop() {\n         check("}]}