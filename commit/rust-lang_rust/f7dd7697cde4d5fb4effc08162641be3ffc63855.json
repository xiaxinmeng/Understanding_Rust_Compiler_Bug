{"sha": "f7dd7697cde4d5fb4effc08162641be3ffc63855", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZGQ3Njk3Y2RlNGQ1ZmI0ZWZmYzA4MTYyNjQxYmUzZmZjNjM4NTU=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-07-05T10:28:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-05T10:28:09Z"}, "message": "Merge pull request #1873 from uHOOCCOOHu/fix-tests\n\nFix tests.", "tree": {"sha": "68a109c9ae715973d83f88e7e40dfe9fc912b9e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68a109c9ae715973d83f88e7e40dfe9fc912b9e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7dd7697cde4d5fb4effc08162641be3ffc63855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7dd7697cde4d5fb4effc08162641be3ffc63855", "html_url": "https://github.com/rust-lang/rust/commit/f7dd7697cde4d5fb4effc08162641be3ffc63855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7dd7697cde4d5fb4effc08162641be3ffc63855/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88c29cf3452f79ca16e41fced3a4240a21be218", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88c29cf3452f79ca16e41fced3a4240a21be218", "html_url": "https://github.com/rust-lang/rust/commit/e88c29cf3452f79ca16e41fced3a4240a21be218"}, {"sha": "a80db63515365c99061b6cac3d9adf62e5a245be", "url": "https://api.github.com/repos/rust-lang/rust/commits/a80db63515365c99061b6cac3d9adf62e5a245be", "html_url": "https://github.com/rust-lang/rust/commit/a80db63515365c99061b6cac3d9adf62e5a245be"}], "stats": {"total": 191, "additions": 85, "deletions": 106}, "files": [{"sha": "2f47b1b80225523d37c96aac21dfa755ea98c971", "filename": "clippy_tests/examples/for_loop.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffor_loop.rs?ref=f7dd7697cde4d5fb4effc08162641be3ffc63855", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, step_by, inclusive_range_syntax)]\n+#![feature(plugin, inclusive_range_syntax)]\n #![plugin(clippy)]\n \n use std::collections::*;\n@@ -189,10 +189,6 @@ fn main() {\n         println!(\"{}\", i);\n     }\n \n-    for i in (10..8).step_by(-1) {\n-        println!(\"{}\", i);\n-    }\n-\n     let x = 42;\n     for i in x..10 { // no error, not constant-foldable\n         println!(\"{}\", i);"}, {"sha": "e8819ae329edc7429537d444508406715ada0772", "filename": "clippy_tests/examples/for_loop.stderr", "status": "modified", "additions": 57, "deletions": 65, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ffor_loop.stderr?ref=f7dd7697cde4d5fb4effc08162641be3ffc63855", "patch": "@@ -292,183 +292,175 @@ error: this range is empty so this for loop will never run\n 186 | |     }\n     | |_____^\n \n-error: use of deprecated item: replaced by `Iterator::step_by`\n-   --> for_loop.rs:192:22\n-    |\n-192 |     for i in (10..8).step_by(-1) {\n-    |                      ^^^^^^^\n-    |\n-    = note: `-D deprecated` implied by `-D warnings`\n-\n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:207:15\n+   --> for_loop.rs:203:15\n     |\n-207 |     for _v in vec.iter() { }\n+203 |     for _v in vec.iter() { }\n     |               ^^^^^^^^^^ help: to write this more concisely, try `&vec`\n     |\n     = note: `-D explicit-iter-loop` implied by `-D warnings`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:209:15\n+   --> for_loop.rs:205:15\n     |\n-209 |     for _v in vec.iter_mut() { }\n+205 |     for _v in vec.iter_mut() { }\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&mut vec`\n \n error: it is more idiomatic to loop over containers instead of using explicit iteration methods`\n-   --> for_loop.rs:212:15\n+   --> for_loop.rs:208:15\n     |\n-212 |     for _v in out_vec.into_iter() { }\n+208 |     for _v in out_vec.into_iter() { }\n     |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `out_vec`\n     |\n     = note: `-D explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:215:15\n+   --> for_loop.rs:211:15\n     |\n-215 |     for _v in array.into_iter() {}\n+211 |     for _v in array.into_iter() {}\n     |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&array`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:220:15\n+   --> for_loop.rs:216:15\n     |\n-220 |     for _v in [1, 2, 3].iter() { }\n+216 |     for _v in [1, 2, 3].iter() { }\n     |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&[1, 2, 3]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:224:15\n+   --> for_loop.rs:220:15\n     |\n-224 |     for _v in [0; 32].iter() {}\n+220 |     for _v in [0; 32].iter() {}\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&[0; 32]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:229:15\n+   --> for_loop.rs:225:15\n     |\n-229 |     for _v in ll.iter() { }\n+225 |     for _v in ll.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&ll`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:232:15\n+   --> for_loop.rs:228:15\n     |\n-232 |     for _v in vd.iter() { }\n+228 |     for _v in vd.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&vd`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:235:15\n+   --> for_loop.rs:231:15\n     |\n-235 |     for _v in bh.iter() { }\n+231 |     for _v in bh.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&bh`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:238:15\n+   --> for_loop.rs:234:15\n     |\n-238 |     for _v in hm.iter() { }\n+234 |     for _v in hm.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&hm`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:241:15\n+   --> for_loop.rs:237:15\n     |\n-241 |     for _v in bt.iter() { }\n+237 |     for _v in bt.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&bt`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:244:15\n+   --> for_loop.rs:240:15\n     |\n-244 |     for _v in hs.iter() { }\n+240 |     for _v in hs.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&hs`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> for_loop.rs:247:15\n+   --> for_loop.rs:243:15\n     |\n-247 |     for _v in bs.iter() { }\n+243 |     for _v in bs.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-   --> for_loop.rs:249:5\n+   --> for_loop.rs:245:5\n     |\n-249 |     for _v in vec.iter().next() { }\n+245 |     for _v in vec.iter().next() { }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-   --> for_loop.rs:256:5\n+   --> for_loop.rs:252:5\n     |\n-256 |     vec.iter().map(|x| out.push(x)).collect::<Vec<_>>();\n+252 |     vec.iter().map(|x| out.push(x)).collect::<Vec<_>>();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D unused-collect` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> for_loop.rs:261:5\n+   --> for_loop.rs:257:5\n     |\n-261 |     for _v in &vec { _index += 1 }\n+257 |     for _v in &vec { _index += 1 }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D explicit-counter-loop` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> for_loop.rs:265:5\n+   --> for_loop.rs:261:5\n     |\n-265 |     for _v in &vec { _index += 1 }\n+261 |     for _v in &vec { _index += 1 }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> for_loop.rs:325:5\n+   --> for_loop.rs:321:5\n     |\n-325 | /     for (_, v) in &m {\n-326 | |         let _v = v;\n-327 | |     }\n+321 | /     for (_, v) in &m {\n+322 | |         let _v = v;\n+323 | |     }\n     | |_____^\n     |\n     = note: `-D for-kv-map` implied by `-D warnings`\n help: use the corresponding method\n     |     for v in m.values() {\n \n error: you seem to want to iterate on a map's values\n-   --> for_loop.rs:330:5\n+   --> for_loop.rs:326:5\n     |\n-330 | /     for (_, v) in &*m {\n-331 | |         let _v = v;\n-332 | |         // Here the `*` is not actually necesarry, but the test tests that we don't suggest\n-333 | |         // `in *m.values()` as we used to\n-334 | |     }\n+326 | /     for (_, v) in &*m {\n+327 | |         let _v = v;\n+328 | |         // Here the `*` is not actually necesarry, but the test tests that we don't suggest\n+329 | |         // `in *m.values()` as we used to\n+330 | |     }\n     | |_____^\n     |\n help: use the corresponding method\n     |     for v in (*m).values() {\n \n error: you seem to want to iterate on a map's values\n-   --> for_loop.rs:337:5\n+   --> for_loop.rs:333:5\n     |\n-337 | /     for (_, v) in &mut m {\n-338 | |         let _v = v;\n-339 | |     }\n+333 | /     for (_, v) in &mut m {\n+334 | |         let _v = v;\n+335 | |     }\n     | |_____^\n     |\n help: use the corresponding method\n     |     for v in m.values_mut() {\n \n error: you seem to want to iterate on a map's values\n-   --> for_loop.rs:342:5\n+   --> for_loop.rs:338:5\n     |\n-342 | /     for (_, v) in &mut *m {\n-343 | |         let _v = v;\n-344 | |     }\n+338 | /     for (_, v) in &mut *m {\n+339 | |         let _v = v;\n+340 | |     }\n     | |_____^\n     |\n help: use the corresponding method\n     |     for v in (*m).values_mut() {\n \n error: you seem to want to iterate on a map's keys\n-   --> for_loop.rs:348:5\n+   --> for_loop.rs:344:5\n     |\n-348 | /     for (k, _value) in rm {\n-349 | |         let _k = k;\n-350 | |     }\n+344 | /     for (k, _value) in rm {\n+345 | |         let _k = k;\n+346 | |     }\n     | |_____^\n     |\n help: use the corresponding method\n     |     for k in rm.keys() {\n \n-error: aborting due to 52 previous errors\n+error: aborting due to 51 previous errors\n \n \n To learn more, run the command again with --verbose."}, {"sha": "4f4573d9e602242bc1cd62ab34902266207c72b2", "filename": "clippy_tests/examples/range.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Frange.rs?ref=f7dd7697cde4d5fb4effc08162641be3ffc63855", "patch": "@@ -1,5 +1,4 @@\n #![feature(iterator_step_by)]\n-#![feature(step_by)]\n #![feature(inclusive_range_syntax)]\n #![feature(plugin)]\n #![plugin(clippy)]\n@@ -11,15 +10,15 @@ impl NotARange {\n \n #[warn(iterator_step_by_zero, range_zip_with_len)]\n fn main() {\n-    (0..1).step_by(0);\n+    let _ = (0..1).step_by(0);\n     // No warning for non-zero step\n-    (0..1).step_by(1);\n+    let _ = (0..1).step_by(1);\n \n-    (1..).step_by(0);\n-    (1...2).step_by(0);\n+    let _ = (1..).step_by(0);\n+    let _ = (1...2).step_by(0);\n \n     let x = 0..1;\n-    x.step_by(0);\n+    let _ = x.step_by(0);\n \n     // No error, not a range.\n     let y = NotARange;"}, {"sha": "b6951b9f71309d65251ea44517cd14f484c280ab", "filename": "clippy_tests/examples/range.stderr", "status": "modified", "additions": 22, "deletions": 30, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Frange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7dd7697cde4d5fb4effc08162641be3ffc63855/clippy_tests%2Fexamples%2Frange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Frange.stderr?ref=f7dd7697cde4d5fb4effc08162641be3ffc63855", "patch": "@@ -1,52 +1,44 @@\n-error: use of deprecated item: replaced by `Iterator::step_by`\n-  --> range.rs:14:12\n-   |\n-14 |     (0..1).step_by(0);\n-   |            ^^^^^^^\n+error: Iterator::step_by(0) will panic at runtime\n+  --> range.rs:13:13\n    |\n-   = note: `-D deprecated` implied by `-D warnings`\n-\n-error: use of deprecated item: replaced by `Iterator::step_by`\n-  --> range.rs:16:12\n+13 |     let _ = (0..1).step_by(0);\n+   |             ^^^^^^^^^^^^^^^^^\n    |\n-16 |     (0..1).step_by(1);\n-   |            ^^^^^^^\n+   = note: `-D iterator-step-by-zero` implied by `-D warnings`\n \n-error: use of deprecated item: replaced by `Iterator::step_by`\n-  --> range.rs:18:11\n+error: Iterator::step_by(0) will panic at runtime\n+  --> range.rs:17:13\n    |\n-18 |     (1..).step_by(0);\n-   |           ^^^^^^^\n+17 |     let _ = (1..).step_by(0);\n+   |             ^^^^^^^^^^^^^^^^\n \n-error: use of deprecated item: replaced by `Iterator::step_by`\n-  --> range.rs:19:13\n+error: Iterator::step_by(0) will panic at runtime\n+  --> range.rs:18:13\n    |\n-19 |     (1...2).step_by(0);\n-   |             ^^^^^^^\n+18 |     let _ = (1...2).step_by(0);\n+   |             ^^^^^^^^^^^^^^^^^^\n \n-error: use of deprecated item: replaced by `Iterator::step_by`\n-  --> range.rs:22:7\n+error: Iterator::step_by(0) will panic at runtime\n+  --> range.rs:21:13\n    |\n-22 |     x.step_by(0);\n-   |       ^^^^^^^\n+21 |     let _ = x.step_by(0);\n+   |             ^^^^^^^^^^^^\n \n error: It is more idiomatic to use v1.iter().enumerate()\n-  --> range.rs:30:14\n+  --> range.rs:29:14\n    |\n-30 |     let _x = v1.iter().zip(0..v1.len());\n+29 |     let _x = v1.iter().zip(0..v1.len());\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D range-zip-with-len` implied by `-D warnings`\n \n error: Iterator::step_by(0) will panic at runtime\n-  --> range.rs:34:13\n+  --> range.rs:33:13\n    |\n-34 |     let _ = v1.iter().step_by(2/3);\n+33 |     let _ = v1.iter().step_by(2/3);\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `-D iterator-step-by-zero` implied by `-D warnings`\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 6 previous errors\n \n \n To learn more, run the command again with --verbose."}]}