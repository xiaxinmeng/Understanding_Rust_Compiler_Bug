{"sha": "33ed03fea0106ad76314aa7e616c199996418737", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZWQwM2ZlYTAxMDZhZDc2MzE0YWE3ZTYxNmMxOTk5OTY0MTg3Mzc=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-09-30T00:08:15Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-09-30T00:15:48Z"}, "message": "Cleaned up a few doc comments in libfmt_macros.", "tree": {"sha": "0c2d69e3426d14f956c19788f5ad353fb2f61014", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c2d69e3426d14f956c19788f5ad353fb2f61014"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33ed03fea0106ad76314aa7e616c199996418737", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33ed03fea0106ad76314aa7e616c199996418737", "html_url": "https://github.com/rust-lang/rust/commit/33ed03fea0106ad76314aa7e616c199996418737", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33ed03fea0106ad76314aa7e616c199996418737/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49c6c86faf91365a0e9162ed277d907a22d2420e", "url": "https://api.github.com/repos/rust-lang/rust/commits/49c6c86faf91365a0e9162ed277d907a22d2420e", "html_url": "https://github.com/rust-lang/rust/commit/49c6c86faf91365a0e9162ed277d907a22d2420e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d22420e76dcd4966916949b1cce9dc5972386a81", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33ed03fea0106ad76314aa7e616c199996418737/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ed03fea0106ad76314aa7e616c199996418737/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=33ed03fea0106ad76314aa7e616c199996418737", "patch": "@@ -410,7 +410,7 @@ impl<'a> Parser<'a> {\n         &self.input[start..self.input.len()]\n     }\n \n-    /// Parses an Argument structure, or what's contained within braces inside the format string\n+    /// Parses an `Argument` structure, or what's contained within braces inside the format string.\n     fn argument(&mut self) -> Argument<'a> {\n         let pos = self.position();\n         let format = self.format();\n@@ -464,7 +464,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses a format specifier at the current position, returning all of the\n-    /// relevant information in the FormatSpec struct.\n+    /// relevant information in the `FormatSpec` struct.\n     fn format(&mut self) -> FormatSpec<'a> {\n         let mut spec = FormatSpec {\n             fill: None,\n@@ -571,7 +571,7 @@ impl<'a> Parser<'a> {\n         spec\n     }\n \n-    /// Parses a Count parameter at the current position. This does not check\n+    /// Parses a `Count` parameter at the current position. This does not check\n     /// for 'CountIsNextParam' because that is only used in precision, not\n     /// width.\n     fn count(&mut self, start: usize) -> (Count, Option<InnerSpan>) {"}]}