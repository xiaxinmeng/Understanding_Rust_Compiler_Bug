{"sha": "883d583faa9f33e69dce4b913f47a2d09e8b584d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4M2Q1ODNmYWE5ZjMzZTY5ZGNlNGI5MTNmNDdhMmQwOWU4YjU4NGQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:32:53Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:37:48Z"}, "message": "iterator: reuse iter::to_vec, and use &mut self", "tree": {"sha": "1e4b0a02f5c70bb2956610714de05dbed912619b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e4b0a02f5c70bb2956610714de05dbed912619b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/883d583faa9f33e69dce4b913f47a2d09e8b584d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/883d583faa9f33e69dce4b913f47a2d09e8b584d", "html_url": "https://github.com/rust-lang/rust/commit/883d583faa9f33e69dce4b913f47a2d09e8b584d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/883d583faa9f33e69dce4b913f47a2d09e8b584d/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea8a55b821460ef7b3b58052f99673674fca8f96", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea8a55b821460ef7b3b58052f99673674fca8f96", "html_url": "https://github.com/rust-lang/rust/commit/ea8a55b821460ef7b3b58052f99673674fca8f96"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "0b0df4a5d70b7c1170396eeb0736bdfacb4ed6bd", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/883d583faa9f33e69dce4b913f47a2d09e8b584d/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/883d583faa9f33e69dce4b913f47a2d09e8b584d/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=883d583faa9f33e69dce4b913f47a2d09e8b584d", "patch": "@@ -47,7 +47,7 @@ pub trait IteratorUtil<A> {\n     fn advance(&mut self, f: &fn(A) -> bool);\n     #[cfg(not(stage0))]\n     fn advance(&mut self, f: &fn(A) -> bool) -> bool;\n-    fn to_vec(self) -> ~[A];\n+    fn to_vec(&mut self) -> ~[A];\n     fn nth(&mut self, n: uint) -> Option<A>;\n     fn last(&mut self) -> Option<A>;\n     fn fold<B>(&mut self, start: B, f: &fn(B, A) -> B) -> B;\n@@ -147,11 +147,8 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n     }\n \n     #[inline(always)]\n-    fn to_vec(self) -> ~[A] {\n-        let mut v = ~[];\n-        let mut it = self;\n-        for it.advance() |x| { v.push(x); }\n-        return v;\n+    fn to_vec(&mut self) -> ~[A] {\n+        iter::to_vec::<A>(|f| self.advance(f))\n     }\n \n     /// Return the `n`th item yielded by an iterator.\n@@ -563,7 +560,7 @@ mod tests {\n \n     #[test]\n     fn test_filter_map() {\n-        let it  = Counter::new(0u, 1u).take(10)\n+        let mut it = Counter::new(0u, 1u).take(10)\n             .filter_map(|x: uint| if x.is_even() { Some(x*x) } else { None });\n         assert_eq!(it.to_vec(), ~[0*0, 2*2, 4*4, 6*6, 8*8]);\n     }"}]}