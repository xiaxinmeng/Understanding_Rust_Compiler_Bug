{"sha": "f318f0211238abc4053fb6ce5ebfd0e229d3bf27", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMThmMDIxMTIzOGFiYzQwNTNmYjZjZTVlYmZkMGUyMjlkM2JmMjc=", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-12-18T19:15:27Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-12-20T19:22:29Z"}, "message": "Edit rustc_middle docs\n\nRe-word doc comment for rustc_middle::hir::place::Projection.\n\nAlso adds:\n\n- Missing end stop punctuation, and\n- Documentation links to `rustc_middle::mir::Place`.", "tree": {"sha": "f28bafed1c78675e0ccee968aabc825732f01d75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f28bafed1c78675e0ccee968aabc825732f01d75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f318f0211238abc4053fb6ce5ebfd0e229d3bf27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f318f0211238abc4053fb6ce5ebfd0e229d3bf27", "html_url": "https://github.com/rust-lang/rust/commit/f318f0211238abc4053fb6ce5ebfd0e229d3bf27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f318f0211238abc4053fb6ce5ebfd0e229d3bf27/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6340607acaab10eed3cf11ef7ad3564db58ec981", "url": "https://api.github.com/repos/rust-lang/rust/commits/6340607acaab10eed3cf11ef7ad3564db58ec981", "html_url": "https://github.com/rust-lang/rust/commit/6340607acaab10eed3cf11ef7ad3564db58ec981"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "1e2e9df88c584e40ceca08ee97db682d60d5d315", "filename": "compiler/rustc_middle/src/hir/place.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f318f0211238abc4053fb6ce5ebfd0e229d3bf27/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f318f0211238abc4053fb6ce5ebfd0e229d3bf27/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs?ref=f318f0211238abc4053fb6ce5ebfd0e229d3bf27", "patch": "@@ -17,13 +17,13 @@ use rustc_target::abi::VariantIdx;\n     HashStable\n )]\n pub enum PlaceBase {\n-    /// A temporary variable\n+    /// A temporary variable.\n     Rvalue,\n-    /// A named `static` item\n+    /// A named `static` item.\n     StaticItem,\n-    /// A named local variable\n+    /// A named local variable.\n     Local(HirId),\n-    /// An upvar referenced by closure env\n+    /// An upvar referenced by closure env.\n     Upvar(ty::UpvarId),\n }\n \n@@ -40,7 +40,7 @@ pub enum PlaceBase {\n     HashStable\n )]\n pub enum ProjectionKind {\n-    /// A dereference of a pointer, reference or `Box<T>` of the given type\n+    /// A dereference of a pointer, reference or `Box<T>` of the given type.\n     Deref,\n \n     /// `B.F` where `B` is the base expression and `F` is\n@@ -71,16 +71,16 @@ pub enum ProjectionKind {\n     HashStable\n )]\n pub struct Projection<'tcx> {\n-    /// Type after the projection is being applied.\n+    /// Type after the projection is applied.\n     pub ty: Ty<'tcx>,\n \n-    /// Defines the type of access\n+    /// Defines the kind of access made by the projection.\n     pub kind: ProjectionKind,\n }\n \n /// A `Place` represents how a value is located in memory.\n ///\n-/// This is an HIR version of `mir::Place`\n+/// This is an HIR version of [`rustc_middle::mir::Place`].\n #[derive(Clone, Debug, PartialEq, Eq, Hash, TyEncodable, TyDecodable, TypeFoldable, HashStable)]\n pub struct Place<'tcx> {\n     /// The type of the `PlaceBase`\n@@ -93,13 +93,13 @@ pub struct Place<'tcx> {\n \n /// A `PlaceWithHirId` represents how a value is located in memory.\n ///\n-/// This is an HIR version of `mir::Place`\n+/// This is an HIR version of [`rustc_middle::mir::Place`].\n #[derive(Clone, Debug, PartialEq, Eq, Hash, TyEncodable, TyDecodable, TypeFoldable, HashStable)]\n pub struct PlaceWithHirId<'tcx> {\n     /// `HirId` of the expression or pattern producing this value.\n     pub hir_id: HirId,\n \n-    /// Information about the `Place`\n+    /// Information about the `Place`.\n     pub place: Place<'tcx>,\n }\n "}]}