{"sha": "f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZmRiZDBkODlmMmNlNzg1YzdkZmI0M2I5Nzc2ZjEwNzNkZDQxODk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-26T21:15:14Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-26T21:16:37Z"}, "message": "Fix ICE with unknown defids", "tree": {"sha": "eb17203a3b4315fc1b33086ed453a0e153a674c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb17203a3b4315fc1b33086ed453a0e153a674c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189", "html_url": "https://github.com/rust-lang/rust/commit/f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9a7d91405719d82496e882e22e3797f29d632f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9a7d91405719d82496e882e22e3797f29d632f", "html_url": "https://github.com/rust-lang/rust/commit/3d9a7d91405719d82496e882e22e3797f29d632f"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "7924623c189eb31d63963da2aa648ffe7152b883", "filename": "src/enum_glob_use.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189/src%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189/src%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fenum_glob_use.rs?ref=f3fdbd0d89f2ce785c7dfb43b9776f1073dd4189", "patch": "@@ -43,20 +43,21 @@ impl EnumGlobUse {\n         }\n         if let ItemUse(ref item_use) = item.node {\n             if let ViewPath_::ViewPathGlob(_) = item_use.node {\n-                let def = cx.tcx.def_map.borrow()[&item.id];\n-                if let Some(node_id) = cx.tcx.map.as_local_node_id(def.def_id()) {\n-                    if let Some(NodeItem(it)) = cx.tcx.map.find(node_id) {\n-                        if let ItemEnum(..) = it.node {\n-                            span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n-                        }\n-                    }\n-                } else {\n-                    if let Some(dp) = cx.sess().cstore.def_path(def.def_id()).last() {\n-                        if let DefPathData::Type(_) = dp.data {\n-                            if let TyEnum(..) = cx.sess().cstore.item_type(&cx.tcx, def.def_id()).ty.sty {\n+                if let Some(def) = cx.tcx.def_map.borrow().get(&item.id) {\n+                    if let Some(node_id) = cx.tcx.map.as_local_node_id(def.def_id()) {\n+                        if let Some(NodeItem(it)) = cx.tcx.map.find(node_id) {\n+                            if let ItemEnum(..) = it.node {\n                                 span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n                             }\n                         }\n+                    } else {\n+                        if let Some(dp) = cx.sess().cstore.def_path(def.def_id()).last() {\n+                            if let DefPathData::Type(_) = dp.data {\n+                                if let TyEnum(..) = cx.sess().cstore.item_type(&cx.tcx, def.def_id()).ty.sty {\n+                                    span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n+                                }\n+                            }\n+                        }\n                     }\n                 }\n             }"}]}