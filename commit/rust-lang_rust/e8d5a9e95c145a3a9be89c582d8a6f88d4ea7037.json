{"sha": "e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZDVhOWU5NWMxNDVhM2E5YmU4OWM1ODJkOGE2Zjg4ZDRlYTcwMzc=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-22T09:18:18Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-10-22T12:57:44Z"}, "message": "Use StableHasher in SpanlessHasher", "tree": {"sha": "f74b31057dfb9451bd1bd87d3d848c9340478383", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f74b31057dfb9451bd1bd87d3d848c9340478383"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl2u/MgACgkQaTCGhp1Q\nZje4DhAAslnJClcwLH6OVKxlM9Ulv5RWYjxmFsYK3YawqYDpWs1AqG4Wiawt08ws\n8AnDWXnxK6m9NOk4q/2Cej/l2DKT41Lj+Q0XlTnbfyjsGo3NrTN3WUU7zuQSNLBH\nvyFTRHGUhlPKy5a6wT6Vs8XjBw1fs2wMk/2kGV5tK1wvUe5rCw7S33OQWC9zF+0A\nBCJr5KgcsR5QuwiutTbDY3gJi8MKgyDsW/I6IbPMsLeDTkkWOesGl/M8NsmnBAko\nB95pJk6R2Fm8voWY5szaccAXg4RfCT5Jht0ZSZlL+WuUp6YynqrI72oHrrOgizbW\nF11mFX3LF6yy8sdLfVIEyTk5HouHhand3eMG1ltw7BCVhSKDi4tBMs2YeBilKh6a\nel7eN1AGaVmS7y2cdnFR6yI3UtxYzPVrmUb+JXpetfMb1wj5BkmYlMEq+JAu94Ai\nIvYWA9CETOqS7WrhtKY6umKsoDdyXDKDUWX1AincRMK9uyw+v0XsHjct4PBvJOpz\nTEl5/y6Kqv/ox+DcPILlBuDBwFqypyYxehjhGTad6K8UtK17BNT1tIXCVpXz7qiv\ngKKuoC2ASgsvCNl906Pho9BCxjBRCCxXC+04d/fh4QRK39Q+X2ML8hcRVHRDeBGl\ndL8y6GLSpngXBKgCIMyaMdMrD8Y5qU5MwmJqAFMWh7O1lggWrfA=\n=rJfb\n-----END PGP SIGNATURE-----", "payload": "tree f74b31057dfb9451bd1bd87d3d848c9340478383\nparent ef18ece564e69a77095bf7ac00f5b9f71f2149af\nauthor flip1995 <hello@philkrones.com> 1571735898 +0200\ncommitter flip1995 <hello@philkrones.com> 1571749064 +0200\n\nUse StableHasher in SpanlessHasher\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037", "html_url": "https://github.com/rust-lang/rust/commit/e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef18ece564e69a77095bf7ac00f5b9f71f2149af", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef18ece564e69a77095bf7ac00f5b9f71f2149af", "html_url": "https://github.com/rust-lang/rust/commit/ef18ece564e69a77095bf7ac00f5b9f71f2149af"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "d8b20a5df61598fab4d221c6ebe5e56f913a1540", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=e8d5a9e95c145a3a9be89c582d8a6f88d4ea7037", "patch": "@@ -2,10 +2,11 @@ use crate::consts::{constant_context, constant_simple};\n use crate::utils::differing_macro_contexts;\n use rustc::hir::ptr::P;\n use rustc::hir::*;\n+use rustc::ich::StableHashingContextProvider;\n use rustc::lint::LateContext;\n use rustc::ty::TypeckTables;\n-use std::collections::hash_map::DefaultHasher;\n-use std::hash::{Hash, Hasher};\n+use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use std::hash::Hash;\n use syntax::ast::Name;\n \n /// Type used to check whether two ast are the same. This is different from the\n@@ -348,19 +349,19 @@ pub struct SpanlessHash<'a, 'tcx> {\n     /// Context used to evaluate constant expressions.\n     cx: &'a LateContext<'a, 'tcx>,\n     tables: &'a TypeckTables<'tcx>,\n-    s: DefaultHasher,\n+    s: StableHasher,\n }\n \n impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n     pub fn new(cx: &'a LateContext<'a, 'tcx>, tables: &'a TypeckTables<'tcx>) -> Self {\n         Self {\n             cx,\n             tables,\n-            s: DefaultHasher::new(),\n+            s: StableHasher::new(),\n         }\n     }\n \n-    pub fn finish(&self) -> u64 {\n+    pub fn finish(self) -> u64 {\n         self.s.finish()\n     }\n \n@@ -411,15 +412,17 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                 self.hash_expr(r);\n             },\n             ExprKind::AssignOp(ref o, ref l, ref r) => {\n-                o.node.hash(&mut self.s);\n+                o.node\n+                    .hash_stable(&mut self.cx.tcx.get_stable_hashing_context(), &mut self.s);\n                 self.hash_expr(l);\n                 self.hash_expr(r);\n             },\n             ExprKind::Block(ref b, _) => {\n                 self.hash_block(b);\n             },\n             ExprKind::Binary(op, ref l, ref r) => {\n-                op.node.hash(&mut self.s);\n+                op.node\n+                    .hash_stable(&mut self.cx.tcx.get_stable_hashing_context(), &mut self.s);\n                 self.hash_expr(l);\n                 self.hash_expr(r);\n             },\n@@ -519,7 +522,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                 self.hash_exprs(v);\n             },\n             ExprKind::Unary(lop, ref le) => {\n-                lop.hash(&mut self.s);\n+                lop.hash_stable(&mut self.cx.tcx.get_stable_hashing_context(), &mut self.s);\n                 self.hash_expr(le);\n             },\n         }"}]}