{"sha": "a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwYTQ3NTU0NmI2ZjUwNjQ0YTFmYTJhMWU4NTg2YWZkZTFlYzgyZWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-26T15:18:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T15:18:04Z"}, "message": "Merge #5078\n\n5078: Minor r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "abbe3d967b675f15b1917946f3b10bcfea754891", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abbe3d967b675f15b1917946f3b10bcfea754891"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9hGsCRBK7hj4Ov3rIwAAdHIIAAIfHIsTmd3btY1xOADlBnet\nZhR916pCip+oheEuS6wB0M+VyuNSBlP0YLkzN+vaZBdq1y0kCjMXniwlIcf5ElxY\noAxUU3bVQwXa4im+mawMiUv0Vs4Kfsyn6G/DqWUEuKBKx5FiFjDUzYv8vlwaZdR5\nX5tqYKl48Ao5gqj4h65ymSPnpmC2kQHMIoMs6L2RMtsp3z2FoRxme2D2I/qoEF2z\ngsYGWVX78G/v5jWSgwYR9fYD2u5WZEPhnyVGsqqH+Q4VoYifW7RO5F6KTRzdwrJ0\nUqVp/xJeFHtfsF+kPIxlYmAqwXD0rH2ti6LkphWtj8WZoza8i15NjVpU13CTh1I=\n=vdWU\n-----END PGP SIGNATURE-----\n", "payload": "tree abbe3d967b675f15b1917946f3b10bcfea754891\nparent d86a2426a21b8e0dddaeffcdd9e153cd909a65f8\nparent de7b2482274df76d3acece3cc8c1388a77e76e09\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593184684 +0000\ncommitter GitHub <noreply@github.com> 1593184684 +0000\n\nMerge #5078\n\n5078: Minor r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "html_url": "https://github.com/rust-lang/rust/commit/a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0a475546b6f50644a1fa2a1e8586afde1ec82eb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d86a2426a21b8e0dddaeffcdd9e153cd909a65f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d86a2426a21b8e0dddaeffcdd9e153cd909a65f8", "html_url": "https://github.com/rust-lang/rust/commit/d86a2426a21b8e0dddaeffcdd9e153cd909a65f8"}, {"sha": "de7b2482274df76d3acece3cc8c1388a77e76e09", "url": "https://api.github.com/repos/rust-lang/rust/commits/de7b2482274df76d3acece3cc8c1388a77e76e09", "html_url": "https://github.com/rust-lang/rust/commit/de7b2482274df76d3acece3cc8c1388a77e76e09"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "cadc8a1296af9404b738e8ab50b38ada1fd5e975", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a0a475546b6f50644a1fa2a1e8586afde1ec82eb/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0a475546b6f50644a1fa2a1e8586afde1ec82eb/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "patch": "@@ -12,21 +12,20 @@ use parking_lot::RwLock;\n use ra_db::{CrateId, VfsPath};\n use ra_ide::{Analysis, AnalysisChange, AnalysisHost, FileId};\n use ra_project_model::{CargoWorkspace, ProcMacroClient, ProjectWorkspace, Target};\n+use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::{\n     config::Config,\n     diagnostics::{CheckFixes, DiagnosticCollection},\n     from_proto,\n     line_endings::LineEndings,\n-    lsp_utils::notification_new,\n     main_loop::Task,\n     reload::SourceRootConfig,\n     request_metrics::{LatestRequests, RequestMetrics},\n     thread_pool::TaskPool,\n     to_proto::url_from_abs_path,\n     Result,\n };\n-use rustc_hash::{FxHashMap, FxHashSet};\n \n #[derive(Eq, PartialEq)]\n pub(crate) enum Status {\n@@ -190,7 +189,7 @@ impl GlobalState {\n         &mut self,\n         params: N::Params,\n     ) {\n-        let not = notification_new::<N>(params);\n+        let not = lsp_server::Notification::new(N::METHOD.to_string(), params);\n         self.send(not.into());\n     }\n "}, {"sha": "0bc3ff115df9438fc5e5b7b8827445027173d2bf", "filename": "crates/rust-analyzer/src/lsp_utils.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a0a475546b6f50644a1fa2a1e8586afde1ec82eb/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0a475546b6f50644a1fa2a1e8586afde1ec82eb/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs?ref=a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "patch": "@@ -4,7 +4,6 @@ use std::{error::Error, ops::Range};\n use lsp_server::Notification;\n use ra_db::Canceled;\n use ra_ide::LineIndex;\n-use serde::Serialize;\n \n use crate::{from_proto, global_state::GlobalState};\n \n@@ -18,14 +17,6 @@ pub(crate) fn notification_is<N: lsp_types::notification::Notification>(\n     notification.method == N::METHOD\n }\n \n-pub(crate) fn notification_new<N>(params: N::Params) -> Notification\n-where\n-    N: lsp_types::notification::Notification,\n-    N::Params: Serialize,\n-{\n-    Notification::new(N::METHOD.to_string(), params)\n-}\n-\n #[derive(Debug, Eq, PartialEq)]\n pub(crate) enum Progress {\n     Begin,"}]}