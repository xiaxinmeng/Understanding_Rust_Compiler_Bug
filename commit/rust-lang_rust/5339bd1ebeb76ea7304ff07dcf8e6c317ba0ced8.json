{"sha": "5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMzliZDFlYmViNzZlYTczMDRmZjA3ZGNmOGU2YzMxN2JhMGNlZDg=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-10-27T14:55:26Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-10-30T14:13:41Z"}, "message": "Add back missing comments", "tree": {"sha": "dea8fd60ec5b2aa448b12e491cf8d23053a7892a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dea8fd60ec5b2aa448b12e491cf8d23053a7892a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8", "html_url": "https://github.com/rust-lang/rust/commit/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57c6ed0c07aaea9c89a192e54b3274464ebe6fbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/57c6ed0c07aaea9c89a192e54b3274464ebe6fbf", "html_url": "https://github.com/rust-lang/rust/commit/57c6ed0c07aaea9c89a192e54b3274464ebe6fbf"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "6539419aefb27aaf32a8943b9f7dcfc7386e17c3", "filename": "compiler/rustc_lexer/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Flib.rs?ref=5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8", "patch": "@@ -240,6 +240,7 @@ pub fn is_whitespace(c: char) -> bool {\n \n     matches!(\n         c,\n+        // Usual ASCII suspects\n         '\\u{0009}'   // \\t\n         | '\\u{000A}' // \\n\n         | '\\u{000B}' // vertical tab"}, {"sha": "196790a0ab3236bdb2d771e18e6257cb650ff427", "filename": "compiler/rustc_parse/src/parser/pat.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs?ref=5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8", "patch": "@@ -160,7 +160,7 @@ impl<'a> Parser<'a> {\n             | token::Comma // e.g. `let (a |,)`.\n             | token::CloseDelim(token::Bracket) // e.g. `let [a | ]`.\n             | token::CloseDelim(token::Paren) // e.g. `let (a | )`.\n-            | token::CloseDelim(token::Brace)\n+            | token::CloseDelim(token::Brace) // e.g. `let A { f: a | }`.\n             )\n         });\n         match (is_end_ahead, &self.token.kind) {\n@@ -768,11 +768,12 @@ impl<'a> Parser<'a> {\n         && !self.token.is_path_segment_keyword() // Avoid e.g. `Self` as it is a path.\n         // Avoid `in`. Due to recovery in the list parser this messes with `for ( $pat in $expr )`.\n         && !self.token.is_keyword(kw::In)\n+        // Try to do something more complex?\n         && self.look_ahead(1, |t| !matches!(t.kind, token::OpenDelim(token::Paren) // A tuple struct pattern.\n             | token::OpenDelim(token::Brace) // A struct pattern.\n             | token::DotDotDot | token::DotDotEq | token::DotDot // A range pattern.\n             | token::ModSep // A tuple / struct variant pattern.\n-            | token::Not))\n+            | token::Not)) // A macro expanding to a pattern.\n     }\n \n     /// Parses `ident` or `ident @ pat`."}, {"sha": "4e115c62c9ef894057525eb60ee3505b6ee155e4", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=5339bd1ebeb76ea7304ff07dcf8e6c317ba0ced8", "patch": "@@ -1005,6 +1005,7 @@ impl<'a> Resolver<'a> {\n     fn binding_description(&self, b: &NameBinding<'_>, ident: Ident, from_prelude: bool) -> String {\n         let res = b.res();\n         if b.span.is_dummy() {\n+            // These already contain the \"built-in\" prefix or look bad with it.\n             let add_built_in =\n                 !matches!(b.res(), Res::NonMacroAttr(..) | Res::PrimTy(..) | Res::ToolMod);\n             let (built_in, from) = if from_prelude {"}]}