{"sha": "c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "node_id": "C_kwDOAAsO6NoAKGM4NDkxN2FkMmVmZTZiYWRkODNkMmFjYWQ2NGEyYWQzMGVjNjhkZGY", "commit": {"author": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-10T18:53:35Z"}, "committer": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-14T07:13:06Z"}, "message": "add EarlyBinder::subst_identity; impl  ParameterizedOverTcx (needed for rustc_metadata) and Value for EarlyBinder", "tree": {"sha": "463eeda83d06ffd82b6b6b4e047a3924ada882d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/463eeda83d06ffd82b6b6b4e047a3924ada882d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "html_url": "https://github.com/rust-lang/rust/commit/c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c84917ad2efe6badd83d2acad64a2ad30ec68ddf/comments", "author": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e09083674a58d361cd805877be55b5856d2806", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e09083674a58d361cd805877be55b5856d2806", "html_url": "https://github.com/rust-lang/rust/commit/e9e09083674a58d361cd805877be55b5856d2806"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "e32a7ee1c354569c7df399a82b524d88b1190151", "filename": "compiler/rustc_middle/src/ty/parameterized.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c84917ad2efe6badd83d2acad64a2ad30ec68ddf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84917ad2efe6badd83d2acad64a2ad30ec68ddf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs?ref=c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "patch": "@@ -32,6 +32,10 @@ impl<T: ParameterizedOverTcx> ParameterizedOverTcx for ty::Binder<'static, T> {\n     type Value<'tcx> = ty::Binder<'tcx, T::Value<'tcx>>;\n }\n \n+impl<T: ParameterizedOverTcx> ParameterizedOverTcx for ty::EarlyBinder<T> {\n+    type Value<'tcx> = ty::EarlyBinder<T::Value<'tcx>>;\n+}\n+\n #[macro_export]\n macro_rules! trivially_parameterized_over_tcx {\n     ($($ty:ty),+ $(,)?) => {"}, {"sha": "8f764011d0ac32c45d71125eb777f323d3b81d6d", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c84917ad2efe6badd83d2acad64a2ad30ec68ddf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84917ad2efe6badd83d2acad64a2ad30ec68ddf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "patch": "@@ -713,6 +713,10 @@ impl<'tcx, T: TypeFoldable<'tcx>> ty::EarlyBinder<T> {\n         let mut folder = SubstFolder { tcx, substs, binders_passed: 0 };\n         self.0.fold_with(&mut folder)\n     }\n+\n+    pub fn subst_identity(self) -> T {\n+        self.0\n+    }\n }\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "34e8a559784e6f021d3abd53b12271a0d8b74658", "filename": "compiler/rustc_middle/src/values.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c84917ad2efe6badd83d2acad64a2ad30ec68ddf/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84917ad2efe6badd83d2acad64a2ad30ec68ddf/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs?ref=c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "patch": "@@ -94,6 +94,18 @@ impl<'tcx> Value<TyCtxt<'tcx>, DepKind> for Representability {\n     }\n }\n \n+impl<'tcx> Value<TyCtxt<'tcx>, DepKind> for ty::EarlyBinder<Ty<'_>> {\n+    fn from_cycle_error(tcx: TyCtxt<'tcx>, cycle: &[QueryInfo<DepKind>]) -> Self {\n+        ty::EarlyBinder(Ty::from_cycle_error(tcx, cycle))\n+    }\n+}\n+\n+impl<'tcx> Value<TyCtxt<'tcx>, DepKind> for ty::EarlyBinder<ty::Binder<'_, ty::FnSig<'_>>> {\n+    fn from_cycle_error(tcx: TyCtxt<'tcx>, cycle: &[QueryInfo<DepKind>]) -> Self {\n+        ty::EarlyBinder(ty::Binder::from_cycle_error(tcx, cycle))\n+    }\n+}\n+\n // item_and_field_ids should form a cycle where each field contains the\n // type in the next element in the list\n pub fn recursive_type_error("}]}