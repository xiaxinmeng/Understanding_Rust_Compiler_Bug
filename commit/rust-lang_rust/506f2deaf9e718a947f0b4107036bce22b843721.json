{"sha": "506f2deaf9e718a947f0b4107036bce22b843721", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNmYyZGVhZjllNzE4YTk0N2YwYjQxMDcwMzZiY2UyMmI4NDM3MjE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-16T08:30:47Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-16T08:30:47Z"}, "message": "actually execute miri-pass tests", "tree": {"sha": "affc5bfb087d542035a941211c84d1fb501d1737", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/affc5bfb087d542035a941211c84d1fb501d1737"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/506f2deaf9e718a947f0b4107036bce22b843721", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXYmO3AAoJEFbW7qD8Z6xGdhQP+wW/Oo0PWr+XGk6YrbTft1IM\neg9SYOJXD89pL/zbrE5IZV+qsmsIx5EPMVrnRF+3lS+RFRa6uTv5XFBeuhsEbJK+\nHZFrmcixXJH3FjR7z91XaIU0IUUy0d5kGfPKyZognBBC8JhxI2IHhYPAe5lXUsja\nUxpYaOA6KMlCnWQa294NHhvVSUdit5/4WiydtEyAlV3Omo+l9AwP7rKfFC5DFsaT\n1xVPLT1LFSobmkQPcohYW1FTBXwYYEoszcYo48lt8+OjFt1FFv6lm4E2TH5irXc9\nw0p+66tTgyJUaU/smcD9R3mM/yjPYqRrgwDKPaIeFWoffBCCOuOc3CWPtitpeu6p\nFn/NxdcxhDBBbKTPg9al1Hibg3zmQZQils0DawYAYZ6D/pShn3lQe23yvA6zQryK\naFMJwmWKDuvTWrcUIes6FsI/OOdjJ72PEmXG3QYnv4d1RajBgED0+eeysHB3hlzW\n0mR5dl7e21jMDB9MUjFpgm+RQBBf3Mk035+92+4zxdet+ERonCxV4AH+UlWywsP1\nY2+wjC+dhr0iDJmPsJhHLOiQ3ME9q0sJuixc2EoQUAuNCCKh/buRb7F/KKXTcYFB\ncXix08/6Wjkk2SZQUbve1tvMrkYBjThcexG8/AVWerF8QTEFQwPl3oCmL/m9JbxK\nBfG7QTkNy6bPAXoqg2Vu\n=GDfI\n-----END PGP SIGNATURE-----", "payload": "tree affc5bfb087d542035a941211c84d1fb501d1737\nparent 82dc95c3ad79697acd68df09684e9d22b731ad63\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466065847 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466065847 +0200\n\nactually execute miri-pass tests"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/506f2deaf9e718a947f0b4107036bce22b843721", "html_url": "https://github.com/rust-lang/rust/commit/506f2deaf9e718a947f0b4107036bce22b843721", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/506f2deaf9e718a947f0b4107036bce22b843721/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82dc95c3ad79697acd68df09684e9d22b731ad63", "url": "https://api.github.com/repos/rust-lang/rust/commits/82dc95c3ad79697acd68df09684e9d22b731ad63", "html_url": "https://github.com/rust-lang/rust/commit/82dc95c3ad79697acd68df09684e9d22b731ad63"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "8c319977d8d83be5e1229613666d4d6fe4e33666", "filename": "tests/compiletest.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/506f2deaf9e718a947f0b4107036bce22b843721/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506f2deaf9e718a947f0b4107036bce22b843721/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=506f2deaf9e718a947f0b4107036bce22b843721", "patch": "@@ -56,16 +56,25 @@ fn compile_test() {\n             }\n             let file = file.path();\n             let stderr = std::io::stderr();\n-            writeln!(stderr.lock(), \"test [miri-pass] {}\", file.to_str().unwrap()).unwrap();\n+            write!(stderr.lock(), \"test [miri-pass] {} \", file.to_str().unwrap()).unwrap();\n             let mut cmd = std::process::Command::new(\"target/debug/miri\");\n             cmd.arg(file);\n             cmd.arg(format!(\"--sysroot={}\", sysroot));\n             cmd.arg(\"-Dwarnings\");\n-            cmd.arg(format!(\"-target={}\", target));\n+            cmd.arg(format!(\"--target={}\", target));\n             let libs = Path::new(&sysroot).join(\"lib\");\n             let sysroot = libs.join(\"rustlib\").join(&target).join(\"lib\");\n             let paths = std::env::join_paths(&[libs, sysroot]).unwrap();\n             cmd.env(compiletest::procsrv::dylib_env_var(), paths);\n+            match cmd.output() {\n+                Ok(ref output) if output.status.success() => writeln!(stderr.lock(), \"ok\").unwrap(),\n+                Ok(output) => {\n+                    writeln!(stderr.lock(), \"FAILED with exit code {}\", output.status.code().unwrap_or(0)).unwrap();\n+                    writeln!(stderr.lock(), \"stdout: \\n {}\", std::str::from_utf8(&output.stdout).unwrap()).unwrap();\n+                    writeln!(stderr.lock(), \"stderr: \\n {}\", std::str::from_utf8(&output.stderr).unwrap()).unwrap();\n+                }\n+                Err(e) => writeln!(stderr.lock(), \"FAILED: {}\", e).unwrap(),\n+            }\n         }\n         let stderr = std::io::stderr();\n         writeln!(stderr.lock(), \"\").unwrap();"}]}