{"sha": "3a39bbaf741f74342c694e59a3e0b1888279131c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMzliYmFmNzQxZjc0MzQyYzY5NGU1OWEzZTBiMTg4ODI3OTEzMWM=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-29T21:19:14Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-29T21:31:17Z"}, "message": "Small cleanup", "tree": {"sha": "0a1f604ec588e4450e5bec47a0a5417464f69a7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a1f604ec588e4450e5bec47a0a5417464f69a7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a39bbaf741f74342c694e59a3e0b1888279131c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a39bbaf741f74342c694e59a3e0b1888279131c", "html_url": "https://github.com/rust-lang/rust/commit/3a39bbaf741f74342c694e59a3e0b1888279131c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a39bbaf741f74342c694e59a3e0b1888279131c/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b9fbd8801019b9235c08e09acb92d21ac0c8c74", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9fbd8801019b9235c08e09acb92d21ac0c8c74", "html_url": "https://github.com/rust-lang/rust/commit/1b9fbd8801019b9235c08e09acb92d21ac0c8c74"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "64d6fa7be38b0f014bace0473b924a502cd66233", "filename": "src/entry.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a39bbaf741f74342c694e59a3e0b1888279131c/src%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a39bbaf741f74342c694e59a3e0b1888279131c/src%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fentry.rs?ref=3a39bbaf741f74342c694e59a3e0b1888279131c", "patch": "@@ -93,19 +93,19 @@ fn check_for_insert(cx: &LateContext, span: Span, map: &Expr, key: &Expr, expr:\n         ], {\n             let help = if sole_expr {\n                 format!(\"{}.entry({}).or_insert({})\",\n-                        snippet(cx, map.span, \"..\"),\n+                        snippet(cx, map.span, \"map\"),\n                         snippet(cx, params[1].span, \"..\"),\n                         snippet(cx, params[2].span, \"..\"))\n             }\n             else {\n                 format!(\"{}.entry({})\",\n-                        snippet(cx, map.span, \"..\"),\n+                        snippet(cx, map.span, \"map\"),\n                         snippet(cx, params[1].span, \"..\"))\n             };\n \n             span_lint_and_then(cx, MAP_ENTRY, span,\n                                &format!(\"usage of `contains_key` followed by `insert` on `{}`\", kind), |db| {\n-                db.span_suggestion(span, \"Consider using\", help.clone());\n+                db.span_suggestion(span, \"Consider using\", help);\n             });\n         }\n     }"}, {"sha": "0c18d35fa128333198085ccba044559ebe721cd4", "filename": "src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a39bbaf741f74342c694e59a3e0b1888279131c/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a39bbaf741f74342c694e59a3e0b1888279131c/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=3a39bbaf741f74342c694e59a3e0b1888279131c", "patch": "@@ -223,8 +223,8 @@ fn check_match_bool(cx: &LateContext, ex: &Expr, arms: &[Arm], expr: &Expr) {\n                            expr.span,\n                            \"you seem to be trying to match on a boolean expression. Consider using \\\n                            an if..else block:\", move |db| {\n-            if let Some(ref sugg) = sugg {\n-                db.span_suggestion(expr.span, \"try this\", sugg.clone());\n+            if let Some(sugg) = sugg {\n+                db.span_suggestion(expr.span, \"try this\", sugg);\n             }\n         });\n     }"}, {"sha": "b5355919496ef3bfd2be7e80b04c93dd758b7cb8", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a39bbaf741f74342c694e59a3e0b1888279131c/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a39bbaf741f74342c694e59a3e0b1888279131c/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=3a39bbaf741f74342c694e59a3e0b1888279131c", "patch": "@@ -649,7 +649,7 @@ fn is_cast_ty_equal(left: &Ty, right: &Ty) -> bool {\n     }\n }\n \n-/// Return the pre-expansion span is this comes from a expansion of the macro `name`.\n+/// Return the pre-expansion span if is this comes from an expansion of the macro `name`.\n pub fn is_expn_of(cx: &LateContext, mut span: Span, name: &str) -> Option<Span> {\n     loop {\n         let span_name_span = cx.tcx.sess.codemap().with_expn_info(span.expn_id, |expn| {"}]}