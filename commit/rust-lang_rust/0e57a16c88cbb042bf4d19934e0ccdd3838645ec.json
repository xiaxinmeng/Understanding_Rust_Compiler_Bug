{"sha": "0e57a16c88cbb042bf4d19934e0ccdd3838645ec", "node_id": "C_kwDOAAsO6NoAKDBlNTdhMTZjODhjYmIwNDJiZjRkMTk5MzRlMGNjZGQzODM4NjQ1ZWM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-20T03:34:05Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-03-03T21:01:35Z"}, "message": "add tests", "tree": {"sha": "68d637f2a613c299e8e7f558a4335d736168b6c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68d637f2a613c299e8e7f558a4335d736168b6c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e57a16c88cbb042bf4d19934e0ccdd3838645ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e57a16c88cbb042bf4d19934e0ccdd3838645ec", "html_url": "https://github.com/rust-lang/rust/commit/0e57a16c88cbb042bf4d19934e0ccdd3838645ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e57a16c88cbb042bf4d19934e0ccdd3838645ec/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f2151442611cd85cdb82d1097ed72fcf7956e4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f2151442611cd85cdb82d1097ed72fcf7956e4c", "html_url": "https://github.com/rust-lang/rust/commit/9f2151442611cd85cdb82d1097ed72fcf7956e4c"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "7adcd712ba6ab6f4bc33edeb1e4040d9e18675c9", "filename": "src/test/rustdoc-json/generic-associated-types/gats.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0e57a16c88cbb042bf4d19934e0ccdd3838645ec/src%2Ftest%2Frustdoc-json%2Fgeneric-associated-types%2Fgats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e57a16c88cbb042bf4d19934e0ccdd3838645ec/src%2Ftest%2Frustdoc-json%2Fgeneric-associated-types%2Fgats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fgeneric-associated-types%2Fgats.rs?ref=0e57a16c88cbb042bf4d19934e0ccdd3838645ec", "patch": "@@ -0,0 +1,42 @@\n+// ignore-tidy-linelength\n+\n+#![no_core]\n+#![feature(generic_associated_types, lang_items, no_core)]\n+\n+#[lang = \"sized\"]\n+pub trait Sized {}\n+\n+pub trait Display {}\n+\n+// @has gats.json\n+pub trait LendingIterator {\n+    // @count - \"$.index[*][?(@.name=='LendingItem')].inner.generics.params[*]\" 1\n+    // @is - \"$.index[*][?(@.name=='LendingItem')].inner.generics.params[*].name\" \\\"\\'a\\\"\n+    // @count - \"$.index[*][?(@.name=='LendingItem')].inner.generics.where_predicates[*]\" 1\n+    // @is - \"$.index[*][?(@.name=='LendingItem')].inner.generics.where_predicates[*].bound_predicate.ty.inner\" \\\"Self\\\"\n+    // @is - \"$.index[*][?(@.name=='LendingItem')].inner.generics.where_predicates[*].bound_predicate.bounds[*].outlives\" \\\"\\'a\\\"\n+    // @count - \"$.index[*][?(@.name=='LendingItem')].inner.bounds[*]\" 1\n+    type LendingItem<'a>: Display where Self: 'a;\n+\n+    // @is - \"$.index[*][?(@.name=='lending_next')].inner.decl.output.kind\" \\\"qualified_path\\\"\n+    // @count - \"$.index[*][?(@.name=='lending_next')].inner.decl.output.inner.args.angle_bracketed.args[*]\" 1\n+    // @count - \"$.index[*][?(@.name=='lending_next')].inner.decl.output.inner.args.angle_bracketed.bindings[*]\" 0\n+    // @is - \"$.index[*][?(@.name=='lending_next')].inner.decl.output.inner.self_type.inner\" \\\"Self\\\"\n+    // @is - \"$.index[*][?(@.name=='lending_next')].inner.decl.output.inner.name\" \\\"LendingItem\\\"\n+    fn lending_next<'a>(&'a self) -> Self::LendingItem<'a>;\n+}\n+\n+// @has gats.json\n+pub trait Iterator {\n+    // @count - \"$.index[*][?(@.name=='Item')].inner.generics.params[*]\" 0\n+    // @count - \"$.index[*][?(@.name=='Item')].inner.generics.where_predicates[*]\" 0\n+    // @count - \"$.index[*][?(@.name=='Item')].inner.bounds[*]\" 1\n+    type Item: Display;\n+\n+    // @is - \"$.index[*][?(@.name=='next')].inner.decl.output.kind\" \\\"qualified_path\\\"\n+    // @count - \"$.index[*][?(@.name=='next')].inner.decl.output.inner.args.angle_bracketed.args[*]\" 0\n+    // @count - \"$.index[*][?(@.name=='next')].inner.decl.output.inner.args.angle_bracketed.bindings[*]\" 0\n+    // @is - \"$.index[*][?(@.name=='next')].inner.decl.output.inner.self_type.inner\" \\\"Self\\\"\n+    // @is - \"$.index[*][?(@.name=='next')].inner.decl.output.inner.name\" \\\"Item\\\"\n+    fn next<'a>(&'a self) -> Self::Item;\n+}"}, {"sha": "ae981b9499a67cb20d131528639b836c2196ae34", "filename": "src/test/rustdoc/generic-associated-types/gats.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0e57a16c88cbb042bf4d19934e0ccdd3838645ec/src%2Ftest%2Frustdoc%2Fgeneric-associated-types%2Fgats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e57a16c88cbb042bf4d19934e0ccdd3838645ec/src%2Ftest%2Frustdoc%2Fgeneric-associated-types%2Fgats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fgeneric-associated-types%2Fgats.rs?ref=0e57a16c88cbb042bf4d19934e0ccdd3838645ec", "patch": "@@ -0,0 +1,34 @@\n+#![crate_name = \"foo\"]\n+#![feature(generic_associated_types)]\n+\n+// @has foo/trait.LendingIterator.html\n+pub trait LendingIterator {\n+    // @has - '//*[@id=\"associatedtype.Item\"]//h4[@class=\"code-header\"]' \"type Item<'a> where Self: 'a\"\n+    type Item<'a> where Self: 'a;\n+\n+    // @has - '//*[@id=\"tymethod.next\"]//h4[@class=\"code-header\"]' \\\n+    //      \"fn next<'a>(&'a self) -> Self::Item<'a>\"\n+    // @has - '//*[@id=\"tymethod.next\"]//h4[@class=\"code-header\"]//a[@href=\"trait.LendingIterator.html#associatedtype.Item\"]' \\\n+    //      \"Item\"\n+    fn next<'a>(&'a self) -> Self::Item<'a>;\n+}\n+\n+// @has foo/trait.LendingIterator.html\n+// @has - '//*[@id=\"associatedtype.Item-1\"]//h4[@class=\"code-header\"]' \"type Item<'a> = ()\"\n+impl LendingIterator for () {\n+    type Item<'a> = ();\n+\n+    fn next<'a>(&self) -> () {}\n+}\n+\n+pub struct Infinite<T>(T);\n+\n+// @has foo/trait.LendingIterator.html\n+// @has - '//*[@id=\"associatedtype.Item-2\"]//h4[@class=\"code-header\"]' \"type Item<'a> where Self: 'a = &'a T\"\n+impl<T> LendingIterator for Infinite<T> {\n+    type Item<'a> where Self: 'a = &'a T;\n+\n+    fn next<'a>(&'a self) -> Self::Item<'a> {\n+        &self.0\n+    }\n+}"}]}