{"sha": "e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MzgyZWYxYWMwNGMzOWUyYjJjN2FkY2EzYmM1ZGY3OTcxYTZhN2M=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-28T23:23:12Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-28T23:30:05Z"}, "message": "Have #fmt use str::concat to build up the string instead of using binary +. Closes #2746.", "tree": {"sha": "a3e182cfd66bcb646c11538bed7dc6222bdc14c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3e182cfd66bcb646c11538bed7dc6222bdc14c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c", "html_url": "https://github.com/rust-lang/rust/commit/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2b498183ad6326fec9c0c953c44b43668a74d1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b498183ad6326fec9c0c953c44b43668a74d1f", "html_url": "https://github.com/rust-lang/rust/commit/b2b498183ad6326fec9c0c953c44b43668a74d1f"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "63a4d3d4043f648bbb222281962141285d3805fc", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c", "patch": "@@ -72,6 +72,10 @@ fn mk_uniq_vec_e(cx: ext_ctxt, sp: span, exprs: [@ast::expr]/~) ->\n    @ast::expr {\n     mk_vstore_e(cx, sp, mk_vec_e(cx, sp, exprs), ast::vstore_uniq)\n }\n+fn mk_fixed_vec_e(cx: ext_ctxt, sp: span, exprs: [@ast::expr]/~) ->\n+   @ast::expr {\n+    mk_vstore_e(cx, sp, mk_vec_e(cx, sp, exprs), ast::vstore_fixed(none))\n+}\n \n fn mk_rec_e(cx: ext_ctxt, sp: span,\n             fields: [{ident: ast::ident, ex: @ast::expr}]/~) ->"}, {"sha": "09ebc0b79cd6baa8f47c9b8e6a922d96097dccaa", "filename": "src/libsyntax/ext/fmt.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c/src%2Flibsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c/src%2Flibsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ffmt.rs?ref=e9382ef1ac04c39e2b2c7adca3bc5df7971a6a7c", "patch": "@@ -117,6 +117,7 @@ fn pieces_to_expr(cx: ext_ctxt, sp: span,\n         let args = [cnv_expr, arg]/~;\n         ret mk_call(cx, arg.span, path, args);\n     }\n+\n     fn make_new_conv(cx: ext_ctxt, sp: span, cnv: conv, arg: @ast::expr) ->\n        @ast::expr {\n         // FIXME: Move validation code into core::extfmt (Issue #2249)\n@@ -243,13 +244,12 @@ fn pieces_to_expr(cx: ext_ctxt, sp: span,\n     }\n     let fmt_sp = args[0].span;\n     let mut n = 0u;\n-    let mut tmp_expr = mk_str(cx, sp, \"\");\n-    let nargs = vec::len::<@ast::expr>(args);\n+    let mut piece_exprs = []/~;\n+    let nargs = args.len();\n     for pieces.each {|pc|\n         alt pc {\n           piece_string(s) {\n-            let s_expr = mk_str(cx, fmt_sp, s);\n-            tmp_expr = mk_binary(cx, fmt_sp, ast::add, tmp_expr, s_expr);\n+            vec::push(piece_exprs, mk_str(cx, fmt_sp, s));\n           }\n           piece_conv(conv) {\n             n += 1u;\n@@ -262,7 +262,7 @@ fn pieces_to_expr(cx: ext_ctxt, sp: span,\n             log_conv(conv);\n             let arg_expr = args[n];\n             let c_expr = make_new_conv(cx, fmt_sp, conv, arg_expr);\n-            tmp_expr = mk_binary(cx, fmt_sp, ast::add, tmp_expr, c_expr);\n+            vec::push(piece_exprs, c_expr);\n           }\n         }\n     }\n@@ -273,7 +273,9 @@ fn pieces_to_expr(cx: ext_ctxt, sp: span,\n             (sp, #fmt[\"too many arguments to #fmt. found %u, expected %u\",\n                            nargs, expected_nargs]);\n     }\n-    ret tmp_expr;\n+\n+    let arg_vec = mk_fixed_vec_e(cx, fmt_sp, piece_exprs);\n+    ret mk_call(cx, fmt_sp, [@\"str\", @\"concat\"]/~, [arg_vec]/~);\n }\n //\n // Local Variables:"}]}