{"sha": "1c8d8af316f97e712c40870b0746a2d1ac073c2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOGQ4YWYzMTZmOTdlNzEyYzQwODcwYjA3NDZhMmQxYWMwNzNjMmU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-12-19T03:03:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-12-19T03:03:12Z"}, "message": "Remove no longer working test", "tree": {"sha": "c2960e0f348f5fb6e7a8b6eb4d0f924076f84fce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2960e0f348f5fb6e7a8b6eb4d0f924076f84fce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c8d8af316f97e712c40870b0746a2d1ac073c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c8d8af316f97e712c40870b0746a2d1ac073c2e", "html_url": "https://github.com/rust-lang/rust/commit/1c8d8af316f97e712c40870b0746a2d1ac073c2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c8d8af316f97e712c40870b0746a2d1ac073c2e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2", "html_url": "https://github.com/rust-lang/rust/commit/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2"}], "stats": {"total": 181, "additions": 0, "deletions": 181}, "files": [{"sha": "8a18aadf36a8bb635684927b165c09f869f0c862", "filename": "src/test/run-make-fulldeps/llvm-pass/Makefile", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2FMakefile?ref=c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2", "patch": "@@ -1,28 +0,0 @@\n--include ../tools.mk\n-\n-ifeq ($(UNAME),Darwin)\n-PLUGIN_FLAGS := -C link-args=-Wl,-undefined,dynamic_lookup\n-endif\n-\n-ifeq ($(findstring stage1,$(RUST_BUILD_STAGE)),stage1)\n-# ignore stage1\n-all:\n-\n-else\n-# Windows doesn't correctly handle include statements with escaping paths,\n-# so this test will not get run on Windows.\n-ifdef IS_WINDOWS\n-all:\n-else\n-all: $(call NATIVE_STATICLIB,llvm-function-pass) $(call NATIVE_STATICLIB,llvm-module-pass)\n-\t$(RUSTC) plugin.rs -C prefer-dynamic $(PLUGIN_FLAGS)\n-\t$(RUSTC) main.rs\n-\n-$(TMPDIR)/libllvm-function-pass.o:\n-\t$(CXX) $(CFLAGS) $(LLVM_CXXFLAGS) -c llvm-function-pass.so.cc -o $(TMPDIR)/libllvm-function-pass.o\n-\n-$(TMPDIR)/libllvm-module-pass.o:\n-\t$(CXX) $(CFLAGS) $(LLVM_CXXFLAGS) -c llvm-module-pass.so.cc -o $(TMPDIR)/libllvm-module-pass.o\n-endif\n-\n-endif"}, {"sha": "c0a17d920cffc91154ee4b0e22d473225a408b92", "filename": "src/test/run-make-fulldeps/llvm-pass/llvm-function-pass.so.cc", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fllvm-function-pass.so.cc", "raw_url": "https://github.com/rust-lang/rust/raw/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fllvm-function-pass.so.cc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fllvm-function-pass.so.cc?ref=c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2", "patch": "@@ -1,56 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <unistd.h>\n-\n-#include \"llvm/Pass.h\"\n-#include \"llvm/IR/Function.h\"\n-\n-using namespace llvm;\n-\n-namespace {\n-\n-  class TestLLVMPass : public FunctionPass {\n-\n-  public:\n-\n-    static char ID;\n-    TestLLVMPass() : FunctionPass(ID) { }\n-\n-    bool runOnFunction(Function &F) override;\n-\n-    StringRef getPassName() const override {\n-      return \"Some LLVM pass\";\n-    }\n-\n-  };\n-\n-}\n-\n-bool TestLLVMPass::runOnFunction(Function &F) {\n-  // A couple examples of operations that previously caused segmentation faults\n-  // https://github.com/rust-lang/rust/issues/31067\n-\n-  for (auto N = F.begin(); N != F.end(); ++N) {\n-    /* code */\n-  }\n-\n-  LLVMContext &C = F.getContext();\n-  IntegerType *Int8Ty  = IntegerType::getInt8Ty(C);\n-  PointerType::get(Int8Ty, 0);\n-  return true;\n-}\n-\n-char TestLLVMPass::ID = 0;\n-\n-static RegisterPass<TestLLVMPass> RegisterAFLPass(\n-  \"some-llvm-function-pass\", \"Some LLVM pass\");"}, {"sha": "70051681ab0350393a8f25eae75e5becce325974", "filename": "src/test/run-make-fulldeps/llvm-pass/llvm-module-pass.so.cc", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fllvm-module-pass.so.cc", "raw_url": "https://github.com/rust-lang/rust/raw/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fllvm-module-pass.so.cc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fllvm-module-pass.so.cc?ref=c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2", "patch": "@@ -1,55 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <unistd.h>\n-\n-#include \"llvm/IR/Module.h\"\n-\n-using namespace llvm;\n-\n-namespace {\n-\n-  class TestLLVMPass : public ModulePass {\n-\n-  public:\n-\n-    static char ID;\n-    TestLLVMPass() : ModulePass(ID) { }\n-\n-    bool runOnModule(Module &M) override;\n-\n-    StringRef getPassName() const override {\n-      return \"Some LLVM pass\";\n-    }\n-\n-  };\n-\n-}\n-\n-bool TestLLVMPass::runOnModule(Module &M) {\n-  // A couple examples of operations that previously caused segmentation faults\n-  // https://github.com/rust-lang/rust/issues/31067\n-\n-  for (auto F = M.begin(); F != M.end(); ++F) {\n-    /* code */\n-  }\n-\n-  LLVMContext &C = M.getContext();\n-  IntegerType *Int8Ty  = IntegerType::getInt8Ty(C);\n-  PointerType::get(Int8Ty, 0);\n-  return true;\n-}\n-\n-char TestLLVMPass::ID = 0;\n-\n-static RegisterPass<TestLLVMPass> RegisterAFLPass(\n-  \"some-llvm-module-pass\", \"Some LLVM pass\");"}, {"sha": "5b5ab94bcef02c139cb8493936050b5b2c0ca5ce", "filename": "src/test/run-make-fulldeps/llvm-pass/main.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fmain.rs?ref=c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(plugin)]\n-#![plugin(some_plugin)]\n-\n-fn main() {}"}, {"sha": "f77b2fca857a613e3759bb50b4fec40995186fc6", "filename": "src/test/run-make-fulldeps/llvm-pass/plugin.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fllvm-pass%2Fplugin.rs?ref=c383d389f0a8f7b7bd8d8e58f6b10a2a2b4f7fa2", "patch": "@@ -1,28 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(plugin_registrar, rustc_private)]\n-#![crate_type = \"dylib\"]\n-#![crate_name = \"some_plugin\"]\n-\n-extern crate rustc;\n-extern crate rustc_plugin;\n-\n-#[link(name = \"llvm-function-pass\", kind = \"static\")]\n-#[link(name = \"llvm-module-pass\", kind = \"static\")]\n-extern {}\n-\n-use rustc_plugin::registry::Registry;\n-\n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_llvm_pass(\"some-llvm-function-pass\");\n-    reg.register_llvm_pass(\"some-llvm-module-pass\");\n-}"}]}