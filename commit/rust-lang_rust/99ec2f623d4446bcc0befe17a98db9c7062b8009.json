{"sha": "99ec2f623d4446bcc0befe17a98db9c7062b8009", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZWMyZjYyM2Q0NDQ2YmNjMGJlZmUxN2E5OGRiOWM3MDYyYjgwMDk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-28T12:26:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-28T12:26:55Z"}, "message": "Merge #7059\n\n7059: Special case $_ in meta var instead of treat it as ident in mbe  r=lnicola a=edwin0cheng\n\nIn #6929, we treat '_' as an ident but rustc is only allow it in some special places (e.g. meta var in mbe , type, pat etc). \r\n\r\nThis PR rollback that and we only make '$_' works in meta var matching. \r\n\r\nFixes #7056 \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "280da6ea56a904e43b4edc57974e29d55daffcb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/280da6ea56a904e43b4edc57974e29d55daffcb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99ec2f623d4446bcc0befe17a98db9c7062b8009", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf6c8PCRBK7hj4Ov3rIwAAdHIIAFBZKGGmgnZt7AFu3pbcewCL\nbaJFT2dAXomGgsE8Od8olmSrqHOc0BDlLFc3OBYjP3aBhp/dPJ8QKnTpyjHuO/OC\nCF3lAuPaDWCk7AkAwJP6NsigwvzNo+uvDlN/c/CEAoXOBzggJ73iNiHwTqRhJcLA\n+GSMRHGtiMWzfHTvhRTpREKK7SdBQbnLrCpKIJSEfABAfn6wnjnsFQpufpDXph0r\n/9LDpGrqTI/8vj97tDOBpx+VAxqxE3WH8AniASbZjYBQWw6Ar2L9aXRjj0htlGSE\nDvgL3E8QIJEi21bbODQoNnJBlc9krAi+d48VQj35E89joLfeSpvGFJjvugze4xQ=\n=G4p9\n-----END PGP SIGNATURE-----\n", "payload": "tree 280da6ea56a904e43b4edc57974e29d55daffcb8\nparent 86f947c1fb61c17140653f43e5f6e3e5c0ed057d\nparent b5c29af02a88d0354ae1cbdabb41d481132f476e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609158415 +0000\ncommitter GitHub <noreply@github.com> 1609158415 +0000\n\nMerge #7059\n\n7059: Special case $_ in meta var instead of treat it as ident in mbe  r=lnicola a=edwin0cheng\n\nIn #6929, we treat '_' as an ident but rustc is only allow it in some special places (e.g. meta var in mbe , type, pat etc). \r\n\r\nThis PR rollback that and we only make '$_' works in meta var matching. \r\n\r\nFixes #7056 \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99ec2f623d4446bcc0befe17a98db9c7062b8009", "html_url": "https://github.com/rust-lang/rust/commit/99ec2f623d4446bcc0befe17a98db9c7062b8009", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99ec2f623d4446bcc0befe17a98db9c7062b8009/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86f947c1fb61c17140653f43e5f6e3e5c0ed057d", "url": "https://api.github.com/repos/rust-lang/rust/commits/86f947c1fb61c17140653f43e5f6e3e5c0ed057d", "html_url": "https://github.com/rust-lang/rust/commit/86f947c1fb61c17140653f43e5f6e3e5c0ed057d"}, {"sha": "b5c29af02a88d0354ae1cbdabb41d481132f476e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c29af02a88d0354ae1cbdabb41d481132f476e", "html_url": "https://github.com/rust-lang/rust/commit/b5c29af02a88d0354ae1cbdabb41d481132f476e"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "d681905f5728f1b093c0ca88763edc2edfb1353c", "filename": "crates/mbe/src/parser.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/99ec2f623d4446bcc0befe17a98db9c7062b8009/crates%2Fmbe%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ec2f623d4446bcc0befe17a98db9c7062b8009/crates%2Fmbe%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fparser.rs?ref=99ec2f623d4446bcc0befe17a98db9c7062b8009", "patch": "@@ -101,8 +101,15 @@ fn next_op<'a>(\n                     Op::Repeat { subtree, separator, kind }\n                 }\n                 tt::TokenTree::Leaf(leaf) => match leaf {\n-                    tt::Leaf::Punct(_) => {\n-                        return Err(ExpandError::UnexpectedToken);\n+                    tt::Leaf::Punct(punct) => {\n+                        static UNDERSCORE: SmolStr = SmolStr::new_inline(\"_\");\n+\n+                        if punct.char != '_' {\n+                            return Err(ExpandError::UnexpectedToken);\n+                        }\n+                        let name = &UNDERSCORE;\n+                        let kind = eat_fragment_kind(src, mode)?;\n+                        Op::Var { name, kind }\n                     }\n                     tt::Leaf::Ident(ident) => {\n                         let name = &ident.text;"}, {"sha": "265c0d63d85c6dbd67b13fc240c4142f94567468", "filename": "crates/mbe/src/syntax_bridge.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/99ec2f623d4446bcc0befe17a98db9c7062b8009/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ec2f623d4446bcc0befe17a98db9c7062b8009/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fsyntax_bridge.rs?ref=99ec2f623d4446bcc0befe17a98db9c7062b8009", "patch": "@@ -313,7 +313,7 @@ trait TokenConvertor {\n             return;\n         }\n \n-        result.push(if k.is_punct() && k != UNDERSCORE {\n+        result.push(if k.is_punct() {\n             assert_eq!(range.len(), TextSize::of('.'));\n             let delim = match k {\n                 T!['('] => Some((tt::DelimiterKind::Parenthesis, T![')'])),\n@@ -378,7 +378,6 @@ trait TokenConvertor {\n             let leaf: tt::Leaf = match k {\n                 T![true] | T![false] => make_leaf!(Ident),\n                 IDENT => make_leaf!(Ident),\n-                UNDERSCORE => make_leaf!(Ident),\n                 k if k.is_keyword() => make_leaf!(Ident),\n                 k if k.is_literal() => make_leaf!(Literal),\n                 LIFETIME_IDENT => {"}, {"sha": "9958a33a08d0fffd01802a8bf5e4fda2dacaf6ab", "filename": "crates/mbe/src/tests.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/99ec2f623d4446bcc0befe17a98db9c7062b8009/crates%2Fmbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ec2f623d4446bcc0befe17a98db9c7062b8009/crates%2Fmbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests.rs?ref=99ec2f623d4446bcc0befe17a98db9c7062b8009", "patch": "@@ -1019,6 +1019,42 @@ fn test_underscore() {\n     .assert_expand_items(r#\"foo! { => }\"#, r#\"0\"#);\n }\n \n+#[test]\n+fn test_underscore_not_greedily() {\n+    parse_macro(\n+        r#\"\n+macro_rules! q {\n+    ($($a:ident)* _) => {0};\n+}\n+\"#,\n+    )\n+    // `_` overlaps with `$a:ident` but rustc matches it under the `_` token\n+    .assert_expand_items(r#\"q![a b c d _]\"#, r#\"0\"#);\n+\n+    parse_macro(\n+        r#\"\n+macro_rules! q {\n+    ($($a:expr => $b:ident)* _ => $c:expr) => {0};\n+}\n+\"#,\n+    )\n+    // `_ => ou` overlaps with `$a:expr => $b:ident` but rustc matches it under `_ => $c:expr`\n+    .assert_expand_items(r#\"q![a => b c => d _ => ou]\"#, r#\"0\"#);\n+}\n+\n+#[test]\n+fn test_underscore_as_type() {\n+    parse_macro(\n+        r#\"\n+macro_rules! q {\n+    ($a:ty) => {0};\n+}\n+\"#,\n+    )\n+    // Underscore is a type\n+    .assert_expand_items(r#\"q![_]\"#, r#\"0\"#);\n+}\n+\n #[test]\n fn test_vertical_bar_with_pat() {\n     parse_macro("}]}