{"sha": "35e16a1e0652a0c2f351be8a23c18514bdd35f34", "node_id": "C_kwDOAAsO6NoAKDM1ZTE2YTFlMDY1MmEwYzJmMzUxYmU4YTIzYzE4NTE0YmRkMzVmMzQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-20T23:17:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-20T23:17:33Z"}, "message": "rust-lang/portable-simd#266: reduce Miri test count in round.rs", "tree": {"sha": "bf060c9fecf6704d52194e6fb44af2c230507e24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf060c9fecf6704d52194e6fb44af2c230507e24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35e16a1e0652a0c2f351be8a23c18514bdd35f34", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiN7YNCRBK7hj4Ov3rIwAAra8IAH+1lPaJnBaVzpgoRNxhKvvL\ngCo9wH9TfWuBKHdj6e+NsWPb2nPjaJKUMZg+lu/LyOdFMYix8MVUwrrc6l+6VTGz\nDuEzqWO3XkNotzrk4LW72afvEqD7anO5brblCZLHzVkAILvaE9b2beagcBw1RahD\n3OUMkM6/LA/WNjWWK21vaH/EpOKLw4onpBYJHvWcN+R17HFanx6ZF1kPbetgCTu9\nqLEmnEtySE25vR8DlhVAJNL4+nlaIXhUbAZ390Ewn5lsAoqlbYgUTCP+2RTX0w87\nlPEoiW11ldv2C1icUw/PyGxEvhJ2DaGhX4Txms8iPXTt2Zjpxul4P9T5at293Fg=\n=mttz\n-----END PGP SIGNATURE-----\n", "payload": "tree bf060c9fecf6704d52194e6fb44af2c230507e24\nparent 72df4c45056a8bc0d1b3f06fdc828722177f0763\nauthor Ralf Jung <post@ralfj.de> 1647818253 -0400\ncommitter GitHub <noreply@github.com> 1647818253 -0700\n\nrust-lang/portable-simd#266: reduce Miri test count in round.rs\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35e16a1e0652a0c2f351be8a23c18514bdd35f34", "html_url": "https://github.com/rust-lang/rust/commit/35e16a1e0652a0c2f351be8a23c18514bdd35f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35e16a1e0652a0c2f351be8a23c18514bdd35f34/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72df4c45056a8bc0d1b3f06fdc828722177f0763", "url": "https://api.github.com/repos/rust-lang/rust/commits/72df4c45056a8bc0d1b3f06fdc828722177f0763", "html_url": "https://github.com/rust-lang/rust/commit/72df4c45056a8bc0d1b3f06fdc828722177f0763"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "484fd5bf47d1b6fb365e11dbb67017d3209a555c", "filename": "crates/core_simd/tests/round.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35e16a1e0652a0c2f351be8a23c18514bdd35f34/crates%2Fcore_simd%2Ftests%2Fround.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e16a1e0652a0c2f351be8a23c18514bdd35f34/crates%2Fcore_simd%2Ftests%2Fround.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fround.rs?ref=35e16a1e0652a0c2f351be8a23c18514bdd35f34", "patch": "@@ -59,7 +59,7 @@ macro_rules! float_rounding_test {\n                     const MAX_REPRESENTABLE_VALUE: Scalar =\n                         (ALL_MANTISSA_BITS << (core::mem::size_of::<Scalar>() * 8 - <Scalar>::MANTISSA_DIGITS as usize - 1)) as Scalar;\n \n-                    let mut runner = proptest::test_runner::TestRunner::default();\n+                    let mut runner = test_helpers::make_runner();\n                     runner.run(\n                         &test_helpers::array::UniformArrayStrategy::new(-MAX_REPRESENTABLE_VALUE..MAX_REPRESENTABLE_VALUE),\n                         |x| {"}, {"sha": "141bee18a9a40a81ac4943167b260ee47ecbd7ea", "filename": "crates/test_helpers/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35e16a1e0652a0c2f351be8a23c18514bdd35f34/crates%2Ftest_helpers%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e16a1e0652a0c2f351be8a23c18514bdd35f34/crates%2Ftest_helpers%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_helpers%2Fsrc%2Flib.rs?ref=35e16a1e0652a0c2f351be8a23c18514bdd35f34", "patch": "@@ -78,11 +78,11 @@ impl<T: core::fmt::Debug + DefaultStrategy, const LANES: usize> DefaultStrategy\n }\n \n #[cfg(not(miri))]\n-fn make_runner() -> proptest::test_runner::TestRunner {\n+pub fn make_runner() -> proptest::test_runner::TestRunner {\n     Default::default()\n }\n #[cfg(miri)]\n-fn make_runner() -> proptest::test_runner::TestRunner {\n+pub fn make_runner() -> proptest::test_runner::TestRunner {\n     // Only run a few tests on Miri\n     proptest::test_runner::TestRunner::new(proptest::test_runner::Config::with_cases(4))\n }"}]}