{"sha": "b0c140a55b589680bbcd76d18fae9f411a7af0c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYzE0MGE1NWI1ODk2ODBiYmNkNzZkMThmYWU5ZjQxMWE3YWYwYzU=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-12-02T17:43:46Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-12-03T17:50:11Z"}, "message": "Workaround for inconsistent order of llvm-cov results on Windows", "tree": {"sha": "5720af1d41a159a329ed2575c7b8b8e9c3798491", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5720af1d41a159a329ed2575c7b8b8e9c3798491"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0c140a55b589680bbcd76d18fae9f411a7af0c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c140a55b589680bbcd76d18fae9f411a7af0c5", "html_url": "https://github.com/rust-lang/rust/commit/b0c140a55b589680bbcd76d18fae9f411a7af0c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0c140a55b589680bbcd76d18fae9f411a7af0c5/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d96f351fa36d31f2b95b1cd2ad37ceaed3d395a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d96f351fa36d31f2b95b1cd2ad37ceaed3d395a8", "html_url": "https://github.com/rust-lang/rust/commit/d96f351fa36d31f2b95b1cd2ad37ceaed3d395a8"}], "stats": {"total": 103, "additions": 49, "deletions": 54}, "files": [{"sha": "91390f6cc02e4d34208b410d1d762d9af3022f1e", "filename": "src/test/run-make-fulldeps/coverage-reports/Makefile", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile?ref=b0c140a55b589680bbcd76d18fae9f411a7af0c5", "patch": "@@ -22,6 +22,43 @@ ifeq ($(LLVM_COV_DEBUG), 1)\n DEBUG_FLAG=--debug\n endif\n \n+# FIXME(richkadel): I'm adding `--ignore-filename-regex=` line(s) for specific test(s) that produce\n+# `llvm-cov` results for multiple files (for example `uses_crate.rs` and `used_crate/mod.rs`) as a\n+# workaround for two problems causing tests to fail on Windows:\n+#\n+# 1. When multiple files appear in the `llvm-cov show` results, each file's coverage results can\n+#    appear in different a different order. Whether this is random or, somehow, platform-specific,\n+#    the Windows output flips the order of the files, compared to Linux. In the `uses_crate.rs`\n+#    test, the only test-unique (interesting) results we care about are the results for only one\n+#    of the two files, `mod/uses_crate.rs`, so the workaround is to ignore all but this one file.\n+#    In the future, we may want a more sophisticated solution that splits apart `llvm-cov show`\n+#    results into separate results files for each result (taking care not to create new file\n+#    paths that might be too long for Windows MAX_PATH limits when creating these new sub-results,\n+#    as well).\n+# 2. When multiple files appear in the `llvm-cov show` results, the results for each file are\n+#    prefixed with their filename, including platform-specific path separators (`\\` for Windows,\n+#    and `/` everywhere else). This could be filtered or normalized of course, but by ignoring\n+#    coverage results for all but one of the file, the filenames are no longer included anyway.\n+#    If this changes (if/when we decide to support `llvm-cov show` results for multiple files),\n+#    the file path separator differences may need to be addressed.\n+#\n+# Since this is only a workaround, I decided to implement the override by adding an option for\n+# each file to be ignored, using a `--ignore-filename-regex=` entry for each one, rather than\n+# implement some more sophisticated solution with a new custom test directive in the test file\n+# itself (similar to `expect-exit-status`) because that would add a lot of complexity and still\n+# be a workaround, with the same result, with no benefit.\n+#\n+# Yes these `--ignore-filename-regex=` options are included in all invocations of `llvm-cov show`\n+# for now, but it is effectively ignored for all tests that don't include this file anyway.\n+#\n+# Note that it's also possible the `_counters.<test>.txt` and `<test>.json` files may order\n+# results from multiple files inconsistently, which might also have to be accomodated if and when\n+# we allow `llvm-cov` to produce results for multiple files. (The path separators appear to be\n+# normalized to `/` in those files, thankfully.) But since we are ignoring results for all but one\n+# file, this workaround addresses those potential issues as well.\n+LLVM_COV_IGNORE_FILES=\\\n+\t--ignore-filename-regex=uses_crate.rs\n+\n # When generating `expected_*` results (using `x.py test --bless`), the `--debug` flag is forced.\n # If assertions are disabled, the command will fail with an error, rather than attempt to generate\n # only partial results.\n@@ -76,6 +113,7 @@ endif\n \t# Generate a coverage report using `llvm-cov show`.\n \t\"$(LLVM_BIN_DIR)\"/llvm-cov show \\\n \t\t\t$(DEBUG_FLAG) \\\n+\t\t\t$(LLVM_COV_IGNORE_FILES) \\\n \t\t\t--Xdemangler=\"$(RUST_DEMANGLER)\" \\\n \t\t\t--show-line-counts-or-regions \\\n \t\t\t--instr-profile=\"$(TMPDIR)\"/$@.profdata \\\n@@ -133,6 +171,7 @@ endif\n \t# Generate a coverage report in JSON, using `llvm-cov export`, and fail if\n \t# there are differences from the expected output.\n \t\"$(LLVM_BIN_DIR)\"/llvm-cov export \\\n+\t\t\t$(LLVM_COV_IGNORE_FILES) \\\n \t\t\t--summary-only \\\n \t\t\t--instr-profile=\"$(TMPDIR)\"/$@.profdata \\\n \t\t\t$(call BIN,\"$(TMPDIR)\"/$@) \\"}, {"sha": "fc0d7db7c299241ded7270c5d8525edc352ecd3c", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_export_coverage.uses_crate.json", "status": "modified", "additions": 10, "deletions": 36, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.uses_crate.json", "raw_url": "https://github.com/rust-lang/rust/raw/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.uses_crate.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_export_coverage.uses_crate.json?ref=b0c140a55b589680bbcd76d18fae9f411a7af0c5", "patch": "@@ -27,55 +27,29 @@\n               \"percent\": 37.5\n             }\n           }\n-        },\n-        {\n-          \"filename\": \"../coverage/uses_crate.rs\",\n-          \"summary\": {\n-            \"functions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"instantiations\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"percent\": 100\n-            },\n-            \"lines\": {\n-              \"count\": 6,\n-              \"covered\": 6,\n-              \"percent\": 100\n-            },\n-            \"regions\": {\n-              \"count\": 1,\n-              \"covered\": 1,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n-            }\n-          }\n         }\n       ],\n       \"totals\": {\n         \"functions\": {\n-          \"count\": 4,\n-          \"covered\": 4,\n+          \"count\": 3,\n+          \"covered\": 3,\n           \"percent\": 100\n         },\n         \"instantiations\": {\n-          \"count\": 5,\n-          \"covered\": 5,\n+          \"count\": 4,\n+          \"covered\": 4,\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 37,\n-          \"covered\": 20,\n-          \"percent\": 54.054054054054056\n+          \"count\": 31,\n+          \"covered\": 14,\n+          \"percent\": 45.16129032258064\n         },\n         \"regions\": {\n-          \"count\": 17,\n-          \"covered\": 7,\n+          \"count\": 16,\n+          \"covered\": 6,\n           \"notcovered\": 10,\n-          \"percent\": 41.17647058823529\n+          \"percent\": 37.5\n         }\n       }\n     }"}, {"sha": "ad1bdb5d6a54a0405e9e4529d24bf5693901af4d", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage.uses_crate.txt", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage.uses_crate.txt?ref=b0c140a55b589680bbcd76d18fae9f411a7af0c5", "patch": "@@ -1,4 +1,3 @@\n-../coverage/used_crate/mod.rs:\n     1|       |#![allow(unused_assignments, unused_variables)]\n     2|       |\n     3|       |use std::fmt::Debug;\n@@ -55,15 +54,3 @@\n    42|      0|    }\n    43|      0|}\n \n-../coverage/uses_crate.rs:\n-    1|       |#![allow(unused_assignments, unused_variables)]\n-    2|       |\n-    3|       |mod used_crate;\n-    4|       |\n-    5|      1|fn main() {\n-    6|      1|    used_crate::used_function();\n-    7|      1|    let some_vec = vec![1, 2, 3, 4];\n-    8|      1|    used_crate::used_generic_function(&some_vec);\n-    9|      1|    used_crate::used_twice_generic_function(some_vec);\n-   10|      1|}\n-"}, {"sha": "e8be1e685e65291a8cffc11d054dd3b2f588468b", "filename": "src/test/run-make-fulldeps/coverage-reports/expected_show_coverage_counters.uses_crate.txt", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.uses_crate.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b0c140a55b589680bbcd76d18fae9f411a7af0c5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.uses_crate.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2Fexpected_show_coverage_counters.uses_crate.txt?ref=b0c140a55b589680bbcd76d18fae9f411a7af0c5", "patch": "@@ -73,8 +73,3 @@ Combined regions:\n   21:1 -> 23:2 (count=1)\n Segment at 21:1 (count = 1), RegionEntry\n Segment at 23:2 (count = 0), Skipped\n-Emitting segments for file: ../coverage/uses_crate.rs\n-Combined regions:\n-  5:1 -> 10:2 (count=1)\n-Segment at 5:1 (count = 1), RegionEntry\n-Segment at 10:2 (count = 0), Skipped"}]}