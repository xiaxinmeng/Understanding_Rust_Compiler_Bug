{"sha": "61504c8d951c566eb03037dcb300c96f4bd9a8b6", "node_id": "C_kwDOAAsO6NoAKDYxNTA0YzhkOTUxYzU2NmViMDMwMzdkY2IzMDBjOTZmNGJkOWE4YjY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-08T16:46:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-08T16:46:15Z"}, "message": "Auto merge of #13366 - matklad:xflags, r=lnicola\n\ninternal: :arrow_up: xflags\n\nThe main change here should be that flags are not inhereted, so\n\n   $ rust-analyzer analysis-stats . -v -v\n\nwould do what it should do\n\nWe also no longer Don\\'t", "tree": {"sha": "982449b6df1258979b5641014d1710d5f2ea8d92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/982449b6df1258979b5641014d1710d5f2ea8d92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61504c8d951c566eb03037dcb300c96f4bd9a8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61504c8d951c566eb03037dcb300c96f4bd9a8b6", "html_url": "https://github.com/rust-lang/rust/commit/61504c8d951c566eb03037dcb300c96f4bd9a8b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61504c8d951c566eb03037dcb300c96f4bd9a8b6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8437e4ba5864143cd3315b8c6a48bcca1192a37a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8437e4ba5864143cd3315b8c6a48bcca1192a37a", "html_url": "https://github.com/rust-lang/rust/commit/8437e4ba5864143cd3315b8c6a48bcca1192a37a"}, {"sha": "39fa8b5c39c3f259043364d4b7ab6bf3dfc54356", "url": "https://api.github.com/repos/rust-lang/rust/commits/39fa8b5c39c3f259043364d4b7ab6bf3dfc54356", "html_url": "https://github.com/rust-lang/rust/commit/39fa8b5c39c3f259043364d4b7ab6bf3dfc54356"}], "stats": {"total": 80, "additions": 32, "deletions": 48}, "files": [{"sha": "e45cde6838813d78e32d16701cf171de4634aceb", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/61504c8d951c566eb03037dcb300c96f4bd9a8b6/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/61504c8d951c566eb03037dcb300c96f4bd9a8b6/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=61504c8d951c566eb03037dcb300c96f4bd9a8b6", "patch": "@@ -2082,18 +2082,18 @@ checksum = \"06069a848f95fceae3e5e03c0ddc8cb78452b56654ee0c8e68f938cf790fb9e3\"\n \n [[package]]\n name = \"xflags\"\n-version = \"0.2.4\"\n+version = \"0.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3f14fe1ed41a5a2b5ef3f565586c4a8a559ee55d3953faab360a771135bdee00\"\n+checksum = \"cbf19f5031a1a812e96fede16f8161218883079946cea87619d3613db1efd268\"\n dependencies = [\n  \"xflags-macros\",\n ]\n \n [[package]]\n name = \"xflags-macros\"\n-version = \"0.2.4\"\n+version = \"0.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"45d11d5fc2a97287eded8b170ca80533b3c42646dd7fa386a5eb045817921022\"\n+checksum = \"2afbd7f2039bb6cad2dd45f0c5dff49c0d4e26118398768b7a605524d4251809\"\n \n [[package]]\n name = \"xshell\""}, {"sha": "a4e6550984ee8b577a8a581f96072b7867cb5d70", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61504c8d951c566eb03037dcb300c96f4bd9a8b6/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/61504c8d951c566eb03037dcb300c96f4bd9a8b6/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=61504c8d951c566eb03037dcb300c96f4bd9a8b6", "patch": "@@ -25,7 +25,7 @@ itertools = \"0.10.3\"\n scip = \"0.1.1\"\n lsp-types = { version = \"0.93.1\", features = [\"proposed\"] }\n parking_lot = \"0.12.1\"\n-xflags = \"0.2.4\"\n+xflags = \"0.3.0\"\n oorandom = \"11.1.3\"\n rustc-hash = \"1.1.0\"\n serde = { version = \"1.0.137\", features = [\"derive\"] }"}, {"sha": "eabfcf1944dfd4f47c44a97d9e2b5c5c4ce63aaf", "filename": "crates/rust-analyzer/src/bin/main.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/61504c8d951c566eb03037dcb300c96f4bd9a8b6/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61504c8d951c566eb03037dcb300c96f4bd9a8b6/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs?ref=61504c8d951c566eb03037dcb300c96f4bd9a8b6", "patch": "@@ -37,16 +37,15 @@ fn main() {\n         process::exit(code);\n     }\n \n-    if let Err(err) = try_main() {\n+    let flags = flags::RustAnalyzer::from_env_or_exit();\n+    if let Err(err) = try_main(flags) {\n         tracing::error!(\"Unexpected error: {}\", err);\n         eprintln!(\"{}\", err);\n         process::exit(101);\n     }\n }\n \n-fn try_main() -> Result<()> {\n-    let flags = flags::RustAnalyzer::from_env()?;\n-\n+fn try_main(flags: flags::RustAnalyzer) -> Result<()> {\n     #[cfg(debug_assertions)]\n     if flags.wait_dbg || env::var(\"RA_WAIT_DBG\").is_ok() {\n         #[allow(unused_mut)]\n@@ -76,10 +75,6 @@ fn try_main() -> Result<()> {\n                 println!(\"rust-analyzer {}\", rust_analyzer::version());\n                 return Ok(());\n             }\n-            if cmd.help {\n-                println!(\"{}\", flags::RustAnalyzer::HELP);\n-                return Ok(());\n-            }\n             with_extra_thread(\"LspServer\", run_server)?;\n         }\n         flags::RustAnalyzerCmd::ProcMacro(flags::ProcMacro) => {"}, {"sha": "5bcc97e22612257f8e025d2dbd24ff16e0f64bf8", "filename": "crates/rust-analyzer/src/cli/flags.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/61504c8d951c566eb03037dcb300c96f4bd9a8b6/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61504c8d951c566eb03037dcb300c96f4bd9a8b6/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fflags.rs?ref=61504c8d951c566eb03037dcb300c96f4bd9a8b6", "patch": "@@ -31,8 +31,6 @@ xflags::xflags! {\n         default cmd lsp-server {\n             /// Print version.\n             optional --version\n-            /// Print help.\n-            optional -h, --help\n \n             /// Dump a LSP config JSON schema.\n             optional --print-config-schema\n@@ -54,10 +52,10 @@ xflags::xflags! {\n         }\n \n         /// Batch typecheck project and print summary statistics\n-        cmd analysis-stats\n+        cmd analysis-stats {\n             /// Directory with Cargo.toml.\n             required path: PathBuf\n-        {\n+\n             optional --output format: OutputFormat\n \n             /// Randomize order in which crates, modules, and items are processed.\n@@ -84,38 +82,37 @@ xflags::xflags! {\n             optional --skip-inference\n         }\n \n-        cmd diagnostics\n+        cmd diagnostics {\n             /// Directory with Cargo.toml.\n             required path: PathBuf\n-        {\n+\n             /// Don't run build scripts or load `OUT_DIR` values by running `cargo check` before analysis.\n             optional --disable-build-scripts\n             /// Don't use expand proc macros.\n             optional --disable-proc-macros\n         }\n \n-        cmd ssr\n+        cmd ssr {\n             /// A structured search replace rule (`$a.foo($b) ==> bar($a, $b)`)\n             repeated rule: SsrRule\n-        {}\n+        }\n \n-        cmd search\n+        cmd search {\n             /// A structured search replace pattern (`$a.foo($b)`)\n             repeated pattern: SsrPattern\n-        {\n             /// Prints debug information for any nodes with source exactly equal to snippet.\n             optional --debug snippet: String\n         }\n \n         cmd proc-macro {}\n \n-        cmd lsif\n+        cmd lsif {\n             required path: PathBuf\n-        {}\n+        }\n \n-        cmd scip\n+        cmd scip {\n             required path: PathBuf\n-        {}\n+        }\n     }\n }\n \n@@ -150,7 +147,6 @@ pub enum RustAnalyzerCmd {\n #[derive(Debug)]\n pub struct LspServer {\n     pub version: bool,\n-    pub help: bool,\n     pub print_config_schema: bool,\n }\n \n@@ -218,7 +214,10 @@ pub struct Scip {\n }\n \n impl RustAnalyzer {\n-    pub const HELP: &'static str = Self::HELP_;\n+    #[allow(dead_code)]\n+    pub fn from_env_or_exit() -> Self {\n+        Self::from_env_or_exit_()\n+    }\n \n     #[allow(dead_code)]\n     pub fn from_env() -> xflags::Result<Self> {"}, {"sha": "14816912b720d369a7cb75178bd5557f9d81a18f", "filename": "xtask/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61504c8d951c566eb03037dcb300c96f4bd9a8b6/xtask%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/61504c8d951c566eb03037dcb300c96f4bd9a8b6/xtask%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2FCargo.toml?ref=61504c8d951c566eb03037dcb300c96f4bd9a8b6", "patch": "@@ -11,5 +11,5 @@ anyhow = \"1.0.57\"\n flate2 = \"1.0.24\"\n write-json = \"0.1.2\"\n xshell = \"0.2.2\"\n-xflags = \"0.2.4\"\n+xflags = \"0.3.0\"\n # Avoid adding more dependencies to this crate"}, {"sha": "0fce48898349a8580c046e9dbcc0a6587c2374df", "filename": "xtask/src/flags.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/61504c8d951c566eb03037dcb300c96f4bd9a8b6/xtask%2Fsrc%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61504c8d951c566eb03037dcb300c96f4bd9a8b6/xtask%2Fsrc%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fflags.rs?ref=61504c8d951c566eb03037dcb300c96f4bd9a8b6", "patch": "@@ -7,10 +7,6 @@ xflags::xflags! {\n \n     /// Run custom build command.\n     cmd xtask {\n-        default cmd help {\n-            /// Print help information.\n-            optional -h, --help\n-        }\n \n         /// Install rust-analyzer server or editor plugin.\n         cmd install {\n@@ -42,9 +38,9 @@ xflags::xflags! {\n             optional --dry-run\n         }\n         /// Builds a benchmark version of rust-analyzer and puts it into `./target`.\n-        cmd bb\n+        cmd bb {\n             required suffix: String\n-        {}\n+        }\n     }\n }\n \n@@ -58,7 +54,6 @@ pub struct Xtask {\n \n #[derive(Debug)]\n pub enum XtaskCmd {\n-    Help(Help),\n     Install(Install),\n     FuzzTests(FuzzTests),\n     Release(Release),\n@@ -68,11 +63,6 @@ pub enum XtaskCmd {\n     Bb(Bb),\n }\n \n-#[derive(Debug)]\n-pub struct Help {\n-    pub help: bool,\n-}\n-\n #[derive(Debug)]\n pub struct Install {\n     pub client: bool,\n@@ -111,7 +101,10 @@ pub struct Bb {\n }\n \n impl Xtask {\n-    pub const HELP: &'static str = Self::HELP_;\n+    #[allow(dead_code)]\n+    pub fn from_env_or_exit() -> Self {\n+        Self::from_env_or_exit_()\n+    }\n \n     #[allow(dead_code)]\n     pub fn from_env() -> xflags::Result<Self> {"}, {"sha": "a37f469adcb60771ef7c0e393b6d39e7cc7daf8b", "filename": "xtask/src/main.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/61504c8d951c566eb03037dcb300c96f4bd9a8b6/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61504c8d951c566eb03037dcb300c96f4bd9a8b6/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=61504c8d951c566eb03037dcb300c96f4bd9a8b6", "patch": "@@ -25,15 +25,12 @@ use std::{\n use xshell::{cmd, Shell};\n \n fn main() -> anyhow::Result<()> {\n+    let flags = flags::Xtask::from_env_or_exit();\n+\n     let sh = &Shell::new()?;\n     sh.change_dir(project_root());\n \n-    let flags = flags::Xtask::from_env()?;\n     match flags.subcommand {\n-        flags::XtaskCmd::Help(_) => {\n-            println!(\"{}\", flags::Xtask::HELP);\n-            Ok(())\n-        }\n         flags::XtaskCmd::Install(cmd) => cmd.run(sh),\n         flags::XtaskCmd::FuzzTests(_) => run_fuzzer(sh),\n         flags::XtaskCmd::Release(cmd) => cmd.run(sh),"}]}