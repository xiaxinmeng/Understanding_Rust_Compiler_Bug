{"sha": "7ef610c003f8072ec4ca4ecf195922a9a44e48dd", "node_id": "C_kwDOAAsO6NoAKDdlZjYxMGMwMDNmODA3MmVjNGNhNGVjZjE5NTkyMmE5YTQ0ZTQ4ZGQ", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T16:11:53Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:21Z"}, "message": "lint: port drop trait/glue diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "37eb3265c3f67481e21bb5f4cf9f14930199eba1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37eb3265c3f67481e21bb5f4cf9f14930199eba1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ef610c003f8072ec4ca4ecf195922a9a44e48dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef610c003f8072ec4ca4ecf195922a9a44e48dd", "html_url": "https://github.com/rust-lang/rust/commit/7ef610c003f8072ec4ca4ecf195922a9a44e48dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ef610c003f8072ec4ca4ecf195922a9a44e48dd/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e836566f04eef02799609d8e480f3b038270147", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e836566f04eef02799609d8e480f3b038270147", "html_url": "https://github.com/rust-lang/rust/commit/8e836566f04eef02799609d8e480f3b038270147"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "621af76f695842f1c6a01f914a7957fe4dea3b00", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ef610c003f8072ec4ca4ecf195922a9a44e48dd/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/7ef610c003f8072ec4ca4ecf195922a9a44e48dd/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=7ef610c003f8072ec4ca4ecf195922a9a44e48dd", "patch": "@@ -141,3 +141,9 @@ lint-redundant-semicolons =\n         [true] these semicolons\n         *[false] this semicolon\n     }\n+\n+lint-drop-trait-constraints =\n+    bounds on `{$predicate}` are most likely incorrect, consider instead using `{$needs_drop}` to detect whether a type can be trivially dropped\n+\n+lint-drop-glue =\n+    types that do not implement `Drop` can still have drop glue, consider instead using `{$needs_drop}` to detect whether a type is trivially dropped"}, {"sha": "df1587c5948f58d4cf984e48e852f2cb65f3bc22", "filename": "compiler/rustc_lint/src/traits.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7ef610c003f8072ec4ca4ecf195922a9a44e48dd/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ef610c003f8072ec4ca4ecf195922a9a44e48dd/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs?ref=7ef610c003f8072ec4ca4ecf195922a9a44e48dd", "patch": "@@ -1,6 +1,7 @@\n use crate::LateContext;\n use crate::LateLintPass;\n use crate::LintContext;\n+use rustc_errors::fluent;\n use rustc_hir as hir;\n use rustc_span::symbol::sym;\n \n@@ -103,13 +104,10 @@ impl<'tcx> LateLintPass<'tcx> for DropTraitConstraints {\n                     let Some(needs_drop) = cx.tcx.get_diagnostic_item(sym::needs_drop) else {\n                         return\n                     };\n-                    let msg = format!(\n-                        \"bounds on `{}` are most likely incorrect, consider instead \\\n-                         using `{}` to detect whether a type can be trivially dropped\",\n-                        predicate,\n-                        cx.tcx.def_path_str(needs_drop)\n-                    );\n-                    lint.build(&msg).emit();\n+                    lint.build(fluent::lint::drop_trait_constraints)\n+                        .set_arg(\"predicate\", predicate)\n+                        .set_arg(\"needs_drop\", cx.tcx.def_path_str(needs_drop))\n+                        .emit();\n                 });\n             }\n         }\n@@ -126,12 +124,9 @@ impl<'tcx> LateLintPass<'tcx> for DropTraitConstraints {\n                     let Some(needs_drop) = cx.tcx.get_diagnostic_item(sym::needs_drop) else {\n                         return\n                     };\n-                    let msg = format!(\n-                        \"types that do not implement `Drop` can still have drop glue, consider \\\n-                        instead using `{}` to detect whether a type is trivially dropped\",\n-                        cx.tcx.def_path_str(needs_drop)\n-                    );\n-                    lint.build(&msg).emit();\n+                    lint.build(fluent::lint::drop_glue)\n+                        .set_arg(\"needs_drop\", cx.tcx.def_path_str(needs_drop))\n+                        .emit();\n                 });\n             }\n         }"}, {"sha": "1b2d95073d06625341f8765a6db8ba299c3b0527", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ef610c003f8072ec4ca4ecf195922a9a44e48dd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ef610c003f8072ec4ca4ecf195922a9a44e48dd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=7ef610c003f8072ec4ca4ecf195922a9a44e48dd", "patch": "@@ -611,6 +611,12 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for Predicate<'tcx> {\n     }\n }\n \n+impl rustc_errors::IntoDiagnosticArg for Predicate<'_> {\n+    fn into_diagnostic_arg(self) -> rustc_errors::DiagnosticArgValue<'static> {\n+        rustc_errors::DiagnosticArgValue::Str(std::borrow::Cow::Owned(self.to_string()))\n+    }\n+}\n+\n #[derive(Clone, Copy, PartialEq, Eq, Hash, TyEncodable, TyDecodable)]\n #[derive(HashStable, TypeFoldable)]\n pub enum PredicateKind<'tcx> {"}]}