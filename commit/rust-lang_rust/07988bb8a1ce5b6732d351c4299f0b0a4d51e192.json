{"sha": "07988bb8a1ce5b6732d351c4299f0b0a4d51e192", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OTg4YmI4YTFjZTViNjczMmQzNTFjNDI5OWYwYjBhNGQ1MWUxOTI=", "commit": {"author": {"name": "Kevin Reid", "email": "kpreid@google.com", "date": "2021-08-10T01:26:58Z"}, "committer": {"name": "Kevin Reid", "email": "kpreid@google.com", "date": "2021-08-10T01:55:39Z"}, "message": "Reword description of automatic impls of `Unsize`.\n\nThe existing documentation felt a little unhelpfully concise, so this\nchange tries to improve it by using longer sentences, each of which\nspecifies which kinds of types it applies to as early as possible. In\nparticular, the third item starts with \u201cStructs ...\u201d instead of\nsaying \u201cFoo is a struct\u201d later.\n\nAlso, the previous list items \u201cOnly the last field has a type\ninvolving `T`\u201d and \u201c`T` is not part of the type of any other\nfields\u201d are, as far as I see, redundant with each other, so I removed\nthe latter.", "tree": {"sha": "0de05777f71e452d1dd7bfef37ac8b35bddc3bbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0de05777f71e452d1dd7bfef37ac8b35bddc3bbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07988bb8a1ce5b6732d351c4299f0b0a4d51e192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07988bb8a1ce5b6732d351c4299f0b0a4d51e192", "html_url": "https://github.com/rust-lang/rust/commit/07988bb8a1ce5b6732d351c4299f0b0a4d51e192", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07988bb8a1ce5b6732d351c4299f0b0a4d51e192/comments", "author": {"login": "kpreid", "id": 779501, "node_id": "MDQ6VXNlcjc3OTUwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/779501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpreid", "html_url": "https://github.com/kpreid", "followers_url": "https://api.github.com/users/kpreid/followers", "following_url": "https://api.github.com/users/kpreid/following{/other_user}", "gists_url": "https://api.github.com/users/kpreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpreid/subscriptions", "organizations_url": "https://api.github.com/users/kpreid/orgs", "repos_url": "https://api.github.com/users/kpreid/repos", "events_url": "https://api.github.com/users/kpreid/events{/privacy}", "received_events_url": "https://api.github.com/users/kpreid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kpreid", "id": 779501, "node_id": "MDQ6VXNlcjc3OTUwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/779501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpreid", "html_url": "https://github.com/kpreid", "followers_url": "https://api.github.com/users/kpreid/followers", "following_url": "https://api.github.com/users/kpreid/following{/other_user}", "gists_url": "https://api.github.com/users/kpreid/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpreid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpreid/subscriptions", "organizations_url": "https://api.github.com/users/kpreid/orgs", "repos_url": "https://api.github.com/users/kpreid/repos", "events_url": "https://api.github.com/users/kpreid/events{/privacy}", "received_events_url": "https://api.github.com/users/kpreid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae90dcf0207c57c3034f00b07048d63f8b2363c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae90dcf0207c57c3034f00b07048d63f8b2363c8", "html_url": "https://github.com/rust-lang/rust/commit/ae90dcf0207c57c3034f00b07048d63f8b2363c8"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "556b1a721d3032ef30a3c30f9be78bb5c942afe0", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/07988bb8a1ce5b6732d351c4299f0b0a4d51e192/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07988bb8a1ce5b6732d351c4299f0b0a4d51e192/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=07988bb8a1ce5b6732d351c4299f0b0a4d51e192", "patch": "@@ -99,17 +99,15 @@ pub trait Sized {\n /// `Unsize<dyn fmt::Debug>`.\n ///\n /// All implementations of `Unsize` are provided automatically by the compiler.\n-///\n-/// `Unsize` is implemented for:\n-///\n-/// - `[T; N]` is `Unsize<[T]>`\n-/// - `T` is `Unsize<dyn Trait>` when `T: Trait`\n-/// - `Foo<..., T, ...>` is `Unsize<Foo<..., U, ...>>` if:\n-///   - `T: Unsize<U>`\n-///   - Foo is a struct\n-///   - Only the last field of `Foo` has a type involving `T`\n-///   - `T` is not part of the type of any other fields\n-///   - `Bar<T>: Unsize<Bar<U>>`, if the last field of `Foo` has type `Bar<T>`\n+/// Those implementations are:\n+///\n+/// - Arrays `[T; N]` implement `Unsize<[T]>`.\n+/// - Types implementing a trait `Trait` also implement `Unsize<dyn Trait>`.\n+/// - Structs `Foo<..., T, ...>` implement `Unsize<Foo<..., U, ...>>` if all of these conditions\n+///   are met:\n+///   - `T: Unsize<U>`.\n+///   - Only the last field of `Foo` has a type involving `T`.\n+///   - `Bar<T>: Unsize<Bar<U>>`, where `Bar<T>` stands for the actual type of that last field.\n ///\n /// `Unsize` is used along with [`ops::CoerceUnsized`] to allow\n /// \"user-defined\" containers such as [`Rc`] to contain dynamically-sized"}]}