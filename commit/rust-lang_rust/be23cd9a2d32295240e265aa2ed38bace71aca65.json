{"sha": "be23cd9a2d32295240e265aa2ed38bace71aca65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMjNjZDlhMmQzMjI5NTI0MGUyNjVhYTJlZDM4YmFjZTcxYWNhNjU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-02-24T00:04:07Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-02-25T16:46:06Z"}, "message": "Move documentation build into bootstrap", "tree": {"sha": "3d6c330b06f9885405c261087c1fe7d269b031f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d6c330b06f9885405c261087c1fe7d269b031f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be23cd9a2d32295240e265aa2ed38bace71aca65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be23cd9a2d32295240e265aa2ed38bace71aca65", "html_url": "https://github.com/rust-lang/rust/commit/be23cd9a2d32295240e265aa2ed38bace71aca65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be23cd9a2d32295240e265aa2ed38bace71aca65/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa3ca321e92c541dce363634c9cea7cf23689a5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa3ca321e92c541dce363634c9cea7cf23689a5e", "html_url": "https://github.com/rust-lang/rust/commit/aa3ca321e92c541dce363634c9cea7cf23689a5e"}], "stats": {"total": 104, "additions": 58, "deletions": 46}, "files": [{"sha": "83066468cd4356a049a6f74e552397b1eb9a5f04", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/be23cd9a2d32295240e265aa2ed38bace71aca65/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be23cd9a2d32295240e265aa2ed38bace71aca65/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=be23cd9a2d32295240e265aa2ed38bace71aca65", "patch": "@@ -4,7 +4,7 @@\n //! our CI.\n \n use std::env;\n-use std::ffi::OsString;\n+use std::ffi::{OsStr, OsString};\n use std::fmt;\n use std::fs;\n use std::iter;\n@@ -639,14 +639,50 @@ impl Step for RustdocJSNotStd {\n \n     fn run(self, builder: &Builder) {\n         if let Some(ref nodejs) = builder.config.nodejs {\n-            let mut command = Command::new(nodejs);\n-            command.args(&[\"src/tools/rustdoc-js/tester.js\",\n-                           &*self.host,\n-                           builder.top_stage.to_string().as_str()]);\n             builder.ensure(crate::doc::Std {\n                 target: self.target,\n                 stage: builder.top_stage,\n             });\n+\n+            let mut tests_to_run = Vec::new();\n+            let out = Path::new(\"build\").join(&*self.host)\n+                                        .join(&format!(\"stage{}\",\n+                                                       builder.top_stage.to_string().as_str()))\n+                                        .join(\"tests\")\n+                                        .join(\"rustdoc-js\");\n+\n+            if let Ok(it) = fs::read_dir(\"src/test/rustdoc-js/\") {\n+                for entry in it {\n+                    if let Ok(entry) = entry {\n+                        let path = entry.path();\n+                        if path.extension() != Some(&OsStr::new(\"rs\")) || !path.is_file() {\n+                            continue\n+                        }\n+                        let path_clone = path.clone();\n+                        let file_stem = path_clone.file_stem().expect(\"cannot get file stem\");\n+                        let out = out.join(file_stem);\n+                        let mut cmd = builder.rustdoc_cmd(self.host);\n+                        cmd.arg(\"-o\");\n+                        cmd.arg(out);\n+                        cmd.arg(path);\n+                        if if builder.config.verbose_tests {\n+                            try_run(builder, &mut cmd)\n+                        } else {\n+                            try_run_quiet(builder, &mut cmd)\n+                        } {\n+                            tests_to_run.push(file_stem.to_os_string());\n+                        }\n+                    }\n+                }\n+            }\n+            assert!(!tests_to_run.is_empty(), \"no rustdoc-js test generated...\");\n+\n+            tests_to_run.insert(0, \"src/tools/rustdoc-js/tester.js\".into());\n+            tests_to_run.insert(1, out.into());\n+\n+            let mut command = Command::new(nodejs);\n+            command.args(&tests_to_run);\n+\n             builder.run(&mut command);\n         } else {\n             builder.info("}, {"sha": "833ce5d1370471f8544f8d23353477abc5f80c37", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 17, "deletions": 41, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/be23cd9a2d32295240e265aa2ed38bace71aca65/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/be23cd9a2d32295240e265aa2ed38bace71aca65/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=be23cd9a2d32295240e265aa2ed38bace71aca65", "patch": "@@ -220,18 +220,6 @@ function lookForEntry(entry, data) {\n     return null;\n }\n \n-function build_docs(out_dir, rustdoc_path, file_to_document) {\n-    var c = spawnSync(rustdoc_path, [file_to_document, '-o', out_dir]);\n-    var s = '';\n-    if (c.error || c.stderr.length > 0) {\n-        if (c.stderr.length > 0) {\n-            s += '==> STDERR: ' + c.stderr + '\\n';\n-        }\n-        s += '==> ERROR: ' + c.error;\n-    }\n-    return s;\n-}\n-\n function load_files(out_folder, crate) {\n     var mainJs = readFile(out_folder + \"/main.js\");\n     var ALIASES = readFile(out_folder + \"/aliases.js\");\n@@ -266,44 +254,32 @@ function load_files(out_folder, crate) {\n }\n \n function main(argv) {\n-    if (argv.length !== 4) {\n-        console.error(\"USAGE: node tester.js [TOOLCHAIN] [STAGE]\");\n+    if (argv.length < 4) {\n+        console.error(\"USAGE: node tester.js OUT_FOLDER [TESTS]\");\n         return 1;\n     }\n-    const toolchain = argv[2];\n-    const stage = argv[3];\n-    const rustdoc_path = './build/' + toolchain + '/stage' + stage + '/bin/rustdoc';\n+    if (argv[2].substr(-1) !== \"/\") {\n+        argv[2] += \"/\";\n+    }\n+    const out_folder = argv[2];\n \n     var errors = 0;\n \n-    fs.readdirSync(TEST_FOLDER).forEach(function(file) {\n-        if (!file.endsWith('.js')) {\n-            return;\n-        }\n-        var test_name = file.substring(0, file.length - 3);\n-        process.stdout.write('Checking \"' + test_name + '\" ... ');\n-        var rust_file = TEST_FOLDER + test_name + '.rs';\n+    for (var j = 3; j < argv.length; ++j) {\n+        const test_name = argv[j];\n \n-        if (!fs.existsSync(rust_file)) {\n-            console.error(\"FAILED\");\n-            console.error(\"==> Missing '\" + test_name + \".rs' file...\");\n+        process.stdout.write('Checking \"' + test_name + '\" ... ');\n+        if (!fs.existsSync(TEST_FOLDER + test_name + \".js\")) {\n             errors += 1;\n-            return;\n-        }\n-\n-        var out_folder = \"build/\" + toolchain + \"/stage\" + stage + \"/tests/rustdoc-js/\" +\n-                         test_name;\n-\n-        var ret = build_docs(out_folder, rustdoc_path, rust_file);\n-        if (ret.length > 0) {\n             console.error(\"FAILED\");\n-            console.error(ret);\n-            errors += 1;\n-            return;\n+            console.error(\"==> Missing '\" + test_name + \".js' file...\");\n+            continue;\n         }\n \n-        var [loaded, index] = load_files(out_folder, test_name);\n-        var loadedFile = loadContent(readFile(TEST_FOLDER + file) +\n+        const test_out_folder = out_folder + test_name;\n+\n+        var [loaded, index] = load_files(test_out_folder, test_name);\n+        var loadedFile = loadContent(readFile(TEST_FOLDER + test_name + \".js\") +\n                                'exports.QUERY = QUERY;exports.EXPECTED = EXPECTED;');\n         const expected = loadedFile.EXPECTED;\n         const query = loadedFile.QUERY;\n@@ -351,7 +327,7 @@ function main(argv) {\n         } else {\n             console.log(\"OK\");\n         }\n-    });\n+    }\n     return errors;\n }\n "}]}