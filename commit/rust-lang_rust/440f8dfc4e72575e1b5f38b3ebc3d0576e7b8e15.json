{"sha": "440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MGY4ZGZjNGU3MjU3NWUxYjVmMzhiM2ViYzNkMDU3NmU3YjhlMTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-01-18T02:43:35Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-01-18T02:45:57Z"}, "message": "Correct tests\n\nrs=breakage", "tree": {"sha": "3ebd8854e5d384e8171eda5a89b0453b97fbc8f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ebd8854e5d384e8171eda5a89b0453b97fbc8f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "html_url": "https://github.com/rust-lang/rust/commit/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "532c94d0f12cb2c56870c283947aa12ce2c9b9b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/532c94d0f12cb2c56870c283947aa12ce2c9b9b6", "html_url": "https://github.com/rust-lang/rust/commit/532c94d0f12cb2c56870c283947aa12ce2c9b9b6"}], "stats": {"total": 26, "additions": 8, "deletions": 18}, "files": [{"sha": "e55ed678cb817fd534ec1547a36b5fcda879b79c", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "patch": "@@ -1839,7 +1839,7 @@ impl @Liveness {\n \n         self.report_illegal_read(move_span, lnk, var, MovedValue);\n         self.tcx.sess.span_note(\n-            move_span, ~\"move of variable occurred here\");\n+            move_span, ~\"move of value occurred here\");\n \n     }\n "}, {"sha": "c2649801cbc80c2b4bdf6893e7aca653cf25df0d", "filename": "src/test/compile-fail/borrowck-loan-rcvr-overloaded-op.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs?ref=440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "patch": "@@ -47,16 +47,11 @@ fn b() {\n }\n \n fn c() {\n-    // Here the receiver is in aliased memory and hence we cannot\n-    // consider it immutable:\n+    // Here the receiver is in aliased memory but due to write\n+    // barriers we can still consider it immutable.\n     let q = @mut Point {x: 3, y: 4};\n-\n-    // ...this is ok for pure fns\n     *q + 3;\n-\n-\n-    // ...and impure fns\n-    (*q).times(3);\n+    q.times(3);\n }\n \n fn main() {"}, {"sha": "f558280f0e107e5c25eba7f798b19943632eb59e", "filename": "src/test/compile-fail/borrowck-loan-rcvr.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr.rs?ref=440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "patch": "@@ -55,15 +55,10 @@ fn b() {\n }\n \n fn c() {\n-    // Here the receiver is in aliased memory and hence we cannot\n-    // consider it immutable:\n+    // Loaning @mut as & is considered legal due to dynamic checks:\n     let q = @mut {x: 3, y: 4};\n-\n-    // ...this is ok for pure fns\n-    (*q).purem();\n-\n-    // ...and impure fns\n-    (*q).impurem();\n+    q.purem();\n+    q.impurem();\n }\n \n fn main() {"}, {"sha": "52a59334d5c387e93af6c16b7440f9df9ff21af4", "filename": "src/test/compile-fail/liveness-move-from-mode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs?ref=440f8dfc4e72575e1b5f38b3ebc3d0576e7b8e15", "patch": "@@ -15,6 +15,6 @@ fn main() {\n     let x: int = 25;\n     loop {\n         take(move x); //~ ERROR use of moved value: `x`\n-        //~^ NOTE move of variable occurred here\n+        //~^ NOTE move of value occurred here\n     }\n }"}]}