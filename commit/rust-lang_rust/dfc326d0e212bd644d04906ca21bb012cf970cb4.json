{"sha": "dfc326d0e212bd644d04906ca21bb012cf970cb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYzMyNmQwZTIxMmJkNjQ0ZDA0OTA2Y2EyMWJiMDEyY2Y5NzBjYjQ=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-12-20T23:10:46Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-12-31T17:52:30Z"}, "message": "use structured suggestions for nonexistent fields", "tree": {"sha": "6e8e22597c6731a24a95d0201e6654b44000802f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e8e22597c6731a24a95d0201e6654b44000802f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfc326d0e212bd644d04906ca21bb012cf970cb4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlwqV2EWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdI6RB/4pNa+fy2ttSwYFI2VWa0M7z4z9\nSPNccMWCJN0QyRAKgQ87w7CkCmbmiRiWFSHkz2zXMX/ejrJr1X1TjqZL+j4+RfBR\nVajUGOpU6PuO1tM5PI6E8xpJHgwxl4zRLMaVofowEcpC7PCBce1basHYWsy8L56F\nnDfWlU/nifGJu/W6adoiR3SSqnnZI0+B1j3MyBzmPG9NqK1BHLLmvC0JiK6RYJ77\nglODNngewBBJyQQ6Id2FAEa/seXlpAMxkzC+GB9rB0niVsSWAofwPWzoqRR9Z/ss\noSoR53lxokXCusOhRXRc6T84X+hetwm+7psaNIPqVps6A258ZGXpFDugC+pS\n=EebD\n-----END PGP SIGNATURE-----", "payload": "tree 6e8e22597c6731a24a95d0201e6654b44000802f\nparent 79d8a0fcefa5134db2a94739b1d18daa01fc6e9f\nauthor Andy Russell <arussell123@gmail.com> 1545347446 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1546278750 -0500\n\nuse structured suggestions for nonexistent fields\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc326d0e212bd644d04906ca21bb012cf970cb4", "html_url": "https://github.com/rust-lang/rust/commit/dfc326d0e212bd644d04906ca21bb012cf970cb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfc326d0e212bd644d04906ca21bb012cf970cb4/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d8a0fcefa5134db2a94739b1d18daa01fc6e9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d8a0fcefa5134db2a94739b1d18daa01fc6e9f", "html_url": "https://github.com/rust-lang/rust/commit/79d8a0fcefa5134db2a94739b1d18daa01fc6e9f"}], "stats": {"total": 85, "additions": 50, "deletions": 35}, "files": [{"sha": "30c3dd51119c7fc8c5de2f57a80ea3142a56d35b", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -3415,8 +3415,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         if let Some(suggested_field_name) =\n                             Self::suggest_field_name(def.non_enum_variant(),\n                                                      &field.as_str(), vec![]) {\n-                                err.span_label(field.span,\n-                                               format!(\"did you mean `{}`?\", suggested_field_name));\n+                                err.span_suggestion_with_applicability(\n+                                    field.span,\n+                                    \"a field with a similar name exists\",\n+                                    suggested_field_name.to_string(),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n                             } else {\n                                 err.span_label(field.span, \"unknown field\");\n                                 let struct_variant_def = def.non_enum_variant();\n@@ -3543,8 +3547,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         if let Some(field_name) = Self::suggest_field_name(variant,\n                                                            &field.ident.as_str(),\n                                                            skip_fields.collect()) {\n-            err.span_label(field.ident.span,\n-                           format!(\"field does not exist - did you mean `{}`?\", field_name));\n+            err.span_suggestion_with_applicability(\n+                    field.ident.span,\n+                    \"a field with a similar name exists\",\n+                    field_name.to_string(),\n+                    Applicability::MaybeIncorrect,\n+                );\n         } else {\n             match ty.sty {\n                 ty::Adt(adt, ..) => {\n@@ -5257,13 +5265,15 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         if let Some(adt_def) = adt_def {\n                             match adt_def.adt_kind() {\n                                 AdtKind::Enum => {\n-                                    err.note(\"did you mean to use one of the enum's variants?\");\n+                                    err.help(\"did you mean to use one of the enum's variants?\");\n                                 },\n                                 AdtKind::Struct |\n                                 AdtKind::Union => {\n-                                    err.span_label(\n+                                    err.span_suggestion_with_applicability(\n                                         span,\n-                                        format!(\"did you mean `Self {{ /* fields */ }}`?\"),\n+                                        \"use curly brackets\",\n+                                        String::from(\"Self { /* fields */ }\"),\n+                                        Applicability::HasPlaceholders,\n                                     );\n                                 }\n                             }"}, {"sha": "8273fad476462c764fd5791a07c66abf11dfbe41", "filename": "src/test/ui/did_you_mean/issue-36798.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0609]: no field `baz` on type `Foo`\n   --> $DIR/issue-36798.rs:7:7\n    |\n LL |     f.baz; //~ ERROR no field\n-   |       ^^^ did you mean `bar`?\n+   |       ^^^ help: a field with a similar name exists: `bar`\n \n error: aborting due to previous error\n "}, {"sha": "e5dd61c45d6627b4e997ba17294377762a893a33", "filename": "src/test/ui/did_you_mean/issue-42599_available_fields_note.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42599_available_fields_note.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42599_available_fields_note.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42599_available_fields_note.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0560]: struct `submodule::Demo` has no field named `inocently_mispellable\n   --> $DIR/issue-42599_available_fields_note.rs:16:39\n    |\n LL |             Self { secret_integer: 2, inocently_mispellable: () }\n-   |                                       ^^^^^^^^^^^^^^^^^^^^^ field does not exist - did you mean `innocently_misspellable`?\n+   |                                       ^^^^^^^^^^^^^^^^^^^^^ help: a field with a similar name exists: `innocently_misspellable`\n \n error[E0560]: struct `submodule::Demo` has no field named `egregiously_nonexistent_field`\n   --> $DIR/issue-42599_available_fields_note.rs:21:39\n@@ -16,7 +16,7 @@ error[E0609]: no field `inocently_mispellable` on type `submodule::Demo`\n   --> $DIR/issue-42599_available_fields_note.rs:32:41\n    |\n LL |     let innocent_field_misaccess = demo.inocently_mispellable;\n-   |                                         ^^^^^^^^^^^^^^^^^^^^^ did you mean `innocently_misspellable`?\n+   |                                         ^^^^^^^^^^^^^^^^^^^^^ help: a field with a similar name exists: `innocently_misspellable`\n \n error[E0609]: no field `egregiously_nonexistent_field` on type `submodule::Demo`\n   --> $DIR/issue-42599_available_fields_note.rs:35:42"}, {"sha": "0f498d16439058061a46409ffcb543821f73dda4", "filename": "src/test/ui/error-codes/ex-E0612.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Ferror-codes%2Fex-E0612.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Ferror-codes%2Fex-E0612.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fex-E0612.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0609]: no field `1` on type `Foo`\n   --> $DIR/ex-E0612.rs:5:6\n    |\n LL |    y.1; //~ ERROR no field `1` on type `Foo`\n-   |      ^ did you mean `0`?\n+   |      ^ help: a field with a similar name exists: `0`\n \n error: aborting due to previous error\n "}, {"sha": "5e1b816defda37da049523183cc3f3267526254b", "filename": "src/test/ui/issues/issue-47073-zero-padded-tuple-struct-indices.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-47073-zero-padded-tuple-struct-indices.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-47073-zero-padded-tuple-struct-indices.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47073-zero-padded-tuple-struct-indices.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0609]: no field `00` on type `Verdict`\n   --> $DIR/issue-47073-zero-padded-tuple-struct-indices.rs:8:30\n    |\n LL |     let _condemned = justice.00;\n-   |                              ^^ did you mean `0`?\n+   |                              ^^ help: a field with a similar name exists: `0`\n \n error[E0609]: no field `001` on type `Verdict`\n   --> $DIR/issue-47073-zero-padded-tuple-struct-indices.rs:10:31"}, {"sha": "39c649ba3e0e7cde0f3e7306a3735bcd16555727", "filename": "src/test/ui/issues/issue-4736.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-4736.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-4736.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-4736.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0560]: struct `NonCopyable` has no field named `p`\n   --> $DIR/issue-4736.rs:4:26\n    |\n LL |     let z = NonCopyable{ p: () }; //~ ERROR struct `NonCopyable` has no field named `p`\n-   |                          ^ field does not exist - did you mean `0`?\n+   |                          ^ help: a field with a similar name exists: `0`\n \n error: aborting due to previous error\n "}, {"sha": "7aaf8e4ac2f1408275a8f9cc671560c1353c581e", "filename": "src/test/ui/issues/issue-56199.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-56199.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-56199.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56199.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -4,27 +4,27 @@ error: the `Self` constructor can only be used with tuple or unit structs\n LL |         let _ = Self;\n    |                 ^^^^\n    |\n-   = note: did you mean to use one of the enum's variants?\n+   = help: did you mean to use one of the enum's variants?\n \n error: the `Self` constructor can only be used with tuple or unit structs\n   --> $DIR/issue-56199.rs:8:17\n    |\n LL |         let _ = Self();\n    |                 ^^^^\n    |\n-   = note: did you mean to use one of the enum's variants?\n+   = help: did you mean to use one of the enum's variants?\n \n error: the `Self` constructor can only be used with tuple or unit structs\n   --> $DIR/issue-56199.rs:15:17\n    |\n LL |         let _ = Self;\n-   |                 ^^^^ did you mean `Self { /* fields */ }`?\n+   |                 ^^^^ help: use curly brackets: `Self { /* fields */ }`\n \n error: the `Self` constructor can only be used with tuple or unit structs\n   --> $DIR/issue-56199.rs:17:17\n    |\n LL |         let _ = Self();\n-   |                 ^^^^ did you mean `Self { /* fields */ }`?\n+   |                 ^^^^ help: use curly brackets: `Self { /* fields */ }`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "f9fdf23af9715141ce9682ab1be5e7407a00b88d", "filename": "src/test/ui/issues/issue-56835.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-56835.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fissues%2Fissue-56835.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56835.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error: the `Self` constructor can only be used with tuple or unit structs\n   --> $DIR/issue-56835.rs:4:12\n    |\n LL |     fn bar(Self(foo): Self) {}\n-   |            ^^^^^^^^^ did you mean `Self { /* fields */ }`?\n+   |            ^^^^^^^^^ help: use curly brackets: `Self { /* fields */ }`\n \n error[E0164]: expected tuple struct/variant, found self constructor `Self`\n   --> $DIR/issue-56835.rs:4:12"}, {"sha": "bed9076d84cbe9d0ed33f89678338cc3d452fde2", "filename": "src/test/ui/rmeta_meta_main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Frmeta_meta_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Frmeta_meta_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frmeta_meta_main.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0560]: struct `rmeta_meta::Foo` has no field named `field2`\n   --> $DIR/rmeta_meta_main.rs:13:19\n    |\n LL |     let _ = Foo { field2: 42 }; //~ ERROR struct `rmeta_meta::Foo` has no field named `field2`\n-   |                   ^^^^^^ field does not exist - did you mean `field`?\n+   |                   ^^^^^^ help: a field with a similar name exists: `field`\n \n error: aborting due to previous error\n "}, {"sha": "1a88f269347c2daeacbe3e3f3700577b2e535327", "filename": "src/test/ui/structs/struct-fields-hints-no-dupe.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-hints-no-dupe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-hints-no-dupe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-hints-no-dupe.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0560]: struct `A` has no field named `bar`\n   --> $DIR/struct-fields-hints-no-dupe.rs:10:9\n    |\n LL |         bar : 42,\n-   |         ^^^ field does not exist - did you mean `barr`?\n+   |         ^^^ help: a field with a similar name exists: `barr`\n \n error: aborting due to previous error\n "}, {"sha": "3b8a2b5c7bad01c7de8d95525d467b29dfc27bd3", "filename": "src/test/ui/structs/struct-fields-hints.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-hints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-hints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-hints.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0560]: struct `A` has no field named `bar`\n   --> $DIR/struct-fields-hints.rs:10:9\n    |\n LL |         bar : 42,\n-   |         ^^^ field does not exist - did you mean `car`?\n+   |         ^^^ help: a field with a similar name exists: `car`\n \n error: aborting due to previous error\n "}, {"sha": "0e9b2ae5145d7233f3e44151283d48d0b651dc78", "filename": "src/test/ui/structs/struct-fields-typo.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-typo.rs?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -8,7 +8,8 @@ fn main() {\n         foo: 0,\n         bar: 0.5,\n     };\n-    let x = foo.baa;//~ no field `baa` on type `BuildData`\n-    //~^ did you mean `bar`?\n+    let x = foo.baa; //~ ERROR no field `baa` on type `BuildData`\n+                     //~| HELP a field with a similar name exists\n+                     //~| SUGGESTION bar\n     println!(\"{}\", x);\n }"}, {"sha": "c2fab714f7c156117db2ad0d45ca3be13ab9f398", "filename": "src/test/ui/structs/struct-fields-typo.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-fields-typo.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -1,8 +1,8 @@\n error[E0609]: no field `baa` on type `BuildData`\n   --> $DIR/struct-fields-typo.rs:11:17\n    |\n-LL |     let x = foo.baa;//~ no field `baa` on type `BuildData`\n-   |                 ^^^ did you mean `bar`?\n+LL |     let x = foo.baa; //~ ERROR no field `baa` on type `BuildData`\n+   |                 ^^^ help: a field with a similar name exists: `bar`\n \n error: aborting due to previous error\n "}, {"sha": "524558e0ec564233b8e9b24f06752b48fe023df4", "filename": "src/test/ui/suggestions/suggest-private-fields.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-private-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-private-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-private-fields.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0560]: struct `xc::B` has no field named `aa`\n   --> $DIR/suggest-private-fields.rs:15:9\n    |\n LL |         aa: 20,\n-   |         ^^ field does not exist - did you mean `a`?\n+   |         ^^ help: a field with a similar name exists: `a`\n \n error[E0560]: struct `xc::B` has no field named `bb`\n   --> $DIR/suggest-private-fields.rs:17:9\n@@ -16,13 +16,13 @@ error[E0560]: struct `A` has no field named `aa`\n   --> $DIR/suggest-private-fields.rs:22:9\n    |\n LL |         aa: 20,\n-   |         ^^ field does not exist - did you mean `a`?\n+   |         ^^ help: a field with a similar name exists: `a`\n \n error[E0560]: struct `A` has no field named `bb`\n   --> $DIR/suggest-private-fields.rs:24:9\n    |\n LL |         bb: 20,\n-   |         ^^ field does not exist - did you mean `b`?\n+   |         ^^ help: a field with a similar name exists: `b`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a1bcdfaedbc602bf04b6df4bda2c042ebd4cf057", "filename": "src/test/ui/tuple/tuple-index-not-tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Ftuple%2Ftuple-index-not-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Ftuple%2Ftuple-index-not-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Ftuple-index-not-tuple.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0609]: no field `0` on type `Point`\n   --> $DIR/tuple-index-not-tuple.rs:6:12\n    |\n LL |     origin.0;\n-   |            ^ did you mean `x`?\n+   |            ^ help: a field with a similar name exists: `x`\n \n error[E0609]: no field `0` on type `Empty`\n   --> $DIR/tuple-index-not-tuple.rs:8:11"}, {"sha": "7d7c5cd7892ea0b0147a1ac0eb0d26559846c86f", "filename": "src/test/ui/tuple/tuple-index-out-of-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Ftuple%2Ftuple-index-out-of-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Ftuple%2Ftuple-index-out-of-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Ftuple-index-out-of-bounds.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,7 +2,7 @@ error[E0609]: no field `2` on type `Point`\n   --> $DIR/tuple-index-out-of-bounds.rs:7:12\n    |\n LL |     origin.2;\n-   |            ^ did you mean `0`?\n+   |            ^ help: a field with a similar name exists: `0`\n \n error[E0609]: no field `2` on type `({integer}, {integer})`\n   --> $DIR/tuple-index-out-of-bounds.rs:12:11"}, {"sha": "b2d8c0efea8fe8c9c4d0b40ef718cf6d686c1245", "filename": "src/test/ui/union/union-suggest-field.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.rs?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -9,8 +9,12 @@ impl U {\n fn main() {\n     let u = U { principle: 0 };\n     //~^ ERROR union `U` has no field named `principle`\n+    //~| HELP a field with a similar name exists\n+    //~| SUGGESTION principal\n     let w = u.principial; //~ ERROR no field `principial` on type `U`\n-                          //~^ did you mean `principal`?\n+                          //~| HELP a field with a similar name exists\n+                          //~| SUGGESTION principal\n \n     let y = u.calculate; //~ ERROR attempted to take value of method `calculate` on type `U`\n+                         //~| HELP maybe a `()` to call it is missing\n }"}, {"sha": "91d6b30ea026748b2e9266a5fb11d7e6cb35ee62", "filename": "src/test/ui/union/union-suggest-field.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfc326d0e212bd644d04906ca21bb012cf970cb4/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-suggest-field.stderr?ref=dfc326d0e212bd644d04906ca21bb012cf970cb4", "patch": "@@ -2,16 +2,16 @@ error[E0560]: union `U` has no field named `principle`\n   --> $DIR/union-suggest-field.rs:10:17\n    |\n LL |     let u = U { principle: 0 };\n-   |                 ^^^^^^^^^ field does not exist - did you mean `principal`?\n+   |                 ^^^^^^^^^ help: a field with a similar name exists: `principal`\n \n error[E0609]: no field `principial` on type `U`\n-  --> $DIR/union-suggest-field.rs:12:15\n+  --> $DIR/union-suggest-field.rs:14:15\n    |\n LL |     let w = u.principial; //~ ERROR no field `principial` on type `U`\n-   |               ^^^^^^^^^^ did you mean `principal`?\n+   |               ^^^^^^^^^^ help: a field with a similar name exists: `principal`\n \n error[E0615]: attempted to take value of method `calculate` on type `U`\n-  --> $DIR/union-suggest-field.rs:15:15\n+  --> $DIR/union-suggest-field.rs:18:15\n    |\n LL |     let y = u.calculate; //~ ERROR attempted to take value of method `calculate` on type `U`\n    |               ^^^^^^^^^"}]}