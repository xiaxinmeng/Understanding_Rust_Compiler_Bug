{"sha": "04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZWI0YTkyZDBmMGVhYWFkZjJiMzVlNWJlN2MyOWU2YmNlYjMzMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-17T08:13:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-17T08:13:13Z"}, "message": "Auto merge of #1415 - RalfJung:test-suite-filter, r=RalfJung\n\nadd test suite filter example to README and 'cargo miri --help'\n\nFixes https://github.com/rust-lang/miri/issues/1414", "tree": {"sha": "29d144d50ecc2beaa0dd54952a1e0be523302f6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29d144d50ecc2beaa0dd54952a1e0be523302f6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b", "html_url": "https://github.com/rust-lang/rust/commit/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70b66aa0079173f723ea065d216e39aca7d0a6e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/70b66aa0079173f723ea065d216e39aca7d0a6e2", "html_url": "https://github.com/rust-lang/rust/commit/70b66aa0079173f723ea065d216e39aca7d0a6e2"}, {"sha": "e22baedb1f1099488cdfcc49f561ec24ea457395", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22baedb1f1099488cdfcc49f561ec24ea457395", "html_url": "https://github.com/rust-lang/rust/commit/e22baedb1f1099488cdfcc49f561ec24ea457395"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "12fc6d22cf85de614b674e4b21d67edcf0b39305", "filename": "README.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b", "patch": "@@ -83,16 +83,17 @@ Now you can run your project in Miri:\n The first time you run Miri, it will perform some extra setup and install some\n dependencies.  It will ask you for confirmation before installing anything.\n \n+You can pass arguments to Miri after the first `--`, and pass arguments to the\n+interpreted program or test suite after the second `--`.  For example, `cargo\n+miri run -- -Zmiri-disable-stacked-borrows` runs the program without checking\n+the aliasing of references.  To filter the tests being run, use `cargo miri test\n+-- -- filter`.\n+\n Miri supports cross-execution: if you want to run the program as if it was a\n Linux program, you can do `cargo miri run --target x86_64-unknown-linux-gnu`.\n This is particularly useful if you are using Windows, as the Linux target is\n much better supported than Windows targets.\n \n-You can pass arguments to Miri after the first `--`, and pass arguments to the\n-interpreted program or test suite after the second `--`.  For example, `cargo\n-miri run -- -Zmiri-disable-validation` runs the program without validation of\n-basic type invariants and without checking the aliasing of references.\n-\n When compiling code via `cargo miri`, the `miri` config flag is set.  You can\n use this to ignore test cases that fail under Miri because they do things Miri\n does not support:"}, {"sha": "5dadd3f931db2441239e2bb3d932b224a37fabe8", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=04eb4a92d0f0eaaadf2b35e5be7c29e6bceb330b", "patch": "@@ -15,7 +15,7 @@ const XARGO_MIN_VERSION: (u32, u32, u32) = (0, 3, 20);\n const CARGO_MIRI_HELP: &str = r#\"Interprets bin crates and tests in Miri\n \n Usage:\n-    cargo miri [subcommand] [options] [--] [<miri opts>...] [--] [<program opts>...]\n+    cargo miri [subcommand] [<cargo options>...] [--] [<miri options>...] [--] [<program/test suite options>...]\n \n Subcommands:\n     run                      Run binaries (default)\n@@ -30,6 +30,10 @@ Common options:\n Other [options] are the same as `cargo check`.  Everything after the first \"--\" is\n passed verbatim to Miri, which will pass everything after the second \"--\" verbatim\n to the interpreted program.\n+\n+Examples:\n+    cargo miri run -- -Zmiri-disable-stacked-borrows\n+    cargo miri test -- -- test-suite-filter\n \"#;\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]"}]}