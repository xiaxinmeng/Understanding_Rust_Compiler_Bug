{"sha": "aa7519400e15ae92687cea17b8264ad32f5f5faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNzUxOTQwMGUxNWFlOTI2ODdjZWExN2I4MjY0YWQzMmY1ZjVmYWY=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-21T23:16:56Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-22T14:44:13Z"}, "message": "rustc: Remove special treatment for Freeze and NoFreeze\n\nFixes #12577", "tree": {"sha": "d4c37fd915a845e9ad432ec2a9f8faf9f037ce88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4c37fd915a845e9ad432ec2a9f8faf9f037ce88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa7519400e15ae92687cea17b8264ad32f5f5faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7519400e15ae92687cea17b8264ad32f5f5faf", "html_url": "https://github.com/rust-lang/rust/commit/aa7519400e15ae92687cea17b8264ad32f5f5faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa7519400e15ae92687cea17b8264ad32f5f5faf/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30165e059c0a111a53020108686b6fd11fcc1d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/30165e059c0a111a53020108686b6fd11fcc1d03", "html_url": "https://github.com/rust-lang/rust/commit/30165e059c0a111a53020108686b6fd11fcc1d03"}], "stats": {"total": 35, "additions": 4, "deletions": 31}, "files": [{"sha": "8c8bcd312de7ff5e39cb1d8302a82846c5f9cb12", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=aa7519400e15ae92687cea17b8264ad32f5f5faf", "patch": "@@ -590,9 +590,6 @@ fn parse_bounds(st: &mut PState, conv: conv_did) -> ty::ParamBounds {\n             'S' => {\n                 param_bounds.builtin_bounds.add(ty::BoundSend);\n             }\n-            'K' => {\n-                param_bounds.builtin_bounds.add(ty::BoundFreeze);\n-            }\n             'O' => {\n                 param_bounds.builtin_bounds.add(ty::BoundStatic);\n             }"}, {"sha": "812c14e906250e6da12f3a2e31baca7880acee7c", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=aa7519400e15ae92687cea17b8264ad32f5f5faf", "patch": "@@ -405,7 +405,6 @@ fn enc_bounds(w: &mut MemWriter, cx: &ctxt, bs: &ty::ParamBounds) {\n     for bound in bs.builtin_bounds.iter() {\n         match bound {\n             ty::BoundSend => mywrite!(w, \"S\"),\n-            ty::BoundFreeze => mywrite!(w, \"K\"),\n             ty::BoundStatic => mywrite!(w, \"O\"),\n             ty::BoundSized => mywrite!(w, \"Z\"),\n             ty::BoundPod => mywrite!(w, \"P\"),"}, {"sha": "67c597f927ac8f0f8be691593ba8d2586d68cb98", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=aa7519400e15ae92687cea17b8264ad32f5f5faf", "patch": "@@ -13,7 +13,7 @@\n // Language items are items that represent concepts intrinsic to the language\n // itself. Examples are:\n //\n-// * Traits that specify \"kinds\"; e.g. \"Freeze\", \"Send\".\n+// * Traits that specify \"kinds\"; e.g. \"Share\", \"Send\".\n //\n // * Traits that represent operators; e.g. \"Add\", \"Sub\", \"Index\".\n //\n@@ -82,9 +82,7 @@ impl LanguageItems {\n     }\n \n     pub fn to_builtin_kind(&self, id: ast::DefId) -> Option<ty::BuiltinBound> {\n-        if Some(id) == self.freeze_trait() {\n-            Some(ty::BoundFreeze)\n-        } else if Some(id) == self.send_trait() {\n+        if Some(id) == self.send_trait() {\n             Some(ty::BoundSend)\n         } else if Some(id) == self.sized_trait() {\n             Some(ty::BoundSized)\n@@ -210,7 +208,6 @@ pub fn collect_language_items(krate: &ast::Crate,\n \n lets_do_this! {\n //  Variant name,                    Name,                      Method name;\n-    FreezeTraitLangItem,             \"freeze\",                  freeze_trait;\n     SendTraitLangItem,               \"send\",                    send_trait;\n     SizedTraitLangItem,              \"sized\",                   sized_trait;\n     PodTraitLangItem,                \"pod\",                     pod_trait;\n@@ -275,7 +272,6 @@ lets_do_this! {\n     ContravariantLifetimeItem,       \"contravariant_lifetime\",  contravariant_lifetime;\n     InvariantLifetimeItem,           \"invariant_lifetime\",      invariant_lifetime;\n \n-    NoFreezeItem,                    \"no_freeze_bound\",         no_freeze_bound;\n     NoSendItem,                      \"no_send_bound\",           no_send_bound;\n     NoPodItem,                       \"no_pod_bound\",            no_pod_bound;\n     NoShareItem,                     \"no_share_bound\",          no_share_bound;"}, {"sha": "51d7045cba69bf338b050174776e13fffd861ed9", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=aa7519400e15ae92687cea17b8264ad32f5f5faf", "patch": "@@ -838,7 +838,6 @@ pub type BuiltinBounds = EnumSet<BuiltinBound>;\n pub enum BuiltinBound {\n     BoundStatic,\n     BoundSend,\n-    BoundFreeze,\n     BoundSized,\n     BoundPod,\n     BoundShare,\n@@ -852,7 +851,6 @@ pub fn AllBuiltinBounds() -> BuiltinBounds {\n     let mut set = EnumSet::empty();\n     set.add(BoundStatic);\n     set.add(BoundSend);\n-    set.add(BoundFreeze);\n     set.add(BoundSized);\n     set.add(BoundShare);\n     set\n@@ -1902,9 +1900,6 @@ def_type_content_sets!(\n         //       that it neither reaches nor owns a managed pointer.\n         Nonsendable                         = 0b0000_0111__0000_0100__0000,\n \n-        // Things that prevent values from being considered freezable\n-        Nonfreezable                        = 0b0000_1000__0000_0000__0000,\n-\n         // Things that prevent values from being considered 'static\n         Nonstatic                           = 0b0000_0010__0000_0000__0000,\n \n@@ -1939,7 +1934,6 @@ impl TypeContents {\n     pub fn meets_bound(&self, cx: &ctxt, bb: BuiltinBound) -> bool {\n         match bb {\n             BoundStatic => self.is_static(cx),\n-            BoundFreeze => self.is_freezable(cx),\n             BoundSend => self.is_sendable(cx),\n             BoundSized => self.is_sized(cx),\n             BoundPod => self.is_pod(cx),\n@@ -1975,10 +1969,6 @@ impl TypeContents {\n         self.intersects(TC::OwnsOwned)\n     }\n \n-    pub fn is_freezable(&self, _: &ctxt) -> bool {\n-        !self.intersects(TC::Nonfreezable)\n-    }\n-\n     pub fn is_sized(&self, _: &ctxt) -> bool {\n         !self.intersects(TC::Nonsized)\n     }\n@@ -2083,10 +2073,6 @@ pub fn type_is_sendable(cx: &ctxt, t: ty::t) -> bool {\n     type_contents(cx, t).is_sendable(cx)\n }\n \n-pub fn type_is_freezable(cx: &ctxt, t: ty::t) -> bool {\n-    type_contents(cx, t).is_freezable(cx)\n-}\n-\n pub fn type_interior_is_unsafe(cx: &ctxt, t: ty::t) -> bool {\n     type_contents(cx, t).interior_unsafe()\n }\n@@ -2149,7 +2135,7 @@ pub fn type_contents(cx: &ctxt, ty: t) -> TypeContents {\n         cache.insert(ty_id, TC::None);\n \n         let result = match get(ty).sty {\n-            // Scalar and unique types are sendable, freezable, and durable\n+            // Scalar and unique types are sendable, and durable\n             ty_nil | ty_bot | ty_bool | ty_int(_) | ty_uint(_) | ty_float(_) |\n             ty_bare_fn(_) | ty::ty_char => {\n                 TC::None\n@@ -2287,9 +2273,7 @@ pub fn type_contents(cx: &ctxt, ty: t) -> TypeContents {\n                         did: ast::DefId,\n                         tc: TypeContents)\n                         -> TypeContents {\n-        if Some(did) == cx.lang_items.no_freeze_bound() {\n-            tc | TC::ReachesMutable\n-        } else if Some(did) == cx.lang_items.no_send_bound() {\n+        if Some(did) == cx.lang_items.no_send_bound() {\n             tc | TC::ReachesNonsendAnnot\n         } else if Some(did) == cx.lang_items.managed_bound() {\n             tc | TC::Managed\n@@ -2374,7 +2358,6 @@ pub fn type_contents(cx: &ctxt, ty: t) -> TypeContents {\n             tc = tc - match bound {\n                 BoundStatic => TC::Nonstatic,\n                 BoundSend => TC::Nonsendable,\n-                BoundFreeze => TC::Nonfreezable,\n                 BoundSized => TC::Nonsized,\n                 BoundPod => TC::Nonpod,\n                 BoundShare => TC::Nonsharable,"}, {"sha": "16b2ebe2247105da4eb73be0c1c67ceb624879c6", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7519400e15ae92687cea17b8264ad32f5f5faf/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=aa7519400e15ae92687cea17b8264ad32f5f5faf", "patch": "@@ -666,7 +666,6 @@ impl Repr for ty::ParamBounds {\n             res.push(match b {\n                 ty::BoundStatic => ~\"'static\",\n                 ty::BoundSend => ~\"Send\",\n-                ty::BoundFreeze => ~\"Freeze\",\n                 ty::BoundSized => ~\"Sized\",\n                 ty::BoundPod => ~\"Pod\",\n                 ty::BoundShare => ~\"Share\",\n@@ -954,7 +953,6 @@ impl UserString for ty::BuiltinBound {\n         match *self {\n             ty::BoundStatic => ~\"'static\",\n             ty::BoundSend => ~\"Send\",\n-            ty::BoundFreeze => ~\"Freeze\",\n             ty::BoundSized => ~\"Sized\",\n             ty::BoundPod => ~\"Pod\",\n             ty::BoundShare => ~\"Share\","}]}