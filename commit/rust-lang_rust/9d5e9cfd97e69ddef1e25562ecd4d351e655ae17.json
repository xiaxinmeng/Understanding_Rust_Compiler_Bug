{"sha": "9d5e9cfd97e69ddef1e25562ecd4d351e655ae17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNWU5Y2ZkOTdlNjlkZGVmMWUyNTU2MmVjZDRkMzUxZTY1NWFlMTc=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-18T18:28:06Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-18T18:28:06Z"}, "message": "Fix redundant_closure false positive", "tree": {"sha": "0dfdd2b80937ef637eb778a0ac5b0230c6d08d39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dfdd2b80937ef637eb778a0ac5b0230c6d08d39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17", "html_url": "https://github.com/rust-lang/rust/commit/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28b043735468936cc23b4cc7a4ce5ed3246524c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/28b043735468936cc23b4cc7a4ce5ed3246524c8", "html_url": "https://github.com/rust-lang/rust/commit/28b043735468936cc23b4cc7a4ce5ed3246524c8"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "fcc1a6893b260c59b7d6e83e2f4fe0852e68a6a7", "filename": "src/eta_reduction.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17/src%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17/src%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feta_reduction.rs?ref=9d5e9cfd97e69ddef1e25562ecd4d351e655ae17", "patch": "@@ -45,15 +45,16 @@ fn check_closure(cx: &LateContext, expr: &Expr) {\n             // || {foo(); bar()}; can't be reduced here\n             return;\n         }\n+\n         if let Some(ref ex) = blk.expr {\n             if let ExprCall(ref caller, ref args) = ex.node {\n                 if args.len() != decl.inputs.len() {\n                     // Not the same number of arguments, there\n                     // is no way the closure is the same as the function\n                     return;\n                 }\n-                if args.iter().any(|arg| is_adjusted(cx, arg)) {\n-                    // Are the arguments type-adjusted? Then we need the closure\n+                if is_adjusted(cx, ex) || args.iter().any(|arg| is_adjusted(cx, arg)) {\n+                    // Are the expression or the arguments type-adjusted? Then we need the closure\n                     return;\n                 }\n                 let fn_ty = cx.tcx.expr_ty(caller);"}, {"sha": "1ffca9ac5ceb517db7ff96498986598f1505d620", "filename": "tests/compile-fail/eta.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17/tests%2Fcompile-fail%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d5e9cfd97e69ddef1e25562ecd4d351e655ae17/tests%2Fcompile-fail%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Feta.rs?ref=9d5e9cfd97e69ddef1e25562ecd4d351e655ae17", "patch": "@@ -21,6 +21,10 @@ fn main() {\n     unsafe {\n         Some(1u8).map(|a| unsafe_fn(a)); // unsafe fn\n     }\n+\n+    // See #515\n+    let a: Option<Box<::std::ops::Deref<Target = [i32]>>> =\n+        Some(vec![1i32, 2]).map(|v| -> Box<::std::ops::Deref<Target = [i32]>> { Box::new(v) });\n }\n \n fn meta<F>(f: F) where F: Fn(u8) {"}]}