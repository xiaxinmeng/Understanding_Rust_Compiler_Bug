{"sha": "bd4355500a53ba2b3d82d754d1d669710d4b442c", "node_id": "C_kwDOAAsO6NoAKGJkNDM1NTUwMGE1M2JhMmIzZDgyZDc1NGQxZDY2OTcxMGQ0YjQ0MmM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-11T21:18:45Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-11T21:29:28Z"}, "message": "Gate all usages of dyn*, even in macros", "tree": {"sha": "4a64dad397b352a8f7cae7df9727bd10d7e86b3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a64dad397b352a8f7cae7df9727bd10d7e86b3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd4355500a53ba2b3d82d754d1d669710d4b442c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd4355500a53ba2b3d82d754d1d669710d4b442c", "html_url": "https://github.com/rust-lang/rust/commit/bd4355500a53ba2b3d82d754d1d669710d4b442c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd4355500a53ba2b3d82d754d1d669710d4b442c/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a73f50d875840b8077b8ec080fa41881d7ce40d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a73f50d875840b8077b8ec080fa41881d7ce40d", "html_url": "https://github.com/rust-lang/rust/commit/8a73f50d875840b8077b8ec080fa41881d7ce40d"}], "stats": {"total": 44, "additions": 32, "deletions": 12}, "files": [{"sha": "a33f2bd33f19da810051b70fd888659b853d4c75", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -337,9 +337,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             ast::TyKind::Never => {\n                 gate_feature_post!(&self, never_type, ty.span, \"the `!` type is experimental\");\n             }\n-            ast::TyKind::TraitObject(_, ast::TraitObjectSyntax::DynStar, ..) => {\n-                gate_feature_post!(&self, dyn_star, ty.span, \"dyn* trait objects are unstable\");\n-            }\n             _ => {}\n         }\n         visit::walk_ty(self, ty)\n@@ -594,6 +591,7 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n     gate_all!(inline_const_pat, \"inline-const in pattern position is experimental\");\n     gate_all!(associated_const_equality, \"associated const equality is incomplete\");\n     gate_all!(yeet_expr, \"`do yeet` expression is experimental\");\n+    gate_all!(dyn_star, \"`dyn*` trait objects are experimental\");\n \n     // All uses of `gate_all!` below this point were added in #65742,\n     // and subsequently disabled (with the non-early gating readded)."}, {"sha": "3d9d2cc62e3851c810de5b0bba579f8db7f47c20", "filename": "compiler/rustc_parse/src/parser/ty.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -624,10 +624,12 @@ impl<'a> Parser<'a> {\n     ///\n     /// Note that this does *not* parse bare trait objects.\n     fn parse_dyn_ty(&mut self, impl_dyn_multi: &mut bool) -> PResult<'a, TyKind> {\n+        let lo = self.token.span;\n         self.bump(); // `dyn`\n \n         // parse dyn* types\n         let syntax = if self.eat(&TokenKind::BinOp(token::Star)) {\n+            self.sess.gated_spans.gate(sym::dyn_star, lo.to(self.prev_token.span));\n             TraitObjectSyntax::DynStar\n         } else {\n             TraitObjectSyntax::Dyn"}, {"sha": "41eed71cdc30a9696868235d7cca4157a165704a", "filename": "tests/ui/dyn-star/feature-gate-dyn_star.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Ffeature-gate-dyn_star.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Ffeature-gate-dyn_star.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdyn-star%2Ffeature-gate-dyn_star.rs?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -3,7 +3,7 @@\n /// dyn* is not necessarily the final surface syntax (if we have one at all),\n /// but for now we will support it to aid in writing tests independently.\n pub fn dyn_star_parameter(_: &dyn* Send) {\n-    //~^ dyn* trait objects are unstable\n+    //~^ `dyn*` trait objects are experimental\n }\n \n fn main() {}"}, {"sha": "342e71c3a3a92c4f1ac08791beae092fd236280f", "filename": "tests/ui/dyn-star/feature-gate-dyn_star.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Ffeature-gate-dyn_star.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Ffeature-gate-dyn_star.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdyn-star%2Ffeature-gate-dyn_star.stderr?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -1,8 +1,8 @@\n-error[E0658]: dyn* trait objects are unstable\n+error[E0658]: `dyn*` trait objects are experimental\n   --> $DIR/feature-gate-dyn_star.rs:5:31\n    |\n LL | pub fn dyn_star_parameter(_: &dyn* Send) {\n-   |                               ^^^^^^^^^\n+   |                               ^^^^\n    |\n    = note: see issue #102425 <https://github.com/rust-lang/rust/issues/102425> for more information\n    = help: add `#![feature(dyn_star)]` to the crate attributes to enable"}, {"sha": "a747987bd2483d4d6ee95c716f1a263b3b153e27", "filename": "tests/ui/dyn-star/gated-span.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fgated-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fgated-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdyn-star%2Fgated-span.rs?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -0,0 +1,8 @@\n+macro_rules! t {\n+    ($t:ty) => {}\n+}\n+\n+t!(dyn* Send);\n+//~^ ERROR `dyn*` trait objects are experimental\n+\n+fn main() {}"}, {"sha": "626b6cd1b7f0ede6cd325aaebcd2bb036cc57024", "filename": "tests/ui/dyn-star/gated-span.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fgated-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fgated-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdyn-star%2Fgated-span.stderr?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: `dyn*` trait objects are experimental\n+  --> $DIR/gated-span.rs:5:4\n+   |\n+LL | t!(dyn* Send);\n+   |    ^^^^\n+   |\n+   = note: see issue #102425 <https://github.com/rust-lang/rust/issues/102425> for more information\n+   = help: add `#![feature(dyn_star)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "2d28f516ab5a76236a9d431e231a1c4b7654c3d0", "filename": "tests/ui/dyn-star/no-explicit-dyn-star-cast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fno-explicit-dyn-star-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fno-explicit-dyn-star-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdyn-star%2Fno-explicit-dyn-star-cast.rs?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -4,8 +4,8 @@ fn make_dyn_star() {\n     let i = 42usize;\n     let dyn_i: dyn* Debug = i as dyn* Debug;\n     //~^ ERROR casting `usize` as `dyn* Debug` is invalid\n-    //~| ERROR dyn* trait objects are unstable\n-    //~| ERROR dyn* trait objects are unstable\n+    //~| ERROR `dyn*` trait objects are experimental\n+    //~| ERROR `dyn*` trait objects are experimental\n }\n \n fn main() {"}, {"sha": "78af9c7a3895f425c83877ce2a5469611b219b13", "filename": "tests/ui/dyn-star/no-explicit-dyn-star-cast.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fno-explicit-dyn-star-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd4355500a53ba2b3d82d754d1d669710d4b442c/tests%2Fui%2Fdyn-star%2Fno-explicit-dyn-star-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdyn-star%2Fno-explicit-dyn-star-cast.stderr?ref=bd4355500a53ba2b3d82d754d1d669710d4b442c", "patch": "@@ -1,17 +1,17 @@\n-error[E0658]: dyn* trait objects are unstable\n+error[E0658]: `dyn*` trait objects are experimental\n   --> $DIR/no-explicit-dyn-star-cast.rs:5:16\n    |\n LL |     let dyn_i: dyn* Debug = i as dyn* Debug;\n-   |                ^^^^^^^^^^\n+   |                ^^^^\n    |\n    = note: see issue #102425 <https://github.com/rust-lang/rust/issues/102425> for more information\n    = help: add `#![feature(dyn_star)]` to the crate attributes to enable\n \n-error[E0658]: dyn* trait objects are unstable\n+error[E0658]: `dyn*` trait objects are experimental\n   --> $DIR/no-explicit-dyn-star-cast.rs:5:34\n    |\n LL |     let dyn_i: dyn* Debug = i as dyn* Debug;\n-   |                                  ^^^^^^^^^^\n+   |                                  ^^^^\n    |\n    = note: see issue #102425 <https://github.com/rust-lang/rust/issues/102425> for more information\n    = help: add `#![feature(dyn_star)]` to the crate attributes to enable"}]}