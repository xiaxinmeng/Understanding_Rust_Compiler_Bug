{"sha": "50e61a1a667929d0db91132246e61c1a67ab07af", "node_id": "C_kwDOAAsO6NoAKDUwZTYxYTFhNjY3OTI5ZDBkYjkxMTMyMjQ2ZTYxYzFhNjdhYjA3YWY", "commit": {"author": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-02-25T12:43:57Z"}, "committer": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-03-03T11:00:28Z"}, "message": "Add support for values() with --check-cfg", "tree": {"sha": "6345cab4790dafc92ca209a9aafa7071967c5c4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6345cab4790dafc92ca209a9aafa7071967c5c4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50e61a1a667929d0db91132246e61c1a67ab07af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50e61a1a667929d0db91132246e61c1a67ab07af", "html_url": "https://github.com/rust-lang/rust/commit/50e61a1a667929d0db91132246e61c1a67ab07af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50e61a1a667929d0db91132246e61c1a67ab07af/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a", "html_url": "https://github.com/rust-lang/rust/commit/2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "e7563933c88ac97a19480dab3aca8b9b875f4624", "filename": "compiler/rustc_interface/src/interface.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50e61a1a667929d0db91132246e61c1a67ab07af/compiler%2Frustc_interface%2Fsrc%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e61a1a667929d0db91132246e61c1a67ab07af/compiler%2Frustc_interface%2Fsrc%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Finterface.rs?ref=50e61a1a667929d0db91132246e61c1a67ab07af", "patch": "@@ -207,6 +207,9 @@ pub fn parse_check_cfg(specs: Vec<String>) -> CheckCfg {\n                                             \"`values()` first argument must be a simple identifer\"\n                                         );\n                                     }\n+                                } else if args.is_empty() {\n+                                    cfg.well_known_values = true;\n+                                    continue 'specs;\n                                 }\n                             }\n                         }"}, {"sha": "02cfdcf86f8404ad6d7e3cf561d54cb8dcd6f5c5", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/50e61a1a667929d0db91132246e61c1a67ab07af/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e61a1a667929d0db91132246e61c1a67ab07af/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=50e61a1a667929d0db91132246e61c1a67ab07af", "patch": "@@ -1025,13 +1025,19 @@ pub fn to_crate_config(cfg: FxHashSet<(String, Option<String>)>) -> CrateConfig\n pub struct CheckCfg<T = String> {\n     /// The set of all `names()`, if None no name checking is performed\n     pub names_valid: Option<FxHashSet<T>>,\n+    /// Is well known values activated\n+    pub well_known_values: bool,\n     /// The set of all `values()`\n     pub values_valid: FxHashMap<T, FxHashSet<T>>,\n }\n \n impl<T> Default for CheckCfg<T> {\n     fn default() -> Self {\n-        CheckCfg { names_valid: Default::default(), values_valid: Default::default() }\n+        CheckCfg {\n+            names_valid: Default::default(),\n+            values_valid: Default::default(),\n+            well_known_values: false,\n+        }\n     }\n }\n \n@@ -1047,6 +1053,7 @@ impl<T> CheckCfg<T> {\n                 .iter()\n                 .map(|(a, b)| (f(a), b.iter().map(|b| f(b)).collect()))\n                 .collect(),\n+            well_known_values: self.well_known_values,\n         }\n     }\n }"}, {"sha": "5464846409ac97a562f3bdb4dc57ae94ef7af36c", "filename": "src/test/ui/check-cfg/empty-values.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50e61a1a667929d0db91132246e61c1a67ab07af/src%2Ftest%2Fui%2Fcheck-cfg%2Fempty-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e61a1a667929d0db91132246e61c1a67ab07af/src%2Ftest%2Fui%2Fcheck-cfg%2Fempty-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fempty-values.rs?ref=50e61a1a667929d0db91132246e61c1a67ab07af", "patch": "@@ -1,6 +1,6 @@\n-// Check that a an empty values() is rejected\n+// Check that a an empty values() pass\n //\n-// check-fail\n+// check-pass\n // compile-flags: --check-cfg=values() -Z unstable-options\n \n fn main() {}"}, {"sha": "106d5b7b47f9bec61c11562793d3723c597a3c68", "filename": "src/test/ui/check-cfg/empty-values.stderr", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a/src%2Ftest%2Fui%2Fcheck-cfg%2Fempty-values.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a/src%2Ftest%2Fui%2Fcheck-cfg%2Fempty-values.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fempty-values.stderr?ref=2f8d1a835b4e7feaf625f74d0d5cb9b84dbc845a", "patch": "@@ -1,2 +0,0 @@\n-error: invalid `--check-cfg` argument: `values()` (expected `names(name1, name2, ... nameN)` or `values(name, \"value1\", \"value2\", ... \"valueN\")`)\n-"}]}