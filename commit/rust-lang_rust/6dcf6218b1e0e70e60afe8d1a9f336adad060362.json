{"sha": "6dcf6218b1e0e70e60afe8d1a9f336adad060362", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkY2Y2MjE4YjFlMGU3MGU2MGFmZThkMWE5ZjMzNmFkYWQwNjAzNjI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-07T22:09:45Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-07T22:12:48Z"}, "message": "rustc: Pointer cast when autodereferencing boxed tag types", "tree": {"sha": "dab86aae32f458637665365c286d845a7aa5d2f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dab86aae32f458637665365c286d845a7aa5d2f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dcf6218b1e0e70e60afe8d1a9f336adad060362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dcf6218b1e0e70e60afe8d1a9f336adad060362", "html_url": "https://github.com/rust-lang/rust/commit/6dcf6218b1e0e70e60afe8d1a9f336adad060362", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dcf6218b1e0e70e60afe8d1a9f336adad060362/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b35051143e5a99ed8070fc42c88015236765f1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b35051143e5a99ed8070fc42c88015236765f1d", "html_url": "https://github.com/rust-lang/rust/commit/9b35051143e5a99ed8070fc42c88015236765f1d"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "a8e75176aa47fc4f3e7c6ddce8d2076d3cf8480e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6dcf6218b1e0e70e60afe8d1a9f336adad060362/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dcf6218b1e0e70e60afe8d1a9f336adad060362/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6dcf6218b1e0e70e60afe8d1a9f336adad060362", "patch": "@@ -2934,7 +2934,19 @@ fn autoderef(@block_ctxt cx, ValueRef v, @ty.t t) -> result {\n                                          vec(C_int(0),\n                                              C_int(abi.box_rc_field_body)));\n                 t1 = mt.ty;\n-                v1 = load_scalar_or_boxed(cx, body, t1);\n+\n+                // Since we're changing levels of box indirection, we may have\n+                // to cast this pointer, since statically-sized tag types have\n+                // different types depending on whether they're behind a box\n+                // or not.\n+                if (!ty.type_has_dynamic_size(mt.ty)) {\n+                    auto llty = type_of(cx.fcx.ccx, mt.ty);\n+                    v1 = cx.build.PointerCast(body, T_ptr(llty));\n+                } else {\n+                    v1 = body;\n+                }\n+\n+                v1 = load_scalar_or_boxed(cx, v1, t1);\n             }\n             case (_) {\n                 ret res(cx, v1);"}]}