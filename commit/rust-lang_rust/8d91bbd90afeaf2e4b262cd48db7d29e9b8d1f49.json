{"sha": "8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkOTFiYmQ5MGFmZWFmMmU0YjI2MmNkNDhkYjdkMjllOWI4ZDFmNDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-23T02:24:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-23T02:24:06Z"}, "message": "Auto merge of #27192 - dotdash:inline_eq_slice, r=luqmana\n\neq_slice_() used to be a common implementation for two function that\r\nboth called it, but of those only eq_slice() is left, so we can as well\r\ndirectly inline the code.", "tree": {"sha": "6a4be3569dc037086052f168167b56343be33485", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a4be3569dc037086052f168167b56343be33485"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49", "html_url": "https://github.com/rust-lang/rust/commit/8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb4f102e38ef306e7e8e4ac747f25799b4cf7415", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4f102e38ef306e7e8e4ac747f25799b4cf7415", "html_url": "https://github.com/rust-lang/rust/commit/cb4f102e38ef306e7e8e4ac747f25799b4cf7415"}, {"sha": "000e870554dd15c827389ce352166f67d9c51323", "url": "https://api.github.com/repos/rust-lang/rust/commits/000e870554dd15c827389ce352166f67d9c51323", "html_url": "https://github.com/rust-lang/rust/commit/000e870554dd15c827389ce352166f67d9c51323"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "4f0b881c5cd604c3ef56040ac8420e50e535a0fa", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=8d91bbd90afeaf2e4b262cd48db7d29e9b8d1f49", "patch": "@@ -871,12 +871,12 @@ impl<'a> DoubleEndedIterator for LinesAny<'a> {\n Section: Comparing strings\n */\n \n-// share the implementation of the lang-item vs. non-lang-item\n-// eq_slice.\n+/// Bytewise slice equality\n /// NOTE: This function is (ab)used in rustc::middle::trans::_match\n /// to compare &[u8] byte slices that are not necessarily valid UTF-8.\n+#[lang = \"str_eq\"]\n #[inline]\n-fn eq_slice_(a: &str, b: &str) -> bool {\n+fn eq_slice(a: &str, b: &str) -> bool {\n     // NOTE: In theory n should be libc::size_t and not usize, but libc is not available here\n     #[allow(improper_ctypes)]\n     extern { fn memcmp(s1: *const i8, s2: *const i8, n: usize) -> i32; }\n@@ -887,15 +887,6 @@ fn eq_slice_(a: &str, b: &str) -> bool {\n     }\n }\n \n-/// Bytewise slice equality\n-/// NOTE: This function is (ab)used in rustc::middle::trans::_match\n-/// to compare &[u8] byte slices that are not necessarily valid UTF-8.\n-#[lang = \"str_eq\"]\n-#[inline]\n-fn eq_slice(a: &str, b: &str) -> bool {\n-    eq_slice_(a, b)\n-}\n-\n /*\n Section: Misc\n */"}]}