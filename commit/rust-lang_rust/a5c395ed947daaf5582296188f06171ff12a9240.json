{"sha": "a5c395ed947daaf5582296188f06171ff12a9240", "node_id": "C_kwDOAAsO6NoAKGE1YzM5NWVkOTQ3ZGFhZjU1ODIyOTYxODhmMDYxNzFmZjEyYTkyNDA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-04T16:27:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-04T16:27:46Z"}, "message": "Rollup merge of #109914 - compiler-errors:rtn-bad-parens, r=oli-obk\n\nEmit feature error for parenthesized generics in associated type bounds\n\nWe don't actually do AST->HIR lowering with some `-Zunpretty` flags, so it's not correct to just delay a bug instead of emitting a feature error.\n\nSome diagnostics regressed because of the new errors, but oh well. :shrug:\n\nFixes #109898", "tree": {"sha": "7318b34e75059d4713213ef358a8af67e8c138aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7318b34e75059d4713213ef358a8af67e8c138aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5c395ed947daaf5582296188f06171ff12a9240", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkLFACCRBK7hj4Ov3rIwAAWecIAK6BI/QQCfTaioBNWK7kLDD6\n3uKqJMbit3JNH6tB5CGboHYvGSL9asEvedqxKqbLUtUydkrQYJv1f4XXGy4SlT5G\n3umNYhi2fJZFPDZPsRF26Z7gfRr1/ENvj++17LJ0y9Y8bSou6zbl3QeNT0UnPl7K\nNw/FC5ezM2tYSDZR+ODMAZ+ZF4Sj8NFpVlstwYILpU4QCo7OuG58OH/ZXwLgAcwA\n6BB9xv28jfxPYHN+gmZ86l0ELp5YxJfSgnuh6TuQfEzBRlaqZtZmsEdrj14FzH8p\nmnSsNoDJvKTGgx2G+cQ7KYB+h4PiEhXzPLqYjPHb4bMcxxh8rFaC8SYD8bm+w1Q=\n=tA4m\n-----END PGP SIGNATURE-----\n", "payload": "tree 7318b34e75059d4713213ef358a8af67e8c138aa\nparent 5485a54e196dd38280bc37b564796cd3877b5c5a\nparent ab0b9356e6e018b2d2f76a26402a7c337c03bad3\nauthor Michael Goulet <michael@errs.io> 1680625666 -0700\ncommitter GitHub <noreply@github.com> 1680625666 -0700\n\nRollup merge of #109914 - compiler-errors:rtn-bad-parens, r=oli-obk\n\nEmit feature error for parenthesized generics in associated type bounds\n\nWe don't actually do AST->HIR lowering with some `-Zunpretty` flags, so it's not correct to just delay a bug instead of emitting a feature error.\n\nSome diagnostics regressed because of the new errors, but oh well. :shrug:\n\nFixes #109898\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5c395ed947daaf5582296188f06171ff12a9240", "html_url": "https://github.com/rust-lang/rust/commit/a5c395ed947daaf5582296188f06171ff12a9240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5c395ed947daaf5582296188f06171ff12a9240/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5485a54e196dd38280bc37b564796cd3877b5c5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5485a54e196dd38280bc37b564796cd3877b5c5a", "html_url": "https://github.com/rust-lang/rust/commit/5485a54e196dd38280bc37b564796cd3877b5c5a"}, {"sha": "ab0b9356e6e018b2d2f76a26402a7c337c03bad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab0b9356e6e018b2d2f76a26402a7c337c03bad3", "html_url": "https://github.com/rust-lang/rust/commit/ab0b9356e6e018b2d2f76a26402a7c337c03bad3"}], "stats": {"total": 76, "additions": 64, "deletions": 12}, "files": [{"sha": "b3923b651eb3bc1c8e1dc6598e59a81968b5ec1b", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a5c395ed947daaf5582296188f06171ff12a9240/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c395ed947daaf5582296188f06171ff12a9240/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=a5c395ed947daaf5582296188f06171ff12a9240", "patch": "@@ -485,17 +485,10 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             if let Some(args) = constraint.gen_args.as_ref()\n                 && matches!(\n                     args,\n-                    ast::GenericArgs::ReturnTypeNotation(..) | ast::GenericArgs::Parenthesized(..)\n+                    ast::GenericArgs::ReturnTypeNotation(..)\n                 )\n             {\n-                // RTN is gated elsewhere, and parenthesized args will turn into\n-                // another error.\n-                if matches!(args, ast::GenericArgs::Parenthesized(..)) {\n-                    self.sess.delay_span_bug(\n-                        constraint.span,\n-                        \"should have emitted a parenthesized generics error\",\n-                    );\n-                }\n+                // RTN is gated below with a `gate_all`.\n             } else {\n                 gate_feature_post!(\n                     &self,"}, {"sha": "2f9a1d1c76e068eda6d0aca25c0efa2b34345e39", "filename": "tests/ui/associated-type-bounds/return-type-notation/bad-inputs-and-output.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Fbad-inputs-and-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Fbad-inputs-and-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Fbad-inputs-and-output.rs?ref=a5c395ed947daaf5582296188f06171ff12a9240", "patch": "@@ -10,11 +10,13 @@ trait Trait {\n \n fn foo<T: Trait<method(i32): Send>>() {}\n //~^ ERROR argument types not allowed with return type notation\n+//~| ERROR associated type bounds are unstable\n \n fn bar<T: Trait<method(..) -> (): Send>>() {}\n //~^ ERROR return type not allowed with return type notation\n \n fn baz<T: Trait<method(): Send>>() {}\n //~^ ERROR return type notation arguments must be elided with `..`\n+//~| ERROR associated type bounds are unstable\n \n fn main() {}"}, {"sha": "b354a6805d6e5bb2a8dd2faeb77c316cdc162c45", "filename": "tests/ui/associated-type-bounds/return-type-notation/bad-inputs-and-output.stderr", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Fbad-inputs-and-output.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Fbad-inputs-and-output.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Fbad-inputs-and-output.stderr?ref=a5c395ed947daaf5582296188f06171ff12a9240", "patch": "@@ -1,9 +1,27 @@\n error: return type not allowed with return type notation\n-  --> $DIR/bad-inputs-and-output.rs:14:28\n+  --> $DIR/bad-inputs-and-output.rs:15:28\n    |\n LL | fn bar<T: Trait<method(..) -> (): Send>>() {}\n    |                            ^^^^^ help: remove the return type\n \n+error[E0658]: associated type bounds are unstable\n+  --> $DIR/bad-inputs-and-output.rs:11:17\n+   |\n+LL | fn foo<T: Trait<method(i32): Send>>() {}\n+   |                 ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #52662 <https://github.com/rust-lang/rust/issues/52662> for more information\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n+\n+error[E0658]: associated type bounds are unstable\n+  --> $DIR/bad-inputs-and-output.rs:18:17\n+   |\n+LL | fn baz<T: Trait<method(): Send>>() {}\n+   |                 ^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #52662 <https://github.com/rust-lang/rust/issues/52662> for more information\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n+\n warning: the feature `return_type_notation` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/bad-inputs-and-output.rs:3:12\n    |\n@@ -28,10 +46,11 @@ LL | fn foo<T: Trait<method(i32): Send>>() {}\n    |                       ^^^^^ help: remove the input types: `(..)`\n \n error: return type notation arguments must be elided with `..`\n-  --> $DIR/bad-inputs-and-output.rs:17:23\n+  --> $DIR/bad-inputs-and-output.rs:18:23\n    |\n LL | fn baz<T: Trait<method(): Send>>() {}\n    |                       ^^ help: add `..`: `(..)`\n \n-error: aborting due to 3 previous errors; 2 warnings emitted\n+error: aborting due to 5 previous errors; 2 warnings emitted\n \n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "9129f37e0c6b6c227ffacabadceec6297f2c62b1", "filename": "tests/ui/associated-type-bounds/return-type-notation/unpretty-parenthesized.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.rs?ref=a5c395ed947daaf5582296188f06171ff12a9240", "patch": "@@ -0,0 +1,11 @@\n+// edition: 2021\n+// compile-flags: -Zunpretty=expanded\n+\n+trait Trait {\n+    async fn method() {}\n+}\n+\n+fn foo<T: Trait<method(i32): Send>>() {}\n+//~^ ERROR associated type bounds are unstable\n+\n+fn main() {}"}, {"sha": "77e015b4160bb64a42cdff9d6312dec215feaec3", "filename": "tests/ui/associated-type-bounds/return-type-notation/unpretty-parenthesized.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.stderr?ref=a5c395ed947daaf5582296188f06171ff12a9240", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: associated type bounds are unstable\n+  --> $DIR/unpretty-parenthesized.rs:8:17\n+   |\n+LL | fn foo<T: Trait<method(i32): Send>>() {}\n+   |                 ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #52662 <https://github.com/rust-lang/rust/issues/52662> for more information\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "b3dea8f6eca71fdc3c50ade6d942d9f1520de33b", "filename": "tests/ui/associated-type-bounds/return-type-notation/unpretty-parenthesized.stdout", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a5c395ed947daaf5582296188f06171ff12a9240/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-type-bounds%2Freturn-type-notation%2Funpretty-parenthesized.stdout?ref=a5c395ed947daaf5582296188f06171ff12a9240", "patch": "@@ -0,0 +1,15 @@\n+#![feature(prelude_import)]\n+#[prelude_import]\n+use std::prelude::rust_2021::*;\n+#[macro_use]\n+extern crate std;\n+// edition: 2021\n+// compile-flags: -Zunpretty=expanded\n+\n+trait Trait {\n+    async fn method() {}\n+}\n+\n+fn foo<T: Trait<method(i32) : Send>>() {}\n+\n+fn main() {}"}]}