{"sha": "009389f051d81c8d9954ec25d6c3ad2ca3bfa04f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwOTM4OWYwNTFkODFjOGQ5OTU0ZWMyNWQ2YzNhZDJjYTNiZmEwNGY=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:45:17Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:23Z"}, "message": "middle: typeck: infer: resolve: remove dead code", "tree": {"sha": "04c54ec23056bd81cc52334e61b733042c6eb72d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04c54ec23056bd81cc52334e61b733042c6eb72d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/009389f051d81c8d9954ec25d6c3ad2ca3bfa04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/009389f051d81c8d9954ec25d6c3ad2ca3bfa04f", "html_url": "https://github.com/rust-lang/rust/commit/009389f051d81c8d9954ec25d6c3ad2ca3bfa04f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/009389f051d81c8d9954ec25d6c3ad2ca3bfa04f/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "167c29ff3f204c7ef5f02c55adf7adfa448d2e61", "url": "https://api.github.com/repos/rust-lang/rust/commits/167c29ff3f204c7ef5f02c55adf7adfa448d2e61", "html_url": "https://github.com/rust-lang/rust/commit/167c29ff3f204c7ef5f02c55adf7adfa448d2e61"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "5348a623d86cc3d82f8d154eba4a19a670b69c6e", "filename": "src/librustc/middle/typeck/infer/resolve.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/009389f051d81c8d9954ec25d6c3ad2ca3bfa04f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009389f051d81c8d9954ec25d6c3ad2ca3bfa04f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs?ref=009389f051d81c8d9954ec25d6c3ad2ca3bfa04f", "patch": "@@ -52,7 +52,7 @@ use middle::ty::{type_is_bot, IntType, UintType};\n use middle::ty;\n use middle::ty_fold;\n use middle::typeck::infer::{Bounds, cyclic_ty, fixup_err, fres, InferCtxt};\n-use middle::typeck::infer::{region_var_bound_by_region_var, unresolved_ty};\n+use middle::typeck::infer::unresolved_ty;\n use middle::typeck::infer::to_str::InferStr;\n use middle::typeck::infer::unify::{Root, UnifyInferCtxtMethods};\n use util::common::{indent, indenter};\n@@ -64,14 +64,12 @@ pub static resolve_nested_tvar: uint = 0b0000000001;\n pub static resolve_rvar: uint        = 0b0000000010;\n pub static resolve_ivar: uint        = 0b0000000100;\n pub static resolve_fvar: uint        = 0b0000001000;\n-pub static resolve_fnvar: uint       = 0b0000010000;\n-pub static resolve_all: uint         = 0b0000011111;\n+pub static resolve_all: uint         = 0b0000001111;\n pub static force_tvar: uint          = 0b0000100000;\n pub static force_rvar: uint          = 0b0001000000;\n pub static force_ivar: uint          = 0b0010000000;\n pub static force_fvar: uint          = 0b0100000000;\n-pub static force_fnvar: uint         = 0b1000000000;\n-pub static force_all: uint           = 0b1111100000;\n+pub static force_all: uint           = 0b0111100000;\n \n pub static not_regions: uint         = !(force_rvar | resolve_rvar);\n \n@@ -204,15 +202,6 @@ impl<'a> ResolveState<'a> {\n         self.infcx.region_vars.resolve_var(rid)\n     }\n \n-    pub fn assert_not_rvar(&mut self, rid: RegionVid, r: ty::Region) {\n-        match r {\n-          ty::ReInfer(ty::ReVar(rid2)) => {\n-            self.err = Some(region_var_bound_by_region_var(rid, rid2));\n-          }\n-          _ => { }\n-        }\n-    }\n-\n     pub fn resolve_ty_var(&mut self, vid: TyVid) -> ty::t {\n         if self.v_seen.contains(&vid) {\n             self.err = Some(cyclic_ty(vid));"}]}