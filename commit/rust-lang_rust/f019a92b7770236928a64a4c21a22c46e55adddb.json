{"sha": "f019a92b7770236928a64a4c21a22c46e55adddb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMTlhOTJiNzc3MDIzNjkyOGE2NGE0YzIxYTIyYzQ2ZTU1YWRkZGI=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-03T05:10:39Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-13T13:37:09Z"}, "message": "Correctly handle AdjustNeverToAny in try_find_coercion_lub", "tree": {"sha": "85f5f4d6df68ac06957adbc0aa02be1609568ec0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85f5f4d6df68ac06957adbc0aa02be1609568ec0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f019a92b7770236928a64a4c21a22c46e55adddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f019a92b7770236928a64a4c21a22c46e55adddb", "html_url": "https://github.com/rust-lang/rust/commit/f019a92b7770236928a64a4c21a22c46e55adddb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f019a92b7770236928a64a4c21a22c46e55adddb/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69e27614c6b7317dde84eec728b85607b1064f3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/69e27614c6b7317dde84eec728b85607b1064f3b", "html_url": "https://github.com/rust-lang/rust/commit/69e27614c6b7317dde84eec728b85607b1064f3b"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b9a7cf76d92eabb97d66db1625096aff13c9393e", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f019a92b7770236928a64a4c21a22c46e55adddb/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f019a92b7770236928a64a4c21a22c46e55adddb/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=f019a92b7770236928a64a4c21a22c46e55adddb", "patch": "@@ -746,6 +746,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     }\n                     _ => false\n                 },\n+                Some(&AdjustNeverToAny(_)) => true,\n                 Some(_) => false,\n                 None => true\n             };\n@@ -781,7 +782,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             Ok((ty, adjustment)) => {\n                 if !adjustment.is_identity() {\n                     for expr in exprs() {\n-                        self.write_adjustment(expr.id, adjustment);\n+                        let previous = self.tables.borrow().adjustments.get(&expr.id).cloned();\n+                        if let Some(AdjustNeverToAny(_)) = previous {\n+                            self.write_adjustment(expr.id, AdjustNeverToAny(ty));\n+                        } else {\n+                            self.write_adjustment(expr.id, adjustment);\n+                        }\n                     }\n                 }\n                 Ok(ty)"}]}