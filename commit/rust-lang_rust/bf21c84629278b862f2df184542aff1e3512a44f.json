{"sha": "bf21c84629278b862f2df184542aff1e3512a44f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMjFjODQ2MjkyNzhiODYyZjJkZjE4NDU0MmFmZjFlMzUxMmE0NGY=", "commit": {"author": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2017-02-21T10:45:45Z"}, "committer": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2017-02-21T10:45:45Z"}, "message": "Ensure deref_span is empty for Vec and String", "tree": {"sha": "f8e5dadb8c18d970aff06f1a9eca8e789147de6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8e5dadb8c18d970aff06f1a9eca8e789147de6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf21c84629278b862f2df184542aff1e3512a44f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf21c84629278b862f2df184542aff1e3512a44f", "html_url": "https://github.com/rust-lang/rust/commit/bf21c84629278b862f2df184542aff1e3512a44f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf21c84629278b862f2df184542aff1e3512a44f/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb86c57c5f9c0fc5e5f736bbd57f95df204e00e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb86c57c5f9c0fc5e5f736bbd57f95df204e00e1", "html_url": "https://github.com/rust-lang/rust/commit/cb86c57c5f9c0fc5e5f736bbd57f95df204e00e1"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "72399a9e6343ae024617ced7367913d791151025", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf21c84629278b862f2df184542aff1e3512a44f/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf21c84629278b862f2df184542aff1e3512a44f/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=bf21c84629278b862f2df184542aff1e3512a44f", "patch": "@@ -121,6 +121,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n \n                 // Suggestion logic\n                 let sugg = |db: &mut DiagnosticBuilder| {\n+                    let deref_span = spans_need_deref.get(&defid);\n                     if_let_chain! {[\n                         match_type(cx, ty, &paths::VEC),\n                         let TyPath(QPath::Resolved(_, ref path)) = input.node,\n@@ -132,20 +133,22 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                         db.span_suggestion(input.span,\n                                         &format!(\"consider changing the type to `{}`\", slice_ty),\n                                         slice_ty);\n+                        assert!(deref_span.is_none());\n                         return; // `Vec` and `String` cannot be destructured - no need for `*` suggestion\n                     }}\n \n                     if match_type(cx, ty, &paths::STRING) {\n                         db.span_suggestion(input.span,\n                                            \"consider changing the type to `&str`\",\n                                            \"&str\".to_string());\n+                        assert!(deref_span.is_none());\n                         return;\n                     }\n \n                     let mut spans = vec![(input.span, format!(\"&{}\", snippet(cx, input.span, \"_\")))];\n \n                     // Suggests adding `*` to dereference the added reference.\n-                    if let Some(deref_span) = spans_need_deref.get(&defid) {\n+                    if let Some(deref_span) = deref_span {\n                         spans.extend(deref_span.iter().cloned()\n                                      .map(|span| (span, format!(\"*{}\", snippet(cx, span, \"<expr>\")))));\n                         spans.sort_by_key(|&(span, _)| span);"}]}