{"sha": "31f2b9fbaa52d01b9251b5da74381576fe24d3b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZjJiOWZiYWE1MmQwMWI5MjUxYjVkYTc0MzgxNTc2ZmUyNGQzYjQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-10T14:08:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-10T14:08:36Z"}, "message": "Merge #5294\n\n5294: Complete parameters more aggressively r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "27fd90c9c6a788cf058c4a6f65b4a43b0e8db1c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27fd90c9c6a788cf058c4a6f65b4a43b0e8db1c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31f2b9fbaa52d01b9251b5da74381576fe24d3b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfCHZkCRBK7hj4Ov3rIwAAdHIIAFobE3I/K2YoJdAiFYvuJGyz\n0HU8BtpOfZRvkU6JPRXhVWrhIPOC8NANNmplyLm5XRE6fKlpz0vK+bKM1Gs4L1L1\nrWIjSoKnYndP9FfZK+xdGG2tvtCOwvWVLj1PGIZg55U+I/Fne6GfUpseLHM3ACzJ\nOL3nxhIQ6kUkM4GGmS/poMNqo7d+b1C4V2B4FOvSJZ1u+TmWq0OrtEAqmuOUd0oq\nnOooIP7bSistJOCTdSy2b8wpV16r0GBNpkNu6KoSNPpXO1sGiH50+UILVaE78qlj\niTZye37C83VZDEPTota4YEayBH84z8U/SlktowHYl7sRqxgIs5NV62va+YFaxjk=\n=qKOL\n-----END PGP SIGNATURE-----\n", "payload": "tree 27fd90c9c6a788cf058c4a6f65b4a43b0e8db1c3\nparent 9ab59e2162bf7dcb120378e0c2e9fd6dac39c107\nparent d02aabe633b6da6748e9911219b46c6ff206595d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1594390116 +0000\ncommitter GitHub <noreply@github.com> 1594390116 +0000\n\nMerge #5294\n\n5294: Complete parameters more aggressively r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31f2b9fbaa52d01b9251b5da74381576fe24d3b4", "html_url": "https://github.com/rust-lang/rust/commit/31f2b9fbaa52d01b9251b5da74381576fe24d3b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31f2b9fbaa52d01b9251b5da74381576fe24d3b4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ab59e2162bf7dcb120378e0c2e9fd6dac39c107", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab59e2162bf7dcb120378e0c2e9fd6dac39c107", "html_url": "https://github.com/rust-lang/rust/commit/9ab59e2162bf7dcb120378e0c2e9fd6dac39c107"}, {"sha": "d02aabe633b6da6748e9911219b46c6ff206595d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d02aabe633b6da6748e9911219b46c6ff206595d", "html_url": "https://github.com/rust-lang/rust/commit/d02aabe633b6da6748e9911219b46c6ff206595d"}], "stats": {"total": 58, "additions": 19, "deletions": 39}, "files": [{"sha": "ee91bbdeacb6e2aced90c3f361ebd3d17e8439ca", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 19, "deletions": 39, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/31f2b9fbaa52d01b9251b5da74381576fe24d3b4/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31f2b9fbaa52d01b9251b5da74381576fe24d3b4/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=31f2b9fbaa52d01b9251b5da74381576fe24d3b4", "patch": "@@ -1,4 +1,4 @@\n-//! FIXME: write short doc here\n+//! See `complete_fn_param`.\n \n use ra_syntax::{\n     ast::{self, ModuleItemOwner},\n@@ -18,35 +18,40 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n     }\n \n     let mut params = FxHashMap::default();\n+    let mut me = None;\n     for node in ctx.token.parent().ancestors() {\n         let items = match_ast! {\n             match node {\n                 ast::SourceFile(it) => it.items(),\n                 ast::ItemList(it) => it.items(),\n+                ast::FnDef(it) => {\n+                    me = Some(it);\n+                    continue;\n+                },\n                 _ => continue,\n             }\n         };\n         for item in items {\n             if let ast::ModuleItem::FnDef(func) = item {\n+                if Some(&func) == me.as_ref() {\n+                    continue;\n+                }\n                 func.param_list().into_iter().flat_map(|it| it.params()).for_each(|param| {\n                     let text = param.syntax().text().to_string();\n-                    params.entry(text).or_insert((0, param)).0 += 1;\n+                    params.entry(text).or_insert(param);\n                 })\n             }\n         }\n     }\n     params\n         .into_iter()\n-        .filter_map(|(label, (count, param))| {\n+        .filter_map(|(label, param)| {\n             let lookup = param.pat()?.syntax().text().to_string();\n-            if count < 2 {\n-                None\n-            } else {\n-                Some((label, lookup))\n-            }\n+            Some((label, lookup))\n         })\n         .for_each(|(label, lookup)| {\n             CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label)\n+                .kind(crate::CompletionItemKind::Binding)\n                 .lookup_by(lookup)\n                 .add_to(acc)\n         });\n@@ -56,11 +61,11 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n mod tests {\n     use expect::{expect, Expect};\n \n-    use crate::completion::{test_utils::do_completion, CompletionKind};\n+    use crate::completion::{test_utils::completion_list, CompletionKind};\n \n     fn check(ra_fixture: &str, expect: Expect) {\n-        let actual = do_completion(ra_fixture, CompletionKind::Magic);\n-        expect.assert_debug_eq(&actual);\n+        let actual = completion_list(ra_fixture, CompletionKind::Magic);\n+        expect.assert_eq(&actual);\n     }\n \n     #[test]\n@@ -72,15 +77,7 @@ fn bar(file_id: FileId) {}\n fn baz(file<|>) {}\n \"#,\n             expect![[r#\"\n-                [\n-                    CompletionItem {\n-                        label: \"file_id: FileId\",\n-                        source_range: 61..65,\n-                        delete: 61..65,\n-                        insert: \"file_id: FileId\",\n-                        lookup: \"file_id\",\n-                    },\n-                ]\n+                bn file_id: FileId\n             \"#]],\n         );\n     }\n@@ -90,19 +87,10 @@ fn baz(file<|>) {}\n         check(\n             r#\"\n fn foo(file_id: FileId) {}\n-fn bar(file_id: FileId) {}\n fn baz(file<|>, x: i32) {}\n \"#,\n             expect![[r#\"\n-                [\n-                    CompletionItem {\n-                        label: \"file_id: FileId\",\n-                        source_range: 61..65,\n-                        delete: 61..65,\n-                        insert: \"file_id: FileId\",\n-                        lookup: \"file_id\",\n-                    },\n-                ]\n+                bn file_id: FileId\n             \"#]],\n         );\n     }\n@@ -119,15 +107,7 @@ pub(crate) trait SourceRoot {\n }\n \"#,\n             expect![[r#\"\n-                [\n-                    CompletionItem {\n-                        label: \"file_id: FileId\",\n-                        source_range: 208..212,\n-                        delete: 208..212,\n-                        insert: \"file_id: FileId\",\n-                        lookup: \"file_id\",\n-                    },\n-                ]\n+                bn file_id: FileId\n             \"#]],\n         );\n     }"}]}