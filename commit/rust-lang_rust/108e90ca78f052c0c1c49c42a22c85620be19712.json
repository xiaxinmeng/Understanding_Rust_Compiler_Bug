{"sha": "108e90ca78f052c0c1c49c42a22c85620be19712", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwOGU5MGNhNzhmMDUyYzBjMWM0OWM0MmEyMmM4NTYyMGJlMTk3MTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-22T11:07:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-22T11:07:03Z"}, "message": "Auto merge of #75795 - matthiaskrgr:cargotest_clippy, r=Dylan-DPC\n\ncargotest: fix clippy warnings\n\nFixes clippy::redundant_static_lifetimes and clippy::toplevel_ref_arg\nI also replaced some .expect(\"\") calls with .unwrap()s since there was no message passed by the .expect() anyway.", "tree": {"sha": "867b7ae7c03922e059ae5ec00c1929e2fcdf6403", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/867b7ae7c03922e059ae5ec00c1929e2fcdf6403"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/108e90ca78f052c0c1c49c42a22c85620be19712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/108e90ca78f052c0c1c49c42a22c85620be19712", "html_url": "https://github.com/rust-lang/rust/commit/108e90ca78f052c0c1c49c42a22c85620be19712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/108e90ca78f052c0c1c49c42a22c85620be19712/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5a8b7b9016731a1992569c5958ca4580c60119c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a8b7b9016731a1992569c5958ca4580c60119c", "html_url": "https://github.com/rust-lang/rust/commit/c5a8b7b9016731a1992569c5958ca4580c60119c"}, {"sha": "69f963963ef3e1cc97a60d8c82ba834c6cedfa30", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f963963ef3e1cc97a60d8c82ba834c6cedfa30", "html_url": "https://github.com/rust-lang/rust/commit/69f963963ef3e1cc97a60d8c82ba834c6cedfa30"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b65163a3bc9f54fd3c60149b688e7eff8fea8666", "filename": "src/tools/cargotest/main.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/108e90ca78f052c0c1c49c42a22c85620be19712/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/108e90ca78f052c0c1c49c42a22c85620be19712/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=108e90ca78f052c0c1c49c42a22c85620be19712", "patch": "@@ -11,7 +11,7 @@ struct Test {\n     packages: &'static [&'static str],\n }\n \n-const TEST_REPOS: &'static [Test] = &[\n+const TEST_REPOS: &[Test] = &[\n     Test {\n         name: \"iron\",\n         repo: \"https://github.com/iron/iron\",\n@@ -53,9 +53,9 @@ const TEST_REPOS: &'static [Test] = &[\n \n fn main() {\n     let args = env::args().collect::<Vec<_>>();\n-    let ref cargo = args[1];\n+    let cargo = &args[1];\n     let out_dir = Path::new(&args[2]);\n-    let ref cargo = Path::new(cargo);\n+    let cargo = &Path::new(cargo);\n \n     for test in TEST_REPOS.iter().rev() {\n         test_repo(cargo, out_dir, test);\n@@ -77,7 +77,7 @@ fn clone_repo(test: &Test, out_dir: &Path) -> PathBuf {\n     let out_dir = out_dir.join(test.name);\n \n     if !out_dir.join(\".git\").is_dir() {\n-        let status = Command::new(\"git\").arg(\"init\").arg(&out_dir).status().expect(\"\");\n+        let status = Command::new(\"git\").arg(\"init\").arg(&out_dir).status().unwrap();\n         assert!(status.success());\n     }\n \n@@ -92,7 +92,7 @@ fn clone_repo(test: &Test, out_dir: &Path) -> PathBuf {\n                 .arg(&format!(\"--depth={}\", depth))\n                 .current_dir(&out_dir)\n                 .status()\n-                .expect(\"\");\n+                .unwrap();\n             assert!(status.success());\n         }\n \n@@ -102,7 +102,7 @@ fn clone_repo(test: &Test, out_dir: &Path) -> PathBuf {\n             .arg(\"--hard\")\n             .current_dir(&out_dir)\n             .status()\n-            .expect(\"\");\n+            .unwrap();\n \n         if status.success() {\n             found = true;\n@@ -133,7 +133,7 @@ fn run_cargo_test(cargo_path: &Path, crate_path: &Path, packages: &[&str]) -> bo\n         .env(\"RUSTFLAGS\", \"--cap-lints warn\")\n         .current_dir(crate_path)\n         .status()\n-        .expect(\"\");\n+        .unwrap();\n \n     status.success()\n }"}]}