{"sha": "6e8639a41827a50d1c479d07263a53570aad6e7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlODYzOWE0MTgyN2E1MGQxYzQ3OWQwNzI2M2E1MzU3MGFhZDZlN2U=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-14T04:39:21Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-15T09:04:49Z"}, "message": "Remove uses of `mem::uninitialized()` from cloudabi", "tree": {"sha": "61557c409873052da76cf56f76773a7610b719d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61557c409873052da76cf56f76773a7610b719d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e8639a41827a50d1c479d07263a53570aad6e7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e8639a41827a50d1c479d07263a53570aad6e7e", "html_url": "https://github.com/rust-lang/rust/commit/6e8639a41827a50d1c479d07263a53570aad6e7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e8639a41827a50d1c479d07263a53570aad6e7e/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cdcea920e56a5d0587307a4c9cf8fff5c77c4bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cdcea920e56a5d0587307a4c9cf8fff5c77c4bc", "html_url": "https://github.com/rust-lang/rust/commit/1cdcea920e56a5d0587307a4c9cf8fff5c77c4bc"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "38db4dd51657a10a864d4ab85e4ed3a9e63988d9", "filename": "src/libstd/sys/cloudabi/abi/cloudabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fabi%2Fcloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fabi%2Fcloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fabi%2Fcloudabi.rs?ref=6e8639a41827a50d1c479d07263a53570aad6e7e", "patch": "@@ -115,6 +115,7 @@\n \n #![no_std]\n #![allow(non_camel_case_types)]\n+#![allow(deprecated)] // FIXME: using `mem::uninitialized()`\n \n include!(\"bitflags.rs\");\n "}, {"sha": "2fb10cc370add607dade6387b5008fae03fc310f", "filename": "src/libstd/sys/cloudabi/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fmod.rs?ref=6e8639a41827a50d1c479d07263a53570aad6e7e", "patch": "@@ -1,5 +1,3 @@\n-#![allow(deprecated)] // mem::uninitialized\n-\n use crate::io::ErrorKind;\n use crate::mem;\n "}, {"sha": "0e30d3a1c6cf124989c40c642db5cece663622d6", "filename": "src/libstd/sys/cloudabi/mutex.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fmutex.rs?ref=6e8639a41827a50d1c479d07263a53570aad6e7e", "patch": "@@ -104,10 +104,11 @@ impl ReentrantMutex {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS, \"Failed to acquire mutex\");\n+            let event = event.assume_init();\n             assert_eq!(event.error, abi::errno::SUCCESS, \"Failed to acquire mutex\");\n         }\n     }"}, {"sha": "73499d65a067fa46e637facecd3997444be33c79", "filename": "src/libstd/sys/cloudabi/rwlock.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Frwlock.rs?ref=6e8639a41827a50d1c479d07263a53570aad6e7e", "patch": "@@ -1,5 +1,6 @@\n use crate::cell::UnsafeCell;\n use crate::mem;\n+use crate::mem::MaybeUninit;\n use crate::sync::atomic::{AtomicU32, Ordering};\n use crate::sys::cloudabi::abi;\n \n@@ -73,10 +74,11 @@ impl RWLock {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS, \"Failed to acquire read lock\");\n+            let event = event.assume_init();\n             assert_eq!(\n                 event.error,\n                 abi::errno::SUCCESS,\n@@ -182,10 +184,11 @@ impl RWLock {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS, \"Failed to acquire write lock\");\n+            let event = event.assume_init();\n             assert_eq!(\n                 event.error,\n                 abi::errno::SUCCESS,"}, {"sha": "240b6ea9e57f8ede0d75755e1eca01a6d7b7737b", "filename": "src/libstd/sys/cloudabi/thread.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e8639a41827a50d1c479d07263a53570aad6e7e/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs?ref=6e8639a41827a50d1c479d07263a53570aad6e7e", "patch": "@@ -72,10 +72,11 @@ impl Thread {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = mem::MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = mem::MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS);\n+            let event = event.assume_init();\n             assert_eq!(event.error, abi::errno::SUCCESS);\n         }\n     }"}]}