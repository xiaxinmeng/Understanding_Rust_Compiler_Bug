{"sha": "43ccbf4360271d5da2fd3688a04b34c66357e0b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzY2NiZjQzNjAyNzFkNWRhMmZkMzY4OGEwNGIzNGM2NjM1N2UwYjY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-18T20:41:13Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-02-12T17:58:28Z"}, "message": "Remove unused ReferenceSearchResult functions", "tree": {"sha": "0e681cba58a8e98161748a18204610fd040195fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e681cba58a8e98161748a18204610fd040195fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43ccbf4360271d5da2fd3688a04b34c66357e0b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43ccbf4360271d5da2fd3688a04b34c66357e0b6", "html_url": "https://github.com/rust-lang/rust/commit/43ccbf4360271d5da2fd3688a04b34c66357e0b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43ccbf4360271d5da2fd3688a04b34c66357e0b6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d51b5644458c7dcb97a4d445f1b379cd2548a78", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d51b5644458c7dcb97a4d445f1b379cd2548a78", "html_url": "https://github.com/rust-lang/rust/commit/4d51b5644458c7dcb97a4d445f1b379cd2548a78"}], "stats": {"total": 29, "additions": 5, "deletions": 24}, "files": [{"sha": "e8737dcfa2c66efa08210e4c73d645338345aeb8", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/43ccbf4360271d5da2fd3688a04b34c66357e0b6/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ccbf4360271d5da2fd3688a04b34c66357e0b6/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=43ccbf4360271d5da2fd3688a04b34c66357e0b6", "patch": "@@ -14,7 +14,6 @@ pub(crate) mod rename;\n use either::Either;\n use hir::Semantics;\n use ide_db::{\n-    base_db::FileId,\n     defs::{Definition, NameClass, NameRefClass},\n     search::{FileReference, ReferenceAccess, ReferenceKind, SearchScope, UsageSearchResult},\n     RootDatabase,\n@@ -35,14 +34,14 @@ pub struct ReferenceSearchResult {\n \n #[derive(Debug, Clone)]\n pub struct Declaration {\n-    pub nav: NavigationTarget,\n-    pub kind: ReferenceKind,\n-    pub access: Option<ReferenceAccess>,\n+    nav: NavigationTarget,\n+    kind: ReferenceKind,\n+    access: Option<ReferenceAccess>,\n }\n \n impl ReferenceSearchResult {\n-    pub fn references(&self) -> &UsageSearchResult {\n-        &self.references\n+    pub fn references(self) -> UsageSearchResult {\n+        self.references\n     }\n \n     pub fn references_with_declaration(mut self) -> UsageSearchResult {\n@@ -55,24 +54,6 @@ impl ReferenceSearchResult {\n         self.references.references.entry(file_id).or_default().push(decl_ref);\n         self.references\n     }\n-\n-    /// Total number of references\n-    /// At least 1 since all valid references should\n-    /// Have a declaration\n-    pub fn len(&self) -> usize {\n-        self.references.len() + 1\n-    }\n-}\n-\n-// allow turning ReferenceSearchResult into an iterator\n-// over References\n-impl IntoIterator for ReferenceSearchResult {\n-    type Item = (FileId, Vec<FileReference>);\n-    type IntoIter = std::collections::hash_map::IntoIter<FileId, Vec<FileReference>>;\n-\n-    fn into_iter(self) -> Self::IntoIter {\n-        self.references_with_declaration().into_iter()\n-    }\n }\n \n pub(crate) fn find_all_refs("}]}