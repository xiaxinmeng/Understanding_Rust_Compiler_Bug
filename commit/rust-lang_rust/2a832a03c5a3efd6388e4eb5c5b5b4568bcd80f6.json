{"sha": "2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhODMyYTAzYzVhM2VmZDYzODhlNGViNWM1YjViNDU2OGJjZDgwZjY=", "commit": {"author": {"name": "Trotter Cashion", "email": "cashion@gmail.com", "date": "2016-11-11T03:08:45Z"}, "committer": {"name": "Trotter Cashion", "email": "cashion@gmail.com", "date": "2016-11-11T03:08:45Z"}, "message": "Ignore tests failing due to lack of `fn main`\n\nWhile the commit message on this one sounds terrible, it's really not so\nbad. The issue is that our test runner _expects_ a `fn main() {}` in\ncode blocks that it'll test, but this code really shouldn't have them.\nIf it did, then clicking the \"play\" link in the docs would result in\nplay.rust-lang.org not treating this code as a test example to be run.", "tree": {"sha": "923aac64d44ddf9f171b78c61256e572b54666d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/923aac64d44ddf9f171b78c61256e572b54666d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6", "html_url": "https://github.com/rust-lang/rust/commit/2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6/comments", "author": {"login": "trotter", "id": 413, "node_id": "MDQ6VXNlcjQxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trotter", "html_url": "https://github.com/trotter", "followers_url": "https://api.github.com/users/trotter/followers", "following_url": "https://api.github.com/users/trotter/following{/other_user}", "gists_url": "https://api.github.com/users/trotter/gists{/gist_id}", "starred_url": "https://api.github.com/users/trotter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trotter/subscriptions", "organizations_url": "https://api.github.com/users/trotter/orgs", "repos_url": "https://api.github.com/users/trotter/repos", "events_url": "https://api.github.com/users/trotter/events{/privacy}", "received_events_url": "https://api.github.com/users/trotter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trotter", "id": 413, "node_id": "MDQ6VXNlcjQxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trotter", "html_url": "https://github.com/trotter", "followers_url": "https://api.github.com/users/trotter/followers", "following_url": "https://api.github.com/users/trotter/following{/other_user}", "gists_url": "https://api.github.com/users/trotter/gists{/gist_id}", "starred_url": "https://api.github.com/users/trotter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trotter/subscriptions", "organizations_url": "https://api.github.com/users/trotter/orgs", "repos_url": "https://api.github.com/users/trotter/repos", "events_url": "https://api.github.com/users/trotter/events{/privacy}", "received_events_url": "https://api.github.com/users/trotter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf764470a84b68445db2529f17371a0f6ab2023", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf764470a84b68445db2529f17371a0f6ab2023", "html_url": "https://github.com/rust-lang/rust/commit/4cf764470a84b68445db2529f17371a0f6ab2023"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "ed916fd798bb6475bdb74da514b9846a299210a3", "filename": "src/doc/book/testing.md", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6/src%2Fdoc%2Fbook%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6/src%2Fdoc%2Fbook%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftesting.md?ref=2a832a03c5a3efd6388e4eb5c5b5b4568bcd80f6", "patch": "@@ -23,7 +23,7 @@ $ cd adder\n Cargo will automatically generate a simple test when you make a new project.\n Here's the contents of `src/lib.rs`:\n \n-```rust\n+```rust,ignore\n # // The next line exists to trick play.rust-lang.org into running our code as a\n # // test:\n # // fn main\n@@ -38,7 +38,7 @@ mod tests {\n \n For now, let's remove the `mod` bit, and focus on just the function:\n \n-```rust\n+```rust,ignore\n # // The next line exists to trick play.rust-lang.org into running our code as a\n # // test:\n # // fn main\n@@ -81,8 +81,10 @@ test it_works ... ok\n Note the `it_works`. This comes from the name of our function:\n \n ```rust\n+# fn main() {\n fn it_works() {\n }\n+# }\n ```\n \n We also get a summary line:\n@@ -94,7 +96,7 @@ test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n So why does our do-nothing test pass? Any test which doesn't `panic!` passes,\n and any test that does `panic!` fails. Let's make our test fail:\n \n-```rust\n+```rust,ignore\n # // The next line exists to trick play.rust-lang.org into running our code as a\n # // test:\n # // fn main\n@@ -169,7 +171,7 @@ This is useful if you want to integrate `cargo test` into other tooling.\n \n We can invert our test's failure with another attribute: `should_panic`:\n \n-```rust\n+```rust,ignore\n # // The next line exists to trick play.rust-lang.org into running our code as a\n # // test:\n # // fn main\n@@ -204,7 +206,7 @@ test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured\n Rust provides another macro, `assert_eq!`, that compares two arguments for\n equality:\n \n-```rust\n+```rust,ignore\n # // The next line exists to trick play.rust-lang.org into running our code as a\n # // test:\n # // fn main\n@@ -243,7 +245,7 @@ parameter can be added to the `should_panic` attribute. The test harness will\n make sure that the failure message contains the provided text. A safer version\n of the example above would be:\n \n-```rust\n+```rust,ignore\n # // The next line exists to trick play.rust-lang.org into running our code as a\n # // test:\n # // fn main\n@@ -280,7 +282,7 @@ some known arguments and compare it to the expected output.\n Sometimes a few specific tests can be very time-consuming to execute. These\n can be disabled by default by using the `ignore` attribute:\n \n-```rust\n+```rust,ignore\n # // The next line exists to trick play.rust-lang.org into running our code as a\n # // test:\n # // fn main"}]}