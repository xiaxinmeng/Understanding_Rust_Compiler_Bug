{"sha": "0a2034dca46f72d24d94c04b47c48d30149693bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMjAzNGRjYTQ2ZjcyZDI0ZDk0YzA0YjQ3YzQ4ZDMwMTQ5NjkzYmQ=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-14T14:53:07Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-29T10:56:25Z"}, "message": "bootstrap: add the dist.compression-formats option\n\nThe option allows to add or remove compression formats used while\nproducing dist tarballs.", "tree": {"sha": "d9479aa6360014dd005c5b898496db143b25feaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9479aa6360014dd005c5b898496db143b25feaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a2034dca46f72d24d94c04b47c48d30149693bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/rC1kACgkQPgar6Auq\n8ZxSeRAAwnczQXZJfpPmErqATyTb/vaExbKVg6h9gbuCNbRKmwvTMEGfnwEueu/1\nDHd87DuHI8fnHM6Hp3pluuyCybAw2rdb7I2/+PFFc3HWW6pQs3KvMDeGpSwH7OC2\npcOLzOASXrbh1QB3zxjRStCgj7SkLXCiRq5HG0LuuoQA2nCdSo+JXMzhtd+nOLdl\n/OHP9J/1Va0g/2yJFwixYGukmcnv8DcxcWj6tYUlN19K7RHTeTZydTff6xK6PT+Y\n/mEyO5UvL/stWnHq3vCcO/9CNgX3Utqkv8ebdTqLaxrotjc8sxMTarRVTFsEoy1n\nF4Utuh4EDiMqdaw3mndMBasdY3W2FhbXp0tLRJsD+rprlUw3EZlnCzP+W7QiqdeH\nfr2Y3UJKyArsOprMKY6A/z4b9/H6K3lN5T8m5MvjnBPt1c4eH5Vt3Ll12+/J4qTh\nlvhRTy4IHVQ/HSjuCNmaqdcbmHcGMro0siHydqw5U90Q6GxPAky5DU+zMV7Yl+9h\nebPpRPHGZkH47tS5OZdGUBp+dF7wLIVF6QkxiEvmhCOty+plQgQtf/w7i3Thh5zN\ntQ1gnBQeW4z21BgQidrJKPKYLHLbZeWzSpkLfpObGSMESRiCL5U8AFoOqQgjuRDO\nMIarCfwrKyAOwwC5UKgH0U1BgO6T9N9Ozi8u7JL72qM5CYpcPjg=\n=GysW\n-----END PGP SIGNATURE-----", "payload": "tree d9479aa6360014dd005c5b898496db143b25feaf\nparent c482ffd1a3300989cca6b741e32b75f7c3059104\nauthor Pietro Albini <pietro@pietroalbini.org> 1607957587 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1609239385 +0100\n\nbootstrap: add the dist.compression-formats option\n\nThe option allows to add or remove compression formats used while\nproducing dist tarballs.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2034dca46f72d24d94c04b47c48d30149693bd", "html_url": "https://github.com/rust-lang/rust/commit/0a2034dca46f72d24d94c04b47c48d30149693bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a2034dca46f72d24d94c04b47c48d30149693bd/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c482ffd1a3300989cca6b741e32b75f7c3059104", "url": "https://api.github.com/repos/rust-lang/rust/commits/c482ffd1a3300989cca6b741e32b75f7c3059104", "html_url": "https://github.com/rust-lang/rust/commit/c482ffd1a3300989cca6b741e32b75f7c3059104"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "9e08ce9b27e0cdf7e0d41171162a58a60234ffb3", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a2034dca46f72d24d94c04b47c48d30149693bd/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/0a2034dca46f72d24d94c04b47c48d30149693bd/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=0a2034dca46f72d24d94c04b47c48d30149693bd", "patch": "@@ -669,3 +669,7 @@ changelog-seen = 2\n \n # Whether to allow failures when building tools\n #missing-tools = false\n+\n+# List of compression formats to use when generating dist tarballs. The list of\n+# formats is provided to rust-installer, which must support all of them.\n+#compression-formats = [\"gz\", \"xz\"]"}, {"sha": "8a3b936d80d5c58340686465b11987a28aa0ccee", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0a2034dca46f72d24d94c04b47c48d30149693bd/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a2034dca46f72d24d94c04b47c48d30149693bd/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=0a2034dca46f72d24d94c04b47c48d30149693bd", "patch": "@@ -148,6 +148,7 @@ pub struct Config {\n     pub dist_sign_folder: Option<PathBuf>,\n     pub dist_upload_addr: Option<String>,\n     pub dist_gpg_password_file: Option<PathBuf>,\n+    pub dist_compression_formats: Option<Vec<String>>,\n \n     // libstd features\n     pub backtrace: bool, // support for RUST_BACKTRACE\n@@ -438,6 +439,7 @@ struct Dist {\n     upload_addr: Option<String>,\n     src_tarball: Option<bool>,\n     missing_tools: Option<bool>,\n+    compression_formats: Option<Vec<String>>,\n }\n \n #[derive(Deserialize)]\n@@ -936,6 +938,7 @@ impl Config {\n             config.dist_sign_folder = t.sign_folder.map(PathBuf::from);\n             config.dist_gpg_password_file = t.gpg_password_file.map(PathBuf::from);\n             config.dist_upload_addr = t.upload_addr;\n+            config.dist_compression_formats = t.compression_formats;\n             set(&mut config.rust_dist_src, t.src_tarball);\n             set(&mut config.missing_tools, t.missing_tools);\n         }"}, {"sha": "2cabaee68ea670b632e60d5f9312be9451315f55", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a2034dca46f72d24d94c04b47c48d30149693bd/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/0a2034dca46f72d24d94c04b47c48d30149693bd/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=0a2034dca46f72d24d94c04b47c48d30149693bd", "patch": "@@ -147,6 +147,8 @@ def v(*args):\n   \"experimental LLVM targets to build\")\n v(\"release-channel\", \"rust.channel\", \"the name of the release channel to build\")\n v(\"release-description\", \"rust.description\", \"optional descriptive string for version output\")\n+v(\"dist-compression-formats\", None,\n+  \"comma-separated list of compression formats to use\")\n \n # Used on systems where \"cc\" is unavailable\n v(\"default-linker\", \"rust.default-linker\", \"the default linker\")\n@@ -349,6 +351,8 @@ def set(key, value):\n     elif option.name == 'option-checking':\n         # this was handled above\n         pass\n+    elif option.name == 'dist-compression-formats':\n+        set('dist.compression-formats', value.split(','))\n     else:\n         raise RuntimeError(\"unhandled option {}\".format(option.name))\n "}, {"sha": "a918677f2e5072da9d6f3d48de479c946db40c72", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0a2034dca46f72d24d94c04b47c48d30149693bd/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a2034dca46f72d24d94c04b47c48d30149693bd/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=0a2034dca46f72d24d94c04b47c48d30149693bd", "patch": "@@ -288,11 +288,25 @@ impl<'a> Tarball<'a> {\n \n         build_cli(&self, &mut cmd);\n         cmd.arg(\"--work-dir\").arg(&self.temp_dir);\n+        if let Some(formats) = &self.builder.config.dist_compression_formats {\n+            assert!(!formats.is_empty(), \"dist.compression-formats can't be empty\");\n+            cmd.arg(\"--compression-formats\").arg(formats.join(\",\"));\n+        }\n         self.builder.run(&mut cmd);\n         if self.delete_temp_dir {\n             t!(std::fs::remove_dir_all(&self.temp_dir));\n         }\n \n-        crate::dist::distdir(self.builder).join(format!(\"{}.tar.gz\", package_name))\n+        // Use either the first compression format defined, or \"gz\" as the default.\n+        let ext = self\n+            .builder\n+            .config\n+            .dist_compression_formats\n+            .as_ref()\n+            .and_then(|formats| formats.get(0))\n+            .map(|s| s.as_str())\n+            .unwrap_or(\"gz\");\n+\n+        crate::dist::distdir(self.builder).join(format!(\"{}.tar.{}\", package_name, ext))\n     }\n }"}]}