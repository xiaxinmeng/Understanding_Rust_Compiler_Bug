{"sha": "b7cb08d4e7a1586b801431f451328821c481cbd3", "node_id": "C_kwDOAAsO6NoAKGI3Y2IwOGQ0ZTdhMTU4NmI4MDE0MzFmNDUxMzI4ODIxYzQ4MWNiZDM", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-11-12T23:37:30Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-12-03T22:51:49Z"}, "message": "rustc_codegen_gcc: error on unwinding inline asm", "tree": {"sha": "30a0971207141149a7a85dfc7e736d0d388ec70b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30a0971207141149a7a85dfc7e736d0d388ec70b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7cb08d4e7a1586b801431f451328821c481cbd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7cb08d4e7a1586b801431f451328821c481cbd3", "html_url": "https://github.com/rust-lang/rust/commit/b7cb08d4e7a1586b801431f451328821c481cbd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7cb08d4e7a1586b801431f451328821c481cbd3/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48fc7d9351662fcd2c41cc64815b6d568698f76d", "url": "https://api.github.com/repos/rust-lang/rust/commits/48fc7d9351662fcd2c41cc64815b6d568698f76d", "html_url": "https://github.com/rust-lang/rust/commit/48fc7d9351662fcd2c41cc64815b6d568698f76d"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "c205a6ed4a289c68ebd4d6527dce81e4131e9432", "filename": "src/asm.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b7cb08d4e7a1586b801431f451328821c481cbd3/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7cb08d4e7a1586b801431f451328821c481cbd3/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=b7cb08d4e7a1586b801431f451328821c481cbd3", "patch": "@@ -118,7 +118,14 @@ impl<'a, 'gcc, 'tcx> AsmBuilderMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n         true\n     }\n \n-    fn codegen_inline_asm(&mut self, template: &[InlineAsmTemplatePiece], rust_operands: &[InlineAsmOperandRef<'tcx, Self>], options: InlineAsmOptions, _span: &[Span], _instance: Instance<'_>) {\n+    fn codegen_inline_asm(&mut self, template: &[InlineAsmTemplatePiece], rust_operands: &[InlineAsmOperandRef<'tcx, Self>], options: InlineAsmOptions, span: &[Span], _instance: Instance<'_>, dest_catch_funclet: Option<(Self::BasicBlock, Self::BasicBlock, Option<&Self::Funclet>)>) {\n+        if dest_catch_funclet.is_some() {\n+            self.sess()\n+                .struct_span_err(span[0], \"GCC backend does not support unwinding from inline asm\")\n+                .emit();\n+            return;\n+        }\n+\n         let asm_arch = self.tcx.sess.asm_arch.unwrap();\n         let is_x86 = matches!(asm_arch, InlineAsmArch::X86 | InlineAsmArch::X86_64);\n         let att_dialect = is_x86 && options.contains(InlineAsmOptions::ATT_SYNTAX);"}]}