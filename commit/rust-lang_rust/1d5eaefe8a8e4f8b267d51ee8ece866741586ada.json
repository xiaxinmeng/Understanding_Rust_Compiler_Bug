{"sha": "1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNWVhZWZlOGE4ZTRmOGIyNjdkNTFlZThlY2U4NjY3NDE1ODZhZGE=", "commit": {"author": {"name": "Bernardo", "email": "berublan@gmail.com", "date": "2019-01-06T14:05:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T08:46:16Z"}, "message": "initial Watcher impl", "tree": {"sha": "04c740f694ecacdd84a635256b9a3d483f45f593", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04c740f694ecacdd84a635256b9a3d483f45f593"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "html_url": "https://github.com/rust-lang/rust/commit/1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/comments", "author": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac757e114e9dcbc70600803dd4adc4f99ecde78e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac757e114e9dcbc70600803dd4adc4f99ecde78e", "html_url": "https://github.com/rust-lang/rust/commit/ac757e114e9dcbc70600803dd4adc4f99ecde78e"}], "stats": {"total": 440, "additions": 413, "deletions": 27}, "files": [{"sha": "fccf8a65e1409630580699e1bb99fab16bb2b259", "filename": "Cargo.lock", "status": "modified", "additions": 254, "deletions": 10, "changes": 264, "blob_url": "https://github.com/rust-lang/rust/blob/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "patch": "@@ -85,6 +85,11 @@ name = \"bit-vec\"\n version = \"0.5.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"bitflags\"\n+version = \"0.7.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"bitflags\"\n version = \"1.0.4\"\n@@ -109,6 +114,15 @@ name = \"byteorder\"\n version = \"1.3.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"bytes\"\n+version = \"0.4.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"cargo_metadata\"\n version = \"0.7.1\"\n@@ -335,6 +349,16 @@ name = \"fake-simd\"\n version = \"0.1.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"filetime\"\n+version = \"0.2.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_syscall 0.1.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"flexi_logger\"\n version = \"0.10.5\"\n@@ -351,6 +375,24 @@ name = \"fnv\"\n version = \"1.0.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"fsevent\"\n+version = \"0.2.17\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"bitflags 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fsevent-sys 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"fsevent-sys\"\n+version = \"0.1.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"fst\"\n version = \"0.3.3\"\n@@ -374,6 +416,11 @@ name = \"fuchsia-zircon-sys\"\n version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"futures\"\n+version = \"0.1.25\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"gen_lsp_server\"\n version = \"0.1.0\"\n@@ -436,6 +483,28 @@ name = \"indexmap\"\n version = \"1.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"inotify\"\n+version = \"0.6.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"inotify-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tokio-io 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tokio-reactor 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"inotify-sys\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"insta\"\n version = \"0.5.2\"\n@@ -455,6 +524,15 @@ dependencies = [\n  \"serde_yaml 0.8.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"iovec\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"itertools\"\n version = \"0.8.0\"\n@@ -473,11 +551,25 @@ name = \"join_to_string\"\n version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"kernel32-sys\"\n+version = \"0.2.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"lazy_static\"\n version = \"1.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"lazycell\"\n+version = \"1.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"libc\"\n version = \"0.2.48\"\n@@ -511,7 +603,7 @@ version = \"0.55.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"num-derive 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"num-derive 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.85 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.85 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -553,17 +645,84 @@ name = \"memoffset\"\n version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"mio\"\n+version = \"0.6.16\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"mio-extras\"\n+version = \"2.0.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"miow\"\n+version = \"0.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"net2\"\n+version = \"0.2.33\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"nodrop\"\n version = \"0.1.13\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"notify\"\n+version = \"4.0.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fsevent 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fsevent-sys 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"inotify 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"mio-extras 2.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"num-derive\"\n-version = \"0.2.3\"\n+version = \"0.2.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.15.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -726,7 +885,7 @@ dependencies = [\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.10.0-alpha4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n ]\n \n@@ -849,7 +1008,9 @@ name = \"ra_vfs\"\n version = \"0.1.0\"\n dependencies = [\n  \"crossbeam-channel 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"notify 4.0.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_arena 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1097,7 +1258,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"salsa\"\n-version = \"0.10.0-alpha4\"\n+version = \"0.10.0-alpha5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1106,13 +1267,13 @@ dependencies = [\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa-macros 0.10.0-alpha4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa-macros 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"salsa-macros\"\n-version = \"0.10.0-alpha4\"\n+version = \"0.10.0-alpha5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1198,6 +1359,11 @@ dependencies = [\n  \"fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"slab\"\n+version = \"0.4.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"slug\"\n version = \"0.1.4\"\n@@ -1381,6 +1547,42 @@ dependencies = [\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"tokio-executor\"\n+version = \"0.1.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"tokio-io\"\n+version = \"0.1.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"tokio-reactor\"\n+version = \"0.1.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tokio-executor 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tokio-io 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"tools\"\n version = \"0.1.0\"\n@@ -1555,6 +1757,11 @@ dependencies = [\n  \"winapi-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"winapi\"\n+version = \"0.2.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"winapi\"\n version = \"0.3.6\"\n@@ -1564,6 +1771,11 @@ dependencies = [\n  \"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"winapi-build\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"winapi-i686-pc-windows-gnu\"\n version = \"0.4.0\"\n@@ -1582,6 +1794,15 @@ name = \"winapi-x86_64-pc-windows-gnu\"\n version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"ws2_32-sys\"\n+version = \"0.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"yaml-rust\"\n version = \"0.4.2\"\n@@ -1602,10 +1823,12 @@ dependencies = [\n \"checksum base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0b25d992356d2eb0ed82172f5248873db5560c4721f564b13cb5193bda5e668e\"\n \"checksum bit-set 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6f1efcc46c18245a69c38fcc5cc650f16d3a59d034f3106e9ed63748f695730a\"\n \"checksum bit-vec 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4440d5cb623bb7390ae27fec0bb6c61111969860f8e3ae198bfa0663645e67cf\"\n+\"checksum bitflags 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aad18937a628ec6abcd26d1489012cc0e18c21798210f491af69ded9b881106d\"\n \"checksum bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12\"\n \"checksum block-buffer 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a076c298b9ecdb530ed9d967e74a6027d6a7478924520acddcddc24c1c8ab3ab\"\n \"checksum byte-tools 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"560c32574a12a89ecd91f5e742165893f86e3ab98d21f8ea548658eb9eef5f40\"\n \"checksum byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a019b10a2a7cdeb292db131fc8113e57ea2a908f6e7894b0c3c671893b65dbeb\"\n+\"checksum bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"40ade3d27603c2cb345eb0912aec461a6dec7e06a4ae48589904e808335c7afa\"\n \"checksum cargo_metadata 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"585784cac9b05c93a53b17a0b24a5cdd1dfdda5256f030e089b549d2390cc720\"\n \"checksum cc 1.0.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb4a8b715cb4597106ea87c7c84b2f1d452c7492033765df7f32651e66fcf749\"\n \"checksum cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"082bb9b28e00d3c9d39cc03e64ce4cea0f1bb9b3fde493f0cbc008472d22bdf4\"\n@@ -1633,23 +1856,32 @@ dependencies = [\n \"checksum failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2\"\n \"checksum failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1\"\n \"checksum fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed\"\n+\"checksum filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a2df5c1a8c4be27e7707789dc42ae65976e60b394afd293d1419ab915833e646\"\n \"checksum flexi_logger 0.10.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bbd731387787f54fa333fa426e173fe42ea3d1123636b2b27ad802025fc5d182\"\n \"checksum fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3\"\n+\"checksum fsevent 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c4bbbf71584aeed076100b5665ac14e3d85eeb31fdbb45fbd41ef9a682b5ec05\"\n+\"checksum fsevent-sys 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1a772d36c338d07a032d5375a36f15f9a7043bf0cb8ce7cee658e037c6032874\"\n \"checksum fst 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db72126ca7dff566cdbbdd54af44668c544897d9d3862b198141f176f1238bdf\"\n \"checksum fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\n \"checksum fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n+\"checksum futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49e7653e374fe0d0c12de4250f0bdb60680b8c80eed558c5c7538eec9c89e21b\"\n \"checksum generic-array 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ef25c5683767570c2bbd7deba372926a55eaae9982d7726ee2a1050239d45b9d\"\n \"checksum glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8be18de09a56b60ed0edf84bc9df007e30040691af7acd1c41874faac5895bfb\"\n \"checksum heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205\"\n \"checksum humansize 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b6cab2627acfc432780848602f3f558f7e9dd427352224b0d9324025796d2a5e\"\n \"checksum idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e\"\n \"checksum im 12.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0627d417829c1d763d602687634869f254fc79f7e22dea6c824dab993db857e4\"\n \"checksum indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e81a7c05f79578dbc15793d8b619db9ba32b4577003ef3af1a91c416798c58d\"\n+\"checksum inotify 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"40b54539f3910d6f84fbf9a643efd6e3aa6e4f001426c0329576128255994718\"\n+\"checksum inotify-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e74a1aa87c59aeff6ef2cc2fa62d41bc43f54952f55652656b18a02fd5e356c0\"\n \"checksum insta 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ff57d9cbc4664b54a972c321155c7703794bc0f5c9944f29c36f40d10d626f3\"\n+\"checksum iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbe6e417e7d0975db6512b90796e8ce223145ac4e33c377e4a42882a0e88bb08\"\n \"checksum itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5b8467d9c1cebe26feb08c640139247fac215782d35371ade9a2136ed6085358\"\n \"checksum itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1306f3464951f30e30d12373d31c79fbd52d236e5e896fd92f96ec7babbbe60b\"\n \"checksum join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4dc7a5290e8c2606ce2be49f456d50f69173cb96d1541e4f66e34ac8b331a98f\"\n+\"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a374c89b9db55895453a74c1e38861d9deec0b01b405a82516e9d5de4820dea1\"\n+\"checksum lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b294d6fa9ee409a054354afc4352b0b9ef7ca222c69b8812cbea9e7d2bf3783f\"\n \"checksum libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e962c7641008ac010fa60a7dfdc1712449f29c44ef2d4702394aea943ee75047\"\n \"checksum linked-hash-map 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"70fb39025bc7cdd76305867c4eccf2f2dcf6e9a57f5b21a93e1c2d86cd03ec9e\"\n \"checksum lock_api 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"62ebf1391f6acad60e5c8b43706dde4582df75c06698ab44511d15016bc2442c\"\n@@ -1660,8 +1892,13 @@ dependencies = [\n \"checksum memchr 2.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e1dd4eaac298c32ce07eb6ed9242eda7d82955b9170b7d6db59b2e02cc63fcb8\"\n \"checksum memmap 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2ffa2c986de11a9df78620c01eeaaf27d94d3ff02bf81bfcca953102dd0c6ff\"\n \"checksum memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0f9dc261e2b62d7a622bf416ea3c5245cdd5d9a7fcc428c0d06804dfce1775b3\"\n+\"checksum mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"71646331f2619b1026cc302f87a2b8b648d5c6dd6937846a16cc8ce0f347f432\"\n+\"checksum mio-extras 2.0.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"46e73a04c2fa6250b8d802134d56d554a9ec2922bf977777c805ea5def61ce40\"\n+\"checksum miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c1f2f3b1cf331de6896aabf6e9d55dca90356cc9960cca7eaaf408a355ae919\"\n+\"checksum net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\" = \"42550d9fb7b6684a6d404d9fa7250c2eb2646df731d1c06afc06dcee9e1bcf88\"\n \"checksum nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2f9667ddcc6cc8a43afc9b7917599d7216aa09c463919ea32c59ed6cac8bc945\"\n-\"checksum num-derive 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8af1847c907c2f04d7bfd572fb25bbb4385c637fe5be163cf2f8c5d778fe1e7d\"\n+\"checksum notify 4.0.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c968cf37cf949114b00d51b0b23536d1c3a4a3963767cf4c969c65a6af78dc7d\"\n+\"checksum num-derive 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9fe8fcafd1b86a37ce8a1cfa15ae504817e0c8c2e7ad42767371461ac1d316d\"\n \"checksum num-integer 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e83d528d2677f0518c570baf2b7abdcf0cd2d248860b68507bdcb3e91d4c0cea\"\n \"checksum num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0b3a5d7cc97d6d30d8b9bc8fa19bf45349ffe46241e8816f50f62f6d6aaabee1\"\n \"checksum num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5a69d464bdc213aaaff628444e99578ede64e9c854025aa43b9796530afa9238\"\n@@ -1704,8 +1941,8 @@ dependencies = [\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum rusty-fork 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9591f190d2852720b679c21f66ad929f9f1d7bb09d1193c26167586029d8489c\"\n \"checksum ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb9e9b8cde282a9fe6a42dd4681319bfb63f121b8a8ee9439c6f4107e58a46f7\"\n-\"checksum salsa 0.10.0-alpha4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3f442595eae948da8fbb2aa1e13940d9d2d70031753a27a5d1434f91b706ff12\"\n-\"checksum salsa-macros 0.10.0-alpha4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e6c1a1bee4eb44881438e80c1a26db1c3b957b6cc51765615d429019babdec2\"\n+\"checksum salsa 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8b5e2535d707dc5ced81106d3b71d806cfeef8a6e8a567472fde7ffd56b770dd\"\n+\"checksum salsa-macros 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7c5da4c649f6d4fc1864fcd9a379b1f7c6d570b278559c84a6e15981c949cc6\"\n \"checksum same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267\"\n \"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n@@ -1715,6 +1952,7 @@ dependencies = [\n \"checksum serde_json 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4b90a9fbe1211e57d3e1c15670f1cb00802988fb23a1a4aad7a2b63544f1920e\"\n \"checksum serde_yaml 0.8.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0887a8e097a69559b56aa2526bf7aff7c3048cf627dff781f0b56a6001534593\"\n \"checksum sha-1 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"51b9d1f3b5de8a167ab06834a7c883bd197f2191e1dda1a22d9ccfeedbf9aded\"\n+\"checksum slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8\"\n \"checksum slug 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3bc762e6a4b6c6fcaade73e77f9ebc6991b676f88bb2358bddb56560f073373\"\n \"checksum smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"88aea073965ab29f6edb5493faf96ad662fb18aa9eeb186a3b7057951605ed15\"\n \"checksum smol_str 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9af1035bc5d742ab6b7ab16713e41cc2ffe78cb474f6f43cd696b2d16052007e\"\n@@ -1733,6 +1971,9 @@ dependencies = [\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n \"checksum threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2f0c90a5f3459330ac8bc0d2f879c693bb7a2f59689c1083fc4ef83834da865\"\n \"checksum time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f\"\n+\"checksum tokio-executor 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"30c6dbf2d1ad1de300b393910e8a3aa272b724a400b6531da03eed99e329fbf0\"\n+\"checksum tokio-io 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b53aeb9d3f5ccf2ebb29e19788f96987fa1355f8fe45ea193928eaaaf3ae820f\"\n+\"checksum tokio-reactor 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"afbcdb0f0d2a1e4c440af82d7bbf0bf91a8a8c0575bcd20c05d15be7e9d3a02f\"\n \"checksum typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"612d636f949607bdf9b123b4a6f6d966dedf3ff669f7f045890d3a4a73948169\"\n \"checksum ucd-trie 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"71a9c5b1fe77426cf144cc30e49e955270f5086e31a6441dfa8b32efc09b9d77\"\n \"checksum ucd-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"535c204ee4d8434478593480b8f86ab45ec9aae0e83c568ca81abf0fd0e88f86\"\n@@ -1757,8 +1998,11 @@ dependencies = [\n \"checksum void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n \"checksum wait-timeout 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b9f3bf741a801531993db6478b95682117471f76916f5e690dd8d45395b09349\"\n \"checksum walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9d9d7ed3431229a144296213105a390676cc49c9b6a72bd19f3176c98e129fa1\"\n+\"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n \"checksum winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92c1eb33641e276cfa214a0522acad57be5c56b10cb348b3c5117db75f3ac4b0\"\n+\"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n \"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n \"checksum winapi-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"afc5508759c5bf4285e61feb862b6083c8480aec864fa17a81fdec6f69b461ab\"\n \"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n+\"checksum ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e\"\n \"checksum yaml-rust 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"95acf0db5515d07da9965ec0e0ba6cc2d825e2caeb7303b66ca441729801254e\""}, {"sha": "e5a0603d1e5234960d3ba57a3e3b3ddce1ce3340", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "patch": "@@ -11,7 +11,7 @@ use gen_lsp_server::{\n };\n use lsp_types::NumberOrString;\n use ra_ide_api::{Canceled, FileId, LibraryData};\n-use ra_vfs::VfsTask;\n+use ra_vfs::{VfsTask, WatcherChange};\n use rustc_hash::FxHashSet;\n use serde::{de::DeserializeOwned, Serialize};\n use threadpool::ThreadPool;\n@@ -113,6 +113,7 @@ enum Event {\n     Msg(RawMessage),\n     Task(Task),\n     Vfs(VfsTask),\n+    Watcher(WatcherChange),\n     Lib(LibraryData),\n }\n \n@@ -149,6 +150,7 @@ impl fmt::Debug for Event {\n             Event::Task(it) => fmt::Debug::fmt(it, f),\n             Event::Vfs(it) => fmt::Debug::fmt(it, f),\n             Event::Lib(it) => fmt::Debug::fmt(it, f),\n+            Event::Watcher(it) => fmt::Debug::fmt(it, f),\n         }\n     }\n }\n@@ -183,6 +185,10 @@ fn main_loop_inner(\n                 Ok(task) => Event::Vfs(task),\n                 Err(RecvError) => bail!(\"vfs died\"),\n             },\n+            recv(state.vfs.read().change_receiver()) -> change => match change {\n+                Ok(change) => Event::Watcher(change),\n+                Err(RecvError) => bail!(\"vfs watcher died\"),\n+            },\n             recv(libdata_receiver) -> data => Event::Lib(data.unwrap())\n         };\n         log::info!(\"loop_turn = {:?}\", event);\n@@ -194,6 +200,10 @@ fn main_loop_inner(\n                 state.vfs.write().handle_task(task);\n                 state_changed = true;\n             }\n+            Event::Watcher(change) => {\n+                state.vfs.write().handle_change(change);\n+                state_changed = true;\n+            }\n             Event::Lib(lib) => {\n                 feedback(internal_mode, \"library loaded\", msg_sender);\n                 state.add_lib(lib);\n@@ -365,7 +375,7 @@ fn on_notification(\n             if let Some(file_id) = state\n                 .vfs\n                 .write()\n-                .add_file_overlay(&path, params.text_document.text)\n+                .add_file_overlay(&path, Some(params.text_document.text))\n             {\n                 subs.add_sub(FileId(file_id.0.into()));\n             }\n@@ -384,7 +394,10 @@ fn on_notification(\n                 .pop()\n                 .ok_or_else(|| format_err!(\"empty changes\"))?\n                 .text;\n-            state.vfs.write().change_file_overlay(path.as_path(), text);\n+            state\n+                .vfs\n+                .write()\n+                .change_file_overlay(path.as_path(), Some(text));\n             return Ok(());\n         }\n         Err(not) => not,"}, {"sha": "f7a972e91b02753ac6fbdc49e1828acf67628765", "filename": "crates/ra_vfs/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_vfs%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_vfs%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2FCargo.toml?ref=1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "patch": "@@ -10,6 +10,8 @@ relative-path = \"0.4.0\"\n rustc-hash = \"1.0\"\n crossbeam-channel = \"0.3.5\"\n log = \"0.4.6\"\n+notify = \"4\"\n+drop_bomb = \"0.1.0\"\n \n thread_worker = { path = \"../thread_worker\" }\n ra_arena = { path = \"../ra_arena\" }"}, {"sha": "5336822b331f06db8f98235b4a72fc14468e98b7", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 45, "deletions": 14, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "patch": "@@ -14,26 +14,26 @@\n //! which are watched for changes. Typically, there will be a root for each\n //! Cargo package.\n mod io;\n+mod watcher;\n \n use std::{\n-    fmt,\n-    mem,\n-    thread,\n     cmp::Reverse,\n-    path::{Path, PathBuf},\n     ffi::OsStr,\n+    fmt, fs, mem,\n+    path::{Path, PathBuf},\n     sync::Arc,\n-    fs,\n+    thread,\n };\n \n-use rustc_hash::{FxHashMap, FxHashSet};\n-use relative_path::RelativePathBuf;\n use crossbeam_channel::Receiver;\n-use walkdir::DirEntry;\n+use ra_arena::{impl_arena_id, Arena, RawId};\n+use relative_path::RelativePathBuf;\n+use rustc_hash::{FxHashMap, FxHashSet};\n use thread_worker::WorkerHandle;\n-use ra_arena::{Arena, RawId, impl_arena_id};\n+use walkdir::DirEntry;\n \n pub use crate::io::TaskResult as VfsTask;\n+pub use crate::watcher::{Watcher, WatcherChange};\n \n /// `RootFilter` is a predicate that checks if a file can belong to a root. If\n /// several filters match a file (nested dirs), the most nested one wins.\n@@ -85,6 +85,7 @@ pub struct Vfs {\n     pending_changes: Vec<VfsChange>,\n     worker: io::Worker,\n     worker_handle: WorkerHandle,\n+    watcher: Watcher,\n }\n \n impl fmt::Debug for Vfs {\n@@ -97,12 +98,15 @@ impl Vfs {\n     pub fn new(mut roots: Vec<PathBuf>) -> (Vfs, Vec<VfsRoot>) {\n         let (worker, worker_handle) = io::start();\n \n+        let watcher = Watcher::new().unwrap(); // TODO return Result?\n+\n         let mut res = Vfs {\n             roots: Arena::default(),\n             files: Arena::default(),\n             root2files: FxHashMap::default(),\n             worker,\n             worker_handle,\n+            watcher,\n             pending_changes: Vec::new(),\n         };\n \n@@ -129,6 +133,7 @@ impl Vfs {\n                 filter: Box::new(filter),\n             };\n             res.worker.inp.send(task).unwrap();\n+            res.watcher.watch(path).unwrap();\n         }\n         let roots = res.roots.iter().map(|(id, _)| id).collect();\n         (res, roots)\n@@ -183,6 +188,10 @@ impl Vfs {\n         &self.worker.out\n     }\n \n+    pub fn change_receiver(&self) -> &Receiver<WatcherChange> {\n+        &self.watcher.change_receiver()\n+    }\n+\n     pub fn handle_task(&mut self, task: io::TaskResult) {\n         let mut files = Vec::new();\n         // While we were scanning the root in the backgound, a file might have\n@@ -209,31 +218,52 @@ impl Vfs {\n         self.pending_changes.push(change);\n     }\n \n-    pub fn add_file_overlay(&mut self, path: &Path, text: String) -> Option<VfsFile> {\n+    pub fn handle_change(&mut self, change: WatcherChange) {\n+        match change {\n+            WatcherChange::Create(path) => {\n+                self.add_file_overlay(&path, None);\n+            }\n+            WatcherChange::Remove(path) => {\n+                self.remove_file_overlay(&path);\n+            }\n+            WatcherChange::Rename(src, dst) => {\n+                self.remove_file_overlay(&src);\n+                self.add_file_overlay(&dst, None);\n+            }\n+            WatcherChange::Write(path) => {\n+                self.change_file_overlay(&path, None);\n+            }\n+        }\n+    }\n+\n+    pub fn add_file_overlay(&mut self, path: &Path, text: Option<String>) -> Option<VfsFile> {\n         let mut res = None;\n-        if let Some((root, path, file)) = self.find_root(path) {\n+        if let Some((root, rel_path, file)) = self.find_root(path) {\n+            let text = text.unwrap_or_else(|| fs::read_to_string(&path).unwrap_or_default());\n             let text = Arc::new(text);\n             let change = if let Some(file) = file {\n                 res = Some(file);\n                 self.change_file(file, Arc::clone(&text));\n                 VfsChange::ChangeFile { file, text }\n             } else {\n-                let file = self.add_file(root, path.clone(), Arc::clone(&text));\n+                let file = self.add_file(root, rel_path.clone(), Arc::clone(&text));\n                 res = Some(file);\n                 VfsChange::AddFile {\n                     file,\n                     text,\n                     root,\n-                    path,\n+                    path: rel_path,\n                 }\n             };\n             self.pending_changes.push(change);\n         }\n         res\n     }\n \n-    pub fn change_file_overlay(&mut self, path: &Path, new_text: String) {\n+    pub fn change_file_overlay(&mut self, path: &Path, new_text: Option<String>) {\n         if let Some((_root, _path, file)) = self.find_root(path) {\n+            let new_text =\n+                new_text.unwrap_or_else(|| fs::read_to_string(&path).unwrap_or_default());\n             let file = file.expect(\"can't change a file which wasn't added\");\n             let text = Arc::new(new_text);\n             self.change_file(file, Arc::clone(&text));\n@@ -267,6 +297,7 @@ impl Vfs {\n \n     /// Sutdown the VFS and terminate the background watching thread.\n     pub fn shutdown(self) -> thread::Result<()> {\n+        let _ = self.watcher.shutdown();\n         let _ = self.worker.shutdown();\n         self.worker_handle.shutdown()\n     }"}, {"sha": "cc05f949ee9e2e011d205cfbc4ea442fd6db5010", "filename": "crates/ra_vfs/src/watcher.rs", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d5eaefe8a8e4f8b267d51ee8ece866741586ada/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs?ref=1d5eaefe8a8e4f8b267d51ee8ece866741586ada", "patch": "@@ -0,0 +1,96 @@\n+use std::{\n+    path::{Path, PathBuf},\n+    sync::mpsc,\n+    thread,\n+    time::Duration,\n+};\n+\n+use crossbeam_channel::Receiver;\n+use drop_bomb::DropBomb;\n+use notify::{DebouncedEvent, RecommendedWatcher, RecursiveMode, Watcher as NotifyWatcher};\n+\n+pub struct Watcher {\n+    receiver: Receiver<WatcherChange>,\n+    watcher: RecommendedWatcher,\n+    thread: thread::JoinHandle<()>,\n+    bomb: DropBomb,\n+}\n+\n+#[derive(Debug)]\n+pub enum WatcherChange {\n+    Create(PathBuf),\n+    Write(PathBuf),\n+    Remove(PathBuf),\n+    Rename(PathBuf, PathBuf),\n+}\n+\n+impl WatcherChange {\n+    fn from_debounced_event(ev: DebouncedEvent) -> Option<WatcherChange> {\n+        match ev {\n+            DebouncedEvent::NoticeWrite(_)\n+            | DebouncedEvent::NoticeRemove(_)\n+            | DebouncedEvent::Chmod(_)\n+            | DebouncedEvent::Rescan => {\n+                // ignore\n+                None\n+            }\n+            DebouncedEvent::Create(path) => Some(WatcherChange::Create(path)),\n+            DebouncedEvent::Write(path) => Some(WatcherChange::Write(path)),\n+            DebouncedEvent::Remove(path) => Some(WatcherChange::Remove(path)),\n+            DebouncedEvent::Rename(src, dst) => Some(WatcherChange::Rename(src, dst)),\n+            DebouncedEvent::Error(err, path) => {\n+                // TODO\n+                log::warn!(\"watch error {}, {:?}\", err, path);\n+                None\n+            }\n+        }\n+    }\n+}\n+\n+impl Watcher {\n+    pub fn new() -> Result<Watcher, Box<std::error::Error>> {\n+        let (input_sender, input_receiver) = mpsc::channel();\n+        let watcher = notify::watcher(input_sender, Duration::from_millis(250))?;\n+        let (output_sender, output_receiver) = crossbeam_channel::unbounded();\n+        let thread = thread::spawn(move || loop {\n+            match input_receiver.recv() {\n+                Ok(ev) => {\n+                    // forward relevant events only\n+                    if let Some(change) = WatcherChange::from_debounced_event(ev) {\n+                        output_sender.send(change).unwrap();\n+                    }\n+                }\n+                Err(err) => {\n+                    log::debug!(\"Watcher stopped ({})\", err);\n+                    break;\n+                }\n+            }\n+        });\n+        Ok(Watcher {\n+            receiver: output_receiver,\n+            watcher,\n+            thread,\n+            bomb: DropBomb::new(format!(\"Watcher was not shutdown\")),\n+        })\n+    }\n+\n+    pub fn watch(&mut self, root: impl AsRef<Path>) -> Result<(), Box<std::error::Error>> {\n+        self.watcher.watch(root, RecursiveMode::Recursive)?;\n+        Ok(())\n+    }\n+\n+    pub fn change_receiver(&self) -> &Receiver<WatcherChange> {\n+        &self.receiver\n+    }\n+\n+    pub fn shutdown(mut self) -> thread::Result<()> {\n+        self.bomb.defuse();\n+        drop(self.watcher);\n+        let res = self.thread.join();\n+        match &res {\n+            Ok(()) => log::info!(\"... Watcher terminated with ok\"),\n+            Err(_) => log::error!(\"... Watcher terminated with err\"),\n+        }\n+        res\n+    }\n+}"}]}