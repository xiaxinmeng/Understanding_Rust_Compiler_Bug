{"sha": "b0d490e308561eaa3b30067fe6e35c47d47e8896", "node_id": "C_kwDOAAsO6NoAKGIwZDQ5MGUzMDg1NjFlYWEzYjMwMDY3ZmU2ZTM1YzQ3ZDQ3ZTg4OTY", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-12-01T15:51:20Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-12-01T15:51:20Z"}, "message": "rustc_ast_lowering: Stop lowering imports into multiple items\n\nLower them into a single item with multiple resolutions instead.\nThis also allows to remove additional `NodId`s and `DefId`s related to those additional items.", "tree": {"sha": "ecf8a30b96f7e1b32462d136981f75a58e100ad0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecf8a30b96f7e1b32462d136981f75a58e100ad0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0d490e308561eaa3b30067fe6e35c47d47e8896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d490e308561eaa3b30067fe6e35c47d47e8896", "html_url": "https://github.com/rust-lang/rust/commit/b0d490e308561eaa3b30067fe6e35c47d47e8896", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0d490e308561eaa3b30067fe6e35c47d47e8896/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9314e5b942c1e2cbc9d4c7d520ca7102675d6d08", "url": "https://api.github.com/repos/rust-lang/rust/commits/9314e5b942c1e2cbc9d4c7d520ca7102675d6d08", "html_url": "https://github.com/rust-lang/rust/commit/9314e5b942c1e2cbc9d4c7d520ca7102675d6d08"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d46f6a6352c63ead2b1418c911e887ce0eaefe4b", "filename": "clippy_lints/src/single_component_path_imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs?ref=b0d490e308561eaa3b30067fe6e35c47d47e8896", "patch": "@@ -149,7 +149,7 @@ impl SingleComponentPathImports {\n \n                 // keep track of `use some_module;` usages\n                 if segments.len() == 1 {\n-                    if let UseTreeKind::Simple(None, _, _) = use_tree.kind {\n+                    if let UseTreeKind::Simple(None) = use_tree.kind {\n                         let name = segments[0].ident.name;\n                         if !macros.contains(&name) {\n                             single_use_usages.push(SingleUse {\n@@ -169,7 +169,7 @@ impl SingleComponentPathImports {\n                         for tree in trees {\n                             let segments = &tree.0.prefix.segments;\n                             if segments.len() == 1 {\n-                                if let UseTreeKind::Simple(None, _, _) = tree.0.kind {\n+                                if let UseTreeKind::Simple(None) = tree.0.kind {\n                                     let name = segments[0].ident.name;\n                                     if !macros.contains(&name) {\n                                         single_use_usages.push(SingleUse {"}, {"sha": "397633f533b22c767b3e1186d4f172c9341e31c2", "filename": "clippy_lints/src/unnecessary_self_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs?ref=b0d490e308561eaa3b30067fe6e35c47d47e8896", "patch": "@@ -57,7 +57,7 @@ impl EarlyLintPass for UnnecessarySelfImports {\n                             format!(\n                                 \"{}{};\",\n                                 last_segment.ident,\n-                                if let UseTreeKind::Simple(Some(alias), ..) = self_tree.kind { format!(\" as {alias}\") } else { String::new() },\n+                                if let UseTreeKind::Simple(Some(alias)) = self_tree.kind { format!(\" as {alias}\") } else { String::new() },\n                             ),\n                             Applicability::MaybeIncorrect,\n                         );"}, {"sha": "7ee785804f0a564ad9b2a68cc46d75022159aec5", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=b0d490e308561eaa3b30067fe6e35c47d47e8896", "patch": "@@ -39,7 +39,7 @@ impl EarlyLintPass for UnsafeNameRemoval {\n \n fn check_use_tree(use_tree: &UseTree, cx: &EarlyContext<'_>, span: Span) {\n     match use_tree.kind {\n-        UseTreeKind::Simple(Some(new_name), ..) => {\n+        UseTreeKind::Simple(Some(new_name)) => {\n             let old_name = use_tree\n                 .prefix\n                 .segments\n@@ -48,7 +48,7 @@ fn check_use_tree(use_tree: &UseTree, cx: &EarlyContext<'_>, span: Span) {\n                 .ident;\n             unsafe_to_safe_check(old_name, new_name, cx, span);\n         },\n-        UseTreeKind::Simple(None, ..) | UseTreeKind::Glob => {},\n+        UseTreeKind::Simple(None) | UseTreeKind::Glob => {},\n         UseTreeKind::Nested(ref nested_use_tree) => {\n             for (use_tree, _) in nested_use_tree {\n                 check_use_tree(use_tree, cx, span);"}, {"sha": "49e5f283db08904b5e273449a9f3696343dcab3a", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d490e308561eaa3b30067fe6e35c47d47e8896/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=b0d490e308561eaa3b30067fe6e35c47d47e8896", "patch": "@@ -566,7 +566,7 @@ pub fn eq_use_tree_kind(l: &UseTreeKind, r: &UseTreeKind) -> bool {\n     use UseTreeKind::*;\n     match (l, r) {\n         (Glob, Glob) => true,\n-        (Simple(l, _, _), Simple(r, _, _)) => both(l, r, |l, r| eq_id(*l, *r)),\n+        (Simple(l), Simple(r)) => both(l, r, |l, r| eq_id(*l, *r)),\n         (Nested(l), Nested(r)) => over(l, r, |(l, _), (r, _)| eq_use_tree(l, r)),\n         _ => false,\n     }"}, {"sha": "61843124ccd91f03e3b4cd760aeccb1b7fc40102", "filename": "tests/ui/macro_use_imports.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b0d490e308561eaa3b30067fe6e35c47d47e8896/tests%2Fui%2Fmacro_use_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0d490e308561eaa3b30067fe6e35c47d47e8896/tests%2Fui%2Fmacro_use_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.stderr?ref=b0d490e308561eaa3b30067fe6e35c47d47e8896", "patch": "@@ -1,8 +1,8 @@\n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:23:5\n+  --> $DIR/macro_use_imports.rs:25:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{inner::foofoo, inner::try_err};`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::inner::nested::string_add;`\n    |\n    = note: `-D clippy::macro-use-imports` implied by `-D warnings`\n \n@@ -13,10 +13,10 @@ LL |     #[macro_use]\n    |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mini_mac::ClippyMiniMacroTest;`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n-  --> $DIR/macro_use_imports.rs:25:5\n+  --> $DIR/macro_use_imports.rs:23:5\n    |\n LL |     #[macro_use]\n-   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::inner::nested::string_add;`\n+   |     ^^^^^^^^^^^^ help: remove the attribute and import the macro directly, try: `use mac::{inner::foofoo, inner::try_err};`\n \n error: `macro_use` attributes are no longer needed in the Rust 2018 edition\n   --> $DIR/macro_use_imports.rs:19:5"}]}