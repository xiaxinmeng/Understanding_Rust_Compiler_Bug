{"sha": "14f504c5b7324c77e78feffe5def4282d0f10573", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZjUwNGM1YjczMjRjNzdlNzhmZWZmZTVkZWY0MjgyZDBmMTA1NzM=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-03T21:19:58Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-03T21:20:29Z"}, "message": "Add a `build-aux-docs` directive to compiletest\n\nThis flag causes the documentation for all `aux-build` files to\nbe built, which happens prior to running/building the parent test.", "tree": {"sha": "39f18b5183ea7856b1351385f02b454673856b5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39f18b5183ea7856b1351385f02b454673856b5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14f504c5b7324c77e78feffe5def4282d0f10573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14f504c5b7324c77e78feffe5def4282d0f10573", "html_url": "https://github.com/rust-lang/rust/commit/14f504c5b7324c77e78feffe5def4282d0f10573", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14f504c5b7324c77e78feffe5def4282d0f10573/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1099af732dd25be44f4e3da35d0f5b8e40cdcb7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1099af732dd25be44f4e3da35d0f5b8e40cdcb7e", "html_url": "https://github.com/rust-lang/rust/commit/1099af732dd25be44f4e3da35d0f5b8e40cdcb7e"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "6efe6e608e8ad9cd83188462a2134caaffc48c9b", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/14f504c5b7324c77e78feffe5def4282d0f10573/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f504c5b7324c77e78feffe5def4282d0f10573/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=14f504c5b7324c77e78feffe5def4282d0f10573", "patch": "@@ -34,6 +34,8 @@ pub struct TestProps {\n     pub exec_env: Vec<(String,String)> ,\n     // Lines to check if they appear in the expected debugger output\n     pub check_lines: Vec<String> ,\n+    // Build documentation for all specified aux-builds as well\n+    pub build_aux_docs: bool,\n     // Flag to force a crate to be built with the host architecture\n     pub force_host: bool,\n     // Check stdout for error-pattern output as well as stderr\n@@ -59,6 +61,7 @@ pub fn load_props(testfile: &Path) -> TestProps {\n     let mut run_flags = None;\n     let mut pp_exact = None;\n     let mut check_lines = Vec::new();\n+    let mut build_aux_docs = false;\n     let mut force_host = false;\n     let mut check_stdout = false;\n     let mut no_prefer_dynamic = false;\n@@ -83,6 +86,10 @@ pub fn load_props(testfile: &Path) -> TestProps {\n             pp_exact = parse_pp_exact(ln, testfile);\n         }\n \n+        if !build_aux_docs {\n+            build_aux_docs = parse_build_aux_docs(ln);\n+        }\n+\n         if !force_host {\n             force_host = parse_force_host(ln);\n         }\n@@ -144,6 +151,7 @@ pub fn load_props(testfile: &Path) -> TestProps {\n         aux_builds: aux_builds,\n         exec_env: exec_env,\n         check_lines: check_lines,\n+        build_aux_docs: build_aux_docs,\n         force_host: force_host,\n         check_stdout: check_stdout,\n         no_prefer_dynamic: no_prefer_dynamic,\n@@ -284,6 +292,10 @@ fn parse_force_host(line: &str) -> bool {\n     parse_name_directive(line, \"force-host\")\n }\n \n+fn parse_build_aux_docs(line: &str) -> bool {\n+    parse_name_directive(line, \"build-aux-docs\")\n+}\n+\n fn parse_check_stdout(line: &str) -> bool {\n     parse_name_directive(line, \"check-stdout\")\n }"}, {"sha": "833ab553a132f9d9c0dbaf7b929c1c32e5ecbf89", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/14f504c5b7324c77e78feffe5def4282d0f10573/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14f504c5b7324c77e78feffe5def4282d0f10573/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=14f504c5b7324c77e78feffe5def4282d0f10573", "patch": "@@ -1149,11 +1149,20 @@ fn compile_test(config: &Config, props: &TestProps,\n }\n \n fn document(config: &Config, props: &TestProps,\n-            testfile: &Path) -> (ProcRes, PathBuf) {\n+            testfile: &Path, out_dir: &Path) -> ProcRes {\n+    if props.build_aux_docs {\n+        for rel_ab in &props.aux_builds {\n+            let abs_ab = config.aux_base.join(rel_ab);\n+            let aux_props = header::load_props(&abs_ab);\n+\n+            let auxres = document(config, &aux_props, &abs_ab, out_dir);\n+            if !auxres.status.success() {\n+                return auxres;\n+            }\n+        }\n+    }\n+\n     let aux_dir = aux_output_dir_name(config, testfile);\n-    let out_dir = output_base_name(config, testfile);\n-    let _ = fs::remove_dir_all(&out_dir);\n-    ensure_dir(&out_dir);\n     let mut args = vec![\"-L\".to_owned(),\n                         aux_dir.to_str().unwrap().to_owned(),\n                         \"-o\".to_owned(),\n@@ -1164,7 +1173,7 @@ fn document(config: &Config, props: &TestProps,\n         prog: config.rustdoc_path.to_str().unwrap().to_owned(),\n         args: args,\n     };\n-    (compose_and_run_compiler(config, props, testfile, args, None), out_dir)\n+    compose_and_run_compiler(config, props, testfile, args, None)\n }\n \n fn exec_compiled_test(config: &Config, props: &TestProps,\n@@ -1723,7 +1732,11 @@ fn charset() -> &'static str {\n }\n \n fn run_rustdoc_test(config: &Config, props: &TestProps, testfile: &Path) {\n-    let (proc_res, out_dir) = document(config, props, testfile);\n+    let out_dir = output_base_name(config, testfile);\n+    let _ = fs::remove_dir_all(&out_dir);\n+    ensure_dir(&out_dir);\n+\n+    let proc_res = document(config, props, testfile, &out_dir);\n     if !proc_res.status.success() {\n         fatal_proc_rec(\"rustdoc failed!\", &proc_res);\n     }"}]}