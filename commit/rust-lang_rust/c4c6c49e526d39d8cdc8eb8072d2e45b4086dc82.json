{"sha": "c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YzZjNDllNTI2ZDM5ZDhjZGM4ZWI4MDcyZDJlNDViNDA4NmRjODI=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-05T14:14:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-05T14:14:37Z"}, "message": "Rollup merge of #38959 - Amanieu:atomic128, r=alexcrichton\n\nAdd 128-bit atomics\n\nThis is currently only supported on AArch64 since that is the only target which unconditionally supports 128-bit atomic operations.\n\ncc #35118", "tree": {"sha": "b5b0db8b056bad6acd8db6803daee1b205d2df94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5b0db8b056bad6acd8db6803daee1b205d2df94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82", "html_url": "https://github.com/rust-lang/rust/commit/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "html_url": "https://github.com/rust-lang/rust/commit/6a4c906f7ab30300b1792cb7a24a1e326fd01aec"}, {"sha": "9903975003276cc42a1ed5f21eee292b7c62c331", "url": "https://api.github.com/repos/rust-lang/rust/commits/9903975003276cc42a1ed5f21eee292b7c62c331", "html_url": "https://github.com/rust-lang/rust/commit/9903975003276cc42a1ed5f21eee292b7c62c331"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "58cd0af7ee38752618f90bff1524d6dfe2b99524", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82", "patch": "@@ -1318,6 +1318,24 @@ atomic_int! {\n     unstable(feature = \"integer_atomics\", issue = \"32976\"),\n     u64 AtomicU64 ATOMIC_U64_INIT\n }\n+#[cfg(not(stage0))]\n+#[cfg(target_has_atomic = \"128\")]\n+atomic_int! {\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    i128 AtomicI128 ATOMIC_I128_INIT\n+}\n+#[cfg(not(stage0))]\n+#[cfg(target_has_atomic = \"128\")]\n+atomic_int! {\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    u128 AtomicU128 ATOMIC_U128_INIT\n+}\n #[cfg(target_has_atomic = \"ptr\")]\n atomic_int!{\n     stable(feature = \"rust1\", since = \"1.0.0\"),"}, {"sha": "5ac50e04b8d2fc81e3e1991a5f682f9d1d89232b", "filename": "src/test/run-make/atomic-lock-free/atomic_lock_free.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82/src%2Ftest%2Frun-make%2Fatomic-lock-free%2Fatomic_lock_free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82/src%2Ftest%2Frun-make%2Fatomic-lock-free%2Fatomic_lock_free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fatomic-lock-free%2Fatomic_lock_free.rs?ref=c4c6c49e526d39d8cdc8eb8072d2e45b4086dc82", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(cfg_target_has_atomic, no_core, intrinsics, lang_items)]\n+#![feature(cfg_target_has_atomic, no_core, intrinsics, lang_items, i128_type)]\n #![crate_type=\"rlib\"]\n #![no_core]\n \n@@ -54,6 +54,14 @@ pub unsafe fn atomic_u64(x: *mut u64) {\n pub unsafe fn atomic_i64(x: *mut i64) {\n     atomic_xadd(x, 1);\n }\n+#[cfg(target_has_atomic = \"128\")]\n+pub unsafe fn atomic_u128(x: *mut u128) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"128\")]\n+pub unsafe fn atomic_i128(x: *mut i128) {\n+    atomic_xadd(x, 1);\n+}\n #[cfg(target_has_atomic = \"ptr\")]\n pub unsafe fn atomic_usize(x: *mut usize) {\n     atomic_xadd(x, 1);"}]}