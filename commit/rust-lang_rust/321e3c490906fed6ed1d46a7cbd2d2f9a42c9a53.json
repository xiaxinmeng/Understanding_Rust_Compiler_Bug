{"sha": "321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMWUzYzQ5MDkwNmZlZDZlZDFkNDZhN2NiZDJkMmY5YTQyYzlhNTM=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-01-19T09:58:24Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-02-16T02:04:10Z"}, "message": "Add cmp::Ord implementation for semver::Version", "tree": {"sha": "b3d7096d541685810dd38c5bab77af44c51865a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3d7096d541685810dd38c5bab77af44c51865a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53", "html_url": "https://github.com/rust-lang/rust/commit/321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f18ae8ce7e2764b3d6f9b3c22c31163e55cac98a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f18ae8ce7e2764b3d6f9b3c22c31163e55cac98a", "html_url": "https://github.com/rust-lang/rust/commit/f18ae8ce7e2764b3d6f9b3c22c31163e55cac98a"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "fc5d951edc5db90a854be16e281961e3c949b463", "filename": "src/libcore/semver.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53/src%2Flibcore%2Fsemver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53/src%2Flibcore%2Fsemver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsemver.rs?ref=321e3c490906fed6ed1d46a7cbd2d2f9a42c9a53", "patch": "@@ -17,6 +17,7 @@ use uint;\n use str;\n use to_str::ToStr;\n use char;\n+use cmp;\n \n pub struct Version {\n     major: uint,\n@@ -37,6 +38,61 @@ impl Version: ToStr {\n     }\n }\n \n+impl Version: cmp::Ord {\n+    #[inline(always)]\n+    pure fn lt(&self, other: &Version) -> bool {\n+        self.major < other.major ||\n+        self.minor < other.minor ||\n+        self.patch < other.patch ||\n+        (match self.tag {\n+            Some(stag) => match other.tag {\n+                Some(otag) => stag < otag,\n+                None => true\n+            },\n+            None => false\n+        })\n+    } \n+    #[inline(always)]\n+    pure fn le(&self, other: &Version) -> bool {\n+        self.major <= other.major ||\n+        self.minor <= other.minor ||\n+        self.patch <= other.patch ||\n+        (match self.tag {\n+            Some(stag) => match other.tag {\n+                Some(otag) => stag <= otag,\n+                None => true\n+            },\n+            None => false\n+        })\n+    }\n+    #[inline(always)]\n+    pure fn gt(&self, other: &Version) -> bool {\n+        self.major > other.major ||\n+        self.minor > other.minor ||\n+        self.patch > other.patch ||\n+        (match self.tag {\n+            Some(stag) => match other.tag {\n+                Some(otag) => stag > otag,\n+                None => false\n+            },\n+            None => true\n+        })\n+    }\n+    #[inline(always)]\n+    pure fn ge(&self, other: &Version) -> bool {\n+        self.major >= other.major ||\n+        self.minor >= other.minor ||\n+        self.patch >= other.patch ||\n+        (match self.tag {\n+            Some(stag) => match other.tag {\n+                Some(otag) => stag >= otag,\n+                None => false\n+            },\n+            None => true\n+        })\n+    }\n+}\n+\n fn read_whitespace(rdr: io::Reader, ch: char) -> char {\n     let mut nch = ch;\n "}]}