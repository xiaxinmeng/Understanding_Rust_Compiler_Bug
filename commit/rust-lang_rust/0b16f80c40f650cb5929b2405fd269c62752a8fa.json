{"sha": "0b16f80c40f650cb5929b2405fd269c62752a8fa", "node_id": "C_kwDOAAsO6NoAKDBiMTZmODBjNDBmNjUwY2I1OTI5YjI0MDVmZDI2OWM2Mjc1MmE4ZmE", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2023-04-20T17:59:02Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2023-04-20T17:59:02Z"}, "message": "[arithmetic_side_effects] Cache symbols", "tree": {"sha": "70c0c3004fe6ca7a4f566c8d20b75c9b6ef180be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c0c3004fe6ca7a4f566c8d20b75c9b6ef180be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b16f80c40f650cb5929b2405fd269c62752a8fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b16f80c40f650cb5929b2405fd269c62752a8fa", "html_url": "https://github.com/rust-lang/rust/commit/0b16f80c40f650cb5929b2405fd269c62752a8fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b16f80c40f650cb5929b2405fd269c62752a8fa/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06dace2920edb99eab8b2e714d4e2ea7d5684005", "url": "https://api.github.com/repos/rust-lang/rust/commits/06dace2920edb99eab8b2e714d4e2ea7d5684005", "html_url": "https://github.com/rust-lang/rust/commit/06dace2920edb99eab8b2e714d4e2ea7d5684005"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "fafcf2570947166ae20622a0b5e2062cce767271", "filename": "clippy_lints/src/operators/arithmetic_side_effects.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0b16f80c40f650cb5929b2405fd269c62752a8fa/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b16f80c40f650cb5929b2405fd269c62752a8fa/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Farithmetic_side_effects.rs?ref=0b16f80c40f650cb5929b2405fd269c62752a8fa", "patch": "@@ -11,7 +11,10 @@ use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::Ty;\n use rustc_session::impl_lint_pass;\n-use rustc_span::source_map::{Span, Spanned};\n+use rustc_span::{\n+    source_map::{Span, Spanned},\n+    Symbol,\n+};\n \n const HARD_CODED_ALLOWED_BINARY: &[[&str; 2]] = &[\n     [\"f32\", \"f32\"],\n@@ -21,6 +24,7 @@ const HARD_CODED_ALLOWED_BINARY: &[[&str; 2]] = &[\n     [\"std::string::String\", \"&str\"],\n ];\n const HARD_CODED_ALLOWED_UNARY: &[&str] = &[\"f32\", \"f64\", \"std::num::Saturating\", \"std::num::Wrapping\"];\n+const INTEGER_METHODS: &[&str] = &[\"saturating_div\", \"wrapping_div\", \"wrapping_rem\", \"wrapping_rem_euclid\"];\n \n #[derive(Debug)]\n pub struct ArithmeticSideEffects {\n@@ -29,6 +33,7 @@ pub struct ArithmeticSideEffects {\n     // Used to check whether expressions are constants, such as in enum discriminants and consts\n     const_span: Option<Span>,\n     expr_span: Option<Span>,\n+    integer_methods: FxHashSet<Symbol>,\n }\n \n impl_lint_pass!(ArithmeticSideEffects => [ARITHMETIC_SIDE_EFFECTS]);\n@@ -54,6 +59,7 @@ impl ArithmeticSideEffects {\n             allowed_unary,\n             const_span: None,\n             expr_span: None,\n+            integer_methods: INTEGER_METHODS.iter().map(|el| Symbol::intern(el)).collect(),\n         }\n     }\n \n@@ -194,7 +200,6 @@ impl ArithmeticSideEffects {\n         ps: &hir::PathSegment<'tcx>,\n         receiver: &hir::Expr<'tcx>,\n     ) {\n-        const METHODS: &[&str] = &[\"saturating_div\", \"wrapping_div\", \"wrapping_rem\", \"wrapping_rem_euclid\"];\n         let Some(arg) = args.first() else { return; };\n         if constant_simple(cx, cx.typeck_results(), receiver).is_some() {\n             return;\n@@ -203,7 +208,7 @@ impl ArithmeticSideEffects {\n         if !Self::is_integral(instance_ty) {\n             return;\n         }\n-        if METHODS.iter().copied().all(|method| method != ps.ident.as_str()) {\n+        if !self.integer_methods.contains(&ps.ident.name) {\n             return;\n         }\n         let (actual_arg, _) = peel_hir_expr_refs(arg);"}]}