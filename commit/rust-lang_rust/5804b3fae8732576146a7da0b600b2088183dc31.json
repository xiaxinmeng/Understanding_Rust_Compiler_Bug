{"sha": "5804b3fae8732576146a7da0b600b2088183dc31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MDRiM2ZhZTg3MzI1NzYxNDZhN2RhMGI2MDBiMjA4ODE4M2RjMzE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-04T13:24:37Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-04T13:38:08Z"}, "message": "Fix HoverAction::Implementation typo", "tree": {"sha": "38a4c4ab7de241042df86c01cad3889435576f1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38a4c4ab7de241042df86c01cad3889435576f1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5804b3fae8732576146a7da0b600b2088183dc31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5804b3fae8732576146a7da0b600b2088183dc31", "html_url": "https://github.com/rust-lang/rust/commit/5804b3fae8732576146a7da0b600b2088183dc31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5804b3fae8732576146a7da0b600b2088183dc31/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ae0909a1676903baf33999d5f23d51fb838111b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ae0909a1676903baf33999d5f23d51fb838111b", "html_url": "https://github.com/rust-lang/rust/commit/0ae0909a1676903baf33999d5f23d51fb838111b"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "c0786eb51db1b2931b1c2250093348333ff1b86d", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5804b3fae8732576146a7da0b600b2088183dc31/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5804b3fae8732576146a7da0b600b2088183dc31/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=5804b3fae8732576146a7da0b600b2088183dc31", "patch": "@@ -70,7 +70,7 @@ impl HoverConfig {\n #[derive(Debug, Clone)]\n pub enum HoverAction {\n     Runnable(Runnable),\n-    Implementaion(FilePosition),\n+    Implementation(FilePosition),\n     GoToType(Vec<HoverGotoTypeData>),\n }\n \n@@ -116,12 +116,13 @@ pub(crate) fn hover(\n     };\n     if let Some(definition) = definition {\n         if let Some(markup) = hover_for_definition(db, definition) {\n+            let markup = markup.as_str();\n             let markup = if !markdown {\n-                remove_markdown(&markup.as_str())\n+                remove_markdown(markup)\n             } else if links_in_hover {\n-                rewrite_links(db, &markup.as_str(), &definition)\n+                rewrite_links(db, markup, &definition)\n             } else {\n-                remove_links(&markup.as_str())\n+                remove_links(markup)\n             };\n             res.markup = Markup::from(markup);\n             if let Some(action) = show_implementations_action(db, definition) {\n@@ -175,7 +176,7 @@ pub(crate) fn hover(\n \n fn show_implementations_action(db: &RootDatabase, def: Definition) -> Option<HoverAction> {\n     fn to_action(nav_target: NavigationTarget) -> HoverAction {\n-        HoverAction::Implementaion(FilePosition {\n+        HoverAction::Implementation(FilePosition {\n             file_id: nav_target.file_id,\n             offset: nav_target.focus_or_full_range().start(),\n         })\n@@ -1391,7 +1392,7 @@ fn bar() { fo<|>o(); }\n             r\"unsafe trait foo<|>() {}\",\n             expect![[r#\"\n                 [\n-                    Implementaion(\n+                    Implementation(\n                         FilePosition {\n                             file_id: FileId(\n                                 0,\n@@ -2103,7 +2104,7 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n             r#\"trait foo<|>() {}\"#,\n             expect![[r#\"\n                 [\n-                    Implementaion(\n+                    Implementation(\n                         FilePosition {\n                             file_id: FileId(\n                                 0,\n@@ -2122,7 +2123,7 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n             r\"struct foo<|>() {}\",\n             expect![[r#\"\n                 [\n-                    Implementaion(\n+                    Implementation(\n                         FilePosition {\n                             file_id: FileId(\n                                 0,\n@@ -2141,7 +2142,7 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n             r#\"union foo<|>() {}\"#,\n             expect![[r#\"\n                 [\n-                    Implementaion(\n+                    Implementation(\n                         FilePosition {\n                             file_id: FileId(\n                                 0,\n@@ -2160,7 +2161,7 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n             r\"enum foo<|>() { A, B }\",\n             expect![[r#\"\n                 [\n-                    Implementaion(\n+                    Implementation(\n                         FilePosition {\n                             file_id: FileId(\n                                 0,"}, {"sha": "c21ca044ae8780fa7110a5f24b13d6697f01df6a", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5804b3fae8732576146a7da0b600b2088183dc31/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5804b3fae8732576146a7da0b600b2088183dc31/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=5804b3fae8732576146a7da0b600b2088183dc31", "patch": "@@ -1648,7 +1648,7 @@ fn prepare_hover_actions(\n     actions\n         .iter()\n         .filter_map(|it| match it {\n-            HoverAction::Implementaion(position) => show_impl_command_link(snap, position),\n+            HoverAction::Implementation(position) => show_impl_command_link(snap, position),\n             HoverAction::Runnable(r) => runnable_action_links(snap, file_id, r.clone()),\n             HoverAction::GoToType(targets) => goto_type_action_links(snap, targets),\n         })"}]}