{"sha": "9b94a2781357e1965e33e7ca48bdbcd35e9b8dff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliOTRhMjc4MTM1N2UxOTY1ZTMzZTdjYTQ4YmRiY2QzNWU5YjhkZmY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-20T18:09:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-20T18:09:12Z"}, "message": "Merge #8899\n\n8899: minor: Simplify r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "1efcc01c43a7de8fdf996655732866a51da47f87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1efcc01c43a7de8fdf996655732866a51da47f87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b94a2781357e1965e33e7ca48bdbcd35e9b8dff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgpqXICRBK7hj4Ov3rIwAA3YwIADf1ve8t7JY8Bx21jtIwTbQc\nrPhrNRWqKaKCjo6a0T7ME1xygXrnFctcLmewY5naNtOxGS8w+Mhmu8FqUvqfZaga\nMBFU+FegHegs9MpbLqHHPOC+UdSBSiKLldL54YCJ1+66/aij1xwQqaa72Hg5XN+5\nCXFsWBCKVThfQ2pxdH5gM+SDkZcAD27D8PnN6qz3XXx4fHE4h4fTJs3+w12R+os2\nMe4Epi1cgjxd5zhsBZRhdnIyGLdidKD8diWs0ME6cSKEYwiueJUCjdkY/qhnW8kf\nL3j6AIYYQgNz0CNjDDd+TxxIxhs99EWeKQWSBaKwm/ApivWbcBWVfqXDuwqdp68=\n=5SbJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 1efcc01c43a7de8fdf996655732866a51da47f87\nparent 79f50bd5836872a905274fd1d74316f466715032\nparent 9ac5a90522ac54d492b5caec508023de4ca85858\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621534152 +0000\ncommitter GitHub <noreply@github.com> 1621534152 +0000\n\nMerge #8899\n\n8899: minor: Simplify r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b94a2781357e1965e33e7ca48bdbcd35e9b8dff", "html_url": "https://github.com/rust-lang/rust/commit/9b94a2781357e1965e33e7ca48bdbcd35e9b8dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b94a2781357e1965e33e7ca48bdbcd35e9b8dff/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79f50bd5836872a905274fd1d74316f466715032", "url": "https://api.github.com/repos/rust-lang/rust/commits/79f50bd5836872a905274fd1d74316f466715032", "html_url": "https://github.com/rust-lang/rust/commit/79f50bd5836872a905274fd1d74316f466715032"}, {"sha": "9ac5a90522ac54d492b5caec508023de4ca85858", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ac5a90522ac54d492b5caec508023de4ca85858", "html_url": "https://github.com/rust-lang/rust/commit/9ac5a90522ac54d492b5caec508023de4ca85858"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "dfed729dfbec454a2518f284f57997cd2810bdd0", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b94a2781357e1965e33e7ca48bdbcd35e9b8dff/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b94a2781357e1965e33e7ca48bdbcd35e9b8dff/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=9b94a2781357e1965e33e7ca48bdbcd35e9b8dff", "patch": "@@ -384,7 +384,7 @@ impl DefCollector<'_> {\n             if let MacroDirectiveKind::Attr { ast_id, mod_item, attr } = &directive.kind {\n                 self.ignore_attrs_on.insert(ast_id.ast_id.with_value(*mod_item), *attr);\n \n-                let file_id = self.def_map[directive.module_id].definition_source(self.db).file_id;\n+                let file_id = ast_id.ast_id.file_id;\n                 let item_tree = self.db.file_item_tree(file_id);\n                 let mod_dir = self.mod_dirs[&directive.module_id].clone();\n                 ModCollector {\n@@ -938,9 +938,7 @@ impl DefCollector<'_> {\n \n                                 // Resolved to derive helper. Collect the item's attributes again,\n                                 // starting after the derive helper.\n-                                let file_id = self.def_map[directive.module_id]\n-                                    .definition_source(self.db)\n-                                    .file_id;\n+                                let file_id = ast_id.ast_id.file_id;\n                                 let item_tree = self.db.file_item_tree(file_id);\n                                 let mod_dir = self.mod_dirs[&directive.module_id].clone();\n                                 self.ignore_attrs_on.insert(InFile::new(file_id, *mod_item), *attr);"}]}