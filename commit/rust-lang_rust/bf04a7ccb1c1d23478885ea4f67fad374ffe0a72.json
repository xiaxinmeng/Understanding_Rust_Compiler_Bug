{"sha": "bf04a7ccb1c1d23478885ea4f67fad374ffe0a72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMDRhN2NjYjFjMWQyMzQ3ODg4NWVhNGY2N2ZhZDM3NGZmZTBhNzI=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-03T07:45:59Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-09T07:06:29Z"}, "message": "ast: add an `as_str` method to Ident\n\nThis is technically unsafe but interned strings are considered immortal.", "tree": {"sha": "a4fca8ae295651c729a3dd4556db632a527d74d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4fca8ae295651c729a3dd4556db632a527d74d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf04a7ccb1c1d23478885ea4f67fad374ffe0a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf04a7ccb1c1d23478885ea4f67fad374ffe0a72", "html_url": "https://github.com/rust-lang/rust/commit/bf04a7ccb1c1d23478885ea4f67fad374ffe0a72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf04a7ccb1c1d23478885ea4f67fad374ffe0a72/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a02527ae6364175c31a5447dd4e21bb6ac3488", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a02527ae6364175c31a5447dd4e21bb6ac3488", "html_url": "https://github.com/rust-lang/rust/commit/c8a02527ae6364175c31a5447dd4e21bb6ac3488"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "b9bb05d1950cc6147e372d21dc478bb0f5af3240", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf04a7ccb1c1d23478885ea4f67fad374ffe0a72/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf04a7ccb1c1d23478885ea4f67fad374ffe0a72/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=bf04a7ccb1c1d23478885ea4f67fad374ffe0a72", "patch": "@@ -50,6 +50,13 @@ pub struct Ident {\n impl Ident {\n     /// Construct an identifier with the given name and an empty context:\n     pub fn new(name: Name) -> Ident { Ident {name: name, ctxt: EMPTY_CTXT}}\n+\n+    pub fn as_str<'a>(&'a self) -> &'a str {\n+        unsafe {\n+            // FIXME #12938: can't use copy_lifetime since &str isn't a &T\n+            ::std::mem::transmute(token::get_ident(*self).get())\n+        }\n+    }\n }\n \n impl Show for Ident {"}]}