{"sha": "9ad133b4a14191a89687b45fa0deec3c6041a80d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZDEzM2I0YTE0MTkxYTg5Njg3YjQ1ZmEwZGVlYzNjNjA0MWE4MGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-06T22:58:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-08T00:54:33Z"}, "message": "rustdoc: Add a primitive page for raw pointers\n\nCloses #15318", "tree": {"sha": "b1dcbf26dbaf1a572b49802d5d9b08bcbb1d881a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1dcbf26dbaf1a572b49802d5d9b08bcbb1d881a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ad133b4a14191a89687b45fa0deec3c6041a80d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad133b4a14191a89687b45fa0deec3c6041a80d", "html_url": "https://github.com/rust-lang/rust/commit/9ad133b4a14191a89687b45fa0deec3c6041a80d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ad133b4a14191a89687b45fa0deec3c6041a80d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9c7be78dbcd1d39680e95be7e1cd2c7a953c270", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c7be78dbcd1d39680e95be7e1cd2c7a953c270", "html_url": "https://github.com/rust-lang/rust/commit/c9c7be78dbcd1d39680e95be7e1cd2c7a953c270"}], "stats": {"total": 95, "additions": 90, "deletions": 5}, "files": [{"sha": "301ce2b6f14ed8da5b982a2d7d80f987bea97cd8", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -1167,6 +1167,7 @@ fn document(config: &Config, props: &TestProps,\n             testfile: &Path, extra_args: &[String]) -> (ProcRes, PathBuf) {\n     let aux_dir = aux_output_dir_name(config, testfile);\n     let out_dir = output_base_name(config, testfile);\n+    let _ = fs::remove_dir_all(&out_dir);\n     ensure_dir(&out_dir);\n     let mut args = vec![\"-L\".to_string(),\n                         aux_dir.to_str().unwrap().to_string(),"}, {"sha": "2acee8a97f59f344a57f65f3b7fac89f0bf79d36", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -186,7 +186,8 @@ def concat_multi_lines(f):\n \n         firstlineno = firstlineno or lineno\n         if line.endswith('\\\\'):\n-            lastline = line[:-1]\n+            if lastline is None:\n+                lastline = line[:-1]\n             catenated += line[:-1]\n         else:\n             yield firstlineno, catenated + line"}, {"sha": "10cd793a3d286709f4862a9cad7c8b09495a2f1b", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -89,6 +89,7 @@\n //! of unsafe pointers in Rust.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n+#![doc(primitive = \"pointer\")]\n \n use mem;\n use clone::Clone;"}, {"sha": "3248bb4d41d43526173070dbc26f0c0a79990893", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -1368,6 +1368,7 @@ pub enum PrimitiveType {\n     Slice,\n     Array,\n     PrimitiveTuple,\n+    PrimitiveRawPointer,\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, Copy, Debug)]\n@@ -1404,6 +1405,7 @@ impl PrimitiveType {\n             \"array\" => Some(Array),\n             \"slice\" => Some(Slice),\n             \"tuple\" => Some(PrimitiveTuple),\n+            \"pointer\" => Some(PrimitiveRawPointer),\n             _ => None,\n         }\n     }\n@@ -1449,6 +1451,7 @@ impl PrimitiveType {\n             Array => \"array\",\n             Slice => \"slice\",\n             PrimitiveTuple => \"tuple\",\n+            PrimitiveRawPointer => \"pointer\",\n         }\n     }\n "}, {"sha": "a52c996bdb7d418a0b8cb4c207eedda2a6ee6059", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -491,7 +491,8 @@ impl fmt::Display for clean::Type {\n             }\n             clean::Bottom => f.write_str(\"!\"),\n             clean::RawPointer(m, ref t) => {\n-                write!(f, \"*{}{}\", RawMutableSpace(m), **t)\n+                primitive_link(f, clean::PrimitiveType::PrimitiveRawPointer,\n+                               &format!(\"*{}{}\", RawMutableSpace(m), **t))\n             }\n             clean::BorrowedRef{ lifetime: ref l, mutability, type_: ref ty} => {\n                 let lt = match *l {"}, {"sha": "40cc44d20eb1a3f9a8e39bcd2d31957ea53cc555", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -1028,7 +1028,8 @@ impl DocFolder for Cache {\n                     clean::Item{ attrs, inner: clean::ImplItem(i), .. } => {\n                         use clean::{Primitive, Vector, ResolvedPath, BorrowedRef};\n                         use clean::PrimitiveType::{Array, Slice, PrimitiveTuple};\n-                        use clean::{FixedVector, Tuple};\n+                        use clean::PrimitiveType::{PrimitiveRawPointer};\n+                        use clean::{FixedVector, Tuple, RawPointer};\n \n                         // extract relevant documentation for this impl\n                         let dox = match attrs.into_iter().find(|a| {\n@@ -1064,8 +1065,8 @@ impl DocFolder for Cache {\n                                 Some(ast_util::local_def(Array.to_node_id()))\n                             }\n \n-                            // In a DST world, we may only need Vector, but for now we\n-                            // also pick up borrowed references\n+                            // In a DST world, we may only need Vector, but for\n+                            // now we also pick up borrowed references\n                             Vector(..) |\n                                 BorrowedRef{ type_: box Vector(..), ..  } =>\n                             {\n@@ -1077,6 +1078,11 @@ impl DocFolder for Cache {\n                                 Some(ast_util::local_def(id))\n                             }\n \n+                            RawPointer(..) => {\n+                                let id = PrimitiveRawPointer.to_node_id();\n+                                Some(ast_util::local_def(id))\n+                            }\n+\n                             _ => None,\n                         };\n "}, {"sha": "9e42dbfbc6be41f5d5b50035a792ea249197a9b7", "filename": "src/test/auxiliary/issue-15318.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Fauxiliary%2Fissue-15318.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Fauxiliary%2Fissue-15318.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-15318.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![doc(html_root_url = \"http://example.com/\")]\n+\n+/// dox\n+#[doc(primitive = \"pointer\")]\n+pub mod ptr {}"}, {"sha": "29a8b4cea4c958cf37c92a6f106656f2ae0bd09a", "filename": "src/test/rustdoc/issue-15318-2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Frustdoc%2Fissue-15318-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Frustdoc%2Fissue-15318-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-15318-2.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-15318.rs\n+\n+extern crate issue_15318;\n+\n+pub use issue_15318::ptr;\n+\n+// @has issue_15318_2/fn.bar.html \\\n+//          '//*[@href=\"primitive.pointer.html\"]' \\\n+//          '*mut T'\n+pub fn bar<T>(ptr: *mut T) {}\n+"}, {"sha": "a54824970c751da11aa9978367d9fad1cf35637f", "filename": "src/test/rustdoc/issue-15318-3.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Frustdoc%2Fissue-15318-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Frustdoc%2Fissue-15318-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-15318-3.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// @has issue_15318_3/primitive.pointer.html\n+\n+/// dox\n+#[doc(primitive = \"pointer\")]\n+pub mod ptr {}"}, {"sha": "86a0b1d72a3503a3e80c54bb7f6020441a5c6938", "filename": "src/test/rustdoc/issue-15318.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Frustdoc%2Fissue-15318.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ad133b4a14191a89687b45fa0deec3c6041a80d/src%2Ftest%2Frustdoc%2Fissue-15318.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-15318.rs?ref=9ad133b4a14191a89687b45fa0deec3c6041a80d", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-15318.rs\n+\n+#![feature(no_std)]\n+#![no_std]\n+\n+extern crate issue_15318;\n+\n+// @has issue_15318/fn.bar.html \\\n+//      '//*[@href=\"http://example.com/issue_15318/primitive.pointer.html\"]' \\\n+//      '*mut T'\n+pub fn bar<T>(ptr: *mut T) {}"}]}