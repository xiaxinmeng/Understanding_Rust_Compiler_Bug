{"sha": "02134611cefa7c0d45503c91375653af216a40bc", "node_id": "C_kwDOAAsO6NoAKDAyMTM0NjExY2VmYTdjMGQ0NTUwM2M5MTM3NTY1M2FmMjE2YTQwYmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-01T15:10:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-01T15:10:25Z"}, "message": "Rollup merge of #111057 - xfix:tcpstream-as-raw-fd-inline, r=m-ou-se\n\nMake sure the implementation of TcpStream::as_raw_fd is fully inlined\n\nCurrently the following function:\n\n```rust\nuse std::os::fd::{AsRawFd, RawFd};\nuse std::net::TcpStream;\n\npub fn as_raw_fd(socket: &TcpStream) -> RawFd {\n    socket.as_raw_fd()\n}\n```\n\nIs optimized to the following:\n\n```asm\nexample::as_raw_fd:\n        push    rax\n        call    qword ptr [rip + <std::net::tcp::TcpStream as std::sys_common::AsInner<std::sys_common::net::TcpStream>>::as_inner@GOTPCREL]\n        mov     rdi, rax\n        call    qword ptr [rip + std::sys_common::net::TcpStream::socket@GOTPCREL]\n        mov     rdi, rax\n        pop     rax\n        jmp     qword ptr [rip + _ZN73_$LT$std..sys..unix..net..Socket$u20$as$u20$std..os..fd..raw..AsRawFd$GT$9as_raw_fd17h633bcf7e481df8bbE@GOTPCREL]\n```\n\nI think it would make more sense to inline trivial functions used within `TcpStream::AsRawFd`.", "tree": {"sha": "5037496dd39f48c4b8270edb6e53e567bc097913", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5037496dd39f48c4b8270edb6e53e567bc097913"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02134611cefa7c0d45503c91375653af216a40bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkT9ZhCRBK7hj4Ov3rIwAAkkUIAD5a374m21ALoqWYQ7Xgd+sN\nepuWnnyFaOkI3SLlxBwUlNa9CJ14NHul+cfDi4UGsPCRIemztnLuwW+IcWPfYc02\nbV7FIHG99lLBLeQcY3jpimuwbdFt/DKIQAWGhNH+1jQICa2LRvkukRtJsfVgQORl\nnJaPS1k3Ze6pg42QEtT4cqKZMHNTnghWEexIUPH4GDlSP9AxWvjcceb/c4QhT0ek\new/M5yoGdUXVgNJo1Ly7nsnGw2VOPfqZsEby3pTnjn3ZGROpI4Ldox/7SVuxTnPS\nFPlHperKU2tE8WJ5J2HBAIklwUpGsFs7+aAJOQqU1g9hnynaGQTHQOmxq0NIVUU=\n=vwFX\n-----END PGP SIGNATURE-----\n", "payload": "tree 5037496dd39f48c4b8270edb6e53e567bc097913\nparent 0a2562bf4de82b897beacf788e153f5738458325\nparent 500a8e13361787ad24c9ee88f8345d853ff628d3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682953825 +0200\ncommitter GitHub <noreply@github.com> 1682953825 +0200\n\nRollup merge of #111057 - xfix:tcpstream-as-raw-fd-inline, r=m-ou-se\n\nMake sure the implementation of TcpStream::as_raw_fd is fully inlined\n\nCurrently the following function:\n\n```rust\nuse std::os::fd::{AsRawFd, RawFd};\nuse std::net::TcpStream;\n\npub fn as_raw_fd(socket: &TcpStream) -> RawFd {\n    socket.as_raw_fd()\n}\n```\n\nIs optimized to the following:\n\n```asm\nexample::as_raw_fd:\n        push    rax\n        call    qword ptr [rip + <std::net::tcp::TcpStream as std::sys_common::AsInner<std::sys_common::net::TcpStream>>::as_inner@GOTPCREL]\n        mov     rdi, rax\n        call    qword ptr [rip + std::sys_common::net::TcpStream::socket@GOTPCREL]\n        mov     rdi, rax\n        pop     rax\n        jmp     qword ptr [rip + _ZN73_$LT$std..sys..unix..net..Socket$u20$as$u20$std..os..fd..raw..AsRawFd$GT$9as_raw_fd17h633bcf7e481df8bbE@GOTPCREL]\n```\n\nI think it would make more sense to inline trivial functions used within `TcpStream::AsRawFd`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02134611cefa7c0d45503c91375653af216a40bc", "html_url": "https://github.com/rust-lang/rust/commit/02134611cefa7c0d45503c91375653af216a40bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02134611cefa7c0d45503c91375653af216a40bc/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2562bf4de82b897beacf788e153f5738458325", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2562bf4de82b897beacf788e153f5738458325", "html_url": "https://github.com/rust-lang/rust/commit/0a2562bf4de82b897beacf788e153f5738458325"}, {"sha": "500a8e13361787ad24c9ee88f8345d853ff628d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/500a8e13361787ad24c9ee88f8345d853ff628d3", "html_url": "https://github.com/rust-lang/rust/commit/500a8e13361787ad24c9ee88f8345d853ff628d3"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "6640c7fb1621420de49fad602957c66f5cc9cdad", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -709,6 +709,7 @@ impl File {\n // `AsRawHandle`/`IntoRawHandle`/`FromRawHandle` on Windows.\n \n impl AsInner<fs_imp::File> for File {\n+    #[inline]\n     fn as_inner(&self) -> &fs_imp::File {\n         &self.inner\n     }\n@@ -1087,12 +1088,14 @@ impl OpenOptions {\n }\n \n impl AsInner<fs_imp::OpenOptions> for OpenOptions {\n+    #[inline]\n     fn as_inner(&self) -> &fs_imp::OpenOptions {\n         &self.0\n     }\n }\n \n impl AsInnerMut<fs_imp::OpenOptions> for OpenOptions {\n+    #[inline]\n     fn as_inner_mut(&mut self) -> &mut fs_imp::OpenOptions {\n         &mut self.0\n     }\n@@ -1352,6 +1355,7 @@ impl fmt::Debug for Metadata {\n }\n \n impl AsInner<fs_imp::FileAttr> for Metadata {\n+    #[inline]\n     fn as_inner(&self) -> &fs_imp::FileAttr {\n         &self.0\n     }\n@@ -1604,6 +1608,7 @@ impl FileType {\n }\n \n impl AsInner<fs_imp::FileType> for FileType {\n+    #[inline]\n     fn as_inner(&self) -> &fs_imp::FileType {\n         &self.0\n     }\n@@ -1616,6 +1621,7 @@ impl FromInner<fs_imp::FilePermissions> for Permissions {\n }\n \n impl AsInner<fs_imp::FilePermissions> for Permissions {\n+    #[inline]\n     fn as_inner(&self) -> &fs_imp::FilePermissions {\n         &self.0\n     }\n@@ -1770,6 +1776,7 @@ impl fmt::Debug for DirEntry {\n }\n \n impl AsInner<fs_imp::DirEntry> for DirEntry {\n+    #[inline]\n     fn as_inner(&self) -> &fs_imp::DirEntry {\n         &self.0\n     }\n@@ -2510,6 +2517,7 @@ impl DirBuilder {\n }\n \n impl AsInnerMut<fs_imp::DirBuilder> for DirBuilder {\n+    #[inline]\n     fn as_inner_mut(&mut self) -> &mut fs_imp::DirBuilder {\n         &mut self.inner\n     }"}, {"sha": "541e95d229b62528d9db7650aa7b991c027d1c60", "filename": "library/std/src/net/tcp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -691,6 +691,7 @@ impl Write for &TcpStream {\n }\n \n impl AsInner<net_imp::TcpStream> for TcpStream {\n+    #[inline]\n     fn as_inner(&self) -> &net_imp::TcpStream {\n         &self.0\n     }\n@@ -1033,6 +1034,7 @@ impl Iterator for IntoIncoming {\n impl FusedIterator for IntoIncoming {}\n \n impl AsInner<net_imp::TcpListener> for TcpListener {\n+    #[inline]\n     fn as_inner(&self) -> &net_imp::TcpListener {\n         &self.0\n     }"}, {"sha": "9628bcc51083d16aa4a709ebfaceac1cfcf649ec", "filename": "library/std/src/net/udp.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fudp.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -788,6 +788,7 @@ impl UdpSocket {\n // `AsRawSocket`/`IntoRawSocket`/`FromRawSocket` on Windows.\n \n impl AsInner<net_imp::UdpSocket> for UdpSocket {\n+    #[inline]\n     fn as_inner(&self) -> &net_imp::UdpSocket {\n         &self.0\n     }"}, {"sha": "2b3ff76d7a4a795523b126a8b9cb6d745e937ba3", "filename": "library/std/src/os/linux/process.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fos%2Flinux%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fos%2Flinux%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Flinux%2Fprocess.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -52,6 +52,7 @@ pub struct PidFd {\n }\n \n impl AsInner<FileDesc> for PidFd {\n+    #[inline]\n     fn as_inner(&self) -> &FileDesc {\n         &self.inner\n     }\n@@ -70,6 +71,7 @@ impl IntoInner<FileDesc> for PidFd {\n }\n \n impl AsRawFd for PidFd {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.as_inner().as_raw_fd()\n     }"}, {"sha": "bf22c2d46c9e03c3db408fe043d27ce1f44131de", "filename": "library/std/src/process.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -211,6 +211,7 @@ pub struct Child {\n impl crate::sealed::Sealed for Child {}\n \n impl AsInner<imp::Process> for Child {\n+    #[inline]\n     fn as_inner(&self) -> &imp::Process {\n         &self.handle\n     }\n@@ -304,6 +305,7 @@ impl Write for &ChildStdin {\n }\n \n impl AsInner<AnonPipe> for ChildStdin {\n+    #[inline]\n     fn as_inner(&self) -> &AnonPipe {\n         &self.inner\n     }\n@@ -373,6 +375,7 @@ impl Read for ChildStdout {\n }\n \n impl AsInner<AnonPipe> for ChildStdout {\n+    #[inline]\n     fn as_inner(&self) -> &AnonPipe {\n         &self.inner\n     }\n@@ -438,6 +441,7 @@ impl Read for ChildStderr {\n }\n \n impl AsInner<AnonPipe> for ChildStderr {\n+    #[inline]\n     fn as_inner(&self) -> &AnonPipe {\n         &self.inner\n     }\n@@ -1107,12 +1111,14 @@ impl fmt::Debug for Command {\n }\n \n impl AsInner<imp::Command> for Command {\n+    #[inline]\n     fn as_inner(&self) -> &imp::Command {\n         &self.inner\n     }\n }\n \n impl AsInnerMut<imp::Command> for Command {\n+    #[inline]\n     fn as_inner_mut(&mut self) -> &mut imp::Command {\n         &mut self.inner\n     }\n@@ -1605,6 +1611,7 @@ impl ExitStatus {\n }\n \n impl AsInner<imp::ExitStatus> for ExitStatus {\n+    #[inline]\n     fn as_inner(&self) -> &imp::ExitStatus {\n         &self.0\n     }\n@@ -1884,6 +1891,7 @@ impl From<u8> for ExitCode {\n }\n \n impl AsInner<imp::ExitCode> for ExitCode {\n+    #[inline]\n     fn as_inner(&self) -> &imp::ExitCode {\n         &self.0\n     }"}, {"sha": "ccde05aa1d7db6026376ca8b4a0d281b38583283", "filename": "library/std/src/sys/hermit/fd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffd.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -75,6 +75,7 @@ impl FromRawFd for FileDesc {\n }\n \n impl AsInner<OwnedFd> for FileDesc {\n+    #[inline]\n     fn as_inner(&self) -> &OwnedFd {\n         &self.fd\n     }"}, {"sha": "4bb735668d24c0dfa4a24a69fd4afa3de6001503", "filename": "library/std/src/sys/hermit/fs.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffs.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -367,12 +367,14 @@ impl DirBuilder {\n }\n \n impl AsInner<FileDesc> for File {\n+    #[inline]\n     fn as_inner(&self) -> &FileDesc {\n         &self.0\n     }\n }\n \n impl AsInnerMut<FileDesc> for File {\n+    #[inline]\n     fn as_inner_mut(&mut self) -> &mut FileDesc {\n         &mut self.0\n     }\n@@ -397,6 +399,7 @@ impl AsFd for File {\n }\n \n impl AsRawFd for File {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.0.as_raw_fd()\n     }"}, {"sha": "8c2d489d6a36258387693c281ce5bcb6ec763895", "filename": "library/std/src/sys/hermit/net.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -340,6 +340,7 @@ impl Socket {\n }\n \n impl AsInner<FileDesc> for Socket {\n+    #[inline]\n     fn as_inner(&self) -> &FileDesc {\n         &self.0\n     }\n@@ -364,6 +365,7 @@ impl AsFd for Socket {\n }\n \n impl AsRawFd for Socket {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.0.as_raw_fd()\n     }"}, {"sha": "b3686d0e28328d8fc41c3e50011db5ae26724ebe", "filename": "library/std/src/sys/sgx/fd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Ffd.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -62,6 +62,7 @@ impl FileDesc {\n }\n \n impl AsInner<Fd> for FileDesc {\n+    #[inline]\n     fn as_inner(&self) -> &Fd {\n         &self.fd\n     }"}, {"sha": "03620a08f2c03ee56a8cde86624cf626ff80ccf6", "filename": "library/std/src/sys/sgx/net.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fnet.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -24,6 +24,7 @@ impl Socket {\n }\n \n impl AsInner<FileDesc> for Socket {\n+    #[inline]\n     fn as_inner(&self) -> &FileDesc {\n         &self.inner\n     }\n@@ -220,6 +221,7 @@ impl TcpStream {\n }\n \n impl AsInner<Socket> for TcpStream {\n+    #[inline]\n     fn as_inner(&self) -> &Socket {\n         &self.inner\n     }\n@@ -304,6 +306,7 @@ impl TcpListener {\n }\n \n impl AsInner<Socket> for TcpListener {\n+    #[inline]\n     fn as_inner(&self) -> &Socket {\n         &self.inner\n     }"}, {"sha": "0bd2bc3b961998557a422937c816e922471e1fb3", "filename": "library/std/src/sys/solid/net.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fnet.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -112,6 +112,7 @@ impl FileDesc {\n }\n \n impl AsInner<c_int> for FileDesc {\n+    #[inline]\n     fn as_inner(&self) -> &c_int {\n         &self.fd\n     }\n@@ -462,6 +463,7 @@ impl Socket {\n }\n \n impl AsInner<c_int> for Socket {\n+    #[inline]\n     fn as_inner(&self) -> &c_int {\n         self.0.as_inner()\n     }"}, {"sha": "45f96478fc373ef64de365f7f0115a30ec04e27a", "filename": "library/std/src/sys/unix/fd.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffd.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -481,6 +481,7 @@ impl<'a> Read for &'a FileDesc {\n }\n \n impl AsInner<OwnedFd> for FileDesc {\n+    #[inline]\n     fn as_inner(&self) -> &OwnedFd {\n         &self.0\n     }\n@@ -505,6 +506,7 @@ impl AsFd for FileDesc {\n }\n \n impl AsRawFd for FileDesc {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.0.as_raw_fd()\n     }"}, {"sha": "b398fd5eb24bf649b837ee4c6177ab105e7439e5", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -547,6 +547,7 @@ impl FileAttr {\n }\n \n impl AsInner<stat64> for FileAttr {\n+    #[inline]\n     fn as_inner(&self) -> &stat64 {\n         &self.stat\n     }\n@@ -1269,12 +1270,14 @@ impl DirBuilder {\n }\n \n impl AsInner<FileDesc> for File {\n+    #[inline]\n     fn as_inner(&self) -> &FileDesc {\n         &self.0\n     }\n }\n \n impl AsInnerMut<FileDesc> for File {\n+    #[inline]\n     fn as_inner_mut(&mut self) -> &mut FileDesc {\n         &mut self.0\n     }\n@@ -1299,6 +1302,7 @@ impl AsFd for File {\n }\n \n impl AsRawFd for File {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.0.as_raw_fd()\n     }"}, {"sha": "ee016887e70215b12806102e79be0cdc3c948d58", "filename": "library/std/src/sys/unix/l4re.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -129,6 +129,7 @@ pub mod net {\n     }\n \n     impl AsInner<FileDesc> for Socket {\n+        #[inline]\n         fn as_inner(&self) -> &FileDesc {\n             &self.0\n         }\n@@ -153,6 +154,7 @@ pub mod net {\n     }\n \n     impl AsRawFd for Socket {\n+        #[inline]\n         fn as_raw_fd(&self) -> RawFd {\n             self.0.as_raw_fd()\n         }\n@@ -183,6 +185,7 @@ pub mod net {\n             unimpl!();\n         }\n \n+        #[inline]\n         pub fn socket(&self) -> &Socket {\n             &self.inner\n         }\n@@ -305,6 +308,7 @@ pub mod net {\n             unimpl!();\n         }\n \n+        #[inline]\n         pub fn socket(&self) -> &Socket {\n             &self.inner\n         }\n@@ -371,6 +375,7 @@ pub mod net {\n             unimpl!();\n         }\n \n+        #[inline]\n         pub fn socket(&self) -> &Socket {\n             &self.inner\n         }"}, {"sha": "39edb136c24fdfdc4291ef483ce6c45d3dd352ef", "filename": "library/std/src/sys/unix/net.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -490,6 +490,7 @@ impl Socket {\n }\n \n impl AsInner<FileDesc> for Socket {\n+    #[inline]\n     fn as_inner(&self) -> &FileDesc {\n         &self.0\n     }\n@@ -514,6 +515,7 @@ impl AsFd for Socket {\n }\n \n impl AsRawFd for Socket {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.0.as_raw_fd()\n     }"}, {"sha": "488217f39413f052244d77b4cd946e0cadee61ab", "filename": "library/std/src/sys/unix/os_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos_str.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -89,6 +89,7 @@ impl IntoInner<Vec<u8>> for Buf {\n }\n \n impl AsInner<[u8]> for Buf {\n+    #[inline]\n     fn as_inner(&self) -> &[u8] {\n         &self.inner\n     }"}, {"sha": "938a46bfdd833d21160be6bd2b183e0ded3d322e", "filename": "library/std/src/sys/unix/pipe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fpipe.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -135,6 +135,7 @@ pub fn read2(p1: AnonPipe, v1: &mut Vec<u8>, p2: AnonPipe, v2: &mut Vec<u8>) ->\n }\n \n impl AsRawFd for AnonPipe {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.0.as_raw_fd()\n     }"}, {"sha": "9a8b2a0be5b000bb9253e93eaabddbfeb60f9912", "filename": "library/std/src/sys/wasi/fd.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffd.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -275,12 +275,14 @@ impl WasiFd {\n }\n \n impl AsInner<OwnedFd> for WasiFd {\n+    #[inline]\n     fn as_inner(&self) -> &OwnedFd {\n         &self.fd\n     }\n }\n \n impl AsInnerMut<OwnedFd> for WasiFd {\n+    #[inline]\n     fn as_inner_mut(&mut self) -> &mut OwnedFd {\n         &mut self.fd\n     }\n@@ -305,6 +307,7 @@ impl AsFd for WasiFd {\n }\n \n impl AsRawFd for WasiFd {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.fd.as_raw_fd()\n     }"}, {"sha": "8d1dbf59155a4e7619a1c03b44591a1f19fcf49e", "filename": "library/std/src/sys/wasi/fs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -498,6 +498,7 @@ impl File {\n }\n \n impl AsInner<WasiFd> for File {\n+    #[inline]\n     fn as_inner(&self) -> &WasiFd {\n         &self.fd\n     }\n@@ -522,6 +523,7 @@ impl AsFd for File {\n }\n \n impl AsRawFd for File {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.fd.as_raw_fd()\n     }"}, {"sha": "2239880ffbef45079d504387ac2368469a50850d", "filename": "library/std/src/sys/wasi/net.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fnet.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -17,6 +17,7 @@ pub struct TcpStream {\n }\n \n impl AsInner<WasiFd> for Socket {\n+    #[inline]\n     fn as_inner(&self) -> &WasiFd {\n         &self.0\n     }\n@@ -41,6 +42,7 @@ impl AsFd for Socket {\n }\n \n impl AsRawFd for Socket {\n+    #[inline]\n     fn as_raw_fd(&self) -> RawFd {\n         self.0.as_raw_fd()\n     }\n@@ -184,6 +186,7 @@ impl TcpStream {\n         }\n     }\n \n+    #[inline]\n     pub fn socket(&self) -> &Socket {\n         &self.inner\n     }\n@@ -274,6 +277,7 @@ impl TcpListener {\n         }\n     }\n \n+    #[inline]\n     pub fn socket(&self) -> &Socket {\n         &self.inner\n     }\n@@ -284,6 +288,7 @@ impl TcpListener {\n }\n \n impl AsInner<Socket> for TcpListener {\n+    #[inline]\n     fn as_inner(&self) -> &Socket {\n         &self.inner\n     }\n@@ -436,6 +441,7 @@ impl UdpSocket {\n         unsupported()\n     }\n \n+    #[inline]\n     pub fn socket(&self) -> &Socket {\n         &self.inner\n     }\n@@ -446,6 +452,7 @@ impl UdpSocket {\n }\n \n impl AsInner<Socket> for UdpSocket {\n+    #[inline]\n     fn as_inner(&self) -> &Socket {\n         &self.inner\n     }"}, {"sha": "f99cdfbecfb696d98ab82980037e1accda2555f7", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -832,6 +832,7 @@ fn open_link_no_reparse(parent: &File, name: &[u16], access: u32) -> io::Result<\n }\n \n impl AsInner<Handle> for File {\n+    #[inline]\n     fn as_inner(&self) -> &Handle {\n         &self.handle\n     }"}, {"sha": "c7677d1c13abb8b38c08e74ef43ae55a35127645", "filename": "library/std/src/sys/windows/handle.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fhandle.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -34,6 +34,7 @@ impl Handle {\n }\n \n impl AsInner<OwnedHandle> for Handle {\n+    #[inline]\n     fn as_inner(&self) -> &OwnedHandle {\n         &self.0\n     }"}, {"sha": "8158713fa84a828b725a89230c570a76d8b964cd", "filename": "library/std/src/sys/windows/net.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fnet.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -446,6 +446,7 @@ impl<'a> Read for &'a Socket {\n }\n \n impl AsInner<OwnedSocket> for Socket {\n+    #[inline]\n     fn as_inner(&self) -> &OwnedSocket {\n         &self.0\n     }"}, {"sha": "2f2b0e56e0889e3ac3e4b75aafa652d5aa4b794c", "filename": "library/std/src/sys/windows/os_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fos_str.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -27,6 +27,7 @@ impl FromInner<Wtf8Buf> for Buf {\n }\n \n impl AsInner<Wtf8> for Buf {\n+    #[inline]\n     fn as_inner(&self) -> &Wtf8 {\n         &self.inner\n     }"}, {"sha": "652c695fc57b00d6c93e6b46fbf3fe703c083b66", "filename": "library/std/src/sys_common/net.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys_common%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys_common%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fnet.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -239,6 +239,7 @@ impl TcpStream {\n         Ok(TcpStream { inner: sock })\n     }\n \n+    #[inline]\n     pub fn socket(&self) -> &Socket {\n         &self.inner\n     }\n@@ -352,6 +353,7 @@ impl TcpStream {\n }\n \n impl AsInner<Socket> for TcpStream {\n+    #[inline]\n     fn as_inner(&self) -> &Socket {\n         &self.inner\n     }\n@@ -427,6 +429,7 @@ impl TcpListener {\n         Ok(TcpListener { inner: sock })\n     }\n \n+    #[inline]\n     pub fn socket(&self) -> &Socket {\n         &self.inner\n     }\n@@ -517,6 +520,7 @@ impl UdpSocket {\n         Ok(UdpSocket { inner: sock })\n     }\n \n+    #[inline]\n     pub fn socket(&self) -> &Socket {\n         &self.inner\n     }"}, {"sha": "ff96c35fb0ba6386085ec32be39efc20acc6868d", "filename": "library/std/src/sys_common/wtf8.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02134611cefa7c0d45503c91375653af216a40bc/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs?ref=02134611cefa7c0d45503c91375653af216a40bc", "patch": "@@ -501,6 +501,7 @@ pub struct Wtf8 {\n }\n \n impl AsInner<[u8]> for Wtf8 {\n+    #[inline]\n     fn as_inner(&self) -> &[u8] {\n         &self.bytes\n     }"}]}