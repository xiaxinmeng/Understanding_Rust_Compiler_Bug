{"sha": "d21c02396419d905344baeeb6186343d8038c5ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMWMwMjM5NjQxOWQ5MDUzNDRiYWVlYjYxODYzNDNkODAzOGM1ZWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-13T11:34:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-13T11:34:11Z"}, "message": "Auto merge of #45055 - GuillaumeGomez:search-tabs, r=QuietMisdreavus\n\nAdd tabs for search for better information access\n\nA few screenshots:\n\n<img width=\"1440\" alt=\"screen shot 2017-10-06 at 00 54 51\" src=\"https://user-images.githubusercontent.com/3050060/31256148-032c1a06-aa31-11e7-8e4c-fec59786b8e6.png\">\n<img width=\"1440\" alt=\"screen shot 2017-10-06 at 00 54 58\" src=\"https://user-images.githubusercontent.com/3050060/31256150-03312cb2-aa31-11e7-86f7-8c9f0d8d6d4f.png\">\n<img width=\"1440\" alt=\"screen shot 2017-10-06 at 00 55 00\" src=\"https://user-images.githubusercontent.com/3050060/31256149-0330d456-aa31-11e7-8f89-3b3c824e30b4.png\">\n\nr? @rust-lang/docs\n\ncc @killercup @QuietMisdreavus", "tree": {"sha": "63cbdc48bb81de94ae93976eb0f9869d401aa25a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63cbdc48bb81de94ae93976eb0f9869d401aa25a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d21c02396419d905344baeeb6186343d8038c5ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d21c02396419d905344baeeb6186343d8038c5ef", "html_url": "https://github.com/rust-lang/rust/commit/d21c02396419d905344baeeb6186343d8038c5ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d21c02396419d905344baeeb6186343d8038c5ef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43d95e2ce9e23940759dc529d6ea76c06ce27d4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/43d95e2ce9e23940759dc529d6ea76c06ce27d4d", "html_url": "https://github.com/rust-lang/rust/commit/43d95e2ce9e23940759dc529d6ea76c06ce27d4d"}, {"sha": "3a65d12df75751616d28d3d9f6e01c0dd0b898cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a65d12df75751616d28d3d9f6e01c0dd0b898cd", "html_url": "https://github.com/rust-lang/rust/commit/3a65d12df75751616d28d3d9f6e01c0dd0b898cd"}], "stats": {"total": 197, "additions": 175, "deletions": 22}, "files": [{"sha": "bccad6c89dc4fa3ada9f74606f030c7376897f29", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 145, "deletions": 22, "changes": 167, "blob_url": "https://github.com/rust-lang/rust/blob/d21c02396419d905344baeeb6186343d8038c5ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/d21c02396419d905344baeeb6186343d8038c5ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=d21c02396419d905344baeeb6186343d8038c5ef", "patch": "@@ -342,6 +342,17 @@\n                 }\n             }\n \n+            function findArg(obj, val) {\n+                if (obj && obj.type && obj.type.inputs.length > 0) {\n+                    for (var i = 0; i < obj.type.inputs.length; i++) {\n+                        if (obj.type.inputs[i].name === val) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+                return false;\n+            }\n+\n             function typePassesFilter(filter, type) {\n                 // No filter\n                 if (filter < 0) return true;\n@@ -376,18 +387,28 @@\n                         if (typePassesFilter(typeFilter, searchIndex[i].ty)) {\n                             results.push({id: i, index: -1});\n                         }\n+                    } else if (findArg(searchIndex[i], val.toLowerCase()) ||\n+                               (searchIndex[i].type &&\n+                                searchIndex[i].type.output &&\n+                                searchIndex[i].type.output.name === val.toLowerCase())) {\n+                        if (typePassesFilter(typeFilter, searchIndex[i].ty)) {\n+                            results.push({id: i, index: -1, dontValidate: true});\n+                        }\n                     }\n                     if (results.length === max) {\n                         break;\n                     }\n                 }\n+                query.inputs = [val];\n+                query.output = val;\n+                query.search = val;\n             // searching by type\n             } else if (val.search(\"->\") > -1) {\n                 var trimmer = function (s) { return s.trim(); };\n                 var parts = val.split(\"->\").map(trimmer);\n                 var input = parts[0];\n                 // sort inputs so that order does not matter\n-                var inputs = input.split(\",\").map(trimmer).sort().toString();\n+                var inputs = input.split(\",\").map(trimmer).sort();\n                 var output = parts[1];\n \n                 for (var i = 0; i < nSearchWords; ++i) {\n@@ -403,12 +424,30 @@\n \n                     // allow searching for void (no output) functions as well\n                     var typeOutput = type.output ? type.output.name : \"\";\n-                    if ((inputs === \"*\" || inputs === typeInputs.toString()) &&\n-                        (output === \"*\" || output == typeOutput)) {\n-                        results.push({id: i, index: -1, dontValidate: true});\n+                    if (output === \"*\" || output == typeOutput) {\n+                        if (input === \"*\") {\n+                            results.push({id: i, index: -1, dontValidate: true});\n+                        } else {\n+                            var allFound = true;\n+                            for (var it = 0; allFound === true && it < inputs.length; it++) {\n+                                var found = false;\n+                                for (var y = 0; found === false && y < typeInputs.length; y++) {\n+                                    found = typeInputs[y] === inputs[it];\n+                                }\n+                                allFound = found;\n+                            }\n+                            if (allFound === true) {\n+                                results.push({id: i, index: -1, dontValidate: true});\n+                            }\n+                        }\n                     }\n                 }\n+                query.inputs = inputs;\n+                query.output = output;\n             } else {\n+                query.inputs = [val];\n+                query.output = val;\n+                query.search = val;\n                 // gather matching search results up to a certain maximum\n                 val = val.replace(/\\_/g, \"\");\n                 for (var i = 0; i < split.length; ++i) {\n@@ -437,6 +476,15 @@\n                                     lev: lev_distance,\n                                 });\n                             }\n+                        } else if (findArg(searchIndex[j], val)) {\n+                            if (typePassesFilter(typeFilter, searchIndex[j].ty)) {\n+                                results.push({\n+                                    id: j,\n+                                    index: 0,\n+                                    // we want lev results to go lower than others\n+                                    lev: lev_distance,\n+                                });\n+                            }\n                         }\n                         if (results.length === max) {\n                             break;\n@@ -576,8 +624,7 @@\n                     (parent !== undefined &&\n                         parent.name.toLowerCase().indexOf(keys[i]) > -1) ||\n                     // lastly check to see if the name was a levenshtein match\n-                    levenshtein(name.toLowerCase(), keys[i]) <=\n-                        MAX_LEV_DISTANCE)) {\n+                    levenshtein(name.toLowerCase(), keys[i]) <= MAX_LEV_DISTANCE)) {\n                     return false;\n                 }\n             }\n@@ -692,18 +739,18 @@\n             return h1.innerHTML;\n         }\n \n-        function showResults(results) {\n-            var output, shown, query = getQuery();\n-\n-            currentResults = query.id;\n-            output = '<h1>Results for ' + escape(query.query) +\n-                (query.type ? ' (type: ' + escape(query.type) + ')' : '') + '</h1>';\n-            output += '<table class=\"search-results\">';\n+        function addTab(array, query, display) {\n+            var extraStyle = '';\n+            if (display === false) {\n+                extraStyle = ' style=\"display: none;\"';\n+            }\n \n-            if (results.length > 0) {\n-                shown = [];\n+            var output = '';\n+            if (array.length > 0) {\n+                output = `<table class=\"search-results\"${extraStyle}>`;\n+                var shown = [];\n \n-                results.forEach(function(item) {\n+                array.forEach(function(item) {\n                     var name, type, href, displayPath;\n \n                     if (shown.indexOf(item) !== -1) {\n@@ -752,13 +799,32 @@\n                               '<span class=\"desc\">' + escape(item.desc) +\n                               '&nbsp;</span></a></td></tr>';\n                 });\n+                output += '</table>';\n             } else {\n-                output += 'No results :( <a href=\"https://duckduckgo.com/?q=' +\n+                output = `<div class=\"search-failed\"${extraStyle}>No results :(<br/>` +\n+                    'Try on <a href=\"https://duckduckgo.com/?q=' +\n                     encodeURIComponent('rust ' + query.query) +\n-                    '\">Try on DuckDuckGo?</a>';\n+                    '\">DuckDuckGo</a>?</div>';\n             }\n+            return output;\n+        }\n+\n+        function showResults(results) {\n+            var output, query = getQuery();\n+\n+            currentResults = query.id;\n+            output = '<h1>Results for ' + escape(query.query) +\n+                (query.type ? ' (type: ' + escape(query.type) + ')' : '') + '</h1>' +\n+                '<div id=\"titles\">' +\n+                '<div class=\"selected\">Types/modules</div>' +\n+                '<div>As parameters</div>' +\n+                '<div>As return value</div></div><div id=\"results\">';\n+\n+            output += addTab(results['others'], query);\n+            output += addTab(results['in_args'], query, false);\n+            output += addTab(results['returned'], query, false);\n+            output += '</div>';\n \n-            output += \"</p>\";\n             addClass(document.getElementById('main'), 'hidden');\n             var search = document.getElementById('search');\n             removeClass(search, 'hidden');\n@@ -773,13 +839,17 @@\n                 e.style.width = width + 'px';\n             });\n             initSearchNav();\n+            var elems = document.getElementById('titles').childNodes;\n+            elems[0].onclick = function() { printTab(0); };\n+            elems[1].onclick = function() { printTab(1); };\n+            elems[2].onclick = function() { printTab(2); };\n         }\n \n         function search(e) {\n             var query,\n                 filterdata = [],\n                 obj, i, len,\n-                results = [],\n+                results = {\"in_args\": [], \"returned\": [], \"others\": []},\n                 maxResults = 200,\n                 resultIndex;\n             var params = getQueryStringParams();\n@@ -810,11 +880,43 @@\n             len = resultIndex.length;\n             for (i = 0; i < len; ++i) {\n                 if (resultIndex[i].id > -1) {\n+                    var added = false;\n                     obj = searchIndex[resultIndex[i].id];\n                     filterdata.push([obj.name, obj.ty, obj.path, obj.desc]);\n-                    results.push(obj);\n+                    if (obj.type) {\n+                        if (results['returned'].length < maxResults &&\n+                            obj.type.output &&\n+                            obj.type.output.name.toLowerCase() === query.output) {\n+                            results['returned'].push(obj);\n+                            added = true;\n+                        }\n+                        if (results['in_args'].length < maxResults && obj.type.inputs.length > 0) {\n+                            var all_founds = true;\n+                            for (var it = 0;\n+                                 all_founds === true && it < query.inputs.length;\n+                                 it++) {\n+                                var found = false;\n+                                for (var y = 0;\n+                                     found === false && y < obj.type.inputs.length;\n+                                     y++) {\n+                                    found = query.inputs[it] === obj.type.inputs[y].name;\n+                                }\n+                                all_founds = found;\n+                            }\n+                            if (all_founds === true) {\n+                                results['in_args'].push(obj);\n+                                added = true;\n+                            }\n+                        }\n+                    }\n+                    if (results['others'].length < maxResults &&\n+                        ((query.search && obj.name.indexOf(query.search)) || added === false)) {\n+                        results['others'].push(obj);\n+                    }\n                 }\n-                if (results.length >= maxResults) {\n+                if (results['others'].length >= maxResults &&\n+                    results['in_args'].length >= maxResults &&\n+                    results['returned'].length >= maxResults) {\n                     break;\n                 }\n             }\n@@ -1290,6 +1392,27 @@\n         return wrapper;\n     }\n \n+    // In the search display, allows to switch between tabs.\n+    function printTab(nb) {\n+        var nb_copy = nb;\n+        onEach(document.getElementById('titles').childNodes, function(elem) {\n+            if (nb_copy === 0) {\n+                addClass(elem, 'selected');\n+            } else {\n+                removeClass(elem, 'selected');\n+            }\n+            nb_copy -= 1;\n+        });\n+        onEach(document.getElementById('results').childNodes, function(elem) {\n+            if (nb === 0) {\n+                elem.style.display = '';\n+            } else {\n+                elem.style.display = 'none';\n+            }\n+            nb -= 1;\n+        });\n+    }\n+\n     onEach(document.getElementById('main').getElementsByTagName('pre'), function(e) {\n         onEach(e.getElementsByClassName('attributes'), function(i_e) {\n             i_e.parentNode.insertBefore(createToggleWrapper(), i_e);"}, {"sha": "f0d6f46184a65cf02a189f9773856dc4367392a4", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d21c02396419d905344baeeb6186343d8038c5ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/d21c02396419d905344baeeb6186343d8038c5ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=d21c02396419d905344baeeb6186343d8038c5ef", "patch": "@@ -882,3 +882,29 @@ span.since {\n pre.rust {\n \tposition: relative;\n }\n+\n+.search-failed {\n+\ttext-align: center;\n+\tmargin-top: 20px;\n+}\n+\n+#titles {\n+\theight: 35px;\n+}\n+\n+#titles > div {\n+\tfloat: left;\n+\twidth: 33.3%;\n+\ttext-align: center;\n+\tborder-bottom: 1px solid #ccc;\n+\tfont-size: 18px;\n+\tcursor: pointer;\n+}\n+\n+#titles > div.selected {\n+\tborder-bottom: 3px solid #0078ee;\n+}\n+\n+#titles > div:hover {\n+\tborder-bottom: 3px solid #0089ff;\n+}"}, {"sha": "4a4ca15170a4655d08acc4c7f205219a522fe3aa", "filename": "src/librustdoc/html/static/styles/main.css", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d21c02396419d905344baeeb6186343d8038c5ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/d21c02396419d905344baeeb6186343d8038c5ef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css?ref=d21c02396419d905344baeeb6186343d8038c5ef", "patch": "@@ -235,3 +235,7 @@ pre.ignore:hover, .information:hover + pre.ignore {\n .information > .ignore:hover {\n \tcolor: rgba(255,142,0,1);\n }\n+\n+.search-failed > a {\n+\tcolor: #0089ff;\n+}"}]}