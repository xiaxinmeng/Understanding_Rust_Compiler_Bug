{"sha": "a55039df84f53a4a3060e2a7ae84dee1dc9006ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTAzOWRmODRmNTNhNGEzMDYwZTJhN2FlODRkZWUxZGM5MDA2ZWY=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2020-11-22T00:04:02Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2020-12-18T22:34:48Z"}, "message": "Stabilize Arc::{incr,decr}_strong_count", "tree": {"sha": "0f4d21a8be102034d8efcf0406a261b025aeb8a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f4d21a8be102034d8efcf0406a261b025aeb8a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a55039df84f53a4a3060e2a7ae84dee1dc9006ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a55039df84f53a4a3060e2a7ae84dee1dc9006ef", "html_url": "https://github.com/rust-lang/rust/commit/a55039df84f53a4a3060e2a7ae84dee1dc9006ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a55039df84f53a4a3060e2a7ae84dee1dc9006ef/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6340607acaab10eed3cf11ef7ad3564db58ec981", "url": "https://api.github.com/repos/rust-lang/rust/commits/6340607acaab10eed3cf11ef7ad3564db58ec981", "html_url": "https://github.com/rust-lang/rust/commit/6340607acaab10eed3cf11ef7ad3564db58ec981"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "1ff30ca610dbb55afd30c09ecf7adb8e4808fe88", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a55039df84f53a4a3060e2a7ae84dee1dc9006ef/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55039df84f53a4a3060e2a7ae84dee1dc9006ef/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=a55039df84f53a4a3060e2a7ae84dee1dc9006ef", "patch": "@@ -870,15 +870,13 @@ impl<T: ?Sized> Arc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(arc_mutate_strong_count)]\n-    ///\n     /// use std::sync::Arc;\n     ///\n     /// let five = Arc::new(5);\n     ///\n     /// unsafe {\n     ///     let ptr = Arc::into_raw(five);\n-    ///     Arc::incr_strong_count(ptr);\n+    ///     Arc::increment_strong_count(ptr);\n     ///\n     ///     // This assertion is deterministic because we haven't shared\n     ///     // the `Arc` between threads.\n@@ -887,8 +885,8 @@ impl<T: ?Sized> Arc<T> {\n     /// }\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"arc_mutate_strong_count\", issue = \"71983\")]\n-    pub unsafe fn incr_strong_count(ptr: *const T) {\n+    #[stable(feature = \"arc_mutate_strong_count\", since = \"1.50.0\")]\n+    pub unsafe fn increment_strong_count(ptr: *const T) {\n         // Retain Arc, but don't touch refcount by wrapping in ManuallyDrop\n         let arc = unsafe { mem::ManuallyDrop::new(Arc::<T>::from_raw(ptr)) };\n         // Now increase refcount, but don't drop new refcount either\n@@ -909,27 +907,25 @@ impl<T: ?Sized> Arc<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(arc_mutate_strong_count)]\n-    ///\n     /// use std::sync::Arc;\n     ///\n     /// let five = Arc::new(5);\n     ///\n     /// unsafe {\n     ///     let ptr = Arc::into_raw(five);\n-    ///     Arc::incr_strong_count(ptr);\n+    ///     Arc::increment_strong_count(ptr);\n     ///\n     ///     // Those assertions are deterministic because we haven't shared\n     ///     // the `Arc` between threads.\n     ///     let five = Arc::from_raw(ptr);\n     ///     assert_eq!(2, Arc::strong_count(&five));\n-    ///     Arc::decr_strong_count(ptr);\n+    ///     Arc::decrement_strong_count(ptr);\n     ///     assert_eq!(1, Arc::strong_count(&five));\n     /// }\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"arc_mutate_strong_count\", issue = \"71983\")]\n-    pub unsafe fn decr_strong_count(ptr: *const T) {\n+    #[stable(feature = \"arc_mutate_strong_count\", since = \"1.50.0\")]\n+    pub unsafe fn decrement_strong_count(ptr: *const T) {\n         unsafe { mem::drop(Arc::from_raw(ptr)) };\n     }\n "}, {"sha": "4ee79dae3f1a3cc5c1958bd2cc10031692513eba", "filename": "library/alloc/src/task.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a55039df84f53a4a3060e2a7ae84dee1dc9006ef/library%2Falloc%2Fsrc%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55039df84f53a4a3060e2a7ae84dee1dc9006ef/library%2Falloc%2Fsrc%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ftask.rs?ref=a55039df84f53a4a3060e2a7ae84dee1dc9006ef", "patch": "@@ -60,7 +60,7 @@ impl<W: Wake + Send + Sync + 'static> From<Arc<W>> for RawWaker {\n fn raw_waker<W: Wake + Send + Sync + 'static>(waker: Arc<W>) -> RawWaker {\n     // Increment the reference count of the arc to clone it.\n     unsafe fn clone_waker<W: Wake + Send + Sync + 'static>(waker: *const ()) -> RawWaker {\n-        unsafe { Arc::incr_strong_count(waker as *const W) };\n+        unsafe { Arc::increment_strong_count(waker as *const W) };\n         RawWaker::new(\n             waker as *const (),\n             &RawWakerVTable::new(clone_waker::<W>, wake::<W>, wake_by_ref::<W>, drop_waker::<W>),\n@@ -81,7 +81,7 @@ fn raw_waker<W: Wake + Send + Sync + 'static>(waker: Arc<W>) -> RawWaker {\n \n     // Decrement the reference count of the Arc on drop\n     unsafe fn drop_waker<W: Wake + Send + Sync + 'static>(waker: *const ()) {\n-        unsafe { Arc::decr_strong_count(waker as *const W) };\n+        unsafe { Arc::decrement_strong_count(waker as *const W) };\n     }\n \n     RawWaker::new("}]}