{"sha": "60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYWM5ZjQ2N2NiYmY4NDgxYTZmMDllM2U5MGU0NzBkZWM4NWNmNjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-09T23:19:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-09T23:19:49Z"}, "message": "Auto merge of #42573 - frewsxcv:rollup, r=frewsxcv\n\nRollup of 5 pull requests\n\n- Successful merges: #42307, #42385, #42531, #42551, #42558\n- Failed merges:", "tree": {"sha": "d2e8f91eb7cb3e7594cbefaf71224e12c87cf133", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2e8f91eb7cb3e7594cbefaf71224e12c87cf133"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "html_url": "https://github.com/rust-lang/rust/commit/60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d5b8c6266fd58cefa0d7af8c6115fe22532d069", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5b8c6266fd58cefa0d7af8c6115fe22532d069", "html_url": "https://github.com/rust-lang/rust/commit/3d5b8c6266fd58cefa0d7af8c6115fe22532d069"}, {"sha": "3be7f8bfed5966ef0f4c9cf348424cf3ebaf0f1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3be7f8bfed5966ef0f4c9cf348424cf3ebaf0f1e", "html_url": "https://github.com/rust-lang/rust/commit/3be7f8bfed5966ef0f4c9cf348424cf3ebaf0f1e"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "0b209fd3e9492c126a86bbc87b6d436fdc06f301", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "patch": "@@ -7,9 +7,9 @@ standard library, and documentation.\n \n ## Quick Start\n \n-Read [\"Installing Rust\"] from [The Book].\n+Read [\"Installation\"] from [The Book].\n \n-[\"Installing Rust\"]: https://doc.rust-lang.org/book/getting-started.html#installing-rust\n+[\"Installation\"]: https://doc.rust-lang.org/book/second-edition/ch01-01-installation.html\n [The Book]: https://doc.rust-lang.org/book/index.html\n \n ## Building from Source"}, {"sha": "2de27725e956c51cef3ab2c7128e661f84b13008", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n //! A contiguous growable array type with heap-allocated contents, written\n-//! `Vec<T>` but pronounced 'vector.'\n+//! `Vec<T>`.\n //!\n //! Vectors have `O(1)` indexing, amortized `O(1)` push (to the end) and\n //! `O(1)` pop (from the end)."}, {"sha": "e75401f6ce031de718093fcb549c3019b31eba17", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "patch": "@@ -391,17 +391,17 @@ impl<T> Cell<T> {\n         }\n     }\n \n-    /// Replaces the contained value.\n+    /// Replaces the contained value, and returns it.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// use std::cell::Cell;\n     ///\n-    /// let c = Cell::new(5);\n-    /// let old = c.replace(10);\n-    ///\n-    /// assert_eq!(5, old);\n+    /// let cell = Cell::new(5);\n+    /// assert_eq!(cell.get(), 5);\n+    /// assert_eq!(cell.replace(10), 5);\n+    /// assert_eq!(cell.get(), 10);\n     /// ```\n     #[stable(feature = \"move_cell\", since = \"1.17.0\")]\n     pub fn replace(&self, val: T) -> T {"}, {"sha": "38f83687d1d85356b527794bd57d5414580beaec", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "patch": "@@ -1,12 +1,14 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n+/*!\n+ * Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+ * file at the top-level directory of this distribution and at\n+ * http://rust-lang.org/COPYRIGHT.\n+ *\n+ * Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+ * http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+ * <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+ * option. This file may not be copied, modified, or distributed\n+ * except according to those terms.\n+ */\n \n /*jslint browser: true, es5: true */\n /*globals $: true, rootPath: true */"}, {"sha": "f245306f4d8f6e08545cf0e492a09cc3d1e3c07d", "filename": "src/test/compile-fail/variadic-ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs?ref=60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-arm stdcall isn't suppported\n+// ignore-aarch64 stdcall isn't suppported\n \n extern \"stdcall\" {\n     fn printf(_: *const u8, ...); //~ ERROR: variadic function must have C or cdecl calling"}, {"sha": "35073b63723d47f0eec98fb558b5f3594d49ee8f", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ac9f467cbbf8481a6f09e3e90e470dec85cf65/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=60ac9f467cbbf8481a6f09e3e90e470dec85cf65", "patch": "@@ -169,8 +169,10 @@ fn licenseck(file: &Path, contents: &str) -> bool {\n     lines.windows(LICENSE.lines().count()).any(|window| {\n         let offset = if window.iter().all(|w| w.starts_with(\"//\")) {\n             2\n-        } else if window.iter().all(|w| w.starts_with(\"#\")) {\n+        } else if window.iter().all(|w| w.starts_with('#')) {\n             1\n+        } else if window.iter().all(|w| w.starts_with(\" *\")) {\n+            2\n         } else {\n             return false\n         };"}]}