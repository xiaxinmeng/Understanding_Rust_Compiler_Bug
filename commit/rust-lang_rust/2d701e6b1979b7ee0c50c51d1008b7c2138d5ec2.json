{"sha": "2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNzAxZTZiMTk3OWI3ZWUwYzUwYzUxZDEwMDhiN2MyMTM4ZDVlYzI=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-03-17T21:00:55Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-03-18T11:10:29Z"}, "message": "Add {get,set}rlimit and getrusage to libc", "tree": {"sha": "f57a26dd8894d436e35cda8e9d2ddadce1006df7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f57a26dd8894d436e35cda8e9d2ddadce1006df7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2", "html_url": "https://github.com/rust-lang/rust/commit/2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c64d671671aea2e44ee7fc6eb00ee75fc30ed7b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c64d671671aea2e44ee7fc6eb00ee75fc30ed7b9", "html_url": "https://github.com/rust-lang/rust/commit/c64d671671aea2e44ee7fc6eb00ee75fc30ed7b9"}], "stats": {"total": 300, "additions": 300, "deletions": 0}, "files": [{"sha": "7d3268655a33dcf200a964feb75f65d4f7305c0d", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 300, "deletions": 0, "changes": 300, "blob_url": "https://github.com/rust-lang/rust/blob/2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=2d701e6b1979b7ee0c50c51d1008b7c2138d5ec2", "patch": "@@ -131,6 +131,7 @@ pub use funcs::bsd43::*;\n #[cfg(unix)] pub use funcs::posix88::net::*;\n #[cfg(unix)] pub use funcs::posix01::stat_::*;\n #[cfg(unix)] pub use funcs::posix01::unistd::*;\n+#[cfg(unix)] pub use funcs::posix01::resource::*;\n \n \n #[cfg(windows)] pub use funcs::extra::kernel32::*;\n@@ -223,6 +224,7 @@ pub mod types {\n                 pub type pthread_t = c_ulong;\n                 #[cfg(target_os = \"nacl\")]\n                 pub type pthread_t = *mut c_void;\n+                pub type rlim_t = u64;\n \n                 #[repr(C)]\n                 #[derive(Copy)] pub struct glob_t {\n@@ -252,7 +254,42 @@ pub mod types {\n                 #[derive(Copy)] pub enum timezone {}\n \n                 pub type sighandler_t = size_t;\n+\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rlimit {\n+                    pub rlim_cur: rlim_t,\n+                    pub rlim_max: rlim_t,\n+                }\n+            }\n+\n+            pub mod bsd43 {\n+                use types::os::common::posix01::timeval;\n+                use types::os::arch::c95::c_long;\n+                // This is also specified in POSIX 2001, but only has two fields. All implementors\n+                // implement BSD 4.3 version.\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rusage {\n+                    pub ru_utime: timeval,\n+                    pub ru_stime: timeval,\n+                    pub ru_maxrss: c_long,\n+                    pub ru_ixrss: c_long,\n+                    pub ru_idrss: c_long,\n+                    pub ru_isrss: c_long,\n+                    pub ru_minflt: c_long,\n+                    pub ru_majflt: c_long,\n+                    pub ru_nswap: c_long,\n+                    pub ru_inblock: c_long,\n+                    pub ru_oublock: c_long,\n+                    pub ru_msgsnd: c_long,\n+                    pub ru_msgrcv: c_long,\n+                    pub ru_nsignals: c_long,\n+                    pub ru_nvcsw: c_long,\n+                    pub ru_nivcsw: c_long\n+                }\n             }\n+\n             pub mod bsd44 {\n                 use types::common::c95::{c_void};\n                 use types::os::arch::c95::{c_char, c_int, c_uint};\n@@ -734,6 +771,7 @@ pub mod types {\n                 use types::os::arch::c99::{uintptr_t};\n \n                 pub type pthread_t = uintptr_t;\n+                pub type rlim_t = i64;\n \n                 #[repr(C)]\n                 #[derive(Copy)] pub struct glob_t {\n@@ -767,7 +805,40 @@ pub mod types {\n                 #[derive(Copy)] pub enum timezone {}\n \n                 pub type sighandler_t = size_t;\n+\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rlimit {\n+                    pub rlim_cur: rlim_t,\n+                    pub rlim_max: rlim_t,\n+                }\n+            }\n+\n+            pub mod bsd43 {\n+                use types::os::common::posix01::timeval;\n+                use types::os::arch::c95::c_long;\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rusage {\n+                    pub ru_utime: timeval,\n+                    pub ru_stime: timeval,\n+                    pub ru_maxrss: c_long,\n+                    pub ru_ixrss: c_long,\n+                    pub ru_idrss: c_long,\n+                    pub ru_isrss: c_long,\n+                    pub ru_minflt: c_long,\n+                    pub ru_majflt: c_long,\n+                    pub ru_nswap: c_long,\n+                    pub ru_inblock: c_long,\n+                    pub ru_oublock: c_long,\n+                    pub ru_msgsnd: c_long,\n+                    pub ru_msgrcv: c_long,\n+                    pub ru_nsignals: c_long,\n+                    pub ru_nvcsw: c_long,\n+                    pub ru_nivcsw: c_long\n+                }\n             }\n+\n             pub mod bsd44 {\n                 use types::common::c95::{c_void};\n                 use types::os::arch::c95::{c_char, c_int, c_uint};\n@@ -962,6 +1033,7 @@ pub mod types {\n                 use types::os::arch::c99::{uintptr_t};\n \n                 pub type pthread_t = uintptr_t;\n+                pub type rlim_t = i64;\n \n                 #[repr(C)]\n                 #[derive(Copy)] pub struct glob_t {\n@@ -995,7 +1067,40 @@ pub mod types {\n                 #[derive(Copy)] pub enum timezone {}\n \n                 pub type sighandler_t = size_t;\n+\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rlimit {\n+                    pub rlim_cur: rlim_t,\n+                    pub rlim_max: rlim_t,\n+                }\n             }\n+\n+            pub mod bsd43 {\n+                use types::os::common::posix01::timeval;\n+                use types::os::arch::c95::c_long;\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rusage {\n+                    pub ru_utime: timeval,\n+                    pub ru_stime: timeval,\n+                    pub ru_maxrss: c_long,\n+                    pub ru_ixrss: c_long,\n+                    pub ru_idrss: c_long,\n+                    pub ru_isrss: c_long,\n+                    pub ru_minflt: c_long,\n+                    pub ru_majflt: c_long,\n+                    pub ru_nswap: c_long,\n+                    pub ru_inblock: c_long,\n+                    pub ru_oublock: c_long,\n+                    pub ru_msgsnd: c_long,\n+                    pub ru_msgrcv: c_long,\n+                    pub ru_nsignals: c_long,\n+                    pub ru_nvcsw: c_long,\n+                    pub ru_nivcsw: c_long\n+                }\n+            }\n+\n             pub mod bsd44 {\n                 use types::common::c95::{c_void};\n                 use types::os::arch::c95::{c_char, c_int, c_uint};\n@@ -1189,6 +1294,7 @@ pub mod types {\n                 use types::os::arch::c99::{uintptr_t};\n \n                 pub type pthread_t = uintptr_t;\n+                pub type rlim_t = u64;\n \n                 #[cfg(target_os = \"bitrig\")]\n                 #[repr(C)]\n@@ -1241,7 +1347,40 @@ pub mod types {\n                 #[derive(Copy)] pub enum timezone {}\n \n                 pub type sighandler_t = size_t;\n+\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rlimit {\n+                    pub rlim_cur: rlim_t,\n+                    pub rlim_max: rlim_t,\n+                }\n+            }\n+\n+            pub mod bsd43 {\n+                use types::os::common::posix01::timeval;\n+                use types::os::arch::c95::c_long;\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rusage {\n+                    pub ru_utime: timeval,\n+                    pub ru_stime: timeval,\n+                    pub ru_maxrss: c_long,\n+                    pub ru_ixrss: c_long,\n+                    pub ru_idrss: c_long,\n+                    pub ru_isrss: c_long,\n+                    pub ru_minflt: c_long,\n+                    pub ru_majflt: c_long,\n+                    pub ru_nswap: c_long,\n+                    pub ru_inblock: c_long,\n+                    pub ru_oublock: c_long,\n+                    pub ru_msgsnd: c_long,\n+                    pub ru_msgrcv: c_long,\n+                    pub ru_nsignals: c_long,\n+                    pub ru_nvcsw: c_long,\n+                    pub ru_nivcsw: c_long\n+                }\n             }\n+\n             pub mod bsd44 {\n                 use types::common::c95::{c_void};\n                 use types::os::arch::c95::{c_char, c_int, c_uint};\n@@ -1840,6 +1979,7 @@ pub mod types {\n                 use types::os::arch::c99::{uintptr_t};\n \n                 pub type pthread_t = uintptr_t;\n+                pub type rlim_t = u64;\n \n                 #[repr(C)]\n                 #[derive(Copy)] pub struct glob_t {\n@@ -1873,6 +2013,38 @@ pub mod types {\n                 #[derive(Copy)] pub enum timezone {}\n \n                 pub type sighandler_t = size_t;\n+\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rlimit {\n+                    pub rlim_cur: rlim_t,\n+                    pub rlim_max: rlim_t,\n+                }\n+            }\n+\n+            pub mod bsd43 {\n+                use types::os::common::posix01::timeval;\n+                use types::os::arch::c95::c_long;\n+                #[repr(C)]\n+                #[derive(Copy)]\n+                pub struct rusage {\n+                    pub ru_utime: timeval,\n+                    pub ru_stime: timeval,\n+                    pub ru_maxrss: c_long,\n+                    pub ru_ixrss: c_long,\n+                    pub ru_idrss: c_long,\n+                    pub ru_isrss: c_long,\n+                    pub ru_minflt: c_long,\n+                    pub ru_majflt: c_long,\n+                    pub ru_nswap: c_long,\n+                    pub ru_inblock: c_long,\n+                    pub ru_oublock: c_long,\n+                    pub ru_msgsnd: c_long,\n+                    pub ru_msgrcv: c_long,\n+                    pub ru_nsignals: c_long,\n+                    pub ru_nvcsw: c_long,\n+                    pub ru_nivcsw: c_long\n+                }\n             }\n \n             pub mod bsd44 {\n@@ -3024,6 +3196,7 @@ pub mod consts {\n         #[cfg(not(target_os = \"nacl\"))]\n         pub mod posix01 {\n             use types::os::arch::c95::{c_int, size_t};\n+            use types::os::common::posix01::rlim_t;\n \n             pub const F_DUPFD : c_int = 0;\n             pub const F_GETFD : c_int = 1;\n@@ -3102,10 +3275,36 @@ pub mod consts {\n \n             pub const CLOCK_REALTIME: c_int = 0;\n             pub const CLOCK_MONOTONIC: c_int = 1;\n+\n+            pub const RLIMIT_CPU: c_int = 0;\n+            pub const RLIMIT_FSIZE: c_int = 1;\n+            pub const RLIMIT_DATA: c_int = 2;\n+            pub const RLIMIT_STACK: c_int = 3;\n+            pub const RLIMIT_CORE: c_int = 4;\n+            pub const RLIMIT_RSS: c_int = 5;\n+            pub const RLIMIT_NOFILE: c_int = 7;\n+            pub const RLIMIT_AS: c_int = 9;\n+            pub const RLIMIT_NPROC: c_int = 6;\n+            pub const RLIMIT_MEMLOCK: c_int = 8;\n+            pub const RLIMIT_LOCKS: c_int = 10;\n+            pub const RLIMIT_SIGPENDING: c_int = 11;\n+            pub const RLIMIT_MSGQUEUE: c_int = 12;\n+            pub const RLIMIT_NICE: c_int = 13;\n+            pub const RLIMIT_RTPRIO: c_int = 14;\n+            pub const RLIMIT_RTTIME: c_int = 15;\n+            pub const RLIMIT_NLIMITS: c_int = 16;\n+            pub const RLIM_INFINITY: rlim_t = 0xffff_ffff_ffff_ffff;\n+            pub const RLIM_SAVED_MAX: rlim_t = RLIM_INFINITY;\n+            pub const RLIM_SAVED_CUR: rlim_t = RLIM_INFINITY;\n+\n+            pub const RUSAGE_SELF: c_int = 0;\n+            pub const RUSAGE_CHILDREN: c_int = -1;\n+            pub const RUSAGE_THREAD: c_int = 1;\n         }\n         #[cfg(target_os = \"nacl\")]\n         pub mod posix01 {\n             use types::os::arch::c95::{c_int, size_t};\n+            use types::os::common::posix01::rlim_t;\n \n             pub const F_DUPFD : c_int = 0;\n             pub const F_GETFD : c_int = 1;\n@@ -3170,6 +3369,32 @@ pub mod consts {\n \n             pub const CLOCK_REALTIME: c_int = 0;\n             pub const CLOCK_MONOTONIC: c_int = 1;\n+\n+            pub const RLIMIT_CPU: c_int = 0;\n+            pub const RLIMIT_FSIZE: c_int = 1;\n+            pub const RLIMIT_DATA: c_int = 2;\n+            pub const RLIMIT_STACK: c_int = 3;\n+            pub const RLIMIT_CORE: c_int = 4;\n+            pub const RLIMIT_RSS: c_int = 5;\n+            pub const RLIMIT_NOFILE: c_int = 7;\n+            pub const RLIMIT_AS: c_int = 9;\n+            pub const RLIMIT_NPROC: c_int = 6;\n+            pub const RLIMIT_MEMLOCK: c_int = 8;\n+            pub const RLIMIT_LOCKS: c_int = 10;\n+            pub const RLIMIT_SIGPENDING: c_int = 11;\n+            pub const RLIMIT_MSGQUEUE: c_int = 12;\n+            pub const RLIMIT_NICE: c_int = 13;\n+            pub const RLIMIT_RTPRIO: c_int = 14;\n+            pub const RLIMIT_RTTIME: c_int = 15;\n+            pub const RLIMIT_NLIMITS: c_int = 16;\n+\n+            pub const RLIM_INFINITY: rlim_t = 0xffff_ffff_ffff_ffff;\n+            pub const RLIM_SAVED_MAX: rlim_t = RLIM_INFINITY;\n+            pub const RLIM_SAVED_CUR: rlim_t = RLIM_INFINITY;\n+\n+            pub const RUSAGE_SELF: c_int = 0;\n+            pub const RUSAGE_CHILDREN: c_int = -1;\n+            pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n         }\n@@ -3632,6 +3857,7 @@ pub mod consts {\n         }\n         pub mod posix01 {\n             use types::os::arch::c95::{c_int, size_t};\n+            use types::os::common::posix01::rlim_t;\n \n             pub const F_DUPFD : c_int = 0;\n             pub const F_GETFD : c_int = 1;\n@@ -3707,6 +3933,29 @@ pub mod consts {\n \n             pub const CLOCK_REALTIME: c_int = 0;\n             pub const CLOCK_MONOTONIC: c_int = 4;\n+\n+            pub const RLIMIT_CPU: c_int = 0;\n+            pub const RLIMIT_FSIZE: c_int = 1;\n+            pub const RLIMIT_DATA: c_int = 2;\n+            pub const RLIMIT_STACK: c_int = 3;\n+            pub const RLIMIT_CORE: c_int = 4;\n+            pub const RLIMIT_RSS: c_int = 5;\n+            pub const RLIMIT_MEMLOCK: c_int = 6;\n+            pub const RLIMIT_NPROC: c_int = 7;\n+            pub const RLIMIT_NOFILE: c_int = 8;\n+            pub const RLIMIT_SBSIZE: c_int = 9;\n+            pub const RLIMIT_VMEM: c_int = 10;\n+            pub const RLIMIT_AS: c_int = RLIMIT_VMEM;\n+            pub const RLIMIT_NPTS: c_int = 11;\n+            pub const RLIMIT_SWAP: c_int = 12;\n+            pub const RLIMIT_KQUEUES: c_int = 13;\n+\n+            pub const RLIM_NLIMITS: rlim_t = 14;\n+            pub const RLIM_INFINITY: rlim_t = 0x7fff_ffff_ffff_ffff;\n+\n+            pub const RUSAGE_SELF: c_int = 0;\n+            pub const RUSAGE_CHILDREN: c_int = -1;\n+            pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n         }\n@@ -4032,6 +4281,7 @@ pub mod consts {\n         }\n         pub mod posix01 {\n             use types::os::arch::c95::{c_int, size_t};\n+            use types::os::common::posix01::rlim_t;\n \n             pub const F_DUPFD : c_int = 0;\n             pub const F_GETFD : c_int = 1;\n@@ -4101,6 +4351,25 @@ pub mod consts {\n \n             pub const CLOCK_REALTIME : c_int = 0;\n             pub const CLOCK_MONOTONIC : c_int = 3;\n+\n+            pub const RLIMIT_CPU: c_int = 0;\n+            pub const RLIMIT_FSIZE: c_int = 1;\n+            pub const RLIMIT_DATA: c_int = 2;\n+            pub const RLIMIT_STACK: c_int = 3;\n+            pub const RLIMIT_CORE: c_int = 4;\n+            pub const RLIMIT_RSS: c_int = 5;\n+            pub const RLIMIT_MEMLOCK: c_int = 6;\n+            pub const RLIMIT_NPROC: c_int = 7;\n+            pub const RLIMIT_NOFILE: c_int = 8;\n+            pub const RLIM_NLIMITS: c_int = 9;\n+\n+            pub const RLIM_INFINITY: rlim_t = 0x7fff_ffff_ffff_ffff;\n+            pub const RLIM_SAVED_MAX: rlim_t = RLIM_INFINITY;\n+            pub const RLIM_SAVED_CUR: rlim_t = RLIM_INFINITY;\n+\n+            pub const RUSAGE_SELF: c_int = 0;\n+            pub const RUSAGE_CHILDREN: c_int = -1;\n+            pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n         }\n@@ -4428,6 +4697,7 @@ pub mod consts {\n         }\n         pub mod posix01 {\n             use types::os::arch::c95::{c_int, size_t};\n+            use types::os::common::posix01::rlim_t;\n \n             pub const F_DUPFD : c_int = 0;\n             pub const F_GETFD : c_int = 1;\n@@ -4488,6 +4758,24 @@ pub mod consts {\n             pub const PTHREAD_CREATE_JOINABLE: c_int = 1;\n             pub const PTHREAD_CREATE_DETACHED: c_int = 2;\n             pub const PTHREAD_STACK_MIN: size_t = 8192;\n+\n+            pub const RLIMIT_CPU: c_int = 0;\n+            pub const RLIMIT_FSIZE: c_int = 1;\n+            pub const RLIMIT_DATA: c_int = 2;\n+            pub const RLIMIT_STACK: c_int = 3;\n+            pub const RLIMIT_CORE: c_int = 4;\n+            pub const RLIMIT_AS: c_int = 5;\n+            pub const RLIMIT_MEMLOCK: c_int = 6;\n+            pub const RLIMIT_NPROC: c_int = 7;\n+            pub const RLIMIT_NOFILE: c_int = 8;\n+            pub const RLIM_NLIMITS: c_int = 9;\n+            pub const _RLIMIT_POSIX_FLAG: c_int = 0x1000;\n+\n+            pub const RLIM_INFINITY: rlim_t = 0xffff_ffff_ffff_ffff;\n+\n+            pub const RUSAGE_SELF: c_int = 0;\n+            pub const RUSAGE_CHILDREN: c_int = -1;\n+            pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n         }\n@@ -5348,6 +5636,18 @@ pub mod funcs {\n                                      -> c_int;\n             }\n         }\n+\n+        pub mod resource {\n+            use types::os::arch::c95::c_int;\n+            use types::os::common::posix01::rlimit;\n+            use types::os::common::bsd43::rusage;\n+            extern {\n+                pub fn getrlimit(resource: c_int, rlim: *mut rlimit) -> c_int;\n+                pub fn setrlimit(resource: c_int, rlim: *const rlimit) -> c_int;\n+                pub fn getrusage(resource: c_int, usage: *mut rusage) -> c_int;\n+\n+            }\n+        }\n     }\n \n     #[cfg(target_os = \"windows\")]"}]}