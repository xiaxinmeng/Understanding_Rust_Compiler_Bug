{"sha": "e284f5d050029906d32667635af9c839fafd3eca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyODRmNWQwNTAwMjk5MDZkMzI2Njc2MzVhZjljODM5ZmFmZDNlY2E=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-08T01:07:24Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-14T22:42:59Z"}, "message": "Fix the ordering of the static symbols.", "tree": {"sha": "838f4dcf3d6b4ea06836d6e4f173296bf1faaee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/838f4dcf3d6b4ea06836d6e4f173296bf1faaee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e284f5d050029906d32667635af9c839fafd3eca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e284f5d050029906d32667635af9c839fafd3eca", "html_url": "https://github.com/rust-lang/rust/commit/e284f5d050029906d32667635af9c839fafd3eca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e284f5d050029906d32667635af9c839fafd3eca/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "026089bdb54b8501bf62517bcdc2b8e5bc378c55", "url": "https://api.github.com/repos/rust-lang/rust/commits/026089bdb54b8501bf62517bcdc2b8e5bc378c55", "html_url": "https://github.com/rust-lang/rust/commit/026089bdb54b8501bf62517bcdc2b8e5bc378c55"}], "stats": {"total": 130, "additions": 66, "deletions": 64}, "files": [{"sha": "aa6f71841680ef8e99fa7679fcb0606fa40c2e33", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 66, "deletions": 64, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/e284f5d050029906d32667635af9c839fafd3eca/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e284f5d050029906d32667635af9c839fafd3eca/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=e284f5d050029906d32667635af9c839fafd3eca", "patch": "@@ -112,10 +112,13 @@ symbols! {\n     //\n     // As well as the symbols listed, there are symbols for the the strings\n     // \"0\", \"1\", ..., \"9\", which are accessible via `sym::integer`.\n+    //\n+    // Keep this list in sorted order, as defined by the Unix `sort` utility.\n     Symbols {\n         aarch64_target_feature,\n         abi,\n         abi_amdgpu_kernel,\n+        abi_avr_interrupt,\n         abi_efiapi,\n         abi_msp430_interrupt,\n         abi_ptx,\n@@ -124,7 +127,6 @@ symbols! {\n         abi_unadjusted,\n         abi_vectorcall,\n         abi_x86_interrupt,\n-        abi_avr_interrupt,\n         abort,\n         aborts,\n         address,\n@@ -181,6 +183,7 @@ symbols! {\n         bin,\n         bind_by_move_pattern_guards,\n         bindings_after_at,\n+        bitreverse,\n         block,\n         bool,\n         borrowck_graphviz_format,\n@@ -191,7 +194,6 @@ symbols! {\n         braced_empty_structs,\n         breakpoint,\n         bswap,\n-        bitreverse,\n         C,\n         caller_location,\n         cdylib,\n@@ -234,24 +236,24 @@ symbols! {\n         const_fn_union,\n         const_generics,\n         const_if_match,\n-        const_indexing,\n         const_in_array_repeat_expressions,\n+        const_indexing,\n         const_let,\n         const_loop,\n         const_mut_refs,\n         const_panic,\n         const_precise_live_drops,\n         const_raw_ptr_deref,\n         const_raw_ptr_to_usize_cast,\n-        const_transmute,\n         const_trait_bound_opt_out,\n         const_trait_impl,\n+        const_transmute,\n         contents,\n         context,\n         convert,\n+        copy,\n         Copy,\n         copy_closures,\n-        copy,\n         copy_nonoverlapping,\n         copysignf32,\n         copysignf64,\n@@ -269,21 +271,21 @@ symbols! {\n         crate_name,\n         crate_type,\n         crate_visibility_modifier,\n+        ctlz,\n+        ctlz_nonzero,\n         ctpop,\n         cttz,\n         cttz_nonzero,\n-        ctlz,\n-        ctlz_nonzero,\n         custom_attribute,\n         custom_derive,\n         custom_inner_attributes,\n         custom_test_frameworks,\n         c_variadic,\n+        debug,\n+        Debug,\n         debug_trait,\n         declare_lint_pass,\n         decl_macro,\n-        debug,\n-        Debug,\n         Decodable,\n         Default,\n         default_lib_allocator,\n@@ -307,40 +309,40 @@ symbols! {\n         document_private_items,\n         dotdoteq_in_patterns,\n         dotdot_in_tuple_patterns,\n+        double_braced_closure: \"{{closure}}\",\n+        double_braced_constant: \"{{constant}}\",\n+        double_braced_constructor: \"{{constructor}}\",\n         double_braced_crate: \"{{crate}}\",\n         double_braced_impl: \"{{impl}}\",\n         double_braced_misc: \"{{misc}}\",\n-        double_braced_closure: \"{{closure}}\",\n-        double_braced_constructor: \"{{constructor}}\",\n-        double_braced_constant: \"{{constant}}\",\n         double_braced_opaque: \"{{opaque}}\",\n         dropck_eyepatch,\n         dropck_parametricity,\n-        drop_types_in_const,\n         drop_in_place,\n+        drop_types_in_const,\n         dylib,\n         dyn_trait,\n         eh_personality,\n         enable,\n+        enclosing_scope,\n         Encodable,\n         env,\n         eq,\n-        err,\n-        Err,\n         Eq,\n         Equal,\n-        enclosing_scope,\n+        err,\n+        Err,\n         exact_div,\n         except,\n         exclusive_range_pattern,\n         exhaustive_integer_patterns,\n         exhaustive_patterns,\n         existential_type,\n-        expf32,\n-        expf64,\n         exp2f32,\n         exp2f64,\n         expected,\n+        expf32,\n+        expf64,\n         export_name,\n         expr,\n         extern_absolute_paths,\n@@ -353,9 +355,9 @@ symbols! {\n         f16c_target_feature,\n         f32,\n         f64,\n-        fadd_fast,\n         fabsf32,\n         fabsf64,\n+        fadd_fast,\n         fdiv_fast,\n         feature,\n         ffi_const,\n@@ -365,8 +367,8 @@ symbols! {\n         field_init_shorthand,\n         file,\n         float_to_int_unchecked,\n-        floorf64,\n         floorf32,\n+        floorf64,\n         fmaf32,\n         fmaf64,\n         fmt,\n@@ -376,8 +378,8 @@ symbols! {\n         forbid,\n         forget,\n         format_args,\n-        format_args_nl,\n         format_args_capture,\n+        format_args_nl,\n         frem_fast,\n         from,\n         From,\n@@ -386,28 +388,28 @@ symbols! {\n         from_generator,\n         from_method,\n         from_ok,\n-        from_usize,\n         from_trait,\n+        from_usize,\n         fsub_fast,\n         fundamental,\n         future,\n         Future,\n-        FxHashSet,\n         FxHashMap,\n-        gen_future,\n-        gen_kill,\n+        FxHashSet,\n         generators,\n         generic_associated_types,\n         generic_param_attrs,\n+        gen_future,\n+        gen_kill,\n         get_context,\n         global_allocator,\n         global_asm,\n         globs,\n         half_open_range_patterns,\n         hash,\n         Hash,\n-        HashSet,\n         HashMap,\n+        HashSet,\n         hexagon_target_feature,\n         hidden,\n         homogeneous_aggregate,\n@@ -426,22 +428,22 @@ symbols! {\n         if_let,\n         if_while_or_patterns,\n         ignore,\n-        inlateout,\n-        inout,\n         impl_header_lifetime_elision,\n         impl_lint_pass,\n         impl_trait_in_bindings,\n         import_shadowing,\n-        index,\n-        index_mut,\n         in_band_lifetimes,\n         include,\n         include_bytes,\n         include_str,\n         inclusive_range_syntax,\n+        index,\n+        index_mut,\n         infer_outlives_requirements,\n         infer_static_outlives_requirements,\n+        inlateout,\n         inline,\n+        inout,\n         Input,\n         intel,\n         into_iter,\n@@ -464,8 +466,8 @@ symbols! {\n         label_break_value,\n         lang,\n         lang_items,\n-        lazy_normalization_consts,\n         lateout,\n+        lazy_normalization_consts,\n         let_chains,\n         lhs,\n         lib,\n@@ -485,13 +487,13 @@ symbols! {\n         literal,\n         llvm_asm,\n         local_inner_macros,\n-        log_syntax,\n-        logf32,\n-        logf64,\n         log10f32,\n         log10f64,\n         log2f32,\n         log2f64,\n+        logf32,\n+        logf64,\n+        log_syntax,\n         loop_break_value,\n         macro_at_most_once_rep,\n         macro_escape,\n@@ -509,33 +511,33 @@ symbols! {\n         masked,\n         match_beginning_vert,\n         match_default_bindings,\n-        may_dangle,\n+        maxnumf32,\n+        maxnumf64,\n         maybe_uninit_uninit,\n         maybe_uninit_zeroed,\n-        mem_uninitialized,\n-        mem_zeroed,\n+        may_dangle,\n         member_constraints,\n         memory,\n+        mem_uninitialized,\n+        mem_zeroed,\n         message,\n         meta,\n         min_align_of,\n         min_align_of_val,\n         min_const_fn,\n         min_const_unsafe_fn,\n-        min_specialization,\n         minnumf32,\n         minnumf64,\n-        maxnumf32,\n-        maxnumf64,\n+        min_specialization,\n         mips_target_feature,\n         miri_start_panic,\n         mmx_target_feature,\n         module,\n         module_path,\n         more_struct_aliases,\n+        movbe_target_feature,\n         move_ref_pattern,\n         move_val_init,\n-        movbe_target_feature,\n         mul_with_overflow,\n         must_use,\n         naked,\n@@ -552,8 +554,8 @@ symbols! {\n         never_type,\n         never_type_fallback,\n         new,\n-        next,\n         __next,\n+        next,\n         nll,\n         no_builtins,\n         no_core,\n@@ -569,11 +571,11 @@ symbols! {\n         non_ascii_idents,\n         None,\n         non_exhaustive,\n+        no_niche,\n         non_modrs_mods,\n         nontemporal_store,\n         nontrapping_dash_fptoint: \"nontrapping-fptoint\",\n         noreturn,\n-        no_niche,\n         no_sanitize,\n         nostack,\n         no_stack_check,\n@@ -598,9 +600,9 @@ symbols! {\n         options,\n         opt_out_copy,\n         or,\n-        or_patterns,\n         Ord,\n         Ordering,\n+        or_patterns,\n         out,\n         Output,\n         overlapping_marker_traits,\n@@ -610,9 +612,9 @@ symbols! {\n         panic_impl,\n         panic_implementation,\n         panic_runtime,\n+        param_attrs,\n         parent_trait,\n         partial_cmp,\n-        param_attrs,\n         PartialEq,\n         PartialOrd,\n         passes,\n@@ -645,19 +647,19 @@ symbols! {\n         preserves_flags,\n         primitive,\n         proc_dash_macro: \"proc-macro\",\n+        ProceduralMasqueradeDummyType,\n         proc_macro,\n         proc_macro_attribute,\n         proc_macro_def_site,\n         proc_macro_derive,\n         proc_macro_expr,\n         proc_macro_gen,\n+        ProcMacroHack,\n         proc_macro_hygiene,\n         proc_macro_internals,\n         proc_macro_mod,\n         proc_macro_non_items,\n         proc_macro_path_invoc,\n-        ProceduralMasqueradeDummyType,\n-        ProcMacroHack,\n         profiler_builtins,\n         profiler_runtime,\n         ptr_guaranteed_eq,\n@@ -716,18 +718,17 @@ symbols! {\n         rust_2018_preview,\n         rust_begin_unwind,\n         rustc,\n-        RustcDecodable,\n-        RustcEncodable,\n         rustc_allocator,\n         rustc_allocator_nounwind,\n         rustc_allow_const_fn_ptr,\n         rustc_args_required_const,\n         rustc_attrs,\n         rustc_builtin_macro,\n         rustc_clean,\n-        rustc_const_unstable,\n         rustc_const_stable,\n+        rustc_const_unstable,\n         rustc_conversion_suggestion,\n+        RustcDecodable,\n         rustc_def_path,\n         rustc_deprecated,\n         rustc_diagnostic_item,\n@@ -737,6 +738,7 @@ symbols! {\n         rustc_dump_env_program_clauses,\n         rustc_dump_program_clauses,\n         rustc_dump_user_substs,\n+        RustcEncodable,\n         rustc_error,\n         rustc_expected_cgu_reuse,\n         rustc_if_this_changed,\n@@ -755,26 +757,26 @@ symbols! {\n         rustc_partition_reused,\n         rustc_peek,\n         rustc_peek_definite_init,\n+        rustc_peek_indirectly_mutable,\n         rustc_peek_liveness,\n         rustc_peek_maybe_init,\n         rustc_peek_maybe_uninit,\n-        rustc_peek_indirectly_mutable,\n         rustc_private,\n         rustc_proc_macro_decls,\n         rustc_promotable,\n         rustc_regions,\n-        rustc_unsafe_specialization_marker,\n+        rustc_reservation_impl,\n         rustc_specialization_trait,\n         rustc_stable,\n         rustc_std_internal_symbol,\n         rustc_symbol_name,\n         rustc_synthetic,\n-        rustc_reservation_impl,\n         rustc_test_marker,\n         rustc_then_this_would_need,\n+        rustc_unsafe_specialization_marker,\n         rustc_variance,\n-        rustfmt,\n         rust_eh_personality,\n+        rustfmt,\n         rust_oom,\n         rvalue_static_promotion,\n         sanitize,\n@@ -814,11 +816,11 @@ symbols! {\n         static_recursion,\n         std,\n         std_inject,\n-        str,\n-        stringify,\n         stmt,\n         stmt_expr_attributes,\n         stop_after_dataflow,\n+        str,\n+        stringify,\n         struct_field_attributes,\n         struct_inherit,\n         structural_match,\n@@ -865,17 +867,17 @@ symbols! {\n         tt,\n         tuple_indexing,\n         two_phase,\n-        Ty,\n         ty,\n-        type_alias_impl_trait,\n-        type_id,\n-        type_name,\n+        Ty,\n         TyCtxt,\n         TyKind,\n         type_alias_enum_variants,\n+        type_alias_impl_trait,\n         type_ascription,\n+        type_id,\n         type_length_limit,\n         type_macros,\n+        type_name,\n         u128,\n         u16,\n         u32,\n@@ -915,12 +917,12 @@ symbols! {\n         use_nested_groups,\n         usize,\n         v1,\n-        val,\n-        var,\n-        variant_count,\n         va_arg,\n         va_copy,\n         va_end,\n+        val,\n+        var,\n+        variant_count,\n         va_start,\n         vec,\n         Vec,\n@@ -940,8 +942,8 @@ symbols! {\n         windows,\n         windows_subsystem,\n         wrapping_add,\n-        wrapping_sub,\n         wrapping_mul,\n+        wrapping_sub,\n         write_bytes,\n         Yield,\n     }"}]}