{"sha": "f4e7094ffc3970a17884a5f933da45cb51dd3e1c", "node_id": "C_kwDOAAsO6NoAKGY0ZTcwOTRmZmMzOTcwYTE3ODg0YTVmOTMzZGE0NWNiNTFkZDNlMWM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-29T12:43:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-29T12:43:22Z"}, "message": "Rollup merge of #102455 - nnethercote:WhileTrue-check_expr, r=lqd\n\nUse let-chaining in `WhileTrue::check_expr`.\n\nThis has been bugging me for a while.\n\nr? `@lqd`", "tree": {"sha": "e547f55687aebef0cc8453b0e3b45a118696874c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e547f55687aebef0cc8453b0e3b45a118696874c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4e7094ffc3970a17884a5f933da45cb51dd3e1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjNZLqCRBK7hj4Ov3rIwAAer0IAIDJ79BPIGlLoiOg/T3il4Up\nDYEoRe1UyRcr+TNz7jGSDUkspYQa7IsBsTS6VExWQuHgnNEBv5UOUjo7VKbvFeDx\nqbBF3MepaMyr9/od5GUQ/UskY8+kvC8f+pEuRVBwDnUBnes9/QN17fgd5LDGiH1u\nbmPEzUo22cpu6POA61wbNicEQIHU7MyCM/rP9PYb3sUF0so8Wn0KbJ6B5RD6aBQw\nhI6eng4ULbwGBEm4nu8OJjnNcZiRBizfAumijJtKa64zLTgFji0y1xS45EHGIXjQ\nsqmG7MOw3DxLoSEIHfHXhxFNLc/HQMNDt+yxwW/HN1atJJT9skhVSBImbHRPu10=\n=KEBE\n-----END PGP SIGNATURE-----\n", "payload": "tree e547f55687aebef0cc8453b0e3b45a118696874c\nparent 34f02c3e8dc441a6626d8b12f497612f98adc18a\nparent 269ff92975e9955de655a237496be96783b3eee5\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1664455402 +0530\ncommitter GitHub <noreply@github.com> 1664455402 +0530\n\nRollup merge of #102455 - nnethercote:WhileTrue-check_expr, r=lqd\n\nUse let-chaining in `WhileTrue::check_expr`.\n\nThis has been bugging me for a while.\n\nr? `@lqd`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4e7094ffc3970a17884a5f933da45cb51dd3e1c", "html_url": "https://github.com/rust-lang/rust/commit/f4e7094ffc3970a17884a5f933da45cb51dd3e1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4e7094ffc3970a17884a5f933da45cb51dd3e1c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34f02c3e8dc441a6626d8b12f497612f98adc18a", "url": "https://api.github.com/repos/rust-lang/rust/commits/34f02c3e8dc441a6626d8b12f497612f98adc18a", "html_url": "https://github.com/rust-lang/rust/commit/34f02c3e8dc441a6626d8b12f497612f98adc18a"}, {"sha": "269ff92975e9955de655a237496be96783b3eee5", "url": "https://api.github.com/repos/rust-lang/rust/commits/269ff92975e9955de655a237496be96783b3eee5", "html_url": "https://github.com/rust-lang/rust/commit/269ff92975e9955de655a237496be96783b3eee5"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "5d69c35ebfced90a07dd94323f31dd0383f189c1", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 22, "deletions": 24, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f4e7094ffc3970a17884a5f933da45cb51dd3e1c/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4e7094ffc3970a17884a5f933da45cb51dd3e1c/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=f4e7094ffc3970a17884a5f933da45cb51dd3e1c", "patch": "@@ -97,30 +97,28 @@ fn pierce_parens(mut expr: &ast::Expr) -> &ast::Expr {\n \n impl EarlyLintPass for WhileTrue {\n     fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &ast::Expr) {\n-        if let ast::ExprKind::While(cond, _, label) = &e.kind {\n-            if let ast::ExprKind::Lit(ref lit) = pierce_parens(cond).kind {\n-                if let ast::LitKind::Bool(true) = lit.kind {\n-                    if !lit.span.from_expansion() {\n-                        let condition_span = e.span.with_hi(cond.span.hi());\n-                        cx.struct_span_lint(WHILE_TRUE, condition_span, |lint| {\n-                            lint.build(fluent::lint::builtin_while_true)\n-                                .span_suggestion_short(\n-                                    condition_span,\n-                                    fluent::lint::suggestion,\n-                                    format!(\n-                                        \"{}loop\",\n-                                        label.map_or_else(String::new, |label| format!(\n-                                            \"{}: \",\n-                                            label.ident,\n-                                        ))\n-                                    ),\n-                                    Applicability::MachineApplicable,\n-                                )\n-                                .emit();\n-                        })\n-                    }\n-                }\n-            }\n+        if let ast::ExprKind::While(cond, _, label) = &e.kind\n+            && let ast::ExprKind::Lit(ref lit) = pierce_parens(cond).kind\n+            && let ast::LitKind::Bool(true) = lit.kind\n+            && !lit.span.from_expansion()\n+        {\n+            let condition_span = e.span.with_hi(cond.span.hi());\n+            cx.struct_span_lint(WHILE_TRUE, condition_span, |lint| {\n+                lint.build(fluent::lint::builtin_while_true)\n+                    .span_suggestion_short(\n+                        condition_span,\n+                        fluent::lint::suggestion,\n+                        format!(\n+                            \"{}loop\",\n+                            label.map_or_else(String::new, |label| format!(\n+                                \"{}: \",\n+                                label.ident,\n+                            ))\n+                        ),\n+                        Applicability::MachineApplicable,\n+                    )\n+                    .emit();\n+            })\n         }\n     }\n }"}]}