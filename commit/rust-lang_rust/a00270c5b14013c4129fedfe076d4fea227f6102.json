{"sha": "a00270c5b14013c4129fedfe076d4fea227f6102", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMDI3MGM1YjE0MDEzYzQxMjlmZWRmZTA3NmQ0ZmVhMjI3ZjYxMDI=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2015-08-12T19:17:21Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-08-13T09:38:39Z"}, "message": "grammar", "tree": {"sha": "7ee072445d82cee5d4c4170d6192c8c906d2dc8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee072445d82cee5d4c4170d6192c8c906d2dc8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a00270c5b14013c4129fedfe076d4fea227f6102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a00270c5b14013c4129fedfe076d4fea227f6102", "html_url": "https://github.com/rust-lang/rust/commit/a00270c5b14013c4129fedfe076d4fea227f6102", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a00270c5b14013c4129fedfe076d4fea227f6102/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e786d3956c5500af94c9ae3eddb5fc7e58b0c67", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e786d3956c5500af94c9ae3eddb5fc7e58b0c67", "html_url": "https://github.com/rust-lang/rust/commit/9e786d3956c5500af94c9ae3eddb5fc7e58b0c67"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "50971962f907fb3664ed15cce9d4d5698841d53c", "filename": "src/strings.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a00270c5b14013c4129fedfe076d4fea227f6102/src%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a00270c5b14013c4129fedfe076d4fea227f6102/src%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstrings.rs?ref=a00270c5b14013c4129fedfe076d4fea227f6102", "patch": "@@ -13,14 +13,14 @@ use utils::{match_def_path, span_lint, walk_ptrs_ty, get_parent_expr};\n \n declare_lint! {\n     pub STRING_ADD_ASSIGN,\n-    Warn,\n-    \"Warn on `x = x + ..` where x is a `String`\"\n+    Allow,\n+    \"expressions of the form `x = x + ..` where x is a `String`\"\n }\n \n declare_lint! {\n     pub STRING_ADD,\n     Allow,\n-    \"Warn on `x + ..` where x is a `String`\"\n+    \"expressions of the form on `x + ..` where x is a `String`\"\n }\n \n #[derive(Copy, Clone)]\n@@ -47,14 +47,14 @@ impl LintPass for StringAdd {\n                 }\n                 //TODO check for duplicates\n                  span_lint(cx, STRING_ADD, e.span,\n-                        \"you add something to a string. \\\n+                        \"you added something to a string. \\\n                         Consider using `String::push_str()` instead.\")\n             }\n         } else if let &ExprAssign(ref target, ref  src) = &e.node {\n             if is_string(cx, target) && is_add(src, target) {\n                 span_lint(cx, STRING_ADD_ASSIGN, e.span,\n-                    \"you assign the result of adding something to this string. \\\n-                    Consider using `String::push_str()` instead\")\n+                    \"you assigned the result of adding something to this string. \\\n+                    Consider using `String::push_str()` instead.\")\n             }\n         }\n     }"}]}