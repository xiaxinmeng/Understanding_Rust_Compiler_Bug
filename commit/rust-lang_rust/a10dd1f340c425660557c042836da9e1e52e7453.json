{"sha": "a10dd1f340c425660557c042836da9e1e52e7453", "node_id": "C_kwDOAAsO6NoAKGExMGRkMWYzNDBjNDI1NjYwNTU3YzA0MjgzNmRhOWUxZTUyZTc0NTM", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-14T13:35:24Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-14T15:30:25Z"}, "message": "address review again", "tree": {"sha": "e2553c78039f5b14856df157d6019f45f42e884a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2553c78039f5b14856df157d6019f45f42e884a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a10dd1f340c425660557c042836da9e1e52e7453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a10dd1f340c425660557c042836da9e1e52e7453", "html_url": "https://github.com/rust-lang/rust/commit/a10dd1f340c425660557c042836da9e1e52e7453", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a10dd1f340c425660557c042836da9e1e52e7453/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa35afe8dca1e73169246101cba56b933a7ea132", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa35afe8dca1e73169246101cba56b933a7ea132", "html_url": "https://github.com/rust-lang/rust/commit/fa35afe8dca1e73169246101cba56b933a7ea132"}], "stats": {"total": 20, "additions": 1, "deletions": 19}, "files": [{"sha": "bc34802fa72884035e2b28084ffb3e0871f48701", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a10dd1f340c425660557c042836da9e1e52e7453/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a10dd1f340c425660557c042836da9e1e52e7453/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=a10dd1f340c425660557c042836da9e1e52e7453", "patch": "@@ -121,25 +121,7 @@ pub(crate) fn codegen_constant<'tcx>(\n             ConstKind::Value(valtree) => {\n                 (fx.tcx.valtree_to_const_val((const_.ty(), valtree)), const_.ty())\n             }\n-            ConstKind::Unevaluated(ty::Unevaluated { def, substs, promoted })\n-                if fx.tcx.is_static(def.did) =>\n-            {\n-                assert!(substs.is_empty());\n-                assert_eq!(promoted, ());\n-                return codegen_static_ref(fx, def.did, fx.layout_of(const_.ty())).to_cvalue(fx);\n-            }\n-            ConstKind::Unevaluated(unevaluated) => {\n-                match fx.tcx.const_eval_resolve(ParamEnv::reveal_all(), unevaluated.expand(), None)\n-                {\n-                    Ok(const_val) => (const_val, const_.ty()),\n-                    Err(_) => {\n-                        span_bug!(\n-                            constant.span,\n-                            \"erroneous constant not captured by required_consts\"\n-                        );\n-                    }\n-                }\n-            }\n+            ConstKind::Unevaluated(_) => bug!(\"expected constant to be evaluated at this stage\"),\n             ConstKind::Param(_)\n             | ConstKind::Infer(_)\n             | ConstKind::Bound(_, _)"}]}