{"sha": "14e72696a693ef6618a236062cce8b16f8ee1383", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZTcyNjk2YTY5M2VmNjYxOGEyMzYwNjJjY2U4YjE2ZjhlZTEzODM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-06T23:22:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-06T23:22:28Z"}, "message": "Auto merge of #6124 - pickfire:patch-1, r=flip1995\n\nUse more concrete explanation for methods\n\n*Please keep the line below*\nchangelog: none", "tree": {"sha": "a8d5ad5279adab45f43b149b1fd916f59bc417eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8d5ad5279adab45f43b149b1fd916f59bc417eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14e72696a693ef6618a236062cce8b16f8ee1383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14e72696a693ef6618a236062cce8b16f8ee1383", "html_url": "https://github.com/rust-lang/rust/commit/14e72696a693ef6618a236062cce8b16f8ee1383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14e72696a693ef6618a236062cce8b16f8ee1383/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8d89ba5d52463b365e4d7306cff01401a621fb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8d89ba5d52463b365e4d7306cff01401a621fb0", "html_url": "https://github.com/rust-lang/rust/commit/c8d89ba5d52463b365e4d7306cff01401a621fb0"}, {"sha": "7021d70d2e57e081597ea34eb18226a71b665ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7021d70d2e57e081597ea34eb18226a71b665ecd", "html_url": "https://github.com/rust-lang/rust/commit/7021d70d2e57e081597ea34eb18226a71b665ecd"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "c0824bacbc73510403c0d3694a1ee9a258930828", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/14e72696a693ef6618a236062cce8b16f8ee1383/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14e72696a693ef6618a236062cce8b16f8ee1383/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=14e72696a693ef6618a236062cce8b16f8ee1383", "patch": "@@ -400,8 +400,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.map(_).flatten(_)`,\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call using `_.flat_map(_)`\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.flat_map(_)`\n     ///\n     /// **Known problems:**\n     ///\n@@ -424,8 +424,8 @@ declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.filter(_).map(_)`,\n     /// `_.filter(_).flat_map(_)`, `_.filter_map(_).flat_map(_)` and similar.\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.filter_map(_)`.\n     ///\n     /// **Known problems:** Often requires a condition + Option/Iterator creation\n     /// inside the closure.\n@@ -452,8 +452,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.filter_map(_).next()`.\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.find_map(_)`.\n     ///\n     /// **Known problems:** None\n     ///\n@@ -496,8 +496,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.find(_).map(_)`.\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.find_map(_)`.\n     ///\n     /// **Known problems:** Often requires a condition + Option/Iterator creation\n     /// inside the closure.\n@@ -1276,8 +1276,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.as_ref().map(Deref::deref)` or it's aliases (such as String::as_str).\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.as_deref()`.\n     ///\n     /// **Known problems:** None.\n     ///"}]}