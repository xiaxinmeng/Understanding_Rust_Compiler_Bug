{"sha": "abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZDhjY2VmYTRmZDFhYmJmNjc0ZjQ3OWYwZGQ3ZDA0NTdjOTRkMmQ=", "commit": {"author": {"name": "Bernardo", "email": "berublan@gmail.com", "date": "2019-01-16T17:42:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T08:46:27Z"}, "message": "better error handling", "tree": {"sha": "dfe058812ed6dfe3bb25389ac5c530c370cbc5ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfe058812ed6dfe3bb25389ac5c530c370cbc5ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d", "html_url": "https://github.com/rust-lang/rust/commit/abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d/comments", "author": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0f7e72c49141df0ad95e3fcb561ee6a4d86b537", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f7e72c49141df0ad95e3fcb561ee6a4d86b537", "html_url": "https://github.com/rust-lang/rust/commit/b0f7e72c49141df0ad95e3fcb561ee6a4d86b537"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "f698e3e86e050a7d90ab1726e2d88d311acd87a2", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=abd8ccefa4fd1abbf674f479f0dd7d0457c94d2d", "patch": "@@ -86,7 +86,7 @@ pub struct Vfs {\n     pending_changes: Vec<VfsChange>,\n     worker: io::Worker,\n     worker_handle: WorkerHandle,\n-    watcher: Watcher,\n+    watcher: Option<Watcher>,\n }\n \n impl fmt::Debug for Vfs {\n@@ -99,7 +99,13 @@ impl Vfs {\n     pub fn new(mut roots: Vec<PathBuf>) -> (Vfs, Vec<VfsRoot>) {\n         let (worker, worker_handle) = io::start();\n \n-        let watcher = Watcher::start(worker.inp.clone()).unwrap(); // TODO return Result?\n+        let watcher = match Watcher::start(worker.inp.clone()) {\n+            Ok(watcher) => Some(watcher),\n+            Err(e) => {\n+                log::error!(\"could not start watcher: {}\", e);\n+                None\n+            }\n+        };\n \n         let mut res = Vfs {\n             roots: Arena::default(),\n@@ -134,7 +140,11 @@ impl Vfs {\n                 filter: Box::new(filter),\n             };\n             res.worker.inp.send(task).unwrap();\n-            res.watcher.watch(path).unwrap();\n+            if let Some(ref mut watcher) = res.watcher {\n+                if let Err(e) = watcher.watch(path) {\n+                    log::warn!(\"could not watch \\\"{}\\\": {}\", path.display(), e);\n+                }\n+            }\n         }\n         let roots = res.roots.iter().map(|(id, _)| id).collect();\n         (res, roots)\n@@ -350,7 +360,9 @@ impl Vfs {\n \n     /// Sutdown the VFS and terminate the background watching thread.\n     pub fn shutdown(self) -> thread::Result<()> {\n-        let _ = self.watcher.shutdown();\n+        if let Some(watcher) = self.watcher {\n+            let _ = watcher.shutdown();\n+        }\n         let _ = self.worker.shutdown();\n         self.worker_handle.shutdown()\n     }"}]}