{"sha": "7719f534196c9fe5216161e313ad7624f1beadee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MTlmNTM0MTk2YzlmZTUyMTYxNjFlMzEzYWQ3NjI0ZjFiZWFkZWU=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-02-16T13:16:41Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-03-22T20:42:12Z"}, "message": "Replace `structurally_resolved_type` in casts check.\n\nThe behaviour of `resolve_type_vars_if_possible` is simpler and\ninfallible.", "tree": {"sha": "aacb4a13411cab599371044b11f44bf8b637d1ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aacb4a13411cab599371044b11f44bf8b637d1ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7719f534196c9fe5216161e313ad7624f1beadee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7719f534196c9fe5216161e313ad7624f1beadee", "html_url": "https://github.com/rust-lang/rust/commit/7719f534196c9fe5216161e313ad7624f1beadee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7719f534196c9fe5216161e313ad7624f1beadee/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5092c6b01acbff60935a5e6d84f83b6c73c1ca5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5092c6b01acbff60935a5e6d84f83b6c73c1ca5e", "html_url": "https://github.com/rust-lang/rust/commit/5092c6b01acbff60935a5e6d84f83b6c73c1ca5e"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "3ba79d91964abb0a653cb4a434877a5d7af3ee83", "filename": "src/librustc/ty/cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7719f534196c9fe5216161e313ad7624f1beadee/src%2Flibrustc%2Fty%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7719f534196c9fe5216161e313ad7624f1beadee/src%2Flibrustc%2Fty%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcast.rs?ref=7719f534196c9fe5216161e313ad7624f1beadee", "patch": "@@ -20,7 +20,6 @@ use syntax::ast;\n pub enum IntTy {\n     U(ast::UintTy),\n     I,\n-    Ivar,\n     CEnum,\n     Bool,\n     Char\n@@ -64,7 +63,7 @@ impl<'tcx> CastTy<'tcx> {\n             ty::TyBool => Some(CastTy::Int(IntTy::Bool)),\n             ty::TyChar => Some(CastTy::Int(IntTy::Char)),\n             ty::TyInt(_) => Some(CastTy::Int(IntTy::I)),\n-            ty::TyInfer(ty::InferTy::IntVar(_)) => Some(CastTy::Int(IntTy::Ivar)),\n+            ty::TyInfer(ty::InferTy::IntVar(_)) => Some(CastTy::Int(IntTy::I)),\n             ty::TyInfer(ty::InferTy::FloatVar(_)) => Some(CastTy::Float),\n             ty::TyUint(u) => Some(CastTy::Int(IntTy::U(u))),\n             ty::TyFloat(_) => Some(CastTy::Float),"}, {"sha": "31f418df902be0e3eb849879722a1d77636b7f6c", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7719f534196c9fe5216161e313ad7624f1beadee/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7719f534196c9fe5216161e313ad7624f1beadee/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=7719f534196c9fe5216161e313ad7624f1beadee", "patch": "@@ -389,8 +389,8 @@ impl<'a, 'gcx, 'tcx> CastCheck<'tcx> {\n     }\n \n     pub fn check(mut self, fcx: &FnCtxt<'a, 'gcx, 'tcx>) {\n-        self.expr_ty = fcx.structurally_resolved_type(self.span, self.expr_ty);\n-        self.cast_ty = fcx.structurally_resolved_type(self.span, self.cast_ty);\n+        self.expr_ty = fcx.resolve_type_vars_if_possible(&self.expr_ty);\n+        self.cast_ty = fcx.resolve_type_vars_if_possible(&self.cast_ty);\n \n         debug!(\"check_cast({}, {:?} as {:?})\",\n                self.expr.id,\n@@ -484,11 +484,7 @@ impl<'a, 'gcx, 'tcx> CastCheck<'tcx> {\n                     ty::TypeVariants::TyInfer(t) => {\n                         match t {\n                             ty::InferTy::IntVar(_) |\n-                            ty::InferTy::FloatVar(_) |\n-                            ty::InferTy::FreshIntTy(_) |\n-                            ty::InferTy::FreshFloatTy(_) => {\n-                                Err(CastError::NeedDeref)\n-                            }\n+                            ty::InferTy::FloatVar(_) => Err(CastError::NeedDeref),\n                             _ => Err(CastError::NeedViaPtr),\n                         }\n                     }"}]}