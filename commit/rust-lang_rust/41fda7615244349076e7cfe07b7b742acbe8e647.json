{"sha": "41fda7615244349076e7cfe07b7b742acbe8e647", "node_id": "C_kwDOAAsO6NoAKDQxZmRhNzYxNTI0NDM0OTA3NmU3Y2ZlMDdiN2I3NDJhY2JlOGU2NDc", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-31T11:01:01Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-31T11:01:01Z"}, "message": "simplify `is_exit` check", "tree": {"sha": "d054ed8c4fc2ae060f014af32f31b53ebb114525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d054ed8c4fc2ae060f014af32f31b53ebb114525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41fda7615244349076e7cfe07b7b742acbe8e647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41fda7615244349076e7cfe07b7b742acbe8e647", "html_url": "https://github.com/rust-lang/rust/commit/41fda7615244349076e7cfe07b7b742acbe8e647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41fda7615244349076e7cfe07b7b742acbe8e647/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b75803ad31772d105d86f8ebee0cbc8844a4fa29", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75803ad31772d105d86f8ebee0cbc8844a4fa29", "html_url": "https://github.com/rust-lang/rust/commit/b75803ad31772d105d86f8ebee0cbc8844a4fa29"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "49a825e579b5e504694ae44ab5a701e82d8bd9ff", "filename": "lib/lsp-server/src/stdio.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/41fda7615244349076e7cfe07b7b742acbe8e647/lib%2Flsp-server%2Fsrc%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41fda7615244349076e7cfe07b7b742acbe8e647/lib%2Flsp-server%2Fsrc%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Flsp-server%2Fsrc%2Fstdio.rs?ref=41fda7615244349076e7cfe07b7b742acbe8e647", "patch": "@@ -21,10 +21,7 @@ pub(crate) fn stdio_transport() -> (Sender<Message>, Receiver<Message>, IoThread\n         let stdin = stdin();\n         let mut stdin = stdin.lock();\n         while let Some(msg) = Message::read(&mut stdin)? {\n-            let is_exit = match &msg {\n-                Message::Notification(n) => n.is_exit(),\n-                _ => false,\n-            };\n+            let is_exit = matches!(&msg, Message::Notification(n) if n.is_exit());\n \n             reader_sender.send(msg).unwrap();\n "}]}