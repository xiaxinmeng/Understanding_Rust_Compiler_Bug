{"sha": "66182ed5d5e43962a46492ea41f19f9adeccc9e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MTgyZWQ1ZDVlNDM5NjJhNDY0OTJlYTQxZjE5ZjlhZGVjY2M5ZTU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T09:51:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T09:51:00Z"}, "message": "Ref exprs", "tree": {"sha": "e27b4a8e46d3e18be7d35fa9ae32b0a7b5e5934b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e27b4a8e46d3e18be7d35fa9ae32b0a7b5e5934b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66182ed5d5e43962a46492ea41f19f9adeccc9e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66182ed5d5e43962a46492ea41f19f9adeccc9e5", "html_url": "https://github.com/rust-lang/rust/commit/66182ed5d5e43962a46492ea41f19f9adeccc9e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66182ed5d5e43962a46492ea41f19f9adeccc9e5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff71cb1f6de07479610fb0f45e740b249e8a01c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff71cb1f6de07479610fb0f45e740b249e8a01c6", "html_url": "https://github.com/rust-lang/rust/commit/ff71cb1f6de07479610fb0f45e740b249e8a01c6"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "9383abd196fb1653945c7a7e10a12b56745ce6cb", "filename": "src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66182ed5d5e43962a46492ea41f19f9adeccc9e5/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/66182ed5d5e43962a46492ea41f19f9adeccc9e5/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=66182ed5d5e43962a46492ea41f19f9adeccc9e5", "patch": "@@ -126,6 +126,7 @@ Grammar(\n         \"TUPLE_EXPR\",\n         \"PATH_EXPR\",\n         \"CALL_EXPR\",\n+        \"REF_EXPR\",\n \n         \"EXTERN_BLOCK\",\n         \"ENUM_VARIANT\","}, {"sha": "4861536f8d4ba435e3aad978424008e2f62eaeb6", "filename": "src/parser/grammar/expressions.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/66182ed5d5e43962a46492ea41f19f9adeccc9e5/src%2Fparser%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66182ed5d5e43962a46492ea41f19f9adeccc9e5/src%2Fparser%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fexpressions.rs?ref=66182ed5d5e43962a46492ea41f19f9adeccc9e5", "patch": "@@ -26,7 +26,7 @@ pub(super) fn literal(p: &mut Parser) -> Option<CompletedMarker> {\n }\n \n pub(super) fn expr(p: &mut Parser) {\n-    let mut lhs = atom_expr(p);\n+    let mut lhs = prefix_expr(p);\n \n     while let Some(m) = lhs {\n         match p.current() {\n@@ -36,6 +36,27 @@ pub(super) fn expr(p: &mut Parser) {\n     }\n }\n \n+fn prefix_expr(p: &mut Parser) -> Option<CompletedMarker> {\n+    match p.current() {\n+        AMPERSAND => Some(ref_expr(p)),\n+        _ => atom_expr(p)\n+    }\n+}\n+\n+// test ref_expr\n+// fn foo() {\n+//     let _ = &1;\n+//     let _ = &mut &f();\n+// }\n+fn ref_expr(p: &mut Parser) -> CompletedMarker {\n+    assert!(p.at(AMPERSAND));\n+    let m = p.start();\n+    p.bump();\n+    p.eat(MUT_KW);\n+    expr(p);\n+    m.complete(p, REF_EXPR)\n+}\n+\n fn atom_expr(p: &mut Parser) -> Option<CompletedMarker> {\n     match literal(p) {\n         Some(m) => return Some(m),"}, {"sha": "dc391c4a76ac44c8c6c41d0b2f3dfc77b988a067", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66182ed5d5e43962a46492ea41f19f9adeccc9e5/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66182ed5d5e43962a46492ea41f19f9adeccc9e5/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=66182ed5d5e43962a46492ea41f19f9adeccc9e5", "patch": "@@ -117,6 +117,7 @@ pub enum SyntaxKind {\n     TUPLE_EXPR,\n     PATH_EXPR,\n     CALL_EXPR,\n+    REF_EXPR,\n     EXTERN_BLOCK,\n     ENUM_VARIANT,\n     NAMED_FIELD,\n@@ -266,6 +267,7 @@ impl SyntaxKind {\n             TUPLE_EXPR => &SyntaxInfo { name: \"TUPLE_EXPR\" },\n             PATH_EXPR => &SyntaxInfo { name: \"PATH_EXPR\" },\n             CALL_EXPR => &SyntaxInfo { name: \"CALL_EXPR\" },\n+            REF_EXPR => &SyntaxInfo { name: \"REF_EXPR\" },\n             EXTERN_BLOCK => &SyntaxInfo { name: \"EXTERN_BLOCK\" },\n             ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },\n             NAMED_FIELD => &SyntaxInfo { name: \"NAMED_FIELD\" },"}, {"sha": "2dac6be95e753f696d9264e10970cc508b72a12c", "filename": "tests/data/parser/inline/0044_ref_expr.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66182ed5d5e43962a46492ea41f19f9adeccc9e5/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66182ed5d5e43962a46492ea41f19f9adeccc9e5/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.rs?ref=66182ed5d5e43962a46492ea41f19f9adeccc9e5", "patch": "@@ -0,0 +1,4 @@\n+fn foo() {\n+    let _ = &1;\n+    let _ = &mut &f();\n+}"}, {"sha": "64388df4235044e320c789a903f488c0e8e5039c", "filename": "tests/data/parser/inline/0044_ref_expr.txt", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/66182ed5d5e43962a46492ea41f19f9adeccc9e5/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/66182ed5d5e43962a46492ea41f19f9adeccc9e5/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0044_ref_expr.txt?ref=66182ed5d5e43962a46492ea41f19f9adeccc9e5", "patch": "@@ -0,0 +1,54 @@\n+FILE@[0; 52)\n+  FN_ITEM@[0; 52)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK@[9; 52)\n+      L_CURLY@[9; 10)\n+      LET_STMT@[10; 31)\n+        WHITESPACE@[10; 15)\n+        LET_KW@[15; 18)\n+        PLACEHOLDER_PAT@[18; 21)\n+          WHITESPACE@[18; 19)\n+          UNDERSCORE@[19; 20)\n+          WHITESPACE@[20; 21)\n+        EQ@[21; 22)\n+        REF_EXPR@[22; 25)\n+          WHITESPACE@[22; 23)\n+          AMPERSAND@[23; 24)\n+          LITERAL@[24; 25)\n+            INT_NUMBER@[24; 25)\n+        SEMI@[25; 26)\n+        WHITESPACE@[26; 31)\n+      LET_STMT@[31; 50)\n+        LET_KW@[31; 34)\n+        PLACEHOLDER_PAT@[34; 37)\n+          WHITESPACE@[34; 35)\n+          UNDERSCORE@[35; 36)\n+          WHITESPACE@[36; 37)\n+        EQ@[37; 38)\n+        REF_EXPR@[38; 48)\n+          WHITESPACE@[38; 39)\n+          AMPERSAND@[39; 40)\n+          MUT_KW@[40; 43)\n+          REF_EXPR@[43; 48)\n+            WHITESPACE@[43; 44)\n+            AMPERSAND@[44; 45)\n+            CALL_EXPR@[45; 48)\n+              PATH_EXPR@[45; 46)\n+                PATH@[45; 46)\n+                  PATH_SEGMENT@[45; 46)\n+                    NAME_REF@[45; 46)\n+                      IDENT@[45; 46) \"f\"\n+              ARG_LIST@[46; 48)\n+                L_PAREN@[46; 47)\n+                R_PAREN@[47; 48)\n+        SEMI@[48; 49)\n+        WHITESPACE@[49; 50)\n+      R_CURLY@[50; 51)\n+      WHITESPACE@[51; 52)"}]}