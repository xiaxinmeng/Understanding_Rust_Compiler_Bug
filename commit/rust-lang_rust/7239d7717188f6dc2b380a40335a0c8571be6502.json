{"sha": "7239d7717188f6dc2b380a40335a0c8571be6502", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMzlkNzcxNzE4OGY2ZGMyYjM4MGE0MDMzNWEwYzg1NzFiZTY1MDI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-06T21:29:55Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-16T18:49:10Z"}, "message": "Point at `:` when using it instead of `;`\n\nWhen triggering type ascription in such a way that we can infer a\nstatement end was intended, add a suggestion for the change. Always\npoint out the reason for the expectation of a type is due to type\nascription.", "tree": {"sha": "7c22fc3eeb42d3e9ba5427801ff31660834d70f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c22fc3eeb42d3e9ba5427801ff31660834d70f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7239d7717188f6dc2b380a40335a0c8571be6502", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7239d7717188f6dc2b380a40335a0c8571be6502", "html_url": "https://github.com/rust-lang/rust/commit/7239d7717188f6dc2b380a40335a0c8571be6502", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7239d7717188f6dc2b380a40335a0c8571be6502/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1339af2e5d1b33ec9ee3c8a3c531bcd61770fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1339af2e5d1b33ec9ee3c8a3c531bcd61770fc", "html_url": "https://github.com/rust-lang/rust/commit/8f1339af2e5d1b33ec9ee3c8a3c531bcd61770fc"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "1b6c3cf94e4f4e232a6afc116b3e691211a8c3fa", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7239d7717188f6dc2b380a40335a0c8571be6502/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7239d7717188f6dc2b380a40335a0c8571be6502/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7239d7717188f6dc2b380a40335a0c8571be6502", "patch": "@@ -2798,7 +2798,22 @@ impl<'a> Parser<'a> {\n                 lhs = self.parse_assoc_op_cast(lhs, lhs_span, ExprKind::Cast)?;\n                 continue\n             } else if op == AssocOp::Colon {\n-                lhs = self.parse_assoc_op_cast(lhs, lhs_span, ExprKind::Type)?;\n+                lhs = match self.parse_assoc_op_cast(lhs, lhs_span, ExprKind::Type) {\n+                    Ok(lhs) => lhs,\n+                    Err(mut err) => {\n+                        err.span_label(self.span,\n+                                       \"expecting a type here because of type ascription\");\n+                        let cm = self.sess.codemap();\n+                        let cur_pos = cm.lookup_char_pos(self.span.lo);\n+                        let op_pos = cm.lookup_char_pos(cur_op_span.hi);\n+                        if cur_pos.line != op_pos.line {\n+                            err.span_suggestion(cur_op_span,\n+                                                \"did you mean to end the statement here instead?\",\n+                                                \";\".to_string());\n+                        }\n+                        return Err(err);\n+                    }\n+                };\n                 continue\n             } else if op == AssocOp::DotDot || op == AssocOp::DotDotDot {\n                 // If we didn\u2019t have to handle `x..`/`x...`, it would be pretty easy to"}, {"sha": "93de55a39e954072dd71fe55537bfdc0a55860e3", "filename": "src/test/ui/suggestions/type-ascription-instead-of-statement-end.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7239d7717188f6dc2b380a40335a0c8571be6502/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7239d7717188f6dc2b380a40335a0c8571be6502/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.rs?ref=7239d7717188f6dc2b380a40335a0c8571be6502", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(type_ascription)]\n+\n+fn main() {\n+    println!(\"test\"):\n+    0;\n+}\n+\n+fn foo() {\n+    println!(\"test\"): 0;\n+}"}, {"sha": "e4cf78dbb2d9ff7574a8df3b622691b25825253d", "filename": "src/test/ui/suggestions/type-ascription-instead-of-statement-end.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7239d7717188f6dc2b380a40335a0c8571be6502/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7239d7717188f6dc2b380a40335a0c8571be6502/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-instead-of-statement-end.stderr?ref=7239d7717188f6dc2b380a40335a0c8571be6502", "patch": "@@ -0,0 +1,16 @@\n+error: expected type, found `0`\n+  --> $DIR/type-ascription-instead-of-statement-end.rs:15:5\n+   |\n+14 |     println!(\"test\"):\n+   |                     - help: did you mean to end the statement here instead? `;`\n+15 |     0;\n+   |     ^ expecting a type here because of type ascription\n+\n+error: expected type, found `0`\n+  --> $DIR/type-ascription-instead-of-statement-end.rs:19:23\n+   |\n+19 |     println!(\"test\"): 0;\n+   |                       ^ expecting a type here because of type ascription\n+\n+error: aborting due to 2 previous errors\n+"}]}