{"sha": "b68d3293e34fd2be7f61881a2e0733bbbce97619", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2OGQzMjkzZTM0ZmQyYmU3ZjYxODgxYTJlMDczM2JiYmNlOTc2MTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-31T00:50:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-31T00:50:46Z"}, "message": "Auto merge of #38601 - schulzch:master, r=brson\n\nPartial fix for #38489.\n\nFixes script name resolution for windows by invoking `emcc.bat` instead of `emcc`, etc.\n\nRemaining issue:\n```\nTraceback (most recent call last):\n  File \"C:\\Program Files\\Emscripten\\emscripten\\1.35.0\\\\emcc\", line 1309, in <module>\n    final = shared.Building.llvm_opt(final, link_opts, DEFAULT_FINAL)\n  File \"C:\\Program Files\\Emscripten\\emscripten\\1.35.0\\tools\\shared.py\", line 1471, in llvm_opt\n    assert os.path.exists(target), 'Failed to run llvm optimizations: ' + output\nAssertionError: Failed to run llvm optimizations:\n```", "tree": {"sha": "d164b20c494969c690dd5d0a5daa7e58ce65e9cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d164b20c494969c690dd5d0a5daa7e58ce65e9cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b68d3293e34fd2be7f61881a2e0733bbbce97619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b68d3293e34fd2be7f61881a2e0733bbbce97619", "html_url": "https://github.com/rust-lang/rust/commit/b68d3293e34fd2be7f61881a2e0733bbbce97619", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b68d3293e34fd2be7f61881a2e0733bbbce97619/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dcf51aae61dcad1dbe7eef3766df2facef73816", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dcf51aae61dcad1dbe7eef3766df2facef73816", "html_url": "https://github.com/rust-lang/rust/commit/6dcf51aae61dcad1dbe7eef3766df2facef73816"}, {"sha": "14994ac6b67cdaff1692f836e3495a75f4f7d71b", "url": "https://api.github.com/repos/rust-lang/rust/commits/14994ac6b67cdaff1692f836e3495a75f4f7d71b", "html_url": "https://github.com/rust-lang/rust/commit/14994ac6b67cdaff1692f836e3495a75f4f7d71b"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "2dbaeaf26e970f68cf15d27859324e6c94b88245", "filename": "src/librustc_back/target/asmjs_unknown_emscripten.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs?ref=b68d3293e34fd2be7f61881a2e0733bbbce97619", "patch": "@@ -9,11 +9,12 @@\n // except according to those terms.\n \n use super::{Target, TargetOptions};\n+use super::emscripten_base::{cmd};\n \n pub fn target() -> Result<Target, String> {\n     let opts = TargetOptions {\n-        linker: \"emcc\".to_string(),\n-        ar: \"emar\".to_string(),\n+        linker: cmd(\"emcc\"),\n+        ar: cmd(\"emar\"),\n \n         dynamic_linking: false,\n         executables: true,"}, {"sha": "bacada3f5ab02c6f666234a112340d1428b3710b", "filename": "src/librustc_back/target/emscripten_base.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Femscripten_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Femscripten_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Femscripten_base.rs?ref=b68d3293e34fd2be7f61881a2e0733bbbce97619", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn cmd(name: &str) -> String {\n+    if cfg!(windows) {\n+        format!(\"{}.bat\", name)\n+    } else {\n+        name.to_string()\n+    }\n+}"}, {"sha": "9616cc77e356a4764d83f5ba20077166cecd70c6", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=b68d3293e34fd2be7f61881a2e0733bbbce97619", "patch": "@@ -58,6 +58,7 @@ mod apple_ios_base;\n mod arm_base;\n mod bitrig_base;\n mod dragonfly_base;\n+mod emscripten_base;\n mod freebsd_base;\n mod haiku_base;\n mod linux_base;"}, {"sha": "a06980767fd75cd58baded41b2fabe298191e15a", "filename": "src/librustc_back/target/wasm32_unknown_emscripten.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68d3293e34fd2be7f61881a2e0733bbbce97619/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs?ref=b68d3293e34fd2be7f61881a2e0733bbbce97619", "patch": "@@ -9,11 +9,12 @@\n // except according to those terms.\n \n use super::{Target, TargetOptions};\n+use super::emscripten_base::{cmd};\n \n pub fn target() -> Result<Target, String> {\n     let opts = TargetOptions {\n-        linker: \"emcc\".to_string(),\n-        ar: \"emar\".to_string(),\n+        linker: cmd(\"emcc\"),\n+        ar: cmd(\"emar\"),\n \n         dynamic_linking: false,\n         executables: true,"}]}