{"sha": "5d3dfb446fc696bbeea796ee8e5230ba96ba41b9", "node_id": "C_kwDOAAsO6NoAKDVkM2RmYjQ0NmZjNjk2YmJlZWE3OTZlZThlNTIzMGJhOTZiYTQxYjk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-22T18:07:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-22T18:07:36Z"}, "message": "Rollup merge of #95200 - TaKO8Ki:cancel-not-emitted-error-when-parsing-generic-arg, r=oli-obk\n\nCancel a not emitted error after parsing const generic args\n\ncloses #95163", "tree": {"sha": "8e28d3e8e4d564f41bb3e9a824010f05faaae9a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e28d3e8e4d564f41bb3e9a824010f05faaae9a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiOhBoCRBK7hj4Ov3rIwAAagsIAJJ575u0niqTgm+08WMRccvC\ny/BBzXR7jkBeNhFDXdz63+eKOFVQSrrvSzpk9+BW2lF3TQULmzDr2uqK7Up7/gNE\nrlLttGwxM65J5zpYEZNmbBMTuLfY+CBnLV27GKN5qGC6oY8s/bVlSTtpzGzRG09r\nuFCgXlDlWXfw3ko/yMPWWt3SlJCm/d9Cwvbwo52X77PARNGCseLVRUlJ7Xk9fXOJ\nelDV4Z3EcV94SONBq67oycQaxrV1zc+5An1JSG/mCoSGcDtzvonIlCs8z7RpQYva\nWEYrBQDAH8jjpQ/AWNgO6LTX6TQgIwVXwz5vSNst7tvQeWUu1wefEkHz9RL5YMw=\n=KAR9\n-----END PGP SIGNATURE-----\n", "payload": "tree 8e28d3e8e4d564f41bb3e9a824010f05faaae9a1\nparent 0e80a7ab59731bdbba6a55f17bd825b2059ee3df\nparent 62ded071d588b92b394c4561d19d517d87074728\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1647972456 +0100\ncommitter GitHub <noreply@github.com> 1647972456 +0100\n\nRollup merge of #95200 - TaKO8Ki:cancel-not-emitted-error-when-parsing-generic-arg, r=oli-obk\n\nCancel a not emitted error after parsing const generic args\n\ncloses #95163\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9", "html_url": "https://github.com/rust-lang/rust/commit/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e80a7ab59731bdbba6a55f17bd825b2059ee3df", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e80a7ab59731bdbba6a55f17bd825b2059ee3df", "html_url": "https://github.com/rust-lang/rust/commit/0e80a7ab59731bdbba6a55f17bd825b2059ee3df"}, {"sha": "62ded071d588b92b394c4561d19d517d87074728", "url": "https://api.github.com/repos/rust-lang/rust/commits/62ded071d588b92b394c4561d19d517d87074728", "html_url": "https://github.com/rust-lang/rust/commit/62ded071d588b92b394c4561d19d517d87074728"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "07ce879de8f0ee629999d4e99dffef2fc2badd51", "filename": "compiler/rustc_parse/src/parser/path.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs?ref=5d3dfb446fc696bbeea796ee8e5230ba96ba41b9", "patch": "@@ -630,10 +630,14 @@ impl<'a> Parser<'a> {\n                 Ok(ty) => GenericArg::Type(ty),\n                 Err(err) => {\n                     if is_const_fn {\n-                        if let Ok(expr) = (*snapshot).parse_expr_res(Restrictions::CONST_EXPR, None)\n-                        {\n-                            self.restore_snapshot(snapshot);\n-                            return Ok(Some(self.dummy_const_arg_needs_braces(err, expr.span)));\n+                        match (*snapshot).parse_expr_res(Restrictions::CONST_EXPR, None) {\n+                            Ok(expr) => {\n+                                self.restore_snapshot(snapshot);\n+                                return Ok(Some(self.dummy_const_arg_needs_braces(err, expr.span)));\n+                            }\n+                            Err(err) => {\n+                                err.cancel();\n+                            }\n                         }\n                     }\n                     // Try to recover from possible `const` arg without braces."}, {"sha": "2bf628af8a772a03d2bb80018df765a62d15d5f7", "filename": "src/test/ui/const-generics/ice-const-generic-function-return-ty.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9/src%2Ftest%2Fui%2Fconst-generics%2Fice-const-generic-function-return-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9/src%2Ftest%2Fui%2Fconst-generics%2Fice-const-generic-function-return-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fice-const-generic-function-return-ty.rs?ref=5d3dfb446fc696bbeea796ee8e5230ba96ba41b9", "patch": "@@ -0,0 +1,5 @@\n+// #95163\n+fn return_ty() -> impl Into<<() as Reexported;\n+//~^ ERROR expected one of `(`, `::`, `<`, or `>`, found `;`\n+\n+fn main() {}"}, {"sha": "a72f5800a07c35e148cb9da0047293323d31eeac", "filename": "src/test/ui/const-generics/ice-const-generic-function-return-ty.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9/src%2Ftest%2Fui%2Fconst-generics%2Fice-const-generic-function-return-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d3dfb446fc696bbeea796ee8e5230ba96ba41b9/src%2Ftest%2Fui%2Fconst-generics%2Fice-const-generic-function-return-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fice-const-generic-function-return-ty.stderr?ref=5d3dfb446fc696bbeea796ee8e5230ba96ba41b9", "patch": "@@ -0,0 +1,8 @@\n+error: expected one of `(`, `::`, `<`, or `>`, found `;`\n+  --> $DIR/ice-const-generic-function-return-ty.rs:2:46\n+   |\n+LL | fn return_ty() -> impl Into<<() as Reexported;\n+   |                                              ^ expected one of `(`, `::`, `<`, or `>`\n+\n+error: aborting due to previous error\n+"}]}