{"sha": "b4197aeed670acd855c21c0b66c87eed0919c219", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MTk3YWVlZDY3MGFjZDg1NWMyMWMwYjY2Yzg3ZWVkMDkxOWMyMTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-18T00:21:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-18T00:21:32Z"}, "message": "auto merge of #10511 : cmr/rust/addtests, r=huonw\n\nCommit messages have all", "tree": {"sha": "cc331ffc2f3003a7750d1e83528d28f31c3738a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc331ffc2f3003a7750d1e83528d28f31c3738a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4197aeed670acd855c21c0b66c87eed0919c219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4197aeed670acd855c21c0b66c87eed0919c219", "html_url": "https://github.com/rust-lang/rust/commit/b4197aeed670acd855c21c0b66c87eed0919c219", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4197aeed670acd855c21c0b66c87eed0919c219/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c9e56f0ed96a7ebc9d6a854f64397f715069feb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c9e56f0ed96a7ebc9d6a854f64397f715069feb", "html_url": "https://github.com/rust-lang/rust/commit/2c9e56f0ed96a7ebc9d6a854f64397f715069feb"}, {"sha": "ed34cd1e3cc85252b398f33e6b9a90f9bd462b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed34cd1e3cc85252b398f33e6b9a90f9bd462b4d", "html_url": "https://github.com/rust-lang/rust/commit/ed34cd1e3cc85252b398f33e6b9a90f9bd462b4d"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "6486014bc97c70e160d44e0398e9a563914ab6de", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=b4197aeed670acd855c21c0b66c87eed0919c219", "patch": "@@ -117,7 +117,7 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n           ExprUnary(_, UnDeref, _) => { }\n           ExprUnary(_, UnBox(_), _) | ExprUnary(_, UnUniq, _) => {\n             sess.span_err(e.span,\n-                          \"disallowed operator in constant expression\");\n+                          \"cannot do allocations in constant expressions\");\n             return;\n           }\n           ExprLit(@codemap::Spanned {node: lit_str(*), _}) => { }\n@@ -191,7 +191,13 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n                     e.span,\n                     \"borrowed pointers in constants may only refer to \\\n                      immutable values\");\n-          }\n+          },\n+          ExprVstore(_, ExprVstoreUniq) |\n+          ExprVstore(_, ExprVstoreBox) |\n+          ExprVstore(_, ExprVstoreMutBox) => {\n+              sess.span_err(e.span, \"cannot allocate vectors in constant expressions\")\n+          },\n+\n           _ => {\n             sess.span_err(e.span,\n                           \"constant contains unimplemented expression type\");"}, {"sha": "d116b7b67ca9922b1c4d67a4efa9e887224ec8de", "filename": "src/test/compile-fail/issue-10487.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Ftest%2Fcompile-fail%2Fissue-10487.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Ftest%2Fcompile-fail%2Fissue-10487.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10487.rs?ref=b4197aeed670acd855c21c0b66c87eed0919c219", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[feature(managed_boxes)];\n+\n+static x: ~[int] = ~[123, 456]; //~ ERROR: cannot allocate vectors in constant expressions\n+static y: @[int] = @[123, 456]; //~ ERROR: cannot allocate vectors in constant expressions\n+static z: @mut [int] = @mut [123, 456]; //~ ERROR: cannot allocate vectors in constant expressions\n+\n+fn main() {}"}, {"sha": "69db9fa1b35908d5b29fc8658ffa2fa6a3400a72", "filename": "src/test/compile-fail/static-mut-not-constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs?ref=b4197aeed670acd855c21c0b66c87eed0919c219", "patch": "@@ -8,6 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-static mut a: ~int = ~3; //~ ERROR: disallowed operator in constant\n+static mut a: ~int = ~3; //~ ERROR: cannot do allocations in constant expressions\n \n fn main() {}"}, {"sha": "71b5f269e34da3aa0350fd027f8764298b8808dc", "filename": "src/test/run-pass/deriving-in-macro.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Ftest%2Frun-pass%2Fderiving-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4197aeed670acd855c21c0b66c87eed0919c219/src%2Ftest%2Frun-pass%2Fderiving-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-in-macro.rs?ref=b4197aeed670acd855c21c0b66c87eed0919c219", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[feature(macro_rules)];\n+\n+macro_rules! define_vec (\n+    () => (\n+        mod foo {\n+            #[deriving(Eq)]\n+            pub struct bar;\n+        }\n+    )\n+)\n+\n+define_vec!()\n+\n+pub fn main() {}"}]}