{"sha": "640f365bff2101a69dfee8f0f3be3ca5706dd343", "node_id": "C_kwDOAAsO6NoAKDY0MGYzNjViZmYyMTAxYTY5ZGZlZThmMGYzYmUzY2E1NzA2ZGQzNDM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-12T18:17:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-12T18:17:31Z"}, "message": "Rollup merge of #90761 - hellow554:macro_span, r=estebank\n\nShorten Span of unused macro lints\n\nThe span has been reduced to the actual ident of the macro, instead of linting the\n*whole* macro.\n\nCloses #90745\n\nr? ``@estebank``", "tree": {"sha": "3ffffbb88741b979ecfa20b470964faf86e9dd2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ffffbb88741b979ecfa20b470964faf86e9dd2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/640f365bff2101a69dfee8f0f3be3ca5706dd343", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhjq+8CRBK7hj4Ov3rIwAAP/MIABFRm4gV/LHmFkuya0hqa8ig\nkKdvas3C7xPJr6AdT4X9IHY7AWtbm65HNtNswkET7CcUIKkf/ovZKLm8BJs+ulmm\nB/p2JcwJUEIFf6xPPFWOfR8voRqFwkgN0iyI3kKFqdtwXBXixRncVm9ywXg7/QfC\nOh1twYu6OZiVcYLlLQzBkMCYPqmLB6dNAtj3BiHtVKlseIvjPoTEDPiqBIRe3xRr\nxCWoX522M487whkdDoClSRNKxTpptEr++balSuIITFIkRrCniSX+IRWWLovW7lo4\n9QXp7nmeEkIuF0OzUBMmvfMVizHI92CE1+KFe7sbinFbjNzjetb9JngwHErzc7c=\n=jd+U\n-----END PGP SIGNATURE-----\n", "payload": "tree 3ffffbb88741b979ecfa20b470964faf86e9dd2e\nparent 160602b48526b857ff838708eece72c9db55c95c\nparent 9f6ca7482ca885bca14ba6870ed39a783ab939b5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1636741051 +0100\ncommitter GitHub <noreply@github.com> 1636741051 +0100\n\nRollup merge of #90761 - hellow554:macro_span, r=estebank\n\nShorten Span of unused macro lints\n\nThe span has been reduced to the actual ident of the macro, instead of linting the\n*whole* macro.\n\nCloses #90745\n\nr? ``@estebank``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/640f365bff2101a69dfee8f0f3be3ca5706dd343", "html_url": "https://github.com/rust-lang/rust/commit/640f365bff2101a69dfee8f0f3be3ca5706dd343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/640f365bff2101a69dfee8f0f3be3ca5706dd343/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "160602b48526b857ff838708eece72c9db55c95c", "url": "https://api.github.com/repos/rust-lang/rust/commits/160602b48526b857ff838708eece72c9db55c95c", "html_url": "https://github.com/rust-lang/rust/commit/160602b48526b857ff838708eece72c9db55c95c"}, {"sha": "9f6ca7482ca885bca14ba6870ed39a783ab939b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6ca7482ca885bca14ba6870ed39a783ab939b5", "html_url": "https://github.com/rust-lang/rust/commit/9f6ca7482ca885bca14ba6870ed39a783ab939b5"}], "stats": {"total": 103, "additions": 41, "deletions": 62}, "files": [{"sha": "3cf9d324a38da9d2272d4d6c07321d95d5e57330", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/640f365bff2101a69dfee8f0f3be3ca5706dd343/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640f365bff2101a69dfee8f0f3be3ca5706dd343/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=640f365bff2101a69dfee8f0f3be3ca5706dd343", "patch": "@@ -1194,15 +1194,9 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n     // Mark the given macro as unused unless its name starts with `_`.\n     // Macro uses will remove items from this set, and the remaining\n     // items will be reported as `unused_macros`.\n-    fn insert_unused_macro(\n-        &mut self,\n-        ident: Ident,\n-        def_id: LocalDefId,\n-        node_id: NodeId,\n-        span: Span,\n-    ) {\n+    fn insert_unused_macro(&mut self, ident: Ident, def_id: LocalDefId, node_id: NodeId) {\n         if !ident.as_str().starts_with('_') {\n-            self.r.unused_macros.insert(def_id, (node_id, span));\n+            self.r.unused_macros.insert(def_id, (node_id, ident));\n         }\n     }\n \n@@ -1246,7 +1240,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 self.r.define(module, ident, MacroNS, (res, vis, span, expansion, IsMacroExport));\n             } else {\n                 self.r.check_reserved_macro_name(ident, res);\n-                self.insert_unused_macro(ident, def_id, item.id, span);\n+                self.insert_unused_macro(ident, def_id, item.id);\n             }\n             self.r.visibilities.insert(def_id, vis);\n             self.r.arenas.alloc_macro_rules_scope(MacroRulesScope::Binding(\n@@ -1267,7 +1261,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                 _ => self.resolve_visibility(&item.vis),\n             };\n             if vis != ty::Visibility::Public {\n-                self.insert_unused_macro(ident, def_id, item.id, span);\n+                self.insert_unused_macro(ident, def_id, item.id);\n             }\n             self.r.define(module, ident, MacroNS, (res, vis, span, expansion));\n             self.r.visibilities.insert(def_id, vis);"}, {"sha": "f5bea83bdcf654f68aa8d109151ae573039ad1b7", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/640f365bff2101a69dfee8f0f3be3ca5706dd343/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640f365bff2101a69dfee8f0f3be3ca5706dd343/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=640f365bff2101a69dfee8f0f3be3ca5706dd343", "patch": "@@ -988,7 +988,7 @@ pub struct Resolver<'a> {\n     non_macro_attr: Lrc<SyntaxExtension>,\n     local_macro_def_scopes: FxHashMap<LocalDefId, Module<'a>>,\n     ast_transform_scopes: FxHashMap<LocalExpnId, Module<'a>>,\n-    unused_macros: FxHashMap<LocalDefId, (NodeId, Span)>,\n+    unused_macros: FxHashMap<LocalDefId, (NodeId, Ident)>,\n     proc_macro_stubs: FxHashSet<LocalDefId>,\n     /// Traces collected during macro resolution and validated when it's complete.\n     single_segment_macro_resolutions:"}, {"sha": "31fd9b989e1c81827e523e30c52c8ad71018989f", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/640f365bff2101a69dfee8f0f3be3ca5706dd343/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640f365bff2101a69dfee8f0f3be3ca5706dd343/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=640f365bff2101a69dfee8f0f3be3ca5706dd343", "patch": "@@ -315,8 +315,13 @@ impl<'a> ResolverExpand for Resolver<'a> {\n     }\n \n     fn check_unused_macros(&mut self) {\n-        for (_, &(node_id, span)) in self.unused_macros.iter() {\n-            self.lint_buffer.buffer_lint(UNUSED_MACROS, node_id, span, \"unused macro definition\");\n+        for (_, &(node_id, ident)) in self.unused_macros.iter() {\n+            self.lint_buffer.buffer_lint(\n+                UNUSED_MACROS,\n+                node_id,\n+                ident.span,\n+                &format!(\"unused macro definition: `{}`\", ident.as_str()),\n+            );\n         }\n     }\n "}, {"sha": "b2e6d1aeb3f500243149f1d05819d4d134e76a15", "filename": "src/test/ui/lint/unused/issue-70041.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-70041.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-70041.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-70041.stderr?ref=640f365bff2101a69dfee8f0f3be3ca5706dd343", "patch": "@@ -1,11 +1,8 @@\n-warning: unused macro definition\n-  --> $DIR/issue-70041.rs:4:1\n+warning: unused macro definition: `regex`\n+  --> $DIR/issue-70041.rs:4:14\n    |\n-LL | / macro_rules! regex {\n-LL | |\n-LL | |     () => {};\n-LL | | }\n-   | |_^\n+LL | macro_rules! regex {\n+   |              ^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n "}, {"sha": "59db35b4111830cdd7f47f06ec70dfac7fff7fdc", "filename": "src/test/ui/lint/unused/unused-macro-rules.stderr", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro-rules.stderr?ref=640f365bff2101a69dfee8f0f3be3ca5706dd343", "patch": "@@ -1,37 +1,26 @@\n-error: unused macro definition\n-  --> $DIR/unused-macro-rules.rs:4:1\n+error: unused macro definition: `unused`\n+  --> $DIR/unused-macro-rules.rs:4:14\n    |\n-LL | / macro_rules! unused {\n-LL | |     () => {};\n-LL | | }\n-   | |_^\n+LL | macro_rules! unused {\n+   |              ^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/unused-macro-rules.rs:1:9\n    |\n LL | #![deny(unused_macros)]\n    |         ^^^^^^^^^^^^^\n \n-error: unused macro definition\n-  --> $DIR/unused-macro-rules.rs:11:9\n+error: unused macro definition: `m`\n+  --> $DIR/unused-macro-rules.rs:11:22\n    |\n-LL | /         macro_rules! m {\n-LL | |             () => {};\n-LL | |         }\n-   | |_________^\n-...\n-LL |   create_macro!();\n-   |   --------------- in this macro invocation\n-   |\n-   = note: this error originates in the macro `create_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n+LL |         macro_rules! m {\n+   |                      ^\n \n-error: unused macro definition\n-  --> $DIR/unused-macro-rules.rs:24:5\n+error: unused macro definition: `unused`\n+  --> $DIR/unused-macro-rules.rs:24:18\n    |\n-LL | /     macro_rules! unused {\n-LL | |         () => {};\n-LL | |     }\n-   | |_____^\n+LL |     macro_rules! unused {\n+   |                  ^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/unused-macro-rules.rs:23:12"}, {"sha": "1a73279ed6dbdcc517f3a6c3acd613511ecdbd7e", "filename": "src/test/ui/lint/unused/unused-macro.stderr", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro.stderr?ref=640f365bff2101a69dfee8f0f3be3ca5706dd343", "patch": "@@ -1,38 +1,32 @@\n-error: unused macro definition\n-  --> $DIR/unused-macro.rs:5:1\n+error: unused macro definition: `unused`\n+  --> $DIR/unused-macro.rs:5:7\n    |\n-LL | / macro unused {\n-LL | |     () => {}\n-LL | | }\n-   | |_^\n+LL | macro unused {\n+   |       ^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/unused-macro.rs:2:9\n    |\n LL | #![deny(unused_macros)]\n    |         ^^^^^^^^^^^^^\n \n-error: unused macro definition\n-  --> $DIR/unused-macro.rs:15:5\n+error: unused macro definition: `unused`\n+  --> $DIR/unused-macro.rs:15:11\n    |\n-LL | /     macro unused {\n-LL | |         () => {}\n-LL | |     }\n-   | |_____^\n+LL |     macro unused {\n+   |           ^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/unused-macro.rs:14:12\n    |\n LL |     #[deny(unused_macros)]\n    |            ^^^^^^^^^^^^^\n \n-error: unused macro definition\n-  --> $DIR/unused-macro.rs:21:5\n+error: unused macro definition: `unused`\n+  --> $DIR/unused-macro.rs:21:22\n    |\n-LL | /     pub(crate) macro unused {\n-LL | |         () => {}\n-LL | |     }\n-   | |_____^\n+LL |     pub(crate) macro unused {\n+   |                      ^^^^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "69bfb4f3cbfbc5b4b77743a81c49f30897a8fd46", "filename": "src/test/ui/proc-macro/issue-39889.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Fproc-macro%2Fissue-39889.rs", "raw_url": "https://github.com/rust-lang/rust/raw/640f365bff2101a69dfee8f0f3be3ca5706dd343/src%2Ftest%2Fui%2Fproc-macro%2Fissue-39889.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-39889.rs?ref=640f365bff2101a69dfee8f0f3be3ca5706dd343", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-#![allow(dead_code)]\n+#![allow(dead_code, unused_macros)]\n // aux-build:issue-39889.rs\n \n extern crate issue_39889;"}]}