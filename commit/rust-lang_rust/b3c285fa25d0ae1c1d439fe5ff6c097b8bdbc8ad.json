{"sha": "b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYzI4NWZhMjVkMGFlMWMxZDQzOWZlNWZmNmMwOTdiOGJkYmM4YWQ=", "commit": {"author": {"name": "Austin Hicks", "email": "camlorn@camlorn.net", "date": "2016-11-22T19:10:52Z"}, "committer": {"name": "Austin Hicks", "email": "camlorn@camlorn.net", "date": "2016-12-14T17:28:22Z"}, "message": "Fix checking to see if the last field of a struct can be unsized.", "tree": {"sha": "9a544cab1c6213bf639bda6cec9701f29834118a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a544cab1c6213bf639bda6cec9701f29834118a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad", "html_url": "https://github.com/rust-lang/rust/commit/b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad/comments", "author": {"login": "ahicks92", "id": 6968705, "node_id": "MDQ6VXNlcjY5Njg3MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6968705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahicks92", "html_url": "https://github.com/ahicks92", "followers_url": "https://api.github.com/users/ahicks92/followers", "following_url": "https://api.github.com/users/ahicks92/following{/other_user}", "gists_url": "https://api.github.com/users/ahicks92/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahicks92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahicks92/subscriptions", "organizations_url": "https://api.github.com/users/ahicks92/orgs", "repos_url": "https://api.github.com/users/ahicks92/repos", "events_url": "https://api.github.com/users/ahicks92/events{/privacy}", "received_events_url": "https://api.github.com/users/ahicks92/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahicks92", "id": 6968705, "node_id": "MDQ6VXNlcjY5Njg3MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6968705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahicks92", "html_url": "https://github.com/ahicks92", "followers_url": "https://api.github.com/users/ahicks92/followers", "following_url": "https://api.github.com/users/ahicks92/following{/other_user}", "gists_url": "https://api.github.com/users/ahicks92/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahicks92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahicks92/subscriptions", "organizations_url": "https://api.github.com/users/ahicks92/orgs", "repos_url": "https://api.github.com/users/ahicks92/repos", "events_url": "https://api.github.com/users/ahicks92/events{/privacy}", "received_events_url": "https://api.github.com/users/ahicks92/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb21cc5607557538ffff8be2213e522feb527080", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb21cc5607557538ffff8be2213e522feb527080", "html_url": "https://github.com/rust-lang/rust/commit/cb21cc5607557538ffff8be2213e522feb527080"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0210b77dba06d59b83ec9127722779eb5bbb4a44", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=b3c285fa25d0ae1c1d439fe5ff6c097b8bdbc8ad", "patch": "@@ -1167,7 +1167,7 @@ impl<'a, 'gcx, 'tcx> Layout {\n                         let param_env = tcx.construct_parameter_environment(DUMMY_SP, def.did, ROOT_CODE_EXTENT);\n                         let fields = &def.variants[0].fields;\n                         let last_field = &fields[fields.len()-1];\n-                        let always_sized = last_field.unsubst_ty().is_sized(tcx, &param_env, DUMMY_SP);\n+                        let always_sized = last_field.ty(tcx, param_env.free_substs).is_sized(tcx, &param_env, DUMMY_SP);\n                         if !always_sized { StructKind::MaybeUnsizedUnivariant }\n                         else { StructKind::AlwaysSizedUnivariant }\n                     };"}]}