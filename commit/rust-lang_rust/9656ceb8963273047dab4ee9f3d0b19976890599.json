{"sha": "9656ceb8963273047dab4ee9f3d0b19976890599", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NTZjZWI4OTYzMjczMDQ3ZGFiNGVlOWYzZDBiMTk5NzY4OTA1OTk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-06T22:39:03Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-07T21:41:08Z"}, "message": "Document the feature", "tree": {"sha": "6607f1c38271ea714f8977394db79954ac24d0b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6607f1c38271ea714f8977394db79954ac24d0b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9656ceb8963273047dab4ee9f3d0b19976890599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9656ceb8963273047dab4ee9f3d0b19976890599", "html_url": "https://github.com/rust-lang/rust/commit/9656ceb8963273047dab4ee9f3d0b19976890599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9656ceb8963273047dab4ee9f3d0b19976890599/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19cfa5802eabddd5747bbdb04c81b50fc9f6e623", "url": "https://api.github.com/repos/rust-lang/rust/commits/19cfa5802eabddd5747bbdb04c81b50fc9f6e623", "html_url": "https://github.com/rust-lang/rust/commit/19cfa5802eabddd5747bbdb04c81b50fc9f6e623"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "1482df8fb698ceee3dfa299c29095a557334ac1b", "filename": "crates/completion/src/completions/unqualified_path.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/9656ceb8963273047dab4ee9f3d0b19976890599/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9656ceb8963273047dab4ee9f3d0b19976890599/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs?ref=9656ceb8963273047dab4ee9f3d0b19976890599", "patch": "@@ -73,6 +73,49 @@ fn complete_enum_variants(acc: &mut Completions, ctx: &CompletionContext, ty: &T\n     }\n }\n \n+// Feature: Fuzzy Completion and Autoimports\n+//\n+// When completing names in the current scope, proposes additional imports from other modules or crates,\n+// if they can be qualified in the scope and their name contains all symbols from the completion input\n+// (case-insensitive, in any order or places).\n+//\n+// ```\n+// fn main() {\n+//     pda<|>\n+// }\n+// # pub mod std { pub mod marker { pub struct PhantomData { } } }\n+// ```\n+// ->\n+// ```\n+// use std::marker::PhantomData;\n+//\n+// fn main() {\n+//     PhantomData\n+// }\n+// # pub mod std { pub mod marker { pub struct PhantomData { } } }\n+// ```\n+//\n+// .Fuzzy search details\n+//\n+// To avoid an excessive amount of the results returned, completion input is checked for inclusion in the identifiers only\n+// (i.e. in `HashMap` in the `std::collections::HashMap` path), also not in the module indentifiers.\n+//\n+// .Merge Behaviour\n+//\n+// It is possible to configure how use-trees are merged with the `importMergeBehaviour` setting.\n+// Mimics the corresponding behaviour of the `Auto Import` feature.\n+//\n+// .LSP and performance implications\n+//\n+// LSP 3.16 provides the way to defer the computation of some completion data, including the import edits for this feature.\n+// If the LSP client supports the `additionalTextEdits` (case sensitive) resolve client capability, rust-analyzer computes\n+// the completion edits only when a corresponding completion item is selected.\n+// For clients with no such support, all edits have to be calculated on the completion request, including the fuzzy search completion ones,\n+// which might be slow.\n+//\n+// .Feature toggle\n+//\n+// The feature can be turned off in the settings with the `rust-analyzer.completion.enableExperimental` flag.\n fn fuzzy_completion(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let _p = profile::span(\"fuzzy_completion\");\n     let current_module = ctx.scope.module()?;"}]}