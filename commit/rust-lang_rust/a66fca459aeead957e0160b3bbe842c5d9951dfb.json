{"sha": "a66fca459aeead957e0160b3bbe842c5d9951dfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NmZjYTQ1OWFlZWFkOTU3ZTAxNjBiM2JiZTg0MmM1ZDk5NTFkZmI=", "commit": {"author": {"name": "Christian", "email": "chris_veenman@hotmail.com", "date": "2019-03-21T17:42:15Z"}, "committer": {"name": "Christian", "email": "chris_veenman@hotmail.com", "date": "2019-03-21T17:42:15Z"}, "message": "Added back a reference to \"the book\"", "tree": {"sha": "508ea3d69b483dc7dc84e718bedd54545d6da16f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/508ea3d69b483dc7dc84e718bedd54545d6da16f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a66fca459aeead957e0160b3bbe842c5d9951dfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a66fca459aeead957e0160b3bbe842c5d9951dfb", "html_url": "https://github.com/rust-lang/rust/commit/a66fca459aeead957e0160b3bbe842c5d9951dfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a66fca459aeead957e0160b3bbe842c5d9951dfb/comments", "author": null, "committer": null, "parents": [{"sha": "d657d180835cee1e4b4ad4400d1f33f62ecd37b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d657d180835cee1e4b4ad4400d1f33f62ecd37b6", "html_url": "https://github.com/rust-lang/rust/commit/d657d180835cee1e4b4ad4400d1f33f62ecd37b6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ce7472f33292a4270e201f94285f300d07437d97", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a66fca459aeead957e0160b3bbe842c5d9951dfb/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66fca459aeead957e0160b3bbe842c5d9951dfb/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=a66fca459aeead957e0160b3bbe842c5d9951dfb", "patch": "@@ -291,7 +291,7 @@ pub trait Into<T>: Sized {\n /// When constructing a function that is capable of failing, the return type\n /// will generally be of the form `Result<T, E>`.\n /// The `From` trait simplifies error handling by allowing a function to return a single error type\n-/// that encapsulate multiple error types. See the \"Examples\" section for more details.\n+/// that encapsulate multiple error types. See the \"Examples\" section and [the book][book] for more details.\n ///\n /// **Note: This trait must not fail**. If the conversion can fail, use [`TryFrom`].\n ///\n@@ -355,7 +355,7 @@ pub trait Into<T>: Sized {\n /// [`String`]: ../../std/string/struct.String.html\n /// [`Into<U>`]: trait.Into.html\n /// [`from`]: trait.From.html#tymethod.from\n-/// [book]: ../../book/first-edition/error-handling.html\n+/// [book]: ../../book/ch09-00-error-handling.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait From<T>: Sized {\n     /// Performs the conversion."}]}