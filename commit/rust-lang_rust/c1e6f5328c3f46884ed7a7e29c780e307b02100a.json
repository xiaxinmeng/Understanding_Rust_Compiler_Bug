{"sha": "c1e6f5328c3f46884ed7a7e29c780e307b02100a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZTZmNTMyOGMzZjQ2ODg0ZWQ3YTdlMjljNzgwZTMwN2IwMjEwMGE=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-02-28T03:35:27Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-02T18:28:15Z"}, "message": "Make the expanded expression in expr_ext not optional", "tree": {"sha": "10ed869d28e3a9a4eb4a343151d6b1af7791b8d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10ed869d28e3a9a4eb4a343151d6b1af7791b8d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1e6f5328c3f46884ed7a7e29c780e307b02100a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1e6f5328c3f46884ed7a7e29c780e307b02100a", "html_url": "https://github.com/rust-lang/rust/commit/c1e6f5328c3f46884ed7a7e29c780e307b02100a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1e6f5328c3f46884ed7a7e29c780e307b02100a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cef1b3a0f645a3cc420a4ae9583b1fd5463e833", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cef1b3a0f645a3cc420a4ae9583b1fd5463e833", "html_url": "https://github.com/rust-lang/rust/commit/7cef1b3a0f645a3cc420a4ae9583b1fd5463e833"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "694a709da34ae11836029f5dda06bec053362308", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=c1e6f5328c3f46884ed7a7e29c780e307b02100a", "patch": "@@ -185,7 +185,7 @@ tag expr_ {\n     expr_field(@expr, ident, ann);\n     expr_index(@expr, @expr, ann);\n     expr_path(path, option.t[def], ann);\n-    expr_ext(path, vec[@expr], option.t[@expr], option.t[@expr], ann);\n+    expr_ext(path, vec[@expr], option.t[@expr], @expr, ann);\n     expr_fail;\n     expr_ret(option.t[@expr]);\n     expr_put(option.t[@expr]);"}, {"sha": "5fe16536a557e28289b54527f920b17fb4b16e28", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=c1e6f5328c3f46884ed7a7e29c780e307b02100a", "patch": "@@ -755,7 +755,7 @@ impure fn expand_syntax_ext(parser p, ast.span sp,\n     if (_str.eq(extname, \"fmt\")) {\n         auto expanded = extfmt.expand_syntax_ext(args, body);\n         auto newexpr = ast.expr_ext(path, args, body,\n-                                    some[@ast.expr](expanded),\n+                                    expanded,\n                                     ast.ann_none);\n \n         ret newexpr;"}, {"sha": "c7041b263542b4a4710531b0995411ac6eb49f71", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=c1e6f5328c3f46884ed7a7e29c780e307b02100a", "patch": "@@ -157,7 +157,7 @@ type ast_fold[ENV] =\n      (fn(&ENV e, &span sp,\n          &path p, vec[@expr] args,\n          option.t[@expr] body,\n-         option.t[@expr] expanded,\n+         @expr expanded,\n          ann a) -> @expr)                         fold_expr_ext,\n \n      (fn(&ENV e, &span sp) -> @expr)              fold_expr_fail,\n@@ -653,10 +653,9 @@ fn fold_expr[ENV](&ENV env, ast_fold[ENV] fld, &@expr e) -> @expr {\n         case (ast.expr_ext(?p, ?args, ?body, ?expanded, ?t)) {\n             // Only fold the expanded expression, not the\n             // expressions involved in syntax extension\n-            auto exp = option.get[@expr](expanded);\n-            auto exp_ = fold_expr(env_, fld, exp);\n+            auto exp = fold_expr(env_, fld, expanded);\n             ret fld.fold_expr_ext(env_, e.span, p, args, body,\n-                                  some[@ast.expr](exp_), t);\n+                                  exp, t);\n         }\n \n         case (ast.expr_fail) {\n@@ -1184,7 +1183,7 @@ fn identity_fold_expr_path[ENV](&ENV env, &span sp,\n fn identity_fold_expr_ext[ENV](&ENV env, &span sp,\n                                &path p, vec[@expr] args,\n                                option.t[@expr] body,\n-                               option.t[@expr] expanded,\n+                               @expr expanded,\n                                ann a) -> @expr {\n     ret @respan(sp, ast.expr_ext(p, args, body, expanded, a));\n }"}, {"sha": "2594590a4b91a6dda9868b72c6b50755dbc41bcd", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=c1e6f5328c3f46884ed7a7e29c780e307b02100a", "patch": "@@ -3694,7 +3694,7 @@ fn trans_expr(@block_ctxt cx, @ast.expr e) -> result {\n         }\n \n         case (ast.expr_ext(_, _, _, ?expanded, _)) {\n-            ret trans_expr(cx, option.get[@ast.expr](expanded));\n+            ret trans_expr(cx, expanded);\n         }\n \n         case (ast.expr_fail) {"}, {"sha": "f8f7fc72719c26f92b50a881db07c0ad25e67678", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1e6f5328c3f46884ed7a7e29c780e307b02100a/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=c1e6f5328c3f46884ed7a7e29c780e307b02100a", "patch": "@@ -1514,11 +1514,10 @@ fn check_expr(&@fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n         }\n \n         case (ast.expr_ext(?p, ?args, ?body, ?expanded, _)) {\n-            auto exp_ = check_expr(fcx, option.get[@ast.expr](expanded));\n+            auto exp_ = check_expr(fcx, expanded);\n             auto t = expr_ty(exp_);\n             ret @fold.respan[ast.expr_](expr.span,\n-                                        ast.expr_ext(p, args, body,\n-                                                     some[@ast.expr](exp_),\n+                                        ast.expr_ext(p, args, body, exp_,\n                                                      ast.ann_type(t)));\n         }\n "}]}