{"sha": "923001ebb7980ec425e6df561575bccaf5f90240", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMzAwMWViYjc5ODBlYzQyNWU2ZGY1NjE1NzViY2NhZjVmOTAyNDA=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-04-16T18:53:40Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-04-24T17:59:44Z"}, "message": "Add tests", "tree": {"sha": "ce114d2be74aa23d512adf9e1420f468ec26cca9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce114d2be74aa23d512adf9e1420f468ec26cca9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/923001ebb7980ec425e6df561575bccaf5f90240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/923001ebb7980ec425e6df561575bccaf5f90240", "html_url": "https://github.com/rust-lang/rust/commit/923001ebb7980ec425e6df561575bccaf5f90240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/923001ebb7980ec425e6df561575bccaf5f90240/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dbab5121e214a08690eefdaa3ee45bb2d1bbd5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dbab5121e214a08690eefdaa3ee45bb2d1bbd5e", "html_url": "https://github.com/rust-lang/rust/commit/8dbab5121e214a08690eefdaa3ee45bb2d1bbd5e"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "5c661bfcdc0c99c99d0c248d40280b72246fc33c", "filename": "src/test/compile-fail/qualified-path-params-2.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Fcompile-fail%2Fqualified-path-params-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Fcompile-fail%2Fqualified-path-params-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqualified-path-params-2.rs?ref=923001ebb7980ec425e6df561575bccaf5f90240", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that qualified paths with type parameters\n+// fail during type checking and not during parsing\n+\n+struct S;\n+\n+trait Tr {\n+    type A;\n+}\n+\n+impl Tr for S {\n+    type A = S;\n+}\n+\n+impl S {\n+    fn f<T>() {}\n+}\n+\n+type A = <S as Tr>::A::f<u8>; //~ ERROR type parameters are not allowed on this type\n+//~^ ERROR ambiguous associated type; specify the type using the syntax `<<S as Tr>::A as Trait>::f`\n+\n+fn main() {}"}, {"sha": "002080f4cb44c09f647d66dae25c395a94952002", "filename": "src/test/compile-fail/qualified-path-params.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Fcompile-fail%2Fqualified-path-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Fcompile-fail%2Fqualified-path-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqualified-path-params.rs?ref=923001ebb7980ec425e6df561575bccaf5f90240", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that qualified paths with type parameters\n+// fail during type checking and not during parsing\n+\n+struct S;\n+\n+trait Tr {\n+    type A;\n+}\n+\n+impl Tr for S {\n+    type A = S;\n+}\n+\n+impl S {\n+    fn f<T>() {}\n+}\n+\n+fn main() {\n+    match 10 {\n+        <S as Tr>::A::f::<u8> => {} //~ ERROR `f` is not an associated const\n+        0 ... <S as Tr>::A::f::<u8> => {} //~ ERROR only char and numeric types are allowed in range\n+    }\n+}"}, {"sha": "040db0255678d23e53830588314c9d3c861bb926", "filename": "src/test/compile-fail/use-keyword.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Fcompile-fail%2Fuse-keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Fcompile-fail%2Fuse-keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-keyword.rs?ref=923001ebb7980ec425e6df561575bccaf5f90240", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that imports with nakes super and self don't fail during parsing\n+// FIXME: this shouldn't fail during name resolution either\n+\n+mod a {\n+    mod b {\n+        use self as A; //~ ERROR `self` imports are only allowed within a { } list\n+        //~^ ERROR unresolved import `self`. There is no `self` in the crate root\n+        use super as B; //~ ERROR unresolved import `super`. There is no `super` in the crate root\n+        use super::{self as C}; //~ERROR unresolved import `super`. There is no `super` in the crate\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "60016f59594696aefa4b5b6abcf2cf0d2224c84f", "filename": "src/test/run-pass/use-keyword-2.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Frun-pass%2Fuse-keyword-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/923001ebb7980ec425e6df561575bccaf5f90240/src%2Ftest%2Frun-pass%2Fuse-keyword-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-keyword-2.rs?ref=923001ebb7980ec425e6df561575bccaf5f90240", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct A;\n+\n+mod test {\n+    pub use super :: A;\n+\n+    pub use self :: A as B;\n+}\n+\n+impl A {\n+    fn f() {}\n+    fn g() {\n+        Self :: f()\n+    }\n+}\n+\n+fn main() {\n+    let a: A = test::A;\n+    let b: A = test::B;\n+    let c: () = A::g();\n+}"}]}