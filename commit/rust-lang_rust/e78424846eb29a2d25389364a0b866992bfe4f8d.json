{"sha": "e78424846eb29a2d25389364a0b866992bfe4f8d", "node_id": "C_kwDOAAsO6NoAKGU3ODQyNDg0NmViMjlhMmQyNTM4OTM2NGEwYjg2Njk5MmJmZTRmOGQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-02T14:32:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-02T14:32:15Z"}, "message": "enforce parsing invariant for patterns", "tree": {"sha": "dfab8981fdb60c2d4ce9b9167bf31ead25ef00df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfab8981fdb60c2d4ce9b9167bf31ead25ef00df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e78424846eb29a2d25389364a0b866992bfe4f8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e78424846eb29a2d25389364a0b866992bfe4f8d", "html_url": "https://github.com/rust-lang/rust/commit/e78424846eb29a2d25389364a0b866992bfe4f8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e78424846eb29a2d25389364a0b866992bfe4f8d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7989d567e2c642e3a9444c9092d83789c1fb82a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7989d567e2c642e3a9444c9092d83789c1fb82a4", "html_url": "https://github.com/rust-lang/rust/commit/7989d567e2c642e3a9444c9092d83789c1fb82a4"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "4c58ea9ba64df4aee58b237926060d997bfb78ff", "filename": "crates/hir_def/src/macro_expansion_tests/mbe/tt_conversion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs?ref=e78424846eb29a2d25389364a0b866992bfe4f8d", "patch": "@@ -141,7 +141,7 @@ macro_rules! m1 { () => (Some(x) left overs) }\n macro_rules! m2 { () => ($) }\n \n fn main() {\n-    let Some(x) = ();\n+    let Some(x)left overs = ();\n     let /* parse error: expected pattern */\n $ = ();\n }"}, {"sha": "eee9a8c0cd5f099585859a900052bd3be5a85584", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=e78424846eb29a2d25389364a0b866992bfe4f8d", "patch": "@@ -109,6 +109,19 @@ pub(crate) mod entry {\n             items::mod_contents(p, false);\n             m.complete(p, MACRO_ITEMS);\n         }\n+\n+        pub(crate) fn pattern(p: &mut Parser) {\n+            let m = p.start();\n+            patterns::pattern_single(p);\n+            if p.at(EOF) {\n+                m.abandon(p);\n+                return;\n+            }\n+            while !p.at(EOF) {\n+                p.bump_any();\n+            }\n+            m.complete(p, ERROR);\n+        }\n     }\n }\n "}, {"sha": "5c0e997ea10e81e498efd44accc76c850b4038f8", "filename": "crates/parser/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fparser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fparser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flib.rs?ref=e78424846eb29a2d25389364a0b866992bfe4f8d", "patch": "@@ -119,8 +119,8 @@ impl TopEntryPoint {\n             TopEntryPoint::SourceFile => grammar::entry::top::source_file,\n             TopEntryPoint::MacroStmts => grammar::entry::top::macro_stmts,\n             TopEntryPoint::MacroItems => grammar::entry::top::macro_items,\n+            TopEntryPoint::Pattern => grammar::entry::top::pattern,\n             // FIXME\n-            TopEntryPoint::Pattern => grammar::entry::prefix::pat,\n             TopEntryPoint::Type => grammar::entry::prefix::ty,\n             TopEntryPoint::Expr => grammar::entry::prefix::expr,\n             TopEntryPoint::MetaItem => grammar::entry::prefix::meta_item,"}, {"sha": "483591506387ffe5b2f4d31f8c6e8a1510a79c26", "filename": "crates/parser/src/tests/top_entries.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fparser%2Fsrc%2Ftests%2Ftop_entries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e78424846eb29a2d25389364a0b866992bfe4f8d/crates%2Fparser%2Fsrc%2Ftests%2Ftop_entries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftests%2Ftop_entries.rs?ref=e78424846eb29a2d25389364a0b866992bfe4f8d", "patch": "@@ -146,6 +146,33 @@ fn macro_pattern() {\n               R_PAREN \")\"\n         \"#]],\n     );\n+\n+    check(\n+        TopEntryPoint::Pattern,\n+        \"None leftover tokens\",\n+        expect![[r#\"\n+            ERROR\n+              IDENT_PAT\n+                NAME\n+                  IDENT \"None\"\n+              WHITESPACE \" \"\n+              IDENT \"leftover\"\n+              WHITESPACE \" \"\n+              IDENT \"tokens\"\n+        \"#]],\n+    );\n+\n+    check(\n+        TopEntryPoint::Pattern,\n+        \"@err\",\n+        expect![[r#\"\n+            ERROR\n+              ERROR\n+                AT \"@\"\n+              IDENT \"err\"\n+            error 0: expected pattern\n+        \"#]],\n+    );\n }\n \n #[track_caller]"}]}