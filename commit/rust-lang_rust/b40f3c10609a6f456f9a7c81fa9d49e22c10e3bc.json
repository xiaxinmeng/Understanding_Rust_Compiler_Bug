{"sha": "b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MGYzYzEwNjA5YTZmNDU2ZjlhN2M4MWZhOWQ0OWUyMmMxMGUzYmM=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-15T21:57:54Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-29T23:08:29Z"}, "message": "Simplify const_prop logic", "tree": {"sha": "25e91af8e2044810d4f1f7f07dc7ba6c2e232290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25e91af8e2044810d4f1f7f07dc7ba6c2e232290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc", "html_url": "https://github.com/rust-lang/rust/commit/b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "524e575bb40896cfa839baa03b08ae1fd70aded6", "url": "https://api.github.com/repos/rust-lang/rust/commits/524e575bb40896cfa839baa03b08ae1fd70aded6", "html_url": "https://github.com/rust-lang/rust/commit/524e575bb40896cfa839baa03b08ae1fd70aded6"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "a660b145b3ff011c070af9ada38f713d89894ae9", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=b40f3c10609a6f456f9a7c81fa9d49e22c10e3bc", "patch": "@@ -385,19 +385,17 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             (),\n         );\n \n-        let ret = if let Ok(layout) = ecx.layout_of(body.return_ty().subst(tcx, substs)) {\n+        let ret = ecx\n+            .layout_of(body.return_ty().subst(tcx, substs))\n+            .ok()\n             // Don't bother allocating memory for ZST types which have no values\n             // or for large values.\n-            if !layout.is_zst() && layout.size < Size::from_bytes(MAX_ALLOC_LIMIT) {\n-                // hopefully all types will allocate, since large types have already been removed,\n-                // but check anyways\n-                ecx.allocate(layout, MemoryKind::Stack).ok().map(Into::into)\n-            } else {\n-                None\n-            }\n-        } else {\n-            None\n-        };\n+            .filter(|ret_layout| {\n+                !ret_layout.is_zst() && ret_layout.size < Size::from_bytes(MAX_ALLOC_LIMIT)\n+            })\n+            // hopefully all types will allocate, since large types have already been removed\n+            .and_then(|ret_layout| ecx.allocate(ret_layout, MemoryKind::Stack).ok())\n+            .map(Into::into);\n \n         ecx.push_stack_frame(\n             Instance::new(def_id, substs),"}]}