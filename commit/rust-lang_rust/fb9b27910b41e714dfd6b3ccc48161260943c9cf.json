{"sha": "fb9b27910b41e714dfd6b3ccc48161260943c9cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiOWIyNzkxMGI0MWU3MTRkZmQ2YjNjY2M0ODE2MTI2MDk0M2M5Y2Y=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-06T02:55:07Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-06T02:55:07Z"}, "message": "std: c_str should use regions on methods", "tree": {"sha": "44ccc3faa8b0565e6f5e56849eb643389d6e0dc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44ccc3faa8b0565e6f5e56849eb643389d6e0dc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb9b27910b41e714dfd6b3ccc48161260943c9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb9b27910b41e714dfd6b3ccc48161260943c9cf", "html_url": "https://github.com/rust-lang/rust/commit/fb9b27910b41e714dfd6b3ccc48161260943c9cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb9b27910b41e714dfd6b3ccc48161260943c9cf/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e454097bf44b1b5b91b46da08dabe9f140a6ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e454097bf44b1b5b91b46da08dabe9f140a6ee", "html_url": "https://github.com/rust-lang/rust/commit/c8e454097bf44b1b5b91b46da08dabe9f140a6ee"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6c5853019b03bf8ab3c8e5492e9d816852ae05d7", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fb9b27910b41e714dfd6b3ccc48161260943c9cf/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb9b27910b41e714dfd6b3ccc48161260943c9cf/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=fb9b27910b41e714dfd6b3ccc48161260943c9cf", "patch": "@@ -27,7 +27,7 @@ pub struct CString {\n     priv owns_buffer_: bool,\n }\n \n-impl<'self> CString {\n+impl CString {\n     /// Create a C String from a pointer.\n     pub fn new(buf: *libc::c_char, owns_buffer: bool) -> CString {\n         CString { buf: buf, owns_buffer_: owns_buffer }\n@@ -80,7 +80,7 @@ impl<'self> CString {\n     /// # Failure\n     ///\n     /// Fails if the CString is null.\n-    pub fn as_bytes(&self) -> &'self [u8] {\n+    pub fn as_bytes<'a>(&'a self) -> &'a [u8] {\n         if self.buf.is_null() { fail!(\"CString is null!\"); }\n         unsafe {\n             let len = libc::strlen(self.buf) as uint;\n@@ -89,7 +89,7 @@ impl<'self> CString {\n     }\n \n     /// Return a CString iterator.\n-    fn iter(&self) -> CStringIterator<'self> {\n+    fn iter<'a>(&'a self) -> CStringIterator<'a> {\n         CStringIterator {\n             ptr: self.buf,\n             lifetime: unsafe { cast::transmute(self.buf) },"}]}