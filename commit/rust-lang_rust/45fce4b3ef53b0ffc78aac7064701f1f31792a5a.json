{"sha": "45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZmNlNGIzZWY1M2IwZmZjNzhhYWM3MDY0NzAxZjFmMzE3OTJhNWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-28T21:27:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2017-12-28T21:27:56Z"}, "message": "Lexer testing infra", "tree": {"sha": "c388ecdfa2120eb1f9234958c22fff42746a6f64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c388ecdfa2120eb1f9234958c22fff42746a6f64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "html_url": "https://github.com/rust-lang/rust/commit/45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e132280844db6af5a70739bba3bd89382c39e37e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e132280844db6af5a70739bba3bd89382c39e37e", "html_url": "https://github.com/rust-lang/rust/commit/e132280844db6af5a70739bba3bd89382c39e37e"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "b16ca4c7e4b1db9906db31a953e5cfc30ba53ef6", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "patch": "@@ -3,4 +3,6 @@ name = \"libsyntax2\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n-[dependencies]\n+[dev-dependencies]\n+file = \"1.1.1\"\n+difference = \"1.0.0\""}, {"sha": "95d09f2b10159347eece71399a7e2e907ea3df4f", "filename": "tests/data/lexer/0001_hello.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/tests%2Fdata%2Flexer%2F0001_hello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/tests%2Fdata%2Flexer%2F0001_hello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0001_hello.rs?ref=45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "patch": "@@ -0,0 +1 @@\n+hello world\n\\ No newline at end of file"}, {"sha": "5bec9be8068b22612da69b0b11b47d9fe69e60a0", "filename": "tests/data/lexer/0001_hello.txt", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/tests%2Fdata%2Flexer%2F0001_hello.txt", "raw_url": "https://github.com/rust-lang/rust/raw/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/tests%2Fdata%2Flexer%2F0001_hello.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0001_hello.txt?ref=45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "patch": "@@ -0,0 +1,3 @@\n+IDENT 5\n+WHITESPACE 1\n+IDENT 5\n\\ No newline at end of file"}, {"sha": "de76f0a153d9f8b19bf98bdd8179dc9bba31a61c", "filename": "tests/lexer.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/tests%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45fce4b3ef53b0ffc78aac7064701f1f31792a5a/tests%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Flexer.rs?ref=45fce4b3ef53b0ffc78aac7064701f1f31792a5a", "patch": "@@ -0,0 +1,55 @@\n+extern crate file;\n+#[macro_use(assert_diff)]\n+extern crate difference;\n+\n+use std::path::{PathBuf, Path};\n+use std::fs::read_dir;\n+\n+#[test]\n+fn lexer_tests() {\n+    for test_case in lexer_test_cases() {\n+        lexer_test_case(&test_case);\n+    }\n+}\n+\n+fn lexer_test_dir() -> PathBuf {\n+    let dir = env!(\"CARGO_MANIFEST_DIR\");\n+    PathBuf::from(dir).join(\"tests/data/lexer\")\n+}\n+\n+fn lexer_test_cases() -> Vec<PathBuf> {\n+    let mut acc = Vec::new();\n+    let dir = lexer_test_dir();\n+    for file in read_dir(&dir).unwrap() {\n+        let file = file.unwrap();\n+        let path = file.path();\n+        if path.extension().unwrap_or_default() == \"rs\" {\n+            acc.push(path);\n+        }\n+    }\n+    acc\n+}\n+\n+fn lexer_test_case(path: &Path) {\n+    let actual = {\n+        let text = file::get_text(path).unwrap();\n+        let tokens = tokenize(&text);\n+        dump_tokens(&tokens)\n+    };\n+    let expected = file::get_text(&path.with_extension(\"txt\")).unwrap();\n+\n+    assert_diff!(\n+        expected.as_str(),\n+        actual.as_str(),\n+        \"\\n\",\n+        0\n+    )\n+}\n+\n+fn tokenize(text: &str) -> Vec<()> {\n+    Vec::new()\n+}\n+\n+fn dump_tokens(tokens: &[()]) -> String {\n+    \"IDENT 5\\nKEYWORD 1\\nIDENT 5\\n\".to_string()\n+}\n\\ No newline at end of file"}]}