{"sha": "7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZjBhYWM2Y2YyNDM1ZTA2OGM0YmQ2MmNkMzRlMDZmOGVmMGJkOTE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-04T11:34:19Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-19T05:55:24Z"}, "message": "debuginfo: Better support for univariant tuple-style enums.", "tree": {"sha": "301709d32912411e0ced2f18a18886ad1908354e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/301709d32912411e0ced2f18a18886ad1908354e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91", "html_url": "https://github.com/rust-lang/rust/commit/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f389bd8f2a72020c25e37b81757643abd481bc11", "url": "https://api.github.com/repos/rust-lang/rust/commits/f389bd8f2a72020c25e37b81757643abd481bc11", "html_url": "https://github.com/rust-lang/rust/commit/f389bd8f2a72020c25e37b81757643abd481bc11"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "34ebdd81bc0c3681874a5568283949f878ed7b31", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91", "patch": "@@ -606,13 +606,22 @@ fn create_enum_md(cx: &mut CrateContext,\n         return discriminant_type_md;\n     }\n \n+    let is_univariant = variants.len() == 1;\n+\n     let variants_md = do variants.map |&vi| {\n \n         let raw_types : &[ty::t] = vi.args;\n         let arg_types = do raw_types.map |&raw_type| { ty::subst(cx.tcx, substs, raw_type) };\n-        let arg_llvm_types = ~[discriminant_llvm_type] + do arg_types.map |&ty| { type_of::type_of(cx, ty) };\n-        let arg_names = ~[~\"\"] + arg_types.map(|_| ~\"\");\n-        let arg_md = ~[discriminant_type_md] + do arg_types.map |&ty| { get_or_create_type(cx, ty, span) };\n+        \n+        let mut arg_llvm_types = do arg_types.map |&ty| { type_of::type_of(cx, ty) };\n+        let mut arg_names = arg_types.map(|_| ~\"\");\n+        let mut arg_md = do arg_types.map |&ty| { get_or_create_type(cx, ty, span) };\n+\n+        if !is_univariant {\n+            arg_llvm_types.insert(0, discriminant_llvm_type);\n+            arg_names.insert(0, ~\"\");\n+            arg_md.insert(0, discriminant_type_md);\n+        }\n \n         let variant_llvm_type = Type::struct_(arg_llvm_types, false);\n         let variant_type_size = machine::llsize_of_alloc(cx, variant_llvm_type);\n@@ -646,7 +655,7 @@ fn create_enum_md(cx: &mut CrateContext,\n     let enum_type_size = machine::llsize_of_alloc(cx, enum_llvm_type);\n     let enum_type_align = machine::llalign_of_min(cx, enum_llvm_type);\n \n-    return do \"\".as_c_str |enum_name| { unsafe { llvm::LLVMDIBuilderCreateUnionType(\n+    return do enum_name.as_c_str |enum_name| { unsafe { llvm::LLVMDIBuilderCreateUnionType(\n         DIB(cx),\n         file_metadata,\n         enum_name,"}, {"sha": "5c12649dea7cec05783dbc456f9e744b9f88fe58", "filename": "src/test/debug-info/tuple-style-enum.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91/src%2Ftest%2Fdebug-info%2Ftuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91/src%2Ftest%2Fdebug-info%2Ftuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Ftuple-style-enum.rs?ref=7cf0aac6cf2435e068c4bd62cd34e06f8ef0bd91", "patch": "@@ -14,19 +14,29 @@\n // debugger:run\n // debugger:finish\n \n-// debugger:print case2\n-// check:$1 = {Case1, 0, 1}\n+// d ebugger:print case2\n+// c heck:$1 = {Case1, 0, 1}\n \n-enum Test {\n+// debugger:print univariant\n+// check:$1 = {{-1}}\n+\n+\n+enum Regular {\n     Case1(i32, i64),\n     Case2(bool, i16, i32)\n }\n \n+enum Univariant {\n+\tTheOnlyCase(i64)\n+}\n+\n fn main() {\n \n     let case1 = Case1(110, 220);\n     let case2 = Case2(false, 2, 3);\n \n+    let univariant = TheOnlyCase(-1);\n+\n     zzz();\n }\n "}]}