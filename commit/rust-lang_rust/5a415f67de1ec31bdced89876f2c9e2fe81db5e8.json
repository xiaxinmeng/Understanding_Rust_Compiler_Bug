{"sha": "5a415f67de1ec31bdced89876f2c9e2fe81db5e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNDE1ZjY3ZGUxZWMzMWJkY2VkODk4NzZmMmM5ZTJmZTgxZGI1ZTg=", "commit": {"author": {"name": "Daniel S Poulin", "email": "crimsonmage+github@gmail.com", "date": "2016-11-19T03:46:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-19T03:46:12Z"}, "message": "Clarify recco to install as a soft dependency\n\nOn IRC it was mentioned that clippy is not meant to be installed as a hard dependency.\r\nAs it was, the README placed the hard dependency instructions first and did not\r\nmention the recommendation, misleading users into making it a hard dependency. A\r\nquick survey of the dependent crates on crates.io reveals the reach of this issue.", "tree": {"sha": "ce04ea94b4e5d07b208ce04c7cf19cb8268625a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce04ea94b4e5d07b208ce04c7cf19cb8268625a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a415f67de1ec31bdced89876f2c9e2fe81db5e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a415f67de1ec31bdced89876f2c9e2fe81db5e8", "html_url": "https://github.com/rust-lang/rust/commit/5a415f67de1ec31bdced89876f2c9e2fe81db5e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a415f67de1ec31bdced89876f2c9e2fe81db5e8/comments", "author": {"login": "EpocSquadron", "id": 414963, "node_id": "MDQ6VXNlcjQxNDk2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/414963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EpocSquadron", "html_url": "https://github.com/EpocSquadron", "followers_url": "https://api.github.com/users/EpocSquadron/followers", "following_url": "https://api.github.com/users/EpocSquadron/following{/other_user}", "gists_url": "https://api.github.com/users/EpocSquadron/gists{/gist_id}", "starred_url": "https://api.github.com/users/EpocSquadron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EpocSquadron/subscriptions", "organizations_url": "https://api.github.com/users/EpocSquadron/orgs", "repos_url": "https://api.github.com/users/EpocSquadron/repos", "events_url": "https://api.github.com/users/EpocSquadron/events{/privacy}", "received_events_url": "https://api.github.com/users/EpocSquadron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "276e85b70068398a81e3ce0ab18dc6fe59004c7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/276e85b70068398a81e3ce0ab18dc6fe59004c7c", "html_url": "https://github.com/rust-lang/rust/commit/276e85b70068398a81e3ce0ab18dc6fe59004c7c"}], "stats": {"total": 61, "additions": 33, "deletions": 28}, "files": [{"sha": "4168a079454ae9b07337a0235cf13e7332579648", "filename": "README.md", "status": "modified", "additions": 33, "deletions": 28, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/5a415f67de1ec31bdced89876f2c9e2fe81db5e8/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/5a415f67de1ec31bdced89876f2c9e2fe81db5e8/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=5a415f67de1ec31bdced89876f2c9e2fe81db5e8", "patch": "@@ -17,8 +17,41 @@ Table of contents:\n \n ## Usage\n \n+Since this is a tool for helping the developer of a library or application\n+write better code, it is recommended to include clippy as an optional\n+dependency.\n+\n As a general rule clippy will only work with the *latest* Rust nightly for now.\n \n+### Optional dependency\n+\n+If you want to make clippy an optional dependency, you can do the following:\n+\n+In your `Cargo.toml`:\n+\n+```toml\n+[dependencies]\n+clippy = {version = \"*\", optional = true}\n+\n+[features]\n+default = []\n+```\n+\n+And, in your `main.rs` or `lib.rs`:\n+\n+```rust\n+#![cfg_attr(feature=\"clippy\", feature(plugin))]\n+\n+#![cfg_attr(feature=\"clippy\", plugin(clippy))]\n+```\n+\n+Then build by enabling the feature: `cargo build --features \"clippy\"`\n+\n+Instead of adding the `cfg_attr` attributes you can also run clippy on demand:\n+`cargo rustc --features clippy -- -Z no-trans -Z extra-plugins=clippy`\n+(the `-Z no trans`, while not neccessary, will stop the compilation process after\n+typechecking (and lints) have completed, which can significantly reduce the runtime).\n+\n ### As a Compiler Plugin\n \n Since stable Rust is backwards compatible, you should be able to\n@@ -97,34 +130,6 @@ cargo rustc -- -L /path/to/clippy_so -Z extra-plugins=clippy\n *[Note](https://github.com/Manishearth/rust-clippy/wiki#a-word-of-warning):*\n Be sure that clippy was compiled with the same version of rustc that cargo invokes here!\n \n-### Optional dependency\n-\n-If you want to make clippy an optional dependency, you can do the following:\n-\n-In your `Cargo.toml`:\n-\n-```toml\n-[dependencies]\n-clippy = {version = \"*\", optional = true}\n-\n-[features]\n-default = []\n-```\n-\n-And, in your `main.rs` or `lib.rs`:\n-\n-```rust\n-#![cfg_attr(feature=\"clippy\", feature(plugin))]\n-\n-#![cfg_attr(feature=\"clippy\", plugin(clippy))]\n-```\n-\n-Then build by enabling the feature: `cargo build --features \"clippy\"`\n-\n-Instead of adding the `cfg_attr` attributes you can also run clippy on demand:\n-`cargo rustc --features clippy -- -Z no-trans -Z extra-plugins=clippy`\n-(the `-Z no trans`, while not neccessary, will stop the compilation process after\n-typechecking (and lints) have completed, which can significantly reduce the runtime).\n \n ## Configuration\n "}]}