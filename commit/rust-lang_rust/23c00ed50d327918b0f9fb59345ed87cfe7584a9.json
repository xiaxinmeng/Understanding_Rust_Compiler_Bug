{"sha": "23c00ed50d327918b0f9fb59345ed87cfe7584a9", "node_id": "C_kwDOAAsO6NoAKDIzYzAwZWQ1MGQzMjc5MThiMGY5ZmI1OTM0NWVkODdjZmU3NTg0YTk", "commit": {"author": {"name": "Kartavya Vashishtha", "email": "sendtokartavya@gmail.com", "date": "2022-08-20T08:14:01Z"}, "committer": {"name": "Kartavya Vashishtha", "email": "sendtokartavya@gmail.com", "date": "2022-08-20T08:14:01Z"}, "message": "fix: formatting", "tree": {"sha": "ceee504916132a1b3c9c3d07100371d4ab941b7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceee504916132a1b3c9c3d07100371d4ab941b7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23c00ed50d327918b0f9fb59345ed87cfe7584a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE+fRQYdEX7Emd36W/pQASwjJOXfAFAmMAl8kACgkQpQASwjJO\nXfC1aRAAxliRVlSSntG3H9ASaka55XY7eeSPG9e3A8RYOfiIvC1yOPW6FV5wBa2k\n7RLgxqfWDt2Uu+wbjWL8Yho3JuJwSQ5ZuVkbc7GmzHAtV7km8UEbDwPQJsp7vExk\nG5j+jEtlI495dKvclORQHQDJ2oGIxu/7JiQdWLUjCRgtzQ2ylMcPQlhvry2Yfn3f\nA0PCP7NdnS0kURer9vpHrPJnfkonomeeStDd6hXs2T+dT/MFs0YXf5qH17Gfhuyd\nWcPFxOuEBk0z35vms6kobiOJ8H0UwHv992MX+wxfzExe1cE4So5K7yG8qXEEWURe\nkJbGuwwWGy0nrNt2e49B61TQMrnTok7XPQvonC71UhfI7BR5Vk0I2UzUIphPsNv9\n3b3mmJwN63Aobu2WGZ25J5BEpPSYeaGT3Bsyk1CHAQjNjM5wyuGbX40bdFXckhP9\njVRBhz80yuVCUtJAw6WYi9ZVeJKSnqXDwhFslF8c2GXd4wQV2OEQq/oqyr2ib9Ez\nAT9C+354sZ6A9p1nJ/Z4ZcACFErgwPyMnbEKr+XR1pUUFk9v+kgvAsBOTlRCyMa+\ny/0l2WXqroJZRgh4ZZhhCvQ06Jyfd784/jhDUOYvY0YR1hTasllmWTocV2gpcsgp\nMC4tY1h8adkgGGkVplVaP7uycvHDnfe8v7PuEN7l1cBfolz2HTM=\n=VelV\n-----END PGP SIGNATURE-----", "payload": "tree ceee504916132a1b3c9c3d07100371d4ab941b7a\nparent 8f87fcb179421369eee4fdbaae8f25de8a6e9ed7\nauthor Kartavya Vashishtha <sendtokartavya@gmail.com> 1660983241 +0530\ncommitter Kartavya Vashishtha <sendtokartavya@gmail.com> 1660983241 +0530\n\nfix: formatting\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23c00ed50d327918b0f9fb59345ed87cfe7584a9", "html_url": "https://github.com/rust-lang/rust/commit/23c00ed50d327918b0f9fb59345ed87cfe7584a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23c00ed50d327918b0f9fb59345ed87cfe7584a9/comments", "author": {"login": "DesmondWillowbrook", "id": 51814158, "node_id": "MDQ6VXNlcjUxODE0MTU4", "avatar_url": "https://avatars.githubusercontent.com/u/51814158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DesmondWillowbrook", "html_url": "https://github.com/DesmondWillowbrook", "followers_url": "https://api.github.com/users/DesmondWillowbrook/followers", "following_url": "https://api.github.com/users/DesmondWillowbrook/following{/other_user}", "gists_url": "https://api.github.com/users/DesmondWillowbrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/DesmondWillowbrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DesmondWillowbrook/subscriptions", "organizations_url": "https://api.github.com/users/DesmondWillowbrook/orgs", "repos_url": "https://api.github.com/users/DesmondWillowbrook/repos", "events_url": "https://api.github.com/users/DesmondWillowbrook/events{/privacy}", "received_events_url": "https://api.github.com/users/DesmondWillowbrook/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DesmondWillowbrook", "id": 51814158, "node_id": "MDQ6VXNlcjUxODE0MTU4", "avatar_url": "https://avatars.githubusercontent.com/u/51814158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DesmondWillowbrook", "html_url": "https://github.com/DesmondWillowbrook", "followers_url": "https://api.github.com/users/DesmondWillowbrook/followers", "following_url": "https://api.github.com/users/DesmondWillowbrook/following{/other_user}", "gists_url": "https://api.github.com/users/DesmondWillowbrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/DesmondWillowbrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DesmondWillowbrook/subscriptions", "organizations_url": "https://api.github.com/users/DesmondWillowbrook/orgs", "repos_url": "https://api.github.com/users/DesmondWillowbrook/repos", "events_url": "https://api.github.com/users/DesmondWillowbrook/events{/privacy}", "received_events_url": "https://api.github.com/users/DesmondWillowbrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f87fcb179421369eee4fdbaae8f25de8a6e9ed7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f87fcb179421369eee4fdbaae8f25de8a6e9ed7", "html_url": "https://github.com/rust-lang/rust/commit/8f87fcb179421369eee4fdbaae8f25de8a6e9ed7"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "631ae3cf11fa7e0fc9ddc2d57843ac383d1d6e65", "filename": "crates/hir-def/src/data.rs", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/23c00ed50d327918b0f9fb59345ed87cfe7584a9/crates%2Fhir-def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c00ed50d327918b0f9fb59345ed87cfe7584a9/crates%2Fhir-def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fdata.rs?ref=23c00ed50d327918b0f9fb59345ed87cfe7584a9", "patch": "@@ -2,7 +2,7 @@\n \n use std::sync::Arc;\n \n-use hir_expand::{name::Name, AstId, ExpandResult, HirFileId, MacroCallId, MacroDefKind, InFile};\n+use hir_expand::{name::Name, AstId, ExpandResult, HirFileId, InFile, MacroCallId, MacroDefKind};\n use smallvec::SmallVec;\n use syntax::ast;\n \n@@ -12,7 +12,10 @@ use crate::{\n     db::DefDatabase,\n     intern::Interned,\n     item_tree::{self, AssocItem, FnFlags, ItemTree, ItemTreeId, ModItem, Param, TreeId},\n-    nameres::{attr_resolution::ResolvedAttr, proc_macro::ProcMacroKind, DefMap, diagnostics::DefDiagnostic},\n+    nameres::{\n+        attr_resolution::ResolvedAttr, diagnostics::DefDiagnostic, proc_macro::ProcMacroKind,\n+        DefMap,\n+    },\n     type_ref::{TraitRef, TypeBound, TypeRef},\n     visibility::RawVisibility,\n     AssocItemId, AstIdWithPath, ConstId, ConstLoc, FunctionId, FunctionLoc, HasModule, ImplId,\n@@ -213,7 +216,10 @@ impl TraitData {\n         db.trait_data_with_diagnostics(tr).0\n     }\n \n-    pub(crate) fn trait_data_with_diagnostics_query(db: &dyn DefDatabase, tr: TraitId) -> (Arc<TraitData>, Arc<Vec<DefDiagnostic>>) {\n+    pub(crate) fn trait_data_with_diagnostics_query(\n+        db: &dyn DefDatabase,\n+        tr: TraitId,\n+    ) -> (Arc<TraitData>, Arc<Vec<DefDiagnostic>>) {\n         let tr_loc @ ItemLoc { container: module_id, id: tree_id } = tr.lookup(db);\n         let item_tree = tree_id.item_tree(db);\n         let tr_def = &item_tree[tree_id.value];\n@@ -245,7 +251,7 @@ impl TraitData {\n                 visibility,\n                 skip_array_during_method_dispatch,\n             }),\n-            Arc::new(diagnostics)\n+            Arc::new(diagnostics),\n         )\n     }\n \n@@ -290,7 +296,10 @@ impl ImplData {\n         db.impl_data_with_diagnostics(id).0\n     }\n \n-    pub(crate) fn impl_data_with_diagnostics_query(db: &dyn DefDatabase, id: ImplId) -> (Arc<ImplData>, Arc<Vec<DefDiagnostic>>) {\n+    pub(crate) fn impl_data_with_diagnostics_query(\n+        db: &dyn DefDatabase,\n+        id: ImplId,\n+    ) -> (Arc<ImplData>, Arc<Vec<DefDiagnostic>>) {\n         let _p = profile::span(\"impl_data_with_diagnostics_query\");\n         let ItemLoc { container: module_id, id: tree_id } = id.lookup(db);\n \n@@ -307,7 +316,10 @@ impl ImplData {\n         let (items, attribute_calls, diagnostics) = collector.finish();\n         let items = items.into_iter().map(|(_, item)| item).collect();\n \n-        (Arc::new(ImplData { target_trait, self_ty, items, is_negative, attribute_calls }), Arc::new(diagnostics))\n+        (\n+            Arc::new(ImplData { target_trait, self_ty, items, is_negative, attribute_calls }),\n+            Arc::new(diagnostics),\n+        )\n     }\n \n     pub fn attribute_calls(&self) -> impl Iterator<Item = (AstId<ast::Item>, MacroCallId)> + '_ {\n@@ -477,11 +489,15 @@ impl<'a> AssocItemCollector<'a> {\n \n     fn finish(\n         self,\n-    ) -> (Vec<(Name, AssocItemId)>, Option<Box<Vec<(AstId<ast::Item>, MacroCallId)>>>, Vec<DefDiagnostic>) {\n+    ) -> (\n+        Vec<(Name, AssocItemId)>,\n+        Option<Box<Vec<(AstId<ast::Item>, MacroCallId)>>>,\n+        Vec<DefDiagnostic>,\n+    ) {\n         (\n             self.items,\n             if self.attr_calls.is_empty() { None } else { Some(Box::new(self.attr_calls)) },\n-            self.inactive_diagnostics\n+            self.inactive_diagnostics,\n         )\n     }\n \n@@ -497,7 +513,7 @@ impl<'a> AssocItemCollector<'a> {\n                     self.module_id.local_id,\n                     InFile::new(self.expander.current_file_id(), item.ast_id(&item_tree).upcast()),\n                     attrs.cfg().unwrap(),\n-                    self.expander.cfg_options().clone()\n+                    self.expander.cfg_options().clone(),\n                 ));\n                 continue;\n             }"}, {"sha": "40b2f734b7117192afa1fb51b52de20be9a250c8", "filename": "crates/hir-def/src/db.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23c00ed50d327918b0f9fb59345ed87cfe7584a9/crates%2Fhir-def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c00ed50d327918b0f9fb59345ed87cfe7584a9/crates%2Fhir-def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fdb.rs?ref=23c00ed50d327918b0f9fb59345ed87cfe7584a9", "patch": "@@ -20,7 +20,7 @@ use crate::{\n     intern::Interned,\n     item_tree::{AttrOwner, ItemTree},\n     lang_item::{LangItemTarget, LangItems},\n-    nameres::{DefMap, diagnostics::DefDiagnostic},\n+    nameres::{diagnostics::DefDiagnostic, DefMap},\n     visibility::{self, Visibility},\n     AttrDefId, BlockId, BlockLoc, ConstId, ConstLoc, DefWithBodyId, EnumId, EnumLoc, ExternBlockId,\n     ExternBlockLoc, FunctionId, FunctionLoc, GenericDefId, ImplId, ImplLoc, LocalEnumVariantId,\n@@ -113,7 +113,8 @@ pub trait DefDatabase: InternDatabase + AstDatabase + Upcast<dyn AstDatabase> {\n     fn trait_data(&self, e: TraitId) -> Arc<TraitData>;\n \n     #[salsa::invoke(TraitData::trait_data_with_diagnostics_query)]\n-    fn trait_data_with_diagnostics(&self, tr: TraitId) -> (Arc<TraitData>, Arc<Vec<DefDiagnostic>>);\n+    fn trait_data_with_diagnostics(&self, tr: TraitId)\n+        -> (Arc<TraitData>, Arc<Vec<DefDiagnostic>>);\n \n     #[salsa::invoke(TypeAliasData::type_alias_data_query)]\n     fn type_alias_data(&self, e: TypeAliasId) -> Arc<TypeAliasData>;"}, {"sha": "cc9f3180a98a7cf7d5f9d0d1e041e39ac440315d", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23c00ed50d327918b0f9fb59345ed87cfe7584a9/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23c00ed50d327918b0f9fb59345ed87cfe7584a9/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=23c00ed50d327918b0f9fb59345ed87cfe7584a9", "patch": "@@ -531,7 +531,7 @@ impl Module {\n                     if def_map[m.id.local_id].origin.is_inline() {\n                         m.diagnostics(db, acc)\n                     }\n-                },\n+                }\n                 ModuleDef::Trait(t) => {\n                     for diag in db.trait_data_with_diagnostics(t.id).1.iter() {\n                         emit_def_diagnostic(db, acc, diag);"}]}