{"sha": "bfe8c89d41681264e0d8f06a458ac0091dbc43f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZThjODlkNDE2ODEyNjRlMGQ4ZjA2YTQ1OGFjMDA5MWRiYzQzZjA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-11T19:06:23Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-11T19:06:23Z"}, "message": "Remove \"Saved incremental data\" warning", "tree": {"sha": "ca0b479aed4e1f481c10b1f551fced7c10a70468", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca0b479aed4e1f481c10b1f551fced7c10a70468"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfe8c89d41681264e0d8f06a458ac0091dbc43f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfe8c89d41681264e0d8f06a458ac0091dbc43f0", "html_url": "https://github.com/rust-lang/rust/commit/bfe8c89d41681264e0d8f06a458ac0091dbc43f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfe8c89d41681264e0d8f06a458ac0091dbc43f0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "119664f3b59d5e92d477f34916c88e1c9da0b23b", "url": "https://api.github.com/repos/rust-lang/rust/commits/119664f3b59d5e92d477f34916c88e1c9da0b23b", "html_url": "https://github.com/rust-lang/rust/commit/119664f3b59d5e92d477f34916c88e1c9da0b23b"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "bbcf0928553bbe7074b9c6053ef41b5b341c413a", "filename": "src/lib.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bfe8c89d41681264e0d8f06a458ac0091dbc43f0/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfe8c89d41681264e0d8f06a458ac0091dbc43f0/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=bfe8c89d41681264e0d8f06a458ac0091dbc43f0", "patch": "@@ -207,10 +207,6 @@ impl CodegenBackend for CraneliftCodegenBackend {\n \n         let metadata = tcx.encode_metadata();\n \n-        // TODO: move to the end of this function when compiling libcore doesn't have unimplemented stuff anymore\n-        save_incremental(tcx);\n-        tcx.sess.warn(\"Saved incremental data\");\n-\n         let mut log = if cfg!(debug_assertions) {\n             Some(File::create(concat!(env!(\"CARGO_MANIFEST_DIR\"), \"/target/out/log.txt\")).unwrap())\n         } else {\n@@ -323,6 +319,10 @@ impl CodegenBackend for CraneliftCodegenBackend {\n             let mut allocator_module = new_module(\"allocator_shim.o\".to_string());\n             let created_alloc_shim = crate::allocator::codegen(tcx.sess, &mut allocator_module);\n \n+            rustc_incremental::assert_dep_graph(tcx);\n+            rustc_incremental::save_dep_graph(tcx);\n+            rustc_incremental::finalize_session_directory(tcx.sess, tcx.crate_hash(LOCAL_CRATE));\n+\n             return Box::new(CodegenResults {\n                 crate_name: tcx.crate_name(LOCAL_CRATE),\n                 modules: vec![emit_module(\n@@ -469,12 +469,6 @@ fn time<R>(name: &str, f: impl FnOnce() -> R) -> R {\n     res\n }\n \n-fn save_incremental<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n-    rustc_incremental::assert_dep_graph(tcx);\n-    rustc_incremental::save_dep_graph(tcx);\n-    rustc_incremental::finalize_session_directory(tcx.sess, tcx.crate_hash(LOCAL_CRATE));\n-}\n-\n /// This is the entrypoint for a hot plugged rustc_codegen_cranelift\n #[no_mangle]\n pub fn __rustc_codegen_backend() -> Box<dyn CodegenBackend> {"}]}