{"sha": "44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZmY0ZGY0OWRmYmZmMmQyMTk5OWVjOTM2MGVkOGRmNjU1YTZkOWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-06T22:23:30Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:42:25Z"}, "message": "more recovery in if-parsing", "tree": {"sha": "af62c5be9a100517fbd4b794c7a0946e1c97d413", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af62c5be9a100517fbd4b794c7a0946e1c97d413"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "html_url": "https://github.com/rust-lang/rust/commit/44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7262dcc4a78a4e63db29410365fe7d47f2b56fd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7262dcc4a78a4e63db29410365fe7d47f2b56fd0", "html_url": "https://github.com/rust-lang/rust/commit/7262dcc4a78a4e63db29410365fe7d47f2b56fd0"}], "stats": {"total": 104, "additions": 68, "deletions": 36}, "files": [{"sha": "e67d3f6991af057c2a204819c5f758ec487faa7c", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -1412,21 +1412,18 @@ impl<'a> Parser<'a> {\n         // verify that the last statement is either an implicit return (no `;`) or an explicit\n         // return. This won't catch blocks with an explicit `return`, but that would be caught by\n         // the dead code lint.\n-        if self.eat_keyword(kw::Else) || !cond.returns() {\n-            let sp = self.sess.source_map().next_point(lo);\n-            let mut err =\n-                self.diagnostic().struct_span_err(sp, \"missing condition for `if` expression\");\n-            err.span_label(sp, \"expected if condition here\");\n-            return Err(err);\n-        }\n-        let not_block = self.token != token::OpenDelim(token::Brace);\n-        let thn = self.parse_block().map_err(|mut err| {\n-            if not_block {\n-                err.span_label(lo, \"this `if` statement has a condition, but no block\");\n-            }\n-            err\n-        })?;\n-        let mut els: Option<P<Expr>> = None;\n+        let thn = if self.eat_keyword(kw::Else) || !cond.returns() {\n+            self.error_missing_if_cond(lo, cond.span)\n+        } else {\n+            let not_block = self.token != token::OpenDelim(token::Brace);\n+            self.parse_block().map_err(|mut err| {\n+                if not_block {\n+                    err.span_label(lo, \"this `if` expression has a condition, but no block\");\n+                }\n+                err\n+            })?\n+        };\n+        let mut els = None;\n         let mut hi = thn.span;\n         if self.eat_keyword(kw::Else) {\n             let elexpr = self.parse_else_expr()?;\n@@ -1436,6 +1433,16 @@ impl<'a> Parser<'a> {\n         Ok(self.mk_expr(lo.to(hi), ExprKind::If(cond, thn, els), attrs))\n     }\n \n+    fn error_missing_if_cond(&self, lo: Span, span: Span) -> P<ast::Block> {\n+        let sp = self.sess.source_map().next_point(lo);\n+        self.struct_span_err(sp, \"missing condition for `if` expression\")\n+            .span_label(sp, \"expected if condition here\")\n+            .emit();\n+        let expr = self.mk_expr_err(span);\n+        let stmt = self.mk_stmt(span, ast::StmtKind::Expr(expr));\n+        self.mk_block(vec![stmt], BlockCheckMode::Default, span)\n+    }\n+\n     /// Parses the condition of a `if` or `while` expression.\n     fn parse_cond_expr(&mut self) -> PResult<'a, P<Expr>> {\n         let cond = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n@@ -1465,10 +1472,10 @@ impl<'a> Parser<'a> {\n     /// Parses an `else { ... }` expression (`else` token already eaten).\n     fn parse_else_expr(&mut self) -> PResult<'a, P<Expr>> {\n         if self.eat_keyword(kw::If) {\n-            return self.parse_if_expr(AttrVec::new());\n+            self.parse_if_expr(AttrVec::new())\n         } else {\n             let blk = self.parse_block()?;\n-            return Ok(self.mk_expr(blk.span, ExprKind::Block(blk, None), AttrVec::new()));\n+            Ok(self.mk_expr(blk.span, ExprKind::Block(blk, None), AttrVec::new()))\n         }\n     }\n "}, {"sha": "44a197503bd71cae6f2b78cde9e286558b38c750", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -411,7 +411,7 @@ impl<'a> Parser<'a> {\n                 continue;\n             };\n         }\n-        Ok(P(ast::Block { stmts, id: DUMMY_NODE_ID, rules: s, span: lo.to(self.prev_span) }))\n+        Ok(self.mk_block(stmts, s, lo.to(self.prev_span)))\n     }\n \n     /// Parses a statement, including the trailing semicolon.\n@@ -471,7 +471,11 @@ impl<'a> Parser<'a> {\n             .emit();\n     }\n \n-    fn mk_stmt(&self, span: Span, kind: StmtKind) -> Stmt {\n+    pub(super) fn mk_block(&self, stmts: Vec<Stmt>, rules: BlockCheckMode, span: Span) -> P<Block> {\n+        P(Block { stmts, id: DUMMY_NODE_ID, rules, span })\n+    }\n+\n+    pub(super) fn mk_stmt(&self, span: Span, kind: StmtKind) -> Stmt {\n         Stmt { id: DUMMY_NODE_ID, kind, span }\n     }\n }"}, {"sha": "8025886a9eb46f2f2d7f8c17bd44a9b3c132207b", "filename": "src/test/ui/did_you_mean/issue-46836-identifier-not-instead-of-negation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-46836-identifier-not-instead-of-negation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-46836-identifier-not-instead-of-negation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-46836-identifier-not-instead-of-negation.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -26,7 +26,7 @@ error: expected `{`, found `;`\n   --> $DIR/issue-46836-identifier-not-instead-of-negation.rs:20:31\n    |\n LL |     if not  // lack of braces is [sic]\n-   |     -- this `if` statement has a condition, but no block\n+   |     -- this `if` expression has a condition, but no block\n LL |         println!(\"Then when?\");\n    |                               ^\n    |                               |"}, {"sha": "8a4c59f32613d46de81544441f3251730cda3811", "filename": "src/test/ui/if/if-without-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fif%2Fif-without-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fif%2Fif-without-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-without-block.rs?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -1,7 +1,7 @@\n fn main() {\n     let n = 1;\n     if 5 == {\n-    //~^ NOTE this `if` statement has a condition, but no block\n+    //~^ NOTE this `if` expression has a condition, but no block\n         println!(\"five\");\n     }\n }"}, {"sha": "34df8e3d7794637656d5f27d1fc2aba52f618387", "filename": "src/test/ui/if/if-without-block.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fif%2Fif-without-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fif%2Fif-without-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-without-block.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -2,7 +2,7 @@ error: expected `{`, found `}`\n   --> $DIR/if-without-block.rs:7:1\n    |\n LL |     if 5 == {\n-   |     -- this `if` statement has a condition, but no block\n+   |     -- this `if` expression has a condition, but no block\n ...\n LL | }\n    | ^ expected `{`"}, {"sha": "a2fd9264b15308c1871a45fb63887879243750e6", "filename": "src/test/ui/issues/issue-13483.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-13483.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-13483.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13483.rs?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -1,13 +1,15 @@\n fn main() {\n     if true {\n     } else if { //~ ERROR missing condition\n+    //~^ ERROR mismatched types\n     } else {\n     }\n }\n \n fn foo() {\n     if true {\n     } else if { //~ ERROR missing condition\n+    //~^ ERROR mismatched types\n     }\n     bar();\n }"}, {"sha": "5fd05b18ce06e6bfcda8df32b14beefb6b95f320", "filename": "src/test/ui/issues/issue-13483.stderr", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-13483.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-13483.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13483.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -5,10 +5,29 @@ LL |     } else if {\n    |              ^ expected if condition here\n \n error: missing condition for `if` expression\n-  --> $DIR/issue-13483.rs:10:14\n+  --> $DIR/issue-13483.rs:11:14\n    |\n LL |     } else if {\n    |              ^ expected if condition here\n \n-error: aborting due to 2 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13483.rs:3:15\n+   |\n+LL |       } else if {\n+   |  _______________^\n+LL | |\n+LL | |     } else {\n+   | |_____^ expected `bool`, found `()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13483.rs:11:15\n+   |\n+LL |       } else if {\n+   |  _______________^\n+LL | |\n+LL | |     }\n+   | |_____^ expected `bool`, found `()`\n+\n+error: aborting due to 4 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "11b145d6e0dc977e6da5e087e5759e62f40ac90b", "filename": "src/test/ui/issues/issue-39848.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -4,7 +4,7 @@ error: expected `{`, found `foo`\n LL |         if $tgt.has_$field() {}\n    |         --                -- help: try placing this code inside a block: `{ () }`\n    |         |\n-   |         this `if` statement has a condition, but no block\n+   |         this `if` expression has a condition, but no block\n ...\n LL |     get_opt!(bar, foo);\n    |                   ^^^ expected `{`"}, {"sha": "d800890bca38d18295bfd6cef55ff27f4c1029c6", "filename": "src/test/ui/issues/issue-51602.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-51602.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-51602.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51602.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -4,7 +4,7 @@ error: expected `{`, found keyword `in`\n LL |     if i in 1..10 {\n    |     --   ^^ expected `{`\n    |     |\n-   |     this `if` statement has a condition, but no block\n+   |     this `if` expression has a condition, but no block\n \n error: aborting due to previous error\n "}, {"sha": "8b95d9c6ae48b4b3d2431f3edf13402928a1d6bc", "filename": "src/test/ui/issues/issue-61858.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-61858.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-61858.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-61858.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -4,7 +4,7 @@ error: expected `{`, found `)`\n LL |     (if foobar)\n    |      --       ^ expected `{`\n    |      |\n-   |      this `if` statement has a condition, but no block\n+   |      this `if` expression has a condition, but no block\n \n error: aborting due to previous error\n "}, {"sha": "d59546e23839ac2d2fe9a8f955a27214970d1666", "filename": "src/test/ui/issues/issue-62554.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-62554.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -17,7 +17,7 @@ error: expected `{`, found `macro_rules`\n LL | fn foo(u: u8) { if u8 macro_rules! u8 { (u6) => { fn uuuuuuuuuuu() { use s loo mod u8 {\n    |                 --    ^^^^^^^^^^^ expected `{`\n    |                 |\n-   |                 this `if` statement has a condition, but no block\n+   |                 this `if` expression has a condition, but no block\n    |\n help: try placing this code inside a block\n    |"}, {"sha": "46b53c65b48179d4585a741580db4a48971ffb66", "filename": "src/test/ui/label/label_break_value_illegal_uses.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_illegal_uses.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_illegal_uses.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel%2Flabel_break_value_illegal_uses.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -12,7 +12,7 @@ LL |     if true 'b: {}\n    |     |       |\n    |     |       expected `{`\n    |     |       help: try placing this code inside a block: `{ 'b: {} }`\n-   |     this `if` statement has a condition, but no block\n+   |     this `if` expression has a condition, but no block\n \n error: expected `{`, found `'b`\n   --> $DIR/label_break_value_illegal_uses.rs:14:21"}, {"sha": "0f635817bf4624b7e5866245256bf956d89082f0", "filename": "src/test/ui/missing/missing-block-hint.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fmissing%2Fmissing-block-hint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fmissing%2Fmissing-block-hint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing%2Fmissing-block-hint.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -4,13 +4,13 @@ error: expected `{`, found `=>`\n LL |         if (foo) => {}\n    |         --       ^^ expected `{`\n    |         |\n-   |         this `if` statement has a condition, but no block\n+   |         this `if` expression has a condition, but no block\n \n error: expected `{`, found `bar`\n   --> $DIR/missing-block-hint.rs:7:13\n    |\n LL |         if (foo)\n-   |         -- this `if` statement has a condition, but no block\n+   |         -- this `if` expression has a condition, but no block\n LL |             bar;\n    |             ^^^-\n    |             |"}, {"sha": "30aa820141cf9f2d2d205bb35baa4646fb51f393", "filename": "src/test/ui/parser/attr-stmt-expr-attr-bad.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -149,7 +149,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 #[attr] {}; }\n    |                                --   ^       --- help: try placing this code inside a block: `{ {}; }`\n    |                                |    |\n    |                                |    expected `{`\n-   |                                this `if` statement has a condition, but no block\n+   |                                this `if` expression has a condition, but no block\n \n error: an inner attribute is not permitted in this context\n   --> $DIR/attr-stmt-expr-attr-bad.rs:43:38\n@@ -202,7 +202,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if 0 {} else if 0 #[attr] {}; }\n    |                                             --   ^       --- help: try placing this code inside a block: `{ {}; }`\n    |                                             |    |\n    |                                             |    expected `{`\n-   |                                             this `if` statement has a condition, but no block\n+   |                                             this `if` expression has a condition, but no block\n \n error: an inner attribute is not permitted in this context\n   --> $DIR/attr-stmt-expr-attr-bad.rs:56:51\n@@ -225,7 +225,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 #[attr] {}; }\n    |                                --           ^       --- help: try placing this code inside a block: `{ {}; }`\n    |                                |            |\n    |                                |            expected `{`\n-   |                                this `if` statement has a condition, but no block\n+   |                                this `if` expression has a condition, but no block\n \n error: an inner attribute is not permitted in this context\n   --> $DIR/attr-stmt-expr-attr-bad.rs:62:46\n@@ -278,7 +278,7 @@ LL | #[cfg(FALSE)] fn e() { let _ = if let _ = 0 {} else if let _ = 0 #[attr] {}\n    |                                                     --           ^       --- help: try placing this code inside a block: `{ {}; }`\n    |                                                     |            |\n    |                                                     |            expected `{`\n-   |                                                     this `if` statement has a condition, but no block\n+   |                                                     this `if` expression has a condition, but no block\n \n error: an inner attribute is not permitted in this context\n   --> $DIR/attr-stmt-expr-attr-bad.rs:75:67"}, {"sha": "a720dd68bd0377baed1c590fe0e5632f6309b1c6", "filename": "src/test/ui/parser/doc-comment-in-if-statement.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-if-statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44ff4df49dfbff2d21999ec9360ed8df655a6d9b/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-if-statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-if-statement.stderr?ref=44ff4df49dfbff2d21999ec9360ed8df655a6d9b", "patch": "@@ -4,7 +4,7 @@ error: expected `{`, found doc comment `/*!*/`\n LL |     if true /*!*/ {}\n    |     --      ^^^^^ expected `{`\n    |     |\n-   |     this `if` statement has a condition, but no block\n+   |     this `if` expression has a condition, but no block\n \n error: aborting due to previous error\n "}]}