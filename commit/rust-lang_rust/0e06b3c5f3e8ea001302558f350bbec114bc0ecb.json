{"sha": "0e06b3c5f3e8ea001302558f350bbec114bc0ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMDZiM2M1ZjNlOGVhMDAxMzAyNTU4ZjM1MGJiZWMxMTRiYzBlY2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-29T15:04:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-29T15:04:27Z"}, "message": "Auto merge of #6996 - Y-Nak:missing_panics_doc, r=Manishearth\n\nAllow missing panics doc if the panics occur only when debug-assertions is specified\n\nfixes #6970\n\nchangelog: `missing_panics_doc`: Allow missing panics doc if the panics occur only when `debug-assertions` is specified.", "tree": {"sha": "2ad89b73d1183bc80070ae8e40f415e876c5e03c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ad89b73d1183bc80070ae8e40f415e876c5e03c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e06b3c5f3e8ea001302558f350bbec114bc0ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e06b3c5f3e8ea001302558f350bbec114bc0ecb", "html_url": "https://github.com/rust-lang/rust/commit/0e06b3c5f3e8ea001302558f350bbec114bc0ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e06b3c5f3e8ea001302558f350bbec114bc0ecb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c07103b4a2b8c88a2c405ede6386f821edad41fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c07103b4a2b8c88a2c405ede6386f821edad41fd", "html_url": "https://github.com/rust-lang/rust/commit/c07103b4a2b8c88a2c405ede6386f821edad41fd"}, {"sha": "31afdfc12bbe1bd2681ac17bfb07134ffd3cf061", "url": "https://api.github.com/repos/rust-lang/rust/commits/31afdfc12bbe1bd2681ac17bfb07134ffd3cf061", "html_url": "https://github.com/rust-lang/rust/commit/31afdfc12bbe1bd2681ac17bfb07134ffd3cf061"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "69800f9d331877e9d894595676ee80e4454bb934", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e06b3c5f3e8ea001302558f350bbec114bc0ecb/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e06b3c5f3e8ea001302558f350bbec114bc0ecb/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=0e06b3c5f3e8ea001302558f350bbec114bc0ecb", "patch": "@@ -715,6 +715,7 @@ impl<'a, 'tcx> Visitor<'tcx> for FindPanicUnwrap<'a, 'tcx> {\n             if let Some(path_def_id) = path.res.opt_def_id();\n             if match_panic_def_id(self.cx, path_def_id);\n             if is_expn_of(expr.span, \"unreachable\").is_none();\n+            if !is_expn_of_debug_assertions(expr.span);\n             then {\n                 self.panic_span = Some(expr.span);\n             }\n@@ -738,3 +739,8 @@ impl<'a, 'tcx> Visitor<'tcx> for FindPanicUnwrap<'a, 'tcx> {\n         NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n     }\n }\n+\n+fn is_expn_of_debug_assertions(span: Span) -> bool {\n+    const MACRO_NAMES: &[&str] = &[\"debug_assert\", \"debug_assert_eq\", \"debug_assert_ne\"];\n+    MACRO_NAMES.iter().any(|name| is_expn_of(span, name).is_some())\n+}"}, {"sha": "3fe35c75799bf36eb29f710615d67f5725a06dd6", "filename": "tests/ui/missing_panics_doc.rs", "status": "renamed", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e06b3c5f3e8ea001302558f350bbec114bc0ecb/tests%2Fui%2Fmissing_panics_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e06b3c5f3e8ea001302558f350bbec114bc0ecb/tests%2Fui%2Fmissing_panics_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_panics_doc.rs?ref=0e06b3c5f3e8ea001302558f350bbec114bc0ecb", "patch": "@@ -112,3 +112,11 @@ fn inner_body_private(opt: Option<u32>) {\n pub fn unreachable() {\n     unreachable!(\"This function panics\")\n }\n+\n+/// #6970.\n+/// This is okay because it is expansion of `debug_assert` family.\n+pub fn debug_assertions() {\n+    debug_assert!(false);\n+    debug_assert_eq!(1, 2);\n+    debug_assert_ne!(1, 2);\n+}", "previous_filename": "tests/ui/doc_panics.rs"}, {"sha": "37da6bfd92d9cf32c72c52de459e1ffdd92288f1", "filename": "tests/ui/missing_panics_doc.stderr", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0e06b3c5f3e8ea001302558f350bbec114bc0ecb/tests%2Fui%2Fmissing_panics_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e06b3c5f3e8ea001302558f350bbec114bc0ecb/tests%2Fui%2Fmissing_panics_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_panics_doc.stderr?ref=0e06b3c5f3e8ea001302558f350bbec114bc0ecb", "patch": "@@ -1,5 +1,5 @@\n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/doc_panics.rs:7:1\n+  --> $DIR/missing_panics_doc.rs:7:1\n    |\n LL | / pub fn unwrap() {\n LL | |     let result = Err(\"Hi\");\n@@ -9,43 +9,43 @@ LL | | }\n    |\n    = note: `-D clippy::missing-panics-doc` implied by `-D warnings`\n note: first possible panic found here\n-  --> $DIR/doc_panics.rs:9:5\n+  --> $DIR/missing_panics_doc.rs:9:5\n    |\n LL |     result.unwrap()\n    |     ^^^^^^^^^^^^^^^\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/doc_panics.rs:13:1\n+  --> $DIR/missing_panics_doc.rs:13:1\n    |\n LL | / pub fn panic() {\n LL | |     panic!(\"This function panics\")\n LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/doc_panics.rs:14:5\n+  --> $DIR/missing_panics_doc.rs:14:5\n    |\n LL |     panic!(\"This function panics\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/doc_panics.rs:18:1\n+  --> $DIR/missing_panics_doc.rs:18:1\n    |\n LL | / pub fn todo() {\n LL | |     todo!()\n LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/doc_panics.rs:19:5\n+  --> $DIR/missing_panics_doc.rs:19:5\n    |\n LL |     todo!()\n    |     ^^^^^^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/doc_panics.rs:23:1\n+  --> $DIR/missing_panics_doc.rs:23:1\n    |\n LL | / pub fn inner_body(opt: Option<u32>) {\n LL | |     opt.map(|x| {\n@@ -57,22 +57,22 @@ LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/doc_panics.rs:26:13\n+  --> $DIR/missing_panics_doc.rs:26:13\n    |\n LL |             panic!()\n    |             ^^^^^^^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: docs for function which may panic missing `# Panics` section\n-  --> $DIR/doc_panics.rs:32:1\n+  --> $DIR/missing_panics_doc.rs:32:1\n    |\n LL | / pub fn unreachable_and_panic() {\n LL | |     if true { unreachable!() } else { panic!() }\n LL | | }\n    | |_^\n    |\n note: first possible panic found here\n-  --> $DIR/doc_panics.rs:33:39\n+  --> $DIR/missing_panics_doc.rs:33:39\n    |\n LL |     if true { unreachable!() } else { panic!() }\n    |                                       ^^^^^^^^", "previous_filename": "tests/ui/doc_panics.stderr"}]}