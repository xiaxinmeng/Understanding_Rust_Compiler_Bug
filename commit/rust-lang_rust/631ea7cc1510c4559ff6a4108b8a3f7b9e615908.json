{"sha": "631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "node_id": "C_kwDOAAsO6NoAKDYzMWVhN2NjMTUxMGM0NTU5ZmY2YTQxMDhiOGEzZjdiOWU2MTU5MDg", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2023-04-16T21:21:11Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2023-04-21T09:14:03Z"}, "message": "use P<[Ident]> instead of Vec<Ident>", "tree": {"sha": "5eba3c00028eb8c0b96cefbccde6948ebac1dd8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eba3c00028eb8c0b96cefbccde6948ebac1dd8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "html_url": "https://github.com/rust-lang/rust/commit/631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/631ea7cc1510c4559ff6a4108b8a3f7b9e615908/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b92c2f792c33fbb180358997c5368f336f8912d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92c2f792c33fbb180358997c5368f336f8912d2", "html_url": "https://github.com/rust-lang/rust/commit/b92c2f792c33fbb180358997c5368f336f8912d2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1e4d3ba47f4722e227b6b0f4f203fbf30d947930", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/631ea7cc1510c4559ff6a4108b8a3f7b9e615908/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631ea7cc1510c4559ff6a4108b8a3f7b9e615908/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "patch": "@@ -1471,7 +1471,7 @@ pub enum ExprKind {\n     InlineAsm(P<InlineAsm>),\n \n     /// Output of the `offset_of!()` macro.\n-    OffsetOf(P<Ty>, Vec<Ident>),\n+    OffsetOf(P<Ty>, P<[Ident]>),\n \n     /// A macro invocation; pre-expansion.\n     MacCall(P<MacCall>),"}, {"sha": "99f1f4bd9685f491606136039b1de37ae88438f0", "filename": "compiler/rustc_ast/src/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/631ea7cc1510c4559ff6a4108b8a3f7b9e615908/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631ea7cc1510c4559ff6a4108b8a3f7b9e615908/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs?ref=631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "patch": "@@ -1458,7 +1458,7 @@ pub fn noop_visit_expr<T: MutVisitor>(\n         ExprKind::FormatArgs(fmt) => vis.visit_format_args(fmt),\n         ExprKind::OffsetOf(container, fields) => {\n             vis.visit_ty(container);\n-            for field in fields {\n+            for field in fields.iter_mut() {\n                 vis.visit_ident(field);\n             }\n         }"}, {"sha": "0ef3e000e414c40c69fb87601320f8f07098957f", "filename": "compiler/rustc_builtin_macros/src/offset_of.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/631ea7cc1510c4559ff6a4108b8a3f7b9e615908/compiler%2Frustc_builtin_macros%2Fsrc%2Foffset_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631ea7cc1510c4559ff6a4108b8a3f7b9e615908/compiler%2Frustc_builtin_macros%2Fsrc%2Foffset_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Foffset_of.rs?ref=631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "patch": "@@ -41,7 +41,7 @@ fn parse_args<'a>(\n     cx: &mut ExtCtxt<'a>,\n     sp: Span,\n     tts: TokenStream,\n-) -> PResult<'a, (P<ast::Ty>, Vec<Ident>)> {\n+) -> PResult<'a, (P<ast::Ty>, P<[Ident]>)> {\n     let mut p = cx.new_parser_from_tts(tts);\n \n     let container = p.parse_ty()?;\n@@ -71,7 +71,7 @@ fn parse_args<'a>(\n         break;\n     }\n \n-    Ok((container, fields))\n+    Ok((container, fields.into()))\n }\n \n pub fn expand_offset_of<'cx>("}]}