{"sha": "6cbcfa276185d650ca04fb96ddec15f1b82c5806", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYmNmYTI3NjE4NWQ2NTBjYTA0ZmI5NmRkZWMxNWYxYjgyYzU4MDY=", "commit": {"author": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-03T19:56:30Z"}, "committer": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-03T19:56:30Z"}, "message": "Fix a few small things, re-word others\n\nMostly addressing notes on ambiguous syntax and spurious newlines.", "tree": {"sha": "06f35c8a30e61cabe68913012d750e67504d0113", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06f35c8a30e61cabe68913012d750e67504d0113"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cbcfa276185d650ca04fb96ddec15f1b82c5806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cbcfa276185d650ca04fb96ddec15f1b82c5806", "html_url": "https://github.com/rust-lang/rust/commit/6cbcfa276185d650ca04fb96ddec15f1b82c5806", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cbcfa276185d650ca04fb96ddec15f1b82c5806/comments", "author": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1bd8a9c615b6ec9124c9525c8d0898c806b62c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8", "html_url": "https://github.com/rust-lang/rust/commit/c1bd8a9c615b6ec9124c9525c8d0898c806b62c8"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "a1f594d5244f9105fea0c0c861204f176d049d80", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6cbcfa276185d650ca04fb96ddec15f1b82c5806/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cbcfa276185d650ca04fb96ddec15f1b82c5806/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=6cbcfa276185d650ca04fb96ddec15f1b82c5806", "patch": "@@ -53,7 +53,7 @@ mod as_keyword { }\n /// Constants must be explicitly typed, unlike with `let` you can't ignore its type and let the\n /// compiler figure it out. Any constant value can be defined in a const, which in practice happens\n /// to be most things that would be reasonable to have a constant. For example, you can't have a\n-/// File as a const.\n+/// File as a `const`.\n ///\n /// The only lifetime allowed in a constant is 'static, which is the lifetime that encompasses all\n /// others in a Rust program. For example, if you wanted to define a constant string, it would look\n@@ -214,8 +214,9 @@ mod let_keyword { }\n /// }\n /// ```\n ///\n-/// Another shortcut for struct instantiation is available when you need to make a new struct that\n-/// shares most of a previous struct's values called struct update syntax:\n+/// Another shortcut for struct instantiation is available, used when you need to make a new\n+/// struct that has the same values as most of a previous struct of the same type, called struct\n+/// update syntax:\n ///\n /// ```rust\n /// # struct Foo { field1: String, field2: () }\n@@ -229,10 +230,9 @@ mod let_keyword { }\n /// Tuple structs are instantiated in the same way as tuples themselves, except with the struct's\n /// name as a prefix: `Foo(123, false, 0.1)`.\n ///\n-/// Empty structs are instantiated with just their name and nothing else. `let thing =\n+/// Empty structs are instantiated with just their name, and don't need anything else. `let thing =\n /// EmptyStruct;`\n ///\n-///\n /// # Style conventions\n ///\n /// Structs are always written in CamelCase, with few exceptions. While the trailing comma on a\n@@ -245,5 +245,4 @@ mod let_keyword { }\n /// [`PhantomData`]: marker/struct.PhantomData.html\n /// [book]: https://doc.rust-lang.org/book/second-edition/ch05-01-defining-structs.html\n /// [reference]: https://doc.rust-lang.org/reference/items/structs.html\n-\n mod struct_keyword { }"}]}