{"sha": "ed819c9a81d138ab876c42ad35025ff432845a2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkODE5YzlhODFkMTM4YWI4NzZjNDJhZDM1MDI1ZmY0MzI4NDVhMmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T22:55:41Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:37Z"}, "message": "librustc: De-`@mut` the crate cache in the crate reader", "tree": {"sha": "8195f540124af37d4378528a398c370f205bc5a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8195f540124af37d4378528a398c370f205bc5a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed819c9a81d138ab876c42ad35025ff432845a2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed819c9a81d138ab876c42ad35025ff432845a2c", "html_url": "https://github.com/rust-lang/rust/commit/ed819c9a81d138ab876c42ad35025ff432845a2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed819c9a81d138ab876c42ad35025ff432845a2c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f76a9ba5ef3b9b1f903ef3fd0f932972566720c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c", "html_url": "https://github.com/rust-lang/rust/commit/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "de5ae08cf5756361652ab759e05ca8965114caf1", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ed819c9a81d138ab876c42ad35025ff432845a2c/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed819c9a81d138ab876c42ad35025ff432845a2c/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=ed819c9a81d138ab876c42ad35025ff432845a2c", "patch": "@@ -37,7 +37,7 @@ pub fn read_crates(sess: Session,\n     let mut e = Env {\n         sess: sess,\n         os: os,\n-        crate_cache: @mut ~[],\n+        crate_cache: @RefCell::new(~[]),\n         next_crate_num: 1,\n         intr: intr\n     };\n@@ -48,8 +48,9 @@ pub fn read_crates(sess: Session,\n         };\n         visit::walk_crate(&mut v, crate, ());\n     }\n-    dump_crates(*e.crate_cache);\n-    warn_if_multiple_versions(&mut e, sess.diagnostic(), *e.crate_cache);\n+    let crate_cache = e.crate_cache.borrow();\n+    dump_crates(*crate_cache.get());\n+    warn_if_multiple_versions(&mut e, sess.diagnostic(), *crate_cache.get());\n }\n \n struct ReadCrateVisitor<'a> {\n@@ -111,7 +112,7 @@ fn warn_if_multiple_versions(e: &mut Env,\n struct Env {\n     sess: Session,\n     os: loader::Os,\n-    crate_cache: @mut ~[cache_entry],\n+    crate_cache: @RefCell<~[cache_entry]>,\n     next_crate_num: ast::CrateNum,\n     intr: @ident_interner\n }\n@@ -242,7 +243,8 @@ fn visit_item(e: &Env, i: @ast::item) {\n }\n \n fn existing_match(e: &Env, name: @str, version: @str, hash: &str) -> Option<ast::CrateNum> {\n-    for c in e.crate_cache.iter() {\n+    let crate_cache = e.crate_cache.borrow();\n+    for c in crate_cache.get().iter() {\n         let pkgid_version = match c.pkgid.version {\n             None => @\"0.0\",\n             Some(ref ver) => ver.to_managed(),\n@@ -285,12 +287,15 @@ fn resolve_crate(e: &mut Env,\n \n         // Claim this crate number and cache it\n         let cnum = e.next_crate_num;\n-        e.crate_cache.push(cache_entry {\n-            cnum: cnum,\n-            span: span,\n-            hash: hash,\n-            pkgid: pkgid,\n-        });\n+        {\n+            let mut crate_cache = e.crate_cache.borrow_mut();\n+            crate_cache.get().push(cache_entry {\n+                cnum: cnum,\n+                span: span,\n+                hash: hash,\n+                pkgid: pkgid,\n+            });\n+        }\n         e.next_crate_num += 1;\n \n         // Now resolve the crates referenced by this crate"}]}