{"sha": "ba567d19f09f105d7ed03808d2220b27fc0b8893", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNTY3ZDE5ZjA5ZjEwNWQ3ZWQwMzgwOGQyMjIwYjI3ZmMwYjg4OTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-16T17:49:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-16T17:53:10Z"}, "message": "stub out pthread_atfork to that we support thread_rng()", "tree": {"sha": "44637914009c8a9177c2c6ec34ef77731239440a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44637914009c8a9177c2c6ec34ef77731239440a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba567d19f09f105d7ed03808d2220b27fc0b8893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba567d19f09f105d7ed03808d2220b27fc0b8893", "html_url": "https://github.com/rust-lang/rust/commit/ba567d19f09f105d7ed03808d2220b27fc0b8893", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba567d19f09f105d7ed03808d2220b27fc0b8893/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c8ad5f9e199d45b7c2425389ef718ce65071be2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8ad5f9e199d45b7c2425389ef718ce65071be2", "html_url": "https://github.com/rust-lang/rust/commit/9c8ad5f9e199d45b7c2425389ef718ce65071be2"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "bb9eef0c872107a1a741c2fcedc3523d43043961", "filename": "src/fn_call.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba567d19f09f105d7ed03808d2220b27fc0b8893/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba567d19f09f105d7ed03808d2220b27fc0b8893/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=ba567d19f09f105d7ed03808d2220b27fc0b8893", "patch": "@@ -624,6 +624,11 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n                 this.write_null(dest)?;\n             }\n \n+            // We don't support fork so we don't have to do anything for atfork.\n+            \"pthread_atfork\" => {\n+                this.write_null(dest)?;\n+            }\n+\n             \"mmap\" => {\n                 // This is a horrible hack, but since the guard page mechanism calls mmap and expects a particular return value, we just give it that value.\n                 let addr = this.read_scalar(args[0])?.not_undef()?;"}, {"sha": "1812ca59c41753de3cb2372a492423c3d7c5554c", "filename": "test-cargo-miri/tests/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba567d19f09f105d7ed03808d2220b27fc0b8893/test-cargo-miri%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba567d19f09f105d7ed03808d2220b27fc0b8893/test-cargo-miri%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftests%2Ftest.rs?ref=ba567d19f09f105d7ed03808d2220b27fc0b8893", "patch": "@@ -23,6 +23,10 @@ fn seeded_rng() {\n     // Use this opportunity to test querying the RNG (needs an external crate, hence tested here and not in the compiletest suite)\n     let mut rng = SmallRng::from_entropy();\n     let _val = rng.gen::<i32>();\n+\n+    // Also try per-thread RNG.\n+    let mut rng = rand::thread_rng();\n+    let _val = rng.gen::<i32>();\n }\n \n // A test that won't work on miri"}]}