{"sha": "bb15c4762dc6eceb8e34a521e0e6ab627066f314", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMTVjNDc2MmRjNmVjZWI4ZTM0YTUyMWUwZTZhYjYyNzA2NmYzMTQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-12T17:27:52Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-12T17:27:52Z"}, "message": "Rollup merge of #25267 - meqif:explain_e0317, r=alexcrichton\n\nAdd diagnostic message for E0317, E0154, E0259 and E0260; part of #24407.\r\n\r\nAbout E0317, I was unsure if I should add an example of what could be wrong, such as `struct i64`, `enum char { A, B }` or `type isize = i64`. I decided against it, since the diagnostic message looks clear enough to me.\r\n\r\nWhat do you think?", "tree": {"sha": "19084261ca0609eaa14918239affb369c4dd50a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19084261ca0609eaa14918239affb369c4dd50a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb15c4762dc6eceb8e34a521e0e6ab627066f314", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb15c4762dc6eceb8e34a521e0e6ab627066f314", "html_url": "https://github.com/rust-lang/rust/commit/bb15c4762dc6eceb8e34a521e0e6ab627066f314", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb15c4762dc6eceb8e34a521e0e6ab627066f314/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e91d272fbb06a0d56f588ca9ee7a2fb256498aec", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91d272fbb06a0d56f588ca9ee7a2fb256498aec", "html_url": "https://github.com/rust-lang/rust/commit/e91d272fbb06a0d56f588ca9ee7a2fb256498aec"}, {"sha": "aa529ef52e54039fcfaa8aa7914be4c581179497", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa529ef52e54039fcfaa8aa7914be4c581179497", "html_url": "https://github.com/rust-lang/rust/commit/aa529ef52e54039fcfaa8aa7914be4c581179497"}], "stats": {"total": 108, "additions": 104, "deletions": 4}, "files": [{"sha": "7e7af8006805d1354ce61e05af3adecdabd4b39f", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 104, "deletions": 4, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/bb15c4762dc6eceb8e34a521e0e6ab627066f314/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb15c4762dc6eceb8e34a521e0e6ab627066f314/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=bb15c4762dc6eceb8e34a521e0e6ab627066f314", "patch": "@@ -10,8 +10,111 @@\n \n #![allow(non_snake_case)]\n \n+// Error messages for EXXXX errors.\n+// Each message should start and end with a new line, and be wrapped to 80 characters.\n+// In vim you can `:set tw=80` and use `gq` to wrap paragraphs. Use `:set tw=0` to disable.\n+register_long_diagnostics! {\n+\n+E0154: r##\"\n+Imports (`use` statements) are not allowed after non-item statements, such as\n+variable declarations and expression statements.\n+\n+Here is an example that demonstrates the error:\n+```\n+fn f() {\n+    // Variable declaration before import\n+    let x = 0;\n+    use std::io::Read;\n+    ...\n+}\n+```\n+\n+The solution is to declare the imports at the top of the block, function, or\n+file.\n+\n+Here is the previous example again, with the correct order:\n+```\n+fn f() {\n+    use std::io::Read;\n+    let x = 0;\n+    ...\n+}\n+```\n+\n+See the Declaration Statements section of the reference for more information\n+about what constitutes an Item declaration and what does not:\n+\n+http://doc.rust-lang.org/reference.html#statements\n+\"##,\n+\n+E0259: r##\"\n+The name chosen for an external crate conflicts with another external crate that\n+has been imported into the current module.\n+\n+Wrong example:\n+```\n+extern crate a;\n+extern crate crate_a as a;\n+```\n+\n+The solution is to choose a different name that doesn't conflict with any\n+external crate imported into the current module.\n+\n+Correct example:\n+```\n+extern crate a;\n+extern crate crate_a as other_name;\n+```\n+\"##,\n+\n+E0260: r##\"\n+The name for an item declaration conflicts with an external crate's name.\n+\n+For instance,\n+```\n+extern crate abc;\n+\n+struct abc;\n+```\n+\n+There are two possible solutions:\n+\n+Solution #1: Rename the item.\n+\n+```\n+extern crate abc;\n+\n+struct xyz;\n+```\n+\n+Solution #2: Import the crate with a different name.\n+\n+```\n+extern crate abc as xyz;\n+\n+struct abc;\n+```\n+\n+See the Declaration Statements section of the reference for more information\n+about what constitutes an Item declaration and what does not:\n+\n+http://doc.rust-lang.org/reference.html#statements\n+\"##,\n+\n+E0317: r##\"\n+User-defined types or type parameters cannot shadow the primitive types.\n+This error indicates you tried to define a type, struct or enum with the same\n+name as an existing primitive type.\n+\n+See the Types section of the reference for more information about the primitive\n+types:\n+\n+http://doc.rust-lang.org/reference.html#types\n+\"##\n+\n+}\n+\n register_diagnostics! {\n-    E0154,\n     E0157,\n     E0153,\n     E0251, // a named type or value has already been imported in this module\n@@ -22,9 +125,6 @@ register_diagnostics! {\n     E0256, // import conflicts with type in this module\n     E0257, // inherent implementations are only allowed on types defined in the current module\n     E0258, // import conflicts with existing submodule\n-    E0259, // an extern crate has already been imported into this module\n-    E0260, // name conflicts with an external crate that has been imported into this module\n-    E0317, // user-defined types or type parameters cannot shadow the primitive types\n     E0364, // item is private\n     E0365  // item is private\n }"}]}