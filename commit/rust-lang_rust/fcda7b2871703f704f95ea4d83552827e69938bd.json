{"sha": "fcda7b2871703f704f95ea4d83552827e69938bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZGE3YjI4NzE3MDNmNzA0Zjk1ZWE0ZDgzNTUyODI3ZTY5OTM4YmQ=", "commit": {"author": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2018-09-05T07:03:00Z"}, "committer": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2018-09-05T07:03:00Z"}, "message": "Add doc for impl From for Std Error", "tree": {"sha": "89b95a4f380dcb20f7494e726a66d59e2a66a3ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89b95a4f380dcb20f7494e726a66d59e2a66a3ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcda7b2871703f704f95ea4d83552827e69938bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcda7b2871703f704f95ea4d83552827e69938bd", "html_url": "https://github.com/rust-lang/rust/commit/fcda7b2871703f704f95ea4d83552827e69938bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcda7b2871703f704f95ea4d83552827e69938bd/comments", "author": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bf6d50a6ff7685b4aa09172d9d09f03f250da9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf6d50a6ff7685b4aa09172d9d09f03f250da9d", "html_url": "https://github.com/rust-lang/rust/commit/6bf6d50a6ff7685b4aa09172d9d09f03f250da9d"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "6ca8e28c11659bd6ae532af1f79891cf76488090", "filename": "src/libstd/error.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fcda7b2871703f704f95ea4d83552827e69938bd/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcda7b2871703f704f95ea4d83552827e69938bd/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=fcda7b2871703f704f95ea4d83552827e69938bd", "patch": "@@ -152,20 +152,24 @@ pub trait Error: Debug + Display {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, E: Error + 'a> From<E> for Box<dyn Error + 'a> {\n+    /// Converts a type of [`Error`] into a box of dyn [`Error`].\n     fn from(err: E) -> Box<dyn Error + 'a> {\n         Box::new(err)\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, E: Error + Send + Sync + 'a> From<E> for Box<dyn Error + Send + Sync + 'a> {\n+    /// Converts a type of [`Error`] + [`Send`] + [`Sync`] into a box of dyn [`Error`] +\n+    /// [`Send`] + [`Sync`].\n     fn from(err: E) -> Box<dyn Error + Send + Sync + 'a> {\n         Box::new(err)\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl From<String> for Box<dyn Error + Send + Sync> {\n+    /// Converts a [`String`] into a box of dyn [`Error`] + [`Send`] + [`Sync`].\n     fn from(err: String) -> Box<dyn Error + Send + Sync> {\n         #[derive(Debug)]\n         struct StringError(String);\n@@ -186,6 +190,7 @@ impl From<String> for Box<dyn Error + Send + Sync> {\n \n #[stable(feature = \"string_box_error\", since = \"1.6.0\")]\n impl From<String> for Box<dyn Error> {\n+    /// Converts a [`String`] into a box of dyn [`Error`].\n     fn from(str_err: String) -> Box<dyn Error> {\n         let err1: Box<dyn Error + Send + Sync> = From::from(str_err);\n         let err2: Box<dyn Error> = err1;\n@@ -195,27 +200,31 @@ impl From<String> for Box<dyn Error> {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, 'b> From<&'b str> for Box<dyn Error + Send + Sync + 'a> {\n+    /// Converts a [`str`] into a box of dyn [`Error`] + [`Send`] + [`Sync`].\n     fn from(err: &'b str) -> Box<dyn Error + Send + Sync + 'a> {\n         From::from(String::from(err))\n     }\n }\n \n #[stable(feature = \"string_box_error\", since = \"1.6.0\")]\n impl<'a> From<&'a str> for Box<dyn Error> {\n+    /// Converts a [`str`] into a box of dyn [`Error`].\n     fn from(err: &'a str) -> Box<dyn Error> {\n         From::from(String::from(err))\n     }\n }\n \n #[stable(feature = \"cow_box_error\", since = \"1.22.0\")]\n impl<'a, 'b> From<Cow<'b, str>> for Box<dyn Error + Send + Sync + 'a> {\n+    /// Converts a [`Cow`] into a box of dyn [`Error`] + [`Send`] + [`Sync`].\n     fn from(err: Cow<'b, str>) -> Box<dyn Error + Send + Sync + 'a> {\n         From::from(String::from(err))\n     }\n }\n \n #[stable(feature = \"cow_box_error\", since = \"1.22.0\")]\n impl<'a> From<Cow<'a, str>> for Box<dyn Error> {\n+    /// Converts a [`Cow`] into a box of dyn [`Error`].\n     fn from(err: Cow<'a, str>) -> Box<dyn Error> {\n         From::from(String::from(err))\n     }"}]}