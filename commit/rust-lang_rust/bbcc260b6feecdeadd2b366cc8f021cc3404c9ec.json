{"sha": "bbcc260b6feecdeadd2b366cc8f021cc3404c9ec", "node_id": "C_kwDOAAsO6NoAKGJiY2MyNjBiNmZlZWNkZWFkZDJiMzY2Y2M4ZjAyMWNjMzQwNGM5ZWM", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-11-25T10:04:17Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-11-25T10:04:17Z"}, "message": "`manual_let_else`: keep macro call on suggestion blocks", "tree": {"sha": "4d7a878921bdf0ad9703425cd3df0e8b88a231fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d7a878921bdf0ad9703425cd3df0e8b88a231fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec", "html_url": "https://github.com/rust-lang/rust/commit/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a9657139d1beca1d01486ba360fa17c43b9f58f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a9657139d1beca1d01486ba360fa17c43b9f58f", "html_url": "https://github.com/rust-lang/rust/commit/1a9657139d1beca1d01486ba360fa17c43b9f58f"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "91f0dc2a7170cbbf15d6b6921e5b810523b219e3", "filename": "clippy_lints/src/manual_let_else.rs", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbcc260b6feecdeadd2b366cc8f021cc3404c9ec/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_let_else.rs?ref=bbcc260b6feecdeadd2b366cc8f021cc3404c9ec", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::higher::IfLetOrMatch;\n use clippy_utils::msrvs::{self, Msrv};\n use clippy_utils::peel_blocks;\n-use clippy_utils::source::snippet_opt;\n+use clippy_utils::source::{snippet, snippet_with_macro_callsite};\n use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::visitors::{for_each_expr, Descend};\n use if_chain::if_chain;\n@@ -143,18 +143,22 @@ fn emit_manual_let_else(cx: &LateContext<'_>, span: Span, expr: &Expr<'_>, pat:\n             // for this to be machine applicable.\n             let app = Applicability::HasPlaceholders;\n \n-            if let Some(sn_pat) = snippet_opt(cx, pat.span) &&\n-                let Some(sn_expr) = snippet_opt(cx, expr.span) &&\n-                let Some(sn_else) = snippet_opt(cx, else_body.span)\n-            {\n-                let else_bl = if matches!(else_body.kind, ExprKind::Block(..)) {\n-                    sn_else\n-                } else {\n-                    format!(\"{{ {sn_else} }}\")\n-                };\n-                let sugg = format!(\"let {sn_pat} = {sn_expr} else {else_bl};\");\n-                diag.span_suggestion(span, \"consider writing\", sugg, app);\n-            }\n+            let snippet_fn = if span.from_expansion() {\n+                snippet\n+            } else {\n+                snippet_with_macro_callsite\n+            };\n+            let sn_pat = snippet_fn(cx, pat.span, \"\");\n+            let sn_expr = snippet_fn(cx, expr.span, \"\");\n+            let sn_else = snippet_fn(cx, else_body.span, \"\");\n+\n+            let else_bl = if matches!(else_body.kind, ExprKind::Block(..)) {\n+                sn_else.into_owned()\n+            } else {\n+                format!(\"{{ {sn_else} }}\")\n+            };\n+            let sugg = format!(\"let {sn_pat} = {sn_expr} else {else_bl};\");\n+            diag.span_suggestion(span, \"consider writing\", sugg, app);\n         },\n     );\n }"}]}