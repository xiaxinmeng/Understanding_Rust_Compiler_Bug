{"sha": "d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxY2Q0ZThkMGQzODM4NDJhY2ZlMmQ2ZWE3NWVlZDFlMGMwOTA5YWM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-11-22T05:56:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-11-22T05:56:23Z"}, "message": "Move a flaky process test out of libstd\n\nThis test ensures that everything in `env::vars()` is inherited but\nthat's not actually true because other tests may add env vars after we\nspawn the process, causing the test to be flaky! This commit moves the\ntest to a run-pass test where it can execute in isolation.\n\nAlong the way this removes a lot of the platform specificity of the\ntest, using iteslf to print the environment instead of a foreign process.", "tree": {"sha": "f3e77bc5d90d0b32714706b7a9a3b3c7ac60d3ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3e77bc5d90d0b32714706b7a9a3b3c7ac60d3ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac", "html_url": "https://github.com/rust-lang/rust/commit/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b9f19dff1347e29bf4362ab5a8fab84b43023b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b9f19dff1347e29bf4362ab5a8fab84b43023b5", "html_url": "https://github.com/rust-lang/rust/commit/0b9f19dff1347e29bf4362ab5a8fab84b43023b5"}], "stats": {"total": 61, "additions": 25, "deletions": 36}, "files": [{"sha": "2d0848252be6d9d689fa02dc84b921bf9b25a3cd", "filename": "src/libstd/process.rs", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac", "patch": "@@ -1889,42 +1889,6 @@ mod tests {\n         cmd\n     }\n \n-    #[test]\n-    fn test_inherit_env() {\n-        use env;\n-\n-        let result = env_cmd().output().unwrap();\n-        let output = String::from_utf8(result.stdout).unwrap();\n-\n-        for (ref k, ref v) in env::vars() {\n-            // Don't check android RANDOM variable which seems to change\n-            // whenever the shell runs, and our `env_cmd` is indeed running a\n-            // shell which means it'll get a different RANDOM than we probably\n-            // have.\n-            //\n-            // Also skip env vars with `-` in the name on android because, well,\n-            // I'm not sure. It appears though that the `set` command above does\n-            // not print env vars with `-` in the name, so we just skip them\n-            // here as we won't find them in the output. Note that most env vars\n-            // use `_` instead of `-`, but our build system sets a few env vars\n-            // with `-` in the name.\n-            if cfg!(target_os = \"android\") &&\n-               (*k == \"RANDOM\" || k.contains(\"-\")) {\n-                continue\n-            }\n-\n-            // Windows has hidden environment variables whose names start with\n-            // equals signs (`=`). Those do not show up in the output of the\n-            // `set` command.\n-            assert!((cfg!(windows) && k.starts_with(\"=\")) ||\n-                    k.starts_with(\"DYLD\") ||\n-                    output.contains(&format!(\"{}={}\", *k, *v)) ||\n-                    output.contains(&format!(\"{}='{}'\", *k, *v)),\n-                    \"output doesn't contain `{}={}`\\n{}\",\n-                    k, v, output);\n-        }\n-    }\n-\n     #[test]\n     fn test_override_env() {\n         use env;"}, {"sha": "856d3a5f72d34f21b206e8ba0b89d4a4a766b13a", "filename": "src/test/run-pass/inherit-env.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac/src%2Ftest%2Frun-pass%2Finherit-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac/src%2Ftest%2Frun-pass%2Finherit-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finherit-env.rs?ref=d1cd4e8d0d383842acfe2d6ea75eed1e0c0909ac", "patch": "@@ -0,0 +1,25 @@\n+// ignore-emscripten\n+// ignore-wasm32\n+\n+use std::env;\n+use std::process::Command;\n+\n+fn main() {\n+    if env::args().nth(1).map(|s| s == \"print\").unwrap_or(false) {\n+        for (k, v) in env::vars() {\n+            println!(\"{}={}\", k, v);\n+        }\n+        return\n+    }\n+\n+    let me = env::current_exe().unwrap();\n+    let result = Command::new(me).arg(\"print\").output().unwrap();\n+    let output = String::from_utf8(result.stdout).unwrap();\n+\n+    for (k, v) in env::vars() {\n+        assert!(output.contains(&format!(\"{}={}\", k, v)),\n+                \"output doesn't contain `{}={}`\\n{}\",\n+                k, v, output);\n+    }\n+}\n+"}]}