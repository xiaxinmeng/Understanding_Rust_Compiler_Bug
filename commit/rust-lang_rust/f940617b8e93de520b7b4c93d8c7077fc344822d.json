{"sha": "f940617b8e93de520b7b4c93d8c7077fc344822d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NDA2MTdiOGU5M2RlNTIwYjdiNGM5M2Q4YzcwNzdmYzM0NDgyMmQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-15T23:54:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-15T23:54:58Z"}, "message": "Rollup merge of #62103 - RalfJung:debug-assert, r=alexcrichton\n\nAdd debug assertions to write_bytes and copy*\n\nLooks like @nitnelave  went MIA in https://github.com/rust-lang/rust/pull/58783, so I am re-submitting their PR, tweaked just a bit. I took care to preserve commit authorship.\n\nCc https://github.com/rust-lang/rust/issues/53871", "tree": {"sha": "cdde6e7d9f81aed19e16d309087f3b620990c085", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdde6e7d9f81aed19e16d309087f3b620990c085"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f940617b8e93de520b7b4c93d8c7077fc344822d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdLRJSCRBK7hj4Ov3rIwAAdHIIABR8JDUoI70fb8VXDZUhhjYq\ng9Q1LDaWvACKNQsLcMhMsRwgfuVyR1MfhlorZXIICEYU6oObnPWzvYap0tOhUJJp\neUzOMLd4LKZhmKKULlC73CuoVY6pIaXQ+DBFfMRH3XFpWntZk/NcJkbxKrdKq5nO\n4wlpHqUxizjZL0T3DI/3EGnzBGY0Uubs2zyy2sPyHZ8t5OeeGUK4vd3vEQtdzkng\nZWruxhf+hhlCtlKPYTRvThlyX0DtL2oP+ENc1a/NV+GvpIdotcOmdWat76bZY8VQ\nbsvFOEJQHct/F7ogZzpNbT9jOmbEkIEVozIALTTrP/AwdrGDjspK92Uzo168orw=\n=PHxU\n-----END PGP SIGNATURE-----\n", "payload": "tree cdde6e7d9f81aed19e16d309087f3b620990c085\nparent 4b65a86ebace8600c8e269e8bfe3365cdc460e68\nparent 85d76a1b481dfabf49a1dead04996705f0d489d1\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1563234898 -0400\ncommitter GitHub <noreply@github.com> 1563234898 -0400\n\nRollup merge of #62103 - RalfJung:debug-assert, r=alexcrichton\n\nAdd debug assertions to write_bytes and copy*\n\nLooks like @nitnelave  went MIA in https://github.com/rust-lang/rust/pull/58783, so I am re-submitting their PR, tweaked just a bit. I took care to preserve commit authorship.\n\nCc https://github.com/rust-lang/rust/issues/53871\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f940617b8e93de520b7b4c93d8c7077fc344822d", "html_url": "https://github.com/rust-lang/rust/commit/f940617b8e93de520b7b4c93d8c7077fc344822d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f940617b8e93de520b7b4c93d8c7077fc344822d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b65a86ebace8600c8e269e8bfe3365cdc460e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b65a86ebace8600c8e269e8bfe3365cdc460e68", "html_url": "https://github.com/rust-lang/rust/commit/4b65a86ebace8600c8e269e8bfe3365cdc460e68"}, {"sha": "85d76a1b481dfabf49a1dead04996705f0d489d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/85d76a1b481dfabf49a1dead04996705f0d489d1", "html_url": "https://github.com/rust-lang/rust/commit/85d76a1b481dfabf49a1dead04996705f0d489d1"}], "stats": {"total": 80, "additions": 57, "deletions": 23}, "files": [{"sha": "70337f79d500d0123619f513dfc53a0844c0f046", "filename": "Cargo.lock", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f940617b8e93de520b7b4c93d8c7077fc344822d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f940617b8e93de520b7b4c93d8c7077fc344822d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f940617b8e93de520b7b4c93d8c7077fc344822d", "patch": "@@ -25,7 +25,7 @@ dependencies = [\n name = \"alloc\"\n version = \"0.0.0\"\n dependencies = [\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n  \"rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_xorshift 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -131,7 +131,7 @@ dependencies = [\n  \"autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"backtrace-sys 0.1.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n@@ -143,7 +143,7 @@ version = \"0.1.27\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n@@ -373,7 +373,7 @@ name = \"cfg-if\"\n version = \"0.1.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n \n@@ -502,7 +502,7 @@ dependencies = [\n \n [[package]]\n name = \"compiler_builtins\"\n-version = \"0.1.16\"\n+version = \"0.1.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cc 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -834,7 +834,7 @@ name = \"dlmalloc\"\n version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n@@ -1008,7 +1008,7 @@ name = \"fortanix-sgx-abi\"\n version = \"0.3.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n \n@@ -1199,7 +1199,7 @@ name = \"hashbrown\"\n version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-alloc 1.0.0\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n@@ -2066,7 +2066,7 @@ dependencies = [\n name = \"panic_abort\"\n version = \"0.0.0\"\n dependencies = [\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n  \"libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -2077,7 +2077,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"alloc 0.0.0\",\n  \"cfg-if 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n  \"libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unwind 0.0.0\",\n@@ -2263,7 +2263,7 @@ name = \"profiler_builtins\"\n version = \"0.0.0\"\n dependencies = [\n  \"cc 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -2835,7 +2835,7 @@ name = \"rustc-demangle\"\n version = \"0.1.15\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-std-workspace-core 1.0.0\",\n ]\n \n@@ -2941,7 +2941,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -3160,7 +3160,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -3223,7 +3223,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -3341,7 +3341,7 @@ dependencies = [\n  \"alloc 0.0.0\",\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n \n@@ -3648,7 +3648,7 @@ dependencies = [\n  \"backtrace 0.3.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cc 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n  \"dlmalloc 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fortanix-sgx-abi 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -4309,7 +4309,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"cc 1.0.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cfg-if 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n  \"libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -4527,7 +4527,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum colored 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b0aa3473e85a3161b59845d6096b289bb577874cafeaf75ea1b1beaa6572c7fc\"\n \"checksum commoncrypto 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d056a8586ba25a1e4d61cb090900e495952c7886786fc55f909ab2f819b69007\"\n \"checksum commoncrypto-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1fed34f46747aa73dfaa578069fd8279d2818ade2b55f38f22a9401c7f4083e2\"\n-\"checksum compiler_builtins 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e79ed19793c99771b386d76e08c3419409bb3d418b81a8b8afc73524247461cf\"\n+\"checksum compiler_builtins 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad9b4731b9e701aefe9e6bd1e9173f30526661508f9aaadaa5caec25ddf95585\"\n \"checksum compiletest_rs 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f40ecc9332b68270998995c00f8051ee856121764a0d3230e64c9efd059d27b6\"\n \"checksum constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ff012e225ce166d4422e0e78419d901719760f62ae2b7969ca6b564d1b54a9e\"\n \"checksum core-foundation 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e2640d6d0bf22e82bed1b73c6aef8d5dd31e5abe6666c57e6d45e2649f4f887\""}, {"sha": "56e45c3695f61830594cbaaba62ea3076b27381f", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=f940617b8e93de520b7b4c93d8c7077fc344822d", "patch": "@@ -36,6 +36,8 @@\n             issue = \"0\")]\n #![allow(missing_docs)]\n \n+use crate::mem;\n+\n #[stable(feature = \"drop_in_place\", since = \"1.8.0\")]\n #[rustc_deprecated(reason = \"no longer an intrinsic - use `ptr::drop_in_place` directly\",\n                    since = \"1.18.0\")]\n@@ -1323,6 +1325,26 @@ extern \"rust-intrinsic\" {\n // (`transmute` also falls into this category, but it cannot be wrapped due to the\n // check that `T` and `U` have the same size.)\n \n+/// Checks whether `ptr` is properly aligned with respect to\n+/// `align_of::<T>()`.\n+pub(crate) fn is_aligned_and_not_null<T>(ptr: *const T) -> bool {\n+    !ptr.is_null() && ptr as usize % mem::align_of::<T>() == 0\n+}\n+\n+/// Checks whether the regions of memory starting at `src` and `dst` of size\n+/// `count * size_of::<T>()` overlap.\n+fn overlaps<T>(src: *const T, dst: *const T, count: usize) -> bool {\n+    let src_usize = src as usize;\n+    let dst_usize = dst as usize;\n+    let size = mem::size_of::<T>().checked_mul(count).unwrap();\n+    let diff = if src_usize > dst_usize {\n+        src_usize - dst_usize\n+    } else {\n+        dst_usize - src_usize\n+    };\n+    size > diff\n+}\n+\n /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n /// and destination must *not* overlap.\n ///\n@@ -1412,7 +1434,11 @@ pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n     extern \"rust-intrinsic\" {\n         fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n     }\n-    copy_nonoverlapping(src, dst, count);\n+\n+    debug_assert!(is_aligned_and_not_null(src), \"attempt to copy from unaligned or null pointer\");\n+    debug_assert!(is_aligned_and_not_null(dst), \"attempt to copy to unaligned or null pointer\");\n+    debug_assert!(!overlaps(src, dst, count), \"attempt to copy to overlapping memory\");\n+    copy_nonoverlapping(src, dst, count)\n }\n \n /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n@@ -1472,6 +1498,9 @@ pub unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n     extern \"rust-intrinsic\" {\n         fn copy<T>(src: *const T, dst: *mut T, count: usize);\n     }\n+\n+    debug_assert!(is_aligned_and_not_null(src), \"attempt to copy from unaligned or null pointer\");\n+    debug_assert!(is_aligned_and_not_null(dst), \"attempt to copy to unaligned or null pointer\");\n     copy(src, dst, count)\n }\n \n@@ -1553,5 +1582,7 @@ pub unsafe fn write_bytes<T>(dst: *mut T, val: u8, count: usize) {\n     extern \"rust-intrinsic\" {\n         fn write_bytes<T>(dst: *mut T, val: u8, count: usize);\n     }\n+\n+    debug_assert!(is_aligned_and_not_null(dst), \"attempt to write to unaligned or null pointer\");\n     write_bytes(dst, val, count)\n }"}, {"sha": "1397a52fbbefc4e64f0782c14d4f8e6b21bf5800", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=f940617b8e93de520b7b4c93d8c7077fc344822d", "patch": "@@ -25,7 +25,7 @@\n use crate::cmp::Ordering::{self, Less, Equal, Greater};\n use crate::cmp;\n use crate::fmt;\n-use crate::intrinsics::{assume, exact_div, unchecked_sub};\n+use crate::intrinsics::{assume, exact_div, unchecked_sub, is_aligned_and_not_null};\n use crate::isize;\n use crate::iter::*;\n use crate::ops::{FnMut, Try, self};\n@@ -5228,7 +5228,7 @@ unsafe impl<'a, T> TrustedRandomAccess for RChunksExactMut<'a, T> {\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn from_raw_parts<'a, T>(data: *const T, len: usize) -> &'a [T] {\n-    debug_assert!(data as usize % mem::align_of::<T>() == 0, \"attempt to create unaligned slice\");\n+    debug_assert!(is_aligned_and_not_null(data), \"attempt to create unaligned or null slice\");\n     debug_assert!(mem::size_of::<T>().saturating_mul(len) <= isize::MAX as usize,\n                   \"attempt to create slice covering half the address space\");\n     &*ptr::slice_from_raw_parts(data, len)\n@@ -5249,7 +5249,7 @@ pub unsafe fn from_raw_parts<'a, T>(data: *const T, len: usize) -> &'a [T] {\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn from_raw_parts_mut<'a, T>(data: *mut T, len: usize) -> &'a mut [T] {\n-    debug_assert!(data as usize % mem::align_of::<T>() == 0, \"attempt to create unaligned slice\");\n+    debug_assert!(is_aligned_and_not_null(data), \"attempt to create unaligned or null slice\");\n     debug_assert!(mem::size_of::<T>().saturating_mul(len) <= isize::MAX as usize,\n                   \"attempt to create slice covering half the address space\");\n     &mut *ptr::slice_from_raw_parts_mut(data, len)"}, {"sha": "7f99ca724cf7380d102afbd06bfebbb16c8e736e", "filename": "src/test/codegen/issue-45222.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Ftest%2Fcodegen%2Fissue-45222.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Ftest%2Fcodegen%2Fissue-45222.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-45222.rs?ref=f940617b8e93de520b7b4c93d8c7077fc344822d", "patch": "@@ -1,4 +1,5 @@\n // compile-flags: -O\n+// ignore-debug: the debug assertions get in the way\n \n #![crate_type = \"lib\"]\n "}, {"sha": "c79542767774a3d7557e261868f5d65dde2315c5", "filename": "src/test/codegen/issue-45466.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Ftest%2Fcodegen%2Fissue-45466.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Ftest%2Fcodegen%2Fissue-45466.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-45466.rs?ref=f940617b8e93de520b7b4c93d8c7077fc344822d", "patch": "@@ -1,4 +1,5 @@\n // compile-flags: -O\n+// ignore-debug: the debug assertions get in the way\n \n #![crate_type=\"rlib\"]\n "}, {"sha": "6205e6a6559c9b6fc8b982dae24f0e34d77009aa", "filename": "src/test/codegen/swap-small-types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Ftest%2Fcodegen%2Fswap-small-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f940617b8e93de520b7b4c93d8c7077fc344822d/src%2Ftest%2Fcodegen%2Fswap-small-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fswap-small-types.rs?ref=f940617b8e93de520b7b4c93d8c7077fc344822d", "patch": "@@ -1,5 +1,6 @@\n // compile-flags: -O\n // only-x86_64\n+// ignore-debug: the debug assertions get in the way\n \n #![crate_type = \"lib\"]\n "}]}