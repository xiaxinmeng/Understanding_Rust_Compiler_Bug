{"sha": "7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNmM1NGM0NmU2YWMyOGQ4MmY5NDBmMWQxYmY4ZDBhNWZkN2U4MjA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-10T15:37:33Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-12-19T07:31:52Z"}, "message": "Fix compilation on linux", "tree": {"sha": "e039c89917827b6d419ea53a697c18bd8706f298", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e039c89917827b6d419ea53a697c18bd8706f298"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820", "html_url": "https://github.com/rust-lang/rust/commit/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9644d60cc449461f3d7289099654d1f6d227244f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9644d60cc449461f3d7289099654d1f6d227244f", "html_url": "https://github.com/rust-lang/rust/commit/9644d60cc449461f3d7289099654d1f6d227244f"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "9ec3128302c110f44b0708a0c1d754c62996e697", "filename": "src/libstd/os.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820", "patch": "@@ -57,7 +57,6 @@ use sync::atomic::{AtomicInt, INIT_ATOMIC_INT, SeqCst};\n use vec::Vec;\n \n #[cfg(unix)] use c_str::ToCStr;\n-#[cfg(unix)] use libc::c_char;\n \n #[cfg(unix)]\n pub use sys::ext as unix;"}, {"sha": "3a4705f58b49c9455c8f82eada4770ebfdfcfe9a", "filename": "src/libstd/rt/args.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820/src%2Flibstd%2Frt%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820/src%2Flibstd%2Frt%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fargs.rs?ref=7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820", "patch": "@@ -51,10 +51,10 @@ mod imp {\n     use string::String;\n     use mem;\n \n-    use sync::mutex::{StaticMutex, MUTEX_INIT};\n+    use sync::{StaticMutex, MUTEX_INIT};\n \n     static mut GLOBAL_ARGS_PTR: uint = 0;\n-    static LOCK: NativeMutex = MUTEX_INIT;\n+    static LOCK: StaticMutex = MUTEX_INIT;\n \n     pub unsafe fn init(argc: int, argv: *const *const u8) {\n         let args = load_argc_and_argv(argc, argv);\n@@ -67,7 +67,7 @@ mod imp {\n     }\n \n     pub fn take() -> Option<Vec<Vec<u8>>> {\n-        let guard = LOCK.lock();\n+        let _guard = LOCK.lock();\n         unsafe {\n             let ptr = get_global_ptr();\n             let val = mem::replace(&mut *ptr, None);\n@@ -76,7 +76,7 @@ mod imp {\n     }\n \n     pub fn put(args: Vec<Vec<u8>>) {\n-        let guard = LOCK.lock();\n+        let _guard = LOCK.lock();\n         unsafe {\n             let ptr = get_global_ptr();\n             rtassert!((*ptr).is_none());\n@@ -85,7 +85,7 @@ mod imp {\n     }\n \n     pub fn clone() -> Option<Vec<Vec<u8>>> {\n-        let guard = LOCK.lock();\n+        let _guard = LOCK.lock();\n         unsafe {\n             let ptr = get_global_ptr();\n             (*ptr).as_ref().map(|s: &Box<Vec<Vec<u8>>>| (**s).clone())\n@@ -104,8 +104,8 @@ mod imp {\n \n     #[cfg(test)]\n     mod tests {\n-        use std::prelude::*;\n-        use std::finally::Finally;\n+        use prelude::*;\n+        use finally::Finally;\n \n         use super::*;\n "}, {"sha": "d98f935076fdd42f46d7c880aea5e88ae32a9c04", "filename": "src/libstd/sys/unix/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs?ref=7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820", "patch": "@@ -241,7 +241,7 @@ fn print(w: &mut Writer, idx: int, addr: *mut libc::c_void) -> IoResult<()> {\n \n #[cfg(not(any(target_os = \"macos\", target_os = \"ios\")))]\n fn print(w: &mut Writer, idx: int, addr: *mut libc::c_void) -> IoResult<()> {\n-    use iter::Iterator;\n+    use iter::{Iterator, IteratorExt};\n     use os;\n     use path::GenericPath;\n     use ptr::RawPtr;"}]}