{"sha": "918dd3488f450383c5ce27f0a27f45fa3fc9d0d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxOGRkMzQ4OGY0NTAzODNjNWNlMjdmMGEyN2Y0NWZhM2ZjOWQwZDY=", "commit": {"author": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-01-22T18:54:45Z"}, "committer": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-01-22T18:54:45Z"}, "message": "Attempt fix for assertion on Windows, and add extra output for debugging.", "tree": {"sha": "e33144b394d53622caf3d685312066ec2a488b05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e33144b394d53622caf3d685312066ec2a488b05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/918dd3488f450383c5ce27f0a27f45fa3fc9d0d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/918dd3488f450383c5ce27f0a27f45fa3fc9d0d6", "html_url": "https://github.com/rust-lang/rust/commit/918dd3488f450383c5ce27f0a27f45fa3fc9d0d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/918dd3488f450383c5ce27f0a27f45fa3fc9d0d6/comments", "author": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06d401948ba7451d8ed10b4a58e1e2d08c0094f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/06d401948ba7451d8ed10b4a58e1e2d08c0094f7", "html_url": "https://github.com/rust-lang/rust/commit/06d401948ba7451d8ed10b4a58e1e2d08c0094f7"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "4b345f639e4cb1f629f2a0b4919d1d6ed684f029", "filename": "src/test/run-pass/issue-15149.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/918dd3488f450383c5ce27f0a27f45fa3fc9d0d6/src%2Ftest%2Frun-pass%2Fissue-15149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/918dd3488f450383c5ce27f0a27f45fa3fc9d0d6/src%2Ftest%2Frun-pass%2Fissue-15149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15149.rs?ref=918dd3488f450383c5ce27f0a27f45fa3fc9d0d6", "patch": "@@ -8,14 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::path::BytesContainer;\n use std::io::{Command, fs, USER_RWX};\n use std::os;\n \n fn main() {\n     // If we're the child, make sure we were invoked correctly\n     let args = os::args();\n     if args.len() > 1 && args[1].as_slice() == \"child\" {\n-        return assert_eq!(args[0].as_slice(), \"mytest\");\n+        return assert_eq!(args[0],\n+                          format!(\"mytest{}\", os::consts::EXE_SUFFIX));\n     }\n \n     test();\n@@ -38,7 +40,12 @@ fn test() {\n     path.push(child_dir.clone());\n     let path = os::join_paths(path.as_slice()).unwrap();\n \n-    assert!(Command::new(\"mytest\").env(\"PATH\", path.as_slice())\n-                                  .arg(\"child\")\n-                                  .status().unwrap().success());\n+    let child_output = Command::new(\"mytest\").env(\"PATH\", path.as_slice())\n+                                             .arg(\"child\")\n+                                             .output().unwrap();\n+\n+    assert!(child_output.status.success(),\n+            format!(\"child assertion failed\\n child stdout:\\n {}\\n child stderr:\\n {}\",\n+                    child_output.output.container_as_str().unwrap(),\n+                    child_output.error.container_as_str().unwrap()));\n }"}]}