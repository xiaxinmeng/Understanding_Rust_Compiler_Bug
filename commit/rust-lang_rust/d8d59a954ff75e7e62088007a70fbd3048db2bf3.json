{"sha": "d8d59a954ff75e7e62088007a70fbd3048db2bf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZDU5YTk1NGZmNzVlN2U2MjA4ODAwN2E3MGZiZDMwNDhkYjJiZjM=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-03-04T09:46:55Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-04-03T12:48:07Z"}, "message": "Address Alex\u2019s comments", "tree": {"sha": "c1376cac52c88f75fc65343d34b5dce0e3c878b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1376cac52c88f75fc65343d34b5dce0e3c878b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8d59a954ff75e7e62088007a70fbd3048db2bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d59a954ff75e7e62088007a70fbd3048db2bf3", "html_url": "https://github.com/rust-lang/rust/commit/d8d59a954ff75e7e62088007a70fbd3048db2bf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8d59a954ff75e7e62088007a70fbd3048db2bf3/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8943709221f745cdd58d9a19e9fd280ae53091c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8943709221f745cdd58d9a19e9fd280ae53091c6", "html_url": "https://github.com/rust-lang/rust/commit/8943709221f745cdd58d9a19e9fd280ae53091c6"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "0f87af65c7517f9f93a855e07a8aa5bcb5b20bc6", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d8d59a954ff75e7e62088007a70fbd3048db2bf3/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d59a954ff75e7e62088007a70fbd3048db2bf3/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=d8d59a954ff75e7e62088007a70fbd3048db2bf3", "patch": "@@ -2127,28 +2127,27 @@ pub fn is_entry_fn(sess: &Session, node_id: ast::NodeId) -> bool {\n /// Create the `main` function which will initialise the rust runtime and call users\u2019 main\n /// function.\n pub fn create_entry_wrapper(ccx: &CrateContext,\n-                           _sp: Span,\n+                           sp: Span,\n                            main_llfn: ValueRef) {\n     let et = ccx.sess().entry_type.get().unwrap();\n     match et {\n         config::EntryMain => {\n-            create_entry_fn(ccx, _sp, main_llfn, true);\n+            create_entry_fn(ccx, sp, main_llfn, true);\n         }\n-        config::EntryStart => create_entry_fn(ccx, _sp, main_llfn, false),\n+        config::EntryStart => create_entry_fn(ccx, sp, main_llfn, false),\n         config::EntryNone => {}    // Do nothing.\n     }\n \n-    #[inline(never)]\n     fn create_entry_fn(ccx: &CrateContext,\n-                       _sp: Span,\n+                       sp: Span,\n                        rust_main: ValueRef,\n                        use_start_lang_item: bool) {\n         let llfty = Type::func(&[ccx.int_type(), Type::i8p(ccx).ptr_to()],\n                                &ccx.int_type());\n \n         let llfn = declare::define_cfn(ccx, \"main\", llfty,\n                                        ty::mk_nil(ccx.tcx())).unwrap_or_else(||{\n-            ccx.sess().span_err(_sp, \"entry symbol `main` defined multiple times\");\n+            ccx.sess().span_err(sp, \"entry symbol `main` defined multiple times\");\n             // FIXME: We should be smart and show a better diagnostic here.\n             ccx.sess().help(\"did you use #[no_mangle] on `fn main`? Use #[start] instead\");\n             ccx.sess().abort_if_errors();"}, {"sha": "9e7449f670f0fe398f2c876e383a86186281b047", "filename": "src/librustc_trans/trans/declare.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8d59a954ff75e7e62088007a70fbd3048db2bf3/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d59a954ff75e7e62088007a70fbd3048db2bf3/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs?ref=d8d59a954ff75e7e62088007a70fbd3048db2bf3", "patch": "@@ -19,8 +19,6 @@\n //! ValueRef they return.\n //! * Use define_* family of methods when you might be defining the ValueRef.\n //! * When in doubt, define.\n-#![allow(dead_code)]\n-\n use llvm::{self, ValueRef};\n use middle::ty::{self, ClosureTyper};\n use syntax::abi;"}]}