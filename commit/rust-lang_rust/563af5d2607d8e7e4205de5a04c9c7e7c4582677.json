{"sha": "563af5d2607d8e7e4205de5a04c9c7e7c4582677", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2M2FmNWQyNjA3ZDhlN2U0MjA1ZGU1YTA0YzljN2U3YzQ1ODI2Nzc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-13T09:09:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-13T09:09:41Z"}, "message": "Rollup merge of #45892 - redox-os:is_absolute_fix, r=alexcrichton\n\nRedox: Return true from Path::is_absolute if a Path contains root or a scheme\n\nIn Redox, different subsystems have different filesystem paths. However, the majority of applications using the `Path::is_absolute` function really only want to know if a path is absolute from the perspective of the scheme it is currently running in, usually `file:`. This makes both `file:/` and `/` return `true` from `Path::is_absolute`, meaning that most code does not have to check if it is running on Redox.\n\nCode that wants to know if a path contains a scheme can implement such a check on its own.\n\nRelated to https://github.com/rust-lang/rust/pull/45893", "tree": {"sha": "88b9c665319f2b6904c36e5abea6192ad0e25401", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b9c665319f2b6904c36e5abea6192ad0e25401"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/563af5d2607d8e7e4205de5a04c9c7e7c4582677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/563af5d2607d8e7e4205de5a04c9c7e7c4582677", "html_url": "https://github.com/rust-lang/rust/commit/563af5d2607d8e7e4205de5a04c9c7e7c4582677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/563af5d2607d8e7e4205de5a04c9c7e7c4582677/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3ca816d362c3613055aa1e44f1a0caac111db15", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ca816d362c3613055aa1e44f1a0caac111db15", "html_url": "https://github.com/rust-lang/rust/commit/e3ca816d362c3613055aa1e44f1a0caac111db15"}, {"sha": "ef76ebf28c70d7c68b482295b65be56aaf10588a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef76ebf28c70d7c68b482295b65be56aaf10588a", "html_url": "https://github.com/rust-lang/rust/commit/ef76ebf28c70d7c68b482295b65be56aaf10588a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "69922470cff4a7072a69d8b5a3cf8bcf04fa9d01", "filename": "src/libstd/path.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/563af5d2607d8e7e4205de5a04c9c7e7c4582677/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/563af5d2607d8e7e4205de5a04c9c7e7c4582677/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=563af5d2607d8e7e4205de5a04c9c7e7c4582677", "patch": "@@ -1690,11 +1690,11 @@ impl Path {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[allow(deprecated)]\n     pub fn is_absolute(&self) -> bool {\n-        if !cfg!(target_os = \"redox\") {\n-            self.has_root() && (cfg!(unix) || self.prefix().is_some())\n-        } else {\n+        if cfg!(target_os = \"redox\") {\n             // FIXME: Allow Redox prefixes\n-            has_redox_scheme(self.as_u8_slice())\n+            self.has_root() || has_redox_scheme(self.as_u8_slice())\n+        } else {\n+            self.has_root() && (cfg!(unix) || self.prefix().is_some())\n         }\n     }\n "}]}