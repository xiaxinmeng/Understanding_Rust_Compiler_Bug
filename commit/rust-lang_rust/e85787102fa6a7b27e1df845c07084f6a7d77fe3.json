{"sha": "e85787102fa6a7b27e1df845c07084f6a7d77fe3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NTc4NzEwMmZhNmE3YjI3ZTFkZjg0NWMwNzA4NGY2YTdkNzdmZTM=", "commit": {"author": {"name": "Jared Roesch", "email": "roeschinc@gmail.com", "date": "2015-07-13T04:02:16Z"}, "committer": {"name": "Jared Roesch", "email": "jroesch@MacBook.home", "date": "2015-07-26T02:57:58Z"}, "message": "Clean up test cases", "tree": {"sha": "6f31963bfacf47c43a4bd2b970281961f856640f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f31963bfacf47c43a4bd2b970281961f856640f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e85787102fa6a7b27e1df845c07084f6a7d77fe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e85787102fa6a7b27e1df845c07084f6a7d77fe3", "html_url": "https://github.com/rust-lang/rust/commit/e85787102fa6a7b27e1df845c07084f6a7d77fe3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e85787102fa6a7b27e1df845c07084f6a7d77fe3/comments", "author": {"login": "jroesch", "id": 696509, "node_id": "MDQ6VXNlcjY5NjUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/696509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jroesch", "html_url": "https://github.com/jroesch", "followers_url": "https://api.github.com/users/jroesch/followers", "following_url": "https://api.github.com/users/jroesch/following{/other_user}", "gists_url": "https://api.github.com/users/jroesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jroesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jroesch/subscriptions", "organizations_url": "https://api.github.com/users/jroesch/orgs", "repos_url": "https://api.github.com/users/jroesch/repos", "events_url": "https://api.github.com/users/jroesch/events{/privacy}", "received_events_url": "https://api.github.com/users/jroesch/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01dcb3bdf0fd779208c915d704ae634beb5c4448", "url": "https://api.github.com/repos/rust-lang/rust/commits/01dcb3bdf0fd779208c915d704ae634beb5c4448", "html_url": "https://github.com/rust-lang/rust/commit/01dcb3bdf0fd779208c915d704ae634beb5c4448"}], "stats": {"total": 101, "additions": 67, "deletions": 34}, "files": [{"sha": "d93848f408caf8c6ccc24f228bd78477c9d9ffb4", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=e85787102fa6a7b27e1df845c07084f6a7d77fe3", "patch": "@@ -1141,7 +1141,11 @@ impl<'a, 'tcx> AstConv<'tcx> for FnCtxt<'a, 'tcx> {\n \n     fn ty_infer(&self, ty_param_def: Option<ty::TypeParameterDef<'tcx>>, span: Span) -> Ty<'tcx> {\n         let default = ty_param_def.and_then(|t|\n-            t.default.map(|ty| type_variable::Default { ty: ty, origin_span: span, definition_span: span }));\n+            t.default.map(|ty| type_variable::Default {\n+                ty: ty,\n+                origin_span: span,\n+                definition_span: span\n+        }));\n         self.infcx().next_ty_var_with_default(default)\n     }\n "}, {"sha": "fe8c1063c96dc7dbba011088ddfe74dee9ecb667", "filename": "src/test/run-pass/default_ty_param_default_dependent_associated_type.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Ftest%2Frun-pass%2Fdefault_ty_param_default_dependent_associated_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Ftest%2Frun-pass%2Fdefault_ty_param_default_dependent_associated_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault_ty_param_default_dependent_associated_type.rs?ref=e85787102fa6a7b27e1df845c07084f6a7d77fe3", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+use std::marker::PhantomData;\n+\n+trait Id {\n+    type This;\n+}\n+\n+impl<A> Id for A {\n+    type This = A;\n+}\n+\n+struct Foo<X: Default = usize, Y = <X as Id>::This> {\n+    data: PhantomData<(X, Y)>\n+}\n+\n+impl<X: Default, Y> Foo<X, Y> {\n+    fn new() -> Foo<X, Y> {\n+        Foo { data: PhantomData }\n+    }\n+}\n+\n+fn main() {\n+    let foo = Foo::new();\n+}"}, {"sha": "9322c9ad165ae5362fb62a4424791094628286e3", "filename": "src/test/run-pass/default_ty_param_dependent_defaults.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Ftest%2Frun-pass%2Fdefault_ty_param_dependent_defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Ftest%2Frun-pass%2Fdefault_ty_param_dependent_defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault_ty_param_dependent_defaults.rs?ref=e85787102fa6a7b27e1df845c07084f6a7d77fe3", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n+\n+use std::marker::PhantomData;\n+\n+struct Foo<T,U=T> { data: PhantomData<(T, U)> }\n+\n+fn main() {\n+    let foo = Foo { data: PhantomData };\n+}"}, {"sha": "0a8543c03b139b3f2cf457a1efb21f6857c4c413", "filename": "src/test/run-pass/default_ty_param_struct_and_type_alias.rs", "status": "renamed", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Ftest%2Frun-pass%2Fdefault_ty_param_struct_and_type_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85787102fa6a7b27e1df845c07084f6a7d77fe3/src%2Ftest%2Frun-pass%2Fdefault_ty_param_struct_and_type_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault_ty_param_struct_and_type_alias.rs?ref=e85787102fa6a7b27e1df845c07084f6a7d77fe3", "patch": "@@ -1,7 +1,15 @@\n-use std::marker::PhantomData;\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+//\n \n-trait TypeEq<A> {}\n-impl<A> TypeEq<A> for A {}\n+use std::marker::PhantomData;\n \n struct DeterministicHasher;\n struct RandomHasher;", "previous_filename": "src/test/run-pass/default_type_parameter_struct_and_type_alias.rs"}, {"sha": "402399f14b9363034a9f2773e2dd2f1ed6fa9ab9", "filename": "src/test/run-pass/default_type_parameter_default_dependent_associated_type.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/01dcb3bdf0fd779208c915d704ae634beb5c4448/src%2Ftest%2Frun-pass%2Fdefault_type_parameter_default_dependent_associated_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01dcb3bdf0fd779208c915d704ae634beb5c4448/src%2Ftest%2Frun-pass%2Fdefault_type_parameter_default_dependent_associated_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault_type_parameter_default_dependent_associated_type.rs?ref=01dcb3bdf0fd779208c915d704ae634beb5c4448", "patch": "@@ -1,23 +0,0 @@\n-use std::marker::PhantomData;\n-\n-trait Id {\n-    type This;\n-}\n-\n-impl<A> Id for A {\n-    type This = A;\n-}\n-\n-struct Foo<X: Default = usize, Y = <X as Id>::This> {\n-    data: PhantomData<(X, Y)>\n-}\n-\n-impl<X: Default, Y> Foo<X, Y> {\n-    fn new() -> Foo<X, Y> {\n-        Foo { data: PhantomData }\n-    }\n-}\n-\n-fn main() {\n-    let foo = Foo::new();\n-}"}, {"sha": "4f492bed9d4f2b1cdeba9806df6cd84265c80f0d", "filename": "src/test/run-pass/default_type_parameter_dependent_defaults.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/01dcb3bdf0fd779208c915d704ae634beb5c4448/src%2Ftest%2Frun-pass%2Fdefault_type_parameter_dependent_defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01dcb3bdf0fd779208c915d704ae634beb5c4448/src%2Ftest%2Frun-pass%2Fdefault_type_parameter_dependent_defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault_type_parameter_dependent_defaults.rs?ref=01dcb3bdf0fd779208c915d704ae634beb5c4448", "patch": "@@ -1,7 +0,0 @@\n-use std::marker::PhantomData;\n-\n-struct Foo<T,U=T> { data: PhantomData<(T, U)> }\n-\n-fn main() {\n-    let foo = Foo { data: PhantomData };\n-}"}]}