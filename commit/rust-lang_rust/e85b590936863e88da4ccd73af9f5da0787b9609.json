{"sha": "e85b590936863e88da4ccd73af9f5da0787b9609", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NWI1OTA5MzY4NjNlODhkYTRjY2Q3M2FmOWY1ZGEwNzg3Yjk2MDk=", "commit": {"author": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-07-17T17:40:01Z"}, "committer": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-07-17T17:40:01Z"}, "message": "Fix bug in lint", "tree": {"sha": "e53195f885581b55632614ec9b0ccf65d360d7a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e53195f885581b55632614ec9b0ccf65d360d7a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e85b590936863e88da4ccd73af9f5da0787b9609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e85b590936863e88da4ccd73af9f5da0787b9609", "html_url": "https://github.com/rust-lang/rust/commit/e85b590936863e88da4ccd73af9f5da0787b9609", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e85b590936863e88da4ccd73af9f5da0787b9609/comments", "author": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c5d4a41459abeb40eea734efaf08657602815cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c5d4a41459abeb40eea734efaf08657602815cb", "html_url": "https://github.com/rust-lang/rust/commit/7c5d4a41459abeb40eea734efaf08657602815cb"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "fe00a48adef0e1399c087398a6ca629374d61ea0", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e85b590936863e88da4ccd73af9f5da0787b9609/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85b590936863e88da4ccd73af9f5da0787b9609/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=e85b590936863e88da4ccd73af9f5da0787b9609", "patch": "@@ -1512,6 +1512,10 @@ mod redundant_pattern_match {\n             }\n         }\n \n+        let result_expr = match &op.kind {\n+            ExprKind::AddrOf(_, _, borrowed) => borrowed,\n+            _ => op,\n+        };\n         span_lint_and_then(\n             cx,\n             REDUNDANT_PATTERN_MATCHING,\n@@ -1524,7 +1528,7 @@ mod redundant_pattern_match {\n \n                 // while let ... = ... { ... }\n                 //                 ^^^\n-                let op_span = op.span.source_callsite();\n+                let op_span = result_expr.span.source_callsite();\n \n                 // while let ... = ... { ... }\n                 // ^^^^^^^^^^^^^^^^^^^\n@@ -1589,17 +1593,21 @@ mod redundant_pattern_match {\n             };\n \n             if let Some(good_method) = found_good_method {\n+                let span = expr.span.to(op.span);\n+                let result_expr = match &op.kind {\n+                    ExprKind::AddrOf(_, _, borrowed) => borrowed,\n+                    _ => op,\n+                };\n                 span_lint_and_then(\n                     cx,\n                     REDUNDANT_PATTERN_MATCHING,\n                     expr.span,\n                     &format!(\"redundant pattern matching, consider using `{}`\", good_method),\n                     |diag| {\n-                        let span = expr.span.to(op.span);\n                         diag.span_suggestion(\n                             span,\n                             \"try this\",\n-                            format!(\"{}.{}\", snippet(cx, op.span, \"_\"), good_method),\n+                            format!(\"{}.{}\", snippet(cx, result_expr.span, \"_\"), good_method),\n                             Applicability::MaybeIncorrect, // snippet\n                         );\n                     },"}]}