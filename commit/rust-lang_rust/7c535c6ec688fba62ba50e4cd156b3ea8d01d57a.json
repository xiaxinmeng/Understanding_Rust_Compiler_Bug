{"sha": "7c535c6ec688fba62ba50e4cd156b3ea8d01d57a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNTM1YzZlYzY4OGZiYTYyYmE1MGU0Y2QxNTZiM2VhOGQwMWQ1N2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-20T02:01:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-20T02:01:52Z"}, "message": "Auto merge of #37833 - sfackler:process-abort, r=alexcrichton\n\nAdd std::process::abort\n\nThis calls libc abort on Unix and fastfail on Windows, first running\ncleanups to do things like flush stdout buffers. This matches with libc\nabort's behavior, which flushes open files.\n\nr? @alexcrichton", "tree": {"sha": "e6260b549783ff034bc6f1b13d72033f39ff55f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6260b549783ff034bc6f1b13d72033f39ff55f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c535c6ec688fba62ba50e4cd156b3ea8d01d57a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c535c6ec688fba62ba50e4cd156b3ea8d01d57a", "html_url": "https://github.com/rust-lang/rust/commit/7c535c6ec688fba62ba50e4cd156b3ea8d01d57a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c535c6ec688fba62ba50e4cd156b3ea8d01d57a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd2ce62b27e2b9a7dfe92fc23d9098854008089", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd2ce62b27e2b9a7dfe92fc23d9098854008089", "html_url": "https://github.com/rust-lang/rust/commit/0bd2ce62b27e2b9a7dfe92fc23d9098854008089"}, {"sha": "fc0140d2714d06a45433bb747b4072cdc4665732", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc0140d2714d06a45433bb747b4072cdc4665732", "html_url": "https://github.com/rust-lang/rust/commit/fc0140d2714d06a45433bb747b4072cdc4665732"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c99fda9febc245e94d5042a3e015ef65a716aa53", "filename": "src/libstd/process.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7c535c6ec688fba62ba50e4cd156b3ea8d01d57a/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c535c6ec688fba62ba50e4cd156b3ea8d01d57a/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=7c535c6ec688fba62ba50e4cd156b3ea8d01d57a", "patch": "@@ -825,6 +825,21 @@ pub fn exit(code: i32) -> ! {\n     ::sys::os::exit(code)\n }\n \n+/// Terminates the process in an abnormal fashion.\n+///\n+/// The function will never return and will immediately terminate the current\n+/// process in a platform specific \"abnormal\" manner.\n+///\n+/// Note that because this function never returns, and that it terminates the\n+/// process, no destructors on the current stack or any other thread's stack\n+/// will be run. If a clean shutdown is needed it is recommended to only call\n+/// this function at a known point where there are no more destructors left\n+/// to run.\n+#[unstable(feature = \"process_abort\", issue = \"37838\")]\n+pub fn abort() -> ! {\n+    unsafe { ::sys::abort_internal() };\n+}\n+\n #[cfg(all(test, not(target_os = \"emscripten\")))]\n mod tests {\n     use io::prelude::*;"}]}