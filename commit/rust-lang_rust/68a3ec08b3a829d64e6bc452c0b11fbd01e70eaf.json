{"sha": "68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YTNlYzA4YjNhODI5ZDY0ZTZiYzQ1MmMwYjExZmJkMDFlNzBlYWY=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-14T21:56:10Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-03-20T09:17:28Z"}, "message": "Allow static items that don't fulfill `Freeze`", "tree": {"sha": "b186c09e0b3b66c2ce445a40516265b94bcf499c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b186c09e0b3b66c2ce445a40516265b94bcf499c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf", "html_url": "https://github.com/rust-lang/rust/commit/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff1c49fa543faf9123271c8cfb779796dd00078a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff1c49fa543faf9123271c8cfb779796dd00078a", "html_url": "https://github.com/rust-lang/rust/commit/ff1c49fa543faf9123271c8cfb779796dd00078a"}], "stats": {"total": 49, "additions": 4, "deletions": 45}, "files": [{"sha": "ecc3ba59dd5ab68be55c15395c4a44a6561aaf86", "filename": "src/librustc/middle/check_static.rs", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf/src%2Flibrustc%2Fmiddle%2Fcheck_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf/src%2Flibrustc%2Fmiddle%2Fcheck_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_static.rs?ref=68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf", "patch": "@@ -18,8 +18,11 @@\n // - For each *immutable* static item, it checks that its **value**:\n //       - doesn't own owned, managed pointers\n //       - doesn't contain a struct literal or a call to an enum variant / struct constructor where\n-//           - the type of the struct/enum is not freeze\n //           - the type of the struct/enum has a dtor\n+//\n+// Rules Enforced Elsewhere:\n+// - It's not possible to take the address of a static item with unsafe interior. This is enforced\n+// by borrowck::gather_loans\n \n use middle::ty;\n \n@@ -121,21 +124,6 @@ impl<'a> Visitor<bool> for CheckStaticVisitor<'a> {\n                 self.tcx.sess.span_err(e.span,\n                                    \"static items are not allowed to have owned pointers\");\n             }\n-            ast::ExprProc(..) => {\n-                self.report_error(e.span,\n-                                  Some(~\"immutable static items must be `Freeze`\"));\n-                return;\n-            }\n-            ast::ExprAddrOf(mutability, _) => {\n-                match mutability {\n-                    ast::MutMutable => {\n-                        self.report_error(e.span,\n-                                  Some(~\"immutable static items must be `Freeze`\"));\n-                        return;\n-                    }\n-                    _ => {}\n-                }\n-            }\n             _ => {\n                 let node_ty = ty::node_id_to_type(self.tcx, e.id);\n \n@@ -147,11 +135,6 @@ impl<'a> Visitor<bool> for CheckStaticVisitor<'a> {\n                                      Some(~\"static items are not allowed to have destructors\"));\n                             return;\n                         }\n-                        if Some(did) == self.tcx.lang_items.no_freeze_bound() {\n-                            self.report_error(e.span,\n-                                              Some(~\"immutable static items must be `Freeze`\"));\n-                            return;\n-                        }\n                     }\n                     _ => {}\n                 }"}, {"sha": "8ae40a74af188342f673f3d77c88c51d405acc06", "filename": "src/test/compile-fail/check-static-values-constraints.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs?ref=68a3ec08b3a829d64e6bc452c0b11fbd01e70eaf", "patch": "@@ -124,30 +124,6 @@ static STATIC18: @SafeStruct = @SafeStruct{field1: Variant1, field2: Variant2(0)\n static STATIC19: ~int = box 3;\n //~^ ERROR static items are not allowed to have owned pointers\n \n-\n-struct StructNoFreeze<'a> {\n-    nf: &'a int\n-}\n-\n-enum EnumNoFreeze<'a> {\n-    FreezableVariant,\n-    NonFreezableVariant(StructNoFreeze<'a>)\n-}\n-\n-static STATIC20: StructNoFreeze<'static> = StructNoFreeze{nf: &'static mut 4};\n-//~^ ERROR immutable static items must be `Freeze`\n-\n-static STATIC21: EnumNoFreeze<'static> = FreezableVariant;\n-static STATIC22: EnumNoFreeze<'static> = NonFreezableVariant(StructNoFreeze{nf: &'static mut 4});\n-//~^ ERROR immutable static items must be `Freeze`\n-\n-struct NFMarker {\n-    nf: marker::NoFreeze\n-}\n-\n-static STATIC23: NFMarker = NFMarker{nf: marker::NoFreeze};\n-//~^ ERROR immutable static items must be `Freeze`\n-\n pub fn main() {\n     let y = { static x: ~int = ~3; x };\n     //~^ ERROR static items are not allowed to have owned pointers"}]}