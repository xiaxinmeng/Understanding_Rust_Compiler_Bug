{"sha": "e903f58d29662b5509fb20c74d7c4131271bfbf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MDNmNThkMjk2NjJiNTUwOWZiMjBjNzRkN2M0MTMxMjcxYmZiZjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-21T18:40:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-21T18:44:08Z"}, "message": "More profiling", "tree": {"sha": "f816fedc3ce4c9de6db4ae83a5403897d8807b04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f816fedc3ce4c9de6db4ae83a5403897d8807b04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e903f58d29662b5509fb20c74d7c4131271bfbf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e903f58d29662b5509fb20c74d7c4131271bfbf0", "html_url": "https://github.com/rust-lang/rust/commit/e903f58d29662b5509fb20c74d7c4131271bfbf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e903f58d29662b5509fb20c74d7c4131271bfbf0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f874d6c475356b1dd40acd9c362c786dc76f7e28", "url": "https://api.github.com/repos/rust-lang/rust/commits/f874d6c475356b1dd40acd9c362c786dc76f7e28", "html_url": "https://github.com/rust-lang/rust/commit/f874d6c475356b1dd40acd9c362c786dc76f7e28"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "6314be8d4c68fee9f62acfcd5da125dee4ec5462", "filename": "crates/ra_hir/src/from_source.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e903f58d29662b5509fb20c74d7c4131271bfbf0/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e903f58d29662b5509fb20c74d7c4131271bfbf0/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs?ref=e903f58d29662b5509fb20c74d7c4131271bfbf0", "patch": "@@ -7,6 +7,7 @@ use hir_def::{\n     StaticId, StructId, TraitId, TypeAliasId, UnionId, VariantId,\n };\n use hir_expand::{name::AsName, AstId, MacroDefId, MacroDefKind};\n+use ra_db::FileId;\n use ra_prof::profile;\n use ra_syntax::{\n     ast::{self, AstNode, NameOwner},\n@@ -206,10 +207,14 @@ impl Module {\n         };\n \n         let original_file = src.file_id.original_file(db);\n+        Module::from_file(db, original_file)\n+    }\n \n-        let (krate, local_id) = db.relevant_crates(original_file).iter().find_map(|&crate_id| {\n+    fn from_file(db: &impl DefDatabase, file: FileId) -> Option<Self> {\n+        let _p = profile(\"Module::from_file\");\n+        let (krate, local_id) = db.relevant_crates(file).iter().find_map(|&crate_id| {\n             let crate_def_map = db.crate_def_map(crate_id);\n-            let local_id = crate_def_map.modules_for_file(original_file).next()?;\n+            let local_id = crate_def_map.modules_for_file(file).next()?;\n             Some((crate_id, local_id))\n         })?;\n         Some(Module { id: ModuleId { krate, local_id } })"}, {"sha": "d9ea693e343d9d3b72d25e398c3dda039a614ae1", "filename": "crates/ra_hir_def/src/adt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e903f58d29662b5509fb20c74d7c4131271bfbf0/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e903f58d29662b5509fb20c74d7c4131271bfbf0/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fadt.rs?ref=e903f58d29662b5509fb20c74d7c4131271bfbf0", "patch": "@@ -8,6 +8,7 @@ use hir_expand::{\n     InFile,\n };\n use ra_arena::{map::ArenaMap, Arena};\n+use ra_prof::profile;\n use ra_syntax::ast::{self, NameOwner, TypeAscriptionOwner};\n \n use crate::{\n@@ -72,6 +73,7 @@ impl StructData {\n \n impl EnumData {\n     pub(crate) fn enum_data_query(db: &impl DefDatabase, e: EnumId) -> Arc<EnumData> {\n+        let _p = profile(\"enum_data_query\");\n         let src = e.lookup(db).source(db);\n         let name = src.value.name().map_or_else(Name::missing, |n| n.as_name());\n         let mut trace = Trace::new_for_arena();"}, {"sha": "73dc0874595312a1426361ce0c8d9562472e201c", "filename": "crates/ra_hir_def/src/nameres/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e903f58d29662b5509fb20c74d7c4131271bfbf0/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e903f58d29662b5509fb20c74d7c4131271bfbf0/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs?ref=e903f58d29662b5509fb20c74d7c4131271bfbf0", "patch": "@@ -14,6 +14,7 @@ use hir_expand::{\n     name::{AsName, Name},\n };\n use ra_arena::{impl_arena_id, Arena, RawId};\n+use ra_prof::profile;\n use ra_syntax::{\n     ast::{self, AttrsOwner, NameOwner},\n     AstNode,\n@@ -42,6 +43,7 @@ impl RawItems {\n         db: &(impl DefDatabase + AstDatabase),\n         file_id: HirFileId,\n     ) -> Arc<RawItems> {\n+        let _p = profile(\"raw_items_query\");\n         let mut collector = RawItemsCollector {\n             raw_items: RawItems::default(),\n             source_ast_id_map: db.ast_id_map(file_id),"}]}