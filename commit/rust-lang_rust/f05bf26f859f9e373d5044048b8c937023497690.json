{"sha": "f05bf26f859f9e373d5044048b8c937023497690", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNWJmMjZmODU5ZjllMzczZDUwNDQwNDhiOGM5MzcwMjM0OTc2OTA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-04T21:08:59Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-04T21:08:59Z"}, "message": "Fix long line.", "tree": {"sha": "b0167f030cfb08e7393fbd18e600abb6e9dc1961", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0167f030cfb08e7393fbd18e600abb6e9dc1961"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f05bf26f859f9e373d5044048b8c937023497690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f05bf26f859f9e373d5044048b8c937023497690", "html_url": "https://github.com/rust-lang/rust/commit/f05bf26f859f9e373d5044048b8c937023497690", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f05bf26f859f9e373d5044048b8c937023497690/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ffce1a1c305d2bfeb530bac7628e2f28b4b880c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ffce1a1c305d2bfeb530bac7628e2f28b4b880c", "html_url": "https://github.com/rust-lang/rust/commit/6ffce1a1c305d2bfeb530bac7628e2f28b4b880c"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "269027a80e51101e55d64b930978609cb98168c1", "filename": "src/libstd/serialization.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f05bf26f859f9e373d5044048b8c937023497690/src%2Flibstd%2Fserialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05bf26f859f9e373d5044048b8c937023497690/src%2Flibstd%2Fserialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fserialization.rs?ref=f05bf26f859f9e373d5044048b8c937023497690", "patch": "@@ -239,7 +239,8 @@ pub fn deserialize_bool<D: Deserializer>(&&d: D) -> bool {\n     d.read_bool()\n }\n \n-pub fn serialize_Option<S: Serializer,T>(&&s: S, &&v: Option<T>, st: fn(&&x: T)) {\n+pub fn serialize_Option<S: Serializer,T>(&&s: S, &&v: Option<T>,\n+                                         st: fn(&&x: T)) {\n     do s.emit_enum(~\"option\") {\n         match v {\n           None => do s.emit_enum_variant(~\"none\", 0u, 0u) {"}]}