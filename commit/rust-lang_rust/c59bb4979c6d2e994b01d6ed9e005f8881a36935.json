{"sha": "c59bb4979c6d2e994b01d6ed9e005f8881a36935", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1OWJiNDk3OWM2ZDJlOTk0YjAxZDZlZDllMDA1Zjg4ODFhMzY5MzU=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-23T05:20:47Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-23T05:20:47Z"}, "message": "Correct target_family mess", "tree": {"sha": "3780c56d4707ec455a78a87eeb48204cbe82af69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3780c56d4707ec455a78a87eeb48204cbe82af69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c59bb4979c6d2e994b01d6ed9e005f8881a36935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c59bb4979c6d2e994b01d6ed9e005f8881a36935", "html_url": "https://github.com/rust-lang/rust/commit/c59bb4979c6d2e994b01d6ed9e005f8881a36935", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c59bb4979c6d2e994b01d6ed9e005f8881a36935/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "474eb6223bcb50960048cce05ede8ab1e36ea8ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/474eb6223bcb50960048cce05ede8ab1e36ea8ca", "html_url": "https://github.com/rust-lang/rust/commit/474eb6223bcb50960048cce05ede8ab1e36ea8ca"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "17b5199e7ed3b791875ca866cc74d91ac491be83", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -943,26 +943,20 @@ pub fn default_configuration(sess: &Session) -> ast::CrateConfig {\n     let vendor = &sess.target.target.target_vendor;\n     let max_atomic_width = sess.target.target.max_atomic_width();\n \n-    let fam = if let Some(ref fam) = sess.target.target.options.target_family {\n-        Symbol::intern(fam)\n-    } else if sess.target.target.options.is_like_windows {\n-        Symbol::intern(\"windows\")\n-    } else {\n-        Symbol::intern(\"unix\")\n-    };\n-\n     let mut ret = HashSet::new();\n     // Target bindings.\n     ret.insert((Symbol::intern(\"target_os\"), Some(Symbol::intern(os))));\n-    ret.insert((Symbol::intern(\"target_family\"), Some(fam)));\n+    if let Some(fam) = sess.target.target.options.target_family {\n+        ret.insert((Symbol::intern(\"target_family\"), Some(fam)));\n+        if fam == \"windows\" || fam == \"unix\" {\n+            ret.insert((fam, None));\n+        }\n+    }\n     ret.insert((Symbol::intern(\"target_arch\"), Some(Symbol::intern(arch))));\n     ret.insert((Symbol::intern(\"target_endian\"), Some(Symbol::intern(end))));\n     ret.insert((Symbol::intern(\"target_pointer_width\"), Some(Symbol::intern(wordsz))));\n     ret.insert((Symbol::intern(\"target_env\"), Some(Symbol::intern(env))));\n     ret.insert((Symbol::intern(\"target_vendor\"), Some(Symbol::intern(vendor))));\n-    if fam == \"windows\" || fam == \"unix\" {\n-        ret.insert((fam, None));\n-    }\n     if sess.target.target.options.has_elf_tls {\n         ret.insert((Symbol::intern(\"target_thread_local\"), None));\n     }"}, {"sha": "21a2d4293df77025700e162354fa90aeadb954b2", "filename": "src/librustc_back/target/apple_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -37,6 +37,7 @@ pub fn opts() -> TargetOptions {\n         function_sections: false,\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         is_like_osx: true,\n         has_rpath: true,\n         dll_prefix: \"lib\".to_string(),"}, {"sha": "62418e68d43415fe020671e30759bcf075d076ac", "filename": "src/librustc_back/target/bitrig_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -15,6 +15,7 @@ pub fn opts() -> TargetOptions {\n     TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         has_rpath: true,\n         position_independent_executables: true,"}, {"sha": "dca33e45af7c7ffc656b02609dedf9dc537b4fa5", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -15,6 +15,7 @@ pub fn opts() -> TargetOptions {\n     TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         has_rpath: true,\n         pre_link_args: vec!["}, {"sha": "dca33e45af7c7ffc656b02609dedf9dc537b4fa5", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -15,6 +15,7 @@ pub fn opts() -> TargetOptions {\n     TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         has_rpath: true,\n         pre_link_args: vec!["}, {"sha": "8c517224201b2fe7b2e44b5a7812055c9a5cbfb0", "filename": "src/librustc_back/target/fuchsia_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffuchsia_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -15,6 +15,7 @@ pub fn opts() -> TargetOptions {\n     TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         has_rpath: true,\n         pre_link_args: vec!["}, {"sha": "bfdc9faaa8a736b37addb6b2c67868ca5cf37c63", "filename": "src/librustc_back/target/haiku_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fhaiku_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fhaiku_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fhaiku_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -17,6 +17,7 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         has_rpath: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         .. Default::default()\n     }"}, {"sha": "4b2ae9c8e699c1e23ca0f056afff69d02faf1ea1", "filename": "src/librustc_back/target/linux_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -15,6 +15,7 @@ pub fn opts() -> TargetOptions {\n     TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         has_rpath: true,\n         pre_link_args: vec!["}, {"sha": "57179a68afd8e9ccdc79bb1f459296277bca6339", "filename": "src/librustc_back/target/netbsd_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -15,6 +15,7 @@ pub fn opts() -> TargetOptions {\n     TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         has_rpath: true,\n         pre_link_args: vec!["}, {"sha": "12b8e8bdc88fd931e776664af40136cacf0afd81", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -15,6 +15,7 @@ pub fn opts() -> TargetOptions {\n     TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n+        target_family: Some(\"unix\".to_string()),\n         linker_is_gnu: true,\n         has_rpath: true,\n         is_like_openbsd: true,"}, {"sha": "1dffff598096b9c8e4b310cff69f452a7a9665e5", "filename": "src/librustc_back/target/redox_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -38,7 +38,7 @@ pub fn opts() -> TargetOptions {\n         relocation_model: \"static\".to_string(),\n         disable_redzone: true,\n         eliminate_frame_pointer: false,\n-        target_family: Some(\"redox\".to_string()),\n+        target_family: None,\n         linker_is_gnu: true,\n         no_default_libraries: true,\n         lib_allocation_crate: \"alloc_system\".to_string(),"}, {"sha": "41323c9c26ba7290fc0b7216d68a477e17a3d7f5", "filename": "src/librustc_back/target/solaris_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fsolaris_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fsolaris_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fsolaris_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -16,6 +16,7 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         has_rpath: true,\n+        target_family: Some(\"unix\".to_string()),\n         is_like_solaris: true,\n         exe_allocation_crate: super::maybe_jemalloc(),\n "}, {"sha": "db02e142fcc8efac34aca9480845a87696be1cdf", "filename": "src/librustc_back/target/windows_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -24,6 +24,7 @@ pub fn opts() -> TargetOptions {\n         staticlib_prefix: \"\".to_string(),\n         staticlib_suffix: \".lib\".to_string(),\n         no_default_libraries: true,\n+        target_family: Some(\"windows\".to_string()),\n         is_like_windows: true,\n         allows_weak_linkage: false,\n         pre_link_args: vec!["}, {"sha": "efa215b419d7044fed385b8b176d2f664a6e3bc1", "filename": "src/librustc_back/target/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59bb4979c6d2e994b01d6ed9e005f8881a36935/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs?ref=c59bb4979c6d2e994b01d6ed9e005f8881a36935", "patch": "@@ -53,6 +53,7 @@ pub fn opts() -> TargetOptions {\n         exe_suffix: \".exe\".to_string(),\n         staticlib_prefix: \"\".to_string(),\n         staticlib_suffix: \".lib\".to_string(),\n+        target_family: Some(\"windows\".to_string()),\n         is_like_windows: true,\n         is_like_msvc: true,\n         pre_link_args: vec!["}]}