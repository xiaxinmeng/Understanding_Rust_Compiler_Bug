{"sha": "efdd00d2ae7e10faf25bca876182a25f948e9a12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZGQwMGQyYWU3ZTEwZmFmMjViY2E4NzYxODJhMjVmOTQ4ZTlhMTI=", "commit": {"author": {"name": "Brad Gibson", "email": "b2b@humanenginuity.com", "date": "2018-04-23T18:03:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-23T18:03:27Z"}, "message": "Merge pull request #1 from humanenginuity/fix-strictly-aligned-types-cast-messages\n\nCorrected messaging to warn against less- to more-strictly aligned", "tree": {"sha": "d1453ce26f530c15bb01983e894e72ceca379654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1453ce26f530c15bb01983e894e72ceca379654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efdd00d2ae7e10faf25bca876182a25f948e9a12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa3h/vCRBK7hj4Ov3rIwAAdHIIAIW9dKVYquZayW1U0cQr+vZV\n5XmkpslxKwC42X7BHaqPrZVsee/swDlWIUPaHNunkV+an8zMbtROEa3rbTUM1L6C\n3R835dy0zCWlUnORhDjtZ4R7tzwbN5GvG74XOVElfWzIPbSoW6L4yTGQ9V+w+bzb\nnSb7OI6Dr1h3pw+StV8KIYPkIiGwL6q71YWfJR+pv2bx7OHHqIUVoahElIuLxzFx\nnhlYwijdmKlIMMs0SyJRHjKP3GMdlD5GLonGSsJ87RbBTsivO5X8AGLgHt37LIJs\n8gFOkpHlfD8M3uqbfQW9Bn/fSFgvyQ1xKAMldnQ9yJHUzkvJSEGDVB4pSsT/Whw=\n=z8j0\n-----END PGP SIGNATURE-----\n", "payload": "tree d1453ce26f530c15bb01983e894e72ceca379654\nparent 79e818267b0f5a5e397c3ab9e778e22b2adf0139\nparent 1969d423a7d80ccae2fa28693f3a78091f053832\nauthor Brad Gibson <b2b@humanenginuity.com> 1524506607 -0700\ncommitter GitHub <noreply@github.com> 1524506607 -0700\n\nMerge pull request #1 from humanenginuity/fix-strictly-aligned-types-cast-messages\n\nCorrected messaging to warn against less- to more-strictly aligned"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efdd00d2ae7e10faf25bca876182a25f948e9a12", "html_url": "https://github.com/rust-lang/rust/commit/efdd00d2ae7e10faf25bca876182a25f948e9a12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efdd00d2ae7e10faf25bca876182a25f948e9a12/comments", "author": {"login": "Xandkeeper", "id": 124085026, "node_id": "U_kgDOB2VjIg", "avatar_url": "https://avatars.githubusercontent.com/u/124085026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xandkeeper", "html_url": "https://github.com/Xandkeeper", "followers_url": "https://api.github.com/users/Xandkeeper/followers", "following_url": "https://api.github.com/users/Xandkeeper/following{/other_user}", "gists_url": "https://api.github.com/users/Xandkeeper/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xandkeeper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xandkeeper/subscriptions", "organizations_url": "https://api.github.com/users/Xandkeeper/orgs", "repos_url": "https://api.github.com/users/Xandkeeper/repos", "events_url": "https://api.github.com/users/Xandkeeper/events{/privacy}", "received_events_url": "https://api.github.com/users/Xandkeeper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79e818267b0f5a5e397c3ab9e778e22b2adf0139", "url": "https://api.github.com/repos/rust-lang/rust/commits/79e818267b0f5a5e397c3ab9e778e22b2adf0139", "html_url": "https://github.com/rust-lang/rust/commit/79e818267b0f5a5e397c3ab9e778e22b2adf0139"}, {"sha": "1969d423a7d80ccae2fa28693f3a78091f053832", "url": "https://api.github.com/repos/rust-lang/rust/commits/1969d423a7d80ccae2fa28693f3a78091f053832", "html_url": "https://github.com/rust-lang/rust/commit/1969d423a7d80ccae2fa28693f3a78091f053832"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "90f42eba135efa5312ae785f602f4692d946fd3d", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/efdd00d2ae7e10faf25bca876182a25f948e9a12/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efdd00d2ae7e10faf25bca876182a25f948e9a12/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=efdd00d2ae7e10faf25bca876182a25f948e9a12", "patch": "@@ -679,10 +679,10 @@ declare_clippy_lint! {\n     \"cast to the same type, e.g. `x as i32` where `x: i32`\"\n }\n \n-/// **What it does:** Checks for casts from a more-strictly-aligned pointer to a\n-/// less-strictly-aligned pointer\n+/// **What it does:** Checks for casts from a less-strictly-aligned pointer to a\n+/// more-strictly-aligned pointer\n ///\n-/// **Why is this bad?** Dereferencing the resulting pointer is undefined\n+/// **Why is this bad?** Dereferencing the resulting pointer may be undefined\n /// behavior.\n ///\n /// **Known problems:** None.\n@@ -695,7 +695,7 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     pub CAST_PTR_ALIGNMENT,\n     correctness,\n-    \"cast from a pointer to a less-strictly-aligned pointer\"\n+    \"cast from a pointer to a more-strictly-aligned pointer\"\n }\n \n /// Returns the size in bits of an integral type.\n@@ -986,7 +986,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n                         cx,\n                         CAST_PTR_ALIGNMENT,\n                         expr.span,\n-                        &format!(\"casting from `{}` to a less-strictly-aligned pointer (`{}`)\", cast_from, cast_to)\n+                        &format!(\"casting from `{}` to a more-strictly-aligned pointer (`{}`)\", cast_from, cast_to)\n                     );\n                 }\n             }"}, {"sha": "d9fffdd33f19100aa6f26ec386782766f7ccb836", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efdd00d2ae7e10faf25bca876182a25f948e9a12/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/efdd00d2ae7e10faf25bca876182a25f948e9a12/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=efdd00d2ae7e10faf25bca876182a25f948e9a12", "patch": "@@ -1,12 +1,12 @@\n-error: casting from `*const u8` to a less-strictly-aligned pointer (`*const u16`)\n+error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n  --> $DIR/cast_alignment.rs:9:5\n   |\n 9 |     (&1u8 as *const u8) as *const u16;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `-D cast-ptr-alignment` implied by `-D warnings`\n \n-error: casting from `*mut u8` to a less-strictly-aligned pointer (`*mut u16`)\n+error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n   --> $DIR/cast_alignment.rs:10:5\n    |\n 10 |     (&mut 1u8 as *mut u8) as *mut u16;"}]}