{"sha": "db47cb5c1355041a30475e2d32debded1811a354", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNDdjYjVjMTM1NTA0MWEzMDQ3NWUyZDMyZGViZGVkMTgxMWEzNTQ=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-25T19:22:25Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-25T19:22:25Z"}, "message": "Dead code.", "tree": {"sha": "56241d5804502b60e74fe3697a6b9d7dea00effa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56241d5804502b60e74fe3697a6b9d7dea00effa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db47cb5c1355041a30475e2d32debded1811a354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db47cb5c1355041a30475e2d32debded1811a354", "html_url": "https://github.com/rust-lang/rust/commit/db47cb5c1355041a30475e2d32debded1811a354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db47cb5c1355041a30475e2d32debded1811a354/comments", "author": null, "committer": null, "parents": [{"sha": "0e324cad0a37bdaa0aebb864c3da28b25ad1ebf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e324cad0a37bdaa0aebb864c3da28b25ad1ebf6", "html_url": "https://github.com/rust-lang/rust/commit/0e324cad0a37bdaa0aebb864c3da28b25ad1ebf6"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "245b068df639fe11d6364b88ae7a534eb0c11e8d", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db47cb5c1355041a30475e2d32debded1811a354/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/db47cb5c1355041a30475e2d32debded1811a354/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=db47cb5c1355041a30475e2d32debded1811a354", "patch": "@@ -95,7 +95,7 @@ rust_start(uintptr_t main_fn, rust_crate const *crate, int argc,\n     }\n \n     if (log_rt_dwarf) {\n-        rust_crate_reader create_reader(dom, crate);\n+        rust_crate_reader create_reader(dom);\n     }\n \n     uintptr_t main_args[4] = {0, 0, 0, (uintptr_t)args->args};"}, {"sha": "15f4bc8c092e91298de3bd785370c328f1c0e1fe", "filename": "src/rt/rust_crate_reader.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db47cb5c1355041a30475e2d32debded1811a354/src%2Frt%2Frust_crate_reader.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/db47cb5c1355041a30475e2d32debded1811a354/src%2Frt%2Frust_crate_reader.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_crate_reader.cpp?ref=db47cb5c1355041a30475e2d32debded1811a354", "patch": "@@ -61,8 +61,7 @@ rust_crate_reader::attr::is_unknown() const {\n   return !(is_numeric() || is_string());\n }\n \n-rust_crate_reader::rust_crate_reader(rust_dom *dom,\n-                                     rust_crate const *crate)\n+rust_crate_reader::rust_crate_reader(rust_dom *dom)\n   : dom(dom)\n {\n   DLOG(dom, mem, \"crate_reader on crate: 0x%\" PRIxPTR, this);"}, {"sha": "25eb9dbed485a63f3ef509d2ef522d2065259606", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db47cb5c1355041a30475e2d32debded1811a354/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/db47cb5c1355041a30475e2d32debded1811a354/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=db47cb5c1355041a30475e2d32debded1811a354", "patch": "@@ -352,7 +352,7 @@ rust_crate_reader\n         bool is_unknown() const;\n     };\n \n-    rust_crate_reader(rust_dom *dom, rust_crate const *crate);\n+    rust_crate_reader(rust_dom *dom);\n };\n \n // An alarm can be put into a wait queue and the task will be notified"}]}