{"sha": "47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "node_id": "C_kwDOAAsO6NoAKDQ3ZjlkODlmOWFiZDI0YmM2YTM0N2E3N2RjZjEzMWUyODNhZDJjM2I", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-15T09:44:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-15T09:44:09Z"}, "message": "Rollup merge of #104148 - fmease:fix-104140, r=petrochenkov\n\nVisit attributes of trait impl items during AST validation\n\nFixes #104140.\n\nThis fix might not be backward compatible (in practice) since we now validate more attributes than before.\nShould I write more tests?\n\n`@rustbot` label A-attributes", "tree": {"sha": "34c81cba566dc4e07e7ec021102bfee79ea07dbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34c81cba566dc4e07e7ec021102bfee79ea07dbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjc19pCRBK7hj4Ov3rIwAAu6AIAJ9vueENP4K4lbCgDHtfZL3z\n7ruoO02gno1yfasqUEyQUJoeAbX1ehrDr3QDDN9OPDXNBZigWBumluBa8RpiTQTL\nZhDoKcDKAEZ1h+vYbKU2YYeJe4lyhvkUY/ZBXf5PbHAzj+5X4CzamzLtcydgTQk8\njH6JLdGsKj/um6rviExUktEYjKWFILxtxCEnQ4i/bBiGc8NOQ8e6CuKskHq/AUkZ\nQFpp1vwEkycXpnqvCAhBRieAg2F8obErc2HA8wlN8T7JXoxztb5KrYlMwwvN8jNo\nwzuUnuXn+oKhR407p4h11UtulXETAXCo51Cq78EVUw2YBYrKbXapNsWjvr3uXT0=\n=UkXy\n-----END PGP SIGNATURE-----\n", "payload": "tree 34c81cba566dc4e07e7ec021102bfee79ea07dbc\nparent e309b79050c4dd47c08b3ef2b8228701883c5c24\nparent 5ef85bbd7cd02df6389db6b3160ec7ef153091f1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668505449 +0100\ncommitter GitHub <noreply@github.com> 1668505449 +0100\n\nRollup merge of #104148 - fmease:fix-104140, r=petrochenkov\n\nVisit attributes of trait impl items during AST validation\n\nFixes #104140.\n\nThis fix might not be backward compatible (in practice) since we now validate more attributes than before.\nShould I write more tests?\n\n`@rustbot` label A-attributes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "html_url": "https://github.com/rust-lang/rust/commit/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e309b79050c4dd47c08b3ef2b8228701883c5c24", "url": "https://api.github.com/repos/rust-lang/rust/commits/e309b79050c4dd47c08b3ef2b8228701883c5c24", "html_url": "https://github.com/rust-lang/rust/commit/e309b79050c4dd47c08b3ef2b8228701883c5c24"}, {"sha": "5ef85bbd7cd02df6389db6b3160ec7ef153091f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ef85bbd7cd02df6389db6b3160ec7ef153091f1", "html_url": "https://github.com/rust-lang/rust/commit/5ef85bbd7cd02df6389db6b3160ec7ef153091f1"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "712fb5ac71f976c80ce84d9e06a996762fab9921", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "patch": "@@ -1051,6 +1051,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n \n                     walk_list!(this, visit_assoc_item, items, AssocCtxt::Impl);\n                 });\n+                walk_list!(self, visit_attribute, &item.attrs);\n                 return; // Avoid visiting again.\n             }\n             ItemKind::Impl(box Impl {\n@@ -1168,7 +1169,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 });\n                 walk_list!(self, visit_assoc_item, items, AssocCtxt::Trait);\n                 walk_list!(self, visit_attribute, &item.attrs);\n-                return;\n+                return; // Avoid visiting again\n             }\n             ItemKind::Mod(unsafety, ref mod_kind) => {\n                 if let Unsafe::Yes(span) = unsafety {"}, {"sha": "ade3f727004abe27048784e79c36b2f242bea04b", "filename": "src/test/ui/on-unimplemented/issue-104140.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b/src%2Ftest%2Fui%2Fon-unimplemented%2Fissue-104140.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b/src%2Ftest%2Fui%2Fon-unimplemented%2Fissue-104140.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fon-unimplemented%2Fissue-104140.rs?ref=47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "patch": "@@ -0,0 +1,8 @@\n+#![feature(rustc_attrs)]\n+\n+trait Foo {}\n+\n+#[rustc_on_unimplemented] //~ ERROR malformed `rustc_on_unimplemented` attribute input\n+impl Foo for u32 {}\n+\n+fn main() {}"}, {"sha": "ddb1f50f0bb45c850e49cad57efdf799f3aa0266", "filename": "src/test/ui/on-unimplemented/issue-104140.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b/src%2Ftest%2Fui%2Fon-unimplemented%2Fissue-104140.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47f9d89f9abd24bc6a347a77dcf131e283ad2c3b/src%2Ftest%2Fui%2Fon-unimplemented%2Fissue-104140.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fon-unimplemented%2Fissue-104140.stderr?ref=47f9d89f9abd24bc6a347a77dcf131e283ad2c3b", "patch": "@@ -0,0 +1,15 @@\n+error: malformed `rustc_on_unimplemented` attribute input\n+  --> $DIR/issue-104140.rs:5:1\n+   |\n+LL | #[rustc_on_unimplemented]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: the following are the possible correct uses\n+   |\n+LL | #[rustc_on_unimplemented = \"message\"]\n+   | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL | #[rustc_on_unimplemented(/*opt*/ message = \"...\", /*opt*/ label = \"...\", /*opt*/ note = \"...\")]\n+   | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+error: aborting due to previous error\n+"}]}