{"sha": "ed991a36b0d41d1857bd3557f81dbb580fc377b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkOTkxYTM2YjBkNDFkMTg1N2JkMzU1N2Y4MWRiYjU4MGZjMzc3Yjc=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-24T03:17:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-24T03:17:09Z"}, "message": "Rollup merge of #84489 - amorison:issue-83969-fix, r=yaahc\n\nMention FusedIterator case in Iterator::fuse doc\n\nUsing `fuse` on an iterator that incorrectly implements\n`FusedIterator` does not fuse the iterator. This commit adds a\nnote about this in the documentation of this method to increase\nawareness about this potential issue (esp. when relying on fuse\nin unsafe code).\n\nCloses #83969", "tree": {"sha": "5dea2fdd143c3d33e9690868d1468bfae16e6e2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dea2fdd143c3d33e9690868d1468bfae16e6e2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed991a36b0d41d1857bd3557f81dbb580fc377b7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgg422CRBK7hj4Ov3rIwAAEo8IAKfQG5PHNVUTDHT2HPcCAOBe\ni8vjWhXMWnVfmI+67sAkQNPGraOnDNQQB5lWpgUYTAdq3lvzq3cHvi9KdTRFSuQf\nA8G8V+WRrYuDzV7ePqwI2qajNxxJbWD2S4WC8cx61yVkNYt9iVQVB4uo0CQ0131I\nLgIc6PA9iBKIS7hlXbgPClZRidvmw/6lqmZotGqjnXS8BJUCb3hExzrOviRr07sX\n1aj8ZykZ8BUq02QpoQlFf6H/cFOFQm/0x9s5ELZXEOtG9Yih4WaphGSQ/523CuUa\nnkrScqR0lm9ona5oJEF8iEBIP013iMgEl6kyJB7rlmSbJT1f59aNRIOgLDsAvd0=\n=Xrzg\n-----END PGP SIGNATURE-----\n", "payload": "tree 5dea2fdd143c3d33e9690868d1468bfae16e6e2a\nparent 740e1f4e04fcb0a3508ddd32ce1b3eaf1dc77c8a\nparent 21b3b27fe4695e13f089a75e67981478b3067a00\nauthor Yuki Okushi <jtitor@2k36.org> 1619234229 +0900\ncommitter GitHub <noreply@github.com> 1619234229 +0900\n\nRollup merge of #84489 - amorison:issue-83969-fix, r=yaahc\n\nMention FusedIterator case in Iterator::fuse doc\n\nUsing `fuse` on an iterator that incorrectly implements\n`FusedIterator` does not fuse the iterator. This commit adds a\nnote about this in the documentation of this method to increase\nawareness about this potential issue (esp. when relying on fuse\nin unsafe code).\n\nCloses #83969\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed991a36b0d41d1857bd3557f81dbb580fc377b7", "html_url": "https://github.com/rust-lang/rust/commit/ed991a36b0d41d1857bd3557f81dbb580fc377b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed991a36b0d41d1857bd3557f81dbb580fc377b7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "740e1f4e04fcb0a3508ddd32ce1b3eaf1dc77c8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/740e1f4e04fcb0a3508ddd32ce1b3eaf1dc77c8a", "html_url": "https://github.com/rust-lang/rust/commit/740e1f4e04fcb0a3508ddd32ce1b3eaf1dc77c8a"}, {"sha": "21b3b27fe4695e13f089a75e67981478b3067a00", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b3b27fe4695e13f089a75e67981478b3067a00", "html_url": "https://github.com/rust-lang/rust/commit/21b3b27fe4695e13f089a75e67981478b3067a00"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "7977d599ae725a0b88c0d8f478fe6bc5218da415", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ed991a36b0d41d1857bd3557f81dbb580fc377b7/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed991a36b0d41d1857bd3557f81dbb580fc377b7/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=ed991a36b0d41d1857bd3557f81dbb580fc377b7", "patch": "@@ -1495,7 +1495,12 @@ pub trait Iterator {\n     /// [`Some(T)`] again. `fuse()` adapts an iterator, ensuring that after a\n     /// [`None`] is given, it will always return [`None`] forever.\n     ///\n+    /// Note that the [`Fuse`] wrapper is a no-op on iterators that implement\n+    /// the [`FusedIterator`] trait. `fuse()` may therefore behave incorrectly\n+    /// if the [`FusedIterator`] trait is improperly implemented.\n+    ///\n     /// [`Some(T)`]: Some\n+    /// [`FusedIterator`]: crate::iter::FusedIterator\n     ///\n     /// # Examples\n     ///"}]}