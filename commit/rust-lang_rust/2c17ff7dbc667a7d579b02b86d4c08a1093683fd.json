{"sha": "2c17ff7dbc667a7d579b02b86d4c08a1093683fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMTdmZjdkYmM2NjdhN2Q1NzliMDJiODZkNGMwOGExMDkzNjgzZmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-03-26T16:50:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-03-27T11:10:04Z"}, "message": "Simplify and remove unnecessary use of ast_map", "tree": {"sha": "8daedd61fa7088d6e4989ae9ce9a23f05167b97d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8daedd61fa7088d6e4989ae9ce9a23f05167b97d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c17ff7dbc667a7d579b02b86d4c08a1093683fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c17ff7dbc667a7d579b02b86d4c08a1093683fd", "html_url": "https://github.com/rust-lang/rust/commit/2c17ff7dbc667a7d579b02b86d4c08a1093683fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c17ff7dbc667a7d579b02b86d4c08a1093683fd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa67deff3303a14fa43e5e4693338c0b9f409e9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa67deff3303a14fa43e5e4693338c0b9f409e9d", "html_url": "https://github.com/rust-lang/rust/commit/aa67deff3303a14fa43e5e4693338c0b9f409e9d"}], "stats": {"total": 41, "additions": 1, "deletions": 40}, "files": [{"sha": "d568773f90f81a9afdf6ec6b168e959951b80053", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/2c17ff7dbc667a7d579b02b86d4c08a1093683fd/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c17ff7dbc667a7d579b02b86d4c08a1093683fd/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=2c17ff7dbc667a7d579b02b86d4c08a1093683fd", "patch": "@@ -1064,44 +1064,7 @@ pub fn impl_self_ty(vcx: &VtableContext,\n                  -> ty_param_substs_and_ty {\n     let tcx = vcx.tcx();\n \n-    let (n_tps, region_param, raw_ty) = if did.crate == ast::local_crate {\n-        let region_param = tcx.region_paramd_items.find(&did.node).\n-                               map_consume(|x| *x);\n-        match tcx.items.find(&did.node) {\n-          Some(&ast_map::node_item(@ast::item {\n-                  node: ast::item_impl(ref ts, _, st, _),\n-                  _\n-              }, _)) => {\n-            let region_parameterization =\n-                RegionParameterization::from_variance_and_generics(\n-                    region_param,\n-                    ts);\n-            (ts.ty_params.len(),\n-             region_param,\n-             vcx.ccx.to_ty(&rscope::type_rscope(region_parameterization), st))\n-          }\n-          Some(&ast_map::node_item(@ast::item {\n-                  node: ast::item_struct(_, ref ts),\n-                  id: class_id,\n-                  _\n-              },_)) => {\n-              /* If the impl is a class, the self ty is just the class ty\n-                 (doing a no-op subst for the ty params; in the next step,\n-                 we substitute in fresh vars for them)\n-               */\n-              (ts.ty_params.len(),\n-               region_param,\n-               ty::mk_struct(tcx, local_def(class_id),\n-                      substs {\n-                        self_r: rscope::bound_self_region(region_param),\n-                        self_ty: None,\n-                        tps: ty::ty_params_to_tys(tcx, ts)\n-                      }))\n-          }\n-          _ => { tcx.sess.bug(~\"impl_self_ty: unbound item or item that \\\n-               doesn't have a self_ty\"); }\n-        }\n-    } else {\n+    let (n_tps, region_param, raw_ty) = {\n         let ity = ty::lookup_item_type(tcx, did);\n         (vec::len(*ity.bounds), ity.region_param, ity.ty)\n     };"}, {"sha": "34fe1764a07193035f04e4fdf3c19733fab8121a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c17ff7dbc667a7d579b02b86d4c08a1093683fd/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c17ff7dbc667a7d579b02b86d4c08a1093683fd/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2c17ff7dbc667a7d579b02b86d4c08a1093683fd", "patch": "@@ -3050,8 +3050,6 @@ pub impl Parser {\n         let attrs = self.parse_outer_attributes();\n         let lo = self.span.lo;\n \n-        let static_sty = spanned(lo, self.span.hi, sty_static);\n-\n         let visa = self.parse_visibility();\n         let pur = self.parse_fn_purity();\n         let ident = self.parse_ident();"}]}