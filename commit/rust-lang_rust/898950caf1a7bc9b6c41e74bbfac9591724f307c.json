{"sha": "898950caf1a7bc9b6c41e74bbfac9591724f307c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ODk1MGNhZjFhN2JjOWI2YzQxZTc0YmJmYWM5NTkxNzI0ZjMwN2M=", "commit": {"author": {"name": "Andre Richter", "email": "andre.o.richter@gmail.com", "date": "2018-08-09T20:04:55Z"}, "committer": {"name": "Andre Richter", "email": "andre.o.richter@gmail.com", "date": "2018-08-09T20:10:11Z"}, "message": "targets: aarch64: Add bare-metal aarch64 target\n\nA generic AArch64 target that can be used for writing bare-metal code\nfor 64-bit ARM architectures.", "tree": {"sha": "d0a308f0c8f1df691343d3611904939c11ff4510", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0a308f0c8f1df691343d3611904939c11ff4510"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/898950caf1a7bc9b6c41e74bbfac9591724f307c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEgYxQvhftoHGii/kEIRbBqxAvYV4FAltsn6QACgkQIRbBqxAv\nYV5+lQ/+ID7Dvz0MNAhKZt/mM4rOZ+xhBeMJJsaSIRfJR4T3PIdDk+pHcMvKZOok\nNkjbOqKY+d5/NhDhIrite2U4UEMlQlIPM9UtVkxRMnNe+7h1WKtUhYKa9NNX7nln\n8s5nA2dcaGVXUR3EnSukm8bsdbBuMNR3Rm5K0xpqwb4vxubNgZlg1O8kpQesBRw0\nZDic1IG6aLzHjRD8Cv3TWxCr0XLXObuRJbJTmOrI4jkgmLCfZ/KkBCp5KgbL0s1e\nH0zsZrybQfWEgidbw91ZyAke96jzo7eMyGZv5A2YqICcERy2x+gGkzZeiw527AkJ\nDP0qrKXM7r86ETt9Q0NO5ftRojpFELwUHkEwrhYSeNaatH11zVyxx1In0nHPBPCd\nx79aDFB7hPaI5HRJUcvs3Vt4hTYTIg+foM05zkpFEb86IaL9HihioprOdQ9Eoaur\nBUeW0MK6HUWtJe2Mib5qvvfscnD4MIGJRQQ6DPZ5PTOazfA9MSBErNHDz8zlSG6G\nmR1T0OeMpk+MCkcLCuI4GDKSevkMK1ocdijtKXE3mlOSpnu0K7RNWV2O2Q+if7wK\nbwL20MC9FG7Aa6fFoefPwOywUbW+SWf1xl7F9P05xvW8M3E2R+5qrknprE9YXdRI\n4DNljT77mHZLRVsFN8FIn3kCcnX3yZutJZdcqqVBnykpfE3f0N4=\n=+K4n\n-----END PGP SIGNATURE-----", "payload": "tree d0a308f0c8f1df691343d3611904939c11ff4510\nparent b73535f1e9c46a698527fab51b1cc9fad3f53412\nauthor Andre Richter <andre.o.richter@gmail.com> 1533845095 +0200\ncommitter Andre Richter <andre.o.richter@gmail.com> 1533845411 +0200\n\ntargets: aarch64: Add bare-metal aarch64 target\n\nA generic AArch64 target that can be used for writing bare-metal code\nfor 64-bit ARM architectures.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/898950caf1a7bc9b6c41e74bbfac9591724f307c", "html_url": "https://github.com/rust-lang/rust/commit/898950caf1a7bc9b6c41e74bbfac9591724f307c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/898950caf1a7bc9b6c41e74bbfac9591724f307c/comments", "author": {"login": "andre-richter", "id": 4130005, "node_id": "MDQ6VXNlcjQxMzAwMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4130005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andre-richter", "html_url": "https://github.com/andre-richter", "followers_url": "https://api.github.com/users/andre-richter/followers", "following_url": "https://api.github.com/users/andre-richter/following{/other_user}", "gists_url": "https://api.github.com/users/andre-richter/gists{/gist_id}", "starred_url": "https://api.github.com/users/andre-richter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andre-richter/subscriptions", "organizations_url": "https://api.github.com/users/andre-richter/orgs", "repos_url": "https://api.github.com/users/andre-richter/repos", "events_url": "https://api.github.com/users/andre-richter/events{/privacy}", "received_events_url": "https://api.github.com/users/andre-richter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andre-richter", "id": 4130005, "node_id": "MDQ6VXNlcjQxMzAwMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4130005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andre-richter", "html_url": "https://github.com/andre-richter", "followers_url": "https://api.github.com/users/andre-richter/followers", "following_url": "https://api.github.com/users/andre-richter/following{/other_user}", "gists_url": "https://api.github.com/users/andre-richter/gists{/gist_id}", "starred_url": "https://api.github.com/users/andre-richter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andre-richter/subscriptions", "organizations_url": "https://api.github.com/users/andre-richter/orgs", "repos_url": "https://api.github.com/users/andre-richter/repos", "events_url": "https://api.github.com/users/andre-richter/events{/privacy}", "received_events_url": "https://api.github.com/users/andre-richter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b73535f1e9c46a698527fab51b1cc9fad3f53412", "url": "https://api.github.com/repos/rust-lang/rust/commits/b73535f1e9c46a698527fab51b1cc9fad3f53412", "html_url": "https://github.com/rust-lang/rust/commit/b73535f1e9c46a698527fab51b1cc9fad3f53412"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "cfba0614adcd6c4b3033b27ac3acd900f874283f", "filename": "src/librustc_target/spec/aarch64_unknown_none.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/898950caf1a7bc9b6c41e74bbfac9591724f307c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898950caf1a7bc9b6c41e74bbfac9591724f307c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs?ref=898950caf1a7bc9b6c41e74bbfac9591724f307c", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Generic AArch64 target for bare-metal code\n+//\n+// Can be used in conjunction with the `target-feature` and\n+// `target-cpu` compiler flags to opt-in more hardware-specific\n+// features.\n+//\n+// For example, `-C target-cpu=cortex-a53`.\n+\n+use super::{LldFlavor, LinkerFlavor, Target, TargetOptions, PanicStrategy};\n+\n+pub fn target() -> Result<Target, String> {\n+    let opts = TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        executables: true,\n+        relocation_model: \"static\".to_string(),\n+        disable_redzone: true,\n+        linker_is_gnu: true,\n+        max_atomic_width: Some(128),\n+        panic_strategy: PanicStrategy::Abort,\n+        abi_blacklist: super::arm_base::abi_blacklist(),\n+        .. Default::default()\n+    };\n+    Ok(Target {\n+        llvm_target: \"aarch64-unknown-none\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"\".to_string(),\n+        data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+        options: opts,\n+    })\n+}"}, {"sha": "8fc1f6ac4a58111581551499b01ab6b0ebb2c1c9", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/898950caf1a7bc9b6c41e74bbfac9591724f307c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/898950caf1a7bc9b6c41e74bbfac9591724f307c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=898950caf1a7bc9b6c41e74bbfac9591724f307c", "patch": "@@ -379,6 +379,8 @@ supported_targets! {\n     (\"x86_64-unknown-hermit\", x86_64_unknown_hermit),\n \n     (\"riscv32imac-unknown-none-elf\", riscv32imac_unknown_none_elf),\n+\n+    (\"aarch64-unknown-none\", aarch64_unknown_none),\n }\n \n /// Everything `rustc` knows about how to compile for a specific target."}]}