{"sha": "66bd1ffa327b4b1691a260107ef53a7ef112c8ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YmQxZmZhMzI3YjRiMTY5MWEyNjAxMDdlZjUzYTdlZjExMmM4ZWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T00:50:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T00:50:40Z"}, "message": "no-dump for perf", "tree": {"sha": "7296b0ac7ea99db26c29df996a85da8f446d054e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7296b0ac7ea99db26c29df996a85da8f446d054e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66bd1ffa327b4b1691a260107ef53a7ef112c8ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66bd1ffa327b4b1691a260107ef53a7ef112c8ea", "html_url": "https://github.com/rust-lang/rust/commit/66bd1ffa327b4b1691a260107ef53a7ef112c8ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66bd1ffa327b4b1691a260107ef53a7ef112c8ea/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a7daa042c5f652cd724de55a056f9785a22a85", "url": "https://api.github.com/repos/rust-lang/rust/commits/50a7daa042c5f652cd724de55a056f9785a22a85", "html_url": "https://github.com/rust-lang/rust/commit/50a7daa042c5f652cd724de55a056f9785a22a85"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "e5b1aae46ec9fc36ea34caa261f7d4cbd37317d9", "filename": "cli/src/main.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/66bd1ffa327b4b1691a260107ef53a7ef112c8ea/cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bd1ffa327b4b1691a260107ef53a7ef112c8ea/cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cli%2Fsrc%2Fmain.rs?ref=66bd1ffa327b4b1691a260107ef53a7ef112c8ea", "patch": "@@ -32,15 +32,20 @@ fn main() -> Result<()> {\n                         .takes_value(true),\n                 ),\n         )\n-        .subcommand(SubCommand::with_name(\"parse\"))\n+        .subcommand(\n+            SubCommand::with_name(\"parse\")\n+                .arg(Arg::with_name(\"no-dump\").long(\"--no-dump\"))\n+        )\n         .subcommand(SubCommand::with_name(\"symbols\"))\n         .get_matches();\n     match matches.subcommand() {\n-        (\"parse\", _) => {\n+        (\"parse\", Some(matches)) => {\n             let start = Instant::now();\n             let file = file()?;\n             let elapsed = start.elapsed();\n-            println!(\"{}\", file.syntax_tree());\n+            if !matches.is_present(\"no-dump\") {\n+                println!(\"{}\", file.syntax_tree());\n+            }\n             eprintln!(\"parsing: {:?}\", elapsed);\n         }\n         (\"symbols\", _) => {"}]}