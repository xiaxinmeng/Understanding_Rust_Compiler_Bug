{"sha": "4edf7b8c3478365a3c327d7fe340447f9d328d37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZGY3YjhjMzQ3ODM2NWEzYzMyN2Q3ZmUzNDA0NDdmOWQzMjhkMzc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-04-02T17:25:29Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-04-05T19:40:36Z"}, "message": "Fix android problems with newly fixed rpass-full variable definition.\n\nFirst, documented the existing `CTEST_DISABLE_$(TEST_GROUP)` pattern\nfor conditionally disabling tests based on missing host features.\n\nAdded variant of above, `CTEST_DISABLE_NONSELFHOST_$(TEST_GROUP)`,\nwhich is only queried in contexts where the target is not on the\nCFG_HOST list (which I interpret as the list of targets that our host\ncan compatibly emulate; e.g. the example that i686 and x86_64 can in\ntheory run each others' tests).\n\nDriveby fix: Remove redundant copy of\ncheck-stage$(1)-T-$(2)-H-$(3)-$(4)-exec dependency declaration.", "tree": {"sha": "e86fee4581f44fc1cd416ee68063e5548bd211d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e86fee4581f44fc1cd416ee68063e5548bd211d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4edf7b8c3478365a3c327d7fe340447f9d328d37", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4edf7b8c3478365a3c327d7fe340447f9d328d37", "html_url": "https://github.com/rust-lang/rust/commit/4edf7b8c3478365a3c327d7fe340447f9d328d37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4edf7b8c3478365a3c327d7fe340447f9d328d37/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cbd98e43f6436aaddd4f83860609f91dc517c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cbd98e43f6436aaddd4f83860609f91dc517c92", "html_url": "https://github.com/rust-lang/rust/commit/3cbd98e43f6436aaddd4f83860609f91dc517c92"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "f1dc0fd561d12f0b4f7636ff52d54e7e0e80a19c", "filename": "mk/tests.mk", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/4edf7b8c3478365a3c327d7fe340447f9d328d37/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4edf7b8c3478365a3c327d7fe340447f9d328d37/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=4edf7b8c3478365a3c327d7fe340447f9d328d37", "patch": "@@ -370,8 +370,6 @@ $(foreach host,$(CFG_HOST), \\\n define DEF_TEST_CRATE_RULES\n check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n \n-check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n-\n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t\t$(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2))\n \t@$$(call E, run: $$<)\n@@ -503,6 +501,10 @@ CTEST_BUILD_BASE_codegen = codegen\n CTEST_MODE_codegen = codegen\n CTEST_RUNTOOL_codegen = $(CTEST_RUNTOOL)\n \n+# CTEST_DISABLE_$(TEST_GROUP), if set, will cause the test group to be\n+# disabled and the associated message to be printed as a warning\n+# during attempts to run those tests.\n+\n ifeq ($(CFG_GDB),)\n CTEST_DISABLE_debuginfo = \"no gdb found\"\n endif\n@@ -515,6 +517,14 @@ ifeq ($(CFG_OSTYPE),apple-darwin)\n CTEST_DISABLE_debuginfo = \"gdb on darwing needs root\"\n endif\n \n+# CTEST_DISABLE_NONSELFHOST_$(TEST_GROUP), if set, will cause that\n+# test group to be disabled *unless* the target is able to build a\n+# compiler (i.e. when the target triple is in the set of of host\n+# triples).  The associated message will be printed as a warning\n+# during attempts to run those tests.\n+\n+CTEST_DISABLE_NONSELFHOST_rpass-full = \"run-pass-full suite is unavailable when cross-compiling.\"\n+\n define DEF_CTEST_VARS\n \n # All the per-stage build rules you might want to call from the\n@@ -587,8 +597,28 @@ CTEST_ARGS$(1)-T-$(2)-H-$(3)-$(4) := \\\n \n check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n \n-ifeq ($$(CTEST_DISABLE_$(4)),)\n+# CTEST_DONT_RUN_$(1)-T-$(2)-H-$(3)-$(4)\n+# Goal: leave this variable as empty string if we should run the test.\n+# Otherwise, set it to the reason we are not running the test.\n+# (Encoded as a separate variable because GNU make does not have a\n+# good way to express OR on ifeq commands)\n \n+ifneq ($$(CTEST_DISABLE_$(4)),)\n+# Test suite is disabled for all configured targets.\n+CTEST_DONT_RUN_$(1)-T-$(2)-H-$(3)-$(4) := $$(CTEST_DISABLE_$(4))\n+else\n+# else, check if non-self-hosted target (i.e. target not-in hosts) ...\n+ifeq ($$(findstring $(2),$$(CFG_HOST)),)\n+# ... if so, then check if this test suite is disabled for non-selfhosts.\n+ifneq ($$(CTEST_DISABLE_NONSELFHOST_$(4)),)\n+# Test suite is disabled for this target.\n+CTEST_DONT_RUN_$(1)-T-$(2)-H-$(3)-$(4) := $$(CTEST_DISABLE_NONSELFHOST_$(4))\n+endif\n+endif\n+# Neither DISABLE nor DISABLE_NONSELFHOST is set ==> okay, run the test.\n+endif\n+\n+ifeq ($$(CTEST_DONT_RUN_$(1)-T-$(2)-H-$(3)-$(4)),)\n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t\t$$(TEST_SREQ$(1)_T_$(2)_H_$(3)) \\\n                 $$(CTEST_DEPS_$(4)_$(1)-T-$(2)-H-$(3))\n@@ -600,11 +630,9 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \n else\n \n-$$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n-\t\t$$(TEST_SREQ$(1)_T_$(2)_H_$(3)) \\\n-                $$(CTEST_DEPS_$(4)_$(1)-T-$(2)-H-$(3))\n+$$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)):\n \t@$$(call E, run $(4) [$(2)]: $$<)\n-\t@$$(call E, warning: tests disabled: $$(CTEST_DISABLE_$(4)))\n+\t@$$(call E, warning: tests disabled: $$(CTEST_DONT_RUN_$(1)-T-$(2)-H-$(3)-$(4)))\n \ttouch $$@\n \n endif"}]}