{"sha": "318d6c259dd2a610ca70b89ca5a3ea073518a884", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxOGQ2YzI1OWRkMmE2MTBjYTcwYjg5Y2E1YTNlYTA3MzUxOGE4ODQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-07T04:46:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-07T04:46:08Z"}, "message": "Rollup merge of #67909 - varkor:obsolete-const-print, r=davidtwco\n\nFix ICE in const pretty printing and resolve FIXME\n\nConsts now have a `fmt::Display` impl, so we can just use that to pretty-print.\n\nThis resolves an ICE in https://github.com/rust-lang/rust/issues/61936, though it hits more ICEs afterwards. I couldn't find a test case that was resolved by this that didn't hit errors later on.", "tree": {"sha": "8445f11af1e9497bf9ed47f52a70a10fdf2cb16d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8445f11af1e9497bf9ed47f52a70a10fdf2cb16d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/318d6c259dd2a610ca70b89ca5a3ea073518a884", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFA0RCRBK7hj4Ov3rIwAAdHIIAFKJuoRj0sI5eWGBRp3Pa1ZL\npigVQ8ZfSzdYP7QMtmqeuDeQeXzSs6nsI9klgD17znM6+kPckYg3fXdMFjNU0Eu7\nrd+9VmyTj99GC1wMtsoj4108UJ4ZJvN+ChsJA9pPfEMluIl5m0Bl0IqQmH0H6pBq\nTr0pSrLjMNnlzp7Cwfa5YrH1oqtbQdp3591GaNoKufiCYs1Uo7Be7eoVollpPpkS\ng5tPF4kZEMci14TOBKh0fk5g06SNI4uRjmWHU8ixLZlcZ1aKN7oZzmfQ+qV1qqDK\nvAc/k2Sr90BBoBHIECIzpb84nJI2v0W2oFkDrtMuEZOpVPAradY0NfzjhmupGt8=\n=ew1v\n-----END PGP SIGNATURE-----\n", "payload": "tree 8445f11af1e9497bf9ed47f52a70a10fdf2cb16d\nparent c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79\nparent 8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578372368 +0900\ncommitter GitHub <noreply@github.com> 1578372368 +0900\n\nRollup merge of #67909 - varkor:obsolete-const-print, r=davidtwco\n\nFix ICE in const pretty printing and resolve FIXME\n\nConsts now have a `fmt::Display` impl, so we can just use that to pretty-print.\n\nThis resolves an ICE in https://github.com/rust-lang/rust/issues/61936, though it hits more ICEs afterwards. I couldn't find a test case that was resolved by this that didn't hit errors later on.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/318d6c259dd2a610ca70b89ca5a3ea073518a884", "html_url": "https://github.com/rust-lang/rust/commit/318d6c259dd2a610ca70b89ca5a3ea073518a884", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/318d6c259dd2a610ca70b89ca5a3ea073518a884/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "url": "https://api.github.com/repos/rust-lang/rust/commits/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79", "html_url": "https://github.com/rust-lang/rust/commit/c07204b1d1eb9144c8be560a8f5d7f9aed0a5b79"}, {"sha": "8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8", "html_url": "https://github.com/rust-lang/rust/commit/8f94d9bb0828a2dfcc1dd3258de7775b9bae2cc8"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "7605d44c7f30fd924f0a8121768ccec998a76115", "filename": "src/librustc/ty/print/obsolete.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/318d6c259dd2a610ca70b89ca5a3ea073518a884/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/318d6c259dd2a610ca70b89ca5a3ea073518a884/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fobsolete.rs?ref=318d6c259dd2a610ca70b89ca5a3ea073518a884", "patch": "@@ -166,19 +166,12 @@ impl DefPathBasedNames<'tcx> {\n     }\n \n     // Pushes the the name of the specified const to the provided string.\n-    // If `debug` is true, usually-unprintable consts (such as `Infer`) will be printed,\n-    // as well as the unprintable types of constants (see `push_type_name` for more details).\n-    pub fn push_const_name(&self, c: &Const<'tcx>, output: &mut String, debug: bool) {\n-        if let ty::ConstKind::Value(_) = c.val {\n-            // FIXME(const_generics): we could probably do a better job here.\n-            write!(output, \"{:?}\", c).unwrap()\n-        } else if debug {\n-            write!(output, \"{:?}\", c).unwrap()\n-        } else {\n-            bug!(\"DefPathBasedNames: trying to create const name for unexpected const: {:?}\", c,);\n-        }\n+    // If `debug` is true, the unprintable types of constants will be printed with `fmt::Debug`\n+    // (see `push_type_name` for more details).\n+    pub fn push_const_name(&self, ct: &Const<'tcx>, output: &mut String, debug: bool) {\n+        write!(output, \"{}\", ct).unwrap();\n         output.push_str(\": \");\n-        self.push_type_name(c.ty, output, debug);\n+        self.push_type_name(ct.ty, output, debug);\n     }\n \n     pub fn push_def_path(&self, def_id: DefId, output: &mut String) {"}]}