{"sha": "1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkM2RmYTUzMDFmNTllODY1NDdhNDAzNGZiNjU0YzRlZmI0N2FjMGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-18T00:35:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-18T00:35:16Z"}, "message": "Auto merge of #37237 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 6 pull requests\n\n- Successful merges: #37172, #37177, #37189, #37194, #37200, #37215\n- Failed merges:", "tree": {"sha": "263b02a1cec4bb38e915bf02672ac3496536c201", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/263b02a1cec4bb38e915bf02672ac3496536c201"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "html_url": "https://github.com/rust-lang/rust/commit/1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0111758eb4f215db4ec26f809ef3edf5dfb66f5", "html_url": "https://github.com/rust-lang/rust/commit/e0111758eb4f215db4ec26f809ef3edf5dfb66f5"}, {"sha": "b097790182dd0868812897d3fd1be2e6a5083a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/b097790182dd0868812897d3fd1be2e6a5083a16", "html_url": "https://github.com/rust-lang/rust/commit/b097790182dd0868812897d3fd1be2e6a5083a16"}], "stats": {"total": 52, "additions": 14, "deletions": 38}, "files": [{"sha": "e8f17a41cbeabf30c9b1862aa7daa281ff6a8d33", "filename": "src/doc/book/const-and-static.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Fdoc%2Fbook%2Fconst-and-static.md", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Fdoc%2Fbook%2Fconst-and-static.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fconst-and-static.md?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -1,4 +1,4 @@\n-% `const` and `static`\n+% const and static\n \n Rust has a way of defining constants with the `const` keyword:\n "}, {"sha": "f3d78c20a4d6be2432e810c2f5fc62415b80a864", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -822,7 +822,7 @@ impl<T> Vec<T> {\n     pub fn dedup_by<F>(&mut self, mut same_bucket: F) where F: FnMut(&mut T, &mut T) -> bool {\n         unsafe {\n             // Although we have a mutable reference to `self`, we cannot make\n-            // *arbitrary* changes. The `PartialEq` comparisons could panic, so we\n+            // *arbitrary* changes. The `same_bucket` calls could panic, so we\n             // must ensure that the vector is in a valid state at all time.\n             //\n             // The way that we handle this is by using swaps; we iterate"}, {"sha": "6972bdac5e1bc4fae4227768782f47ac4495fadb", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -729,6 +729,10 @@ pub fn version(binary: &str, matches: &getopts::Matches) {\n         println!(\"commit-date: {}\", unw(commit_date_str()));\n         println!(\"host: {}\", config::host_triple());\n         println!(\"release: {}\", unw(release_str()));\n+        unsafe {\n+            println!(\"LLVM version: {}.{}\",\n+                     llvm::LLVMRustVersionMajor(), llvm::LLVMRustVersionMinor());\n+        }\n     }\n }\n "}, {"sha": "302c0ce6c5408e682f0072b6c910873ac13b2211", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -1817,8 +1817,6 @@ extern {\n                                            Ty: DIType,\n                                            AlwaysPreserve: bool,\n                                            Flags: c_uint,\n-                                           AddrOps: *const i64,\n-                                           AddrOpsCount: c_uint,\n                                            ArgNo: c_uint)\n                                            -> DIVariable;\n \n@@ -1855,15 +1853,6 @@ extern {\n                                                InsertAtEnd: BasicBlockRef)\n                                                -> ValueRef;\n \n-    pub fn LLVMRustDIBuilderInsertDeclareBefore(Builder: DIBuilderRef,\n-                                                Val: ValueRef,\n-                                                VarInfo: DIVariable,\n-                                                AddrOps: *const i64,\n-                                                AddrOpsCount: c_uint,\n-                                                DL: ValueRef,\n-                                                InsertBefore: ValueRef)\n-                                                -> ValueRef;\n-\n     pub fn LLVMRustDIBuilderCreateEnumerator(Builder: DIBuilderRef,\n                                              Name: *const c_char,\n                                              Val: u64)"}, {"sha": "813915bfd6eab2290b6c92ecd022453612fb84e4", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -482,8 +482,6 @@ pub fn declare_local<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                     type_metadata,\n                     cx.sess().opts.optimize != config::OptLevel::No,\n                     0,\n-                    address_operations.as_ptr(),\n-                    address_operations.len() as c_uint,\n                     argument_index)\n             };\n             source_loc::set_debug_location(cx, None,"}, {"sha": "a1909b0f957892dd69803768c1d1a4b9bcfe4509", "filename": "src/libstd/error.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -65,9 +65,11 @@ use string;\n pub trait Error: Debug + Display {\n     /// A short description of the error.\n     ///\n-    /// The description should not contain newlines or sentence-ending\n-    /// punctuation, to facilitate embedding in larger user-facing\n-    /// strings.\n+    /// The description should only be used for a simple message.\n+    /// It should not contain newlines or sentence-ending punctuation,\n+    /// to facilitate embedding in larger user-facing strings.\n+    /// For showing formatted error messages with more information see\n+    /// [Display](https://doc.rust-lang.org/std/fmt/trait.Display.html).\n     ///\n     /// # Examples\n     ///"}, {"sha": "369388caa0496046bafe5b8e5d05c051578fd431", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -562,8 +562,6 @@ extern \"C\" LLVMRustMetadataRef LLVMRustDIBuilderCreateVariable(\n     LLVMRustMetadataRef Ty,\n     bool AlwaysPreserve,\n     unsigned Flags,\n-    int64_t* AddrOps,\n-    unsigned AddrOpsCount,\n     unsigned ArgNo) {\n #if LLVM_VERSION_GE(3, 8)\n     if (Tag == 0x100) { // DW_TAG_auto_variable\n@@ -645,23 +643,6 @@ extern \"C\" LLVMValueRef LLVMRustDIBuilderInsertDeclareAtEnd(\n         unwrap(InsertAtEnd)));\n }\n \n-extern \"C\" LLVMValueRef LLVMRustDIBuilderInsertDeclareBefore(\n-    LLVMRustDIBuilderRef Builder,\n-    LLVMValueRef Val,\n-    LLVMRustMetadataRef VarInfo,\n-    int64_t* AddrOps,\n-    unsigned AddrOpsCount,\n-    LLVMValueRef DL,\n-    LLVMValueRef InsertBefore) {\n-    return wrap(Builder->insertDeclare(\n-        unwrap(Val),\n-        unwrap<DILocalVariable>(VarInfo),\n-        Builder->createExpression(\n-          llvm::ArrayRef<int64_t>(AddrOps, AddrOpsCount)),\n-        DebugLoc(cast<MDNode>(unwrap<MetadataAsValue>(DL)->getMetadata())),\n-        unwrap<Instruction>(InsertBefore)));\n-}\n-\n extern \"C\" LLVMRustMetadataRef LLVMRustDIBuilderCreateEnumerator(\n     LLVMRustDIBuilderRef Builder,\n     const char* Name,\n@@ -1302,7 +1283,7 @@ static LLVMLinkage from_rust(LLVMRustLinkage linkage) {\n             return LLVMCommonLinkage;\n         default:\n             llvm_unreachable(\"Invalid LLVMRustLinkage value!\");\n-    } \n+    }\n }\n \n extern \"C\" LLVMRustLinkage LLVMRustGetLinkage(LLVMValueRef V) {"}, {"sha": "e6efd45cad1868b2fa87af99ffd19fc702bbff49", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d3dfa5301f59e86547a4034fb654c4efb47ac0e/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=1d3dfa5301f59e86547a4034fb654c4efb47ac0e", "patch": "@@ -15,6 +15,8 @@\n #![feature(test)]\n #![feature(libc)]\n \n+#![cfg_attr(stage0, feature(question_mark))]\n+\n #![deny(warnings)]\n \n extern crate libc;"}]}