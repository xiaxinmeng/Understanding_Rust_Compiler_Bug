{"sha": "dbdeff659fb30fd845490cf215b5733e1e064d46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZGVmZjY1OWZiMzBmZDg0NTQ5MGNmMjE1YjU3MzNlMWUwNjRkNDY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-23T18:02:04Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-23T18:04:14Z"}, "message": "rt: Factor out the logic that handles the various magic debug environment variables", "tree": {"sha": "69d321dad8396d8f2ca5d61255253d30e50249b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69d321dad8396d8f2ca5d61255253d30e50249b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbdeff659fb30fd845490cf215b5733e1e064d46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdeff659fb30fd845490cf215b5733e1e064d46", "html_url": "https://github.com/rust-lang/rust/commit/dbdeff659fb30fd845490cf215b5733e1e064d46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbdeff659fb30fd845490cf215b5733e1e064d46/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8007b5535938be4f8b774177bc96dda2e9f5a71", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8007b5535938be4f8b774177bc96dda2e9f5a71", "html_url": "https://github.com/rust-lang/rust/commit/f8007b5535938be4f8b774177bc96dda2e9f5a71"}], "stats": {"total": 54, "additions": 39, "deletions": 15}, "files": [{"sha": "4befb36d8198ca3d22124ce705f6254c9a74c9ea", "filename": "src/rt/rust_cc.cpp", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dbdeff659fb30fd845490cf215b5733e1e064d46/src%2Frt%2Frust_cc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/dbdeff659fb30fd845490cf215b5733e1e064d46/src%2Frt%2Frust_cc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_cc.cpp?ref=dbdeff659fb30fd845490cf215b5733e1e064d46", "patch": "@@ -1,6 +1,7 @@\n // Rust cycle collector. Temporary, but will probably stick around for some\n // time until LLVM's GC infrastructure is more mature.\n \n+#include \"rust_debug.h\"\n #include \"rust_gc.h\"\n #include \"rust_internal.h\"\n #include \"rust_shape.h\"\n@@ -434,14 +435,8 @@ do_cc(rust_task *task) {\n \n void\n maybe_cc(rust_task *task) {\n-    // FIXME: We ought to lock this.\n-    static int zeal = -1;\n-    if (zeal == -1) {\n-        char *ev = getenv(\"RUST_CC_ZEAL\");\n-        zeal = ev && ev[0] != '\\0' && ev[0] != '0';\n-    }\n-\n-    if (zeal)\n+    static debug::flag zeal(\"RUST_CC_ZEAL\");\n+    if (*zeal)\n         do_cc(task);\n }\n "}, {"sha": "f7c444324f750ffe688397a1016544f96677dc14", "filename": "src/rt/rust_debug.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/dbdeff659fb30fd845490cf215b5733e1e064d46/src%2Frt%2Frust_debug.h", "raw_url": "https://github.com/rust-lang/rust/raw/dbdeff659fb30fd845490cf215b5733e1e064d46/src%2Frt%2Frust_debug.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_debug.h?ref=dbdeff659fb30fd845490cf215b5733e1e064d46", "patch": "@@ -0,0 +1,33 @@\n+// Routines useful when debugging the Rust runtime.\n+\n+#ifndef RUST_DEBUG_H\n+#define RUST_DEBUG_H\n+\n+#include <cstdlib>\n+\n+namespace debug {\n+\n+class flag {\n+private:\n+    const char *name;\n+    bool valid;\n+    bool value;\n+\n+public:\n+    flag(const char *in_name) : name(in_name), valid(false) {}\n+\n+    bool operator*() {\n+        // FIXME: We ought to lock this.\n+        if (!valid) {\n+            char *ev = getenv(name);\n+            value = ev && ev[0] != '\\0' && ev[0] != '0';\n+            valid = true;\n+        }\n+        return value;\n+    }\n+};\n+\n+}   // end namespace debug\n+\n+#endif\n+"}, {"sha": "6e698de59dbde60b6381493d531447af085b7aae", "filename": "src/rt/rust_gc.cpp", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dbdeff659fb30fd845490cf215b5733e1e064d46/src%2Frt%2Frust_gc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/dbdeff659fb30fd845490cf215b5733e1e064d46/src%2Frt%2Frust_gc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gc.cpp?ref=dbdeff659fb30fd845490cf215b5733e1e064d46", "patch": "@@ -7,6 +7,7 @@\n #include <stdint.h>\n \n #include \"rust_abi.h\"\n+#include \"rust_debug.h\"\n #include \"rust_gc.h\"\n #include \"rust_internal.h\"\n #include \"rust_shape.h\"\n@@ -180,14 +181,9 @@ maybe_gc(rust_task *task) {\n     if (*safe_point_data == NULL)\n         return;\n \n-    // FIXME: We ought to lock this.\n-    static int zeal = -1;\n-    if (zeal == -1) {\n-        char *ev = getenv(\"RUST_GC_ZEAL\");\n-        zeal = ev && ev[0] != '\\0' && ev[0] != '0';\n-    }\n+    static debug::flag zeal(\"RUST_GC_ZEAL\");\n \n-    if (zeal) {\n+    if (*zeal) {\n         gc gc(task);\n         gc.run();\n     }"}]}