{"sha": "c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNGFhNGVkMGNlNjFkMjU3YWIxMGI0ZGJkYWE2NGZhNWNhZDM3YjE=", "commit": {"author": {"name": "Inokentiy Babushkin", "email": "twk@twki.de", "date": "2017-06-11T08:19:46Z"}, "committer": {"name": "Inokentiy Babushkin", "email": "twk@twki.de", "date": "2017-06-11T09:47:00Z"}, "message": "Improved lazy external source loading and inserted calls.", "tree": {"sha": "f354bf43f9c4a8fd86cdbe29e9b847f22424a768", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f354bf43f9c4a8fd86cdbe29e9b847f22424a768"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXezFNCHL3+3lgSPSfvyOxSJN6OwFAlk9EZcACgkQfvyOxSJN\n6OyQgQ/+LoBupuczcSxGVBEw8DyiUb7nPNCZoznYWaQwZZihbhHCVQfn9HViSr48\nRFsUcfPfkOpnzjoNk5lHiJHhMauNXATOjh/URkQJRB/vPVsYOe1qE6+jBUdrcL8Y\nmH05R5DGyDjnk6Wt2Q6Y+VSN54su+m08RITqlpOXVvS5HYoJY18KoAeBEpiCRYNm\nmVMwOU71YLhO1cZIgcyYYD91VgZXNK45duwWwsqNiY6xWkXWkbQV5A7FiHtFd2Xe\nWd8t7ZqdaJB2/kf2fj8tsFeZYFIJyZvXnuJxdNjwWbntz8pWqtWkrevrAW4tYPR8\nHRpc+KsseGWu/gvjZrvLh9d0nIDJzn9xIVPkoW7yHgSPuCD/M26Nj/qDpfJeS4pA\nVODCOJg93RtQIhDIvqMN0br9fH0SL3K74ssth0dP7YOjq6INN/ZxXZxZ890liKbs\nS+fG/QXys2le6OtfrMdXExx+LQeYsP5TA0C75sfOd1OkWgfgF+YKit54+W8ACeC6\npucdRe6MxDfl2bgnZD+NMX+4SE17kvGthZYjWQARbuhapRGJ8UBTh0GbnoN/qUDd\n2bCNTqgEaEzCgbcjGiVvwSIc23w5loqfP+CKHoyjt4MtOka9YjpNoEZ6uZZRh1/O\nH8qLJwJiSGsYMl46r6Zi13grIO3ebx1GQ3Il8lC/rchbVRB8TSw=\n=Gi4d\n-----END PGP SIGNATURE-----", "payload": "tree f354bf43f9c4a8fd86cdbe29e9b847f22424a768\nparent c2c31b2db33e0d0b5356a0c9e032269034cdc70a\nauthor Inokentiy Babushkin <twk@twki.de> 1497169186 +0200\ncommitter Inokentiy Babushkin <twk@twki.de> 1497174420 +0200\n\nImproved lazy external source loading and inserted calls.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "html_url": "https://github.com/rust-lang/rust/commit/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/comments", "author": {"login": "ibabushkin", "id": 10811417, "node_id": "MDQ6VXNlcjEwODExNDE3", "avatar_url": "https://avatars.githubusercontent.com/u/10811417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibabushkin", "html_url": "https://github.com/ibabushkin", "followers_url": "https://api.github.com/users/ibabushkin/followers", "following_url": "https://api.github.com/users/ibabushkin/following{/other_user}", "gists_url": "https://api.github.com/users/ibabushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibabushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibabushkin/subscriptions", "organizations_url": "https://api.github.com/users/ibabushkin/orgs", "repos_url": "https://api.github.com/users/ibabushkin/repos", "events_url": "https://api.github.com/users/ibabushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ibabushkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibabushkin", "id": 10811417, "node_id": "MDQ6VXNlcjEwODExNDE3", "avatar_url": "https://avatars.githubusercontent.com/u/10811417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibabushkin", "html_url": "https://github.com/ibabushkin", "followers_url": "https://api.github.com/users/ibabushkin/followers", "following_url": "https://api.github.com/users/ibabushkin/following{/other_user}", "gists_url": "https://api.github.com/users/ibabushkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibabushkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibabushkin/subscriptions", "organizations_url": "https://api.github.com/users/ibabushkin/orgs", "repos_url": "https://api.github.com/users/ibabushkin/repos", "events_url": "https://api.github.com/users/ibabushkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ibabushkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2c31b2db33e0d0b5356a0c9e032269034cdc70a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2c31b2db33e0d0b5356a0c9e032269034cdc70a", "html_url": "https://github.com/rust-lang/rust/commit/c2c31b2db33e0d0b5356a0c9e032269034cdc70a"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "fc4d39ac482d9637cb08b98d964de12f3f683590", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "patch": "@@ -131,7 +131,7 @@ impl EmitterWriter {\n         }\n     }\n \n-    fn preprocess_annotations(&self, msp: &MultiSpan) -> Vec<FileWithAnnotatedLines> {\n+    fn preprocess_annotations(&mut self, msp: &MultiSpan) -> Vec<FileWithAnnotatedLines> {\n         fn add_annotation_to_file(file_vec: &mut Vec<FileWithAnnotatedLines>,\n                                   file: Rc<FileMap>,\n                                   line_index: usize,\n@@ -175,6 +175,9 @@ impl EmitterWriter {\n                 if span_label.span == DUMMY_SP {\n                     continue;\n                 }\n+\n+                cm.load_source_for_filemap(cm.span_to_filename(span_label.span));\n+\n                 let lo = cm.lookup_char_pos(span_label.span.lo);\n                 let mut hi = cm.lookup_char_pos(span_label.span.hi);\n "}, {"sha": "a2a20424d6b4dece0e58ed4999bba553b8d83349", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "patch": "@@ -103,7 +103,7 @@ pub trait CodeMapper {\n     fn span_to_filename(&self, sp: Span) -> FileName;\n     fn merge_spans(&self, sp_lhs: Span, sp_rhs: Span) -> Option<Span>;\n     fn call_span_if_macro(&self, sp: Span) -> Span;\n-    fn load_source_for_filemap(&mut self, file: FileName) -> bool;\n+    fn load_source_for_filemap(&self, file: FileName) -> bool;\n }\n \n impl CodeSuggestion {"}, {"sha": "fb78b18b89819c791845884118ff85d183250e7b", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "patch": "@@ -559,7 +559,7 @@ impl CodeMapper for CodeMap {\n         }\n         sp\n     }\n-    fn load_source_for_filemap(&mut self, filename: FileName) -> bool {\n+    fn load_source_for_filemap(&self, filename: FileName) -> bool {\n         let file_map = if let Some(fm) = self.get_filemap(&filename) {\n             fm\n         } else {"}, {"sha": "9e545b81390591acee6d0b7368929e304275dea9", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=c04aa4ed0ce61d257ab10b4dbdaa64fa5cad37b1", "patch": "@@ -374,14 +374,35 @@ pub struct MultiByteChar {\n     pub bytes: usize,\n }\n \n+/// The state of the lazy external source loading mechanism of a FileMap.\n #[derive(PartialEq, Eq, Clone)]\n pub enum ExternalSource {\n+    /// The external source has been loaded already.\n     Present(String),\n+    /// No attempt has been made to load the external source.\n     AbsentOk,\n+    /// A failed attempt has been made to load the external source.\n     AbsentErr,\n+    /// No external source has to be loaded, since the FileMap represents a local crate.\n     Unneeded,\n }\n \n+impl ExternalSource {\n+    pub fn is_absent(&self) -> bool {\n+        match *self {\n+            ExternalSource::Present(_) => false,\n+            _ => true,\n+        }\n+    }\n+\n+    pub fn get_source(&self) -> Option<&str> {\n+        match *self {\n+            ExternalSource::Present(ref src) => Some(src),\n+            _ => None,\n+        }\n+    }\n+}\n+\n /// A single source in the CodeMap.\n #[derive(Clone)]\n pub struct FileMap {\n@@ -620,7 +641,7 @@ impl FileMap {\n     }\n \n     pub fn is_imported(&self) -> bool {\n-        self.src.is_none()\n+        self.src.is_none() // TODO: change to something more sensible\n     }\n \n     pub fn byte_length(&self) -> u32 {"}]}