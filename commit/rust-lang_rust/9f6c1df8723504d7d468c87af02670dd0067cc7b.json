{"sha": "9f6c1df8723504d7d468c87af02670dd0067cc7b", "node_id": "C_kwDOAAsO6NoAKDlmNmMxZGY4NzIzNTA0ZDdkNDY4Yzg3YWYwMjY3MGRkMDA2N2NjN2I", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T22:06:29Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T22:06:29Z"}, "message": "Stop implementing _with_overflow intrinsics in codegen backends.", "tree": {"sha": "c5184372a66e2aed1726a4c587295c3ceb527c65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5184372a66e2aed1726a4c587295c3ceb527c65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f6c1df8723504d7d468c87af02670dd0067cc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6c1df8723504d7d468c87af02670dd0067cc7b", "html_url": "https://github.com/rust-lang/rust/commit/9f6c1df8723504d7d468c87af02670dd0067cc7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f6c1df8723504d7d468c87af02670dd0067cc7b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e795bdf03bd75cb9e502f5cdeac693da2f24dc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e795bdf03bd75cb9e502f5cdeac693da2f24dc7", "html_url": "https://github.com/rust-lang/rust/commit/7e795bdf03bd75cb9e502f5cdeac693da2f24dc7"}], "stats": {"total": 50, "additions": 0, "deletions": 50}, "files": [{"sha": "6feb3a7732e1295c8f65bb573b57cadca0ccda5c", "filename": "compiler/rustc_codegen_cranelift/src/intrinsics/mod.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9f6c1df8723504d7d468c87af02670dd0067cc7b/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f6c1df8723504d7d468c87af02670dd0067cc7b/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs?ref=9f6c1df8723504d7d468c87af02670dd0067cc7b", "patch": "@@ -493,20 +493,6 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             let res = crate::num::codegen_int_binop(fx, bin_op, x, y);\n             ret.write_cvalue(fx, res);\n         }\n-        sym::add_with_overflow | sym::sub_with_overflow | sym::mul_with_overflow => {\n-            intrinsic_args!(fx, args => (x, y); intrinsic);\n-\n-            assert_eq!(x.layout().ty, y.layout().ty);\n-            let bin_op = match intrinsic {\n-                sym::add_with_overflow => BinOp::Add,\n-                sym::sub_with_overflow => BinOp::Sub,\n-                sym::mul_with_overflow => BinOp::Mul,\n-                _ => unreachable!(),\n-            };\n-\n-            let res = crate::num::codegen_checked_int_binop(fx, bin_op, x, y);\n-            ret.write_cvalue(fx, res);\n-        }\n         sym::saturating_add | sym::saturating_sub => {\n             intrinsic_args!(fx, args => (lhs, rhs); intrinsic);\n "}, {"sha": "7af7fc92dbce2e0d3906927516d355d5231a5bf3", "filename": "compiler/rustc_codegen_ssa/src/mir/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9f6c1df8723504d7d468c87af02670dd0067cc7b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f6c1df8723504d7d468c87af02670dd0067cc7b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs?ref=9f6c1df8723504d7d468c87af02670dd0067cc7b", "patch": "@@ -218,9 +218,6 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 args[1].val.unaligned_volatile_store(bx, dst);\n                 return;\n             }\n-            sym::add_with_overflow\n-            | sym::sub_with_overflow\n-            | sym::mul_with_overflow\n             | sym::unchecked_div\n             | sym::unchecked_rem\n             | sym::unchecked_shl\n@@ -232,28 +229,6 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 let ty = arg_tys[0];\n                 match int_type_width_signed(ty, bx.tcx()) {\n                     Some((_width, signed)) => match name {\n-                        sym::add_with_overflow\n-                        | sym::sub_with_overflow\n-                        | sym::mul_with_overflow => {\n-                            let op = match name {\n-                                sym::add_with_overflow => OverflowOp::Add,\n-                                sym::sub_with_overflow => OverflowOp::Sub,\n-                                sym::mul_with_overflow => OverflowOp::Mul,\n-                                _ => bug!(),\n-                            };\n-                            let (val, overflow) =\n-                                bx.checked_binop(op, ty, args[0].immediate(), args[1].immediate());\n-                            // Convert `i1` to a `bool`, and write it to the out parameter\n-                            let val = bx.from_immediate(val);\n-                            let overflow = bx.from_immediate(overflow);\n-\n-                            let dest = result.project_field(bx, 0);\n-                            bx.store(val, dest.llval, dest.align);\n-                            let dest = result.project_field(bx, 1);\n-                            bx.store(overflow, dest.llval, dest.align);\n-\n-                            return;\n-                        }\n                         sym::exact_div => {\n                             if signed {\n                                 bx.exactsdiv(args[0].immediate(), args[1].immediate())"}, {"sha": "c5d558aeb6ccda0e5b20392fd9edf508fa101a47", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9f6c1df8723504d7d468c87af02670dd0067cc7b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f6c1df8723504d7d468c87af02670dd0067cc7b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=9f6c1df8723504d7d468c87af02670dd0067cc7b", "patch": "@@ -210,17 +210,6 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let out_val = numeric_intrinsic(intrinsic_name, bits, kind);\n                 self.write_scalar(out_val, dest)?;\n             }\n-            sym::add_with_overflow | sym::sub_with_overflow | sym::mul_with_overflow => {\n-                let lhs = self.read_immediate(&args[0])?;\n-                let rhs = self.read_immediate(&args[1])?;\n-                let bin_op = match intrinsic_name {\n-                    sym::add_with_overflow => BinOp::Add,\n-                    sym::sub_with_overflow => BinOp::Sub,\n-                    sym::mul_with_overflow => BinOp::Mul,\n-                    _ => bug!(),\n-                };\n-                self.binop_with_overflow(bin_op, &lhs, &rhs, dest)?;\n-            }\n             sym::saturating_add | sym::saturating_sub => {\n                 let l = self.read_immediate(&args[0])?;\n                 let r = self.read_immediate(&args[1])?;"}]}