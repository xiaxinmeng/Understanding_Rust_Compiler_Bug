{"sha": "5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be", "node_id": "C_kwDOAAsO6NoAKDVjZDQxZDdiZThmMWFmMDI3ZDJkM2UzOGY3YWM1ZDI3OGJmNWUwYmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-30T17:55:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-30T17:55:52Z"}, "message": "Rollup merge of #98670 - krasimirgg:llvm-15-LLVMConstExtractValue, r=nikic\n\nllvm-wrapper: adapt for LLVMConstExtractValue removal\n\n`LLVMConstExtractValue` was removed recently from LLVM: https://github.com/llvm/llvm-project/commit/5548e807b5777fdda167b6795e0e05432a6163f1.\n\nThis adapts llvm-wrapper to use the new alternative where available, following https://rust-lang.zulipchat.com/#narrow/stream/187780-t-compiler.2Fwg-llvm/topic/LLVMConstExtractValue.20removal.", "tree": {"sha": "3fe4fad8adce413436b293e2f8b7a08cd78f033e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fe4fad8adce413436b293e2f8b7a08cd78f033e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiveOoCRBK7hj4Ov3rIwAAEf4IACAaP1gEWNcZ7GvdEVEcr1t+\nw2R02isQ4YrzgiDWS6YHSpKqLkXAOqA5YuzmrGZ9I7j4h0Ihst59zs3Of/RO/sWR\nUZcRPZgAElDlLCIiR3v10REr9i5+JoBMmTYu8a9BSuxubLnxI22g3pmqY5iWx4uE\nj3BI7SiQh/rLJcBGIaeBvJhwzTFeI1nWYY2hHKiDEpd7B2+3SVA+wlIN88BDdSxx\nGxcOT5vnFsdov7/KTfZxe6XVEGWSBIb2a9zMIkU4Ku2Xw/vC6P1I8igmWdU+Z6A2\nSYtVFQDBGI4ASfWRJHvu853XGCpo8ObbfxXr4nBXCmCoI3a/OpMn4pT3ph7RxSk=\n=Nw+e\n-----END PGP SIGNATURE-----\n", "payload": "tree 3fe4fad8adce413436b293e2f8b7a08cd78f033e\nparent ebecc1310600b08250e5300558453c9883dec441\nparent a3a88c73f104d11849a31ebbf1c4ff4b10fc1e8d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656611752 +0200\ncommitter GitHub <noreply@github.com> 1656611752 +0200\n\nRollup merge of #98670 - krasimirgg:llvm-15-LLVMConstExtractValue, r=nikic\n\nllvm-wrapper: adapt for LLVMConstExtractValue removal\n\n`LLVMConstExtractValue` was removed recently from LLVM: https://github.com/llvm/llvm-project/commit/5548e807b5777fdda167b6795e0e05432a6163f1.\n\nThis adapts llvm-wrapper to use the new alternative where available, following https://rust-lang.zulipchat.com/#narrow/stream/187780-t-compiler.2Fwg-llvm/topic/LLVMConstExtractValue.20removal.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be", "html_url": "https://github.com/rust-lang/rust/commit/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebecc1310600b08250e5300558453c9883dec441", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebecc1310600b08250e5300558453c9883dec441", "html_url": "https://github.com/rust-lang/rust/commit/ebecc1310600b08250e5300558453c9883dec441"}, {"sha": "a3a88c73f104d11849a31ebbf1c4ff4b10fc1e8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a88c73f104d11849a31ebbf1c4ff4b10fc1e8d", "html_url": "https://github.com/rust-lang/rust/commit/a3a88c73f104d11849a31ebbf1c4ff4b10fc1e8d"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "d37aadeb523a1ad48c2a8b9b9e0830a939ffcfb9", "filename": "compiler/rustc_codegen_llvm/src/common.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcommon.rs?ref=5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be", "patch": "@@ -109,8 +109,7 @@ impl<'ll> CodegenCx<'ll, '_> {\n     pub fn const_get_elt(&self, v: &'ll Value, idx: u64) -> &'ll Value {\n         unsafe {\n             assert_eq!(idx as c_uint as u64, idx);\n-            let us = &[idx as c_uint];\n-            let r = llvm::LLVMConstExtractValue(v, us.as_ptr(), us.len() as c_uint);\n+            let r = llvm::LLVMGetAggregateElement(v, idx as c_uint).unwrap();\n \n             debug!(\"const_get_elt(v={:?}, idx={}, r={:?})\", v, idx, r);\n "}, {"sha": "d92d9d96fe2ceb9314a223eade30bb8e62f29fd6", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be", "patch": "@@ -1134,11 +1134,7 @@ extern \"C\" {\n     pub fn LLVMConstIntToPtr<'a>(ConstantVal: &'a Value, ToType: &'a Type) -> &'a Value;\n     pub fn LLVMConstBitCast<'a>(ConstantVal: &'a Value, ToType: &'a Type) -> &'a Value;\n     pub fn LLVMConstPointerCast<'a>(ConstantVal: &'a Value, ToType: &'a Type) -> &'a Value;\n-    pub fn LLVMConstExtractValue(\n-        AggConstant: &Value,\n-        IdxList: *const c_uint,\n-        NumIdx: c_uint,\n-    ) -> &Value;\n+    pub fn LLVMGetAggregateElement(ConstantVal: &Value, Idx: c_uint) -> Option<&Value>;\n \n     // Operations on global variables, functions, and aliases (globals)\n     pub fn LLVMIsDeclaration(Global: &Value) -> Bool;"}, {"sha": "8c5b4e2dc96f953c2a3441be06a7e734b0dac1d3", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=5cd41d7be8f1af027d2d3e38f7ac5d278bf5e0be", "patch": "@@ -1865,3 +1865,11 @@ extern \"C\" void LLVMRustGetMangledName(LLVMValueRef V, RustStringRef Str) {\n   GlobalValue *GV = unwrap<GlobalValue>(V);\n   Mangler().getNameWithPrefix(OS, GV, true);\n }\n+\n+// LLVMGetAggregateElement was added in LLVM 15. For earlier LLVM versions just\n+// use its implementation.\n+#if LLVM_VERSION_LT(15, 0)\n+extern \"C\" LLVMValueRef LLVMGetAggregateElement(LLVMValueRef C, unsigned Idx) {\n+    return wrap(unwrap<Constant>(C)->getAggregateElement(Idx));\n+}\n+#endif"}]}