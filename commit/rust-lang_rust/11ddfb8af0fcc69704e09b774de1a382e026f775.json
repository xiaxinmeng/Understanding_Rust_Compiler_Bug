{"sha": "11ddfb8af0fcc69704e09b774de1a382e026f775", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZGRmYjhhZjBmY2M2OTcwNGUwOWI3NzRkZTFhMzgyZTAyNmY3NzU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:38:09Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:38:09Z"}, "message": "rollup merge of #23124: brson/oldtests", "tree": {"sha": "db73e8b4d93181dd7b1d10e97cac1d2c262f2e0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db73e8b4d93181dd7b1d10e97cac1d2c262f2e0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11ddfb8af0fcc69704e09b774de1a382e026f775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11ddfb8af0fcc69704e09b774de1a382e026f775", "html_url": "https://github.com/rust-lang/rust/commit/11ddfb8af0fcc69704e09b774de1a382e026f775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11ddfb8af0fcc69704e09b774de1a382e026f775/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "html_url": "https://github.com/rust-lang/rust/commit/bc409cbb4c4f40afeccb39646efa2ddbc8749b32"}, {"sha": "f7594e14b8bf291c7312332947f17f4411a02b3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7594e14b8bf291c7312332947f17f4411a02b3a", "html_url": "https://github.com/rust-lang/rust/commit/f7594e14b8bf291c7312332947f17f4411a02b3a"}], "stats": {"total": 97, "additions": 0, "deletions": 97}, "files": [{"sha": "b9e08e47b378db61a0913fbd9a5b974deecf0ab1", "filename": "src/test/run-pass/extern-stress.rs", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Frun-pass%2Fextern-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Frun-pass%2Fextern-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-stress.rs?ref=bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "patch": "@@ -1,49 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// This creates a bunch of descheduling tasks that run concurrently\n-// while holding onto C stacks\n-\n-extern crate libc;\n-use std::thread::Thread;\n-\n-mod rustrt {\n-    extern crate libc;\n-\n-    #[link(name = \"rust_test_helpers\")]\n-    extern {\n-        pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n-                             data: libc::uintptr_t)\n-                             -> libc::uintptr_t;\n-    }\n-}\n-\n-extern fn cb(data: libc::uintptr_t) -> libc::uintptr_t {\n-    if data == 1 {\n-        data\n-    } else {\n-        Thread::yield_now();\n-        count(data - 1) + count(data - 1)\n-    }\n-}\n-\n-fn count(n: libc::uintptr_t) -> libc::uintptr_t {\n-    unsafe {\n-        rustrt::rust_dbg_call(cb, n)\n-    }\n-}\n-\n-pub fn main() {\n-    (0_usize..100).map(|_| {\n-        Thread::scoped(move|| {\n-            assert_eq!(count(5), 16);\n-        })\n-    }).collect::<Vec<_>>();\n-}"}, {"sha": "80428d787f21c5b88b6fb14617e8ba697b794f65", "filename": "src/test/run-pass/extern-yield.rs", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Frun-pass%2Fextern-yield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Frun-pass%2Fextern-yield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-yield.rs?ref=bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "patch": "@@ -1,48 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-extern crate libc;\n-use std::thread::Thread;\n-\n-mod rustrt {\n-    extern crate libc;\n-\n-    #[link(name = \"rust_test_helpers\")]\n-    extern {\n-        pub fn rust_dbg_call(cb: extern \"C\" fn (libc::uintptr_t) -> libc::uintptr_t,\n-                             data: libc::uintptr_t)\n-                             -> libc::uintptr_t;\n-    }\n-}\n-\n-extern fn cb(data: libc::uintptr_t) -> libc::uintptr_t {\n-    if data == 1 {\n-        data\n-    } else {\n-        count(data - 1) + count(data - 1)\n-    }\n-}\n-\n-fn count(n: libc::uintptr_t) -> libc::uintptr_t {\n-    unsafe {\n-        Thread::yield_now();\n-        rustrt::rust_dbg_call(cb, n)\n-    }\n-}\n-\n-pub fn main() {\n-    (0..10_usize).map(|i| {\n-        Thread::scoped(move|| {\n-            let result = count(5);\n-            println!(\"result = {}\", result);\n-            assert_eq!(result, 16);\n-        })\n-    }).collect::<Vec<_>>();\n-}"}]}