{"sha": "f897162f3efc841461adce9510bb627cea9bac45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OTcxNjJmM2VmYzg0MTQ2MWFkY2U5NTEwYmI2MjdjZWE5YmFjNDU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-10-12T15:52:51Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-10-15T17:01:47Z"}, "message": "resolve: improve \"try using tuple struct\" message\n\nThis commit improves the tuple struct case added in rust-lang/rust#77341\nso that the context is mentioned in more of the message.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "fa64338af3e48b9a3894dfb539702b11109d0006", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa64338af3e48b9a3894dfb539702b11109d0006"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f897162f3efc841461adce9510bb627cea9bac45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl+IgH8ACgkQJZLnbIc4\nH9lb7g//UvU+H8hy+2pdr6xNWnSEVqPwTrfY2j79p3/U4w98bSS0cqJnd9Ci/7qe\nL7wuHciBPMHSCHTKlbYmP792exqWsdhXEkkd5gbo9JmqQXuvavkNMRxOrRfdme+h\n6NpRcgIsJ4ZEHAJo0j0qJwY3XsUCyVZKQNM4kc3XAXRk+6c25P7U22caTVrKyMw+\nbLesJaD8LhIi0JJ58wA8J3L3ZCZCnPlZuaMAeewS6wnI8d/cc5wEkO3oXfthqYTN\nSP41GjMJXj8tuAIhw7qCHdKluuo+qChPdIjcz+l+IHt1Zzw2Zie5iLgvUM9b4hR5\nv7KmkYzWHcOwnr1mBkkoegmOxBtfMERiDjiAOnf0kC/h5lbEgei5WyG85OJ5s/NW\nJvEBku9j56fQlipLcVe+XRfzfG4Yw1kqPo7SlpQ8ox9OfNh2NQQBIIKjjDtRtVvs\nGMXXAHp2Gv8PzCandXd2MsgXo5Z7I9UadyEgSN0elOJHlz1YM+PteQYXKKiOf8X+\nlXBr02byL9iaXjOiKpzYj6H4YbckJiztVIcuNrvFuJ0wx0FLS2pZVxjC+5suDCkg\nSnIFTAaZFyQZV5R7otN0ZtBTH5ycLnx0TBxfn54rGHLBuYwrolRqh2rkjZfmWXHH\nRDixtpVnJIwXCDl2ZDrAVHad0CMLFlgWc4Q9emp69EAL4LTjeo8=\n=UKsI\n-----END PGP SIGNATURE-----", "payload": "tree fa64338af3e48b9a3894dfb539702b11109d0006\nparent adf31e95e44ff0b7fbc798fe2b8cc5a42a3abf4b\nauthor David Wood <david@davidtw.co> 1602517971 +0100\ncommitter David Wood <david@davidtw.co> 1602781307 +0100\n\nresolve: improve \"try using tuple struct\" message\n\nThis commit improves the tuple struct case added in rust-lang/rust#77341\nso that the context is mentioned in more of the message.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f897162f3efc841461adce9510bb627cea9bac45", "html_url": "https://github.com/rust-lang/rust/commit/f897162f3efc841461adce9510bb627cea9bac45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f897162f3efc841461adce9510bb627cea9bac45/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adf31e95e44ff0b7fbc798fe2b8cc5a42a3abf4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/adf31e95e44ff0b7fbc798fe2b8cc5a42a3abf4b", "html_url": "https://github.com/rust-lang/rust/commit/adf31e95e44ff0b7fbc798fe2b8cc5a42a3abf4b"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "c24b383f3b81171d39eea893f9137cad1f19d333", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f897162f3efc841461adce9510bb627cea9bac45/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f897162f3efc841461adce9510bb627cea9bac45/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=f897162f3efc841461adce9510bb627cea9bac45", "patch": "@@ -1341,29 +1341,29 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n \n             let non_suggestable_variant_count = variants.len() - suggestable_variants.len();\n \n+            let source_msg = if source.is_call() {\n+                \"to construct\"\n+            } else if matches!(source, PathSource::TupleStruct(..)) {\n+                \"to match against\"\n+            } else {\n+                unreachable!()\n+            };\n+\n             if !suggestable_variants.is_empty() {\n                 let msg = if non_suggestable_variant_count == 0 && suggestable_variants.len() == 1 {\n-                    \"try using the enum's variant\"\n+                    format!(\"try {} the enum's variant\", source_msg)\n                 } else {\n-                    \"try using one of the enum's variants\"\n+                    format!(\"try {} one of the enum's variants\", source_msg)\n                 };\n \n                 err.span_suggestions(\n                     span,\n-                    msg,\n+                    &msg,\n                     suggestable_variants.drain(..),\n                     Applicability::MaybeIncorrect,\n                 );\n             }\n \n-            let source_msg = if source.is_call() {\n-                \"to construct\"\n-            } else if matches!(source, PathSource::TupleStruct(..)) {\n-                \"to match against\"\n-            } else {\n-                unreachable!()\n-            };\n-\n             // If the enum has no tuple variants..\n             if non_suggestable_variant_count == variants.len() {\n                 err.help(&format!(\"the enum has no tuple variants {}\", source_msg));"}, {"sha": "bca493e67d5431a152685ad4302b93da8ec180ce", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f897162f3efc841461adce9510bb627cea9bac45/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f897162f3efc841461adce9510bb627cea9bac45/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr?ref=f897162f3efc841461adce9510bb627cea9bac45", "patch": "@@ -2,23 +2,23 @@ error[E0423]: expected function, tuple struct or tuple variant, found enum `Opti\n   --> $DIR/issue-43871-enum-instead-of-variant.rs:19:13\n    |\n LL |     let x = Option(1);\n-   |             ^^^^^^ help: try using one of the enum's variants: `std::option::Option::Some`\n+   |             ^^^^^^ help: try to construct one of the enum's variants: `std::option::Option::Some`\n    |\n    = help: you might have meant to construct the enum's non-tuple variant\n \n error[E0532]: expected tuple struct or tuple variant, found enum `Option`\n   --> $DIR/issue-43871-enum-instead-of-variant.rs:21:12\n    |\n LL |     if let Option(_) = x {\n-   |            ^^^^^^ help: try using one of the enum's variants: `std::option::Option::Some`\n+   |            ^^^^^^ help: try to match against one of the enum's variants: `std::option::Option::Some`\n    |\n    = help: you might have meant to match against the enum's non-tuple variant\n \n error[E0532]: expected tuple struct or tuple variant, found enum `Example`\n   --> $DIR/issue-43871-enum-instead-of-variant.rs:27:12\n    |\n LL |     if let Example(_) = y {\n-   |            ^^^^^^^ help: try using one of the enum's variants: `Example::Ex`\n+   |            ^^^^^^^ help: try to match against one of the enum's variants: `Example::Ex`\n    |\n    = help: you might have meant to match against the enum's non-tuple variant\n note: the enum is defined here"}, {"sha": "4b5f65b346174668b8979d4d36cb76639f4cbd49", "filename": "src/test/ui/issues/issue-73427.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f897162f3efc841461adce9510bb627cea9bac45/src%2Ftest%2Fui%2Fissues%2Fissue-73427.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f897162f3efc841461adce9510bb627cea9bac45/src%2Ftest%2Fui%2Fissues%2Fissue-73427.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-73427.stderr?ref=f897162f3efc841461adce9510bb627cea9bac45", "patch": "@@ -118,7 +118,7 @@ LL | |     Tuple(),\n LL | |     Unit,\n LL | | }\n    | |_^\n-help: try using one of the enum's variants\n+help: try to construct one of the enum's variants\n    |\n LL |     let x = A::TupleWithFields(3);\n    |             ^^^^^^^^^^^^^^^^^^\n@@ -143,7 +143,7 @@ LL | |     Tuple(),\n LL | |     Unit,\n LL | | }\n    | |_^\n-help: try using one of the enum's variants\n+help: try to match against one of the enum's variants\n    |\n LL |     if let A::TupleWithFields(3) = x { }\n    |            ^^^^^^^^^^^^^^^^^^"}]}