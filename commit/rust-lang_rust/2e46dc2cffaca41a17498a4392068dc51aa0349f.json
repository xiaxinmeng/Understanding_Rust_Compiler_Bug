{"sha": "2e46dc2cffaca41a17498a4392068dc51aa0349f", "node_id": "C_kwDOAAsO6NoAKDJlNDZkYzJjZmZhY2E0MWExNzQ5OGE0MzkyMDY4ZGM1MWFhMDM0OWY", "commit": {"author": {"name": "Ellis Hoag", "email": "ellis.sparky.hoag@gmail.com", "date": "2022-09-12T00:34:51Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T00:13:19Z"}, "message": "impl SessionDiagnostic for LayoutError and Spanned<T>", "tree": {"sha": "7db6789901f041664a8ee621d01b6f24dcf1e7ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7db6789901f041664a8ee621d01b6f24dcf1e7ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e46dc2cffaca41a17498a4392068dc51aa0349f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e46dc2cffaca41a17498a4392068dc51aa0349f", "html_url": "https://github.com/rust-lang/rust/commit/2e46dc2cffaca41a17498a4392068dc51aa0349f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e46dc2cffaca41a17498a4392068dc51aa0349f/comments", "author": {"login": "ellishg", "id": 8961915, "node_id": "MDQ6VXNlcjg5NjE5MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8961915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellishg", "html_url": "https://github.com/ellishg", "followers_url": "https://api.github.com/users/ellishg/followers", "following_url": "https://api.github.com/users/ellishg/following{/other_user}", "gists_url": "https://api.github.com/users/ellishg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellishg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellishg/subscriptions", "organizations_url": "https://api.github.com/users/ellishg/orgs", "repos_url": "https://api.github.com/users/ellishg/repos", "events_url": "https://api.github.com/users/ellishg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellishg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef3aaa1f210b2e72c16a9a880ae3d1fd6061fc9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef3aaa1f210b2e72c16a9a880ae3d1fd6061fc9f", "html_url": "https://github.com/rust-lang/rust/commit/ef3aaa1f210b2e72c16a9a880ae3d1fd6061fc9f"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "5341d0f75a66ec44dd3e0438abfc87adcf90aede", "filename": "src/context.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2e46dc2cffaca41a17498a4392068dc51aa0349f/src%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e46dc2cffaca41a17498a4392068dc51aa0349f/src%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcontext.rs?ref=2e46dc2cffaca41a17498a4392068dc51aa0349f", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::mir::mono::CodegenUnit;\n use rustc_middle::ty::{self, Instance, ParamEnv, PolyExistentialTraitRef, Ty, TyCtxt};\n use rustc_middle::ty::layout::{FnAbiError, FnAbiOf, FnAbiOfHelpers, FnAbiRequest, HasParamEnv, HasTyCtxt, LayoutError, TyAndLayout, LayoutOfHelpers};\n use rustc_session::Session;\n-use rustc_span::Span;\n+use rustc_span::{Span, source_map::respan};\n use rustc_target::abi::{call::FnAbi, HasDataLayout, PointeeInfo, Size, TargetDataLayout, VariantIdx};\n use rustc_target::spec::{HasTargetSpec, Target, TlsModel};\n \n@@ -493,6 +493,23 @@ impl<'gcc, 'tcx> LayoutOfHelpers<'tcx> for CodegenCx<'gcc, 'tcx> {\n     #[inline]\n     fn handle_layout_err(&self, err: LayoutError<'tcx>, span: Span, ty: Ty<'tcx>) -> ! {\n         if let LayoutError::SizeOverflow(_) = err {\n+            let _ = respan(span, err);\n+            //             error: lifetime may not live long enough\n+            //    --> src/context.rs:483:13\n+            //     |\n+            // 475 | impl<'gcc, 'tcx> LayoutOfHelpers<'tcx> for CodegenCx<'gcc, 'tcx> {\n+            //     |      ----  ---- lifetime `'tcx` defined here\n+            //     |      |\n+            //     |      lifetime `'gcc` defined here\n+            // ...\n+            // 483 |             self.sess().emit_fatal(respan(span, err))\n+            //     |             ^^^^^^^^^^^ argument requires that `'gcc` must outlive `'tcx`\n+            //     |\n+            //     = help: consider adding the following bound: `'gcc: 'tcx`\n+            //     = note: requirement occurs because of the type `CodegenCx<'_, '_>`, which makes the generic argument `'_` invariant\n+            //     = note: the struct `CodegenCx<'gcc, 'tcx>` is invariant over the parameter `'gcc`\n+            //     = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n+            // self.sess().emit_fatal(respan(span, err))\n             self.sess().emit_fatal(LayoutSizeOverflow { span, error: err.to_string() })\n         } else {\n             span_bug!(span, \"failed to get layout for `{}`: {}\", ty, err)"}]}