{"sha": "a09c33e36205991bb633a848d1e9c7604ae43ce8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwOWMzM2UzNjIwNTk5MWJiNjMzYTg0OGQxZTljNzYwNGFlNDNjZTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T08:41:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T08:41:59Z"}, "message": "move pattern to fn argument", "tree": {"sha": "8108e74785b22c5c774fc56bce56c118cb6bcb85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8108e74785b22c5c774fc56bce56c118cb6bcb85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a09c33e36205991bb633a848d1e9c7604ae43ce8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a09c33e36205991bb633a848d1e9c7604ae43ce8", "html_url": "https://github.com/rust-lang/rust/commit/a09c33e36205991bb633a848d1e9c7604ae43ce8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a09c33e36205991bb633a848d1e9c7604ae43ce8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c84e451d533f12d3a1a7b35ca66bdd02ecf17fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c84e451d533f12d3a1a7b35ca66bdd02ecf17fc", "html_url": "https://github.com/rust-lang/rust/commit/7c84e451d533f12d3a1a7b35ca66bdd02ecf17fc"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "d8788611878a08bf408e43384fdda36287b8d3d4", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a09c33e36205991bb633a848d1e9c7604ae43ce8/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09c33e36205991bb633a848d1e9c7604ae43ce8/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=a09c33e36205991bb633a848d1e9c7604ae43ce8", "patch": "@@ -943,8 +943,7 @@ pub trait MaybeResult<T> {\n impl<T> MaybeResult<T> for T {\n     type Error = !;\n \n-    fn from(x: Result<T, Self::Error>) -> Self {\n-        let Ok(x) = x;\n+    fn from(Ok(x): Result<T, Self::Error>) -> Self {\n         x\n     }\n     fn to_result(self) -> Result<T, Self::Error> {"}]}