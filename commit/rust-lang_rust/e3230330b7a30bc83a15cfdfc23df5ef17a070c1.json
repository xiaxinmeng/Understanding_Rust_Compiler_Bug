{"sha": "e3230330b7a30bc83a15cfdfc23df5ef17a070c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMjMwMzMwYjdhMzBiYzgzYTE1Y2ZkZmMyM2RmNWVmMTdhMDcwYzE=", "commit": {"author": {"name": "Lenny222", "email": "github@kudling.de", "date": "2013-05-09T13:46:32Z"}, "committer": {"name": "Lenny222", "email": "github@kudling.de", "date": "2013-05-09T13:46:32Z"}, "message": "back-ticks", "tree": {"sha": "660ee7d21da299a0c8b4f421daa018d82095df07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/660ee7d21da299a0c8b4f421daa018d82095df07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3230330b7a30bc83a15cfdfc23df5ef17a070c1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3230330b7a30bc83a15cfdfc23df5ef17a070c1", "html_url": "https://github.com/rust-lang/rust/commit/e3230330b7a30bc83a15cfdfc23df5ef17a070c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3230330b7a30bc83a15cfdfc23df5ef17a070c1/comments", "author": null, "committer": null, "parents": [{"sha": "ca95e7f94ed7b9f793a061bd0a7cc4d74de6b10d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca95e7f94ed7b9f793a061bd0a7cc4d74de6b10d", "html_url": "https://github.com/rust-lang/rust/commit/ca95e7f94ed7b9f793a061bd0a7cc4d74de6b10d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3ddc7a8792494902a60d309b6893a2e69439448b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3230330b7a30bc83a15cfdfc23df5ef17a070c1/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3230330b7a30bc83a15cfdfc23df5ef17a070c1/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e3230330b7a30bc83a15cfdfc23df5ef17a070c1", "patch": "@@ -3310,7 +3310,7 @@ pub impl Parser {\n                 }\n             }\n             if fields.len() == 0 {\n-                self.fatal(fmt!(\"Unit-like struct should be written as: struct %s;\",\n+                self.fatal(fmt!(\"Unit-like struct should be written as `struct %s;`\",\n                                 *self.interner.get(class_name)));\n             }\n             self.bump();"}, {"sha": "546931d20dc74022904cf682c6d67ec9fd2a4241", "filename": "src/test/compile-fail/struct-no-fields.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3230330b7a30bc83a15cfdfc23df5ef17a070c1/src%2Ftest%2Fcompile-fail%2Fstruct-no-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3230330b7a30bc83a15cfdfc23df5ef17a070c1/src%2Ftest%2Fcompile-fail%2Fstruct-no-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-no-fields.rs?ref=e3230330b7a30bc83a15cfdfc23df5ef17a070c1", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: Unit-like struct should be written as: struct Foo;\n+// error-pattern: Unit-like struct should be written as `struct Foo;`\n struct Foo {}\n \n fn main() {}"}]}