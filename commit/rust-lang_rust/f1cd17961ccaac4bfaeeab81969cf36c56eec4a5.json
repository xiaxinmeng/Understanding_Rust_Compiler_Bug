{"sha": "f1cd17961ccaac4bfaeeab81969cf36c56eec4a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxY2QxNzk2MWNjYWFjNGJmYWVlYWI4MTk2OWNmMzZjNTZlZWM0YTU=", "commit": {"author": {"name": "oberien", "email": "jaro.fietz@gmx.de", "date": "2020-10-17T10:08:59Z"}, "committer": {"name": "oberien", "email": "jaro.fietz@gmx.de", "date": "2021-01-30T22:00:10Z"}, "message": "impl Seek for Empty\n\nFix #78029", "tree": {"sha": "3b67510dc4023075bea97217167869054c6a1e64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b67510dc4023075bea97217167869054c6a1e64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5", "html_url": "https://github.com/rust-lang/rust/commit/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5/comments", "author": {"login": "oberien", "id": 4820508, "node_id": "MDQ6VXNlcjQ4MjA1MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4820508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberien", "html_url": "https://github.com/oberien", "followers_url": "https://api.github.com/users/oberien/followers", "following_url": "https://api.github.com/users/oberien/following{/other_user}", "gists_url": "https://api.github.com/users/oberien/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberien/subscriptions", "organizations_url": "https://api.github.com/users/oberien/orgs", "repos_url": "https://api.github.com/users/oberien/repos", "events_url": "https://api.github.com/users/oberien/events{/privacy}", "received_events_url": "https://api.github.com/users/oberien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oberien", "id": 4820508, "node_id": "MDQ6VXNlcjQ4MjA1MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4820508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberien", "html_url": "https://github.com/oberien", "followers_url": "https://api.github.com/users/oberien/followers", "following_url": "https://api.github.com/users/oberien/following{/other_user}", "gists_url": "https://api.github.com/users/oberien/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberien/subscriptions", "organizations_url": "https://api.github.com/users/oberien/orgs", "repos_url": "https://api.github.com/users/oberien/repos", "events_url": "https://api.github.com/users/oberien/events{/privacy}", "received_events_url": "https://api.github.com/users/oberien/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf469eb6c20ccea05400a1942c70343f36705e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf469eb6c20ccea05400a1942c70343f36705e1c", "html_url": "https://github.com/rust-lang/rust/commit/bf469eb6c20ccea05400a1942c70343f36705e1c"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "e43ce4cdb4b8e3b5d51d3c98ab3e71534d51d7a0", "filename": "library/std/src/io/util.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil.rs?ref=f1cd17961ccaac4bfaeeab81969cf36c56eec4a5", "patch": "@@ -4,7 +4,7 @@\n mod tests;\n \n use crate::fmt;\n-use crate::io::{self, BufRead, Initializer, IoSlice, IoSliceMut, Read, Write};\n+use crate::io::{self, BufRead, Initializer, IoSlice, IoSliceMut, Read, Seek, SeekFrom, Write};\n \n /// A reader which is always at EOF.\n ///\n@@ -58,6 +58,21 @@ impl BufRead for Empty {\n     fn consume(&mut self, _n: usize) {}\n }\n \n+#[stable(feature = \"empty_seek\", since = \"1.51.0\")]\n+impl Seek for Empty {\n+    fn seek(&mut self, _pos: SeekFrom) -> io::Result<u64> {\n+        Ok(0)\n+    }\n+\n+    fn stream_len(&mut self) -> io::Result<u64> {\n+        Ok(0)\n+    }\n+\n+    fn stream_position(&mut self) -> io::Result<u64> {\n+        Ok(0)\n+    }\n+}\n+\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Empty {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {"}, {"sha": "df34e27d1361bce267530ec0ab421f05d952b419", "filename": "library/std/src/io/util/tests.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5/library%2Fstd%2Fsrc%2Fio%2Futil%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1cd17961ccaac4bfaeeab81969cf36c56eec4a5/library%2Fstd%2Fsrc%2Fio%2Futil%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil%2Ftests.rs?ref=f1cd17961ccaac4bfaeeab81969cf36c56eec4a5", "patch": "@@ -1,5 +1,5 @@\n use crate::io::prelude::*;\n-use crate::io::{copy, empty, repeat, sink, Empty, Repeat, Sink};\n+use crate::io::{copy, empty, repeat, sink, Empty, Repeat, SeekFrom, Sink};\n \n #[test]\n fn copy_copies() {\n@@ -29,6 +29,26 @@ fn empty_reads() {\n     assert_eq!(e.by_ref().read(&mut [0; 1024]).unwrap(), 0);\n }\n \n+#[test]\n+fn empty_seeks() {\n+    let mut e = empty();\n+    assert!(matches!(e.seek(SeekFrom::Start(0)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::Start(1)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::Start(u64::MAX)), Ok(0)));\n+\n+    assert!(matches!(e.seek(SeekFrom::End(i64::MIN)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::End(-1)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::End(0)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::End(1)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::End(i64::MAX)), Ok(0)));\n+\n+    assert!(matches!(e.seek(SeekFrom::Current(i64::MIN)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::Current(-1)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::Current(0)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::Current(1)), Ok(0)));\n+    assert!(matches!(e.seek(SeekFrom::Current(i64::MAX)), Ok(0)));\n+}\n+\n #[test]\n fn repeat_repeats() {\n     let mut r = repeat(4);"}]}