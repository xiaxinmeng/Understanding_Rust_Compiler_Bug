{"sha": "739df232fee368727f9dab5638937935981f666d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczOWRmMjMyZmVlMzY4NzI3ZjlkYWI1NjM4OTM3OTM1OTgxZjY2NmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-07T05:29:29Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-07T05:29:29Z"}, "message": "Flag the Repr::repr function with #[inline]\n\nThis allows cross-crate inlining which is *very* good because this is called a\nlot throughout libstd (even when libstd is inlined across crates).", "tree": {"sha": "4b37cd5e4c1abb20850f884dcc41bc3d36f59114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b37cd5e4c1abb20850f884dcc41bc3d36f59114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/739df232fee368727f9dab5638937935981f666d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/739df232fee368727f9dab5638937935981f666d", "html_url": "https://github.com/rust-lang/rust/commit/739df232fee368727f9dab5638937935981f666d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/739df232fee368727f9dab5638937935981f666d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28d042e198d700287f0b946b13dab3b99e0ed962", "url": "https://api.github.com/repos/rust-lang/rust/commits/28d042e198d700287f0b946b13dab3b99e0ed962", "html_url": "https://github.com/rust-lang/rust/commit/28d042e198d700287f0b946b13dab3b99e0ed962"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "ac0e83df7ef56839bdfdcbb55cb621ac5d9fbc1a", "filename": "src/libstd/unstable/raw.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/739df232fee368727f9dab5638937935981f666d/src%2Flibstd%2Funstable%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/739df232fee368727f9dab5638937935981f666d/src%2Flibstd%2Funstable%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fraw.rs?ref=739df232fee368727f9dab5638937935981f666d", "patch": "@@ -49,6 +49,7 @@ pub trait Repr<T> {\n     /// struct representation. This can be used to read/write different values\n     /// for the struct. This is a safe method because by default it does not\n     /// give write-access to the struct returned.\n+    #[inline]\n     fn repr(&self) -> T { unsafe { cast::transmute_copy(self) } }\n }\n "}]}