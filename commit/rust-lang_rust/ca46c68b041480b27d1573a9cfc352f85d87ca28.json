{"sha": "ca46c68b041480b27d1573a9cfc352f85d87ca28", "node_id": "C_kwDOAAsO6NoAKGNhNDZjNjhiMDQxNDgwYjI3ZDE1NzNhOWNmYzM1MmY4NWQ4N2NhMjg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-12T10:55:25Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-12T11:06:49Z"}, "message": "internal: Remove redundant offset data in annotations", "tree": {"sha": "cd2d97f255e61523e4540bdcf0548223b5838259", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd2d97f255e61523e4540bdcf0548223b5838259"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca46c68b041480b27d1573a9cfc352f85d87ca28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca46c68b041480b27d1573a9cfc352f85d87ca28", "html_url": "https://github.com/rust-lang/rust/commit/ca46c68b041480b27d1573a9cfc352f85d87ca28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca46c68b041480b27d1573a9cfc352f85d87ca28/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d12130797741edf8d9c6a0233001eb10a11579b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d12130797741edf8d9c6a0233001eb10a11579b3", "html_url": "https://github.com/rust-lang/rust/commit/d12130797741edf8d9c6a0233001eb10a11579b3"}], "stats": {"total": 236, "additions": 84, "deletions": 152}, "files": [{"sha": "210c5c7facd2de1a42ad6ccbffadb6181e15abd2", "filename": "crates/ide/src/annotations.rs", "status": "modified", "additions": 72, "deletions": 130, "changes": 202, "blob_url": "https://github.com/rust-lang/rust/blob/ca46c68b041480b27d1573a9cfc352f85d87ca28/crates%2Fide%2Fsrc%2Fannotations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca46c68b041480b27d1573a9cfc352f85d87ca28/crates%2Fide%2Fsrc%2Fannotations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fannotations.rs?ref=ca46c68b041480b27d1573a9cfc352f85d87ca28", "patch": "@@ -30,8 +30,8 @@ pub struct Annotation {\n #[derive(Debug)]\n pub enum AnnotationKind {\n     Runnable(Runnable),\n-    HasImpls { position: FilePosition, data: Option<Vec<NavigationTarget>> },\n-    HasReferences { position: FilePosition, data: Option<Vec<FileRange>> },\n+    HasImpls { file_id: FileId, data: Option<Vec<NavigationTarget>> },\n+    HasReferences { file_id: FileId, data: Option<Vec<FileRange>> },\n }\n \n pub struct AnnotationConfig {\n@@ -83,10 +83,7 @@ pub(crate) fn annotations(\n                             .for_each(|range| {\n                                 annotations.push(Annotation {\n                                     range,\n-                                    kind: AnnotationKind::HasReferences {\n-                                        position: FilePosition { file_id, offset: range.start() },\n-                                        data: None,\n-                                    },\n+                                    kind: AnnotationKind::HasReferences { file_id, data: None },\n                                 })\n                             })\n                     }\n@@ -107,27 +104,19 @@ pub(crate) fn annotations(\n             _ => None,\n         };\n \n-        let (range, offset) = match range {\n-            Some(range) => (range, range.start()),\n+        let range = match range {\n+            Some(range) => range,\n             None => return,\n         };\n \n         if config.annotate_impls && !matches!(def, Definition::Const(_)) {\n-            annotations.push(Annotation {\n-                range,\n-                kind: AnnotationKind::HasImpls {\n-                    position: FilePosition { file_id, offset },\n-                    data: None,\n-                },\n-            });\n+            annotations\n+                .push(Annotation { range, kind: AnnotationKind::HasImpls { file_id, data: None } });\n         }\n         if config.annotate_references {\n             annotations.push(Annotation {\n                 range,\n-                kind: AnnotationKind::HasReferences {\n-                    position: FilePosition { file_id, offset },\n-                    data: None,\n-                },\n+                kind: AnnotationKind::HasReferences { file_id, data: None },\n             });\n         }\n \n@@ -149,10 +138,7 @@ pub(crate) fn annotations(\n         annotations.extend(find_all_methods(db, file_id).into_iter().map(\n             |FileRange { file_id, range }| Annotation {\n                 range,\n-                kind: AnnotationKind::HasReferences {\n-                    position: FilePosition { file_id, offset: range.start() },\n-                    data: None,\n-                },\n+                kind: AnnotationKind::HasReferences { file_id, data: None },\n             },\n         ));\n     }\n@@ -161,12 +147,19 @@ pub(crate) fn annotations(\n }\n \n pub(crate) fn resolve_annotation(db: &RootDatabase, mut annotation: Annotation) -> Annotation {\n-    match &mut annotation.kind {\n-        AnnotationKind::HasImpls { position, data } => {\n-            *data = goto_implementation(db, *position).map(|range| range.info);\n+    match annotation.kind {\n+        AnnotationKind::HasImpls { file_id, ref mut data } => {\n+            *data =\n+                goto_implementation(db, FilePosition { file_id, offset: annotation.range.start() })\n+                    .map(|range| range.info);\n         }\n-        AnnotationKind::HasReferences { position, data } => {\n-            *data = find_all_refs(&Semantics::new(db), *position, None).map(|result| {\n+        AnnotationKind::HasReferences { file_id, ref mut data } => {\n+            *data = find_all_refs(\n+                &Semantics::new(db),\n+                FilePosition { file_id, offset: annotation.range.start() },\n+                None,\n+            )\n+            .map(|result| {\n                 result\n                     .into_iter()\n                     .flat_map(|res| res.references)\n@@ -254,12 +247,9 @@ fn main() {\n                     Annotation {\n                         range: 6..10,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 6,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     FileRange {\n@@ -275,12 +265,9 @@ fn main() {\n                     Annotation {\n                         range: 30..36,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 30,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),\n@@ -289,12 +276,9 @@ fn main() {\n                     Annotation {\n                         range: 53..57,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 53,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),\n@@ -339,12 +323,9 @@ fn main() {\n                     Annotation {\n                         range: 7..11,\n                         kind: HasImpls {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 7,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),\n@@ -353,12 +334,9 @@ fn main() {\n                     Annotation {\n                         range: 7..11,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 7,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     FileRange {\n@@ -374,12 +352,9 @@ fn main() {\n                     Annotation {\n                         range: 17..21,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 17,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),\n@@ -428,12 +403,9 @@ fn main() {\n                     Annotation {\n                         range: 7..11,\n                         kind: HasImpls {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 7,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     NavigationTarget {\n@@ -452,12 +424,9 @@ fn main() {\n                     Annotation {\n                         range: 7..11,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 7,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     FileRange {\n@@ -479,12 +448,9 @@ fn main() {\n                     Annotation {\n                         range: 20..31,\n                         kind: HasImpls {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 20,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     NavigationTarget {\n@@ -503,12 +469,9 @@ fn main() {\n                     Annotation {\n                         range: 20..31,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 20,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     FileRange {\n@@ -524,12 +487,9 @@ fn main() {\n                     Annotation {\n                         range: 69..73,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 69,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),\n@@ -570,12 +530,9 @@ fn main() {}\n                     Annotation {\n                         range: 3..7,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 3,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),\n@@ -624,12 +581,9 @@ fn main() {\n                     Annotation {\n                         range: 7..11,\n                         kind: HasImpls {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 7,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     NavigationTarget {\n@@ -648,12 +602,9 @@ fn main() {\n                     Annotation {\n                         range: 7..11,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 7,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     FileRange {\n@@ -675,12 +626,9 @@ fn main() {\n                     Annotation {\n                         range: 33..44,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 33,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [\n                                     FileRange {\n@@ -696,12 +644,9 @@ fn main() {\n                     Annotation {\n                         range: 61..65,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 61,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),\n@@ -795,12 +740,9 @@ mod tests {\n                     Annotation {\n                         range: 3..7,\n                         kind: HasReferences {\n-                            position: FilePosition {\n-                                file_id: FileId(\n-                                    0,\n-                                ),\n-                                offset: 3,\n-                            },\n+                            file_id: FileId(\n+                                0,\n+                            ),\n                             data: Some(\n                                 [],\n                             ),"}, {"sha": "ffc69a419a0fca84200301ff165409401f05ca86", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca46c68b041480b27d1573a9cfc352f85d87ca28/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca46c68b041480b27d1573a9cfc352f85d87ca28/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=ca46c68b041480b27d1573a9cfc352f85d87ca28", "patch": "@@ -101,10 +101,7 @@ pub(crate) fn annotation(\n \n             Ok(Annotation {\n                 range: text_range(&line_index, code_lens.range)?,\n-                kind: AnnotationKind::HasImpls {\n-                    position: file_position(snap, params.text_document_position_params)?,\n-                    data: None,\n-                },\n+                kind: AnnotationKind::HasImpls { file_id, data: None },\n             })\n         }\n         lsp_ext::CodeLensResolveData::References(params) => {\n@@ -113,10 +110,7 @@ pub(crate) fn annotation(\n \n             Ok(Annotation {\n                 range: text_range(&line_index, code_lens.range)?,\n-                kind: AnnotationKind::HasReferences {\n-                    position: file_position(snap, params)?,\n-                    data: None,\n-                },\n+                kind: AnnotationKind::HasReferences { file_id, data: None },\n             })\n         }\n     }"}, {"sha": "ff348959add7c72ab0a019d12e694dde2c1cbad6", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ca46c68b041480b27d1573a9cfc352f85d87ca28/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca46c68b041480b27d1573a9cfc352f85d87ca28/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=ca46c68b041480b27d1573a9cfc352f85d87ca28", "patch": "@@ -1103,19 +1103,17 @@ pub(crate) fn code_lens(\n                 })\n             }\n         }\n-        AnnotationKind::HasImpls { position: file_position, data } => {\n+        AnnotationKind::HasImpls { file_id, data } => {\n             if !client_commands_config.show_reference {\n                 return Ok(());\n             }\n-            let line_index = snap.file_line_index(file_position.file_id)?;\n+            let line_index = snap.file_line_index(file_id)?;\n             let annotation_range = range(&line_index, annotation.range);\n-            let url = url(snap, file_position.file_id);\n-\n-            let position = position(&line_index, file_position.offset);\n+            let url = url(snap, file_id);\n \n             let id = lsp_types::TextDocumentIdentifier { uri: url.clone() };\n \n-            let doc_pos = lsp_types::TextDocumentPositionParams::new(id, position);\n+            let doc_pos = lsp_types::TextDocumentPositionParams::new(id, annotation_range.start);\n \n             let goto_params = lsp_types::request::GotoImplementationParams {\n                 text_document_position_params: doc_pos,\n@@ -1138,7 +1136,7 @@ pub(crate) fn code_lens(\n                 command::show_references(\n                     implementation_title(locations.len()),\n                     &url,\n-                    position,\n+                    annotation_range.start,\n                     locations,\n                 )\n             });\n@@ -1149,19 +1147,17 @@ pub(crate) fn code_lens(\n                 data: Some(to_value(lsp_ext::CodeLensResolveData::Impls(goto_params)).unwrap()),\n             })\n         }\n-        AnnotationKind::HasReferences { position: file_position, data } => {\n+        AnnotationKind::HasReferences { file_id, data } => {\n             if !client_commands_config.show_reference {\n                 return Ok(());\n             }\n-            let line_index = snap.file_line_index(file_position.file_id)?;\n+            let line_index = snap.file_line_index(file_id)?;\n             let annotation_range = range(&line_index, annotation.range);\n-            let url = url(snap, file_position.file_id);\n-\n-            let position = position(&line_index, file_position.offset);\n+            let url = url(snap, file_id);\n \n             let id = lsp_types::TextDocumentIdentifier { uri: url.clone() };\n \n-            let doc_pos = lsp_types::TextDocumentPositionParams::new(id, position);\n+            let doc_pos = lsp_types::TextDocumentPositionParams::new(id, annotation_range.start);\n \n             let command = data.map(|ranges| {\n                 let locations: Vec<lsp_types::Location> =\n@@ -1170,7 +1166,7 @@ pub(crate) fn code_lens(\n                 command::show_references(\n                     reference_title(locations.len()),\n                     &url,\n-                    position,\n+                    annotation_range.start,\n                     locations,\n                 )\n             });"}]}