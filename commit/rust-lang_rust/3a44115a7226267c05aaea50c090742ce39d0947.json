{"sha": "3a44115a7226267c05aaea50c090742ce39d0947", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNDQxMTVhNzIyNjI2N2MwNWFhZWE1MGMwOTA3NDJjZTM5ZDA5NDc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-17T09:48:20Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-21T14:21:39Z"}, "message": "Add `Rustc` prefixes to `derive(Decodable, Encodable)`.\n\nAs a bit of a hack, make `rustc_serialize` an alias of the private\n`serialize` crate, just so the new derive continues working.\n\nFix #54287.", "tree": {"sha": "9b3ab517f1aaad55a1b0f648a3069aa93d4b72b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b3ab517f1aaad55a1b0f648a3069aa93d4b72b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a44115a7226267c05aaea50c090742ce39d0947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a44115a7226267c05aaea50c090742ce39d0947", "html_url": "https://github.com/rust-lang/rust/commit/3a44115a7226267c05aaea50c090742ce39d0947", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a44115a7226267c05aaea50c090742ce39d0947/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43061d3a78f0bbb713da4c35d3289f490efe8bea", "url": "https://api.github.com/repos/rust-lang/rust/commits/43061d3a78f0bbb713da4c35d3289f490efe8bea", "html_url": "https://github.com/rust-lang/rust/commit/43061d3a78f0bbb713da4c35d3289f490efe8bea"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "8b56ade21f955f84bc19d5cd4934f01fa151aeba", "filename": "src/test/run-pass-fulldeps/deriving-encodable-decodable-box.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-box.rs?ref=3a44115a7226267c05aaea50c090742ce39d0947", "patch": "@@ -14,11 +14,12 @@\n #![feature(rustc_private)]\n \n extern crate serialize;\n+use serialize as rustc_serialize;\n \n use serialize::{Encodable, Decodable};\n use serialize::json;\n \n-#[derive(Encodable, Decodable)]\n+#[derive(RustcEncodable, RustcDecodable)]\n struct A {\n     foo: Box<[bool]>,\n }"}, {"sha": "15edd4d49508e1806bd4d570ca0cc3edcc6a6a52", "filename": "src/test/run-pass-fulldeps/deriving-encodable-decodable-cell-refcell.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs?ref=3a44115a7226267c05aaea50c090742ce39d0947", "patch": "@@ -16,17 +16,18 @@\n #![feature(rustc_private)]\n \n extern crate serialize;\n+use serialize as rustc_serialize;\n \n use std::cell::{Cell, RefCell};\n use serialize::{Encodable, Decodable};\n use serialize::json;\n \n-#[derive(Encodable, Decodable)]\n+#[derive(RustcEncodable, RustcDecodable)]\n struct A {\n     baz: isize\n }\n \n-#[derive(Encodable, Decodable)]\n+#[derive(RustcEncodable, RustcDecodable)]\n struct B {\n     foo: Cell<bool>,\n     bar: RefCell<A>,"}, {"sha": "b95c947d21587881c55cb1f349496539057c3213", "filename": "src/test/run-pass-fulldeps/deriving-global.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-global.rs?ref=3a44115a7226267c05aaea50c090742ce39d0947", "patch": "@@ -11,6 +11,7 @@\n #![feature(rustc_private)]\n \n extern crate serialize;\n+use serialize as rustc_serialize;\n \n mod submod {\n     // if any of these are implemented without global calls for any\n@@ -20,21 +21,21 @@ mod submod {\n                Hash,\n                Clone,\n                Debug,\n-               Encodable, Decodable)]\n+               RustcEncodable, RustcDecodable)]\n     enum A { A1(usize), A2(isize) }\n \n     #[derive(PartialEq, PartialOrd, Eq, Ord,\n                Hash,\n                Clone,\n                Debug,\n-               Encodable, Decodable)]\n+               RustcEncodable, RustcDecodable)]\n     struct B { x: usize, y: isize }\n \n     #[derive(PartialEq, PartialOrd, Eq, Ord,\n                Hash,\n                Clone,\n                Debug,\n-               Encodable, Decodable)]\n+               RustcEncodable, RustcDecodable)]\n     struct C(usize, isize);\n \n }"}, {"sha": "1deeb24243714d4c688413605ea3dcadcad026d5", "filename": "src/test/run-pass-fulldeps/deriving-hygiene.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-hygiene.rs?ref=3a44115a7226267c05aaea50c090742ce39d0947", "patch": "@@ -11,6 +11,7 @@\n #![allow(non_upper_case_globals)]\n #![feature(rustc_private)]\n extern crate serialize;\n+use serialize as rustc_serialize;\n \n pub const other: u8 = 1;\n pub const f: u8 = 1;\n@@ -19,7 +20,7 @@ pub const s: u8 = 1;\n pub const state: u8 = 1;\n pub const cmp: u8 = 1;\n \n-#[derive(Ord,Eq,PartialOrd,PartialEq,Debug,Decodable,Encodable,Hash)]\n+#[derive(Ord,Eq,PartialOrd,PartialEq,Debug,RustcDecodable,RustcEncodable,Hash)]\n struct Foo {}\n \n fn main() {"}, {"sha": "5121ecd6cf31161b69e71dd1796e00e46e8fb715", "filename": "src/test/run-pass-fulldeps/issue-11881.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fissue-11881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fissue-11881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-11881.rs?ref=3a44115a7226267c05aaea50c090742ce39d0947", "patch": "@@ -15,6 +15,7 @@\n #![feature(rustc_private)]\n \n extern crate serialize;\n+use serialize as rustc_serialize;\n \n use std::io::Cursor;\n use std::io::prelude::*;\n@@ -25,12 +26,12 @@ use serialize::{Encodable, Encoder};\n use serialize::json;\n use serialize::opaque;\n \n-#[derive(Encodable)]\n+#[derive(RustcEncodable)]\n struct Foo {\n     baz: bool,\n }\n \n-#[derive(Encodable)]\n+#[derive(RustcEncodable)]\n struct Bar {\n     froboz: usize,\n }"}, {"sha": "5426dd94637a6ecbce2a07c532ee7397a71d0f07", "filename": "src/test/run-pass-fulldeps/issue-14021.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fissue-14021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a44115a7226267c05aaea50c090742ce39d0947/src%2Ftest%2Frun-pass-fulldeps%2Fissue-14021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-14021.rs?ref=3a44115a7226267c05aaea50c090742ce39d0947", "patch": "@@ -13,11 +13,12 @@\n #![feature(rustc_private)]\n \n extern crate serialize;\n+extern crate serialize as rustc_serialize;\n \n use serialize::{Encodable, Decodable};\n use serialize::json;\n \n-#[derive(Encodable, Decodable, PartialEq, Debug)]\n+#[derive(RustcEncodable, RustcDecodable, PartialEq, Debug)]\n struct UnitLikeStruct;\n \n pub fn main() {"}]}