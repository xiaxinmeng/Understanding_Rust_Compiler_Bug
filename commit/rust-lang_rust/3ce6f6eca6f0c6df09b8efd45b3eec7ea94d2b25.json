{"sha": "3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZTZmNmVjYTZmMGM2ZGYwOWI4ZWZkNDViM2VlYzdlYTk0ZDJiMjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T13:24:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T13:24:11Z"}, "message": "Auto merge of #57204 - czipperz:ord_docs_must_agree, r=sfackler\n\nMake std::cmp::Ord documentation specify what it means to agree with ParitalEq\n\nResolves #57157", "tree": {"sha": "50ea96382d393e70d77c66c033aa2d9dfe01260c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50ea96382d393e70d77c66c033aa2d9dfe01260c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25", "html_url": "https://github.com/rust-lang/rust/commit/3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7155690ffcdf2ce325361bdb5b64ad69c043662f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7155690ffcdf2ce325361bdb5b64ad69c043662f", "html_url": "https://github.com/rust-lang/rust/commit/7155690ffcdf2ce325361bdb5b64ad69c043662f"}, {"sha": "445dadca33f5109398d819dd4dd408c291d110fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/445dadca33f5109398d819dd4dd408c291d110fb", "html_url": "https://github.com/rust-lang/rust/commit/445dadca33f5109398d819dd4dd408c291d110fb"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "f420d0d00a4011b07320c7eb0f454d719ee2dba4", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=3ce6f6eca6f0c6df09b8efd45b3eec7ea94d2b25", "patch": "@@ -472,9 +472,11 @@ impl<T: Ord> Ord for Reverse<T> {\n /// Then you must define an implementation for `cmp()`. You may find it useful to use\n /// `cmp()` on your type's fields.\n ///\n-/// Implementations of `PartialEq`, `PartialOrd`, and `Ord` *must* agree with each other. It's\n-/// easy to accidentally make them disagree by deriving some of the traits and manually\n-/// implementing others.\n+/// Implementations of `PartialEq`, `PartialOrd`, and `Ord` *must*\n+/// agree with each other. That is, `a.cmp(b) == Ordering::Equal` if\n+/// and only if `a == b` and `Some(a.cmp(b)) == a.partial_cmp(b)` for\n+/// all `a` and `b`. It's easy to accidentally make them disagree by\n+/// deriving some of the traits and manually implementing others.\n ///\n /// Here's an example where you want to sort people by height only, disregarding `id`\n /// and `name`:"}]}