{"sha": "065f0b222d4e23ae3d4215061c5df7d248855717", "node_id": "C_kwDOAAsO6NoAKDA2NWYwYjIyMmQ0ZTIzYWUzZDQyMTUwNjFjNWRmN2QyNDg4NTU3MTc", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-14T18:12:49Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-14T20:27:38Z"}, "message": "Move query out of path.", "tree": {"sha": "47f3874cdafbd730228cda0c2d82b3944344b77e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47f3874cdafbd730228cda0c2d82b3944344b77e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/065f0b222d4e23ae3d4215061c5df7d248855717", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/065f0b222d4e23ae3d4215061c5df7d248855717", "html_url": "https://github.com/rust-lang/rust/commit/065f0b222d4e23ae3d4215061c5df7d248855717", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/065f0b222d4e23ae3d4215061c5df7d248855717/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40cb4d1bc78f9479b6c29ade5d2ecf89dc4eba35", "url": "https://api.github.com/repos/rust-lang/rust/commits/40cb4d1bc78f9479b6c29ade5d2ecf89dc4eba35", "html_url": "https://github.com/rust-lang/rust/commit/40cb4d1bc78f9479b6c29ade5d2ecf89dc4eba35"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "f0a0e7e3e929354e66d81f0e6d9f75abdfcc7270", "filename": "compiler/rustc_hir_analysis/src/coherence/orphan.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/065f0b222d4e23ae3d4215061c5df7d248855717/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065f0b222d4e23ae3d4215061c5df7d248855717/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs?ref=065f0b222d4e23ae3d4215061c5df7d248855717", "patch": "@@ -38,7 +38,6 @@ fn do_orphan_check_impl<'tcx>(\n     def_id: LocalDefId,\n ) -> Result<(), ErrorGuaranteed> {\n     let trait_def_id = trait_ref.def_id;\n-    let sp = tcx.def_span(def_id);\n \n     match traits::orphan_check(tcx, def_id.to_def_id()) {\n         Ok(()) => {}\n@@ -48,6 +47,7 @@ fn do_orphan_check_impl<'tcx>(\n                 bug!(\"{:?} is not an impl: {:?}\", def_id, item);\n             };\n             let tr = impl_.of_trait.as_ref().unwrap();\n+            let sp = tcx.def_span(def_id);\n \n             emit_orphan_check_error(\n                 tcx,\n@@ -237,7 +237,10 @@ fn do_orphan_check_impl<'tcx>(\n             | ty::GeneratorWitnessMIR(..)\n             | ty::Bound(..)\n             | ty::Placeholder(..)\n-            | ty::Infer(..) => span_bug!(sp, \"weird self type for autotrait impl\"),\n+            | ty::Infer(..) => {\n+                let sp = tcx.def_span(def_id);\n+                span_bug!(sp, \"weird self type for autotrait impl\")\n+            }\n \n             ty::Error(..) => (LocalImpl::Allow, NonlocalImpl::Allow),\n         };\n@@ -256,6 +259,7 @@ fn do_orphan_check_impl<'tcx>(\n                                 is one of the trait object's trait bounds\",\n                         trait = tcx.def_path_str(trait_def_id),\n                     );\n+                    let sp = tcx.def_span(def_id);\n                     let reported =\n                         struct_span_err!(tcx.sess, sp, E0321, \"{}\", msg).note(label).emit();\n                     return Err(reported);\n@@ -284,6 +288,7 @@ fn do_orphan_check_impl<'tcx>(\n                             non-struct/enum type\",\n                 )),\n             } {\n+                let sp = tcx.def_span(def_id);\n                 let reported =\n                     struct_span_err!(tcx.sess, sp, E0321, \"{}\", msg).span_label(sp, label).emit();\n                 return Err(reported);"}, {"sha": "bbe4e67977c9449e5871a412ad19c0b837f0c914", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/065f0b222d4e23ae3d4215061c5df7d248855717/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065f0b222d4e23ae3d4215061c5df7d248855717/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=065f0b222d4e23ae3d4215061c5df7d248855717", "patch": "@@ -1191,8 +1191,8 @@ impl<'v> RootCollector<'_, 'v> {\n     fn process_item(&mut self, id: hir::ItemId) {\n         match self.tcx.def_kind(id.owner_id) {\n             DefKind::Enum | DefKind::Struct | DefKind::Union => {\n-                if self.tcx.generics_of(id.owner_id).count() == 0\n-                    && self.mode == MonoItemCollectionMode::Eager\n+                if self.mode == MonoItemCollectionMode::Eager\n+                    && self.tcx.generics_of(id.owner_id).count() == 0\n                 {\n                     debug!(\"RootCollector: ADT drop-glue for `{id:?}`\",);\n "}]}