{"sha": "d4a0785464f567c8781f15819f8be74a95b0a3f0", "node_id": "C_kwDOAAsO6NoAKGQ0YTA3ODU0NjRmNTY3Yzg3ODFmMTU4MTlmOGJlNzRhOTViMGEzZjA", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-09-01T03:24:29Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-09-01T04:00:37Z"}, "message": "Correctly handle unescape warnings", "tree": {"sha": "c6d51c1e46f7b802ab239c30418abaa0a1539a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6d51c1e46f7b802ab239c30418abaa0a1539a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4a0785464f567c8781f15819f8be74a95b0a3f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a0785464f567c8781f15819f8be74a95b0a3f0", "html_url": "https://github.com/rust-lang/rust/commit/d4a0785464f567c8781f15819f8be74a95b0a3f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4a0785464f567c8781f15819f8be74a95b0a3f0/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c782767d47fc661f986a1cf42f899ed335070795", "url": "https://api.github.com/repos/rust-lang/rust/commits/c782767d47fc661f986a1cf42f899ed335070795", "html_url": "https://github.com/rust-lang/rust/commit/c782767d47fc661f986a1cf42f899ed335070795"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "28bec872c08ac0f417a13d1348a61eeb133f0e79", "filename": "clippy_dev/src/update_lints.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4a0785464f567c8781f15819f8be74a95b0a3f0/clippy_dev%2Fsrc%2Fupdate_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a0785464f567c8781f15819f8be74a95b0a3f0/clippy_dev%2Fsrc%2Fupdate_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fupdate_lints.rs?ref=d4a0785464f567c8781f15819f8be74a95b0a3f0", "patch": "@@ -977,7 +977,11 @@ fn remove_line_splices(s: &str) -> String {\n         .and_then(|s| s.strip_suffix('\"'))\n         .unwrap_or_else(|| panic!(\"expected quoted string, found `{}`\", s));\n     let mut res = String::with_capacity(s.len());\n-    unescape::unescape_literal(s, unescape::Mode::Str, &mut |range, _| res.push_str(&s[range]));\n+    unescape::unescape_literal(s, unescape::Mode::Str, &mut |range, ch| {\n+        if ch.is_ok() {\n+            res.push_str(&s[range]);\n+        }\n+    });\n     res\n }\n "}, {"sha": "abd681c53076e54aaea88cbc4535979a2da28acd", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4a0785464f567c8781f15819f8be74a95b0a3f0/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a0785464f567c8781f15819f8be74a95b0a3f0/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=d4a0785464f567c8781f15819f8be74a95b0a3f0", "patch": "@@ -805,7 +805,11 @@ fn check_newlines(fmtstr: &StrLit) -> bool {\n     let contents = fmtstr.symbol.as_str();\n \n     let mut cb = |r: Range<usize>, c: Result<char, EscapeError>| {\n-        let c = c.unwrap();\n+        let c = match c {\n+            Ok(c) => c,\n+            Err(e) if !e.is_fatal() => return,\n+            Err(e) => panic!(\"{:?}\", e),\n+        };\n \n         if r.end == contents.len() && c == '\\n' && !last_was_cr && !has_internal_newline {\n             should_lint = true;"}, {"sha": "6b7d5e9aea801b51f9b883e9aea3b59ec884153a", "filename": "clippy_utils/src/macros.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4a0785464f567c8781f15819f8be74a95b0a3f0/clippy_utils%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a0785464f567c8781f15819f8be74a95b0a3f0/clippy_utils%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmacros.rs?ref=d4a0785464f567c8781f15819f8be74a95b0a3f0", "patch": "@@ -389,8 +389,10 @@ impl FormatString {\n         };\n \n         let mut unescaped = String::with_capacity(inner.len());\n-        unescape_literal(inner, mode, &mut |_, ch| {\n-            unescaped.push(ch.unwrap());\n+        unescape_literal(inner, mode, &mut |_, ch| match ch {\n+            Ok(ch) => unescaped.push(ch),\n+            Err(e) if !e.is_fatal() => (),\n+            Err(e) => panic!(\"{:?}\", e),\n         });\n \n         let mut parts = Vec::new();"}, {"sha": "e2d274aeb0442700d650ff49b659548689030b4b", "filename": "tests/ui/crashes/ice-9405.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d4a0785464f567c8781f15819f8be74a95b0a3f0/tests%2Fui%2Fcrashes%2Fice-9405.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a0785464f567c8781f15819f8be74a95b0a3f0/tests%2Fui%2Fcrashes%2Fice-9405.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-9405.rs?ref=d4a0785464f567c8781f15819f8be74a95b0a3f0", "patch": "@@ -0,0 +1,11 @@\n+#![warn(clippy::useless_format)]\n+#![allow(clippy::print_literal)]\n+\n+fn main() {\n+    println!(\n+        \"\\\n+\n+            {}\",\n+        \"multiple skipped lines\"\n+    );\n+}"}, {"sha": "9a6e410f21ea8871b61fc315bfbe20a91faaceec", "filename": "tests/ui/crashes/ice-9405.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d4a0785464f567c8781f15819f8be74a95b0a3f0/tests%2Fui%2Fcrashes%2Fice-9405.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4a0785464f567c8781f15819f8be74a95b0a3f0/tests%2Fui%2Fcrashes%2Fice-9405.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-9405.stderr?ref=d4a0785464f567c8781f15819f8be74a95b0a3f0", "patch": "@@ -0,0 +1,11 @@\n+warning: multiple lines skipped by escaped newline\n+  --> $DIR/ice-9405.rs:6:10\n+   |\n+LL |           \"/\n+   |  __________^\n+LL | |\n+LL | |             {}\",\n+   | |____________^ skipping everything up to and including this point\n+\n+warning: 1 warning emitted\n+"}]}