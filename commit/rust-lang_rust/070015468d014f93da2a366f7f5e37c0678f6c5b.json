{"sha": "070015468d014f93da2a366f7f5e37c0678f6c5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MDAxNTQ2OGQwMTRmOTNkYTJhMzY2ZjdmNWUzN2MwNjc4ZjZjNWI=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-06-04T08:06:24Z"}, "committer": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-06-06T20:11:48Z"}, "message": "Removed IteratorUtil::to_vec and iter::to_vec", "tree": {"sha": "b603cf5326186d36a3d3f1677dcde81bb18829e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b603cf5326186d36a3d3f1677dcde81bb18829e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/070015468d014f93da2a366f7f5e37c0678f6c5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/070015468d014f93da2a366f7f5e37c0678f6c5b", "html_url": "https://github.com/rust-lang/rust/commit/070015468d014f93da2a366f7f5e37c0678f6c5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/070015468d014f93da2a366f7f5e37c0678f6c5b/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "857d433b9a300989f373f34771218895ec59715a", "url": "https://api.github.com/repos/rust-lang/rust/commits/857d433b9a300989f373f34771218895ec59715a", "html_url": "https://github.com/rust-lang/rust/commit/857d433b9a300989f373f34771218895ec59715a"}], "stats": {"total": 63, "additions": 11, "deletions": 52}, "files": [{"sha": "9a50b8a67416db49df433bc606e757fce003c0e3", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 11, "deletions": 33, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/070015468d014f93da2a366f7f5e37c0678f6c5b/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/070015468d014f93da2a366f7f5e37c0678f6c5b/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=070015468d014f93da2a366f7f5e37c0678f6c5b", "patch": "@@ -51,16 +51,17 @@ pub trait Times {\n     fn times(&self, it: &fn() -> bool) -> bool;\n }\n \n+#[allow(missing_doc)]\n pub trait FromIter<T> {\n-    // Build a container with elements from an internal iterator.\n-    //\n-    // # Example:\n-    //\n-    // ~~~ {.rust}\n-    // let xs = ~[1, 2, 3];\n-    // let ys: ~[int] = do FromIter::from_iter |f| { xs.each(|x| f(*x)) };\n-    // assert_eq!(xs, ys);\n-    // ~~~\n+    /// Build a container with elements from an internal iterator.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ~~~ {.rust}\n+    /// let xs = ~[1, 2, 3];\n+    /// let ys: ~[int] = do FromIter::from_iter |f| { xs.each(|x| f(*x)) };\n+    /// assert_eq!(xs, ys);\n+    /// ~~~\n     pub fn from_iter(iter: &fn(f: &fn(T) -> bool) -> bool) -> Self;\n }\n \n@@ -74,22 +75,6 @@ impl<T> FromIter<T> for ~[T]{\n     }\n }\n \n-/**\n- * Transform an internal iterator into an owned vector.\n- *\n- * # Example:\n- *\n- * ~~~ {.rust}\n- * let xs = ~[1, 2, 3];\n- * let ys = do iter::to_vec |f| { xs.each(|x| f(*x)) };\n- * assert_eq!(xs, ys);\n- * ~~~\n- */\n-#[inline(always)]\n-pub fn to_vec<T>(iter: &fn(f: &fn(T) -> bool) -> bool) -> ~[T] {\n-    FromIter::from_iter(iter)\n-}\n-\n /**\n  * Return true if `predicate` is true for any values yielded by an internal iterator.\n  *\n@@ -282,16 +267,9 @@ mod tests {\n     use int;\n     use uint;\n \n-    #[test]\n-    fn test_to_vec() {\n-        let xs = ~[1, 2, 3];\n-        let ys = do to_vec |f| { xs.each(|x| f(*x)) };\n-        assert_eq!(xs, ys);\n-    }\n-\n     #[test]\n     fn test_from_iter() {\n-        let xs: ~[int] = ~[1, 2, 3];\n+        let xs: = ~[1, 2, 3];\n         let ys: ~[int] = do FromIter::from_iter |f| { xs.each(|x| f(*x)) };\n         assert_eq!(xs, ys);\n     }"}, {"sha": "2a3bbc3322d2b3b8a047488b9941233bca35d712", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/070015468d014f93da2a366f7f5e37c0678f6c5b/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/070015468d014f93da2a366f7f5e37c0678f6c5b/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=070015468d014f93da2a366f7f5e37c0678f6c5b", "patch": "@@ -242,20 +242,6 @@ pub trait IteratorUtil<A> {\n     /// ~~~\n     fn advance(&mut self, f: &fn(A) -> bool) -> bool;\n \n-    /// Loops through the entire iterator, accumulating all of the elements into\n-    /// a vector.\n-    ///\n-    /// # Example\n-    ///\n-    /// ~~~ {.rust}\n-    /// use std::iterator::*;\n-    ///\n-    /// let a = [1, 2, 3, 4, 5];\n-    /// let b = a.iter().transform(|&x| x).to_vec();\n-    /// assert!(a == b);\n-    /// ~~~\n-    fn to_vec(&mut self) -> ~[A];\n-\n     /// Loops through the entire iterator, collecting all of the elements into\n     /// a container implementing `FromIter`.\n     ///\n@@ -429,11 +415,6 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n         }\n     }\n \n-    #[inline(always)]\n-    fn to_vec(&mut self) -> ~[A] {\n-        iter::to_vec::<A>(|f| self.advance(f))\n-    }\n-\n     #[inline(always)]\n     fn collect<B: FromIter<A>>(&mut self) -> B {\n         FromIter::from_iter::<A, B>(|f| self.advance(f))"}]}