{"sha": "c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YjEwNzdkZmJjODM1ZjFkMWQxYTllZmJjOWIxMWQ2YjljMGUzNWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-17T17:16:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-17T17:16:23Z"}, "message": "auto merge of #15706 : phi-gamma/rust/master, r=huonw\n\nI kept changes to each file in a separate commit. Please let me know if you prefer them\r\nsquashed!", "tree": {"sha": "07dbbc85b02886ff05bae5539db8aa2972ccee05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07dbbc85b02886ff05bae5539db8aa2972ccee05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d", "html_url": "https://github.com/rust-lang/rust/commit/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92b5bf86b775b2749b2e5f4300650370052c9001", "url": "https://api.github.com/repos/rust-lang/rust/commits/92b5bf86b775b2749b2e5f4300650370052c9001", "html_url": "https://github.com/rust-lang/rust/commit/92b5bf86b775b2749b2e5f4300650370052c9001"}, {"sha": "a1def0856ed8c658a4985f405b1ec04eb85c4786", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1def0856ed8c658a4985f405b1ec04eb85c4786", "html_url": "https://github.com/rust-lang/rust/commit/a1def0856ed8c658a4985f405b1ec04eb85c4786"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "00d698e611e34eb3d7651e1ed818f691d8e589e7", "filename": "man/rustc.1", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d", "patch": "@@ -68,7 +68,7 @@ AST nodes and blocks with IDs), or flowgraph=<nodeid> (graphviz\n formatted flowgraph for node)\n .TP\n \\fB\\-\\-dep-info\\fR [FILENAME]\n-Output dependency info to <filename> after compiling, in o format suitable\n+Output dependency info to <filename> after compiling, in a format suitable\n for use by Makefiles.\n .TP\n \\fB\\-\\-sysroot\\fR PATH"}, {"sha": "ce037251e46b44940fa754d5c8f6185647cfff9d", "filename": "src/doc/complement-lang-faq.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d/src%2Fdoc%2Fcomplement-lang-faq.md", "raw_url": "https://github.com/rust-lang/rust/raw/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d/src%2Fdoc%2Fcomplement-lang-faq.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fcomplement-lang-faq.md?ref=c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d", "patch": "@@ -31,7 +31,7 @@ You may also be interested in browsing [GitHub's Rust][github-rust] page.\n \n ## Does it run on Windows?\n \n-Yes. All development happens in lock-step on all 3 target platforms. Using MinGW, not Cygwin. Note that the windows implementation currently has some limitations: in particular 64-bit build is [not fully supported yet][win64], and all executables created by rustc [depends on libgcc DLL at runtime][libgcc].\n+Yes. All development happens in lock-step on all 3 target platforms. Using MinGW, not Cygwin. Note that the windows implementation currently has some limitations: in particular 64-bit build is [not fully supported yet][win64], and all executables created by rustc [depend on libgcc DLL at runtime][libgcc].\n \n [win64]: https://github.com/rust-lang/rust/issues/1237\n [libgcc]: https://github.com/rust-lang/rust/issues/11782\n@@ -68,7 +68,7 @@ Cleanup through RAII-style destructors is more likely to work than in catch bloc\n \n ## Why aren't modules type-parametric?\n \n-We want to maintain the option to parametrize at runtime. We may make eventually change this limitation, but initially this is how type parameters were implemented.\n+We want to maintain the option to parametrize at runtime. We may eventually change this limitation, but initially this is how type parameters were implemented.\n \n ## Why aren't values type-parametric? Why only items?\n "}, {"sha": "ba401d313d87fac1a3e9b600cd49ce1679894359", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=c4b1077dfbc835f1d1d1a9efbc9b11d6b9c0e35d", "patch": "@@ -76,7 +76,7 @@ impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n             ),\n             ObsoleteManagedExpr => (\n                 \"`@` notation for a managed pointer allocation\",\n-                \"use the `box(GC)` oeprator instead of `@`\"\n+                \"use the `box(GC)` operator instead of `@`\"\n             ),\n         };\n "}]}