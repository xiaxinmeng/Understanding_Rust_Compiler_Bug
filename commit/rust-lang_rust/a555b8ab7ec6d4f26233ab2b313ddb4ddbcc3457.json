{"sha": "a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457", "node_id": "C_kwDOAAsO6NoAKGE1NTViOGFiN2VjNmQ0ZjI2MjMzYWIyYjMxM2RkYjRkZGJjYzM0NTc", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-16T15:11:45Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-22T17:17:50Z"}, "message": "Add fixme", "tree": {"sha": "e3cf57ced6c86fea9b66047d99335ed7a1e5508d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3cf57ced6c86fea9b66047d99335ed7a1e5508d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457", "html_url": "https://github.com/rust-lang/rust/commit/a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2f720d9fe12a0981a14fd16f84cb8b23c284432", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f720d9fe12a0981a14fd16f84cb8b23c284432", "html_url": "https://github.com/rust-lang/rust/commit/a2f720d9fe12a0981a14fd16f84cb8b23c284432"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "42cec0c69351e586f25a57fa5b3879d9ca793a73", "filename": "build_system/rustc_info.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457/build_system%2Frustc_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457/build_system%2Frustc_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Frustc_info.rs?ref=a555b8ab7ec6d4f26233ab2b313ddb4ddbcc3457", "patch": "@@ -82,6 +82,7 @@ pub(crate) fn get_default_sysroot(rustc: &Path) -> PathBuf {\n     Path::new(String::from_utf8(default_sysroot).unwrap().trim()).to_owned()\n }\n \n+// FIXME call once for each target and pass result around in struct\n pub(crate) fn get_file_name(rustc: &Path, crate_name: &str, crate_type: &str) -> String {\n     let file_name = Command::new(rustc)\n         .stderr(Stdio::inherit())"}]}