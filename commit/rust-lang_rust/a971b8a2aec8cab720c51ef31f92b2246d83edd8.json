{"sha": "a971b8a2aec8cab720c51ef31f92b2246d83edd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NzFiOGEyYWVjOGNhYjcyMGM1MWVmMzFmOTJiMjI0NmQ4M2VkZDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-30T09:19:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-30T11:05:35Z"}, "message": "fix for GlobalCtxt changes", "tree": {"sha": "f6cd9048acdf635af5f7d33d1583736018bcde52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6cd9048acdf635af5f7d33d1583736018bcde52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a971b8a2aec8cab720c51ef31f92b2246d83edd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a971b8a2aec8cab720c51ef31f92b2246d83edd8", "html_url": "https://github.com/rust-lang/rust/commit/a971b8a2aec8cab720c51ef31f92b2246d83edd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a971b8a2aec8cab720c51ef31f92b2246d83edd8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392d74569970742cbeb6c6e83faf44d5d35e9625", "url": "https://api.github.com/repos/rust-lang/rust/commits/392d74569970742cbeb6c6e83faf44d5d35e9625", "html_url": "https://github.com/rust-lang/rust/commit/392d74569970742cbeb6c6e83faf44d5d35e9625"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "95146513509bfb6ef16c42a5a109e719f8aed9d2", "filename": "benches/helpers/miri_helper.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a971b8a2aec8cab720c51ef31f92b2246d83edd8/benches%2Fhelpers%2Fmiri_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a971b8a2aec8cab720c51ef31f92b2246d83edd8/benches%2Fhelpers%2Fmiri_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fmiri_helper.rs?ref=a971b8a2aec8cab720c51ef31f92b2246d83edd8", "patch": "@@ -7,7 +7,7 @@ extern crate test;\n \n use self::miri::eval_main;\n use rustc::hir::def_id::LOCAL_CRATE;\n-use rustc_interface::interface;\n+use rustc_interface::{interface, Queries};\n use rustc_driver::Compilation;\n use crate::test::Bencher;\n \n@@ -16,10 +16,10 @@ struct MiriCompilerCalls<'a> {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls<'_> {\n-    fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n+    fn after_analysis<'tcx>(&mut self, compiler: &interface::Compiler, queries: &'tcx Queries<'tcx>) -> Compilation {\n         compiler.session().abort_if_errors();\n \n-        compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n+        queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\n                 \"no main or start function found\",\n             );"}, {"sha": "5e3f663de2e585c2d86589c422c39040253da1c1", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a971b8a2aec8cab720c51ef31f92b2246d83edd8/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a971b8a2aec8cab720c51ef31f92b2246d83edd8/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=a971b8a2aec8cab720c51ef31f92b2246d83edd8", "patch": "@@ -15,7 +15,7 @@ use std::sync::{Mutex, Arc};\n use std::io;\n \n \n-use rustc_interface::interface;\n+use rustc_interface::{interface, Queries};\n use rustc::hir::{self, itemlikevisit};\n use rustc::ty::TyCtxt;\n use rustc::hir::def_id::LOCAL_CRATE;\n@@ -29,9 +29,9 @@ struct MiriCompilerCalls {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls {\n-    fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n+    fn after_analysis<'tcx>(&mut self, compiler: &interface::Compiler, queries: &'tcx Queries<'tcx>) -> Compilation {\n         compiler.session().abort_if_errors();\n-        compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n+        queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             if std::env::args().any(|arg| arg == \"--test\") {\n                 struct Visitor<'tcx>(TyCtxt<'tcx>);\n                 impl<'tcx, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'tcx> {"}, {"sha": "59cb19476ac5c4ecdc54ea4a592e837b875c031f", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a971b8a2aec8cab720c51ef31f92b2246d83edd8/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a971b8a2aec8cab720c51ef31f92b2246d83edd8/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=a971b8a2aec8cab720c51ef31f92b2246d83edd8", "patch": "@@ -20,7 +20,7 @@ use std::env;\n \n use hex::FromHexError;\n \n-use rustc_interface::interface;\n+use rustc_interface::{interface, Queries};\n use rustc::hir::def_id::LOCAL_CRATE;\n use rustc_driver::Compilation;\n \n@@ -29,11 +29,11 @@ struct MiriCompilerCalls {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls {\n-    fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n+    fn after_analysis<'tcx>(&mut self, compiler: &interface::Compiler, queries: &'tcx Queries<'tcx>) -> Compilation {\n         init_late_loggers();\n         compiler.session().abort_if_errors();\n \n-        compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n+        queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\"no main function found!\");\n             let mut config = self.miri_config.clone();\n "}]}