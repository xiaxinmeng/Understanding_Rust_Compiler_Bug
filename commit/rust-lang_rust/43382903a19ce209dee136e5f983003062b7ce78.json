{"sha": "43382903a19ce209dee136e5f983003062b7ce78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMzgyOTAzYTE5Y2UyMDlkZWUxMzZlNWY5ODMwMDMwNjJiN2NlNzg=", "commit": {"author": {"name": "Djzin", "email": "djzin@users.noreply.github.com", "date": "2017-02-18T20:58:12Z"}, "committer": {"name": "Djzin", "email": "djzin@users.noreply.github.com", "date": "2017-02-18T20:58:12Z"}, "message": "add impl for RangeToInclusive", "tree": {"sha": "f7e7e7f82e439b4374bee10fcbd060b562e3b0da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7e7e7f82e439b4374bee10fcbd060b562e3b0da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43382903a19ce209dee136e5f983003062b7ce78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43382903a19ce209dee136e5f983003062b7ce78", "html_url": "https://github.com/rust-lang/rust/commit/43382903a19ce209dee136e5f983003062b7ce78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43382903a19ce209dee136e5f983003062b7ce78/comments", "author": {"login": "djzin", "id": 22416015, "node_id": "MDQ6VXNlcjIyNDE2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/22416015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djzin", "html_url": "https://github.com/djzin", "followers_url": "https://api.github.com/users/djzin/followers", "following_url": "https://api.github.com/users/djzin/following{/other_user}", "gists_url": "https://api.github.com/users/djzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/djzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djzin/subscriptions", "organizations_url": "https://api.github.com/users/djzin/orgs", "repos_url": "https://api.github.com/users/djzin/repos", "events_url": "https://api.github.com/users/djzin/events{/privacy}", "received_events_url": "https://api.github.com/users/djzin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "djzin", "id": 22416015, "node_id": "MDQ6VXNlcjIyNDE2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/22416015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djzin", "html_url": "https://github.com/djzin", "followers_url": "https://api.github.com/users/djzin/followers", "following_url": "https://api.github.com/users/djzin/following{/other_user}", "gists_url": "https://api.github.com/users/djzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/djzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djzin/subscriptions", "organizations_url": "https://api.github.com/users/djzin/orgs", "repos_url": "https://api.github.com/users/djzin/repos", "events_url": "https://api.github.com/users/djzin/events{/privacy}", "received_events_url": "https://api.github.com/users/djzin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65c876f2d30ddbd316849dc9092eb2b7b20bdff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/65c876f2d30ddbd316849dc9092eb2b7b20bdff9", "html_url": "https://github.com/rust-lang/rust/commit/65c876f2d30ddbd316849dc9092eb2b7b20bdff9"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "e4b94a1d70ee4189fe3ce610721aa52cf0bd096c", "filename": "src/libcollections/range.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43382903a19ce209dee136e5f983003062b7ce78/src%2Flibcollections%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43382903a19ce209dee136e5f983003062b7ce78/src%2Flibcollections%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Frange.rs?ref=43382903a19ce209dee136e5f983003062b7ce78", "patch": "@@ -14,7 +14,7 @@\n \n //! Range syntax.\n \n-use core::ops::{RangeFull, Range, RangeTo, RangeFrom, RangeInclusive};\n+use core::ops::{RangeFull, Range, RangeTo, RangeFrom, RangeInclusive, RangeToInclusive};\n use Bound::{self, Excluded, Included, Unbounded};\n \n /// **RangeArgument** is implemented by Rust's built-in range types, produced\n@@ -121,6 +121,16 @@ impl<T> RangeArgument<T> for RangeInclusive<T> {\n     }\n }\n \n+#[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n+impl<T> RangeArgument<T> for RangeToInclusive<T> {\n+    fn start(&self) -> Bound<&T> {\n+        Unbounded\n+    }\n+    fn end(&self) -> Bound<&T> {\n+        Included(&self.end)\n+    }\n+}\n+\n impl<T> RangeArgument<T> for (Bound<T>, Bound<T>) {\n     fn start(&self) -> Bound<&T> {\n         match *self {"}, {"sha": "2c899d96940ece9e222adc3ff21600f7f164c708", "filename": "src/libcollectionstest/btree/map.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43382903a19ce209dee136e5f983003062b7ce78/src%2Flibcollectionstest%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43382903a19ce209dee136e5f983003062b7ce78/src%2Flibcollectionstest%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fbtree%2Fmap.rs?ref=43382903a19ce209dee136e5f983003062b7ce78", "patch": "@@ -200,6 +200,8 @@ fn test_range_inclusive() {\n     check(map.range(0...size - 1), map.range(..size));\n     check(map.range(-1...-1), vec![]);\n     check(map.range(-1...size), map.range(..));\n+    check(map.range(...size), map.range(..));\n+    check(map.range(...200), map.range(..201));\n     check(map.range(5...8), vec![(&5, &5), (&6, &6), (&7, &7), (&8, &8)]);\n     check(map.range(-1...0), vec![(&0, &0)]);\n     check(map.range(-1...2), vec![(&0, &0), (&1, &1), (&2, &2)]);"}, {"sha": "06d70800d392560e8c99e44fd65edc878c95a114", "filename": "src/libcollectionstest/vec.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43382903a19ce209dee136e5f983003062b7ce78/src%2Flibcollectionstest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43382903a19ce209dee136e5f983003062b7ce78/src%2Flibcollectionstest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec.rs?ref=43382903a19ce209dee136e5f983003062b7ce78", "patch": "@@ -528,6 +528,11 @@ fn test_drain_inclusive_range() {\n     for _ in v.drain(0...3) {\n     }\n     assert_eq!(v, &[\"4\".to_string(), \"5\".to_string()]);\n+\n+    let mut v: Vec<_> = (0...1).map(|x| x.to_string()).collect();\n+    for _ in v.drain(...0) {\n+    }\n+    assert_eq!(v, &[\"1\".to_string()]);\n }\n \n #[test]"}]}