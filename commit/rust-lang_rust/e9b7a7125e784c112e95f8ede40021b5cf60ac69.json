{"sha": "e9b7a7125e784c112e95f8ede40021b5cf60ac69", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YjdhNzEyNWU3ODRjMTEyZTk1ZjhlZGU0MDAyMWI1Y2Y2MGFjNjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-12T13:50:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-12T13:50:57Z"}, "message": "Auto merge of #4085 - phansch:empty_loop_tests, r=matthiaskrgr\n\nAdd tests for empty_loop lint\n\nchangelog: none\n\nCloses #4072", "tree": {"sha": "bd72f65ca9b0209315008c85c7d23b68462530ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd72f65ca9b0209315008c85c7d23b68462530ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9b7a7125e784c112e95f8ede40021b5cf60ac69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9b7a7125e784c112e95f8ede40021b5cf60ac69", "html_url": "https://github.com/rust-lang/rust/commit/e9b7a7125e784c112e95f8ede40021b5cf60ac69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9b7a7125e784c112e95f8ede40021b5cf60ac69/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "feb18c364cfb70ad9bce1799e2e224fc38111051", "url": "https://api.github.com/repos/rust-lang/rust/commits/feb18c364cfb70ad9bce1799e2e224fc38111051", "html_url": "https://github.com/rust-lang/rust/commit/feb18c364cfb70ad9bce1799e2e224fc38111051"}, {"sha": "9a24ab8466b8e11aa00ae998671e6f41f80edb09", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a24ab8466b8e11aa00ae998671e6f41f80edb09", "html_url": "https://github.com/rust-lang/rust/commit/9a24ab8466b8e11aa00ae998671e6f41f80edb09"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "486e419bee56aefc8639846b1ec4fa888ebe12a5", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e9b7a7125e784c112e95f8ede40021b5cf60ac69/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9b7a7125e784c112e95f8ede40021b5cf60ac69/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=e9b7a7125e784c112e95f8ede40021b5cf60ac69", "patch": "@@ -0,0 +1,9 @@\n+#![allow(dead_code)]\n+\n+/// Used to test that certain lints don't trigger in imported external macros\n+#[macro_export]\n+macro_rules! foofoo {\n+    () => {\n+        loop {}\n+    };\n+}"}, {"sha": "fb9f2cb9cf41f3cf68aef414cb58a6535362abd3", "filename": "tests/ui/empty_loop.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e9b7a7125e784c112e95f8ede40021b5cf60ac69/tests%2Fui%2Fempty_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9b7a7125e784c112e95f8ede40021b5cf60ac69/tests%2Fui%2Fempty_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_loop.rs?ref=e9b7a7125e784c112e95f8ede40021b5cf60ac69", "patch": "@@ -0,0 +1,52 @@\n+// aux-build:macro_rules.rs\n+\n+#![warn(clippy::empty_loop)]\n+#![allow(clippy::unused_label)]\n+\n+#[macro_use]\n+extern crate macro_rules;\n+\n+fn should_trigger() {\n+    loop {}\n+    loop {\n+        loop {}\n+    }\n+\n+    'outer: loop {\n+        'inner: loop {}\n+    }\n+}\n+\n+fn should_not_trigger() {\n+    loop {\n+        panic!(\"This is fine\")\n+    }\n+    let ten_millis = std::time::Duration::from_millis(10);\n+    loop {\n+        std::thread::sleep(ten_millis)\n+    }\n+\n+    #[allow(clippy::never_loop)]\n+    'outer: loop {\n+        'inner: loop {\n+            break 'inner;\n+        }\n+        break 'outer;\n+    }\n+\n+    // Make sure `allow` works for this lint\n+    #[allow(clippy::empty_loop)]\n+    loop {}\n+\n+    // We don't lint loops inside macros\n+    macro_rules! foo {\n+        () => {\n+            loop {}\n+        };\n+    }\n+\n+    // We don't lint external macros\n+    foofoo!()\n+}\n+\n+fn main() {}"}, {"sha": "41b79900425103bcde10fd81149b8b977438e53f", "filename": "tests/ui/empty_loop.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e9b7a7125e784c112e95f8ede40021b5cf60ac69/tests%2Fui%2Fempty_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9b7a7125e784c112e95f8ede40021b5cf60ac69/tests%2Fui%2Fempty_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_loop.stderr?ref=e9b7a7125e784c112e95f8ede40021b5cf60ac69", "patch": "@@ -0,0 +1,22 @@\n+error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+  --> $DIR/empty_loop.rs:10:5\n+   |\n+LL |     loop {}\n+   |     ^^^^^^^\n+   |\n+   = note: `-D clippy::empty-loop` implied by `-D warnings`\n+\n+error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+  --> $DIR/empty_loop.rs:12:9\n+   |\n+LL |         loop {}\n+   |         ^^^^^^^\n+\n+error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+  --> $DIR/empty_loop.rs:16:9\n+   |\n+LL |         'inner: loop {}\n+   |         ^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}