{"sha": "3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MDBiZjhhZTNhYWZkZDNhYjEzYTBlNjQwMGQ0N2JjNWNiMmUxMjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-23T06:44:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-23T06:44:15Z"}, "message": "Auto merge of #52612 - matthewjasper:remove-unnecessary-flow, r=nikomatsakis\n\nDon't keep the possibly initialized flow around longer than needed\n\nThe possibly initialized flow isn't used after liveness is computed, so don't keep it around. Locally this is about a 10% time win for tuple-stress (which is spending a lot of time calculating flows now that it's not spending so much on liveness).\n\nr? @nikomatsakis", "tree": {"sha": "ec441a6af1d05d9044db6ef39c8686eb1d9fe97c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec441a6af1d05d9044db6ef39c8686eb1d9fe97c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "html_url": "https://github.com/rust-lang/rust/commit/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "url": "https://api.github.com/repos/rust-lang/rust/commits/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "html_url": "https://github.com/rust-lang/rust/commit/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b"}, {"sha": "1d912bfb422b187d929a2bc3542556a78b19257d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d912bfb422b187d929a2bc3542556a78b19257d", "html_url": "https://github.com/rust-lang/rust/commit/1d912bfb422b187d929a2bc3542556a78b19257d"}], "stats": {"total": 20, "additions": 1, "deletions": 19}, "files": [{"sha": "6dfcece3071c9a5a215c7c224896d14b9a476619", "filename": "src/librustc_mir/borrow_check/flows.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs?ref=3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "patch": "@@ -26,15 +26,14 @@ use dataflow::move_paths::HasMoveData;\n use dataflow::Borrows;\n use dataflow::{EverInitializedPlaces, MovingOutStatements};\n use dataflow::{FlowAtLocation, FlowsAtLocation};\n-use dataflow::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n+use dataflow::MaybeUninitializedPlaces;\n use either::Either;\n use std::fmt;\n use std::rc::Rc;\n \n // (forced to be `pub` due to its use as an associated type below.)\n crate struct Flows<'b, 'gcx: 'tcx, 'tcx: 'b> {\n     borrows: FlowAtLocation<Borrows<'b, 'gcx, 'tcx>>,\n-    pub inits: FlowAtLocation<MaybeInitializedPlaces<'b, 'gcx, 'tcx>>,\n     pub uninits: FlowAtLocation<MaybeUninitializedPlaces<'b, 'gcx, 'tcx>>,\n     pub move_outs: FlowAtLocation<MovingOutStatements<'b, 'gcx, 'tcx>>,\n     pub ever_inits: FlowAtLocation<EverInitializedPlaces<'b, 'gcx, 'tcx>>,\n@@ -46,15 +45,13 @@ crate struct Flows<'b, 'gcx: 'tcx, 'tcx: 'b> {\n impl<'b, 'gcx, 'tcx> Flows<'b, 'gcx, 'tcx> {\n     crate fn new(\n         borrows: FlowAtLocation<Borrows<'b, 'gcx, 'tcx>>,\n-        inits: FlowAtLocation<MaybeInitializedPlaces<'b, 'gcx, 'tcx>>,\n         uninits: FlowAtLocation<MaybeUninitializedPlaces<'b, 'gcx, 'tcx>>,\n         move_outs: FlowAtLocation<MovingOutStatements<'b, 'gcx, 'tcx>>,\n         ever_inits: FlowAtLocation<EverInitializedPlaces<'b, 'gcx, 'tcx>>,\n         polonius_output: Option<Rc<Output<RegionVid, BorrowIndex, LocationIndex>>>,\n     ) -> Self {\n         Flows {\n             borrows,\n-            inits,\n             uninits,\n             move_outs,\n             ever_inits,\n@@ -81,7 +78,6 @@ impl<'b, 'gcx, 'tcx> Flows<'b, 'gcx, 'tcx> {\n macro_rules! each_flow {\n     ($this:ident, $meth:ident($arg:ident)) => {\n         FlowAtLocation::$meth(&mut $this.borrows, $arg);\n-        FlowAtLocation::$meth(&mut $this.inits, $arg);\n         FlowAtLocation::$meth(&mut $this.uninits, $arg);\n         FlowAtLocation::$meth(&mut $this.move_outs, $arg);\n         FlowAtLocation::$meth(&mut $this.ever_inits, $arg);\n@@ -134,18 +130,6 @@ impl<'b, 'gcx, 'tcx> fmt::Display for Flows<'b, 'gcx, 'tcx> {\n         });\n         s.push_str(\"] \");\n \n-        s.push_str(\"inits: [\");\n-        let mut saw_one = false;\n-        self.inits.each_state_bit(|mpi_init| {\n-            if saw_one {\n-                s.push_str(\", \");\n-            };\n-            saw_one = true;\n-            let move_path = &self.inits.operator().move_data().move_paths[mpi_init];\n-            s.push_str(&format!(\"{}\", move_path));\n-        });\n-        s.push_str(\"] \");\n-\n         s.push_str(\"uninits: [\");\n         let mut saw_one = false;\n         self.uninits.each_state_bit(|mpi_uninit| {"}, {"sha": "f581b7104a386b9985be46281e7bab2144339c7c", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "patch": "@@ -216,7 +216,6 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         &borrow_set,\n     );\n     let regioncx = Rc::new(regioncx);\n-    let flow_inits = flow_inits; // remove mut\n \n     let flow_borrows = FlowAtLocation::new(do_dataflow(\n         tcx,\n@@ -262,7 +261,6 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n \n     let mut state = Flows::new(\n         flow_borrows,\n-        flow_inits,\n         flow_uninits,\n         flow_move_outs,\n         flow_ever_inits,"}]}