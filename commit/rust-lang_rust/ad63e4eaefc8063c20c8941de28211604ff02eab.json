{"sha": "ad63e4eaefc8063c20c8941de28211604ff02eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNjNlNGVhZWZjODA2M2MyMGM4OTQxZGUyODIxMTYwNGZmMDJlYWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-29T14:45:12Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-29T14:45:12Z"}, "message": "Update ui output to latest nightly", "tree": {"sha": "9432deabf9b63764453a7e093789cd1fc6e21d55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9432deabf9b63764453a7e093789cd1fc6e21d55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad63e4eaefc8063c20c8941de28211604ff02eab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAloex/gACgkQpp+NIls6\n19l1bhAAshYbKChqEhIRpHkZvAHFZjlfb4+5nMQQ9ufPH/8c2Ch+l7UJgtb9QOW4\n2e1d0RUUVFkZ3wNdCX8Rkj2NaiRe+7VlDpOv6Chz+WfJSBIYE1WEcR+8caYCpc7B\nvIdqRwwDSBwT6aRCv74pMTgGCAAKY2oQ9FQzj8gbgofzAwm83qRyyu/vgFLEvbTh\n/+P4KICnzWy9fR45Dre7+Kr5VsbEOKleRrSDSwVWZXwmUmrsv7PpHhdLilUWJnC5\nvMokW7JJuDCE7cq9egkHWsx+bcXa3AUVtQdrzYokuuma0+Ty2RPZkBBdug9Uko/b\nA1X/ABj6csSCR6R7is36vDlLJf+iCIvW7v9Ks/wiKhZ8pCSV/4KcHU/38tvz6cfk\ny1jk47ZauwpeR7Rj2Bnd+7ncJV9RVd/TkRWK4r+s/3t0nCPqU+yU5Rmp5iTxEOe1\nY2bTO82JjWt9oxxT1hdMxHIBq4c0OYFqadEyl33zf8S+2Z03K50BluPq1gQj2LAU\na7HH2nFpnSgi5cKc813RUcxGqjEFpW5miQ1NZ32GDkIEzhJkseXU77bjcQxuNa/4\nxIrbmz9/IwNkGG54eReONnB/eKiaFnKS9p++6RSMFsZudnAyO+FIjzwn53PwtFev\nfexxztFj5f8SFFBliJw9IWZYe3kbxw4Q42dzoKz6hgraInOoRuA=\n=DJTh\n-----END PGP SIGNATURE-----", "payload": "tree 9432deabf9b63764453a7e093789cd1fc6e21d55\nparent 34da5d93ef1f044661ddd0724ff3b813a7cbac58\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1511966712 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1511966712 +0100\n\nUpdate ui output to latest nightly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad63e4eaefc8063c20c8941de28211604ff02eab", "html_url": "https://github.com/rust-lang/rust/commit/ad63e4eaefc8063c20c8941de28211604ff02eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad63e4eaefc8063c20c8941de28211604ff02eab/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34da5d93ef1f044661ddd0724ff3b813a7cbac58", "url": "https://api.github.com/repos/rust-lang/rust/commits/34da5d93ef1f044661ddd0724ff3b813a7cbac58", "html_url": "https://github.com/rust-lang/rust/commit/34da5d93ef1f044661ddd0724ff3b813a7cbac58"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "8e93966ccd12d45778c0a258861a81e9ba06ef88", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=ad63e4eaefc8063c20c8941de28211604ff02eab", "patch": "@@ -38,7 +38,7 @@ note: potential failure(s)\n    |\n 31 |             panic!();\n    |             ^^^^^^^^^\n-   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:37:1\n@@ -65,7 +65,7 @@ note: potential failure(s)\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n 43 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n   --> $DIR/fallible_impl_from.rs:55:1\n@@ -87,5 +87,5 @@ note: potential failure(s)\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 58 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n-   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n "}, {"sha": "bcb94bab26c34db606aa4b24bfff183355d94f86", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=ad63e4eaefc8063c20c8941de28211604ff02eab", "patch": "@@ -264,7 +264,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 238 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n    --> $DIR/matches.rs:246:9\n@@ -290,7 +290,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 244 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n    --> $DIR/matches.rs:252:9\n@@ -316,7 +316,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 250 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:258:18\n@@ -334,7 +334,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 257 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:265:18\n@@ -352,7 +352,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 264 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:271:18\n@@ -370,7 +370,7 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 270 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n    --> $DIR/matches.rs:277:18\n@@ -388,5 +388,5 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |\n 276 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n "}, {"sha": "1c244c1df127e57511d1d82794256726ce4e4301", "filename": "tests/ui/regex.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Fregex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Fregex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregex.stderr?ref=ad63e4eaefc8063c20c8941de28211604ff02eab", "patch": "@@ -112,7 +112,7 @@ error: trivial regex\n error: trivial regex\n   --> $DIR/regex.rs:62:40\n    |\n-62 |     let trivial_backslash = Regex::new(\"a/.b\");\n+62 |     let trivial_backslash = Regex::new(\"a//.b\");\n    |                                        ^^^^^^^\n    |\n    = help: consider using consider using `str::contains`"}, {"sha": "b4a3cb2122df70ca6fb9e1e926cd505f497df902", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad63e4eaefc8063c20c8941de28211604ff02eab/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=ad63e4eaefc8063c20c8941de28211604ff02eab", "patch": "@@ -5,15 +5,15 @@ error: handle written amount returned or use `Write::write_all` instead\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D unused-io-amount` implied by `-D warnings`\n-   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: handle read amount returned or use `Read::read_exact` instead\n   --> $DIR/unused_io_amount.rs:13:5\n    |\n 13 |     try!(s.read(&mut buf));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: this error originates in a macro outside of the current crate (run with -Z external-macro-backtrace for more info)\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: handle written amount returned or use `Write::write_all` instead\n   --> $DIR/unused_io_amount.rs:18:5"}]}