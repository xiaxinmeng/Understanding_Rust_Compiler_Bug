{"sha": "10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYjIzZTNmZDMyZTlmMDE3YzExOTNiN2M2YmMyMGRhOGU2MWI5YWI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-12T15:01:24Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:31Z"}, "message": "Format function_interfaces.rs", "tree": {"sha": "ee5cd9cfcf90bd7f57494ae7711346e8a6e3d7cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee5cd9cfcf90bd7f57494ae7711346e8a6e3d7cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab", "html_url": "https://github.com/rust-lang/rust/commit/10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "274fb668b435b20e5132f02d4aa11a29500eff01", "url": "https://api.github.com/repos/rust-lang/rust/commits/274fb668b435b20e5132f02d4aa11a29500eff01", "html_url": "https://github.com/rust-lang/rust/commit/274fb668b435b20e5132f02d4aa11a29500eff01"}], "stats": {"total": 86, "additions": 40, "deletions": 46}, "files": [{"sha": "bfd536284665d2fb150ed12699246939096d2ead", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 40, "deletions": 46, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=10b23e3fd32e9f017c1193b7c6bc20da8e61b9ab", "patch": "@@ -9,25 +9,24 @@\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n \n-\n #![allow(warnings)]\n #![feature(linkage)]\n #![feature(rustc_attrs)]\n #![crate_type = \"rlib\"]\n \n-\n // Add Parameter ---------------------------------------------------------------\n \n #[cfg(cfail1)]\n pub fn add_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn add_parameter(p: i32) {}\n \n-\n // Add Return Type -------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -38,55 +37,58 @@ pub fn add_return_type() {}\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn add_return_type() -> () {}\n \n-\n // Change Parameter Type -------------------------------------------------------\n \n #[cfg(cfail1)]\n pub fn type_of_parameter(p: i32) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter(p: i64) {}\n \n-\n // Change Parameter Type Reference ---------------------------------------------\n \n #[cfg(cfail1)]\n pub fn type_of_parameter_ref(p: &i32) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter_ref(p: &mut i32) {}\n \n-\n // Change Parameter Order ------------------------------------------------------\n \n #[cfg(cfail1)]\n pub fn order_of_parameters(p1: i32, p2: i64) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn order_of_parameters(p2: i64, p1: i32) {}\n \n-\n // Unsafe ----------------------------------------------------------------------\n \n #[cfg(cfail1)]\n pub fn make_unsafe() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub unsafe fn make_unsafe() {}\n \n-\n // Extern ----------------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -97,19 +99,19 @@ pub fn make_extern() {}\n #[rustc_clean(cfg = \"cfail3\")]\n pub extern \"C\" fn make_extern() {}\n \n-\n // Type Parameter --------------------------------------------------------------\n \n #[cfg(cfail1)]\n pub fn type_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_parameter<T>() {}\n \n-\n // Lifetime Parameter ----------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -120,7 +122,6 @@ pub fn lifetime_parameter() {}\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_parameter<'a>() {}\n \n-\n // Trait Bound -----------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -131,7 +132,6 @@ pub fn trait_bound<T>() {}\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn trait_bound<T: Eq>() {}\n \n-\n // Builtin Bound ---------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -142,19 +142,19 @@ pub fn builtin_bound<T>() {}\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn builtin_bound<T: Send>() {}\n \n-\n // Lifetime Bound --------------------------------------------------------------\n \n #[cfg(cfail1)]\n pub fn lifetime_bound<'a, T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_bound<'a, T: 'a>() {}\n \n-\n // Second Trait Bound ----------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -165,7 +165,6 @@ pub fn second_trait_bound<T: Eq>() {}\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_trait_bound<T: Eq + Clone>() {}\n \n-\n // Second Builtin Bound --------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -176,19 +175,19 @@ pub fn second_builtin_bound<T: Send>() {}\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_builtin_bound<T: Send + Sized>() {}\n \n-\n // Second Lifetime Bound -------------------------------------------------------\n \n #[cfg(cfail1)]\n pub fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\",\n-              except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\")]\n+#[rustc_clean(\n+    cfg = \"cfail2\",\n+    except = \"hir_owner, hir_owner_items, generics_of, type_of, predicates_of\"\n+)]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n \n-\n // Inline ----------------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -200,7 +199,6 @@ pub fn inline() {}\n #[inline]\n pub fn inline() {}\n \n-\n // Inline Never ----------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -213,7 +211,6 @@ pub fn inline_never() {}\n #[inline(never)]\n pub fn inline_never() {}\n \n-\n // No Mangle -------------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -225,7 +222,6 @@ pub fn no_mangle() {}\n #[no_mangle]\n pub fn no_mangle() {}\n \n-\n // Linkage ---------------------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -237,7 +233,6 @@ pub fn linkage() {}\n #[linkage = \"weak_odr\"]\n pub fn linkage() {}\n \n-\n // Return Impl Trait -----------------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -252,7 +247,6 @@ pub fn return_impl_trait() -> impl Clone {\n     0\n }\n \n-\n // Change Return Impl Trait ----------------------------------------------------\n \n #[cfg(cfail1)]\n@@ -267,7 +261,6 @@ pub fn change_return_impl_trait() -> impl Copy {\n     0u32\n }\n \n-\n // Change Return Type Indirectly -----------------------------------------------\n \n pub struct ReferencedType1;\n@@ -279,15 +272,16 @@ pub mod change_return_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as ReturnType;\n \n-    #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+    #[rustc_clean(\n+        cfg = \"cfail2\",\n+        except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\"\n+    )]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_return_type() -> ReturnType {\n         ReturnType {}\n     }\n }\n \n-\n // Change Parameter Type Indirectly --------------------------------------------\n \n pub mod change_parameter_type_indirectly {\n@@ -296,13 +290,14 @@ pub mod change_parameter_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as ParameterType;\n \n-    #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n+    #[rustc_clean(\n+        cfg = \"cfail2\",\n+        except = \"hir_owner, hir_owner_items, mir_built, optimized_mir, typeck_tables_of, fn_sig\"\n+    )]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_parameter_type(p: ParameterType) {}\n }\n \n-\n // Change Trait Bound Indirectly -----------------------------------------------\n \n pub trait ReferencedTrait1 {}\n@@ -319,7 +314,6 @@ pub mod change_trait_bound_indirectly {\n     pub fn indirect_trait_bound<T: Trait>(p: T) {}\n }\n \n-\n // Change Trait Bound Indirectly In Where Clause -------------------------------\n \n pub mod change_trait_bound_indirectly_in_where_clause {"}]}