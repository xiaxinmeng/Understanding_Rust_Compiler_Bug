{"sha": "34e3ef61bd25c635721066c1f881d7f041366a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZTNlZjYxYmQyNWM2MzU3MjEwNjZjMWY4ODFkN2YwNDEzNjZhMGE=", "commit": {"author": {"name": "nmio", "email": "kristo.koert@gmail.com", "date": "2020-02-24T16:38:59Z"}, "committer": {"name": "nmio", "email": "kristo.koert@gmail.com", "date": "2020-02-24T16:38:59Z"}, "message": "Initial debugging code", "tree": {"sha": "38aba48e72fb44f8770f6a0a588245dc86b3cf18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38aba48e72fb44f8770f6a0a588245dc86b3cf18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34e3ef61bd25c635721066c1f881d7f041366a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34e3ef61bd25c635721066c1f881d7f041366a0a", "html_url": "https://github.com/rust-lang/rust/commit/34e3ef61bd25c635721066c1f881d7f041366a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34e3ef61bd25c635721066c1f881d7f041366a0a/comments", "author": {"login": "not-much-io", "id": 5730578, "node_id": "MDQ6VXNlcjU3MzA1Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5730578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/not-much-io", "html_url": "https://github.com/not-much-io", "followers_url": "https://api.github.com/users/not-much-io/followers", "following_url": "https://api.github.com/users/not-much-io/following{/other_user}", "gists_url": "https://api.github.com/users/not-much-io/gists{/gist_id}", "starred_url": "https://api.github.com/users/not-much-io/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/not-much-io/subscriptions", "organizations_url": "https://api.github.com/users/not-much-io/orgs", "repos_url": "https://api.github.com/users/not-much-io/repos", "events_url": "https://api.github.com/users/not-much-io/events{/privacy}", "received_events_url": "https://api.github.com/users/not-much-io/received_events", "type": "User", "site_admin": false}, "committer": {"login": "not-much-io", "id": 5730578, "node_id": "MDQ6VXNlcjU3MzA1Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5730578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/not-much-io", "html_url": "https://github.com/not-much-io", "followers_url": "https://api.github.com/users/not-much-io/followers", "following_url": "https://api.github.com/users/not-much-io/following{/other_user}", "gists_url": "https://api.github.com/users/not-much-io/gists{/gist_id}", "starred_url": "https://api.github.com/users/not-much-io/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/not-much-io/subscriptions", "organizations_url": "https://api.github.com/users/not-much-io/orgs", "repos_url": "https://api.github.com/users/not-much-io/repos", "events_url": "https://api.github.com/users/not-much-io/events{/privacy}", "received_events_url": "https://api.github.com/users/not-much-io/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49b9c8a0524e53f9bd75b50b6e87d7d88587629f", "url": "https://api.github.com/repos/rust-lang/rust/commits/49b9c8a0524e53f9bd75b50b6e87d7d88587629f", "html_url": "https://github.com/rust-lang/rust/commit/49b9c8a0524e53f9bd75b50b6e87d7d88587629f"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "a8594a6978098a02c99672d214ac5543eae44d99", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 42, "deletions": 5, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/34e3ef61bd25c635721066c1f881d7f041366a0a/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34e3ef61bd25c635721066c1f881d7f041366a0a/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=34e3ef61bd25c635721066c1f881d7f041366a0a", "patch": "@@ -7,6 +7,7 @@ mod sysroot;\n use std::{\n     error::Error,\n     fs::File,\n+    fs::read_dir,\n     io::BufReader,\n     path::{Path, PathBuf},\n     process::Command,\n@@ -406,18 +407,54 @@ fn find_rust_project_json(path: &Path) -> Option<PathBuf> {\n     None\n }\n \n-fn find_cargo_toml(path: &Path) -> Result<PathBuf> {\n-    if path.ends_with(\"Cargo.toml\") {\n-        return Ok(path.to_path_buf());\n-    }\n+fn find_cargo_toml_down_the_fs(path: &Path) -> Option<PathBuf> {\n     let mut curr = Some(path);\n     while let Some(path) = curr {\n         let candidate = path.join(\"Cargo.toml\");\n         if candidate.exists() {\n-            return Ok(candidate);\n+            return Some(candidate);\n         }\n         curr = path.parent();\n     }\n+    \n+    None\n+}\n+\n+fn find_cargo_toml_up_the_fs(path: &Path) -> Option<PathBuf> {\n+    log::info!(\"find_cargo_toml_up_the_fs()\");\n+    let entities = match read_dir(path) {\n+        Ok(entities) => entities,\n+        Err(e) => {\n+            log::info!(\"err {}\", e);\n+            return None\n+        }\n+    };\n+\n+    log::info!(\"entities: {:?}\", entities);\n+    for entity in entities.filter_map(Result::ok) {\n+        let candidate = entity.path().join(\"Cargo.toml\");\n+        log::info!(\"candidate: {:?}, exists: {}\", candidate, candidate.exists());\n+        if candidate.exists() {\n+            return Some(candidate);\n+        }\n+    }\n+\n+    None\n+}\n+\n+fn find_cargo_toml(path: &Path) -> Result<PathBuf> {\n+    if path.ends_with(\"Cargo.toml\") {\n+        return Ok(path.to_path_buf());\n+    }\n+\n+    if let Some(p) = find_cargo_toml_down_the_fs(path) {\n+        return Ok(p)\n+    }\n+\n+    if let Some(p) = find_cargo_toml_up_the_fs(path) {\n+        return Ok(p)\n+    }\n+\n     Err(CargoTomlNotFoundError(path.to_path_buf()).into())\n }\n "}]}