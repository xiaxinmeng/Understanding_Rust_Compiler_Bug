{"sha": "4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e", "node_id": "C_kwDOAAsO6NoAKDRiMzE2NGYxMjlkY2JiZjZhNGQxNWE0YzAxYmZkYjAxZjNmODcyMWU", "commit": {"author": {"name": "harpsword", "email": "harpswordyyl@gmail.com", "date": "2022-07-07T14:25:25Z"}, "committer": {"name": "harpsword", "email": "harpswordyyl@gmail.com", "date": "2022-07-10T02:45:03Z"}, "message": "fix: ignore renames for crate root", "tree": {"sha": "b270e1cc693784795386b5c47efe7573b36c64a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b270e1cc693784795386b5c47efe7573b36c64a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e", "html_url": "https://github.com/rust-lang/rust/commit/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e/comments", "author": {"login": "harpsword", "id": 10148927, "node_id": "MDQ6VXNlcjEwMTQ4OTI3", "avatar_url": "https://avatars.githubusercontent.com/u/10148927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harpsword", "html_url": "https://github.com/harpsword", "followers_url": "https://api.github.com/users/harpsword/followers", "following_url": "https://api.github.com/users/harpsword/following{/other_user}", "gists_url": "https://api.github.com/users/harpsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/harpsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harpsword/subscriptions", "organizations_url": "https://api.github.com/users/harpsword/orgs", "repos_url": "https://api.github.com/users/harpsword/repos", "events_url": "https://api.github.com/users/harpsword/events{/privacy}", "received_events_url": "https://api.github.com/users/harpsword/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harpsword", "id": 10148927, "node_id": "MDQ6VXNlcjEwMTQ4OTI3", "avatar_url": "https://avatars.githubusercontent.com/u/10148927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harpsword", "html_url": "https://github.com/harpsword", "followers_url": "https://api.github.com/users/harpsword/followers", "following_url": "https://api.github.com/users/harpsword/following{/other_user}", "gists_url": "https://api.github.com/users/harpsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/harpsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harpsword/subscriptions", "organizations_url": "https://api.github.com/users/harpsword/orgs", "repos_url": "https://api.github.com/users/harpsword/repos", "events_url": "https://api.github.com/users/harpsword/events{/privacy}", "received_events_url": "https://api.github.com/users/harpsword/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee5555cfabed4b8abbd40983fc4442df4007e49", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee5555cfabed4b8abbd40983fc4442df4007e49", "html_url": "https://github.com/rust-lang/rust/commit/fee5555cfabed4b8abbd40983fc4442df4007e49"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "59cbde0944d0c5f10d292a549d1a958c62fd2b3b", "filename": "crates/ide-db/src/rename.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e/crates%2Fide-db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e/crates%2Fide-db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Frename.rs?ref=4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e", "patch": "@@ -177,6 +177,10 @@ fn rename_mod(\n \n     let mut source_change = SourceChange::default();\n \n+    if module.is_crate_root(sema.db) {\n+        return Ok(source_change);\n+    }\n+\n     let InFile { file_id, value: def_source } = module.definition_source(sema.db);\n     if let ModuleSource::SourceFile(..) = def_source {\n         let anchor = file_id.original_file(sema.db);"}, {"sha": "23d6f8d8e4e2c26795ee45924e4b988abfae5f14", "filename": "crates/ide/src/rename.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e/crates%2Fide%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e/crates%2Fide%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frename.rs?ref=4b3164f129dcbbf6a4d15a4c01bfdb01f3f8721e", "patch": "@@ -379,6 +379,15 @@ mod tests {\n         expect.assert_debug_eq(&source_change)\n     }\n \n+    fn check_expect_will_rename_file(new_name: &str, ra_fixture: &str, expect: Expect) {\n+        let (analysis, position) = fixture::position(ra_fixture);\n+        let source_change = analysis\n+            .will_rename_file(position.file_id, new_name)\n+            .unwrap()\n+            .expect(\"Expect returned a RenameError\");\n+        expect.assert_debug_eq(&source_change)\n+    }\n+\n     fn check_prepare(ra_fixture: &str, expect: Expect) {\n         let (analysis, position) = fixture::position(ra_fixture);\n         let result = analysis\n@@ -1245,6 +1254,26 @@ submodule!(bar);\n         )\n     }\n \n+    #[test]\n+    fn test_rename_mod_for_crate_root() {\n+        check_expect_will_rename_file(\n+            \"main\",\n+            r#\"\n+//- /lib.rs\n+use crate::foo as bar;\n+fn foo() {}\n+mod bar$0;\n+\"#,\n+            expect![[r#\"\n+                SourceChange {\n+                    source_file_edits: {},\n+                    file_system_edits: [],\n+                    is_snippet: false,\n+                }\n+                \"#]],\n+        )\n+    }\n+\n     #[test]\n     fn test_enum_variant_from_module_1() {\n         cov_mark::check!(rename_non_local);"}]}