{"sha": "fa78b09fa76386e41d824fe83a176c0e641105db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNzhiMDlmYTc2Mzg2ZTQxZDgyNGZlODNhMTc2YzBlNjQxMTA1ZGI=", "commit": {"author": {"name": "Phil Turnbull", "email": "philip.turnbull@gmail.com", "date": "2016-11-19T15:21:40Z"}, "committer": {"name": "Phil Turnbull", "email": "philip.turnbull@gmail.com", "date": "2016-11-19T19:55:02Z"}, "message": "Add lint for `string.extend(\"str\".chars())`\n\nfixes #792", "tree": {"sha": "b2ad7a86843aa89fc92aafbda2c519628658dd99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2ad7a86843aa89fc92aafbda2c519628658dd99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa78b09fa76386e41d824fe83a176c0e641105db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa78b09fa76386e41d824fe83a176c0e641105db", "html_url": "https://github.com/rust-lang/rust/commit/fa78b09fa76386e41d824fe83a176c0e641105db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa78b09fa76386e41d824fe83a176c0e641105db/comments", "author": {"login": "philipturnbull", "id": 45588, "node_id": "MDQ6VXNlcjQ1NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/45588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipturnbull", "html_url": "https://github.com/philipturnbull", "followers_url": "https://api.github.com/users/philipturnbull/followers", "following_url": "https://api.github.com/users/philipturnbull/following{/other_user}", "gists_url": "https://api.github.com/users/philipturnbull/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipturnbull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipturnbull/subscriptions", "organizations_url": "https://api.github.com/users/philipturnbull/orgs", "repos_url": "https://api.github.com/users/philipturnbull/repos", "events_url": "https://api.github.com/users/philipturnbull/events{/privacy}", "received_events_url": "https://api.github.com/users/philipturnbull/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philipturnbull", "id": 45588, "node_id": "MDQ6VXNlcjQ1NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/45588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipturnbull", "html_url": "https://github.com/philipturnbull", "followers_url": "https://api.github.com/users/philipturnbull/followers", "following_url": "https://api.github.com/users/philipturnbull/following{/other_user}", "gists_url": "https://api.github.com/users/philipturnbull/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipturnbull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipturnbull/subscriptions", "organizations_url": "https://api.github.com/users/philipturnbull/orgs", "repos_url": "https://api.github.com/users/philipturnbull/repos", "events_url": "https://api.github.com/users/philipturnbull/events{/privacy}", "received_events_url": "https://api.github.com/users/philipturnbull/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ab7e6c598d21e419ffe6a999513d101bc78aa86", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ab7e6c598d21e419ffe6a999513d101bc78aa86", "html_url": "https://github.com/rust-lang/rust/commit/0ab7e6c598d21e419ffe6a999513d101bc78aa86"}], "stats": {"total": 90, "additions": 88, "deletions": 2}, "files": [{"sha": "c9bc5d0c917814a93fc6dcb1604f5c5c5bbf74c4", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa78b09fa76386e41d824fe83a176c0e641105db/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/fa78b09fa76386e41d824fe83a176c0e641105db/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=fa78b09fa76386e41d824fe83a176c0e641105db", "patch": "@@ -359,6 +359,7 @@ All notable changes to this project will be documented in this file.\n [`str_to_string`]: https://github.com/Manishearth/rust-clippy/wiki#str_to_string\n [`string_add`]: https://github.com/Manishearth/rust-clippy/wiki#string_add\n [`string_add_assign`]: https://github.com/Manishearth/rust-clippy/wiki#string_add_assign\n+[`string_extend_chars`]: https://github.com/Manishearth/rust-clippy/wiki#string_extend_chars\n [`string_lit_as_bytes`]: https://github.com/Manishearth/rust-clippy/wiki#string_lit_as_bytes\n [`string_to_string`]: https://github.com/Manishearth/rust-clippy/wiki#string_to_string\n [`stutter`]: https://github.com/Manishearth/rust-clippy/wiki#stutter"}, {"sha": "bc21bd28d780e856d7bdccd117715d97f7969876", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa78b09fa76386e41d824fe83a176c0e641105db/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/fa78b09fa76386e41d824fe83a176c0e641105db/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=fa78b09fa76386e41d824fe83a176c0e641105db", "patch": "@@ -182,7 +182,7 @@ You can check out this great service at [clippy.bashy.io](https://clippy.bashy.i\n \n ## Lints\n \n-There are 177 lints included in this crate:\n+There are 178 lints included in this crate:\n \n name                                                                                                                   | default | triggers on\n -----------------------------------------------------------------------------------------------------------------------|---------|----------------------------------------------------------------------------------------------------------------------------------\n@@ -327,6 +327,7 @@ name\n [single_match_else](https://github.com/Manishearth/rust-clippy/wiki#single_match_else)                                 | allow   | a match statement with a two arms where the second arm's pattern is a wildcard instead of `if let`\n [string_add](https://github.com/Manishearth/rust-clippy/wiki#string_add)                                               | allow   | using `x + ..` where x is a `String` instead of `push_str()`\n [string_add_assign](https://github.com/Manishearth/rust-clippy/wiki#string_add_assign)                                 | allow   | using `x = x + ..` where x is a `String` instead of `push_str()`\n+[string_extend_chars](https://github.com/Manishearth/rust-clippy/wiki#string_extend_chars)                             | warn    | using `x.extend(s.chars())` where s is a `&str`\n [string_lit_as_bytes](https://github.com/Manishearth/rust-clippy/wiki#string_lit_as_bytes)                             | warn    | calling `as_bytes` on a string literal instead of using a byte string literal\n [stutter](https://github.com/Manishearth/rust-clippy/wiki#stutter)                                                     | allow   | type names prefixed/postfixed with their containing module's name\n [suspicious_assignment_formatting](https://github.com/Manishearth/rust-clippy/wiki#suspicious_assignment_formatting)   | warn    | suspicious formatting of `*=`, `-=` or `!=`"}, {"sha": "a90f121fe79ac034c8b4d24d71bf10ac9ceb36a0", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa78b09fa76386e41d824fe83a176c0e641105db/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa78b09fa76386e41d824fe83a176c0e641105db/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=fa78b09fa76386e41d824fe83a176c0e641105db", "patch": "@@ -391,6 +391,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         methods::SEARCH_IS_SOME,\n         methods::SHOULD_IMPLEMENT_TRAIT,\n         methods::SINGLE_CHAR_PATTERN,\n+        methods::STRING_EXTEND_CHARS,\n         methods::TEMPORARY_CSTRING_AS_PTR,\n         methods::WRONG_SELF_CONVENTION,\n         minmax::MIN_MAX,"}, {"sha": "527b3228d69309ebe42a4d4f2a6c451299264dbd", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/fa78b09fa76386e41d824fe83a176c0e641105db/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa78b09fa76386e41d824fe83a176c0e641105db/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=fa78b09fa76386e41d824fe83a176c0e641105db", "patch": "@@ -490,6 +490,32 @@ declare_lint! {\n     \"using `.get().unwrap()` or `.get_mut().unwrap()` when using `[]` would work instead\"\n }\n \n+/// **What it does:** Checks for the use of `.extend(s.chars())` where s is a\n+/// `&str`.\n+///\n+/// **Why is this bad?** `.push_str(s)` is clearer and faster\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let abc = \"abc\";\n+/// let mut s = String::new();\n+/// s.extend(abc.chars());\n+/// ```\n+/// The correct use would be:\n+/// ```rust\n+/// let abc = \"abc\";\n+/// let mut s = String::new();\n+/// s.push_str(abc);\n+/// ```\n+\n+declare_lint! {\n+    pub STRING_EXTEND_CHARS,\n+    Warn,\n+    \"using `x.extend(s.chars())` where s is a `&str`\"\n+}\n+\n \n impl LintPass for Pass {\n     fn get_lints(&self) -> LintArray {\n@@ -514,7 +540,8 @@ impl LintPass for Pass {\n                     FILTER_MAP,\n                     ITER_NTH,\n                     ITER_SKIP_NEXT,\n-                    GET_UNWRAP)\n+                    GET_UNWRAP,\n+                    STRING_EXTEND_CHARS)\n     }\n }\n \n@@ -807,10 +834,33 @@ fn lint_vec_extend(cx: &LateContext, expr: &hir::Expr, args: &MethodArgs) {\n     }\n }\n \n+fn lint_string_extend(cx: &LateContext, expr: &hir::Expr, args: &MethodArgs) {\n+    let arg = &args[1];\n+    if let Some(arglists) = method_chain_args(arg, &[\"chars\"]) {\n+        let target = &arglists[0][0];\n+        let (self_ty, _) = walk_ptrs_ty_depth(cx.tcx.tables().expr_ty(target));\n+        if self_ty.sty == ty::TyStr {\n+            span_lint_and_then(\n+                cx,\n+                STRING_EXTEND_CHARS,\n+                expr.span,\n+                \"calling `.extend(_.chars())`\",\n+                |db| {\n+                    db.span_suggestion(expr.span, \"try this\",\n+                            format!(\"{}.push_str({})\",\n+                                    snippet(cx, args[0].span, \"_\"),\n+                                    snippet(cx, target.span, \"_\")));\n+                });\n+        }\n+    }\n+}\n+\n fn lint_extend(cx: &LateContext, expr: &hir::Expr, args: &MethodArgs) {\n     let (obj_ty, _) = walk_ptrs_ty_depth(cx.tcx.tables().expr_ty(&args[0]));\n     if match_type(cx, obj_ty, &paths::VEC) {\n         lint_vec_extend(cx, expr, args);\n+    } else if match_type(cx, obj_ty, &paths::STRING) {\n+        lint_string_extend(cx, expr, args);\n     }\n }\n "}, {"sha": "658eda65f6716fdf62f9589499632f473c8517b7", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fa78b09fa76386e41d824fe83a176c0e641105db/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa78b09fa76386e41d824fe83a176c0e641105db/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=fa78b09fa76386e41d824fe83a176c0e641105db", "patch": "@@ -180,6 +180,15 @@ impl IteratorFalsePositives {\n     }\n }\n \n+#[derive(Copy, Clone)]\n+struct HasChars;\n+\n+impl HasChars {\n+    fn chars(self) -> std::str::Chars<'static> {\n+        \"HasChars\".chars()\n+    }\n+}\n+\n /// Checks implementation of `FILTER_NEXT` lint\n fn filter_next() {\n     let v = vec![3, 2, 1, 0, -1, -2, -3];\n@@ -524,6 +533,30 @@ fn use_extend_from_slice() {\n     //~| SUGGESTION v.extend_from_slice(&[\"But\", \"this\"]);\n }\n \n+fn str_extend_chars() {\n+    let abc = \"abc\";\n+    let mut s = String::new();\n+\n+    s.push_str(abc);\n+    s.extend(abc.chars());\n+    //~^ERROR calling `.extend(_.chars())`\n+    //~|HELP try this\n+    //~|SUGGESTION s.push_str(abc)\n+\n+    s.push_str(\"abc\");\n+    s.extend(\"abc\".chars());\n+    //~^ERROR calling `.extend(_.chars())`\n+    //~|HELP try this\n+    //~|SUGGESTION s.push_str(\"abc\")\n+\n+    s.extend(abc.chars().skip(1));\n+    s.extend(\"abc\".chars().skip(1));\n+    s.extend(['a', 'b', 'c'].iter());\n+\n+    let f = HasChars;\n+    s.extend(f.chars());\n+}\n+\n fn clone_on_copy() {\n     42.clone(); //~ERROR using `clone` on a `Copy` type\n                 //~| HELP try removing the `clone` call"}]}