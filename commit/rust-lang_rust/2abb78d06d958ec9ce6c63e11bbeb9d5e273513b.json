{"sha": "2abb78d06d958ec9ce6c63e11bbeb9d5e273513b", "node_id": "C_kwDOAAsO6NoAKDJhYmI3OGQwNmQ5NThlYzljZTZjNjNlMTFiYmViOWQ1ZTI3MzUxM2I", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-22T15:42:33Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-22T15:42:33Z"}, "message": "Pop an error notification when flycheck can't be restarted", "tree": {"sha": "f205e216fe7e479b81c03d30904121838860a084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f205e216fe7e479b81c03d30904121838860a084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b", "html_url": "https://github.com/rust-lang/rust/commit/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dea163970a94f05d56e482c423df1cd379c8735c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dea163970a94f05d56e482c423df1cd379c8735c", "html_url": "https://github.com/rust-lang/rust/commit/dea163970a94f05d56e482c423df1cd379c8735c"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "d9f4ef5b7ff578deceae41a0a1866b15d7dd9753", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=2abb78d06d958ec9ce6c63e11bbeb9d5e273513b", "patch": "@@ -125,6 +125,7 @@ pub enum Progress {\n     DidCheckCrate(String),\n     DidFinish(io::Result<()>),\n     DidCancel,\n+    DidFailToRestart(String),\n }\n \n enum Restart {\n@@ -193,10 +194,11 @@ impl FlycheckActor {\n                             self.progress(Progress::DidStart);\n                         }\n                         Err(error) => {\n-                            tracing::error!(\n-                                command = ?self.check_command(),\n-                                %error, \"failed to restart flycheck\"\n-                            );\n+                            self.progress(Progress::DidFailToRestart(format!(\n+                                \"Failed to run the following command: {:?} error={}\",\n+                                self.check_command(),\n+                                error\n+                            )));\n                         }\n                     }\n                 }"}, {"sha": "122aba2f7d9263372a178d096362135f505d6f10", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2abb78d06d958ec9ce6c63e11bbeb9d5e273513b/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=2abb78d06d958ec9ce6c63e11bbeb9d5e273513b", "patch": "@@ -529,6 +529,13 @@ impl GlobalState {\n                     }\n                     flycheck::Progress::DidCheckCrate(target) => (Progress::Report, Some(target)),\n                     flycheck::Progress::DidCancel => (Progress::End, None),\n+                    flycheck::Progress::DidFailToRestart(err) => {\n+                        self.show_and_log_error(\n+                            \"cargo check failed\".to_string(),\n+                            Some(err.to_string()),\n+                        );\n+                        return;\n+                    }\n                     flycheck::Progress::DidFinish(result) => {\n                         if let Err(err) = result {\n                             self.show_and_log_error("}]}