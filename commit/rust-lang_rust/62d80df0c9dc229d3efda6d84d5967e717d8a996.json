{"sha": "62d80df0c9dc229d3efda6d84d5967e717d8a996", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZDgwZGYwYzlkYzIyOWQzZWZkYTZkODRkNTk2N2U3MTdkOGE5OTY=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-12-07T15:22:06Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-12-17T22:00:32Z"}, "message": "Add tests for E-needstest issues", "tree": {"sha": "76019d911e747ab4d98bd8ec7077a7319bbf27af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76019d911e747ab4d98bd8ec7077a7319bbf27af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62d80df0c9dc229d3efda6d84d5967e717d8a996", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62d80df0c9dc229d3efda6d84d5967e717d8a996", "html_url": "https://github.com/rust-lang/rust/commit/62d80df0c9dc229d3efda6d84d5967e717d8a996", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62d80df0c9dc229d3efda6d84d5967e717d8a996/comments", "author": null, "committer": null, "parents": [{"sha": "66c297d847ce06a8982d4d322221b17a3cd04f90", "url": "https://api.github.com/repos/rust-lang/rust/commits/66c297d847ce06a8982d4d322221b17a3cd04f90", "html_url": "https://github.com/rust-lang/rust/commit/66c297d847ce06a8982d4d322221b17a3cd04f90"}], "stats": {"total": 935, "additions": 935, "deletions": 0}, "files": [{"sha": "0e3041c11748ba2b575f4c6b8a6d9c13205808ac", "filename": "src/test/auxiliary/issue-16822.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fauxiliary%2Fissue-16822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fauxiliary%2Fissue-16822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-16822.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+use std::cell::RefCell;\n+\n+pub struct Window<Data>{\n+    pub data: RefCell<Data>\n+}\n+\n+impl<Data:  Update> Window<Data> {\n+    pub fn update(&self, e: i32) {\n+        match e {\n+            1 => self.data.borrow_mut().update(),\n+            _ => {}\n+        }\n+    }\n+}\n+\n+pub trait Update {\n+    fn update(&mut self);\n+}"}, {"sha": "718b046e1e477d68970132f4108800109de5b380", "filename": "src/test/auxiliary/issue-18502.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fauxiliary%2Fissue-18502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fauxiliary%2Fissue-18502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-18502.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+struct Foo;\n+// This is the ICE trigger\n+struct Formatter;\n+\n+trait Show {\n+    fn fmt(&self);\n+}\n+\n+impl Show for Foo {\n+    fn fmt(&self) {}\n+}\n+\n+fn bar<T>(f: extern \"Rust\" fn(&T), t: &T) { }\n+\n+// ICE requirement: this has to be marked as inline\n+#[inline]\n+pub fn baz() {\n+    bar(Show::fmt, &Foo);\n+}"}, {"sha": "f537d5cad9779fd17be230c9f2cc9444a8869b81", "filename": "src/test/compile-fail/issue-10176.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-10176.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-10176.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10176.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn f() -> int {\n+    (return 1, return 2)\n+//~^ ERROR mismatched types: expected `int`, found `(_, _)` (expected int, found tuple)\n+}\n+\n+fn main() {}"}, {"sha": "24256e31118e35b616ce779039e2cc2d1c2e7d3f", "filename": "src/test/compile-fail/issue-14182.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-14182.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-14182.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14182.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo {\n+    f: for <'b> |&'b int|:\n+      'b -> &'b int //~ ERROR use of undeclared lifetime name `'b`\n+}\n+\n+fn main() {\n+    let mut x: Vec< for <'a> ||\n+       :'a //~ ERROR use of undeclared lifetime name `'a`\n+    > = Vec::new();\n+    x.push(|| {});\n+\n+    let foo = Foo {\n+        f: |x| x\n+    };\n+}"}, {"sha": "6a26073be52b1249b069786e687cfee5f689ca70", "filename": "src/test/compile-fail/issue-15381.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-15381.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-15381.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15381.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let values: Vec<u8> = vec![1,2,3,4,5,6,7,8];\n+\n+    for\n+        [x,y,z]\n+//~^ ERROR refutable pattern in `for` loop binding: `[]` not covered\n+        in values.as_slice().chunks(3).filter(|&xs| xs.len() == 3) {\n+        println!(\"y={}\", y);\n+    }\n+}"}, {"sha": "abcc2eb1f98d37ef167ecc1525c90fee6b5b1098", "filename": "src/test/compile-fail/issue-15480.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-15480.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-15480.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15480.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let v = vec![\n+        &3i\n+//~^ ERROR borrowed value does not live long enough\n+    ];\n+\n+    for &&x in v.iter() {\n+        println!(\"{}\", x + 3);\n+    }\n+}"}, {"sha": "df19de7731a9e865bca6c9625bc1f9d54abfdbf4", "filename": "src/test/compile-fail/issue-15756.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-15756.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-15756.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15756.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::slice::Chunks;\n+use std::slice::MutChunks;\n+\n+fn dft_iter<'a, T>(arg1: Chunks<'a,T>, arg2: MutChunks<'a,T>)\n+{\n+    for\n+    &something\n+//~^ ERROR the trait `core::kinds::Sized` is not implemented for the type `[T]`\n+    in arg2\n+    {\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "dfa23c48afa6eb3552de19ed3e03cf0ecd914abf", "filename": "src/test/compile-fail/issue-16966.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-16966.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-16966.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16966.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    panic!(\n+        1.2 //~ ERROR cannot determine a type for this expression\n+    );\n+}"}, {"sha": "0501a3013ccd4074482d54c6f916a97d25f9930d", "filename": "src/test/compile-fail/issue-17545.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-17545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-17545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17545.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+pub fn foo<'a, F: Fn<(&'a (),), ()>>(bar: F) {\n+    bar.call((\n+        &(), //~ ERROR borrowed value does not live long enough\n+    ));\n+}\n+fn main() {}"}, {"sha": "2f56b494f32c0bdf893ea06b73e67c046fca67be", "filename": "src/test/compile-fail/issue-17905.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-17905.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-17905.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17905.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deriving(Show)]\n+struct Pair<T, V> (T, V);\n+\n+impl Pair<\n+    &str, //~ ERROR missing lifetime specifier\n+    int\n+> {\n+    fn say(self: &Pair<&str, int>) {\n+//~^ ERROR mismatched types: expected `Pair<&'static str, int>`, found `Pair<&str, int>`\n+        println!(\"{}\", self);\n+    }\n+}\n+\n+fn main() {\n+    let result = &Pair(\"shane\", 1i);\n+    result.say();\n+}"}, {"sha": "298f155faff94c5a8039748c22c35537e809aa41", "filename": "src/test/compile-fail/issue-18345.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18345.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18345.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18345.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+type Step<'s, R, T> = |R, T|: 's -> R;\n+type Transducer<'t, R, T, U> = |Step<'t, R, U>|: 't -> Step<'t, R, T>;\n+\n+fn mapping<'f, R, T, U>(f: |T|: 'f -> U) -> &'f Transducer<'f, R, T, U> {\n+    |step| |r, x|\n+        step(r, f(x)) //~ ERROR the type of this value must be known in this context\n+}\n+\n+fn main() {}"}, {"sha": "38ebbc062f048f5d422d418bbdcc20acb699b436", "filename": "src/test/compile-fail/issue-18389.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18389.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18389.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18389.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+#![feature(associated_types)]\n+\n+use std::any::Any;\n+use std::intrinsics::TypeId;\n+\n+pub trait Pt {}\n+pub trait Rt {}\n+\n+trait Private<P: Pt, R: Rt> {\n+    fn call(&self, p: P, r: R);\n+}\n+pub trait Public: Private<\n+    <Self as Public>::P,\n+//~^ ERROR illegal recursive type; insert an enum or struct in the cycle, if this is desired\n+    <Self as Public>::R\n+> {\n+    type P;\n+    type R;\n+\n+    fn call_inner(&self);\n+}\n+\n+fn main() {}"}, {"sha": "a6662e78f3ee0ba0fd735510f5ee02306692f1c6", "filename": "src/test/compile-fail/issue-18400.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18400.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18400.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18400.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Set<T> {\n+    fn contains(&self, T) -> bool;\n+    fn set(&mut self, T);\n+}\n+\n+impl<'a, T, S> Set<&'a [T]> for S where\n+    T: Copy,\n+    S: Set<T>,\n+{\n+    fn contains(&self, bits: &[T]) -> bool {\n+        bits.iter().all(|&bit| self.contains(bit))\n+    }\n+\n+    fn set(&mut self, bits: &[T]) {\n+        for &bit in bits.iter() {\n+            self.set(bit)\n+        }\n+    }\n+}\n+\n+fn main() {\n+    let bits: &[_] = &[0, 1];\n+\n+    0.contains(bits);\n+//~^ ERROR the trait `Set<_>` is not implemented for the type `_`\n+}"}, {"sha": "b2f204d7476719d945c82a9ca09ce3e3b6dddbd6", "filename": "src/test/compile-fail/issue-18611.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18611.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18611.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18611.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_types)]\n+\n+fn add_state(op:\n+    <int as HasState>::State\n+//~^ ERROR it is currently unsupported to access associated types except through a type parameter\n+) {}\n+\n+trait HasState {\n+    type State;\n+}\n+\n+fn main() {}"}, {"sha": "8097d93ca07458a855fc3adaac8e0be440ff5520", "filename": "src/test/compile-fail/issue-18783.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-18783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18783.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::cell::RefCell;\n+\n+fn main() {\n+    let c = RefCell::new(vec![]);\n+    let mut y = 1u;\n+    c.push(|| y = 0);\n+    c.push(|| y = 0);\n+//~^ ERROR cannot borrow `y` as mutable more than once at a time\n+}\n+\n+fn ufcs() {\n+    let c = RefCell::new(vec![]);\n+    let mut y = 1u;\n+\n+    Push::push(&c, || y = 0);\n+    Push::push(&c, || y = 0);\n+}\n+\n+trait Push<'c> {\n+    fn push<'f: 'c>(&self, push: ||:'f -> ());\n+}\n+\n+impl<'c> Push<'c> for RefCell<Vec<||:'c>> {\n+    fn push<'f: 'c>(&self, fun: ||:'f -> ()) {\n+        self.borrow_mut().push(fun)\n+    }\n+}"}, {"sha": "aa7c4c3060bdb93ebd4a7a04df865dad2ae4ff60", "filename": "src/test/compile-fail/issue-19009.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-19009.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-19009.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19009.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(lang_items)]\n+#![no_std]\n+#![crate_type=\"rlib\"]\n+#[lang=\"sized\"] pub trait Sized for Sized? {}\n+\n+fn ice(f: for <'s> ||\n+    :'s //~ ERROR use of undeclared lifetime name `'s`\n+) {}\n+fn main() { ice(||{}) }"}, {"sha": "613ec8acd413159fee55d85cf2f9a2ed921773e4", "filename": "src/test/compile-fail/issue-19081.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-19081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Fcompile-fail%2Fissue-19081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19081.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_types)]\n+\n+pub trait Hasher{\n+    type State;\n+\n+    fn hash<T: Hash<\n+        <Self as Hasher>::State //~ ERROR no suitable bound on `Self`\n+    >>(&self, value: &T) -> u64;\n+}\n+\n+trait Hash<S> {\n+    fn hash(&self, state: &mut S);\n+}\n+\n+fn main() {}"}, {"sha": "6306627df0f8d05c27d82c5e87ec321c90e57bdc", "filename": "src/test/run-pass-fulldeps/issue-16822.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-16822.rs\n+\n+extern crate \"issue-16822\" as lib;\n+\n+use std::cell::RefCell;\n+\n+struct App {\n+    i: int\n+}\n+\n+impl lib::Update for App {\n+    fn update(&mut self) {\n+        self.i += 1;\n+    }\n+}\n+\n+fn main(){\n+    let app = App { i: 5 };\n+    let window = lib::Window { data: RefCell::new(app) };\n+    window.update(1);\n+}"}, {"sha": "91b24b3b2abac4dc39736842bd4a287d9aa840c3", "filename": "src/test/run-pass-fulldeps/issue-18502.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-18502.rs\n+\n+extern crate \"issue-18502\" as fmt;\n+\n+fn main() {\n+    ::fmt::baz();\n+}"}, {"sha": "b714d87f4ef20ded4df267149e55460e946622bc", "filename": "src/test/run-pass/issue-10456.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-10456.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-10456.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10456.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo;\n+\n+pub trait Bar {\n+    fn bar(&self);\n+}\n+\n+pub trait Baz {}\n+\n+impl<T: Baz> Bar for T {\n+    fn bar(&self) {}\n+}\n+\n+impl Baz for Foo {}\n+\n+pub fn foo(t: Box<Foo>) {\n+    t.bar(); // ~Foo doesn't implement Baz\n+    (*t).bar(); // ok b/c Foo implements Baz\n+}\n+\n+fn main() {}"}, {"sha": "1182cf5b29f85da0be6b7ab369145833d7e3b206", "filename": "src/test/run-pass/issue-12744.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-12744.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-12744.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12744.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    fn test() -> Box<std::any::Any + 'static> { box 1i }\n+    println!(\"{}\", test())\n+}"}, {"sha": "06ab67f2f3e97f2efb3c2ae89504f5d5b1b017bc", "filename": "src/test/run-pass/issue-13264.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-13264.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-13264.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13264.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,74 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Root {\n+    jsref: JSRef\n+}\n+\n+impl Deref<JSRef> for Root {\n+    fn deref<'a>(&'a self) -> &'a JSRef {\n+        &self.jsref\n+    }\n+}\n+\n+#[deriving(Copy)]\n+struct JSRef {\n+    node: *const Node\n+}\n+\n+impl Deref<Node> for JSRef {\n+    fn deref<'a>(&'a self) -> &'a Node {\n+        self.get()\n+    }\n+}\n+\n+trait INode {\n+    fn RemoveChild(&self);\n+}\n+\n+impl INode for JSRef {\n+    fn RemoveChild(&self) {\n+        self.get().RemoveChild(0)\n+    }\n+}\n+\n+impl JSRef {\n+    fn AddChild(&self) {\n+        self.get().AddChild(0);\n+    }\n+\n+    fn get<'a>(&'a self) -> &'a Node {\n+        unsafe {\n+            &*self.node\n+        }\n+    }\n+}\n+\n+struct Node;\n+\n+impl Node {\n+    fn RemoveChild(&self, _a: uint) {\n+    }\n+\n+    fn AddChild(&self, _a: uint) {\n+    }\n+}\n+\n+fn main() {\n+    let n = Node;\n+    let jsref = JSRef { node: &n };\n+    let root = Root { jsref: jsref };\n+\n+    root.AddChild();\n+    jsref.AddChild();\n+\n+    root.RemoveChild();\n+    jsref.RemoveChild();\n+}"}, {"sha": "d9149b0d7466ec0307503dd418d3d78c406a8340", "filename": "src/test/run-pass/issue-13323.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-13323.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-13323.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13323.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,66 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct StrWrap {\n+    s: String\n+}\n+\n+impl StrWrap {\n+    fn new(s: &str) -> StrWrap {\n+        StrWrap { s: s.into_string() }\n+    }\n+\n+    fn get_s<'a>(&'a self) -> &'a str {\n+        self.s.as_slice()\n+    }\n+}\n+\n+struct MyStruct {\n+    s: StrWrap\n+}\n+\n+impl MyStruct {\n+    fn new(s: &str) -> MyStruct {\n+        MyStruct { s: StrWrap::new(s) }\n+    }\n+\n+    fn get_str_wrap<'a>(&'a self) -> &'a StrWrap {\n+        &self.s\n+    }\n+}\n+\n+trait Matcher<T> {\n+    fn matches(&self, actual: T) -> bool;\n+}\n+\n+fn assert_that<T, U: Matcher<T>>(actual: T, matcher: &U) {\n+    assert!(matcher.matches(actual));\n+}\n+\n+struct EqualTo<T> {\n+    expected: T\n+}\n+\n+impl<T: Eq> Matcher<T> for EqualTo<T> {\n+    fn matches(&self, actual: T) -> bool {\n+        self.expected.eq(&actual)\n+    }\n+}\n+\n+fn equal_to<T: Eq>(expected: T) -> Box<EqualTo<T>> {\n+    box EqualTo { expected: expected }\n+}\n+\n+pub fn main() {\n+    let my_struct = MyStruct::new(\"zomg\");\n+    let s = my_struct.get_str_wrap();\n+\n+    assert_that(s.get_s(), &*equal_to(\"zomg\"));\n+}"}, {"sha": "f5618c2c7a3c40a1d2aa075664a1a04499d2eafb", "filename": "src/test/run-pass/issue-15444.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-15444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-15444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15444.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait MyTrait {\n+    fn foo(&self);\n+}\n+\n+impl<A, B, C> MyTrait for fn(A, B) -> C {\n+    fn foo(&self) {}\n+}\n+\n+fn bar<T: MyTrait>(t: &T) {\n+    t.foo()\n+}\n+\n+fn thing(a: int, b: int) -> int {\n+    a + b\n+}\n+\n+fn main() {\n+    bar(&thing);\n+}"}, {"sha": "0966d4ea45eec9d17393252bca98b1d4031a7883", "filename": "src/test/run-pass/issue-17351.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17351.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17351.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17351.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let _: &Str = &\"x\";\n+}"}, {"sha": "986879e8e461d1af4bb9d81e2033eff1e928d2b8", "filename": "src/test/run-pass/issue-17503.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17503.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(slicing_syntax)]\n+\n+fn main() {\n+    let s: &[int] = &[0, 1, 2, 3, 4];\n+    let ss: &&[int] = &s;\n+    let sss: &&&[int] = &ss;\n+\n+    println!(\"{}\", s[..3]);\n+    println!(\"{}\", ss[3..]);\n+    println!(\"{}\", sss[2..4]);\n+}"}, {"sha": "1e9550acef4cb52483ac1894494c060c0118c71f", "filename": "src/test/run-pass/issue-17771.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17771.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17771.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17771.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Aaa {}\n+\n+impl<'a> Aaa for &'a mut (Aaa + 'a) {}\n+\n+struct Bar<'a> {\n+    writer: &'a mut (Aaa + 'a),\n+}\n+\n+fn baz(_: &mut Aaa) {\n+}\n+\n+fn foo<'a>(mut bar: Bar<'a>) {\n+    baz(&mut bar.writer);\n+}\n+\n+fn main() {\n+}"}, {"sha": "d9d2c771390fdfacccef56382ca63d93f0d5b698", "filename": "src/test/run-pass/issue-17816.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17816.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17816.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17816.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+fn main() {\n+    struct Symbol<'a, F: Fn(Vec<&'a str>) -> &'a str> { function: F }\n+    let f = |&: x: Vec<&str>| -> &str \"foobar\";\n+    let sym = Symbol { function: f };\n+    (sym.function)(vec![]);\n+}"}, {"sha": "49b03a974d868eaaa3d2f066d60a8d5ed730b3b8", "filename": "src/test/run-pass/issue-17897.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-17897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17897.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(default_type_params, unboxed_closures)]\n+\n+use std::thunk::Thunk;\n+\n+fn action(cb: Thunk<uint, uint>) -> uint {\n+    cb.invoke(1)\n+}\n+\n+pub fn main() {\n+    println!(\"num: {}\", action(Thunk::with_arg(move |:u| u)));\n+}"}, {"sha": "aa95856a8b5ba812093e6a5414d2772b8dfc73b3", "filename": "src/test/run-pass/issue-18188.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-18188.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-18188.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18188.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(default_type_params, unboxed_closures)]\n+\n+use std::thunk::Thunk;\n+\n+pub trait Promisable: Send + Sync {}\n+impl<T: Send + Sync> Promisable for T {}\n+pub fn propagate<T, E, F, G>(action: F) -> Thunk<Result<T, E>, Result<T, E>>\n+    where\n+        T: Promisable + Clone,\n+        E: Promisable + Clone,\n+        F: FnOnce(&T) -> Result<T, E> + Send,\n+        G: FnOnce(Result<T, E>) -> Result<T, E> {\n+    Thunk::with_arg(move |: result: Result<T, E>| {\n+        match result {\n+            Ok(ref t) => action(t),\n+            Err(ref e) => Err(e.clone()),\n+        }\n+    })\n+}\n+\n+fn main() {}"}, {"sha": "15cf5870d40add681c7557ff6d52a0115960b9c5", "filename": "src/test/run-pass/issue-18232.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-18232.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-18232.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18232.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Cursor<'a>;\n+\n+trait CursorNavigator {\n+    fn init_cursor<'a, 'b:'a>(&'a self, cursor: &mut Cursor<'b>) -> bool;\n+}\n+\n+struct SimpleNavigator;\n+\n+impl CursorNavigator for SimpleNavigator {\n+    fn init_cursor<'a, 'b: 'a>(&'a self, _cursor: &mut Cursor<'b>) -> bool {\n+        false\n+    }\n+}\n+\n+fn main() {\n+    let mut c = Cursor;\n+    let n = SimpleNavigator;\n+    n.init_cursor(&mut c);\n+}"}, {"sha": "ef95b4d4f00c5834c14b31f0d82b5286942414f4", "filename": "src/test/run-pass/issue-19098.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-19098.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-19098.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19098.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+pub trait Handler {\n+    fn handle(&self, &mut String);\n+}\n+\n+impl<F> Handler for F\n+where F: for<'a, 'b> Fn(&'a mut String) {\n+    fn handle(&self, st: &mut String) {\n+        self.call((st,))\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "bc43874bfb3c02b16028eb3358fc1d90137aab0b", "filename": "src/test/run-pass/issue-19127.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-19127.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-19127.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19127.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+fn foo<T, F: FnOnce(T) -> T>(f: F) {}\n+fn id<'a>(input: &'a u8) -> &'a u8 { input }\n+\n+fn main() {\n+    foo(id);\n+}"}, {"sha": "604442d1506893131f6b4683629027b596596c54", "filename": "src/test/run-pass/issue-19135.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-19135.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-19135.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19135.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+\n+#[deriving(Show)]\n+struct LifetimeStruct<'a>;\n+\n+fn main() {\n+    takes_hrtb_closure(|&mut: lts| println!(\"{}\", lts));\n+}\n+\n+fn takes_hrtb_closure<F: for<'a>FnMut(LifetimeStruct<'a>)>(mut f: F) {\n+    f(LifetimeStruct);\n+}"}, {"sha": "cc95b135b27de5a57112e2ce3e9f21636e110543", "filename": "src/test/run-pass/issue-5988.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-5988.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d80df0c9dc229d3efda6d84d5967e717d8a996/src%2Ftest%2Frun-pass%2Fissue-5988.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5988.rs?ref=62d80df0c9dc229d3efda6d84d5967e717d8a996", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io;\n+trait B {\n+    fn f(&self);\n+}\n+\n+trait T : B {\n+}\n+\n+struct A;\n+\n+impl<U: T> B for U {\n+    fn f(&self) { io::println(\"Hey, I'm a T!\"); }\n+}\n+\n+impl T for A {\n+}\n+\n+fn main() {\n+    let a = A;\n+    let br = &a as &B;\n+    br.f();\n+}"}]}