{"sha": "9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "node_id": "C_kwDOAAsO6NoAKDlkMTRiNjUwNWIzY2JlNDc4MjZjOGY0ZDYyZjY3ZjBlNWU0NzQ3NTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-09T09:55:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-09T09:55:59Z"}, "message": "Rollup merge of #89634 - hawkw:eliza/enable-err-warn, r=oli-obk\n\nrustc_driver: Enable the `WARN` log level by default\n\nThis commit changes the `tracing_subscriber` initialization in\n`rustc_driver` so that the `WARN` verbosity level is enabled by default\nwhen the `RUSTC_LOG` env variable is empty. If the `RUSTC_LOG` env\nvariable is set, the filter string in the environment variable is\nhonored, instead.\n\nFixes #76824\nCloses #89623\n\ncc ``@eddyb,`` ``@oli-obk``", "tree": {"sha": "db056a2cf026bfa31ed01a2cd10cb21a6fc03bea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db056a2cf026bfa31ed01a2cd10cb21a6fc03bea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhYWcvCRBK7hj4Ov3rIwAAp1wIAImuITwyDkUn6Qff96IlpjaQ\nWUfBmWrOJJJYg6KIqLUDop+PiH5Cw3aYjsxOiXL7XG0ILJH+hSwkpqJnvVesNrIa\nnyH/xa/eONW3e7tuJzhN5KkbgdJZo+AN5YqAv8JtdTjV24/JrfYzNSVpmMXuas2/\n89C5xjtWJk9/dSyb1CbqWrN+Y+ZTNTM+SG0F2n+HE5fZZ0i9unCG48qy9KpPfiG+\nKN7El7uI6+bBhuGdDqqnUsqOvfZBy83hFl8Q65I7QWISmZtg/JJEA6/wcVzQ2Op6\nWlzjGOtwva4uIJMdh0xDg+2k6meqH0Xlwu0hJbe4NtQUDlQ9HdRSLho2hRNKgyc=\n=Co38\n-----END PGP SIGNATURE-----\n", "payload": "tree db056a2cf026bfa31ed01a2cd10cb21a6fc03bea\nparent 03a34a291d80b0f2e80e0f74c4fc41c68c7abe6c\nparent 84fc5db59b3a291090fe0cc9d1b91f463664d657\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1633773359 +0200\ncommitter GitHub <noreply@github.com> 1633773359 +0200\n\nRollup merge of #89634 - hawkw:eliza/enable-err-warn, r=oli-obk\n\nrustc_driver: Enable the `WARN` log level by default\n\nThis commit changes the `tracing_subscriber` initialization in\n`rustc_driver` so that the `WARN` verbosity level is enabled by default\nwhen the `RUSTC_LOG` env variable is empty. If the `RUSTC_LOG` env\nvariable is set, the filter string in the environment variable is\nhonored, instead.\n\nFixes #76824\nCloses #89623\n\ncc ``@eddyb,`` ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "html_url": "https://github.com/rust-lang/rust/commit/9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03a34a291d80b0f2e80e0f74c4fc41c68c7abe6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/03a34a291d80b0f2e80e0f74c4fc41c68c7abe6c", "html_url": "https://github.com/rust-lang/rust/commit/03a34a291d80b0f2e80e0f74c4fc41c68c7abe6c"}, {"sha": "84fc5db59b3a291090fe0cc9d1b91f463664d657", "url": "https://api.github.com/repos/rust-lang/rust/commits/84fc5db59b3a291090fe0cc9d1b91f463664d657", "html_url": "https://github.com/rust-lang/rust/commit/84fc5db59b3a291090fe0cc9d1b91f463664d657"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "cf1c60588978c33085d32337045a460ec8e4e3a0", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "patch": "@@ -843,19 +843,18 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         let msg_bus = \"clang: error: unable to execute command: Bus error: 10\";\n         if out.contains(msg_segv) || out.contains(msg_bus) {\n             warn!(\n+                ?cmd, %out,\n                 \"looks like the linker segfaulted when we tried to call it, \\\n-                 automatically retrying again. cmd = {:?}, out = {}.\",\n-                cmd, out,\n+                 automatically retrying again\",\n             );\n             continue;\n         }\n \n         if is_illegal_instruction(&output.status) {\n             warn!(\n+                ?cmd, %out, status = %output.status,\n                 \"looks like the linker hit an illegal instruction when we \\\n-                 tried to call it, automatically retrying again. cmd = {:?}, ]\\\n-                 out = {}, status = {}.\",\n-                cmd, out, output.status,\n+                 tried to call it, automatically retrying again.\",\n             );\n             continue;\n         }"}, {"sha": "05c7e11cbc29a126d5977b6510fc90b3cebfece0", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "patch": "@@ -1253,12 +1253,16 @@ pub fn init_rustc_env_logger() {\n /// tracing crate version. In contrast to `init_rustc_env_logger` it allows you to choose an env var\n /// other than `RUSTC_LOG`.\n pub fn init_env_logger(env: &str) {\n-    // Don't register a dispatcher if there's no filter to print anything\n-    match std::env::var(env) {\n-        Err(_) => return,\n-        Ok(s) if s.is_empty() => return,\n-        Ok(_) => {}\n-    }\n+    use tracing_subscriber::{\n+        filter::{self, EnvFilter, LevelFilter},\n+        layer::SubscriberExt,\n+    };\n+\n+    let filter = match std::env::var(env) {\n+        Ok(env) => EnvFilter::from_env(env),\n+        _ => EnvFilter::default().add_directive(filter::Directive::from(LevelFilter::WARN)),\n+    };\n+\n     let color_logs = match std::env::var(String::from(env) + \"_COLOR\") {\n         Ok(value) => match value.as_ref() {\n             \"always\" => true,\n@@ -1278,7 +1282,7 @@ pub fn init_env_logger(env: &str) {\n             \"non-Unicode log color value: expected one of always, never, or auto\",\n         ),\n     };\n-    let filter = tracing_subscriber::EnvFilter::from_env(env);\n+\n     let layer = tracing_tree::HierarchicalLayer::default()\n         .with_writer(io::stderr)\n         .with_indent_lines(true)\n@@ -1288,7 +1292,6 @@ pub fn init_env_logger(env: &str) {\n     #[cfg(parallel_compiler)]\n     let layer = layer.with_thread_ids(true).with_thread_names(true);\n \n-    use tracing_subscriber::layer::SubscriberExt;\n     let subscriber = tracing_subscriber::Registry::default().with(filter).with(layer);\n     tracing::subscriber::set_global_default(subscriber).unwrap();\n }"}, {"sha": "778d58eeadcf0344ae3ec63c72c9c661259b6988", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "patch": "@@ -2308,7 +2308,7 @@ pub fn is_case_difference(sm: &SourceMap, suggested: &str, sp: Span) -> bool {\n     let found = match sm.span_to_snippet(sp) {\n         Ok(snippet) => snippet,\n         Err(e) => {\n-            warn!(\"Invalid span {:?}. Err={:?}\", sp, e);\n+            warn!(error = ?e, \"Invalid span {:?}\", sp);\n             return false;\n         }\n     };"}, {"sha": "c0bf4b659aa9674c12fa61201d51571afe3decaf", "filename": "compiler/rustc_mir_dataflow/src/rustc_peek.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_mir_dataflow%2Fsrc%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/compiler%2Frustc_mir_dataflow%2Fsrc%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Frustc_peek.rs?ref=9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "patch": "@@ -289,7 +289,7 @@ impl<'tcx> RustcPeekAt<'tcx> for MaybeMutBorrowedLocals<'_, 'tcx> {\n         flow_state: &BitSet<Local>,\n         call: PeekCall,\n     ) {\n-        warn!(\"peek_at: place={:?}\", place);\n+        info!(?place, \"peek_at\");\n         let local = if let Some(l) = place.as_local() {\n             l\n         } else {\n@@ -311,7 +311,7 @@ impl<'tcx> RustcPeekAt<'tcx> for MaybeLiveLocals {\n         flow_state: &BitSet<Local>,\n         call: PeekCall,\n     ) {\n-        warn!(\"peek_at: place={:?}\", place);\n+        info!(?place, \"peek_at\");\n         let local = if let Some(l) = place.as_local() {\n             l\n         } else {"}, {"sha": "c82dea4aa50dfbc8b9c2f0ade78f5d6aa1e2797b", "filename": "src/test/ui/consts/const_in_pattern/issue-73431.stderr", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fissue-73431.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9d14b6505b3cbe47826c8f4d62f67f0e5e474750/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fissue-73431.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fissue-73431.stderr?ref=9d14b6505b3cbe47826c8f4d62f67f0e5e474750", "patch": "@@ -0,0 +1 @@\n+WARN rustc_mir_build::thir::pattern::const_to_pat MIR const-checker found novel structural match violation. See #73448."}]}