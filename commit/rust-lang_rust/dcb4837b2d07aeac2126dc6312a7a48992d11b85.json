{"sha": "dcb4837b2d07aeac2126dc6312a7a48992d11b85", "node_id": "C_kwDOAAsO6NoAKGRjYjQ4MzdiMmQwN2FlYWMyMTI2ZGM2MzEyYTdhNDg5OTJkMTFiODU", "commit": {"author": {"name": "bitgaoshu", "email": "bitgaoshu@gmail.com", "date": "2022-06-26T15:09:06Z"}, "committer": {"name": "bitgaoshu", "email": "bitgaoshu@gmail.com", "date": "2022-06-26T15:09:06Z"}, "message": "WellFormed -> Holds", "tree": {"sha": "a8c46856e0edcdf4ca60813a29747298bc6f28d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8c46856e0edcdf4ca60813a29747298bc6f28d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcb4837b2d07aeac2126dc6312a7a48992d11b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb4837b2d07aeac2126dc6312a7a48992d11b85", "html_url": "https://github.com/rust-lang/rust/commit/dcb4837b2d07aeac2126dc6312a7a48992d11b85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcb4837b2d07aeac2126dc6312a7a48992d11b85/comments", "author": {"login": "bitgaoshu", "id": 7943146, "node_id": "MDQ6VXNlcjc5NDMxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/7943146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitgaoshu", "html_url": "https://github.com/bitgaoshu", "followers_url": "https://api.github.com/users/bitgaoshu/followers", "following_url": "https://api.github.com/users/bitgaoshu/following{/other_user}", "gists_url": "https://api.github.com/users/bitgaoshu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitgaoshu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitgaoshu/subscriptions", "organizations_url": "https://api.github.com/users/bitgaoshu/orgs", "repos_url": "https://api.github.com/users/bitgaoshu/repos", "events_url": "https://api.github.com/users/bitgaoshu/events{/privacy}", "received_events_url": "https://api.github.com/users/bitgaoshu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bitgaoshu", "id": 7943146, "node_id": "MDQ6VXNlcjc5NDMxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/7943146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitgaoshu", "html_url": "https://github.com/bitgaoshu", "followers_url": "https://api.github.com/users/bitgaoshu/followers", "following_url": "https://api.github.com/users/bitgaoshu/following{/other_user}", "gists_url": "https://api.github.com/users/bitgaoshu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitgaoshu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitgaoshu/subscriptions", "organizations_url": "https://api.github.com/users/bitgaoshu/orgs", "repos_url": "https://api.github.com/users/bitgaoshu/repos", "events_url": "https://api.github.com/users/bitgaoshu/events{/privacy}", "received_events_url": "https://api.github.com/users/bitgaoshu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "408fa148b9690387316115af33d80c997128b2c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/408fa148b9690387316115af33d80c997128b2c5", "html_url": "https://github.com/rust-lang/rust/commit/408fa148b9690387316115af33d80c997128b2c5"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "d2081d22d79dfc231166a242e57597730d693602", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcb4837b2d07aeac2126dc6312a7a48992d11b85/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb4837b2d07aeac2126dc6312a7a48992d11b85/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=dcb4837b2d07aeac2126dc6312a7a48992d11b85", "patch": "@@ -615,7 +615,7 @@ fn find_matching_impl(\n                     let wh_goals =\n                         crate::chalk_db::convert_where_clauses(db, impl_.into(), &substs)\n                             .into_iter()\n-                            .map(|b| b.into_well_formed_goal(Interner).cast(Interner));\n+                            .map(|b| b.cast(Interner));\n \n                     let goal = crate::Goal::all(Interner, wh_goals);\n "}, {"sha": "e10789fd47aed9f7deb0333c1d9e5d5ae62f4d3b", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dcb4837b2d07aeac2126dc6312a7a48992d11b85/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb4837b2d07aeac2126dc6312a7a48992d11b85/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=dcb4837b2d07aeac2126dc6312a7a48992d11b85", "patch": "@@ -1445,6 +1445,32 @@ fn f() {\n                 \"#,\n             );\n         }\n+        #[test]\n+        fn wc_case_is_ok() {\n+            check(\n+                r#\"\n+trait G {\n+    fn g(&self);\n+}\n+trait BParent{}\n+trait Bound: BParent{}\n+struct Gen<T>(T);\n+impl <T> G for Gen<T>\n+where T : Bound\n+{\n+    fn g(&self){\n+     //^\n+    }\n+}\n+struct A;\n+impl Bound for A{}\n+fn f() {\n+    let gen = Gen::<A>(A);\n+    gen.g$0();\n+}\n+\"#,\n+            );\n+        }\n \n         #[test]\n         fn method_call_defaulted() {"}]}