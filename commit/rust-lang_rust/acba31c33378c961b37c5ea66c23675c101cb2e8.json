{"sha": "acba31c33378c961b37c5ea66c23675c101cb2e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYmEzMWMzMzM3OGM5NjFiMzdjNWVhNjZjMjM2NzVjMTAxY2IyZTg=", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-26T19:14:37Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-26T19:14:37Z"}, "message": "Typo", "tree": {"sha": "772ed0a9d888a22c78c3e6c7ea8051ef277873d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/772ed0a9d888a22c78c3e6c7ea8051ef277873d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acba31c33378c961b37c5ea66c23675c101cb2e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acba31c33378c961b37c5ea66c23675c101cb2e8", "html_url": "https://github.com/rust-lang/rust/commit/acba31c33378c961b37c5ea66c23675c101cb2e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acba31c33378c961b37c5ea66c23675c101cb2e8/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "953d685ea119abc28c38738efe8961adc54e7b08", "url": "https://api.github.com/repos/rust-lang/rust/commits/953d685ea119abc28c38738efe8961adc54e7b08", "html_url": "https://github.com/rust-lang/rust/commit/953d685ea119abc28c38738efe8961adc54e7b08"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fff0b3df7f91c67c42bc5a9c7e9c19b2f98c46cc", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acba31c33378c961b37c5ea66c23675c101cb2e8/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acba31c33378c961b37c5ea66c23675c101cb2e8/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=acba31c33378c961b37c5ea66c23675c101cb2e8", "patch": "@@ -379,9 +379,9 @@ impl<T: Idx> BitRelations<HybridBitSet<T>> for HybridBitSet<T> {\n     fn union(&mut self, other: &HybridBitSet<T>) -> bool {\n         assert_eq!(self.domain_size(), other.domain_size());\n         match self {\n-            HybridBitSet::Sparse(self_sparse) => {\n+            HybridBitSet::Sparse(_) => {\n                 match other {\n-                    HybridBitSet::Sparse(_) => {\n+                    HybridBitSet::Sparse(other_sparse) => {\n                         // Both sets are sparse. Add the elements in\n                         // `other_sparse` to `self` one at a time. This\n                         // may or may not cause `self` to be densified."}]}