{"sha": "b5482a8f166b952f397be0432dec062b5b0ca105", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NDgyYThmMTY2Yjk1MmYzOTdiZTA0MzJkZWMwNjJiNWIwY2ExMDU=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu.dantras@huawei.com", "date": "2021-01-20T18:37:14Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-01-27T23:08:15Z"}, "message": "Preserve existing LD_LIBRARY_PATH in remote-test-server", "tree": {"sha": "b1bb8e6762c6aad2d31b33b1edfc47f753d69d1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1bb8e6762c6aad2d31b33b1edfc47f753d69d1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5482a8f166b952f397be0432dec062b5b0ca105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5482a8f166b952f397be0432dec062b5b0ca105", "html_url": "https://github.com/rust-lang/rust/commit/b5482a8f166b952f397be0432dec062b5b0ca105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5482a8f166b952f397be0432dec062b5b0ca105/comments", "author": null, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a072ecbf70eef05f2904031169e493782d65dd37", "url": "https://api.github.com/repos/rust-lang/rust/commits/a072ecbf70eef05f2904031169e493782d65dd37", "html_url": "https://github.com/rust-lang/rust/commit/a072ecbf70eef05f2904031169e493782d65dd37"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "cd9d530096496b4adb7036755c1477e02599bbac", "filename": "src/tools/remote-test-server/src/main.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b5482a8f166b952f397be0432dec062b5b0ca105/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5482a8f166b952f397be0432dec062b5b0ca105/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs?ref=b5482a8f166b952f397be0432dec062b5b0ca105", "patch": "@@ -218,25 +218,19 @@ fn handle_run(socket: TcpStream, work: &Path, tmp: &Path, lock: &Mutex<()>, conf\n     cmd.args(args);\n     cmd.envs(env);\n \n+    // On windows, libraries are just searched in the executable directory,\n+    // system directories, PWD, and PATH, in that order. PATH is the only one\n+    // we can change for this.\n+    let library_path = if cfg!(windows) { \"PATH\" } else { \"LD_LIBRARY_PATH\" };\n+\n     // Support libraries were uploaded to `work` earlier, so make sure that's\n     // in `LD_LIBRARY_PATH`. Also include our own current dir which may have\n     // had some libs uploaded.\n-    if cfg!(windows) {\n-        // On windows, libraries are just searched in the executable directory,\n-        // system directories, PWD, and PATH, in that order. PATH is the only one\n-        // we can change for this.\n-        cmd.env(\n-            \"PATH\",\n-            env::join_paths(\n-                std::iter::once(work.to_owned())\n-                    .chain(std::iter::once(path.clone()))\n-                    .chain(env::split_paths(&env::var_os(\"PATH\").unwrap())),\n-            )\n-            .unwrap(),\n-        );\n-    } else {\n-        cmd.env(\"LD_LIBRARY_PATH\", format!(\"{}:{}\", work.display(), path.display()));\n+    let mut paths = vec![work.to_owned(), path.clone()];\n+    if let Some(library_path) = env::var_os(library_path) {\n+        paths.extend(env::split_paths(&library_path));\n     }\n+    cmd.env(library_path, env::join_paths(paths).unwrap());\n \n     // Some tests assume RUST_TEST_TMPDIR exists\n     cmd.env(\"RUST_TEST_TMPDIR\", tmp.to_owned());"}]}