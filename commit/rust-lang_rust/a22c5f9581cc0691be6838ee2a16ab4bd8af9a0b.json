{"sha": "a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b", "node_id": "C_kwDOAAsO6NoAKGEyMmM1Zjk1ODFjYzA2OTFiZTY4MzhlZTJhMTZhYjRiZDhhZjlhMGI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-08T20:26:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-08T20:26:53Z"}, "message": "Rollup merge of #108916 - fmease:rm-unused-ret-val, r=compiler-errors\n\nRemove an unused return value in `rustc_hir_typeck`\n\nUnused since #89580. Just something I noticed a while ago.\n\n`@rustbot` label C-cleanup", "tree": {"sha": "bd1c188d05a7ba2ca8f0389e0462cebdf36fbc1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd1c188d05a7ba2ca8f0389e0462cebdf36fbc1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkCO+NCRBK7hj4Ov3rIwAAmjIIAJQzqR5OtfSPlXyNIoPRc0hP\nPPPtm+QVmI3WtFMNju94bWrRmubo9J9SWVqajrKgmRBmWUk1evAU4hrhu0qn5n8z\nD/C2xR2+5Olb4O9MOtKVuKMomD/1oX+dqcINNfpRfcCEyMCdDtq0Isi2/vf3endl\nGb6b5krxvsDhct1bvO7NcwZVm8o4jJMp5erxAtvimUAqOj3YOazJJE6NUuQ3kslm\nfe+kmYsXWeLFNbFY6unZ1fsiIOzRpI+Qqzxk7w/vJnFb8GcVKPlD9hlN1mWm4mmB\nou3f2YNEw/tX2t0d8MAp9QpvP/qeuxKkhK4w5UrZ8FKeHfxxZRkNIyvlQ+g+U00=\n=a8/i\n-----END PGP SIGNATURE-----\n", "payload": "tree bd1c188d05a7ba2ca8f0389e0462cebdf36fbc1a\nparent e6f39f7225a55926f43600d1f517d4107e17d794\nparent a74e651e36990babed0f919dcf8f7d239f6df13f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678307213 +0100\ncommitter GitHub <noreply@github.com> 1678307213 +0100\n\nRollup merge of #108916 - fmease:rm-unused-ret-val, r=compiler-errors\n\nRemove an unused return value in `rustc_hir_typeck`\n\nUnused since #89580. Just something I noticed a while ago.\n\n`@rustbot` label C-cleanup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b", "html_url": "https://github.com/rust-lang/rust/commit/a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6f39f7225a55926f43600d1f517d4107e17d794", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6f39f7225a55926f43600d1f517d4107e17d794", "html_url": "https://github.com/rust-lang/rust/commit/e6f39f7225a55926f43600d1f517d4107e17d794"}, {"sha": "a74e651e36990babed0f919dcf8f7d239f6df13f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a74e651e36990babed0f919dcf8f7d239f6df13f", "html_url": "https://github.com/rust-lang/rust/commit/a74e651e36990babed0f919dcf8f7d239f6df13f"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "ac7d984c1618dc9a35e7ba9cbd51f7565290ced1", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs?ref=a22c5f9581cc0691be6838ee2a16ab4bd8af9a0b", "patch": "@@ -301,16 +301,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         span: Span,\n         def_id: DefId,\n         substs: SubstsRef<'tcx>,\n-    ) -> (ty::InstantiatedPredicates<'tcx>, Vec<Span>) {\n+    ) -> ty::InstantiatedPredicates<'tcx> {\n         let bounds = self.tcx.predicates_of(def_id);\n-        let spans: Vec<Span> = bounds.predicates.iter().map(|(_, span)| *span).collect();\n         let result = bounds.instantiate(self.tcx, substs);\n         let result = self.normalize(span, result);\n-        debug!(\n-            \"instantiate_bounds(bounds={:?}, substs={:?}) = {:?}, {:?}\",\n-            bounds, substs, result, spans,\n-        );\n-        (result, spans)\n+        debug!(\"instantiate_bounds(bounds={:?}, substs={:?}) = {:?}\", bounds, substs, result);\n+        result\n     }\n \n     pub(in super::super) fn normalize<T>(&self, span: Span, value: T) -> T\n@@ -1389,7 +1385,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             _ => false,\n         };\n-        let (bounds, _) = self.instantiate_bounds(span, def_id, &substs);\n+        let bounds = self.instantiate_bounds(span, def_id, &substs);\n \n         for mut obligation in traits::predicates_for_generics(\n             |idx, predicate_span| {"}]}