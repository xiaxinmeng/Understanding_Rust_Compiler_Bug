{"sha": "dbbe3363c94b120d1eba9cba01dadddd862716b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYmUzMzYzYzk0YjEyMGQxZWJhOWNiYTAxZGFkZGRkODYyNzE2Yjg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-27T17:51:21Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-27T17:51:21Z"}, "message": "Ensure 'let mut ;' where ':pat' is banned.", "tree": {"sha": "7a1397560a9ed462b36de1e31cecc2d03f543432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a1397560a9ed462b36de1e31cecc2d03f543432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbbe3363c94b120d1eba9cba01dadddd862716b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbbe3363c94b120d1eba9cba01dadddd862716b8", "html_url": "https://github.com/rust-lang/rust/commit/dbbe3363c94b120d1eba9cba01dadddd862716b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbbe3363c94b120d1eba9cba01dadddd862716b8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f908aa9e8000dd7fd2c3de54fe1d914fddf4fe92", "url": "https://api.github.com/repos/rust-lang/rust/commits/f908aa9e8000dd7fd2c3de54fe1d914fddf4fe92", "html_url": "https://github.com/rust-lang/rust/commit/f908aa9e8000dd7fd2c3de54fe1d914fddf4fe92"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "08934e8533049d96336901c26d93bd17b46e6c46", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dbbe3363c94b120d1eba9cba01dadddd862716b8/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbbe3363c94b120d1eba9cba01dadddd862716b8/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=dbbe3363c94b120d1eba9cba01dadddd862716b8", "patch": "@@ -384,6 +384,7 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n+    /// Parse a mutable binding with the `mut` token already eaten.\n     fn parse_pat_ident_mut(&mut self) -> PResult<'a, PatKind> {\n         let mut_span = self.prev_span;\n \n@@ -393,6 +394,14 @@ impl<'a> Parser<'a> {\n \n         self.recover_additional_muts();\n \n+        // Make sure we don't allow e.g. `let mut $p;` where `$p:pat`.\n+        if let token::Interpolated(ref nt) = self.token.kind {\n+             if let token::NtPat(_) = **nt {\n+                 self.expected_ident_found().emit();\n+             }\n+        }\n+\n+        // Parse the pattern we hope to be an identifier.\n         let mut pat = self.parse_pat(Some(\"identifier\"))?;\n \n         // Add `mut` to any binding in the parsed pattern."}, {"sha": "0c78ca726e0035cd7861d91e57f8103adfa20f9a", "filename": "src/test/ui/parser/mut-patterns.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dbbe3363c94b120d1eba9cba01dadddd862716b8/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbbe3363c94b120d1eba9cba01dadddd862716b8/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.rs?ref=dbbe3363c94b120d1eba9cba01dadddd862716b8", "patch": "@@ -32,4 +32,12 @@ pub fn main() {\n     let mut W(mut a, W(b, W(ref c, W(d, B { box f }))))\n     //~^ ERROR `mut` must be attached to each individual binding\n         = W(0, W(1, W(2, W(3, B { f: Box::new(4u8) }))));\n+\n+    // Make sure we don't accidentally allow `mut $p` where `$p:pat`.\n+    macro_rules! foo {\n+        ($p:pat) => {\n+            let mut $p = 0; //~ ERROR expected identifier, found `x`\n+        }\n+    }\n+    foo!(x);\n }"}, {"sha": "a1293129e2eaf8fbea8cf0bf03cae8b51521ef90", "filename": "src/test/ui/parser/mut-patterns.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dbbe3363c94b120d1eba9cba01dadddd862716b8/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dbbe3363c94b120d1eba9cba01dadddd862716b8/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr?ref=dbbe3363c94b120d1eba9cba01dadddd862716b8", "patch": "@@ -64,5 +64,14 @@ error: `mut` must be attached to each individual binding\n LL |     let mut W(mut a, W(b, W(ref c, W(d, B { box f }))))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `mut` to each binding: `W(mut a, W(mut b, W(ref c, W(mut d, B { box mut f }))))`\n \n-error: aborting due to 9 previous errors\n+error: expected identifier, found `x`\n+  --> $DIR/mut-patterns.rs:39:21\n+   |\n+LL |             let mut $p = 0;\n+   |                     ^^ expected identifier\n+...\n+LL |     foo!(x);\n+   |     -------- in this macro invocation\n+\n+error: aborting due to 10 previous errors\n "}]}