{"sha": "b24de8f0f861781cd83018ad43d7aa9dd2cb55bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNGRlOGYwZjg2MTc4MWNkODMwMThhZDQzZDdhYTlkZDJjYjU1YmI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-08T23:22:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-08T23:22:21Z"}, "message": "Rollup merge of #68026 - llogiq:ch-ch-ch-ch-changes, r=varkor\n\nSmall improvements in lexical_region_resolve\n\nThis just replaces a trivial `if` condition with a `|=` in two places.\n\nI could even have used a `fold` in the first case, but I think it would be less readable.", "tree": {"sha": "01f6119b01516f50953d5b4a1f3cfdb44bf6742a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01f6119b01516f50953d5b4a1f3cfdb44bf6742a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b24de8f0f861781cd83018ad43d7aa9dd2cb55bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFmQtCRBK7hj4Ov3rIwAAdHIIADkSadPN1xOuXWcC+8E0Fnlb\ncBfK528w1gOfzACb70bP3+otem/E7VxgFkBIvMl1JWvG8ZimicHi2TW+Z46VEcKJ\nQcJuT5CpDm2a/9Ds6xHvhLuodVLu36nOncR2QEIivWUYcof15VkMmtl6e2+JTwM5\nXIUNzsyJGJ0eOvwyiepGjyn6TuzcgoNE9svRRC43lWY9TcY6VgAs6pA2pmX5yazh\nnySGvXafb9DvgmAu1VQlWSweXFmZEcU/zCEpeVu8q5w9toPbjTWng6oKjQg1JmNk\n3/m2q8oOW2bouKCBDa/u7bz0cVJ3Rsgn8VfrCSK5IXcDJepq9LEJFQbpT7F0L4Y=\n=X6FB\n-----END PGP SIGNATURE-----\n", "payload": "tree 01f6119b01516f50953d5b4a1f3cfdb44bf6742a\nparent 5e6eeb092d68ab01f42070e54f2cb230affc6d54\nparent 74ea108b47997db75147f8af9b74119ee341ecbd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1578525741 +0100\ncommitter GitHub <noreply@github.com> 1578525741 +0100\n\nRollup merge of #68026 - llogiq:ch-ch-ch-ch-changes, r=varkor\n\nSmall improvements in lexical_region_resolve\n\nThis just replaces a trivial `if` condition with a `|=` in two places.\n\nI could even have used a `fold` in the first case, but I think it would be less readable.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b24de8f0f861781cd83018ad43d7aa9dd2cb55bb", "html_url": "https://github.com/rust-lang/rust/commit/b24de8f0f861781cd83018ad43d7aa9dd2cb55bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b24de8f0f861781cd83018ad43d7aa9dd2cb55bb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e6eeb092d68ab01f42070e54f2cb230affc6d54", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e6eeb092d68ab01f42070e54f2cb230affc6d54", "html_url": "https://github.com/rust-lang/rust/commit/5e6eeb092d68ab01f42070e54f2cb230affc6d54"}, {"sha": "74ea108b47997db75147f8af9b74119ee341ecbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/74ea108b47997db75147f8af9b74119ee341ecbd", "html_url": "https://github.com/rust-lang/rust/commit/74ea108b47997db75147f8af9b74119ee341ecbd"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "0bc49a290150554055f9c38bd47d6084f4014f72", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b24de8f0f861781cd83018ad43d7aa9dd2cb55bb/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24de8f0f861781cd83018ad43d7aa9dd2cb55bb/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=b24de8f0f861781cd83018ad43d7aa9dd2cb55bb", "patch": "@@ -204,9 +204,7 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n         // want to stop at the first constraint that makes a change.\n         let mut any_changed = false;\n         for member_constraint in &self.data.member_constraints {\n-            if self.enforce_member_constraint(graph, member_constraint, var_values) {\n-                any_changed = true;\n-            }\n+            any_changed |= self.enforce_member_constraint(graph, member_constraint, var_values);\n         }\n         any_changed\n     }\n@@ -337,9 +335,7 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n             for index in live_indices.iter() {\n                 let constraint = constraints[index];\n                 let (edge_changed, retain) = process_constraint(constraint);\n-                if edge_changed {\n-                    changed = true;\n-                }\n+                changed |= edge_changed;\n                 if !retain {\n                     let changed = killed_indices.insert(index);\n                     debug_assert!(changed);"}]}