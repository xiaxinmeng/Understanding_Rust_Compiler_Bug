{"sha": "9077d540da944c41678a7129e04e7fc5d7e38582", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNzdkNTQwZGE5NDRjNDE2NzhhNzEyOWUwNGU3ZmM1ZDdlMzg1ODI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-04-23T20:15:57Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-01T19:19:28Z"}, "message": "Replace h3 and h4 containing invalid DOM", "tree": {"sha": "0540af517ce4ea295f0e9658677fd6670cccef72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0540af517ce4ea295f0e9658677fd6670cccef72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9077d540da944c41678a7129e04e7fc5d7e38582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9077d540da944c41678a7129e04e7fc5d7e38582", "html_url": "https://github.com/rust-lang/rust/commit/9077d540da944c41678a7129e04e7fc5d7e38582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9077d540da944c41678a7129e04e7fc5d7e38582/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42312501d0a044b09b2fe0bac99503e57afe5c19", "url": "https://api.github.com/repos/rust-lang/rust/commits/42312501d0a044b09b2fe0bac99503e57afe5c19", "html_url": "https://github.com/rust-lang/rust/commit/42312501d0a044b09b2fe0bac99503e57afe5c19"}], "stats": {"total": 320, "additions": 190, "deletions": 130}, "files": [{"sha": "baa5a611a290631dfb833b00219936ee2d99df76", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -1369,7 +1369,11 @@ fn render_impl(\n                             })\n                         })\n                         .map(|item| format!(\"{}.{}\", item.type_(), name));\n-                    write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class,);\n+                    write!(\n+                        w,\n+                        \"<div id=\\\"{}\\\" class=\\\"{}{}\\\" role=\\\"heading\\\" aria-level=\\\"4\\\">\",\n+                        id, item_type, in_trait_class,\n+                    );\n                     w.write_str(\"<code>\");\n                     render_assoc_item(\n                         w,\n@@ -1388,13 +1392,17 @@ fn render_impl(\n                     );\n                     write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                     write_srclink(cx, item, w);\n-                    w.write_str(\"</h4>\");\n+                    w.write_str(\"</div>\");\n                 }\n             }\n             clean::TypedefItem(ref tydef, _) => {\n                 let source_id = format!(\"{}.{}\", ItemType::AssocType, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, in_trait_class);\n+                write!(\n+                    w,\n+                    \"<div id=\\\"{}\\\" class=\\\"{}{}\\\" role=\\\"heading\\\" aria-level=\\\"4\\\"><code>\",\n+                    id, item_type, in_trait_class\n+                );\n                 assoc_type(\n                     w,\n                     item,\n@@ -1406,12 +1414,16 @@ fn render_impl(\n                 );\n                 w.write_str(\"</code>\");\n                 write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n-                w.write_str(\"</h4>\");\n+                w.write_str(\"</div>\");\n             }\n             clean::AssocConstItem(ref ty, ref default) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, in_trait_class);\n+                write!(\n+                    w,\n+                    \"<div id=\\\"{}\\\" class=\\\"{}{}\\\" role=\\\"heading\\\" aria-level=\\\"4\\\"><code>\",\n+                    id, item_type, in_trait_class\n+                );\n                 assoc_const(\n                     w,\n                     item,\n@@ -1431,12 +1443,16 @@ fn render_impl(\n                 );\n                 write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                 write_srclink(cx, item, w);\n-                w.write_str(\"</h4>\");\n+                w.write_str(\"</div>\");\n             }\n             clean::AssocTypeItem(ref bounds, ref default) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, in_trait_class);\n+                write!(\n+                    w,\n+                    \"<div id=\\\"{}\\\" class=\\\"{}{}\\\" role=\\\"heading\\\" aria-level=\\\"4\\\"><code>\",\n+                    id, item_type, in_trait_class,\n+                );\n                 assoc_type(\n                     w,\n                     item,\n@@ -1448,7 +1464,7 @@ fn render_impl(\n                 );\n                 w.write_str(\"</code>\");\n                 write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n-                w.write_str(\"</h4>\");\n+                w.write_str(\"</div>\");\n             }\n             clean::StrippedItem(..) => return,\n             _ => panic!(\"can't make docs for trait item with name {:?}\", item.name),\n@@ -1577,7 +1593,8 @@ fn render_impl(\n         if let Some(use_absolute) = use_absolute {\n             write!(\n                 w,\n-                \"{}<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">\",\n+                \"{}<div id=\\\"{}\\\" class=\\\"impl\\\"{} role=\\\"heading\\\" aria-level=\\\"3\\\">\\\n+                     <code class=\\\"in-band\\\">\",\n                 open_details(&mut close_tags, is_implementing_trait),\n                 id,\n                 aliases\n@@ -1604,7 +1621,8 @@ fn render_impl(\n         } else {\n             write!(\n                 w,\n-                \"{}<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">{}</code>\",\n+                \"{}<div id=\\\"{}\\\" class=\\\"impl\\\"{} role=\\\"heading\\\" aria-level=\\\"3\\\">\\\n+                     <code class=\\\"in-band\\\">{}</code>\",\n                 open_details(&mut close_tags, is_implementing_trait),\n                 id,\n                 aliases,\n@@ -1621,9 +1639,9 @@ fn render_impl(\n         );\n         write_srclink(cx, &i.impl_item, w);\n         if !toggled {\n-            w.write_str(\"</h3>\");\n+            w.write_str(\"</div>\");\n         } else {\n-            w.write_str(\"</h3></summary>\");\n+            w.write_str(\"</div></summary>\");\n         }\n \n         if trait_.is_some() {"}, {"sha": "19508025d2c68601ebefdd14d0750d8e0c92eb77", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -585,12 +585,12 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         if toggled {\n             write!(w, \"<details class=\\\"rustdoc-toggle\\\" open><summary>\");\n         }\n-        write!(w, \"<h3 id=\\\"{id}\\\" class=\\\"method\\\"><code>\", id = id);\n+        write!(w, \"<div id=\\\"{}\\\" class=\\\"method\\\" role=\\\"heading\\\" aria-level=\\\"3\\\"><code>\", id);\n         render_assoc_item(w, m, AssocItemLink::Anchor(Some(&id)), ItemType::Impl, cx);\n         w.write_str(\"</code>\");\n         render_stability_since(w, m, t, cx.tcx());\n         write_srclink(cx, m, w);\n-        w.write_str(\"</h3>\");\n+        w.write_str(\"</div>\");\n         if toggled {\n             write!(w, \"</summary>\");\n             w.push_buffer(content);"}, {"sha": "e70bfecca5948ca1b1893d3dd4f6e9e9fc6c0248", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 68, "deletions": 22, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -117,8 +117,7 @@ h2 {\n h3 {\n \tfont-size: 1.3em;\n }\n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod):not(.notable),\n-h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant):not(.associatedtype) {\n+h1, h2, h3:not(.notable), h4 {\n \tfont-weight: 500;\n \tmargin: 20px 0 15px 0;\n \tpadding-bottom: 6px;\n@@ -135,30 +134,38 @@ h1.fqn {\n h1.fqn > .in-band > a:hover {\n \ttext-decoration: underline;\n }\n-h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n-h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant):not(.associatedtype) {\n+h2, h3, h4 {\n \tborder-bottom: 1px solid;\n }\n-h3.impl, h3.method, h4.method, h3.type, h4.type, h4.associatedconstant, h4.associatedtype {\n+div[aria-level=\"3\"].impl, div[aria-level=\"3\"].method, div[aria-level=\"4\"].method,\n+div[aria-level=\"3\"].type, div[aria-level=\"4\"].type, div[aria-level=\"4\"].associatedconstant,\n+div[aria-level=\"4\"].associatedtype {\n \tflex-basis: 100%;\n \tfont-weight: 600;\n \tmargin-top: 16px;\n \tmargin-bottom: 10px;\n \tposition: relative;\n }\n-h3.impl, h3.method, h4.method.trait-impl, h3.type,\n-h4.type.trait-impl, h4.associatedconstant.trait-impl, h4.associatedtype.trait-impl {\n+div[aria-level=\"3\"].impl, div[aria-level=\"3\"].method, div[aria-level=\"4\"].method.trait-impl,\n+div[aria-level=\"3\"].type, div[aria-level=\"4\"].type.trait-impl,\n+div[aria-level=\"4\"].associatedconstant.trait-impl,\n+div[aria-level=\"4\"].associatedtype.trait-impl {\n \tpadding-left: 15px;\n }\n \n+div.impl-items > div {\n+\tpadding-left: 0;\n+}\n+\n h1, h2, h3, h4,\n .sidebar, a.source, .search-input, .search-results .result-name,\n .content table td:first-child > a,\n-div.item-list .out-of-band,\n+.collapse-toggle, div.item-list .out-of-band, span.since,\n #source-sidebar, #sidebar-toggle,\n details.rustdoc-toggle > summary::before,\n details.undocumented > summary::before,\n-.content ul.crate a.crate,\n+div.impl-items > div:not(.docblock):not(.item-info),\n+.content ul.crate a.crate, a.srclink,\n /* This selector is for the items listed in the \"all items\" page. */\n #main > ul.docblock > li > a {\n \tfont-family: \"Fira Sans\", Arial, sans-serif;\n@@ -313,8 +320,6 @@ nav.sub {\n \tmargin-bottom: 14px;\n }\n .block h2, .block h3 {\n-\tmargin-top: 0;\n-\tmargin-bottom: 8px;\n \ttext-align: center;\n }\n .block ul, .block li {\n@@ -462,15 +467,15 @@ nav.sub {\n \tfont-weight: normal;\n }\n \n-h3.impl > .out-of-band {\n+div[aria-level=\"3\"].impl > .out-of-band {\n \tfont-size: 21px;\n }\n \n-h4.method > .out-of-band {\n+div[aria-level=\"4\"].method > .out-of-band {\n \tfont-size: 19px;\n }\n \n-h4 > code, h3 > code, .invisible > code {\n+div[aria-level=\"3\"] > code, div[aria-level=\"4\"] > code, .invisible > code {\n \tmax-width: calc(100% - 41px);\n \tdisplay: block;\n }\n@@ -543,7 +548,7 @@ h4 > code, h3 > code, .invisible > code {\n }\n .content .multi-column li { width: 100%; display: inline-block; }\n \n-.content .method {\n+.content > div.methods > div.method {\n \tfont-size: 1em;\n \tposition: relative;\n }\n@@ -555,7 +560,7 @@ h4 > code, h3 > code, .invisible > code {\n \tfont-size: 0.8em;\n }\n \n-.content .methods > div:not(.notable-traits):not(.methods) {\n+.content .methods > div:not(.notable-traits):not(.method) {\n \tmargin-left: 40px;\n \tmargin-bottom: 15px;\n }\n@@ -564,7 +569,7 @@ h4 > code, h3 > code, .invisible > code {\n \tmargin-left: 20px;\n \tmargin-top: -34px;\n }\n-.content .docblock > .impl-items > h4 {\n+.content .docblock > .impl-items > div[aria-level=\"4\"] {\n \tborder-bottom: 0;\n }\n .content .docblock >.impl-items .table-display {\n@@ -688,7 +693,8 @@ a {\n \ttext-decoration: underline;\n }\n \n-.invisible > .srclink, h4 > code + .srclink, h3 > code + .srclink {\n+.invisible > .srclink,\n+div[aria-level=\"3\"] > code + .srclink, div[aria-level=\"4\"] > code + .srclink {\n \tposition: absolute;\n \ttop: 0;\n \tright: 0;\n@@ -923,7 +929,8 @@ body.blur > :not(#help) {\n \tflex-grow: 1;\n }\n \n-.impl-items h4, h4.impl, h3.impl, .methods h3 {\n+.impl-items div[aria-level=\"4\"], div[aria-level=\"4\"].impl, div[aria-level=\"3\"].impl,\n+.methods div[aria-level=\"3\"] {\n \tdisplay: flex;\n \tflex-basis: 100%;\n \tfont-size: 16px;\n@@ -985,6 +992,45 @@ a.test-arrow:hover{\n \tfont-weight: 300;\n }\n \n+.collapse-toggle {\n+\tfont-weight: 300;\n+\tposition: absolute;\n+\tleft: -23px;\n+\ttop: 0;\n+}\n+\n+div[aria-level=\"3\"] > .collapse-toggle, div[aria-level=\"4\"] > .collapse-toggle {\n+\tfont-size: 0.8em;\n+\ttop: 5px;\n+}\n+\n+.toggle-wrapper > .collapse-toggle {\n+\tleft: -24px;\n+\tmargin-top: 0px;\n+}\n+\n+.toggle-wrapper {\n+\tposition: relative;\n+\tmargin-top: 0;\n+}\n+\n+.toggle-wrapper.collapsed {\n+\theight: 25px;\n+\ttransition: height .2s;\n+\tmargin-bottom: .6em;\n+}\n+\n+.collapse-toggle > .inner {\n+\tdisplay: inline-block;\n+\twidth: 1.2ch;\n+\ttext-align: center;\n+}\n+\n+.collapse-toggle.hidden-default {\n+\tposition: relative;\n+\tmargin-left: 20px;\n+}\n+\n .since + .srclink {\n \tdisplay: table-cell;\n \tpadding-left: 10px;\n@@ -1197,7 +1243,7 @@ pre.rust {\n \tmargin-left: 5px;\n }\n \n-h4 > .notable-traits {\n+div[aria-level=\"4\"] > .notable-traits {\n \tposition: absolute;\n \tleft: -44px;\n \ttop: 2px;\n@@ -1615,7 +1661,7 @@ details.undocumented[open] > summary::before {\n \t\tpadding: 0;\n \t}\n \n-\t.content h4 > .out-of-band {\n+\t.content div[aria-level=\"4\"] > .out-of-band {\n \t\tposition: inherit;\n \t}\n \n@@ -1638,7 +1684,7 @@ details.undocumented[open] > summary::before {\n \t\tz-index: 1;\n \t}\n \n-\th4 > .notable-traits {\n+\tdiv[aria-level=\"4\"] > .notable-traits {\n \t\tposition: absolute;\n \t\tleft: -22px;\n \t\ttop: 24px;"}, {"sha": "8f2f79a77a176e09184c3aab54d6be2b587634e7", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -10,8 +10,7 @@ body {\n \tcolor: #c5c5c5;\n }\n \n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n-h4:not(.method):not(.type):not(.tymethod) {\n+h1, h2, h3:not(.notable), h4 {\n \tcolor: white;\n }\n h1.fqn {\n@@ -20,10 +19,10 @@ h1.fqn {\n h1.fqn  a {\n \tcolor: #fff;\n }\n-h2, h3:not(.impl):not(.method):not(.type):not(.tymethod) {\n+h2, h3, h4 {\n \tborder-bottom-color: #5c6773;\n }\n-h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n+h4 {\n \tborder: none;\n }\n "}, {"sha": "cf3ba312da1885427c14713025588b082d4cfd96", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -3,15 +3,13 @@ body {\n \tcolor: #ddd;\n }\n \n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n-h4:not(.method):not(.type):not(.tymethod) {\n+h1, h2, h3:not(.notable), h4 {\n \tcolor: #ddd;\n }\n h1.fqn {\n \tborder-bottom-color: #d2d2d2;\n }\n-h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n-h4:not(.method):not(.type):not(.tymethod) {\n+h2, h3, h4 {\n \tborder-bottom-color: #d2d2d2;\n }\n "}, {"sha": "68e74db383b8abeb97c172ba6817258207c535a4", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -5,15 +5,13 @@ body {\n \tcolor: black;\n }\n \n-h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n-h4:not(.method):not(.type):not(.tymethod) {\n+h1, h2, h3:not(.notable), h4 {\n \tcolor: black;\n }\n h1.fqn {\n \tborder-bottom-color: #D5D5D5;\n }\n-h2, h3:not(.impl):not(.method):not(.type):not(.tymethod),\n-h4:not(.method):not(.type):not(.tymethod) {\n+h2, h3, h4 {\n \tborder-bottom-color: #DDDDDD;\n }\n "}, {"sha": "18eae8132a2011dd9e58676d301141177906fee4", "filename": "src/test/rustdoc/async-fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fasync-fn.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -77,12 +77,12 @@ struct AsyncFdReadyGuard<'a, T> { x: &'a T }\n \n impl Foo {\n     // @has async_fn/struct.Foo.html\n-    // @has - '//h4[@class=\"method\"]' 'pub async fn complicated_lifetimes( &self, context: &impl Bar) -> impl Iterator<Item = &usize>'\n+    // @has - '//div[@class=\"method\"]' 'pub async fn complicated_lifetimes( &self, context: &impl Bar) -> impl Iterator<Item = &usize>'\n     pub async fn complicated_lifetimes(&self, context: &impl Bar) -> impl Iterator<Item = &usize> {}\n     // taken from `tokio` as an example of a method that was particularly bad before\n-    // @has - '//h4[@class=\"method\"]' \"pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()>\"\n+    // @has - '//div[@class=\"method\"]' \"pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()>\"\n     pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()> {}\n-    // @has - '//h4[@class=\"method\"]' \"pub async fn mut_self(&mut self)\"\n+    // @has - '//div[@class=\"method\"]' \"pub async fn mut_self(&mut self)\"\n     pub async fn mut_self(&mut self) {}\n }\n "}, {"sha": "01ea09a94614a71be37d2c9b463bdf2bc32cb43e", "filename": "src/test/rustdoc/auto_aliases.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fauto_aliases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fauto_aliases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauto_aliases.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -1,6 +1,6 @@\n #![feature(auto_traits)]\n \n-// @has auto_aliases/trait.Bar.html '//h3[@data-aliases=\"auto_aliases::Foo\"]' 'impl Bar for Foo'\n+// @has auto_aliases/trait.Bar.html '//div[@data-aliases=\"auto_aliases::Foo\"]' 'impl Bar for Foo'\n pub struct Foo;\n \n pub auto trait Bar {}"}, {"sha": "6f0c15cb5aca6c2ad37a6d910ce50450ed2cf779", "filename": "src/test/rustdoc/blanket-reexport-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -1,6 +1,6 @@\n #![crate_name = \"foo\"]\n \n-// @has foo/struct.S.html '//h3[@id=\"impl-Into%3CU%3E\"]//code' 'impl<T, U> Into<U> for T'\n+// @has foo/struct.S.html '//div[@id=\"impl-Into%3CU%3E\"]//code' 'impl<T, U> Into<U> for T'\n pub struct S2 {}\n mod m {\n     pub struct S {}"}, {"sha": "2761f92ef5712f8650707277636840021db02482", "filename": "src/test/rustdoc/const-display.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-display.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -38,12 +38,12 @@ pub const unsafe fn bar_not_gated() -> u32 { 42 }\n pub struct Foo;\n \n impl Foo {\n-    // @has 'foo/struct.Foo.html' '//h4[@id=\"method.gated\"]/code' 'pub unsafe fn gated() -> u32'\n+    // @has 'foo/struct.Foo.html' '//div[@id=\"method.gated\"]/code' 'pub unsafe fn gated() -> u32'\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_const_unstable(feature=\"foo\", issue = \"none\")]\n     pub const unsafe fn gated() -> u32 { 42 }\n \n-    // @has 'foo/struct.Foo.html' '//h4[@id=\"method.stable_impl\"]/code' 'pub const fn stable_impl() -> u32'\n+    // @has 'foo/struct.Foo.html' '//div[@id=\"method.stable_impl\"]/code' 'pub const fn stable_impl() -> u32'\n     // @has - '//span[@class=\"since\"]' '1.0.0 (const: 1.2.0)'\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_const_stable(feature = \"rust1\", since = \"1.2.0\")]"}, {"sha": "8f412aa8c402681e707bc85d7f5b83adfd81135a", "filename": "src/test/rustdoc/const-generics/add-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -8,7 +8,7 @@ pub struct Simd<T, const WIDTH: usize> {\n     inner: T,\n }\n \n-// @has foo/struct.Simd.html '//div[@id=\"trait-implementations-list\"]//h3/code' 'impl Add<Simd<u8, 16_usize>> for Simd<u8, 16>'\n+// @has foo/struct.Simd.html '//div[@id=\"trait-implementations-list\"]//div/code' 'impl Add<Simd<u8, 16_usize>> for Simd<u8, 16>'\n impl Add for Simd<u8, 16> {\n     type Output = Self;\n "}, {"sha": "b32222e371da5e339551f2b4135dc61c06a9168b", "filename": "src/test/rustdoc/const-generics/const-generic-slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -6,7 +6,7 @@ pub trait Array {\n }\n \n // @has foo/trait.Array.html\n-// @has - '//h3[@class=\"impl\"]' 'impl<T, const N: usize> Array for [T; N]'\n+// @has - '//div[@class=\"impl\"]' 'impl<T, const N: usize> Array for [T; N]'\n impl <T, const N: usize> Array for [T; N] {\n     type Item = T;\n }"}, {"sha": "7c4c70432c762267c383ca1694a1f0b613edf633", "filename": "src/test/rustdoc/const-generics/const-generics-docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -36,7 +36,7 @@ pub struct Foo<const N: usize> where u8: Trait<N>;\n // @has foo/struct.Bar.html '//pre[@class=\"rust struct\"]' 'pub struct Bar<T, const N: usize>(_)'\n pub struct Bar<T, const N: usize>([T; N]);\n \n-// @has foo/struct.Foo.html '//h3[@id=\"impl\"]/code' 'impl<const M: usize> Foo<M> where u8: Trait<M>'\n+// @has foo/struct.Foo.html '//div[@id=\"impl\"]/code' 'impl<const M: usize> Foo<M> where u8: Trait<M>'\n impl<const M: usize> Foo<M> where u8: Trait<M> {\n     // @has - '//*[@id=\"associatedconstant.FOO_ASSOC\"]' 'pub const FOO_ASSOC: usize'\n     pub const FOO_ASSOC: usize = M + 13;\n@@ -47,7 +47,7 @@ impl<const M: usize> Foo<M> where u8: Trait<M> {\n     }\n }\n \n-// @has foo/struct.Bar.html '//h3[@id=\"impl\"]/code' 'impl<const M: usize> Bar<u8, M>'\n+// @has foo/struct.Bar.html '//div[@id=\"impl\"]/code' 'impl<const M: usize> Bar<u8, M>'\n impl<const M: usize> Bar<u8, M> {\n     // @has - '//*[@id=\"method.hey\"]' \\\n     //      'pub fn hey<const N: usize>(&self) -> Foo<N> where u8: Trait<N>'"}, {"sha": "e4e504dd83b5b6cfc5d48ea42db91a1e89144050", "filename": "src/test/rustdoc/const-generics/const-impl.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -9,20 +9,20 @@ pub enum Order {\n }\n \n // @has foo/struct.VSet.html '//pre[@class=\"rust struct\"]' 'pub struct VSet<T, const ORDER: Order>'\n-// @has foo/struct.VSet.html '//h3[@id=\"impl-Send\"]/code' 'impl<T, const ORDER: Order> Send for VSet<T, ORDER>'\n-// @has foo/struct.VSet.html '//h3[@id=\"impl-Sync\"]/code' 'impl<T, const ORDER: Order> Sync for VSet<T, ORDER>'\n+// @has foo/struct.VSet.html '//div[@id=\"impl-Send\"]/code' 'impl<T, const ORDER: Order> Send for VSet<T, ORDER>'\n+// @has foo/struct.VSet.html '//div[@id=\"impl-Sync\"]/code' 'impl<T, const ORDER: Order> Sync for VSet<T, ORDER>'\n pub struct VSet<T, const ORDER: Order> {\n     inner: Vec<T>,\n }\n \n-// @has foo/struct.VSet.html '//h3[@id=\"impl\"]/code' 'impl<T> VSet<T, {Order::Sorted}>'\n+// @has foo/struct.VSet.html '//div[@id=\"impl\"]/code' 'impl<T> VSet<T, {Order::Sorted}>'\n impl <T> VSet<T, {Order::Sorted}> {\n     pub fn new() -> Self {\n         Self { inner: Vec::new() }\n     }\n }\n \n-// @has foo/struct.VSet.html '//h3[@id=\"impl-1\"]/code' 'impl<T> VSet<T, {Order::Unsorted}>'\n+// @has foo/struct.VSet.html '//div[@id=\"impl-1\"]/code' 'impl<T> VSet<T, {Order::Unsorted}>'\n impl <T> VSet<T, {Order::Unsorted}> {\n     pub fn new() -> Self {\n         Self { inner: Vec::new() }\n@@ -31,7 +31,7 @@ impl <T> VSet<T, {Order::Unsorted}> {\n \n pub struct Escape<const S: &'static str>;\n \n-// @has foo/struct.Escape.html '//h3[@id=\"impl\"]/code' 'impl Escape<{ r#\"<script>alert(\"Escape\");</script>\"# }>'\n+// @has foo/struct.Escape.html '//div[@id=\"impl\"]/code' 'impl Escape<{ r#\"<script>alert(\"Escape\");</script>\"# }>'\n impl Escape<{ r#\"<script>alert(\"Escape\");</script>\"# }> {\n     pub fn f() {}\n }"}, {"sha": "2eed1cc9d7450bf1eae5ade2f736f559f1e7412f", "filename": "src/test/rustdoc/empty-impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fempty-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fempty-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fempty-impls.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -1,19 +1,19 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Foo.html\n-// @has - '//div[@id=\"synthetic-implementations-list\"]/h3[@id=\"impl-Send\"]' 'impl Send for Foo'\n+// @has - '//div[@id=\"synthetic-implementations-list\"]/div[@id=\"impl-Send\"]' 'impl Send for Foo'\n pub struct Foo;\n \n pub trait EmptyTrait {}\n \n-// @has - '//div[@id=\"trait-implementations-list\"]/h3[@id=\"impl-EmptyTrait\"]' 'impl EmptyTrait for Foo'\n+// @has - '//div[@id=\"trait-implementations-list\"]/div[@id=\"impl-EmptyTrait\"]' 'impl EmptyTrait for Foo'\n impl EmptyTrait for Foo {}\n \n pub trait NotEmpty {\n     fn foo(&self);\n }\n \n-// @has - '//div[@id=\"trait-implementations-list\"]/details/summary/h3[@id=\"impl-NotEmpty\"]' 'impl NotEmpty for Foo'\n+// @has - '//div[@id=\"trait-implementations-list\"]/details/summary/div[@id=\"impl-NotEmpty\"]' 'impl NotEmpty for Foo'\n impl NotEmpty for Foo {\n     fn foo(&self) {}\n }"}, {"sha": "4b6270b26da276fe122d7955317aa3a308323aff", "filename": "src/test/rustdoc/ensure-src-link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fensure-src-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fensure-src-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fensure-src-link.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -2,5 +2,5 @@\n \n // This test ensures that the [src] link is present on traits items.\n \n-// @has foo/trait.Iterator.html '//h3[@id=\"method.zip\"]/a[@class=\"srclink\"]' \"[src]\"\n+// @has foo/trait.Iterator.html '//div[@id=\"method.zip\"]/a[@class=\"srclink\"]' \"[src]\"\n pub use std::iter::Iterator;"}, {"sha": "96ced021041ff174c91e995796ce7df9d1460ca0", "filename": "src/test/rustdoc/generic-impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -2,10 +2,10 @@\n \n use std::fmt;\n \n-// @!has foo/struct.Bar.html '//h3[@id=\"impl-ToString\"]//code' 'impl<T> ToString for T'\n+// @!has foo/struct.Bar.html '//div[@id=\"impl-ToString\"]//code' 'impl<T> ToString for T'\n pub struct Bar;\n \n-// @has foo/struct.Foo.html '//h3[@id=\"impl-ToString\"]//code' 'impl<T> ToString for T'\n+// @has foo/struct.Foo.html '//div[@id=\"impl-ToString\"]//code' 'impl<T> ToString for T'\n pub struct Foo;\n // @has foo/struct.Foo.html '//div[@class=\"sidebar-links\"]/a[@href=\"#impl-ToString\"]' 'ToString'\n "}, {"sha": "23d9e73b567d0a9174b577a9e7da4ab36e877425", "filename": "src/test/rustdoc/issue-29503.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29503.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -5,7 +5,7 @@ pub trait MyTrait {\n     fn my_string(&self) -> String;\n }\n \n-// @has - \"//div[@id='implementors-list']//h3[@id='impl-MyTrait']//code\" \"impl<T> MyTrait for T where T: Debug\"\n+// @has - \"//div[@id='implementors-list']//div[@id='impl-MyTrait']//code\" \"impl<T> MyTrait for T where T: Debug\"\n impl<T> MyTrait for T where T: fmt::Debug {\n     fn my_string(&self) -> String {\n         format!(\"{:?}\", self)"}, {"sha": "90234cc9c59f7460f42f10421aec41c6a0f51aa6", "filename": "src/test/rustdoc/issue-33302.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-33302.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -23,23 +23,23 @@ macro_rules! make {\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//h3[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n+        //        '//div[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n         // @has - '//*[@id=\"associatedconstant.C\"]' 'const C: [i32; 16]'\n         // @has - '//*[@id=\"associatedconstant.D\"]' 'const D: i32'\n         impl T<[i32; ($n * $n)]> for S {\n             const C: [i32; ($n * $n)] = [0; ($n * $n)];\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//h3[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n+        //        '//div[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n         // @has - '//*[@id=\"associatedconstant.C-1\"]' 'const C: (i32,)'\n         // @has - '//*[@id=\"associatedconstant.D-1\"]' 'const D: i32'\n         impl T<(i32,)> for S {\n             const C: (i32,) = ($n,);\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//h3[@class=\"impl\"]' 'impl T<(i32, i32)> for S'\n+        //        '//div[@class=\"impl\"]' 'impl T<(i32, i32)> for S'\n         // @has - '//*[@id=\"associatedconstant.C-2\"]' 'const C: (i32, i32)'\n         // @has - '//*[@id=\"associatedconstant.D-2\"]' 'const D: i32'\n         impl T<(i32, i32)> for S {"}, {"sha": "a60371c1b010e20c89f8b4b7a12e25f34acfe233", "filename": "src/test/rustdoc/issue-53812.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-53812.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -12,9 +12,10 @@ macro_rules! array_impls {\n     }\n }\n \n-// @has issue_53812/trait.MyIterator.html '//*[@id=\"implementors-list\"]/h3[1]' 'MyStruct<[T; 0]>'\n-// @has - '//*[@id=\"implementors-list\"]/h3[2]' 'MyStruct<[T; 1]>'\n-// @has - '//*[@id=\"implementors-list\"]/h3[3]' 'MyStruct<[T; 2]>'\n-// @has - '//*[@id=\"implementors-list\"]/h3[4]' 'MyStruct<[T; 3]>'\n-// @has - '//*[@id=\"implementors-list\"]/h3[5]' 'MyStruct<[T; 10]>'\n+// @has issue_53812/trait.MyIterator.html\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][1]' 'MyStruct<[T; 0]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][2]' 'MyStruct<[T; 1]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][3]' 'MyStruct<[T; 2]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][4]' 'MyStruct<[T; 3]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][5]' 'MyStruct<[T; 10]>'\n array_impls! { 10 3 2 1 0 }"}, {"sha": "2951f5128e07402229b190d5fef9a64b4324d575", "filename": "src/test/rustdoc/primitive-generic-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fprimitive-generic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fprimitive-generic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-generic-impl.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -2,4 +2,4 @@\n \n include!(\"primitive/primitive-generic-impl.rs\");\n \n-// @has foo/primitive.i32.html '//h3[@id=\"impl-ToString\"]//code' 'impl<T> ToString for T'\n+// @has foo/primitive.i32.html '//div[@id=\"impl-ToString\"]//code' 'impl<T> ToString for T'"}, {"sha": "d256fbe8de08a941b0700994e8787f1799092c7d", "filename": "src/test/rustdoc/sidebar-links-to-foreign-impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -6,9 +6,9 @@\n // @has - '//*[@class=\"sidebar-title\"][@href=\"#foreign-impls\"]' 'Implementations on Foreign Types'\n // @has - '//h2[@id=\"foreign-impls\"]' 'Implementations on Foreign Types'\n // @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#impl-Foo-for-u32\"]' 'u32'\n-// @has - '//h3[@id=\"impl-Foo-for-u32\"]//code' 'impl Foo for u32'\n+// @has - '//div[@id=\"impl-Foo-for-u32\"]//code' 'impl Foo for u32'\n // @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#impl-Foo-for-%26%27a%20str\"]' \"&'a str\"\n-// @has - '//h3[@id=\"impl-Foo-for-%26%27a%20str\"]//code' \"impl<'a> Foo for &'a str\"\n+// @has - '//div[@id=\"impl-Foo-for-%26%27a%20str\"]//code' \"impl<'a> Foo for &'a str\"\n pub trait Foo {}\n \n impl Foo for u32 {}"}, {"sha": "6730c71e90f885318ac8155570f8355e9730f940", "filename": "src/test/rustdoc/sized_trait.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsized_trait.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -1,17 +1,17 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Bar.html\n-// @!has - '//h3[@id=\"impl-Sized\"]'\n+// @!has - '//div[@id=\"impl-Sized\"]'\n pub struct Bar {\n     a: u16,\n }\n \n // @has foo/struct.Foo.html\n-// @!has - '//h3[@id=\"impl-Sized\"]'\n+// @!has - '//div[@id=\"impl-Sized\"]'\n pub struct Foo<T: ?Sized>(T);\n \n // @has foo/struct.Unsized.html\n-// @has - '//h3[@id=\"impl-Sized\"]/code' 'impl !Sized for Unsized'\n+// @has - '//div[@id=\"impl-Sized\"]/code' 'impl !Sized for Unsized'\n pub struct Unsized {\n     data: [u8],\n }"}, {"sha": "864cb0c400b64dc86dca67de432e9e9dad62eb09", "filename": "src/test/rustdoc/spotlight-from-dependency.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fspotlight-from-dependency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fspotlight-from-dependency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fspotlight-from-dependency.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -3,7 +3,7 @@\n use std::iter::Iterator;\n \n // @has foo/struct.Odd.html\n-// @has - '//h4[@id=\"method.new\"]//span[@class=\"notable-traits\"]//code/span' 'impl Iterator for Odd'\n+// @has - '//div[@id=\"method.new\"]//span[@class=\"notable-traits\"]//code/span' 'impl Iterator for Odd'\n pub struct Odd {\n     current: usize,\n }"}, {"sha": "6f609e080d3dd0065e7204a64624ace689b782fd", "filename": "src/test/rustdoc/src-links-auto-impls.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -1,12 +1,12 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Unsized.html\n-// @has - '//h3[@id=\"impl-Sized\"]/code' 'impl !Sized for Unsized'\n-// @!has - '//h3[@id=\"impl-Sized\"]/a[@class=\"srclink\"]' '[src]'\n-// @has - '//h3[@id=\"impl-Sync\"]/code' 'impl Sync for Unsized'\n-// @!has - '//h3[@id=\"impl-Sync\"]/a[@class=\"srclink\"]' '[src]'\n-// @has - '//h3[@id=\"impl-Any\"]/code' 'impl<T> Any for T'\n-// @has - '//h3[@id=\"impl-Any\"]/a[@class=\"srclink\"]' '[src]'\n+// @has - '//div[@id=\"impl-Sized\"]/code' 'impl !Sized for Unsized'\n+// @!has - '//div[@id=\"impl-Sized\"]/a[@class=\"srclink\"]' '[src]'\n+// @has - '//div[@id=\"impl-Sync\"]/code' 'impl Sync for Unsized'\n+// @!has - '//div[@id=\"impl-Sync\"]/a[@class=\"srclink\"]' '[src]'\n+// @has - '//div[@id=\"impl-Any\"]/code' 'impl<T> Any for T'\n+// @has - '//div[@id=\"impl-Any\"]/a[@class=\"srclink\"]' '[src]'\n pub struct Unsized {\n     data: [u8],\n }"}, {"sha": "d0dfb8759e66531284c6d371bad083c301afa305", "filename": "src/test/rustdoc/trait-attributes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Ftrait-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Ftrait-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-attributes.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -2,7 +2,7 @@\n \n \n pub trait Foo {\n-    // @has foo/trait.Foo.html '//h3[@id=\"tymethod.foo\"]//div[@class=\"code-attribute\"]' '#[must_use]'\n+    // @has foo/trait.Foo.html '//div[@id=\"tymethod.foo\"]//div[@class=\"code-attribute\"]' '#[must_use]'\n     #[must_use]\n     fn foo();\n }\n@@ -11,11 +11,11 @@ pub trait Foo {\n pub struct Bar;\n \n impl Bar {\n-    // @has foo/struct.Bar.html '//h4[@id=\"method.bar\"]//div[@class=\"code-attribute\"]' '#[must_use]'\n+    // @has foo/struct.Bar.html '//div[@id=\"method.bar\"]//div[@class=\"code-attribute\"]' '#[must_use]'\n     #[must_use]\n     pub fn bar() {}\n \n-    // @has foo/struct.Bar.html '//h4[@id=\"method.bar2\"]//div[@class=\"code-attribute\"]' '#[must_use]'\n+    // @has foo/struct.Bar.html '//div[@id=\"method.bar2\"]//div[@class=\"code-attribute\"]' '#[must_use]'\n     #[must_use]\n     pub fn bar2() {}\n }"}, {"sha": "5b7c04c0d4445a185a2df8607907b08bca42244d", "filename": "src/test/rustdoc/trait-impl-items-links-and-anchors.rs", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -8,58 +8,58 @@ pub trait MyTrait {\n \n \n impl MyTrait for String {\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedtype.Assoc-1\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedtype.Assoc-1\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-1\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-1\n     type Assoc = ();\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-1\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-1\n     const VALUE: u32 = 5;\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.trait_function\"]//a[@class=\"anchor\"]/@href' #method.trait_function\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.trait_function\"]//a[@class=\"anchor\"]/@href' #method.trait_function\n     fn trait_function(&self) {}\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.defaulted_override-1\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.defaulted_override-1\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-1\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.defaulted_override-1\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.defaulted_override-1\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-1\n     fn defaulted_override(&self) {}\n }\n \n impl MyTrait for Vec<u8> {\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedtype.Assoc-2\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedtype.Assoc-2\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-2\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-2\n     type Assoc = ();\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-2\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-2\n     const VALUE: u32 = 5;\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.trait_function-1\"]//a[@class=\"anchor\"]/@href' #method.trait_function-1\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.trait_function-1\"]//a[@class=\"anchor\"]/@href' #method.trait_function-1\n     fn trait_function(&self) {}\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.defaulted_override-2\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.defaulted_override-2\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-2\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.defaulted_override-2\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.defaulted_override-2\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-2\n     fn defaulted_override(&self) {}\n }\n \n impl MyTrait for MyStruct {\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedtype.Assoc-3\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedtype.Assoc-3\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-3\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"associatedtype.Assoc\"]//a[@class=\"type\"]/@href' trait.MyTrait.html#associatedtype.Assoc\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"associatedtype.Assoc\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-3\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-3\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-3\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"type\"]/@href' trait.MyTrait.html#associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc\n     type Assoc = bool;\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedconstant.VALUE-3\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"associatedconstant.VALUE-3\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-3\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"associatedconstant.VALUE\"]//a[@class=\"constant\"]/@href' trait.MyTrait.html#associatedconstant.VALUE\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"associatedconstant.VALUE\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-3\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-3\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-3\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedconstant.VALUE\"]//a[@class=\"constant\"]/@href' trait.MyTrait.html#associatedconstant.VALUE\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedconstant.VALUE\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE\n     const VALUE: u32 = 20;\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.trait_function-2\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.trait_function-2\"]//a[@class=\"anchor\"]/@href' #method.trait_function-2\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#tymethod.trait_function\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"method.trait_function\"]//a[@class=\"anchor\"]/@href' #method.trait_function\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.trait_function-2\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.trait_function-2\"]//a[@class=\"anchor\"]/@href' #method.trait_function-2\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#tymethod.trait_function\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"method.trait_function\"]//a[@class=\"anchor\"]/@href' #method.trait_function\n     fn trait_function(&self) {}\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.defaulted_override-3\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//h4[@id=\"method.defaulted_override-3\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-3\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"method.defaulted_override\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#method.defaulted_override\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"method.defaulted_override\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.defaulted_override-3\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"method.defaulted_override-3\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-3\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"method.defaulted_override\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"method.defaulted_override\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override\n     fn defaulted_override(&self) {}\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"method.defaulted\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#method.defaulted\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//h4[@id=\"method.defaulted\"]//a[@class=\"anchor\"]/@href' #method.defaulted\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"method.defaulted\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#method.defaulted\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"method.defaulted\"]//a[@class=\"anchor\"]/@href' #method.defaulted\n }\n \n pub struct MyStruct;"}, {"sha": "47960c3f6cc2b596d9977cae1c7116ff173381ca", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9077d540da944c41678a7129e04e7fc5d7e38582/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=9077d540da944c41678a7129e04e7fc5d7e38582", "patch": "@@ -463,7 +463,7 @@ fn maybe_redirect(source: &str) -> Option<String> {\n     const REDIRECT: &str = \"<p>Redirecting to <a href=\";\n \n     let mut lines = source.lines();\n-    let redirect_line = lines.nth(6)?;\n+    let redirect_line = lines.nth(7)?;\n \n     redirect_line.find(REDIRECT).map(|i| {\n         let rest = &redirect_line[(i + REDIRECT.len() + 1)..];"}]}