{"sha": "cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "node_id": "C_kwDOAAsO6NoAKGNkOTBlMTEzMGU1NTQ0NjE5ZGNiMzMyYjYxZWNkZGFmNmNhMTBjYzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-23T20:15:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-23T20:15:27Z"}, "message": "Auto merge of #2257 - dtolnay-contrib:rustfmt9, r=RalfJung\n\nAdd `./miri fmt` and check in CI", "tree": {"sha": "1ba488c26dd898b4bfb5f6ddddad415b964f269a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ba488c26dd898b4bfb5f6ddddad415b964f269a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "html_url": "https://github.com/rust-lang/rust/commit/cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b84754bde65c496c33a2e7b3b0769d254ee9cb1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b84754bde65c496c33a2e7b3b0769d254ee9cb1a", "html_url": "https://github.com/rust-lang/rust/commit/b84754bde65c496c33a2e7b3b0769d254ee9cb1a"}, {"sha": "e5f40ca9cb8ed9412543df307ba5d20fedb51c8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f40ca9cb8ed9412543df307ba5d20fedb51c8f", "html_url": "https://github.com/rust-lang/rust/commit/e5f40ca9cb8ed9412543df307ba5d20fedb51c8f"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "45c0bea370ac4b44b81110a2142428ec8c8c420e", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "patch": "@@ -95,15 +95,9 @@ jobs:\n         # We need a toolchain that can actually build Miri, just a nightly won't do.\n         run: |\n           cargo install rustup-toolchain-install-master # TODO: cache this?\n-          ./rustup-toolchain \"\" -c clippy -c rustfmt\n-      - name: rustfmt (miri, ui_test)\n-        run: cargo fmt --all --check\n-      - name: rustfmt (everything else)\n-        # TODO: Add `tests` (work in progress).\n-        # Maybe change to `find . -name '*.rs'`, superseding the previous step.\n-        run: |\n-          find bench-cargo-miri benches cargo-miri test-cargo-miri -name '*.rs' \\\n-            | xargs rustfmt --edition=2021 --config-path ./rustfmt.toml --check\n+          ./rustup-toolchain \"\" -c clippy\n+      - name: rustfmt\n+        run: ./miri fmt --check\n       - name: clippy (miri)\n         run: cargo clippy --all-targets -- -D warnings\n       #- name: Clippy (ui_test)"}, {"sha": "e89a9e380fff65fce2d58e9bc3451cd228ebde62", "filename": "miri", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/miri", "raw_url": "https://github.com/rust-lang/rust/raw/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "patch": "@@ -21,10 +21,13 @@ to the final `cargo test` invocation.\n ./miri run <flags>:\n Build miri, set up a sysroot and then run the driver with the given <flags>.\n \n-All commands also exist in a \"-debug\" variant (e.g. \"./miri run-debug\n+The commands above also exist in a \"-debug\" variant (e.g. \"./miri run-debug\n <flags>\") which uses debug builds instead of release builds, for faster build\n times and slower execution times.\n \n+./miri fmt <flags>:\n+Format all sources and tests.  <flags> are passed to `rustfmt`.\n+\n   ENVIRONMENT VARIABLES\n \n MIRI_SYSROOT:\n@@ -156,6 +159,10 @@ run|run-debug)\n     # Then run the actual command.\n     exec cargo run $CARGO_BUILD_FLAGS -- --sysroot \"$MIRI_SYSROOT\" \"$@\"\n     ;;\n+fmt)\n+    find \"$MIRIDIR\" -not \\( -name target -prune \\) -name '*.rs' \\\n+        | xargs rustfmt --edition=2021 --config-path \"$MIRIDIR/rustfmt.toml\" \"$@\"\n+    ;;\n *)\n     if [ -n \"$COMMAND\" ]; then\n       echo \"Unknown command: $COMMAND\""}, {"sha": "34472c727f62f279e95c86734c158880a3789ee6", "filename": "rustup-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/rustup-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/rustup-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustup-toolchain?ref=cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "patch": "@@ -42,7 +42,7 @@ fi\n \n # Install and setup new toolchain.\n rustup toolchain uninstall miri\n-rustup-toolchain-install-master -n miri -c cargo -c rust-src -c rustc-dev -c llvm-tools \"$@\" -- \"$NEW_COMMIT\"\n+rustup-toolchain-install-master -n miri -c cargo -c rust-src -c rustc-dev -c llvm-tools -c rustfmt \"$@\" -- \"$NEW_COMMIT\"\n rustup override set miri\n \n # Cleanup."}, {"sha": "c954443a27629375b745ddccf22eec5990cf6f02", "filename": "tests/fail/abort-terminator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Ffail%2Fabort-terminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Ffail%2Fabort-terminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fabort-terminator.rs?ref=cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "patch": "@@ -1,6 +1,7 @@\n #![feature(c_unwind)]\n \n-extern \"C\" fn panic_abort() { //~ ERROR: the program aborted\n+extern \"C\" fn panic_abort() {\n+    //~^ ERROR: the program aborted\n     panic!()\n }\n "}, {"sha": "ec9ce76685b5572e6c43d3e4dad1fb10c552c751", "filename": "tests/fail/abort-terminator.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Ffail%2Fabort-terminator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Ffail%2Fabort-terminator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fabort-terminator.stderr?ref=cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "patch": "@@ -4,6 +4,7 @@ error: abnormal termination: the program aborted execution\n   --> $DIR/abort-terminator.rs:LL:CC\n    |\n LL | / extern \"C\" fn panic_abort() {\n+LL | |\n LL | |     panic!()\n LL | | }\n    | |_^ the program aborted execution"}, {"sha": "39f7ae8bafb99b29ffadfefe1ab4b82fda740c00", "filename": "tests/fail/concurrency/unwind_top_of_stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.rs?ref=cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "patch": "@@ -10,7 +10,7 @@ extern crate libc;\n use std::{mem, ptr};\n \n extern \"C-unwind\" fn thread_start(_null: *mut libc::c_void) -> *mut libc::c_void {\n-//~^ ERROR unwinding past the topmost frame of the stack\n+    //~^ ERROR unwinding past the topmost frame of the stack\n     panic!()\n }\n "}, {"sha": "8895d62df95fe5757630cfba4a0dd323403eeaf1", "filename": "tests/pass/concurrency/sync_nopreempt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd90e1130e5544619dcb332b61ecddaf6ca10cc0/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs?ref=cd90e1130e5544619dcb332b61ecddaf6ca10cc0", "patch": "@@ -2,7 +2,7 @@\n // We are making scheduler assumptions here.\n // compile-flags: -Zmiri-strict-provenance -Zmiri-preemption-rate=0\n \n-use std::sync::{Condvar, Mutex, Arc};\n+use std::sync::{Arc, Condvar, Mutex};\n use std::thread;\n \n fn check_conditional_variables_notify_all() {"}]}