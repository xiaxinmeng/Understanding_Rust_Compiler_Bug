{"sha": "1bc6bca478872347faa32371663b3aff7b00624f", "node_id": "C_kwDOAAsO6NoAKDFiYzZiY2E0Nzg4NzIzNDdmYWEzMjM3MTY2M2IzYWZmN2IwMDYyNGY", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:05:03Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:05:03Z"}, "message": "Use checked", "tree": {"sha": "b881dad95f2d30c43acd280ea3afa4bd6e85bdb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b881dad95f2d30c43acd280ea3afa4bd6e85bdb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bc6bca478872347faa32371663b3aff7b00624f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc6bca478872347faa32371663b3aff7b00624f", "html_url": "https://github.com/rust-lang/rust/commit/1bc6bca478872347faa32371663b3aff7b00624f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bc6bca478872347faa32371663b3aff7b00624f/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "343976fe56d65aae4d4c6c4ac9d0ceb25b07c036", "url": "https://api.github.com/repos/rust-lang/rust/commits/343976fe56d65aae4d4c6c4ac9d0ceb25b07c036", "html_url": "https://github.com/rust-lang/rust/commit/343976fe56d65aae4d4c6c4ac9d0ceb25b07c036"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "622738ce8fb45bfcf2db7790a7b9953c5879db38", "filename": "lib/line-index/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1bc6bca478872347faa32371663b3aff7b00624f/lib%2Fline-index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc6bca478872347faa32371663b3aff7b00624f/lib%2Fline-index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fline-index%2Fsrc%2Flib.rs?ref=1bc6bca478872347faa32371663b3aff7b00624f", "patch": "@@ -184,7 +184,7 @@ impl LineIndex {\n         if let Some(wide_chars) = self.line_wide_chars.get(&line_col.line) {\n             for c in wide_chars.iter() {\n                 if u32::from(c.end) <= line_col.col {\n-                    col -= u32::from(c.len()) - c.wide_len(enc);\n+                    col = col.checked_sub(u32::from(c.len()) - c.wide_len(enc))?;\n                 } else {\n                     // From here on, all utf16 characters come *after* the character we are mapping,\n                     // so we don't need to take them into account\n@@ -201,7 +201,7 @@ impl LineIndex {\n         if let Some(wide_chars) = self.line_wide_chars.get(&line_col.line) {\n             for c in wide_chars.iter() {\n                 if col > u32::from(c.start) {\n-                    col += u32::from(c.len()) - c.wide_len(enc) as u32;\n+                    col = col.checked_add(u32::from(c.len()) - c.wide_len(enc))?;\n                 } else {\n                     // From here on, all utf16 characters come *after* the character we are mapping,\n                     // so we don't need to take them into account"}]}