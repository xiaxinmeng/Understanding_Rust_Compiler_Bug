{"sha": "3f24eb870df0435be021091adbb9b17913f58ba8", "node_id": "C_kwDOAAsO6NoAKDNmMjRlYjg3MGRmMDQzNWJlMDIxMDkxYWRiYjliMTc5MTNmNThiYTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-19T23:57:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T21:12:07Z"}, "message": "consistently use VTable over Vtable (matching stable stdlib API RawWakerVTable)", "tree": {"sha": "d0397793bbecfda982a1f1f644afb58cff9a7118", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0397793bbecfda982a1f1f644afb58cff9a7118"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f24eb870df0435be021091adbb9b17913f58ba8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f24eb870df0435be021091adbb9b17913f58ba8", "html_url": "https://github.com/rust-lang/rust/commit/3f24eb870df0435be021091adbb9b17913f58ba8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f24eb870df0435be021091adbb9b17913f58ba8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f290184d2bb3ea238843484a858bcd85e71de6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f290184d2bb3ea238843484a858bcd85e71de6a", "html_url": "https://github.com/rust-lang/rust/commit/8f290184d2bb3ea238843484a858bcd85e71de6a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d1afca18427d6d54a6a6222690a62fcf07058d94", "filename": "src/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f24eb870df0435be021091adbb9b17913f58ba8/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f24eb870df0435be021091adbb9b17913f58ba8/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=3f24eb870df0435be021091adbb9b17913f58ba8", "patch": "@@ -185,7 +185,7 @@ impl<'gcc, 'tcx> ConstMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n                 let (alloc_id, offset) = ptr.into_parts();\n                 // For vtables, get the underlying data allocation.\n                 let alloc_id = match self.tcx.global_alloc(alloc_id) {\n-                    GlobalAlloc::Vtable(ty, trait_ref) => {\n+                    GlobalAlloc::VTable(ty, trait_ref) => {\n                         self.tcx.vtable_allocation((ty, trait_ref))\n                     }\n                     _ => alloc_id,\n@@ -208,7 +208,7 @@ impl<'gcc, 'tcx> ConstMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n                         GlobalAlloc::Function(fn_instance) => {\n                             self.get_fn_addr(fn_instance)\n                         },\n-                        GlobalAlloc::Vtable(..) => panic!(\"vtables are already handled\"),\n+                        GlobalAlloc::VTable(..) => panic!(\"vtables are already handled\"),\n                         GlobalAlloc::Static(def_id) => {\n                             assert!(self.tcx.is_static(def_id));\n                             self.get_static(def_id).get_address(None)"}]}