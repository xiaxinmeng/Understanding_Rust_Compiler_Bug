{"sha": "629722893cd39bcf9929b56b50ef5476f1d22a55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyOTcyMjg5M2NkMzliY2Y5OTI5YjU2YjUwZWY1NDc2ZjFkMjJhNTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-21T16:24:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-21T16:24:51Z"}, "message": "MIR validation: check switch_ty", "tree": {"sha": "5e96aa05e2c063e9d6a4d3b764ffd2033b10acf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e96aa05e2c063e9d6a4d3b764ffd2033b10acf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/629722893cd39bcf9929b56b50ef5476f1d22a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/629722893cd39bcf9929b56b50ef5476f1d22a55", "html_url": "https://github.com/rust-lang/rust/commit/629722893cd39bcf9929b56b50ef5476f1d22a55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/629722893cd39bcf9929b56b50ef5476f1d22a55/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bfd0c9f0725b8fb096ea38446b4dcc2a3f90980", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bfd0c9f0725b8fb096ea38446b4dcc2a3f90980", "html_url": "https://github.com/rust-lang/rust/commit/3bfd0c9f0725b8fb096ea38446b4dcc2a3f90980"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "18744ef3d72412d4b36dcf9b5d6de6e26d14c66f", "filename": "src/librustc_mir/transform/validate.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/629722893cd39bcf9929b56b50ef5476f1d22a55/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629722893cd39bcf9929b56b50ef5476f1d22a55/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs?ref=629722893cd39bcf9929b56b50ef5476f1d22a55", "patch": "@@ -121,7 +121,18 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n             TerminatorKind::Goto { target } => {\n                 self.check_edge(location, *target, EdgeKind::Normal);\n             }\n-            TerminatorKind::SwitchInt { targets, values, .. } => {\n+            TerminatorKind::SwitchInt { targets, values, switch_ty, discr } => {\n+                let ty = discr.ty(&self.body.local_decls, self.tcx);\n+                if ty != *switch_ty {\n+                    self.fail(\n+                        location,\n+                        format!(\n+                            \"encountered `SwitchInt` terminator with type mismatch: {:?} != {:?}\",\n+                            ty,\n+                            switch_ty,\n+                        ),\n+                    );\n+                }\n                 if targets.len() != values.len() + 1 {\n                     self.fail(\n                         location,"}]}