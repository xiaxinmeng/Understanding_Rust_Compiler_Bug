{"sha": "1624bf2d7f8c60620830149ac2f88e94dfdb036e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MjRiZjJkN2Y4YzYwNjIwODMwMTQ5YWMyZjg4ZTk0ZGZkYjAzNmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-15T17:05:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-15T17:05:26Z"}, "message": "switch editor to 2018", "tree": {"sha": "c92ef6d7811360c138830abd182ec3c4ce301cc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c92ef6d7811360c138830abd182ec3c4ce301cc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1624bf2d7f8c60620830149ac2f88e94dfdb036e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1624bf2d7f8c60620830149ac2f88e94dfdb036e", "html_url": "https://github.com/rust-lang/rust/commit/1624bf2d7f8c60620830149ac2f88e94dfdb036e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1624bf2d7f8c60620830149ac2f88e94dfdb036e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94349206483ad78de71e1546d74a355bbdf764c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/94349206483ad78de71e1546d74a355bbdf764c4", "html_url": "https://github.com/rust-lang/rust/commit/94349206483ad78de71e1546d74a355bbdf764c4"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "7791da15625e5f72e3c8a04a87d882d53ed5d6f6", "filename": "crates/ra_editor/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2FCargo.toml?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -1,4 +1,5 @@\n [package]\n+edition = \"2018\"\n name = \"ra_editor\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]"}, {"sha": "7b0a48c81a39fb8f22bd2b5cdf666df98fa7104d", "filename": "crates/ra_editor/src/code_actions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fcode_actions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fcode_actions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fcode_actions.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -11,7 +11,7 @@ use ra_syntax::{\n     },\n };\n \n-use {EditBuilder, Edit, find_node_at_offset};\n+use crate::{EditBuilder, Edit, find_node_at_offset};\n \n #[derive(Debug)]\n pub struct LocalEdit {\n@@ -136,7 +136,7 @@ fn non_trivia_sibling(node: SyntaxNodeRef, direction: Direction) -> Option<Synta\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::{check_action, check_action_range};\n+    use crate::test_utils::{check_action, check_action_range};\n \n     #[test]\n     fn test_swap_comma() {"}, {"sha": "b6095dca9c5950838d174ab9436152498f578c01", "filename": "crates/ra_editor/src/completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fcompletion.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -9,7 +9,7 @@ use ra_syntax::{\n     text_utils::is_subrange,\n };\n \n-use {\n+use crate::{\n     AtomEdit, find_node_at_offset,\n     scope::{FnScopes, ModuleScope},\n };"}, {"sha": "46e6873197bc80ebfaffa7f39c8ccaff6b19c280", "filename": "crates/ra_editor/src/edit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fedit.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -1,4 +1,4 @@\n-use {TextRange, TextUnit};\n+use crate::{TextRange, TextUnit};\n use ra_syntax::{\n     AtomEdit,\n     text_utils::contains_offset_nonstrict,"}, {"sha": "bd61fd1914f5e7029611ca7f262f818cbc8b5758", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -164,7 +164,7 @@ pub fn resolve_local_name(file: &File, offset: TextUnit, name_ref: ast::NameRef)\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::{assert_eq_dbg, extract_offset, add_cursor};\n+    use crate::test_utils::{assert_eq_dbg, extract_offset, add_cursor};\n \n     #[test]\n     fn test_highlighting() {"}, {"sha": "6ccfdbd83ab0fde824e0aa62aad50fe8ba9bc789", "filename": "crates/ra_editor/src/line_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fline_index.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -1,5 +1,5 @@\n use superslice::Ext;\n-use ::TextUnit;\n+use crate::TextUnit;\n \n #[derive(Clone, Debug, Hash)]\n pub struct LineIndex {"}, {"sha": "99d698b607fcc6f2c28b8985d254eef1df292979", "filename": "crates/ra_editor/src/scope/fn_scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fscope%2Ffn_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fscope%2Ffn_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fscope%2Ffn_scope.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -174,7 +174,7 @@ fn compute_expr_scopes(expr: ast::Expr, scopes: &mut FnScopes, scope: ScopeId) {\n             }\n         }\n         ast::Expr::LambdaExpr(e) => {\n-            let mut scope = scopes.new_scope(scope);\n+            let scope = scopes.new_scope(scope);\n             scopes.add_params_bindings(scope, e.param_list());\n             if let Some(body) = e.body() {\n                 scopes.set_scope(body.syntax(), scope);\n@@ -256,7 +256,7 @@ pub fn resolve_local_name<'a>(name_ref: ast::NameRef, scopes: &'a FnScopes) -> O\n mod tests {\n     use super::*;\n     use ra_syntax::File;\n-    use {find_node_at_offset, test_utils::extract_offset};\n+    use crate::{find_node_at_offset, test_utils::extract_offset};\n \n     fn do_check(code: &str, expected: &[&str]) {\n         let (off, code) = extract_offset(code);"}, {"sha": "6211ed5477c5036d9fcf63a7568b308f3e1f6f84", "filename": "crates/ra_editor/src/symbols.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fsymbols.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -6,7 +6,7 @@ use ra_syntax::{\n         walk::{walk, WalkEvent},\n     },\n };\n-use TextRange;\n+use crate::TextRange;\n \n #[derive(Debug, Clone)]\n pub struct StructureNode {"}, {"sha": "49eb530d50b20be6513cc52b4dbb507aea26df27", "filename": "crates/ra_editor/src/test_utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftest_utils.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -1,6 +1,6 @@\n use ra_syntax::{File, TextUnit, TextRange};\n-pub use _test_utils::*;\n-use LocalEdit;\n+pub use crate::_test_utils::*;\n+use crate::LocalEdit;\n \n pub fn check_action<F: Fn(&File, TextUnit) -> Option<LocalEdit>> (\n     before: &str,"}, {"sha": "542b9e10bd9de32b0f979c20605deba976ce91a6", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1624bf2d7f8c60620830149ac2f88e94dfdb036e/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=1624bf2d7f8c60620830149ac2f88e94dfdb036e", "patch": "@@ -10,7 +10,7 @@ use ra_syntax::{\n     SyntaxKind::*,\n };\n \n-use {LocalEdit, EditBuilder, find_node_at_offset};\n+use crate::{LocalEdit, EditBuilder, find_node_at_offset};\n \n pub fn join_lines(file: &File, range: TextRange) -> LocalEdit {\n     let range = if range.is_empty() {\n@@ -244,7 +244,7 @@ fn compute_ws(left: SyntaxNodeRef, right: SyntaxNodeRef) -> &'static str {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use test_utils::{check_action, extract_range, extract_offset, add_cursor};\n+    use crate::test_utils::{check_action, extract_range, extract_offset, add_cursor};\n \n     fn check_join_lines(before: &str, after: &str) {\n         check_action(before, after, |file, offset| {"}]}