{"sha": "45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1YTk1YjUxMmM2ZmI0OTE1MThkNmEzZjRiNjY3ZDZkZDgyY2Q1NmI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-21T03:37:38Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-21T05:41:25Z"}, "message": "Use structured suggestion in stead of notes", "tree": {"sha": "eff82383f8a62b7c9e56c7712031d5a99342a997", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eff82383f8a62b7c9e56c7712031d5a99342a997"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "html_url": "https://github.com/rust-lang/rust/commit/45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73069767f11d992f0dca7e31d53d7e1a77fd237", "url": "https://api.github.com/repos/rust-lang/rust/commits/e73069767f11d992f0dca7e31d53d7e1a77fd237", "html_url": "https://github.com/rust-lang/rust/commit/e73069767f11d992f0dca7e31d53d7e1a77fd237"}], "stats": {"total": 85, "additions": 44, "deletions": 41}, "files": [{"sha": "f71a163cee26156b813ee12dbb0126837c5dcdeb", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -304,7 +304,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         );\n                         if let Some(suggestion) = suggestion {\n                             // enum variant\n-                            err.help(&format!(\"did you mean `{}`?\", suggestion));\n+                            err.span_suggestion_with_applicability(\n+                                item_name.span,\n+                                \"did you mean\",\n+                                suggestion.to_string(),\n+                                Applicability::MaybeIncorrect,\n+                            );\n                         }\n                         err\n                     }\n@@ -440,7 +445,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 }\n \n                 if let Some(lev_candidate) = lev_candidate {\n-                    err.help(&format!(\"did you mean `{}`?\", lev_candidate.ident));\n+                    err.span_suggestion_with_applicability(\n+                        span,\n+                        \"did you mean\",\n+                        lev_candidate.ident.to_string(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n                 }\n                 err.emit();\n             }"}, {"sha": "d4a3411f463d01db292766dd68d81833d744c5c9", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -7271,9 +7271,16 @@ impl<'a> Parser<'a> {\n             // CONST ITEM\n             if self.eat_keyword(keywords::Mut) {\n                 let prev_span = self.prev_span;\n-                self.diagnostic().struct_span_err(prev_span, \"const globals cannot be mutable\")\n-                                 .help(\"did you mean to declare a static?\")\n-                                 .emit();\n+                let mut err = self.diagnostic()\n+                    .struct_span_err(prev_span, \"const globals cannot be mutable\");\n+                err.span_label(prev_span, \"cannot be mutable\");\n+                err.span_suggestion_with_applicability(\n+                    const_span,\n+                    \"you might want to declare a static instead\",\n+                    \"static\".to_owned(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+                err.emit();\n             }\n             let (ident, item_, extra_attrs) = self.parse_item_const(None)?;\n             let prev_span = self.prev_span;"}, {"sha": "356e24d18a78fad3609c348cd9d3da5bf2744eda", "filename": "src/test/ui/auto-ref-slice-plus-ref.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -2,12 +2,11 @@ error[E0599]: no method named `test_mut` found for type `std::vec::Vec<{integer}\n   --> $DIR/auto-ref-slice-plus-ref.rs:7:7\n    |\n LL |     a.test_mut(); //~ ERROR no method named `test_mut` found\n-   |       ^^^^^^^^\n+   |       ^^^^^^^^ help: did you mean: `get_mut`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `test_mut`, perhaps you need to implement it:\n            candidate #1: `MyIter`\n-   = help: did you mean `get_mut`?\n \n error[E0599]: no method named `test` found for type `std::vec::Vec<{integer}>` in the current scope\n   --> $DIR/auto-ref-slice-plus-ref.rs:8:7"}, {"sha": "a6346a5233f4c3d12877c10fbdfb39bf25093546", "filename": "src/test/ui/block-result/issue-3563.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -2,9 +2,7 @@ error[E0599]: no method named `b` found for type `&Self` in the current scope\n   --> $DIR/issue-3563.rs:3:17\n    |\n LL |         || self.b()\n-   |                 ^\n-   |\n-   = help: did you mean `a`?\n+   |                 ^ help: did you mean: `a`\n \n error: aborting due to previous error\n "}, {"sha": "19844503a48048e345967c0dbbe10cc27498e904", "filename": "src/test/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -51,20 +51,18 @@ error[E0599]: no variant named `Empty3` found for type `empty_struct::XE` in the\n    |\n LL |     let xe3 = XE::Empty3; //~ ERROR no variant named `Empty3` found for type\n    |               ----^^^^^^\n-   |               |\n+   |               |   |\n+   |               |   help: did you mean: `XEmpty3`\n    |               variant not found in `empty_struct::XE`\n-   |\n-   = help: did you mean `XEmpty3`?\n \n error[E0599]: no variant named `Empty3` found for type `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:23:19\n    |\n LL |     let xe3 = XE::Empty3(); //~ ERROR no variant named `Empty3` found for type\n    |               ----^^^^^^\n-   |               |\n+   |               |   |\n+   |               |   help: did you mean: `XEmpty3`\n    |               variant not found in `empty_struct::XE`\n-   |\n-   = help: did you mean `XEmpty3`?\n \n error: aborting due to 8 previous errors\n "}, {"sha": "9cad002036fff4cc8b6f9fc1de814fab0e0b6df2", "filename": "src/test/ui/issues/issue-23217.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23217.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -5,10 +5,9 @@ LL | pub enum SomeEnum {\n    | ----------------- variant `A` not found here\n LL |     B = SomeEnum::A,\n    |         ----------^\n-   |         |\n+   |         |         |\n+   |         |         help: did you mean: `B`\n    |         variant not found in `SomeEnum`\n-   |\n-   = help: did you mean `B`?\n \n error: aborting due to previous error\n "}, {"sha": "b6f520c644b32a659afd967d8a03cb7d4f9438f9", "filename": "src/test/ui/issues/issue-28344.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -11,8 +11,7 @@ LL |     let x: u8 = BitXor::bitor(0 as u8, 0 as u8);\n    |                 --------^^^^^\n    |                 |\n    |                 function or associated item not found in `dyn std::ops::BitXor<_>`\n-   |\n-   = help: did you mean `bitxor`?\n+   |                 help: did you mean: `bitxor`\n \n error[E0191]: the value of the associated type `Output` (from the trait `std::ops::BitXor`) must be specified\n   --> $DIR/issue-28344.rs:8:13\n@@ -27,8 +26,7 @@ LL |     let g = BitXor::bitor;\n    |             --------^^^^^\n    |             |\n    |             function or associated item not found in `dyn std::ops::BitXor<_>`\n-   |\n-   = help: did you mean `bitxor`?\n+   |             help: did you mean: `bitxor`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "77d0b53ad216bbef9be9f34168281a8a88c41df1", "filename": "src/test/ui/issues/issue-28971.stderr", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28971.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -5,9 +5,10 @@ LL | enum Foo {\n    | -------- variant `Baz` not found here\n ...\n LL |             Foo::Baz(..) => (),\n-   |             -----^^^---- variant not found in `Foo`\n-   |\n-   = help: did you mean `Bar`?\n+   |             -----^^^----\n+   |             |    |\n+   |             |    help: did you mean: `Bar`\n+   |             variant not found in `Foo`\n \n error: aborting due to previous error\n "}, {"sha": "96d6814b0fe93762e7fd885fd3f0e9c82ce28024", "filename": "src/test/ui/issues/issue-50264-inner-deref-trait/result-deref-err.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-deref-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-deref-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50264-inner-deref-trait%2Fresult-deref-err.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -2,11 +2,10 @@ error[E0599]: no method named `deref_err` found for type `std::result::Result<_,\n   --> $DIR/result-deref-err.rs:4:28\n    |\n LL |     let _result = &Err(41).deref_err();\n-   |                            ^^^^^^^^^\n+   |                            ^^^^^^^^^ help: did you mean: `deref_ok`\n    |\n    = note: the method `deref_err` exists but the following trait bounds were not satisfied:\n            `{integer} : std::ops::Deref`\n-   = help: did you mean `deref_ok`?\n \n error: aborting due to previous error\n "}, {"sha": "795a8c7631d9a84d28b78bffd908933ba79e7d43", "filename": "src/test/ui/parser/issue-17718-const-mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.rs?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -1,6 +1,6 @@\n const\n mut //~ ERROR: const globals cannot be mutable\n-//~^ HELP did you mean to declare a static?\n+//~^^ HELP you might want to declare a static instead\n FOO: usize = 3;\n \n fn main() {"}, {"sha": "19f9fe19ef5abaf88a018db5e5d6ec003e2c1cbe", "filename": "src/test/ui/parser/issue-17718-const-mut.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -1,10 +1,10 @@\n error: const globals cannot be mutable\n   --> $DIR/issue-17718-const-mut.rs:2:1\n    |\n+LL | const\n+   | ----- help: you might want to declare a static instead: `static`\n LL | mut //~ ERROR: const globals cannot be mutable\n-   | ^^^\n-   |\n-   = help: did you mean to declare a static?\n+   | ^^^ cannot be mutable\n \n error: aborting due to previous error\n "}, {"sha": "b7727cf03a4e7e50c3f8414199e8dfec85788453", "filename": "src/test/ui/suggestions/suggest-methods.stderr", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a95b512c6fb491518d6a3f4b667d6dd82cd56b/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-methods.stderr?ref=45a95b512c6fb491518d6a3f4b667d6dd82cd56b", "patch": "@@ -5,25 +5,19 @@ LL | struct Foo;\n    | ----------- method `bat` not found for this\n ...\n LL |     f.bat(1.0); //~ ERROR no method named\n-   |       ^^^\n-   |\n-   = help: did you mean `bar`?\n+   |       ^^^ help: did you mean: `bar`\n \n error[E0599]: no method named `is_emtpy` found for type `std::string::String` in the current scope\n   --> $DIR/suggest-methods.rs:21:15\n    |\n LL |     let _ = s.is_emtpy(); //~ ERROR no method named\n-   |               ^^^^^^^^\n-   |\n-   = help: did you mean `is_empty`?\n+   |               ^^^^^^^^ help: did you mean: `is_empty`\n \n error[E0599]: no method named `count_eos` found for type `u32` in the current scope\n   --> $DIR/suggest-methods.rs:25:19\n    |\n LL |     let _ = 63u32.count_eos(); //~ ERROR no method named\n-   |                   ^^^^^^^^^\n-   |\n-   = help: did you mean `count_zeros`?\n+   |                   ^^^^^^^^^ help: did you mean: `count_zeros`\n \n error[E0599]: no method named `count_o` found for type `u32` in the current scope\n   --> $DIR/suggest-methods.rs:28:19"}]}