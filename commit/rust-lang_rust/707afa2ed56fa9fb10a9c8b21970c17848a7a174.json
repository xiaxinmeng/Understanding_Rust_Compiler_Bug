{"sha": "707afa2ed56fa9fb10a9c8b21970c17848a7a174", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwN2FmYTJlZDU2ZmE5ZmIxMGE5YzhiMjE5NzBjMTc4NDhhN2ExNzQ=", "commit": {"author": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2016-01-20T03:07:36Z"}, "committer": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2016-01-20T03:07:36Z"}, "message": "In BTreeMap's merge function, adjust the length of the node before moving elements into it.", "tree": {"sha": "b7c9f8e04e90b48057cfd167e852aaea37b7d8cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7c9f8e04e90b48057cfd167e852aaea37b7d8cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/707afa2ed56fa9fb10a9c8b21970c17848a7a174", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/707afa2ed56fa9fb10a9c8b21970c17848a7a174", "html_url": "https://github.com/rust-lang/rust/commit/707afa2ed56fa9fb10a9c8b21970c17848a7a174", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/707afa2ed56fa9fb10a9c8b21970c17848a7a174/comments", "author": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff52927f582e2ca8dea799bd58f06e654295e21", "url": "https://api.github.com/repos/rust-lang/rust/commits/bff52927f582e2ca8dea799bd58f06e654295e21", "html_url": "https://github.com/rust-lang/rust/commit/bff52927f582e2ca8dea799bd58f06e654295e21"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "62e85cb64a1f043c49c25d29535580fd9b058698", "filename": "src/libcollections/btree/node.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/707afa2ed56fa9fb10a9c8b21970c17848a7a174/src%2Flibcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/707afa2ed56fa9fb10a9c8b21970c17848a7a174/src%2Flibcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fnode.rs?ref=707afa2ed56fa9fb10a9c8b21970c17848a7a174", "patch": "@@ -1022,6 +1022,8 @@ impl<'a, K, V> Handle<NodeRef<marker::Mut<'a>, K, V, marker::Internal>, marker::\n             }\n             self.node.as_leaf_mut().len -= 1;\n \n+            left_node.as_leaf_mut().len += right_len as u16 + 1;\n+\n             if self.node.height > 1 {\n                 ptr::copy_nonoverlapping(\n                     right_node.cast_unchecked().as_internal().edges.as_ptr(),\n@@ -1053,8 +1055,6 @@ impl<'a, K, V> Handle<NodeRef<marker::Mut<'a>, K, V, marker::Internal>, marker::\n                 );\n             }\n \n-            left_node.as_leaf_mut().len += right_len as u16 + 1;\n-\n             Handle::new_edge(self.node, self.idx)\n         }\n     }"}]}