{"sha": "ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMjI3YzRhMmQ4YTJmYWQ1YWJmMzIyZjZmMTM5MWFlNjc3OTE5N2Y=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-09T21:19:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-09T21:21:37Z"}, "message": "rustbuild: Remove ThinLTO-related configuration\n\nThis commit removes some ThinLTO/codegen unit cruft primarily only needed during\nthe initial phase where we were adding ThinLTO support to rustc itself. The\ncurrent bootstrap compiler knows about ThinLTO and has it enabled by default for\nmulti-CGU builds which are also enabled by default. One CGU builds (aka\ndisabling ThinLTO) can be achieved by configuring the number of codegen units to\n1 for a particular builds.\n\nThis also changes the defaults for our dist builders to go back to multiple\nCGUs. Unfortunately we're seriously bleeding for cycle time on the bots right\nnow so we need to recover any time we can.", "tree": {"sha": "9696b5c2414d86bdaaa357544d1c5cb4531fbe7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9696b5c2414d86bdaaa357544d1c5cb4531fbe7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "html_url": "https://github.com/rust-lang/rust/commit/ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fedce67cd21dc08ece5a484fe1a060346acac98a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fedce67cd21dc08ece5a484fe1a060346acac98a", "html_url": "https://github.com/rust-lang/rust/commit/fedce67cd21dc08ece5a484fe1a060346acac98a"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "8ccee45f3c5236f20c891d67da9942c85fa5ec6a", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "patch": "@@ -175,9 +175,6 @@ fn main() {\n         if let Ok(s) = env::var(\"RUSTC_CODEGEN_UNITS\") {\n             cmd.arg(\"-C\").arg(format!(\"codegen-units={}\", s));\n         }\n-        if env::var(\"RUSTC_THINLTO\").is_ok() {\n-            cmd.arg(\"-Ccodegen-units=16\").arg(\"-Zthinlto\");\n-        }\n \n         // Emit save-analysis info.\n         if env::var(\"RUSTC_SAVE_ANALYSIS\") == Ok(\"api\".to_string()) {"}, {"sha": "13be709fddcf429cfc0cfb5e561539dd21548e9f", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "patch": "@@ -792,17 +792,6 @@ impl<'a> Builder<'a> {\n             if cmd != \"bench\" {\n                 cargo.arg(\"--release\");\n             }\n-\n-            if self.config.rust_codegen_units.is_none() &&\n-               self.build.is_rust_llvm(compiler.host) &&\n-               self.config.rust_thinlto {\n-                cargo.env(\"RUSTC_THINLTO\", \"1\");\n-            } else if self.config.rust_codegen_units.is_none() {\n-                // Generally, if ThinLTO has been disabled for some reason, we\n-                // want to set the codegen units to 1. However, we shouldn't do\n-                // this if the option was specifically set by the user.\n-                cargo.env(\"RUSTC_CODEGEN_UNITS\", \"1\");\n-            }\n         }\n \n         if self.config.locked_deps {"}, {"sha": "4bb0ae8b0b6a85ed3c28a7400c66794be36139c8", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "patch": "@@ -86,7 +86,6 @@ pub struct Config {\n     // rust codegen options\n     pub rust_optimize: bool,\n     pub rust_codegen_units: Option<u32>,\n-    pub rust_thinlto: bool,\n     pub rust_debug_assertions: bool,\n     pub rust_debuginfo: bool,\n     pub rust_debuginfo_lines: bool,\n@@ -269,7 +268,6 @@ impl Default for StringOrBool {\n struct Rust {\n     optimize: Option<bool>,\n     codegen_units: Option<u32>,\n-    thinlto: Option<bool>,\n     debug_assertions: Option<bool>,\n     debuginfo: Option<bool>,\n     debuginfo_lines: Option<bool>,\n@@ -427,7 +425,6 @@ impl Config {\n \n         // Store off these values as options because if they're not provided\n         // we'll infer default values for them later\n-        let mut thinlto = None;\n         let mut llvm_assertions = None;\n         let mut debuginfo_lines = None;\n         let mut debuginfo_only_std = None;\n@@ -471,7 +468,6 @@ impl Config {\n             optimize = rust.optimize;\n             ignore_git = rust.ignore_git;\n             debug_jemalloc = rust.debug_jemalloc;\n-            thinlto = rust.thinlto;\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.rust_debuginfo_tests, rust.debuginfo_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n@@ -559,7 +555,6 @@ impl Config {\n             \"stable\" | \"beta\" | \"nightly\" => true,\n             _ => false,\n         };\n-        config.rust_thinlto = thinlto.unwrap_or(true);\n         config.rust_debuginfo_lines = debuginfo_lines.unwrap_or(default);\n         config.rust_debuginfo_only_std = debuginfo_only_std.unwrap_or(default);\n "}, {"sha": "97da7cae07f7c6e9aa99810121584496f5484791", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "patch": "@@ -71,7 +71,6 @@ def v(*args):\n # Optimization and debugging options. These may be overridden by the release\n # channel, etc.\n o(\"optimize\", \"rust.optimize\", \"build optimized rust code\")\n-o(\"thinlto\", \"rust.thinlto\", \"build Rust with ThinLTO enabled\")\n o(\"optimize-llvm\", \"llvm.optimize\", \"build optimized LLVM\")\n o(\"llvm-assertions\", \"llvm.assertions\", \"build LLVM with assertions\")\n o(\"debug-assertions\", \"rust.debug-assertions\", \"build with debugging assertions\")"}, {"sha": "29126e7cc9bc05dfbb3c1ada94306071efa72cb8", "filename": "src/ci/run.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ff227c4a2d8a2fad5abf322f6f1391ae6779197f/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=ff227c4a2d8a2fad5abf322f6f1391ae6779197f", "patch": "@@ -46,7 +46,6 @@ export RUST_RELEASE_CHANNEL=nightly\n if [ \"$DEPLOY$DEPLOY_ALT\" != \"\" ]; then\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --release-channel=$RUST_RELEASE_CHANNEL\"\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-llvm-static-stdcpp\"\n-  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-thinlto\"\n \n   if [ \"$NO_LLVM_ASSERTIONS\" = \"1\" ]; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\""}]}