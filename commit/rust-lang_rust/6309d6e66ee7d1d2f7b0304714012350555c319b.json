{"sha": "6309d6e66ee7d1d2f7b0304714012350555c319b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMDlkNmU2NmVlN2QxZDJmN2IwMzA0NzE0MDEyMzUwNTU1YzMxOWI=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-17T23:23:58Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-17T23:23:58Z"}, "message": "rollup merge of #18951: tbu-/pr_array_cloneshow\n\nDue to not being able to parametrize over array sizes, `Clone` is only\nimplemented for element types that are `Copy`able.", "tree": {"sha": "943e96ef8479cd406ba1b96839c951b9193745ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/943e96ef8479cd406ba1b96839c951b9193745ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6309d6e66ee7d1d2f7b0304714012350555c319b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6309d6e66ee7d1d2f7b0304714012350555c319b", "html_url": "https://github.com/rust-lang/rust/commit/6309d6e66ee7d1d2f7b0304714012350555c319b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6309d6e66ee7d1d2f7b0304714012350555c319b/comments", "author": null, "committer": null, "parents": [{"sha": "76daa0c77c14d482228af6bf5dd20d9c96a3cdb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/76daa0c77c14d482228af6bf5dd20d9c96a3cdb8", "html_url": "https://github.com/rust-lang/rust/commit/76daa0c77c14d482228af6bf5dd20d9c96a3cdb8"}, {"sha": "eb9684ee19e1d79999b9809704fbffe072332e7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9684ee19e1d79999b9809704fbffe072332e7b", "html_url": "https://github.com/rust-lang/rust/commit/eb9684ee19e1d79999b9809704fbffe072332e7b"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "60765e82cb476bfdb0f7d9b57b89154c2b57d91f", "filename": "src/libcore/array.rs", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6309d6e66ee7d1d2f7b0304714012350555c319b/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6309d6e66ee7d1d2f7b0304714012350555c319b/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=6309d6e66ee7d1d2f7b0304714012350555c319b", "patch": "@@ -8,22 +8,36 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-/*!\n- * Implementations of things like `Eq` for fixed-length arrays\n- * up to a certain length. Eventually we should able to generalize\n- * to all lengths.\n- */\n+//! Implementations of things like `Eq` for fixed-length arrays\n+//! up to a certain length. Eventually we should able to generalize\n+//! to all lengths.\n \n-#![stable]\n #![experimental] // not yet reviewed\n \n-use cmp::*;\n-use option::{Option};\n+use clone::Clone;\n+use cmp::{PartialEq, Eq, PartialOrd, Ord, Ordering};\n+use fmt;\n+use kinds::Copy;\n+use option::Option;\n \n // macro for implementing n-ary tuple functions and operations\n macro_rules! array_impls {\n     ($($N:expr)+) => {\n         $(\n+            #[unstable = \"waiting for Clone to stabilize\"]\n+            impl<T:Copy> Clone for [T, ..$N] {\n+                fn clone(&self) -> [T, ..$N] {\n+                    *self\n+                }\n+            }\n+\n+            #[unstable = \"waiting for Show to stabilize\"]\n+            impl<T:fmt::Show> fmt::Show for [T, ..$N] {\n+                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+                    fmt::Show::fmt(&self[], f)\n+                }\n+            }\n+\n             #[unstable = \"waiting for PartialEq to stabilize\"]\n             impl<T:PartialEq> PartialEq for [T, ..$N] {\n                 #[inline]"}]}