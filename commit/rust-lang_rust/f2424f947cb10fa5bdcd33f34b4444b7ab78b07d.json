{"sha": "f2424f947cb10fa5bdcd33f34b4444b7ab78b07d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNDI0Zjk0N2NiMTBmYTViZGNkMzNmMzRiNDQ0NGI3YWI3OGIwN2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-12T17:19:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-12T17:19:55Z"}, "message": "Add couple of utility methods", "tree": {"sha": "684845bc3e9b38ffc8e61c354aba66fdd308fc48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/684845bc3e9b38ffc8e61c354aba66fdd308fc48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d", "html_url": "https://github.com/rust-lang/rust/commit/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ec982d54dcb28a56e5f13337d045e187949888b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ec982d54dcb28a56e5f13337d045e187949888b", "html_url": "https://github.com/rust-lang/rust/commit/6ec982d54dcb28a56e5f13337d045e187949888b"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "9506f2e1cd4ce947da8b516fca200c21746a8e49", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=f2424f947cb10fa5bdcd33f34b4444b7ab78b07d", "patch": "@@ -323,11 +323,18 @@ impl<T: Clone> InFile<&T> {\n     }\n }\n \n+impl<T> InFile<Option<T>> {\n+    pub fn transpose(self) -> Option<InFile<T>> {\n+        let value = self.value?;\n+        Some(InFile::new(self.file_id, value))\n+    }\n+}\n+\n impl InFile<SyntaxNode> {\n-    pub fn ancestors_with_macros<'a>(\n+    pub fn ancestors_with_macros(\n         self,\n-        db: &'a impl crate::db::AstDatabase,\n-    ) -> impl Iterator<Item = InFile<SyntaxNode>> + 'a {\n+        db: &impl crate::db::AstDatabase,\n+    ) -> impl Iterator<Item = InFile<SyntaxNode>> + '_ {\n         std::iter::successors(Some(self), move |node| match node.value.parent() {\n             Some(parent) => Some(node.with_value(parent)),\n             None => {\n@@ -338,6 +345,15 @@ impl InFile<SyntaxNode> {\n     }\n }\n \n+impl InFile<SyntaxToken> {\n+    pub fn ancestors_with_macros(\n+        self,\n+        db: &impl crate::db::AstDatabase,\n+    ) -> impl Iterator<Item = InFile<SyntaxNode>> + '_ {\n+        self.map(|it| it.parent()).ancestors_with_macros(db)\n+    }\n+}\n+\n impl<N: AstNode> InFile<N> {\n     pub fn descendants<T: AstNode>(self) -> impl Iterator<Item = InFile<T>> {\n         self.value.syntax().descendants().filter_map(T::cast).map(move |n| self.with_value(n))"}]}