{"sha": "df0a16b29fcd4e785598b4205a7b9a8cd4c48171", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMGExNmIyOWZjZDRlNzg1NTk4YjQyMDVhN2I5YThjZDRjNDgxNzE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-04-02T02:54:11Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-04-14T01:58:17Z"}, "message": "Include type info when available for awaited expr", "tree": {"sha": "b39a4f44dabb6fdeae1f39197a00b719b1890397", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b39a4f44dabb6fdeae1f39197a00b719b1890397"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df0a16b29fcd4e785598b4205a7b9a8cd4c48171", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df0a16b29fcd4e785598b4205a7b9a8cd4c48171", "html_url": "https://github.com/rust-lang/rust/commit/df0a16b29fcd4e785598b4205a7b9a8cd4c48171", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df0a16b29fcd4e785598b4205a7b9a8cd4c48171/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ce334d53c91c5b9c5b4f809df7f81fbf95c2445", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ce334d53c91c5b9c5b4f809df7f81fbf95c2445", "html_url": "https://github.com/rust-lang/rust/commit/8ce334d53c91c5b9c5b4f809df7f81fbf95c2445"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "d458104560ba87085857dbb48166fcf2b5f51591", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/df0a16b29fcd4e785598b4205a7b9a8cd4c48171/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df0a16b29fcd4e785598b4205a7b9a8cd4c48171/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=df0a16b29fcd4e785598b4205a7b9a8cd4c48171", "patch": "@@ -1378,10 +1378,10 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             )\n         };\n \n-        let push_target_span = |span: &mut MultiSpan| {\n+        let push_target_span_with_fallback = |span: &mut MultiSpan, fallback: &str| {\n             if target_ty.is_impl_trait() {\n                 // It's not very useful to tell the user the type if it's opaque.\n-                span.push_span_label(target_span, \"created here\".to_string());\n+                span.push_span_label(target_span, fallback.to_string());\n             } else {\n                 span.push_span_label(target_span, format!(\"has type `{}`\", target_ty));\n             }\n@@ -1390,10 +1390,12 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n         if let Some(await_span) = from_awaited_ty {\n             // The type causing this obligation is one being awaited at await_span.\n             let mut span = MultiSpan::from_span(await_span);\n-            span.push_span_label(await_span, \"await occurs here\".to_string());\n \n-            if target_span != await_span {\n-                push_target_span(&mut span);\n+            if target_span == await_span {\n+                push_target_span_with_fallback(&mut span, \"await occurs here\");\n+            } else {\n+                span.push_span_label(await_span, \"await occurs here\".to_string());\n+                push_target_span_with_fallback(&mut span, \"created here\");\n             }\n \n             err.span_note(\n@@ -1413,7 +1415,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 format!(\"{} occurs here, with `{}` maybe used later\", await_or_yield, snippet),\n             );\n \n-            push_target_span(&mut span);\n+            push_target_span_with_fallback(&mut span, \"created here\");\n \n             // If available, use the scope span to annotate the drop location.\n             if let Some(scope_span) = scope_span {"}]}