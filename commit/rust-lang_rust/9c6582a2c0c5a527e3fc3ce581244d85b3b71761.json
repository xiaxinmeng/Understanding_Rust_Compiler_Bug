{"sha": "9c6582a2c0c5a527e3fc3ce581244d85b3b71761", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNjU4MmEyYzBjNWE1MjdlM2ZjM2NlNTgxMjQ0ZDg1YjNiNzE3NjE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-07T04:18:47Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-07T04:18:47Z"}, "message": "syntax: use `parse_extern_abi` more.", "tree": {"sha": "cf6964ee37e1efba89a8656fda4fde8125e01b18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf6964ee37e1efba89a8656fda4fde8125e01b18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c6582a2c0c5a527e3fc3ce581244d85b3b71761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c6582a2c0c5a527e3fc3ce581244d85b3b71761", "html_url": "https://github.com/rust-lang/rust/commit/9c6582a2c0c5a527e3fc3ce581244d85b3b71761", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c6582a2c0c5a527e3fc3ce581244d85b3b71761/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7ba754b6c021bc6244cde8c52d3d0b352082560", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7ba754b6c021bc6244cde8c52d3d0b352082560", "html_url": "https://github.com/rust-lang/rust/commit/a7ba754b6c021bc6244cde8c52d3d0b352082560"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "018b5951e6e2e797a923a9a80738e37255692ad0", "filename": "src/libsyntax/parse/parser/ty.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9c6582a2c0c5a527e3fc3ce581244d85b3b71761/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c6582a2c0c5a527e3fc3ce581244d85b3b71761/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs?ref=9c6582a2c0c5a527e3fc3ce581244d85b3b71761", "patch": "@@ -9,8 +9,6 @@ use crate::parse::token::{self, Token};\n use crate::source_map::Span;\n use crate::symbol::{kw};\n \n-use rustc_target::spec::abi::Abi;\n-\n use errors::{Applicability, pluralise};\n \n /// Returns `true` if `IDENT t` can start a type -- `IDENT::a::b`, `IDENT<u8, u8>`,\n@@ -281,12 +279,7 @@ impl<'a> Parser<'a> {\n         */\n \n         let unsafety = self.parse_unsafety();\n-        let abi = if self.eat_keyword(kw::Extern) {\n-            self.parse_opt_abi()?.unwrap_or(Abi::C)\n-        } else {\n-            Abi::Rust\n-        };\n-\n+        let abi = self.parse_extern_abi()?;\n         self.expect_keyword(kw::Fn)?;\n         let cfg = super::ParamCfg {\n             is_self_allowed: false,"}]}