{"sha": "47e4c9efdc369c71920e20f13553d5f7ac791250", "node_id": "C_kwDOAAsO6NoAKDQ3ZTRjOWVmZGMzNjljNzE5MjBlMjBmMTM1NTNkNWY3YWM3OTEyNTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-12T14:41:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-12T14:41:05Z"}, "message": "Rollup merge of #96941 - nannany:master, r=lcnr,JohnTitor\n\nupdate graphviz links\n\nUpdate graphviz links.", "tree": {"sha": "bc6f74fe9c86bf7303b16e9c764e5cb4df620bc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc6f74fe9c86bf7303b16e9c764e5cb4df620bc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47e4c9efdc369c71920e20f13553d5f7ac791250", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJifRyBCRBK7hj4Ov3rIwAAXqsIAAzTd0nbGk7NIzl69308fOBB\ntaHLolKQL7CDliUmsluH9D0rX5iTo2mPbiWwMBucTz2HRwny8ULVJb2lfA1LHIZX\nLmJYfNkzymzw2lbsmXV/q+U91k27w5zskqxxoVxRMuUyQDxkD32cjWeg1feGal35\nYAYHZWedAA4/VBspTYg3SUbpx36UIVy3leu191EoBadWdtF7mfAW+wPODFW2Ql3J\nag6lARcV8PhDUCpO6CmLR0IjI8gL76fHRzzk/7m1cwwJ5wCZ3ORzQkC11sXDpSYQ\nvBkVwTnd6r3fTV5nwyhX6V3+ibp8qU5lx3WLploojSJrp0lxm+TVpvI35XabhcM=\n=qjD8\n-----END PGP SIGNATURE-----\n", "payload": "tree bc6f74fe9c86bf7303b16e9c764e5cb4df620bc5\nparent 231cd0fd7d8b091e76fe4493c4570aee96f68ed3\nparent 2c604f63fcc4287c4608f51467a44942f2dd482a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1652366465 +0200\ncommitter GitHub <noreply@github.com> 1652366465 +0200\n\nRollup merge of #96941 - nannany:master, r=lcnr,JohnTitor\n\nupdate graphviz links\n\nUpdate graphviz links.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47e4c9efdc369c71920e20f13553d5f7ac791250", "html_url": "https://github.com/rust-lang/rust/commit/47e4c9efdc369c71920e20f13553d5f7ac791250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47e4c9efdc369c71920e20f13553d5f7ac791250/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "231cd0fd7d8b091e76fe4493c4570aee96f68ed3", "url": "https://api.github.com/repos/rust-lang/rust/commits/231cd0fd7d8b091e76fe4493c4570aee96f68ed3", "html_url": "https://github.com/rust-lang/rust/commit/231cd0fd7d8b091e76fe4493c4570aee96f68ed3"}, {"sha": "2c604f63fcc4287c4608f51467a44942f2dd482a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c604f63fcc4287c4608f51467a44942f2dd482a", "html_url": "https://github.com/rust-lang/rust/commit/2c604f63fcc4287c4608f51467a44942f2dd482a"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "676c66f41a9ae9eb8c19c413b72f99fdd298a1ef", "filename": "compiler/rustc_graphviz/src/lib.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/47e4c9efdc369c71920e20f13553d5f7ac791250/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e4c9efdc369c71920e20f13553d5f7ac791250/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs?ref=47e4c9efdc369c71920e20f13553d5f7ac791250", "patch": "@@ -4,18 +4,16 @@\n //! use with [Graphviz](https://www.graphviz.org/) by walking a labeled\n //! graph. (Graphviz can then automatically lay out the nodes and edges\n //! of the graph, and also optionally render the graph as an image or\n-//! other [output formats](\n-//! https://www.graphviz.org/content/output-formats), such as SVG.)\n+//! other [output formats](https://www.graphviz.org/docs/outputs), such as SVG.)\n //!\n //! Rather than impose some particular graph data structure on clients,\n //! this library exposes two traits that clients can implement on their\n //! own structs before handing them over to the rendering function.\n //!\n //! Note: This library does not yet provide access to the full\n-//! expressiveness of the [DOT language](\n-//! https://www.graphviz.org/doc/info/lang.html). For example, there are\n-//! many [attributes](https://www.graphviz.org/content/attrs) related to\n-//! providing layout hints (e.g., left-to-right versus top-down, which\n+//! expressiveness of the [DOT language](https://www.graphviz.org/doc/info/lang.html).\n+//! For example, there are many [attributes](https://www.graphviz.org/doc/info/attrs.html)\n+//! related to providing layout hints (e.g., left-to-right versus top-down, which\n //! algorithm to use, etc). The current intention of this library is to\n //! emit a human-readable .dot file with very regular structure suitable\n //! for easy post-processing.\n@@ -292,7 +290,7 @@ pub enum LabelText<'a> {\n     LabelStr(Cow<'a, str>),\n \n     /// This kind of label uses the graphviz label escString type:\n-    /// <https://www.graphviz.org/content/attrs#kescString>\n+    /// <https://www.graphviz.org/docs/attr-types/escString>\n     ///\n     /// Occurrences of backslashes (`\\`) are not escaped; instead they\n     /// are interpreted as initiating an escString escape sequence.\n@@ -307,12 +305,12 @@ pub enum LabelText<'a> {\n     /// printed exactly as given, but between `<` and `>`. **No\n     /// escaping is performed.**\n     ///\n-    /// [html]: https://www.graphviz.org/content/node-shapes#html\n+    /// [html]: https://www.graphviz.org/doc/info/shapes.html#html\n     HtmlStr(Cow<'a, str>),\n }\n \n /// The style for a node or edge.\n-/// See <https://www.graphviz.org/doc/info/attrs.html#k:style> for descriptions.\n+/// See <https://www.graphviz.org/docs/attr-types/style/> for descriptions.\n /// Note that some of these are not valid for edges.\n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n pub enum Style {\n@@ -439,7 +437,7 @@ pub trait Labeller<'a> {\n     /// Maps `n` to one of the [graphviz `shape` names][1]. If `None`\n     /// is returned, no `shape` attribute is specified.\n     ///\n-    /// [1]: https://www.graphviz.org/content/node-shapes\n+    /// [1]: https://www.graphviz.org/doc/info/shapes.html\n     fn node_shape(&'a self, _node: &Self::Node) -> Option<LabelText<'a>> {\n         None\n     }"}]}