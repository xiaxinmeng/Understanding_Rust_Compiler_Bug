{"sha": "224eecce5078b54771906da85788b4b836deea0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNGVlY2NlNTA3OGI1NDc3MTkwNmRhODU3ODhiNGI4MzZkZWVhMGU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-27T06:25:04Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-27T06:25:04Z"}, "message": "Minor refactoring in compute_budgets_for_args", "tree": {"sha": "979ed22d775a38ad005424469a8309e6cf2397ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/979ed22d775a38ad005424469a8309e6cf2397ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224eecce5078b54771906da85788b4b836deea0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224eecce5078b54771906da85788b4b836deea0e", "html_url": "https://github.com/rust-lang/rust/commit/224eecce5078b54771906da85788b4b836deea0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224eecce5078b54771906da85788b4b836deea0e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dad46265170d76ab2800b43c6bfd44dfbc4d2b6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dad46265170d76ab2800b43c6bfd44dfbc4d2b6d", "html_url": "https://github.com/rust-lang/rust/commit/dad46265170d76ab2800b43c6bfd44dfbc4d2b6d"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "3cf12b68a82d93254a9dd59e9370d571b1b0969b", "filename": "src/items.rs", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/224eecce5078b54771906da85788b4b836deea0e/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224eecce5078b54771906da85788b4b836deea0e/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=224eecce5078b54771906da85788b4b836deea0e", "patch": "@@ -513,8 +513,6 @@ impl<'a> FmtVisitor<'a> {\n                                 ret_str_len: usize,\n                                 newline_brace: bool)\n                                 -> (usize, usize, Indent) {\n-        let mut budgets = None;\n-\n         // Try keeping everything on the same line\n         if !result.contains(\"\\n\") {\n             // 3 = `() `, space is before ret_string\n@@ -535,26 +533,23 @@ impl<'a> FmtVisitor<'a> {\n                    used_space,\n                    max_space);\n             if used_space < max_space {\n-                budgets = Some((one_line_budget,\n-                                max_space - used_space,\n-                                indent + result.len() + 1));\n+                return (one_line_budget,\n+                        max_space - used_space,\n+                        indent + result.len() + 1);\n             }\n         }\n \n         // Didn't work. we must force vertical layout and put args on a newline.\n-        if let None = budgets {\n-            let new_indent = indent.block_indent(self.config);\n-            let used_space = new_indent.width() + 2; // account for `(` and `)`\n-            let max_space = self.config.ideal_width + self.config.leeway;\n-            if used_space > max_space {\n-                // Whoops! bankrupt.\n-                // TODO: take evasive action, perhaps kill the indent or something.\n-            } else {\n-                budgets = Some((0, max_space - used_space, new_indent));\n-            }\n+        let new_indent = indent.block_indent(self.config);\n+        let used_space = new_indent.width() + 2; // account for `(` and `)`\n+        let max_space = self.config.ideal_width + self.config.leeway;\n+        if used_space <= max_space {\n+            (0, max_space - used_space, new_indent)\n+        } else {\n+            // Whoops! bankrupt.\n+            // TODO: take evasive action, perhaps kill the indent or something.\n+            panic!(\"in compute_budgets_for_args\");\n         }\n-\n-        budgets.unwrap()\n     }\n \n     fn newline_for_brace(&self, where_clause: &ast::WhereClause) -> bool {"}]}