{"sha": "f3218dfa57105c66fd964c6df3942c36e475b39c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMjE4ZGZhNTcxMDVjNjZmZDk2NGM2ZGYzOTQyYzM2ZTQ3NWIzOWM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-07T01:41:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-07T01:41:13Z"}, "message": "Rollup merge of #82651 - jyn514:rustdoc-warnings, r=GuillaumeGomez\n\nCleanup rustdoc warnings\n\n## Clean up error reporting for deprecated passes\n\nUsing `error!` here goes all the way back to the original commit, https://github.com/rust-lang/rust/pull/8540. I don't see any reason to use logging; rustdoc should use diagnostics wherever possible. See https://github.com/rust-lang/rust/pull/81932#issuecomment-785291244 for further context.\n\n- Use spans for deprecated attributes\n- Use a proper diagnostic for unknown passes, instead of error logging\n- Add tests for unknown passes\n- Improve some wording in diagnostics\n\n##  Report that `doc(plugins)` doesn't work using diagnostics instead of `eprintln!`\n\nThis also adds a test for the output.\n\nThis was added in https://github.com/rust-lang/rust/pull/52194. I don't see any particular reason not to use diagnostics here, I think it was just missed in https://github.com/rust-lang/rust/pull/50541.", "tree": {"sha": "a1fe08d726a1c798fee6f3d6672dbb95b2ca4a23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1fe08d726a1c798fee6f3d6672dbb95b2ca4a23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3218dfa57105c66fd964c6df3942c36e475b39c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRC86CRBK7hj4Ov3rIwAAdHIIAHUHn9++kIYRG5fnRTOdR+Q2\nSUkz93BKLlBpg5ha1Yxbuqs42G5hxGYiIIAn0tlEJt7Fq7ShSfAiXgQZZCLwrMbs\nHVN5K/udzrAGmRBI4lzJ9HNtv6DFbqX7nGYE0LrStJ1zcRqtw1le2tHakjQOZDiO\nexW/RD8jGGktzzYtge5ucYMd/6JiNBtaeD6tlfiv5RPtxqnQmBOp0r63Rr1Vp59M\n+BjEIMwbPMNXLAz1s2KkECR04RF26EfIVTS/DS7d+bgYF4vHznUkJpatGQbHdZCq\nJ6NZC5bJF4Wemjhy/NMK2rAbGwj8PyZysdkWM20RkAIdV/1xBiNfjPYaZCbDH2U=\n=NaYc\n-----END PGP SIGNATURE-----\n", "payload": "tree a1fe08d726a1c798fee6f3d6672dbb95b2ca4a23\nparent 817e58f38deee4eb0bbb1402873f5e4ea0ea0ec9\nparent d5c300b1f2e9a6f7f05b2fa51ca2b4d011d289f4\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615081273 +0900\ncommitter GitHub <noreply@github.com> 1615081273 +0900\n\nRollup merge of #82651 - jyn514:rustdoc-warnings, r=GuillaumeGomez\n\nCleanup rustdoc warnings\n\n## Clean up error reporting for deprecated passes\n\nUsing `error!` here goes all the way back to the original commit, https://github.com/rust-lang/rust/pull/8540. I don't see any reason to use logging; rustdoc should use diagnostics wherever possible. See https://github.com/rust-lang/rust/pull/81932#issuecomment-785291244 for further context.\n\n- Use spans for deprecated attributes\n- Use a proper diagnostic for unknown passes, instead of error logging\n- Add tests for unknown passes\n- Improve some wording in diagnostics\n\n##  Report that `doc(plugins)` doesn't work using diagnostics instead of `eprintln!`\n\nThis also adds a test for the output.\n\nThis was added in https://github.com/rust-lang/rust/pull/52194. I don't see any particular reason not to use diagnostics here, I think it was just missed in https://github.com/rust-lang/rust/pull/50541.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3218dfa57105c66fd964c6df3942c36e475b39c", "html_url": "https://github.com/rust-lang/rust/commit/f3218dfa57105c66fd964c6df3942c36e475b39c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3218dfa57105c66fd964c6df3942c36e475b39c/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "817e58f38deee4eb0bbb1402873f5e4ea0ea0ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/817e58f38deee4eb0bbb1402873f5e4ea0ea0ec9", "html_url": "https://github.com/rust-lang/rust/commit/817e58f38deee4eb0bbb1402873f5e4ea0ea0ec9"}, {"sha": "d5c300b1f2e9a6f7f05b2fa51ca2b4d011d289f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5c300b1f2e9a6f7f05b2fa51ca2b4d011d289f4", "html_url": "https://github.com/rust-lang/rust/commit/d5c300b1f2e9a6f7f05b2fa51ca2b4d011d289f4"}], "stats": {"total": 132, "additions": 91, "deletions": 41}, "files": [{"sha": "6cc649c1180c515b55a34983be30599599747e0c", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3218dfa57105c66fd964c6df3942c36e475b39c/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3218dfa57105c66fd964c6df3942c36e475b39c/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=f3218dfa57105c66fd964c6df3942c36e475b39c", "patch": "@@ -576,7 +576,8 @@ impl CheckAttrVisitor<'tcx> {\n                             sym::masked,\n                             sym::no_default_passes, // deprecated\n                             sym::no_inline,\n-                            sym::passes, // deprecated\n+                            sym::passes,  // deprecated\n+                            sym::plugins, // removed, but rustdoc warns about it itself\n                             sym::primitive,\n                             sym::spotlight,\n                             sym::test,"}, {"sha": "43cddc06320b8ca7f668bab108a38464f0577892", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=f3218dfa57105c66fd964c6df3942c36e475b39c", "patch": "@@ -658,9 +658,8 @@ fn check_deprecated_options(matches: &getopts::Matches, diag: &rustc_errors::Han\n             {\n                 continue;\n             }\n-            let mut err =\n-                diag.struct_warn(&format!(\"the '{}' flag is considered deprecated\", flag));\n-            err.warn(\n+            let mut err = diag.struct_warn(&format!(\"the `{}` flag is deprecated\", flag));\n+            err.note(\n                 \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n                  for more information\",\n             );"}, {"sha": "e9c32396e845975d3b9bc4e0ac57deaf95b9cc5f", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 36, "deletions": 27, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=f3218dfa57105c66fd964c6df3942c36e475b39c", "patch": "@@ -22,7 +22,7 @@ use rustc_session::DiagnosticOutput;\n use rustc_session::Session;\n use rustc_span::source_map;\n use rustc_span::symbol::sym;\n-use rustc_span::DUMMY_SP;\n+use rustc_span::{Span, DUMMY_SP};\n \n use std::cell::RefCell;\n use std::collections::hash_map::Entry;\n@@ -389,7 +389,7 @@ crate fn run_global_ctxt(\n     tcx: TyCtxt<'_>,\n     resolver: Rc<RefCell<interface::BoxedResolver>>,\n     mut default_passes: passes::DefaultPassOption,\n-    mut manual_passes: Vec<String>,\n+    manual_passes: Vec<String>,\n     render_options: RenderOptions,\n     output_format: OutputFormat,\n ) -> (clean::Crate, RenderOptions, Cache) {\n@@ -490,21 +490,44 @@ crate fn run_global_ctxt(\n         }\n     }\n \n-    fn report_deprecated_attr(name: &str, diag: &rustc_errors::Handler) {\n-        let mut msg = diag\n-            .struct_warn(&format!(\"the `#![doc({})]` attribute is considered deprecated\", name));\n-        msg.warn(\n+    fn report_deprecated_attr(name: &str, diag: &rustc_errors::Handler, sp: Span) {\n+        let mut msg =\n+            diag.struct_span_warn(sp, &format!(\"the `#![doc({})]` attribute is deprecated\", name));\n+        msg.note(\n             \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n              for more information\",\n         );\n \n         if name == \"no_default_passes\" {\n             msg.help(\"you may want to use `#![doc(document_private_items)]`\");\n+        } else if name.starts_with(\"plugins\") {\n+            msg.warn(\"`#![doc(plugins = \\\"...\\\")]` no longer functions; see CVE-2018-1000622 <https://nvd.nist.gov/vuln/detail/CVE-2018-1000622>\");\n         }\n \n         msg.emit();\n     }\n \n+    let parse_pass = |name: &str, sp: Option<Span>| {\n+        if let Some(pass) = passes::find_pass(name) {\n+            Some(ConditionalPass::always(pass))\n+        } else {\n+            let msg = &format!(\"ignoring unknown pass `{}`\", name);\n+            let mut warning = if let Some(sp) = sp {\n+                tcx.sess.struct_span_warn(sp, msg)\n+            } else {\n+                tcx.sess.struct_warn(msg)\n+            };\n+            if name == \"collapse-docs\" {\n+                warning.note(\"the `collapse-docs` pass was removed in #80261 <https://github.com/rust-lang/rust/pull/80261>\");\n+            }\n+            warning.emit();\n+            None\n+        }\n+    };\n+\n+    let mut manual_passes: Vec<_> =\n+        manual_passes.into_iter().flat_map(|name| parse_pass(&name, None)).collect();\n+\n     // Process all of the crate attributes, extracting plugin metadata along\n     // with the passes which we are supposed to run.\n     for attr in krate.module.as_ref().unwrap().attrs.lists(sym::doc) {\n@@ -513,29 +536,25 @@ crate fn run_global_ctxt(\n         let name = attr.name_or_empty();\n         if attr.is_word() {\n             if name == sym::no_default_passes {\n-                report_deprecated_attr(\"no_default_passes\", diag);\n+                report_deprecated_attr(\"no_default_passes\", diag, attr.span());\n                 if default_passes == passes::DefaultPassOption::Default {\n                     default_passes = passes::DefaultPassOption::None;\n                 }\n             }\n         } else if let Some(value) = attr.value_str() {\n-            let sink = match name {\n+            match name {\n                 sym::passes => {\n-                    report_deprecated_attr(\"passes = \\\"...\\\"\", diag);\n-                    &mut manual_passes\n+                    report_deprecated_attr(\"passes = \\\"...\\\"\", diag, attr.span());\n                 }\n                 sym::plugins => {\n-                    report_deprecated_attr(\"plugins = \\\"...\\\"\", diag);\n-                    eprintln!(\n-                        \"WARNING: `#![doc(plugins = \\\"...\\\")]` \\\n-                         no longer functions; see CVE-2018-1000622\"\n-                    );\n+                    report_deprecated_attr(\"plugins = \\\"...\\\"\", diag, attr.span());\n                     continue;\n                 }\n                 _ => continue,\n             };\n             for name in value.as_str().split_whitespace() {\n-                sink.push(name.to_string());\n+                let span = attr.name_value_literal_span().unwrap_or(attr.span());\n+                manual_passes.extend(parse_pass(name, Some(span)));\n             }\n         }\n \n@@ -544,17 +563,7 @@ crate fn run_global_ctxt(\n         }\n     }\n \n-    let passes = passes::defaults(default_passes).iter().copied().chain(\n-        manual_passes.into_iter().flat_map(|name| {\n-            if let Some(pass) = passes::find_pass(&name) {\n-                Some(ConditionalPass::always(pass))\n-            } else {\n-                error!(\"unknown pass {}, skipping\", name);\n-                None\n-            }\n-        }),\n-    );\n-\n+    let passes = passes::defaults(default_passes).iter().copied().chain(manual_passes);\n     info!(\"Executing passes\");\n \n     for p in passes {"}, {"sha": "5febc5eb9cd543221f6836b897d332f06005ca48", "filename": "src/test/rustdoc-ui/deprecated-attrs.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.rs?ref=f3218dfa57105c66fd964c6df3942c36e475b39c", "patch": "@@ -1,7 +1,17 @@\n // check-pass\n+// compile-flags: --passes unknown-pass\n+// error-pattern: ignoring unknown pass `unknown-pass`\n \n-#![doc(no_default_passes, passes = \"unindent-comments\")]\n-\n-struct SomeStruct;\n-\n-pub struct OtherStruct;\n+#![doc(no_default_passes)]\n+//~^ WARNING attribute is deprecated\n+//~| NOTE see issue #44136\n+//~| HELP use `#![doc(document_private_items)]`\n+#![doc(passes = \"collapse-docs unindent-comments\")]\n+//~^ WARNING attribute is deprecated\n+//~| NOTE see issue #44136\n+//~| WARNING ignoring unknown pass\n+//~| NOTE `collapse-docs` pass was removed\n+#![doc(plugins = \"xxx\")]\n+//~^ WARNING attribute is deprecated\n+//~| NOTE see issue #44136\n+//~| WARNING no longer functions; see CVE"}, {"sha": "b855cedf5223e246222b2e3a35baa02dd21e97e7", "filename": "src/test/rustdoc-ui/deprecated-attrs.stderr", "status": "modified", "additions": 36, "deletions": 5, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3218dfa57105c66fd964c6df3942c36e475b39c/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr?ref=f3218dfa57105c66fd964c6df3942c36e475b39c", "patch": "@@ -1,11 +1,42 @@\n-warning: the `#![doc(no_default_passes)]` attribute is considered deprecated\n+warning: the `passes` flag is deprecated\n    |\n-   = warning: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n+   = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n+\n+warning: ignoring unknown pass `unknown-pass`\n+\n+warning: the `#![doc(no_default_passes)]` attribute is deprecated\n+  --> $DIR/deprecated-attrs.rs:5:8\n+   |\n+LL | #![doc(no_default_passes)]\n+   |        ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n    = help: you may want to use `#![doc(document_private_items)]`\n \n-warning: the `#![doc(passes = \"...\")]` attribute is considered deprecated\n+warning: the `#![doc(passes = \"...\")]` attribute is deprecated\n+  --> $DIR/deprecated-attrs.rs:9:8\n+   |\n+LL | #![doc(passes = \"collapse-docs unindent-comments\")]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n+\n+warning: ignoring unknown pass `collapse-docs`\n+  --> $DIR/deprecated-attrs.rs:9:17\n+   |\n+LL | #![doc(passes = \"collapse-docs unindent-comments\")]\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `collapse-docs` pass was removed in #80261 <https://github.com/rust-lang/rust/pull/80261>\n+\n+warning: the `#![doc(plugins = \"...\")]` attribute is deprecated\n+  --> $DIR/deprecated-attrs.rs:14:8\n+   |\n+LL | #![doc(plugins = \"xxx\")]\n+   |        ^^^^^^^^^^^^^^^\n    |\n-   = warning: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n+   = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n+   = warning: `#![doc(plugins = \"...\")]` no longer functions; see CVE-2018-1000622 <https://nvd.nist.gov/vuln/detail/CVE-2018-1000622>\n \n-warning: 2 warnings emitted\n+warning: 5 warnings emitted\n "}]}