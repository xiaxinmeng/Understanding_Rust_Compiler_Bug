{"sha": "9b1b3d69559750cf459638076dc32202110ec40e", "node_id": "C_kwDOAAsO6NoAKDliMWIzZDY5NTU5NzUwY2Y0NTk2MzgwNzZkYzMyMjAyMTEwZWM0MGU", "commit": {"author": {"name": "Tom Milligan", "email": "tom@reinfer.io", "date": "2022-04-16T10:50:24Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-04-17T14:28:48Z"}, "message": "[review] rename internal function", "tree": {"sha": "17904706889f7ba48e67b28192af79b4dc605c32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17904706889f7ba48e67b28192af79b4dc605c32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b1b3d69559750cf459638076dc32202110ec40e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b1b3d69559750cf459638076dc32202110ec40e", "html_url": "https://github.com/rust-lang/rust/commit/9b1b3d69559750cf459638076dc32202110ec40e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b1b3d69559750cf459638076dc32202110ec40e/comments", "author": {"login": "tommilligan", "id": 12255914, "node_id": "MDQ6VXNlcjEyMjU1OTE0", "avatar_url": "https://avatars.githubusercontent.com/u/12255914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommilligan", "html_url": "https://github.com/tommilligan", "followers_url": "https://api.github.com/users/tommilligan/followers", "following_url": "https://api.github.com/users/tommilligan/following{/other_user}", "gists_url": "https://api.github.com/users/tommilligan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommilligan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommilligan/subscriptions", "organizations_url": "https://api.github.com/users/tommilligan/orgs", "repos_url": "https://api.github.com/users/tommilligan/repos", "events_url": "https://api.github.com/users/tommilligan/events{/privacy}", "received_events_url": "https://api.github.com/users/tommilligan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba0351a1460e1e415293aa5e2b347b83e933703f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba0351a1460e1e415293aa5e2b347b83e933703f", "html_url": "https://github.com/rust-lang/rust/commit/ba0351a1460e1e415293aa5e2b347b83e933703f"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "efe4e9498c90928612f24704684423c0fee7c0d8", "filename": "src/imports.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9b1b3d69559750cf459638076dc32202110ec40e/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b1b3d69559750cf459638076dc32202110ec40e/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=9b1b3d69559750cf459638076dc32202110ec40e", "patch": "@@ -183,7 +183,7 @@ impl UseSegment {\n     }\n }\n \n-pub(crate) fn regroup_use_trees(\n+pub(crate) fn normalize_use_trees_with_granularity(\n     use_trees: Vec<UseTree>,\n     import_granularity: ImportGranularity,\n ) -> Vec<UseTree> {\n@@ -1125,7 +1125,10 @@ mod test {\n     macro_rules! test_merge {\n         ($by:ident, [$($input:expr),* $(,)*], [$($output:expr),* $(,)*]) => {\n             assert_eq!(\n-                regroup_use_trees(parse_use_trees!($($input,)*), ImportGranularity::$by),\n+                normalize_use_trees_with_granularity(\n+                    parse_use_trees!($($input,)*),\n+                    ImportGranularity::$by,\n+                ),\n                 parse_use_trees!($($output,)*),\n             );\n         }"}, {"sha": "8ae297de25bc22299b3be888d0aa2ee123223a02", "filename": "src/reorder.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b1b3d69559750cf459638076dc32202110ec40e/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b1b3d69559750cf459638076dc32202110ec40e/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=9b1b3d69559750cf459638076dc32202110ec40e", "patch": "@@ -12,7 +12,7 @@ use rustc_ast::ast;\n use rustc_span::{symbol::sym, Span};\n \n use crate::config::{Config, GroupImportsTactic};\n-use crate::imports::{regroup_use_trees, UseSegment, UseTree};\n+use crate::imports::{normalize_use_trees_with_granularity, UseSegment, UseTree};\n use crate::items::{is_mod_decl, rewrite_extern_crate, rewrite_mod};\n use crate::lists::{itemize_list, write_list, ListFormatting, ListItem};\n use crate::rewrite::RewriteContext;\n@@ -107,8 +107,10 @@ fn rewrite_reorderable_or_regroupable_items(\n             for (item, list_item) in normalized_items.iter_mut().zip(list_items) {\n                 item.list_item = Some(list_item.clone());\n             }\n-            normalized_items =\n-                regroup_use_trees(normalized_items, context.config.imports_granularity());\n+            normalized_items = normalize_use_trees_with_granularity(\n+                normalized_items,\n+                context.config.imports_granularity(),\n+            );\n \n             let mut regrouped_items = match context.config.group_imports() {\n                 GroupImportsTactic::Preserve | GroupImportsTactic::One => {"}]}