{"sha": "a2042a64700840310be96041e039877383db14f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMDQyYTY0NzAwODQwMzEwYmU5NjA0MWUwMzk4NzczODNkYjE0ZjI=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-12-08T22:22:23Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-12-13T12:35:15Z"}, "message": "Use non-panicking maybe_parser_from_source_str", "tree": {"sha": "d1abf053a243a3d17a53899c3d3bcb4598e5436c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1abf053a243a3d17a53899c3d3bcb4598e5436c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2042a64700840310be96041e039877383db14f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2042a64700840310be96041e039877383db14f2", "html_url": "https://github.com/rust-lang/rust/commit/a2042a64700840310be96041e039877383db14f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2042a64700840310be96041e039877383db14f2/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10b9afa9061899f5e2db4be864655ee9d3a110d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/10b9afa9061899f5e2db4be864655ee9d3a110d4", "html_url": "https://github.com/rust-lang/rust/commit/10b9afa9061899f5e2db4be864655ee9d3a110d4"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "326059c73576c4c9249bb02d1d4dc1919dc51d6f", "filename": "src/formatting.rs", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a2042a64700840310be96041e039877383db14f2/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2042a64700840310be96041e039877383db14f2/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=a2042a64700840310be96041e039877383db14f2", "patch": "@@ -8,7 +8,7 @@ use std::time::{Duration, Instant};\n \n use syntax::ast;\n use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n-use syntax::errors::Handler;\n+use syntax::errors::{DiagnosticBuilder, Handler};\n use syntax::parse::{self, ParseSess};\n use syntax::source_map::{FilePathMapping, SourceMap, Span};\n \n@@ -604,30 +604,41 @@ fn parse_crate(\n ) -> Result<ast::Crate, ErrorKind> {\n     let input_is_stdin = input.is_text();\n \n-    let mut parser = match input {\n-        Input::File(file) => parse::new_parser_from_file(parse_session, &file),\n-        Input::Text(text) => parse::new_parser_from_source_str(\n+    let parser = match input {\n+        Input::File(file) => Ok(parse::new_parser_from_file(parse_session, &file)),\n+        Input::Text(text) => parse::maybe_new_parser_from_source_str(\n             parse_session,\n             syntax::source_map::FileName::Custom(\"stdin\".to_owned()),\n             text,\n-        ),\n+        )\n+        .map_err(|diags| {\n+            diags\n+                .into_iter()\n+                .map(|d| DiagnosticBuilder::new_diagnostic(&parse_session.span_diagnostic, d))\n+                .collect::<Vec<_>>()\n+        }),\n     };\n \n-    parser.cfg_mods = false;\n-    if config.skip_children() {\n-        parser.recurse_into_file_modules = false;\n-    }\n+    let result = match parser {\n+        Ok(mut parser) => {\n+            parser.cfg_mods = false;\n+            if config.skip_children() {\n+                parser.recurse_into_file_modules = false;\n+            }\n \n-    let mut parser = AssertUnwindSafe(parser);\n-    let result = catch_unwind(move || parser.0.parse_crate_mod());\n+            let mut parser = AssertUnwindSafe(parser);\n+            catch_unwind(move || parser.0.parse_crate_mod().map_err(|d| vec![d]))\n+        }\n+        Err(db) => Ok(Err(db)),\n+    };\n \n     match result {\n         Ok(Ok(c)) => {\n             if !parse_session.span_diagnostic.has_errors() {\n                 return Ok(c);\n             }\n         }\n-        Ok(Err(mut e)) => e.emit(),\n+        Ok(Err(mut diagnostics)) => diagnostics.iter_mut().for_each(|d| d.emit()),\n         Err(_) => {\n             // Note that if you see this message and want more information,\n             // then run the `parse_crate_mod` function above without"}]}