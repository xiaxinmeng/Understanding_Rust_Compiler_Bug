{"sha": "d9874bfb4079876dabc092c035d99b2d5b7f8a1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ODc0YmZiNDA3OTg3NmRhYmMwOTJjMDM1ZDk5YjJkNWI3ZjhhMWM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-06T23:18:57Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-09T16:44:51Z"}, "message": "rand: Convert statics to constants\n\nThis leaves the ziggurat tables as `pub static` as they're likely too large to\nwant to go into the metadata anyway.", "tree": {"sha": "0d0ca368db8e61e6a9a688ba2fafe3a4fd5c8cfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d0ca368db8e61e6a9a688ba2fafe3a4fd5c8cfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9874bfb4079876dabc092c035d99b2d5b7f8a1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9874bfb4079876dabc092c035d99b2d5b7f8a1c", "html_url": "https://github.com/rust-lang/rust/commit/d9874bfb4079876dabc092c035d99b2d5b7f8a1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9874bfb4079876dabc092c035d99b2d5b7f8a1c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33700532325627d8127d531dd83cca610681d48f", "url": "https://api.github.com/repos/rust-lang/rust/commits/33700532325627d8127d531dd83cca610681d48f", "html_url": "https://github.com/rust-lang/rust/commit/33700532325627d8127d531dd83cca610681d48f"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "83d03bb265e95f87208eb333b91963d4f1099662", "filename": "src/librand/chacha.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d9874bfb4079876dabc092c035d99b2d5b7f8a1c/src%2Flibrand%2Fchacha.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9874bfb4079876dabc092c035d99b2d5b7f8a1c/src%2Flibrand%2Fchacha.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fchacha.rs?ref=d9874bfb4079876dabc092c035d99b2d5b7f8a1c", "patch": "@@ -14,9 +14,9 @@ use core::prelude::*;\n \n use {Rng, SeedableRng, Rand};\n \n-static KEY_WORDS    : uint =  8; // 8 words for the 256-bit key\n-static STATE_WORDS  : uint = 16;\n-static CHACHA_ROUNDS: uint = 20; // Cryptographically secure from 8 upwards as of this writing\n+const KEY_WORDS    : uint =  8; // 8 words for the 256-bit key\n+const STATE_WORDS  : uint = 16;\n+const CHACHA_ROUNDS: uint = 20; // Cryptographically secure from 8 upwards as of this writing\n \n /// A random number generator that uses the ChaCha20 algorithm [1].\n ///"}, {"sha": "9bfd9177e348b1cbffbea9e2d7db414fad36e10c", "filename": "src/librand/isaac.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d9874bfb4079876dabc092c035d99b2d5b7f8a1c/src%2Flibrand%2Fisaac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9874bfb4079876dabc092c035d99b2d5b7f8a1c/src%2Flibrand%2Fisaac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fisaac.rs?ref=d9874bfb4079876dabc092c035d99b2d5b7f8a1c", "patch": "@@ -16,9 +16,9 @@ use core::slice::raw;\n \n use {Rng, SeedableRng, Rand};\n \n-static RAND_SIZE_LEN: u32 = 8;\n-static RAND_SIZE: u32 = 1 << (RAND_SIZE_LEN as uint);\n-static RAND_SIZE_UINT: uint = 1 << (RAND_SIZE_LEN as uint);\n+const RAND_SIZE_LEN: u32 = 8;\n+const RAND_SIZE: u32 = 1 << (RAND_SIZE_LEN as uint);\n+const RAND_SIZE_UINT: uint = 1 << (RAND_SIZE_LEN as uint);\n \n /// A random number generator that uses the ISAAC algorithm[1].\n ///\n@@ -251,8 +251,8 @@ impl Rand for IsaacRng {\n     }\n }\n \n-static RAND_SIZE_64_LEN: uint = 8;\n-static RAND_SIZE_64: uint = 1 << RAND_SIZE_64_LEN;\n+const RAND_SIZE_64_LEN: uint = 8;\n+const RAND_SIZE_64: uint = 1 << RAND_SIZE_64_LEN;\n \n /// A random number generator that uses ISAAC-64[1], the 64-bit\n /// variant of the ISAAC algorithm.\n@@ -356,8 +356,8 @@ impl Isaac64Rng {\n         // abbreviations\n         let mut a = self.a;\n         let mut b = self.b + self.c;\n-        static MIDPOINT: uint =  RAND_SIZE_64 / 2;\n-        static MP_VEC: [(uint, uint), .. 2] = [(0,MIDPOINT), (MIDPOINT, 0)];\n+        const MIDPOINT: uint =  RAND_SIZE_64 / 2;\n+        const MP_VEC: [(uint, uint), .. 2] = [(0,MIDPOINT), (MIDPOINT, 0)];\n         macro_rules! ind (\n             ($x:expr) => {\n                 *self.mem.unsafe_get(($x as uint >> 3) & (RAND_SIZE_64 - 1))"}]}