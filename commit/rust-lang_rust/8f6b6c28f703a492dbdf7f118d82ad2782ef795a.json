{"sha": "8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNmI2YzI4ZjcwM2E0OTJkYmRmN2YxMThkODJhZDI3ODJlZjc5NWE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-01T02:02:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-01T02:02:16Z"}, "message": "Merge pull request #2210 from topecongiro/issue-2178\n\nCombine a short callee and a single argument", "tree": {"sha": "75dadce46a464ee94801f90bbddc738167149a4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75dadce46a464ee94801f90bbddc738167149a4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaILgoCRBK7hj4Ov3rIwAAdHIIAIudhN5Beu3pGPBhWl4HPqVt\nUwOZCdHyWnxPYOnO/okLYctnooWpeb5mG0j/PTim4WInFP8xH0z+5hmuRqhberAE\n/B+g7baiGk3BakouhC3RLVGy8VmFBO/KTBxXCxCG5xMAt5HsdC4E1fPRBXnjKvIc\njZRUbxQ9EsCIputU0LTPqStnqf4Cl94JNrmkelJkQ7xSedQnoybc+ojdEngz9eYk\nFL0c8gF5xQ+9l9KHVcV2hJTU/YWGUYv+n3A3wBoHN6Z8J2pxx8ledlz0zVfqKX28\nrgoVWiwlpBzb+SqSwyspo83hg/Tah+mb/kIiBiwGYKK1IfHuKROfenCpTdjKWH8=\n=jOTB\n-----END PGP SIGNATURE-----\n", "payload": "tree 75dadce46a464ee94801f90bbddc738167149a4d\nparent bd876b94b35df1508bfdc69a4a276f5e64f0b5c2\nparent 39d85b0d4112818141bec1bf7a87d4d0db5e55a6\nauthor Nick Cameron <nrc@ncameron.org> 1512093736 +1300\ncommitter GitHub <noreply@github.com> 1512093736 +1300\n\nMerge pull request #2210 from topecongiro/issue-2178\n\nCombine a short callee and a single argument"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "html_url": "https://github.com/rust-lang/rust/commit/8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd876b94b35df1508bfdc69a4a276f5e64f0b5c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd876b94b35df1508bfdc69a4a276f5e64f0b5c2", "html_url": "https://github.com/rust-lang/rust/commit/bd876b94b35df1508bfdc69a4a276f5e64f0b5c2"}, {"sha": "39d85b0d4112818141bec1bf7a87d4d0db5e55a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/39d85b0d4112818141bec1bf7a87d4d0db5e55a6", "html_url": "https://github.com/rust-lang/rust/commit/39d85b0d4112818141bec1bf7a87d4d0db5e55a6"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "afa319830469e4d8e6da448415f85bbdc842fe57", "filename": "src/expr.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "patch": "@@ -1850,6 +1850,9 @@ where\n     };\n     let used_width = extra_offset(callee_str, shape);\n     let one_line_width = shape.width.checked_sub(used_width + 2 * paren_overhead)?;\n+    // 1 = \"(\"\n+    let combine_arg_with_callee =\n+        callee_str.len() + 1 <= context.config.tab_spaces() && args.len() == 1;\n \n     // 1 = \"(\" or \")\"\n     let one_line_shape = shape\n@@ -1874,6 +1877,7 @@ where\n         one_line_width,\n         args_max_width,\n         force_trailing_comma,\n+        combine_arg_with_callee,\n     )?;\n \n     if !context.use_block_indent() && need_block_indent(&list_str, nested_shape) && !extendable {\n@@ -1914,6 +1918,7 @@ fn rewrite_call_args<'a, T>(\n     one_line_width: usize,\n     args_max_width: usize,\n     force_trailing_comma: bool,\n+    combine_arg_with_callee: bool,\n ) -> Option<(bool, String)>\n where\n     T: Rewrite + Spanned + ToExpr + 'a,\n@@ -1943,6 +1948,7 @@ where\n         nested_shape,\n         one_line_width,\n         args_max_width,\n+        combine_arg_with_callee,\n     );\n \n     let fmt = ListFormatting {\n@@ -1973,19 +1979,22 @@ fn try_overflow_last_arg<'a, T>(\n     nested_shape: Shape,\n     one_line_width: usize,\n     args_max_width: usize,\n+    combine_arg_with_callee: bool,\n ) -> DefinitiveListTactic\n where\n     T: Rewrite + Spanned + ToExpr + 'a,\n {\n-    let overflow_last = can_be_overflowed(context, args);\n+    let overflow_last = combine_arg_with_callee || can_be_overflowed(context, args);\n \n     // Replace the last item with its first line to see if it fits with\n     // first arguments.\n     let placeholder = if overflow_last {\n         let mut context = context.clone();\n-        if let Some(expr) = args[args.len() - 1].to_expr() {\n-            if let ast::ExprKind::MethodCall(..) = expr.node {\n-                context.force_one_line_chain = true;\n+        if !combine_arg_with_callee {\n+            if let Some(expr) = args[args.len() - 1].to_expr() {\n+                if let ast::ExprKind::MethodCall(..) = expr.node {\n+                    context.force_one_line_chain = true;\n+                }\n             }\n         }\n         last_arg_shape(args, item_vec, one_line_shape, args_max_width).and_then(|arg_shape| {"}, {"sha": "4353efac4ec76b55d4c6bca65454d70b95020e24", "filename": "tests/source/expr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "patch": "@@ -355,3 +355,7 @@ fn newlines_between_list_like_expr() {\n         _ => bar(),\n     };\n }\n+\n+fn issue2178() {\n+    Ok(result.iter().map(|item| ls_util::rls_to_location(item)).collect())\n+}"}, {"sha": "8a6e44ed86bd73d51b9e3c0f53d91d61ef5d2f55", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "patch": "@@ -16,9 +16,9 @@ fn main() {\n     // Test case where first chain element isn't a path, but is shorter than\n     // the size of a tab.\n     x().y(|| match cond() {\n-              true => (),\n-              false => (),\n-          });\n+        true => (),\n+        false => (),\n+    });\n \n     loong_func().quux(move || if true { 1 } else { 2 });\n "}, {"sha": "0206548b31b2c453e48c3759ba3ec9a7acb9241e", "filename": "tests/target/expr.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f6b6c28f703a492dbdf7f118d82ad2782ef795a/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=8f6b6c28f703a492dbdf7f118d82ad2782ef795a", "patch": "@@ -408,3 +408,10 @@ fn newlines_between_list_like_expr() {\n         _ => bar(),\n     };\n }\n+\n+fn issue2178() {\n+    Ok(result\n+        .iter()\n+        .map(|item| ls_util::rls_to_location(item))\n+        .collect())\n+}"}]}