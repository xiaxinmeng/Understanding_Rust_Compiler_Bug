{"sha": "a01b00faf877deab0ef3896ce655351398fe4a47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMWIwMGZhZjg3N2RlYWIwZWYzODk2Y2U2NTUzNTEzOThmZTRhNDc=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-04-17T22:59:36Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-04-17T22:59:36Z"}, "message": "Clarify layout information in Layout::extend", "tree": {"sha": "6aa125740687e64d7aabb2515d238c044d3be716", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6aa125740687e64d7aabb2515d238c044d3be716"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a01b00faf877deab0ef3896ce655351398fe4a47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a01b00faf877deab0ef3896ce655351398fe4a47", "html_url": "https://github.com/rust-lang/rust/commit/a01b00faf877deab0ef3896ce655351398fe4a47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a01b00faf877deab0ef3896ce655351398fe4a47/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f1fd9da5488cc2fe88dc89e5ca3f183526388a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f1fd9da5488cc2fe88dc89e5ca3f183526388a9", "html_url": "https://github.com/rust-lang/rust/commit/5f1fd9da5488cc2fe88dc89e5ca3f183526388a9"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b2a109d1cd1db1564eda08d67b056cf6038d5680", "filename": "src/libcore/alloc/layout.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a01b00faf877deab0ef3896ce655351398fe4a47/src%2Flibcore%2Falloc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a01b00faf877deab0ef3896ce655351398fe4a47/src%2Flibcore%2Falloc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc%2Flayout.rs?ref=a01b00faf877deab0ef3896ce655351398fe4a47", "patch": "@@ -258,9 +258,11 @@ impl Layout {\n \n     /// Creates a layout describing the record for `self` followed by\n     /// `next`, including any necessary padding to ensure that `next`\n-    /// will be properly aligned, but *no trailing padding*. In order to\n-    /// match C representation layout, you should call `pad_to_align`\n-    /// after extending the layout with all fields.\n+    /// will be properly aligned, but *no trailing padding*. In order\n+    /// to match C representation layout `repr(C)`, you should call\n+    /// `pad_to_align` after extending the layout with all fields.\n+    /// (There is no way to match the default Rust representation\n+    /// layout `repr(Rust)`, as it is unspecified.)\n     ///\n     /// Note that the resulting layout will satisfy the alignment properties\n     /// of both `self` and `next`, in order to ensure alignment of both parts."}]}