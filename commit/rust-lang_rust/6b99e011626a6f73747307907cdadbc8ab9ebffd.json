{"sha": "6b99e011626a6f73747307907cdadbc8ab9ebffd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOTllMDExNjI2YTZmNzM3NDczMDc5MDdjZGFkYmM4YWI5ZWJmZmQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-11T22:45:49Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-11T22:45:49Z"}, "message": "Delete stray ` character in error message.", "tree": {"sha": "fe383b24f263fbff181848d75546c812055dde45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe383b24f263fbff181848d75546c812055dde45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b99e011626a6f73747307907cdadbc8ab9ebffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b99e011626a6f73747307907cdadbc8ab9ebffd", "html_url": "https://github.com/rust-lang/rust/commit/6b99e011626a6f73747307907cdadbc8ab9ebffd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b99e011626a6f73747307907cdadbc8ab9ebffd/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fca1ab0e7be574022b2d229f0a6ad9bd580d1bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fca1ab0e7be574022b2d229f0a6ad9bd580d1bf", "html_url": "https://github.com/rust-lang/rust/commit/1fca1ab0e7be574022b2d229f0a6ad9bd580d1bf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e8d9e90456efc65d6e4228e53625eaddd36944a9", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b99e011626a6f73747307907cdadbc8ab9ebffd/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b99e011626a6f73747307907cdadbc8ab9ebffd/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=6b99e011626a6f73747307907cdadbc8ab9ebffd", "patch": "@@ -569,7 +569,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n \n             ty::TyTuple(_) => {\n                 FfiUnsafe(\"found Rust tuple type in foreign module; \\\n-                           consider using a struct instead`\")\n+                           consider using a struct instead\")\n             }\n \n             ty::TyRawPtr(ref m) | ty::TyRef(_, ref m) => {"}]}