{"sha": "f7ed4a799ad2a128ede21eff62f95562a4e528e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZWQ0YTc5OWFkMmExMjhlZGUyMWVmZjYyZjk1NTYyYTRlNTI4ZTM=", "commit": {"author": {"name": "Boris-Chengbiao Zhou", "email": "bobo1239@web.de", "date": "2021-05-14T01:47:41Z"}, "committer": {"name": "Boris-Chengbiao Zhou", "email": "bobo1239@web.de", "date": "2021-05-18T18:13:24Z"}, "message": "Set dso_local for more items", "tree": {"sha": "006fdc04a8963232ab96decd4d4d51797c1cef78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/006fdc04a8963232ab96decd4d4d51797c1cef78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7ed4a799ad2a128ede21eff62f95562a4e528e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ed4a799ad2a128ede21eff62f95562a4e528e3", "html_url": "https://github.com/rust-lang/rust/commit/f7ed4a799ad2a128ede21eff62f95562a4e528e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7ed4a799ad2a128ede21eff62f95562a4e528e3/comments", "author": {"login": "Bobo1239", "id": 2302947, "node_id": "MDQ6VXNlcjIzMDI5NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2302947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobo1239", "html_url": "https://github.com/Bobo1239", "followers_url": "https://api.github.com/users/Bobo1239/followers", "following_url": "https://api.github.com/users/Bobo1239/following{/other_user}", "gists_url": "https://api.github.com/users/Bobo1239/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobo1239/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobo1239/subscriptions", "organizations_url": "https://api.github.com/users/Bobo1239/orgs", "repos_url": "https://api.github.com/users/Bobo1239/repos", "events_url": "https://api.github.com/users/Bobo1239/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobo1239/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Bobo1239", "id": 2302947, "node_id": "MDQ6VXNlcjIzMDI5NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2302947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobo1239", "html_url": "https://github.com/Bobo1239", "followers_url": "https://api.github.com/users/Bobo1239/followers", "following_url": "https://api.github.com/users/Bobo1239/following{/other_user}", "gists_url": "https://api.github.com/users/Bobo1239/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobo1239/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobo1239/subscriptions", "organizations_url": "https://api.github.com/users/Bobo1239/orgs", "repos_url": "https://api.github.com/users/Bobo1239/repos", "events_url": "https://api.github.com/users/Bobo1239/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobo1239/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46985d5d913f7e7621183f69cdbc5b65c5ce1fc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/46985d5d913f7e7621183f69cdbc5b65c5ce1fc7", "html_url": "https://github.com/rust-lang/rust/commit/46985d5d913f7e7621183f69cdbc5b65c5ce1fc7"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "a48ec1136dd00820870872111adbad673cdc3759", "filename": "compiler/rustc_codegen_llvm/src/base.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7ed4a799ad2a128ede21eff62f95562a4e528e3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ed4a799ad2a128ede21eff62f95562a4e528e3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs?ref=f7ed4a799ad2a128ede21eff62f95562a4e528e3", "patch": "@@ -204,3 +204,27 @@ pub fn visibility_to_llvm(linkage: Visibility) -> llvm::Visibility {\n         Visibility::Protected => llvm::Visibility::Protected,\n     }\n }\n+\n+pub fn linkage_from_llvm(linkage: llvm::Linkage) -> Linkage {\n+    match linkage {\n+        llvm::Linkage::ExternalLinkage => Linkage::External,\n+        llvm::Linkage::AvailableExternallyLinkage => Linkage::AvailableExternally,\n+        llvm::Linkage::LinkOnceAnyLinkage => Linkage::LinkOnceAny,\n+        llvm::Linkage::LinkOnceODRLinkage => Linkage::LinkOnceODR,\n+        llvm::Linkage::WeakAnyLinkage => Linkage::WeakAny,\n+        llvm::Linkage::WeakODRLinkage => Linkage::WeakODR,\n+        llvm::Linkage::AppendingLinkage => Linkage::Appending,\n+        llvm::Linkage::InternalLinkage => Linkage::Internal,\n+        llvm::Linkage::PrivateLinkage => Linkage::Private,\n+        llvm::Linkage::ExternalWeakLinkage => Linkage::ExternalWeak,\n+        llvm::Linkage::CommonLinkage => Linkage::Common,\n+    }\n+}\n+\n+pub fn visibility_from_llvm(linkage: llvm::Visibility) -> Visibility {\n+    match linkage {\n+        llvm::Visibility::Default => Visibility::Default,\n+        llvm::Visibility::Hidden => Visibility::Hidden,\n+        llvm::Visibility::Protected => Visibility::Protected,\n+    }\n+}"}, {"sha": "245842df1b060080cc9a825ad08053ace9aa612a", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f7ed4a799ad2a128ede21eff62f95562a4e528e3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ed4a799ad2a128ede21eff62f95562a4e528e3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=f7ed4a799ad2a128ede21eff62f95562a4e528e3", "patch": "@@ -17,6 +17,7 @@ use rustc_middle::mir::mono::MonoItem;\n use rustc_middle::ty::{self, Instance, Ty};\n use rustc_middle::{bug, span_bug};\n use rustc_target::abi::{AddressSpace, Align, HasDataLayout, LayoutOf, Primitive, Scalar, Size};\n+use rustc_target::spec::RelocModel;\n use tracing::debug;\n \n pub fn const_alloc_to_llvm(cx: &CodegenCx<'ll, '_>, alloc: &Allocation) -> &'ll Value {\n@@ -282,6 +283,12 @@ impl CodegenCx<'ll, 'tcx> {\n             }\n         }\n \n+        if self.tcx.sess.relocation_model() == RelocModel::Static {\n+            unsafe {\n+                llvm::LLVMRustSetDSOLocal(g, true);\n+            }\n+        }\n+\n         self.instances.borrow_mut().insert(instance, g);\n         g\n     }\n@@ -363,6 +370,12 @@ impl StaticMethods for CodegenCx<'ll, 'tcx> {\n             set_global_alignment(&self, g, self.align_of(ty));\n             llvm::LLVMSetInitializer(g, v);\n \n+            let linkage = base::linkage_from_llvm(llvm::LLVMRustGetLinkage(g));\n+            let visibility = base::visibility_from_llvm(llvm::LLVMRustGetVisibility(g));\n+            if self.should_assume_dso_local(linkage, visibility) {\n+                llvm::LLVMRustSetDSOLocal(g, true);\n+            }\n+\n             // As an optimization, all shared statics which do not have interior\n             // mutability are placed into read-only memory.\n             if !is_mutable && self.type_is_freeze(ty) {"}, {"sha": "7fb978d61dc3f5de35ac7f9e66cecaa1e35019c0", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f7ed4a799ad2a128ede21eff62f95562a4e528e3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ed4a799ad2a128ede21eff62f95562a4e528e3/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=f7ed4a799ad2a128ede21eff62f95562a4e528e3", "patch": "@@ -54,7 +54,7 @@ pub enum CallConv {\n }\n \n /// LLVMRustLinkage\n-#[derive(PartialEq)]\n+#[derive(Copy, Clone, PartialEq)]\n #[repr(C)]\n pub enum Linkage {\n     ExternalLinkage = 0,\n@@ -72,6 +72,7 @@ pub enum Linkage {\n \n // LLVMRustVisibility\n #[repr(C)]\n+#[derive(Copy, Clone)]\n pub enum Visibility {\n     Default = 0,\n     Hidden = 1,"}, {"sha": "ce2b3b1cfa4140455f79839f19756456abac9ab2", "filename": "src/test/assembly/static-relocation-model.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f7ed4a799ad2a128ede21eff62f95562a4e528e3/src%2Ftest%2Fassembly%2Fstatic-relocation-model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7ed4a799ad2a128ede21eff62f95562a4e528e3/src%2Ftest%2Fassembly%2Fstatic-relocation-model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fstatic-relocation-model.rs?ref=f7ed4a799ad2a128ede21eff62f95562a4e528e3", "patch": "@@ -15,9 +15,21 @@ trait Sized {}\n #[lang=\"copy\"]\n trait Copy {}\n \n+#[lang=\"sync\"]\n+trait Sync {}\n+\n+#[lang = \"drop_in_place\"]\n+fn drop_in_place<T>(_: *mut T) {}\n+\n impl Copy for u8 {}\n+impl Sync for u8 {}\n+\n+#[no_mangle]\n+pub static PIERIS: u8 = 42;\n \n extern \"C\" {\n+    static EXOCHORDA: *mut u8;\n+\n     fn chaenomeles();\n }\n \n@@ -42,3 +54,24 @@ pub fn peach() -> u8 {\n         *(banana as *mut u8)\n     }\n }\n+\n+// CHECK-LABEL: mango:\n+// x64:      movq    EXOCHORDA{{(\\(%[a-z0-9]+\\))?}}, %[[REG:[a-z0-9]+]]\n+// x64-NEXT: movb    (%[[REG]]), %{{[a-z0-9]+}}\n+// A64:      adrp    [[REG2:[a-z0-9]+]], EXOCHORDA\n+// A64-NEXT: ldr     {{[a-z0-9]+}}, {{\\[}}[[REG2]], :lo12:EXOCHORDA]\n+#[no_mangle]\n+pub fn mango() -> u8 {\n+    unsafe {\n+        *EXOCHORDA\n+    }\n+}\n+\n+// CHECK-LABEL: orange:\n+// x64: mov{{l|absq}}    $PIERIS, %{{[a-z0-9]+}}\n+// A64:      adrp    [[REG2:[a-z0-9]+]], PIERIS\n+// A64-NEXT: add     {{[a-z0-9]+}}, [[REG2]], :lo12:PIERIS\n+#[no_mangle]\n+pub fn orange() -> &'static u8 {\n+    &PIERIS\n+}"}]}