{"sha": "1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYjQ1ZWM3ZTM2NmY2ZjE2YTZhM2QwYTU4Y2FjYjBlZTQ4ZWY0MDY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-10-24T18:34:23Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-10-24T18:34:23Z"}, "message": "Point to macro def span instead of whole body", "tree": {"sha": "dd036bb41c856284d0d4828ab76d6b7cc02fa9e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd036bb41c856284d0d4828ab76d6b7cc02fa9e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "html_url": "https://github.com/rust-lang/rust/commit/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8227a938a4970008ec333f6cd66be9d4be0e981c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8227a938a4970008ec333f6cd66be9d4be0e981c", "html_url": "https://github.com/rust-lang/rust/commit/8227a938a4970008ec333f6cd66be9d4be0e981c"}], "stats": {"total": 286, "additions": 107, "deletions": 179}, "files": [{"sha": "03fb89b21a43cb520bdff7b7dcae7e5d6af72cd0", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -187,7 +187,7 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n     err.span_label(span, best_fail_msg);\n     if let Some(sp) = def_span {\n         if cx.source_map().span_to_filename(sp).is_real() && !sp.is_dummy() {\n-            err.span_label(sp, \"when calling this macro\");\n+            err.span_label(cx.source_map().def_span(sp), \"when calling this macro\");\n         }\n     }\n "}, {"sha": "de826102081e77ef10fd0fcc3b3a18669a6f5fa7", "filename": "src/test/ui/empty/empty-comment.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fempty%2Fempty-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fempty%2Fempty-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-comment.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -1,13 +1,11 @@\n error: unexpected end of macro invocation\n   --> $DIR/empty-comment.rs:20:5\n    |\n-LL | / macro_rules! one_arg_macro {\n-LL | |     ($fmt:expr) => (print!(concat!($fmt, \"/n\")));\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! one_arg_macro {\n+   | -------------------------- when calling this macro\n ...\n-LL |       one_arg_macro!(/**/); //~ ERROR unexpected end\n-   |       ^^^^^^^^^^^^^^^^^^^^^ unexpected end of macro invocation\n+LL |     one_arg_macro!(/**/); //~ ERROR unexpected end\n+   |     ^^^^^^^^^^^^^^^^^^^^^ unexpected end of macro invocation\n \n error: aborting due to previous error\n "}, {"sha": "96fb374b58c6c7a4e2b918e66a3097c279845b0f", "filename": "src/test/ui/issues/issue-7970a.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fissues%2Fissue-7970a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fissues%2Fissue-7970a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7970a.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -1,13 +1,11 @@\n error: unexpected end of macro invocation\n   --> $DIR/issue-7970a.rs:16:5\n    |\n-LL | / macro_rules! one_arg_macro {\n-LL | |     ($fmt:expr) => (print!(concat!($fmt, \"/n\")));\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! one_arg_macro {\n+   | -------------------------- when calling this macro\n ...\n-LL |       one_arg_macro!();\n-   |       ^^^^^^^^^^^^^^^^^ unexpected end of macro invocation\n+LL |     one_arg_macro!();\n+   |     ^^^^^^^^^^^^^^^^^ unexpected end of macro invocation\n \n error: aborting due to previous error\n "}, {"sha": "7705ba3b11ed58f9adc0905224f3018f11ed7d6a", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018-feature-gate.stderr", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018-feature-gate.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -51,41 +51,29 @@ LL |     ($(a)?*) => {}\n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:41:11\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($(a)?) => {}\n-LL | |     //~^ERROR using the `?` macro Kleene operator for\n-LL | |     //~|ERROR expected `*` or `+`\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a?); //~ ERROR no rules expected the token `?`\n-   |             ^ no rules expected the token `?`\n+LL |     foo!(a?); //~ ERROR no rules expected the token `?`\n+   |           ^ no rules expected the token `?`\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:42:11\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($(a)?) => {}\n-LL | |     //~^ERROR using the `?` macro Kleene operator for\n-LL | |     //~|ERROR expected `*` or `+`\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a?a); //~ ERROR no rules expected the token `?`\n-   |             ^ no rules expected the token `?`\n+LL |     foo!(a?a); //~ ERROR no rules expected the token `?`\n+   |           ^ no rules expected the token `?`\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018-feature-gate.rs:43:11\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($(a)?) => {}\n-LL | |     //~^ERROR using the `?` macro Kleene operator for\n-LL | |     //~|ERROR expected `*` or `+`\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a?a?a); //~ ERROR no rules expected the token `?`\n-   |             ^ no rules expected the token `?`\n+LL |     foo!(a?a?a); //~ ERROR no rules expected the token `?`\n+   |           ^ no rules expected the token `?`\n \n error: aborting due to 10 previous errors\n "}, {"sha": "25dd66b81f567f0e86494d08d459e730bcadbf29", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018.stderr", "status": "modified", "additions": 44, "deletions": 66, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -7,123 +7,101 @@ LL |     ($(a),?) => {} //~ERROR the `?` macro repetition operator\n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:36:11\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($(a)?) => {}\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a?); //~ ERROR no rules expected the token `?`\n-   |             ^ no rules expected the token `?`\n+LL |     foo!(a?); //~ ERROR no rules expected the token `?`\n+   |           ^ no rules expected the token `?`\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:37:11\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($(a)?) => {}\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a?a); //~ ERROR no rules expected the token `?`\n-   |             ^ no rules expected the token `?`\n+LL |     foo!(a?a); //~ ERROR no rules expected the token `?`\n+   |           ^ no rules expected the token `?`\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:38:11\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($(a)?) => {}\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a?a?a); //~ ERROR no rules expected the token `?`\n-   |             ^ no rules expected the token `?`\n+LL |     foo!(a?a?a); //~ ERROR no rules expected the token `?`\n+   |           ^ no rules expected the token `?`\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2018.rs:40:5\n    |\n-LL | / macro_rules! barplus {\n-LL | |     ($(a)?+) => {} // ok. matches \"a+\" and \"+\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n ...\n-LL |       barplus!(); //~ERROR unexpected end of macro invocation\n-   |       ^^^^^^^^^^^ unexpected end of macro invocation\n+LL |     barplus!(); //~ERROR unexpected end of macro invocation\n+   |     ^^^^^^^^^^^ unexpected end of macro invocation\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2018.rs:41:14\n    |\n-LL | / macro_rules! barplus {\n-LL | |     ($(a)?+) => {} // ok. matches \"a+\" and \"+\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n ...\n-LL |       barplus!(a); //~ERROR unexpected end of macro invocation\n-   |                ^ unexpected end of macro invocation\n+LL |     barplus!(a); //~ERROR unexpected end of macro invocation\n+   |              ^ unexpected end of macro invocation\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:42:15\n    |\n-LL | / macro_rules! barplus {\n-LL | |     ($(a)?+) => {} // ok. matches \"a+\" and \"+\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n ...\n-LL |       barplus!(a?); //~ ERROR no rules expected the token `?`\n-   |                 ^ no rules expected the token `?`\n+LL |     barplus!(a?); //~ ERROR no rules expected the token `?`\n+   |               ^ no rules expected the token `?`\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:43:15\n    |\n-LL | / macro_rules! barplus {\n-LL | |     ($(a)?+) => {} // ok. matches \"a+\" and \"+\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barplus {\n+   | -------------------- when calling this macro\n ...\n-LL |       barplus!(a?a); //~ ERROR no rules expected the token `?`\n-   |                 ^ no rules expected the token `?`\n+LL |     barplus!(a?a); //~ ERROR no rules expected the token `?`\n+   |               ^ no rules expected the token `?`\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2018.rs:47:5\n    |\n-LL | / macro_rules! barstar {\n-LL | |     ($(a)?*) => {} // ok. matches \"a*\" and \"*\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n ...\n-LL |       barstar!(); //~ERROR unexpected end of macro invocation\n-   |       ^^^^^^^^^^^ unexpected end of macro invocation\n+LL |     barstar!(); //~ERROR unexpected end of macro invocation\n+   |     ^^^^^^^^^^^ unexpected end of macro invocation\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2018.rs:48:14\n    |\n-LL | / macro_rules! barstar {\n-LL | |     ($(a)?*) => {} // ok. matches \"a*\" and \"*\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n ...\n-LL |       barstar!(a); //~ERROR unexpected end of macro invocation\n-   |                ^ unexpected end of macro invocation\n+LL |     barstar!(a); //~ERROR unexpected end of macro invocation\n+   |              ^ unexpected end of macro invocation\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:49:15\n    |\n-LL | / macro_rules! barstar {\n-LL | |     ($(a)?*) => {} // ok. matches \"a*\" and \"*\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n ...\n-LL |       barstar!(a?); //~ ERROR no rules expected the token `?`\n-   |                 ^ no rules expected the token `?`\n+LL |     barstar!(a?); //~ ERROR no rules expected the token `?`\n+   |               ^ no rules expected the token `?`\n \n error: no rules expected the token `?`\n   --> $DIR/macro-at-most-once-rep-2018.rs:50:15\n    |\n-LL | / macro_rules! barstar {\n-LL | |     ($(a)?*) => {} // ok. matches \"a*\" and \"*\"\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! barstar {\n+   | -------------------- when calling this macro\n ...\n-LL |       barstar!(a?a); //~ ERROR no rules expected the token `?`\n-   |                 ^ no rules expected the token `?`\n+LL |     barstar!(a?a); //~ ERROR no rules expected the token `?`\n+   |               ^ no rules expected the token `?`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "d526023d441b101cba73aa38247059532a8bc673", "filename": "src/test/ui/macros/macro-non-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmacro-non-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmacro-non-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-non-lifetime.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -2,7 +2,7 @@ error: no rules expected the token `a`\n   --> $DIR/macro-non-lifetime.rs:18:8\n    |\n LL | macro_rules! m { ($x:lifetime) => { } }\n-   | --------------------------------------- when calling this macro\n+   | -------------- when calling this macro\n ...\n LL |     m!(a);\n    |        ^ no rules expected the token `a`"}, {"sha": "1d6af44bd08a5237bda698064c91c29173b41121", "filename": "src/test/ui/macros/missing-comma.stderr", "status": "modified", "additions": 22, "deletions": 46, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -7,68 +7,44 @@ LL |     println!(\"{}\" a);\n error: no rules expected the token `b`\n   --> $DIR/missing-comma.rs:22:12\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($a:ident) => ();\n-LL | |     ($a:ident, $b:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident, $e:ident) => ();\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a b);\n-   |             -^ no rules expected the token `b`\n-   |             |\n-   |             help: missing comma here\n+LL |     foo!(a b);\n+   |           -^ no rules expected the token `b`\n+   |           |\n+   |           help: missing comma here\n \n error: no rules expected the token `e`\n   --> $DIR/missing-comma.rs:24:21\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($a:ident) => ();\n-LL | |     ($a:ident, $b:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident, $e:ident) => ();\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a, b, c, d e);\n-   |                      -^ no rules expected the token `e`\n-   |                      |\n-   |                      help: missing comma here\n+LL |     foo!(a, b, c, d e);\n+   |                    -^ no rules expected the token `e`\n+   |                    |\n+   |                    help: missing comma here\n \n error: no rules expected the token `d`\n   --> $DIR/missing-comma.rs:26:18\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($a:ident) => ();\n-LL | |     ($a:ident, $b:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident, $e:ident) => ();\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a, b, c d, e);\n-   |                   -^ no rules expected the token `d`\n-   |                   |\n-   |                   help: missing comma here\n+LL |     foo!(a, b, c d, e);\n+   |                 -^ no rules expected the token `d`\n+   |                 |\n+   |                 help: missing comma here\n \n error: no rules expected the token `d`\n   --> $DIR/missing-comma.rs:28:18\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($a:ident) => ();\n-LL | |     ($a:ident, $b:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident) => ();\n-LL | |     ($a:ident, $b:ident, $c:ident, $d:ident, $e:ident) => ();\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! foo {\n+   | ---------------- when calling this macro\n ...\n-LL |       foo!(a, b, c d e);\n-   |                    ^ no rules expected the token `d`\n+LL |     foo!(a, b, c d e);\n+   |                  ^ no rules expected the token `d`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "853eb5847c0cdfe543a68ea29bca50e7803fa598", "filename": "src/test/ui/macros/trace_faulty_macros.stderr", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -1,16 +1,14 @@\n error: no rules expected the token `bcd`\n   --> $DIR/trace_faulty_macros.rs:17:26\n    |\n-LL | / macro_rules! my_faulty_macro {\n-LL | |     () => {\n-LL | |         my_faulty_macro!(bcd); //~ ERROR no rules\n-   | |                          ^^^ no rules expected the token `bcd`\n-LL | |     };\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! my_faulty_macro {\n+   | ---------------------------- when calling this macro\n+LL |     () => {\n+LL |         my_faulty_macro!(bcd); //~ ERROR no rules\n+   |                          ^^^ no rules expected the token `bcd`\n ...\n-LL |       my_faulty_macro!();\n-   |       ------------------- in this macro invocation\n+LL |     my_faulty_macro!();\n+   |     ------------------- in this macro invocation\n \n note: trace_macro\n   --> $DIR/trace_faulty_macros.rs:43:5"}, {"sha": "1e765dcde4f68b52a27572bf30ad992ef30dba65", "filename": "src/test/ui/parser/macro/macro-doc-comments-1.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-1.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -1,13 +1,11 @@\n error: no rules expected the token `!`\n   --> $DIR/macro-doc-comments-1.rs:16:5\n    |\n-LL | / macro_rules! outer {\n-LL | |     (#[$outer:meta]) => ()\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! outer {\n+   | ------------------ when calling this macro\n ...\n-LL |       //! Inner\n-   |       ^^^^^^^^^ no rules expected the token `!`\n+LL |     //! Inner\n+   |     ^^^^^^^^^ no rules expected the token `!`\n \n error: aborting due to previous error\n "}, {"sha": "0ab8a3cafb55f63e1caeb07b80b6eae065fa87a4", "filename": "src/test/ui/parser/macro/macro-doc-comments-2.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -1,13 +1,11 @@\n error: no rules expected the token `[`\n   --> $DIR/macro-doc-comments-2.rs:16:5\n    |\n-LL | / macro_rules! inner {\n-LL | |     (#![$inner:meta]) => ()\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! inner {\n+   | ------------------ when calling this macro\n ...\n-LL |       /// Outer\n-   |       ^ no rules expected the token `[`\n+LL |     /// Outer\n+   |     ^ no rules expected the token `[`\n \n error: aborting due to previous error\n "}, {"sha": "e148c48ed13142ce234ab5b8bce47fb142163d45", "filename": "src/test/ui/underscore-ident-matcher.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Funderscore-ident-matcher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406/src%2Ftest%2Fui%2Funderscore-ident-matcher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-ident-matcher.stderr?ref=1ab45ec7e366f6f16a6a3d0a58cacb0ee48ef406", "patch": "@@ -1,15 +1,11 @@\n error: no rules expected the token `_`\n   --> $DIR/underscore-ident-matcher.rs:18:19\n    |\n-LL | / macro_rules! identity {\n-LL | |     ($i: ident) => (\n-LL | |         $i\n-LL | |     )\n-LL | | }\n-   | |_- when calling this macro\n+LL | macro_rules! identity {\n+   | --------------------- when calling this macro\n ...\n-LL |       let identity!(_) = 10; //~ ERROR no rules expected the token `_`\n-   |                     ^ no rules expected the token `_`\n+LL |     let identity!(_) = 10; //~ ERROR no rules expected the token `_`\n+   |                   ^ no rules expected the token `_`\n \n error: aborting due to previous error\n "}]}