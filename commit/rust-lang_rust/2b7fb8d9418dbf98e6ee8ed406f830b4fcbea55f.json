{"sha": "2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "node_id": "C_kwDOAAsO6NoAKDJiN2ZiOGQ5NDE4ZGJmOThlNmVlOGVkNDA2ZjgzMGI0ZmNiZWE1NWY", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-09-12T14:54:25Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-09-12T14:54:25Z"}, "message": "Impove diagnostic for .await-ing non-futures", "tree": {"sha": "35f3e3a31dca920ce3ee87779a1ddac72fa72268", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35f3e3a31dca920ce3ee87779a1ddac72fa72268"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "html_url": "https://github.com/rust-lang/rust/commit/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/comments", "author": null, "committer": null, "parents": [{"sha": "56e7678ca97e9740f7d09206f767d5bb676917f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/56e7678ca97e9740f7d09206f767d5bb676917f7", "html_url": "https://github.com/rust-lang/rust/commit/56e7678ca97e9740f7d09206f767d5bb676917f7"}], "stats": {"total": 69, "additions": 52, "deletions": 17}, "files": [{"sha": "cd03e3fb4572d7f97149f602cf08e55ffb928b77", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "patch": "@@ -146,13 +146,19 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                         |this| this.with_new_scopes(|this| this.lower_block_expr(block)),\n                     ),\n                 ExprKind::Await(ref expr) => {\n-                    let span = if expr.span.hi() < e.span.hi() {\n-                        expr.span.shrink_to_hi().with_hi(e.span.hi())\n+                    let dot_await_span = if expr.span.hi() < e.span.hi() {\n+                        let span_with_whitespace = self\n+                            .tcx\n+                            .sess\n+                            .source_map()\n+                            .span_extend_while(expr.span, char::is_whitespace)\n+                            .unwrap_or(expr.span);\n+                        span_with_whitespace.shrink_to_hi().with_hi(e.span.hi())\n                     } else {\n                         // this is a recovered `await expr`\n                         e.span\n                     };\n-                    self.lower_expr_await(span, expr)\n+                    self.lower_expr_await(dot_await_span, expr)\n                 }\n                 ExprKind::Closure(\n                     ref binder,"}, {"sha": "cb605cacc9c989b027fc2c8e31a52459c8fcda30", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "patch": "@@ -1160,8 +1160,8 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     // and if not maybe suggest doing something else? If we kept the expression around we\n                     // could also check if it is an fn call (very likely) and suggest changing *that*, if\n                     // it is from the local crate.\n-                    err.span_suggestion_verbose(\n-                        expr.span.shrink_to_hi().with_hi(span.hi()),\n+                    err.span_suggestion(\n+                        span,\n                         \"remove the `.await`\",\n                         \"\",\n                         Applicability::MachineApplicable,"}, {"sha": "1be5d02482e8438ad5a85972ade53ecd909e9b2b", "filename": "src/test/ui/async-await/issue-101715.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissue-101715.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissue-101715.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-101715.rs?ref=2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+\n+struct S;\n+\n+impl S {\n+    fn very_long_method_name_the_longest_method_name_in_the_whole_universe(self) {}\n+}\n+\n+async fn foo() {\n+    S.very_long_method_name_the_longest_method_name_in_the_whole_universe()\n+        .await\n+        //~^ error: `()` is not a future\n+        //~| help: remove the `.await`\n+        //~| help: the trait `Future` is not implemented for `()`\n+}\n+\n+fn main() {}"}, {"sha": "a0e8d2a89437176e345b4fb1fefa974f554fd333", "filename": "src/test/ui/async-await/issue-101715.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissue-101715.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissue-101715.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-101715.stderr?ref=2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "patch": "@@ -0,0 +1,16 @@\n+error[E0277]: `()` is not a future\n+  --> $DIR/issue-101715.rs:11:9\n+   |\n+LL |         .await\n+   |         ^^^^^^\n+   |         |\n+   |         `()` is not a future\n+   |         help: remove the `.await`\n+   |\n+   = help: the trait `Future` is not implemented for `()`\n+   = note: () must be a future or must implement `IntoFuture` to be awaited\n+   = note: required for `()` to implement `IntoFuture`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "d3cf57d3b14022ebcda425a9cb8a02398e4b907e", "filename": "src/test/ui/async-await/issue-70594.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissue-70594.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissue-70594.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-70594.stderr?ref=2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "patch": "@@ -22,16 +22,14 @@ error[E0277]: `()` is not a future\n   --> $DIR/issue-70594.rs:4:11\n    |\n LL |     [1; ().await];\n-   |           ^^^^^^ `()` is not a future\n+   |           ^^^^^^\n+   |           |\n+   |           `()` is not a future\n+   |           help: remove the `.await`\n    |\n    = help: the trait `Future` is not implemented for `()`\n    = note: () must be a future or must implement `IntoFuture` to be awaited\n    = note: required for `()` to implement `IntoFuture`\n-help: remove the `.await`\n-   |\n-LL -     [1; ().await];\n-LL +     [1; ()];\n-   |\n \n error: aborting due to 4 previous errors\n "}, {"sha": "222afb2c7b2bbc1e2f16a267d34f176fa2e994d3", "filename": "src/test/ui/async-await/issues/issue-62009-1.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr?ref=2b7fb8d9418dbf98e6ee8ed406f830b4fcbea55f", "patch": "@@ -28,16 +28,14 @@ error[E0277]: `[closure@$DIR/issue-62009-1.rs:12:6: 12:9]` is not a future\n   --> $DIR/issue-62009-1.rs:12:15\n    |\n LL |     (|_| 2333).await;\n-   |               ^^^^^^ `[closure@$DIR/issue-62009-1.rs:12:6: 12:9]` is not a future\n+   |               ^^^^^^\n+   |               |\n+   |               `[closure@$DIR/issue-62009-1.rs:12:6: 12:9]` is not a future\n+   |               help: remove the `.await`\n    |\n    = help: the trait `Future` is not implemented for closure `[closure@$DIR/issue-62009-1.rs:12:6: 12:9]`\n    = note: [closure@$DIR/issue-62009-1.rs:12:6: 12:9] must be a future or must implement `IntoFuture` to be awaited\n    = note: required for `[closure@$DIR/issue-62009-1.rs:12:6: 12:9]` to implement `IntoFuture`\n-help: remove the `.await`\n-   |\n-LL -     (|_| 2333).await;\n-LL +     (|_| 2333);\n-   |\n \n error: aborting due to 4 previous errors\n "}]}