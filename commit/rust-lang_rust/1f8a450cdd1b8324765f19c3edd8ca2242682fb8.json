{"sha": "1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmOGE0NTBjZGQxYjgzMjQ3NjVmMTljM2VkZDhjYTIyNDI2ODJmYjg=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-07-27T23:57:38Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-08-19T19:02:39Z"}, "message": "Add a test to ensure that RawFd is the size we assume it is.", "tree": {"sha": "56376a1f8f179ec556ef6784481248f6ab154a66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56376a1f8f179ec556ef6784481248f6ab154a66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "html_url": "https://github.com/rust-lang/rust/commit/1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c6bf04edba84ce57f33516138a6aac1a52a9fcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c6bf04edba84ce57f33516138a6aac1a52a9fcd", "html_url": "https://github.com/rust-lang/rust/commit/1c6bf04edba84ce57f33516138a6aac1a52a9fcd"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "6bb1fa15c173f09bbe35c0bc5cdee3de4138f17d", "filename": "library/std/src/os/unix/io/fd.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs?ref=1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "patch": "@@ -2,6 +2,10 @@\n \n #![unstable(feature = \"io_safety\", issue = \"87074\")]\n \n+// Tests for this module\n+#[cfg(test)]\n+mod tests;\n+\n use super::raw::{AsRawFd, FromRawFd, IntoRawFd, RawFd};\n use crate::fmt;\n use crate::fs;"}, {"sha": "84d2a7a1a91b4f391f5c79161708c01664d93273", "filename": "library/std/src/os/unix/io/fd/tests.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd%2Ftests.rs?ref=1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "patch": "@@ -0,0 +1,11 @@\n+use crate::mem::size_of;\n+use crate::os::unix::io::RawFd;\n+\n+#[test]\n+fn test_raw_fd_layout() {\n+    // `OwnedFd` and `BorrowedFd` use `rustc_layout_scalar_valid_range_start`\n+    // and `rustc_layout_scalar_valid_range_end`, with values that depend on\n+    // the bit width of `RawFd`. If this ever changes, those values will need\n+    // to be updated.\n+    assert_eq!(size_of::<RawFd>(), 4);\n+}"}, {"sha": "f9cacc841cd615f693e88f5b04a4dd53cb4d0a8a", "filename": "library/std/src/os/wasi/io/fd.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Ffd.rs?ref=1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "patch": "@@ -2,6 +2,10 @@\n \n #![unstable(feature = \"wasi_ext\", issue = \"71213\")]\n \n+// Tests for this module\n+#[cfg(test)]\n+mod tests;\n+\n use super::raw::{AsRawFd, FromRawFd, IntoRawFd, RawFd};\n use crate::fmt;\n use crate::fs;"}, {"sha": "b276b7bafed80b8413e5aa0c8df9a59a710d54b3", "filename": "library/std/src/os/wasi/io/fd/tests.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Ffd%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f8a450cdd1b8324765f19c3edd8ca2242682fb8/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Ffd%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Ffd%2Ftests.rs?ref=1f8a450cdd1b8324765f19c3edd8ca2242682fb8", "patch": "@@ -0,0 +1,11 @@\n+use std::mem::size_of;\n+use std::os::wasi::io::RawFd;\n+\n+#[test]\n+fn test_raw_fd_layout() {\n+    /// `OwnedFd` and `BorrowedFd` use `rustc_layout_scalar_valid_range_start`\n+    /// and `rustc_layout_scalar_valid_range_end`, with values that depend on\n+    /// the bit width of `RawFd`. If this ever changes, those values will need\n+    /// to be updated.\n+    assert_eq!(size_of::<RawFd>(), 4);\n+}"}]}