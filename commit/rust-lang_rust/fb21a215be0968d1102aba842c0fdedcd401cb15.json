{"sha": "fb21a215be0968d1102aba842c0fdedcd401cb15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMjFhMjE1YmUwOTY4ZDExMDJhYmE4NDJjMGZkZWRjZDQwMWNiMTU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-07T16:06:14Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-07T16:06:14Z"}, "message": "Retain types of proc macros and allow attr. macros", "tree": {"sha": "bb81f3307fc8abfbb5c217b043df6ed3099edc10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb81f3307fc8abfbb5c217b043df6ed3099edc10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb21a215be0968d1102aba842c0fdedcd401cb15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb21a215be0968d1102aba842c0fdedcd401cb15", "html_url": "https://github.com/rust-lang/rust/commit/fb21a215be0968d1102aba842c0fdedcd401cb15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb21a215be0968d1102aba842c0fdedcd401cb15/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8a19e24eaa214d982fa8316a21dacb08ce50ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a19e24eaa214d982fa8316a21dacb08ce50ec5", "html_url": "https://github.com/rust-lang/rust/commit/e8a19e24eaa214d982fa8316a21dacb08ce50ec5"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "b73fb909c9eb4f4aac0df8785a3ebcc3d20a2dbc", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb21a215be0968d1102aba842c0fdedcd401cb15/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/fb21a215be0968d1102aba842c0fdedcd401cb15/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=fb21a215be0968d1102aba842c0fdedcd401cb15", "patch": "@@ -1187,6 +1187,7 @@ dependencies = [\n name = \"proc_macro_api\"\n version = \"0.0.0\"\n dependencies = [\n+ \"base_db\",\n  \"crossbeam-channel 0.5.0\",\n  \"jod-thread\",\n  \"log\","}, {"sha": "cda5e57dc7125fc9945b64d70bb38b848ef2c173", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=fb21a215be0968d1102aba842c0fdedcd401cb15", "patch": "@@ -143,9 +143,17 @@ impl CrateDisplayName {\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct ProcMacroId(pub u32);\n \n+#[derive(Copy, Clone, Eq, PartialEq, Debug)]\n+pub enum ProcMacroKind {\n+    CustomDerive,\n+    FuncLike,\n+    Attr,\n+}\n+\n #[derive(Debug, Clone)]\n pub struct ProcMacro {\n     pub name: SmolStr,\n+    pub kind: ProcMacroKind,\n     pub expander: Arc<dyn TokenExpander>,\n }\n \n@@ -198,11 +206,8 @@ impl CrateGraph {\n         display_name: Option<CrateDisplayName>,\n         cfg_options: CfgOptions,\n         env: Env,\n-        proc_macro: Vec<(SmolStr, Arc<dyn tt::TokenExpander>)>,\n+        proc_macro: Vec<ProcMacro>,\n     ) -> CrateId {\n-        let proc_macro =\n-            proc_macro.into_iter().map(|(name, it)| ProcMacro { name, expander: it }).collect();\n-\n         let data = CrateData {\n             root_file_id: file_id,\n             edition,"}, {"sha": "5571af4954035315abfe777889bed01008e9b794", "filename": "crates/base_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fbase_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fbase_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Flib.rs?ref=fb21a215be0968d1102aba842c0fdedcd401cb15", "patch": "@@ -14,7 +14,7 @@ pub use crate::{\n     change::Change,\n     input::{\n         CrateData, CrateDisplayName, CrateGraph, CrateId, CrateName, Dependency, Edition, Env,\n-        ProcMacroId, SourceRoot, SourceRootId,\n+        ProcMacro, ProcMacroId, ProcMacroKind, SourceRoot, SourceRootId,\n     },\n };\n pub use salsa;"}, {"sha": "1af2bbca782b163a9ac23430286cb0ac89ef0ac6", "filename": "crates/proc_macro_api/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fproc_macro_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fproc_macro_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2FCargo.toml?ref=fb21a215be0968d1102aba842c0fdedcd401cb15", "patch": "@@ -17,3 +17,4 @@ crossbeam-channel = \"0.5.0\"\n jod-thread = \"0.1.1\"\n \n tt = { path = \"../tt\", version = \"0.0.0\" }\n+base_db = { path = \"../base_db\", version = \"0.0.0\" }"}, {"sha": "bf1f908799cf7ad7b3609054699abe14968ee4b6", "filename": "crates/proc_macro_api/src/lib.rs", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fproc_macro_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fproc_macro_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Flib.rs?ref=fb21a215be0968d1102aba842c0fdedcd401cb15", "patch": "@@ -16,6 +16,7 @@ use std::{\n     sync::Arc,\n };\n \n+use base_db::ProcMacro;\n use tt::{SmolStr, Subtree};\n \n use crate::process::{ProcMacroProcessSrv, ProcMacroProcessThread};\n@@ -82,7 +83,7 @@ impl ProcMacroClient {\n         ProcMacroClient { kind: ProcMacroClientKind::Dummy }\n     }\n \n-    pub fn by_dylib_path(&self, dylib_path: &Path) -> Vec<(SmolStr, Arc<dyn tt::TokenExpander>)> {\n+    pub fn by_dylib_path(&self, dylib_path: &Path) -> Vec<ProcMacro> {\n         match &self.kind {\n             ProcMacroClientKind::Dummy => vec![],\n             ProcMacroClientKind::Process { process, .. } => {\n@@ -96,21 +97,21 @@ impl ProcMacroClient {\n \n                 macros\n                     .into_iter()\n-                    .filter_map(|(name, kind)| {\n-                        match kind {\n-                            ProcMacroKind::CustomDerive | ProcMacroKind::FuncLike => {\n-                                let name = SmolStr::new(&name);\n-                                let expander: Arc<dyn tt::TokenExpander> =\n-                                    Arc::new(ProcMacroProcessExpander {\n-                                        process: process.clone(),\n-                                        name: name.clone(),\n-                                        dylib_path: dylib_path.into(),\n-                                    });\n-                                Some((name, expander))\n-                            }\n-                            // FIXME: Attribute macro are currently unsupported.\n-                            ProcMacroKind::Attr => None,\n-                        }\n+                    .map(|(name, kind)| {\n+                        let name = SmolStr::new(&name);\n+                        let kind = match kind {\n+                            ProcMacroKind::CustomDerive => base_db::ProcMacroKind::CustomDerive,\n+                            ProcMacroKind::FuncLike => base_db::ProcMacroKind::FuncLike,\n+                            ProcMacroKind::Attr => base_db::ProcMacroKind::Attr,\n+                        };\n+                        let expander: Arc<dyn tt::TokenExpander> =\n+                            Arc::new(ProcMacroProcessExpander {\n+                                process: process.clone(),\n+                                name: name.clone(),\n+                                dylib_path: dylib_path.into(),\n+                            });\n+\n+                        ProcMacro { name, kind, expander }\n                     })\n                     .collect()\n             }"}, {"sha": "b85f92eeada9dc4bbd705df08c484d06b8a2dedd", "filename": "crates/proc_macro_api/src/rpc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb21a215be0968d1102aba842c0fdedcd401cb15/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs?ref=fb21a215be0968d1102aba842c0fdedcd401cb15", "patch": "@@ -19,7 +19,7 @@ pub struct ListMacrosTask {\n     pub lib: PathBuf,\n }\n \n-#[derive(Clone, Eq, PartialEq, Debug, Serialize, Deserialize)]\n+#[derive(Copy, Clone, Eq, PartialEq, Debug, Serialize, Deserialize)]\n pub enum ProcMacroKind {\n     CustomDerive,\n     FuncLike,"}]}