{"sha": "e004b9431d608bc6fcceb7f175138dccce163eb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMDRiOTQzMWQ2MDhiYzZmY2NlYjdmMTc1MTM4ZGNjY2UxNjNlYjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-18T14:56:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-18T14:56:05Z"}, "message": "Auto merge of #5329 - matthiaskrgr:int_arith_on_ref_5328, r=flip1995\n\ninteger_arithmetic: detect integer arithmetic on references.\n\nchangelog: integer_arithmetic fix false negatives with references on integers\n\nFixes #5328", "tree": {"sha": "d57176635d6ee36001cae2da4523d68653f04aa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d57176635d6ee36001cae2da4523d68653f04aa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e004b9431d608bc6fcceb7f175138dccce163eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e004b9431d608bc6fcceb7f175138dccce163eb5", "html_url": "https://github.com/rust-lang/rust/commit/e004b9431d608bc6fcceb7f175138dccce163eb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e004b9431d608bc6fcceb7f175138dccce163eb5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08fc39813f56e109d7c1ecb3fce450bb3a08bede", "url": "https://api.github.com/repos/rust-lang/rust/commits/08fc39813f56e109d7c1ecb3fce450bb3a08bede", "html_url": "https://github.com/rust-lang/rust/commit/08fc39813f56e109d7c1ecb3fce450bb3a08bede"}, {"sha": "ec1dcde46b44b4fb6fabf4a5e0fc43dcb4277bb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec1dcde46b44b4fb6fabf4a5e0fc43dcb4277bb8", "html_url": "https://github.com/rust-lang/rust/commit/ec1dcde46b44b4fb6fabf4a5e0fc43dcb4277bb8"}], "stats": {"total": 539, "additions": 355, "deletions": 184}, "files": [{"sha": "c511733f7bf47b194572fdaaa5aadb7aed9bae99", "filename": "clippy_dev/src/stderr_length_check.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/clippy_dev%2Fsrc%2Fstderr_length_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/clippy_dev%2Fsrc%2Fstderr_length_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fstderr_length_check.rs?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -4,6 +4,8 @@ use std::path::{Path, PathBuf};\n \n use walkdir::WalkDir;\n \n+use clippy_dev::clippy_project_root;\n+\n // The maximum length allowed for stderr files.\n //\n // We limit this because small files are easier to deal with than bigger files.\n@@ -14,22 +16,24 @@ pub fn check() {\n \n     if !exceeding_files.is_empty() {\n         eprintln!(\"Error: stderr files exceeding limit of {} lines:\", LENGTH_LIMIT);\n-        for path in exceeding_files {\n-            println!(\"{}\", path.display());\n+        for (path, count) in exceeding_files {\n+            println!(\"{}: {}\", path.display(), count);\n         }\n         std::process::exit(1);\n     }\n }\n \n-fn exceeding_stderr_files() -> Vec<PathBuf> {\n+fn exceeding_stderr_files() -> Vec<(PathBuf, usize)> {\n     // We use `WalkDir` instead of `fs::read_dir` here in order to recurse into subdirectories.\n-    WalkDir::new(\"../tests/ui\")\n+    WalkDir::new(clippy_project_root().join(\"tests/ui\"))\n         .into_iter()\n         .filter_map(Result::ok)\n+        .filter(|f| !f.file_type().is_dir())\n         .filter_map(|e| {\n             let p = e.into_path();\n-            if p.extension() == Some(OsStr::new(\"stderr\")) && count_linenumbers(&p) > LENGTH_LIMIT {\n-                Some(p)\n+            let count = count_linenumbers(&p);\n+            if p.extension() == Some(OsStr::new(\"stderr\")) && count > LENGTH_LIMIT {\n+                Some((p, count))\n             } else {\n                 None\n             }"}, {"sha": "a138c9d3545c8389cae9a8751aea6ec578e71efb", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -81,11 +81,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Arithmetic {\n                     | hir::BinOpKind::Gt => return,\n                     _ => (),\n                 }\n+\n                 let (l_ty, r_ty) = (cx.tables.expr_ty(l), cx.tables.expr_ty(r));\n-                if l_ty.is_integral() && r_ty.is_integral() {\n+                if l_ty.peel_refs().is_integral() && r_ty.peel_refs().is_integral() {\n                     span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n                     self.expr_span = Some(expr.span);\n-                } else if l_ty.is_floating_point() && r_ty.is_floating_point() {\n+                } else if l_ty.peel_refs().is_floating_point() && r_ty.peel_refs().is_floating_point() {\n                     span_lint(cx, FLOAT_ARITHMETIC, expr.span, \"floating-point arithmetic detected\");\n                     self.expr_span = Some(expr.span);\n                 }"}, {"sha": "d999b69d7cbb7ad0e506eb826b0c94547e1d26ad", "filename": "tests/ui/arithmetic.stderr", "status": "removed", "additions": 0, "deletions": 127, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/08fc39813f56e109d7c1ecb3fce450bb3a08bede/tests%2Fui%2Farithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08fc39813f56e109d7c1ecb3fce450bb3a08bede/tests%2Fui%2Farithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.stderr?ref=08fc39813f56e109d7c1ecb3fce450bb3a08bede", "patch": "@@ -1,127 +0,0 @@\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:13:5\n-   |\n-LL |     1 + i;\n-   |     ^^^^^\n-   |\n-   = note: `-D clippy::integer-arithmetic` implied by `-D warnings`\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:14:5\n-   |\n-LL |     i * 2;\n-   |     ^^^^^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:15:5\n-   |\n-LL | /     1 %\n-LL | |     i / 2; // no error, this is part of the expression in the preceding line\n-   | |_________^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:17:5\n-   |\n-LL |     i - 2 + 2 - i;\n-   |     ^^^^^^^^^^^^^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:18:5\n-   |\n-LL |     -i;\n-   |     ^^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:30:5\n-   |\n-LL |     i += 1;\n-   |     ^^^^^^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:31:5\n-   |\n-LL |     i -= 1;\n-   |     ^^^^^^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:32:5\n-   |\n-LL |     i *= 2;\n-   |     ^^^^^^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:33:5\n-   |\n-LL |     i /= 2;\n-   |     ^^^^^^\n-\n-error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:34:5\n-   |\n-LL |     i %= 2;\n-   |     ^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:45:5\n-   |\n-LL |     f * 2.0;\n-   |     ^^^^^^^\n-   |\n-   = note: `-D clippy::float-arithmetic` implied by `-D warnings`\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:47:5\n-   |\n-LL |     1.0 + f;\n-   |     ^^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:48:5\n-   |\n-LL |     f * 2.0;\n-   |     ^^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:49:5\n-   |\n-LL |     f / 2.0;\n-   |     ^^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:50:5\n-   |\n-LL |     f - 2.0 * 4.2;\n-   |     ^^^^^^^^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:51:5\n-   |\n-LL |     -f;\n-   |     ^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:53:5\n-   |\n-LL |     f += 1.0;\n-   |     ^^^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:54:5\n-   |\n-LL |     f -= 1.0;\n-   |     ^^^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:55:5\n-   |\n-LL |     f *= 2.0;\n-   |     ^^^^^^^^\n-\n-error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:56:5\n-   |\n-LL |     f /= 2.0;\n-   |     ^^^^^^^^\n-\n-error: aborting due to 20 previous errors\n-"}, {"sha": "c986c992a07a626f53ed7bc398f15d26824f4081", "filename": "tests/ui/checked_unwrap/complex_conditionals.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.rs?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -51,15 +51,4 @@ fn test_complex_conditions() {\n     }\n }\n \n-fn test_nested() {\n-    fn nested() {\n-        let x = Some(());\n-        if x.is_some() {\n-            x.unwrap(); // unnecessary\n-        } else {\n-            x.unwrap(); // will panic\n-        }\n-    }\n-}\n-\n fn main() {}"}, {"sha": "dc666bab4603960fdb4928c1d05bf8495bb5e96e", "filename": "tests/ui/checked_unwrap/complex_conditionals.stderr", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -188,22 +188,5 @@ LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n LL |         z.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n-error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/complex_conditionals.rs:58:13\n-   |\n-LL |         if x.is_some() {\n-   |            ----------- the check is happening here\n-LL |             x.unwrap(); // unnecessary\n-   |             ^^^^^^^^^^\n-\n-error: This call to `unwrap()` will always panic.\n-  --> $DIR/complex_conditionals.rs:60:13\n-   |\n-LL |         if x.is_some() {\n-   |            ----------- because of this check\n-...\n-LL |             x.unwrap(); // will panic\n-   |             ^^^^^^^^^^\n-\n-error: aborting due to 22 previous errors\n+error: aborting due to 20 previous errors\n "}, {"sha": "2307996a48ffc62deef0f6d5e472d2cab5de9286", "filename": "tests/ui/checked_unwrap/complex_conditionals_nested.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.rs?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -0,0 +1,15 @@\n+#![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+#![allow(clippy::if_same_then_else)]\n+\n+fn test_nested() {\n+    fn nested() {\n+        let x = Some(());\n+        if x.is_some() {\n+            x.unwrap(); // unnecessary\n+        } else {\n+            x.unwrap(); // will panic\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "e4d085470c3b4200af404d3260974caca34ca731", "filename": "tests/ui/checked_unwrap/complex_conditionals_nested.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals_nested.stderr?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -0,0 +1,31 @@\n+error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/complex_conditionals_nested.rs:8:13\n+   |\n+LL |         if x.is_some() {\n+   |            ----------- the check is happening here\n+LL |             x.unwrap(); // unnecessary\n+   |             ^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/complex_conditionals_nested.rs:1:35\n+   |\n+LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: This call to `unwrap()` will always panic.\n+  --> $DIR/complex_conditionals_nested.rs:10:13\n+   |\n+LL |         if x.is_some() {\n+   |            ----------- because of this check\n+...\n+LL |             x.unwrap(); // will panic\n+   |             ^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/complex_conditionals_nested.rs:1:9\n+   |\n+LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "5ad320c620953dceb2ba258993bf1f73ae5b26c6", "filename": "tests/ui/float_arithmetic.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Ffloat_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Ffloat_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_arithmetic.rs?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -0,0 +1,53 @@\n+#![warn(clippy::integer_arithmetic, clippy::float_arithmetic)]\n+#![allow(\n+    unused,\n+    clippy::shadow_reuse,\n+    clippy::shadow_unrelated,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::op_ref,\n+    clippy::trivially_copy_pass_by_ref\n+)]\n+\n+#[rustfmt::skip]\n+fn main() {\n+    let mut f = 1.0f32;\n+\n+    f * 2.0;\n+\n+    1.0 + f;\n+    f * 2.0;\n+    f / 2.0;\n+    f - 2.0 * 4.2;\n+    -f;\n+\n+    f += 1.0;\n+    f -= 1.0;\n+    f *= 2.0;\n+    f /= 2.0;\n+}\n+\n+// also warn about floating point arith with references involved\n+\n+pub fn float_arith_ref() {\n+    3.1_f32 + &1.2_f32;\n+    &3.4_f32 + 1.5_f32;\n+    &3.5_f32 + &1.3_f32;\n+}\n+\n+pub fn float_foo(f: &f32) -> f32 {\n+    let a = 5.1;\n+    a + f\n+}\n+\n+pub fn float_bar(f1: &f32, f2: &f32) -> f32 {\n+    f1 + f2\n+}\n+\n+pub fn float_baz(f1: f32, f2: &f32) -> f32 {\n+    f1 + f2\n+}\n+\n+pub fn float_qux(f1: f32, f2: f32) -> f32 {\n+    (&f1 + &f2)\n+}"}, {"sha": "809392529fd9e67206a0a22ea9f7a4a6964d4cdf", "filename": "tests/ui/float_arithmetic.stderr", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Ffloat_arithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Ffloat_arithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_arithmetic.stderr?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -0,0 +1,106 @@\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:16:5\n+   |\n+LL |     f * 2.0;\n+   |     ^^^^^^^\n+   |\n+   = note: `-D clippy::float-arithmetic` implied by `-D warnings`\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:18:5\n+   |\n+LL |     1.0 + f;\n+   |     ^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:19:5\n+   |\n+LL |     f * 2.0;\n+   |     ^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:20:5\n+   |\n+LL |     f / 2.0;\n+   |     ^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:21:5\n+   |\n+LL |     f - 2.0 * 4.2;\n+   |     ^^^^^^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:22:5\n+   |\n+LL |     -f;\n+   |     ^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:24:5\n+   |\n+LL |     f += 1.0;\n+   |     ^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:25:5\n+   |\n+LL |     f -= 1.0;\n+   |     ^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:26:5\n+   |\n+LL |     f *= 2.0;\n+   |     ^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:27:5\n+   |\n+LL |     f /= 2.0;\n+   |     ^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:33:5\n+   |\n+LL |     3.1_f32 + &1.2_f32;\n+   |     ^^^^^^^^^^^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:34:5\n+   |\n+LL |     &3.4_f32 + 1.5_f32;\n+   |     ^^^^^^^^^^^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:35:5\n+   |\n+LL |     &3.5_f32 + &1.3_f32;\n+   |     ^^^^^^^^^^^^^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:40:5\n+   |\n+LL |     a + f\n+   |     ^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:44:5\n+   |\n+LL |     f1 + f2\n+   |     ^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:48:5\n+   |\n+LL |     f1 + f2\n+   |     ^^^^^^^\n+\n+error: floating-point arithmetic detected\n+  --> $DIR/float_arithmetic.rs:52:5\n+   |\n+LL |     (&f1 + &f2)\n+   |     ^^^^^^^^^^^\n+\n+error: aborting due to 17 previous errors\n+"}, {"sha": "31a07e7c35b0d5fd5354eaa01c3ec4c049820cb1", "filename": "tests/ui/integer_arithmetic.rs", "status": "renamed", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Finteger_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Finteger_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finteger_arithmetic.rs?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -4,7 +4,9 @@\n     clippy::shadow_reuse,\n     clippy::shadow_unrelated,\n     clippy::no_effect,\n-    clippy::unnecessary_operation\n+    clippy::unnecessary_operation,\n+    clippy::op_ref,\n+    clippy::trivially_copy_pass_by_ref\n )]\n \n #[rustfmt::skip]\n@@ -40,25 +42,6 @@ fn main() {\n     i &= 1;\n     i ^= i;\n \n-    let mut f = 1.0f32;\n-\n-    f * 2.0;\n-\n-    1.0 + f;\n-    f * 2.0;\n-    f / 2.0;\n-    f - 2.0 * 4.2;\n-    -f;\n-\n-    f += 1.0;\n-    f -= 1.0;\n-    f *= 2.0;\n-    f /= 2.0;\n-\n-    // no error, overflows are checked by `overflowing_literals`\n-    -1.;\n-    -(-1.);\n-\n     // No errors for the following items because they are constant expressions\n     enum Foo {\n         Bar = -2,\n@@ -90,4 +73,30 @@ fn main() {\n             1 + 1\n         };\n     }\n+\n+\n+}\n+\n+// warn on references as well! (#5328)\n+pub fn int_arith_ref() {\n+    3 + &1;\n+    &3 + 1;\n+    &3 + &1;\n+}\n+\n+pub fn foo(x: &i32) -> i32 {\n+    let a = 5;\n+    a + x\n+}\n+\n+pub fn bar(x: &i32, y: &i32) -> i32 {\n+    x + y\n+}\n+\n+pub fn baz(x: i32, y: &i32) -> i32 {\n+    x + y\n+}\n+\n+pub fn qux(x: i32, y: i32) -> i32 {\n+    (&x + &y)\n }", "previous_filename": "tests/ui/arithmetic.rs"}, {"sha": "0b8d0b767bf8ebd6576cfd1ad9a99becc73858ac", "filename": "tests/ui/integer_arithmetic.stderr", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Finteger_arithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e004b9431d608bc6fcceb7f175138dccce163eb5/tests%2Fui%2Finteger_arithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finteger_arithmetic.stderr?ref=e004b9431d608bc6fcceb7f175138dccce163eb5", "patch": "@@ -0,0 +1,107 @@\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:15:5\n+   |\n+LL |     1 + i;\n+   |     ^^^^^\n+   |\n+   = note: `-D clippy::integer-arithmetic` implied by `-D warnings`\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:16:5\n+   |\n+LL |     i * 2;\n+   |     ^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:17:5\n+   |\n+LL | /     1 %\n+LL | |     i / 2; // no error, this is part of the expression in the preceding line\n+   | |_________^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:19:5\n+   |\n+LL |     i - 2 + 2 - i;\n+   |     ^^^^^^^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:20:5\n+   |\n+LL |     -i;\n+   |     ^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:32:5\n+   |\n+LL |     i += 1;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:33:5\n+   |\n+LL |     i -= 1;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:34:5\n+   |\n+LL |     i *= 2;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:35:5\n+   |\n+LL |     i /= 2;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:36:5\n+   |\n+LL |     i %= 2;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:82:5\n+   |\n+LL |     3 + &1;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:83:5\n+   |\n+LL |     &3 + 1;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:84:5\n+   |\n+LL |     &3 + &1;\n+   |     ^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:89:5\n+   |\n+LL |     a + x\n+   |     ^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:93:5\n+   |\n+LL |     x + y\n+   |     ^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:97:5\n+   |\n+LL |     x + y\n+   |     ^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:101:5\n+   |\n+LL |     (&x + &y)\n+   |     ^^^^^^^^^\n+\n+error: aborting due to 17 previous errors\n+"}]}