{"sha": "b1453dda0f69148ba1ec627b3f9770603b7817d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNDUzZGRhMGY2OTE0OGJhMWVjNjI3YjNmOTc3MDYwM2I3ODE3ZDQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-20T08:22:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-20T08:36:25Z"}, "message": "make some things a bit more private", "tree": {"sha": "88c40c795ca5f65d088e5f2548ac14100cf30710", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88c40c795ca5f65d088e5f2548ac14100cf30710"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1453dda0f69148ba1ec627b3f9770603b7817d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1453dda0f69148ba1ec627b3f9770603b7817d4", "html_url": "https://github.com/rust-lang/rust/commit/b1453dda0f69148ba1ec627b3f9770603b7817d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1453dda0f69148ba1ec627b3f9770603b7817d4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "018d128325da01a236f94afac0e1b40ce1865e84", "url": "https://api.github.com/repos/rust-lang/rust/commits/018d128325da01a236f94afac0e1b40ce1865e84", "html_url": "https://github.com/rust-lang/rust/commit/018d128325da01a236f94afac0e1b40ce1865e84"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "e2a5d40a1236ef40ae5e7f1c33498ef4a0c963fe", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1453dda0f69148ba1ec627b3f9770603b7817d4/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1453dda0f69148ba1ec627b3f9770603b7817d4/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=b1453dda0f69148ba1ec627b3f9770603b7817d4", "patch": "@@ -77,7 +77,7 @@ pub fn mk_eval_cx<'a, 'tcx>(\n     Ok(ecx)\n }\n \n-pub fn eval_promoted<'a, 'mir, 'tcx>(\n+pub(crate) fn eval_promoted<'a, 'mir, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     cid: GlobalId<'tcx>,\n     mir: &'mir mir::Mir<'tcx>,"}, {"sha": "a17c469a0a62f1aea1a4a0220d2e2c5a8f639ad1", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1453dda0f69148ba1ec627b3f9770603b7817d4/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1453dda0f69148ba1ec627b3f9770603b7817d4/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=b1453dda0f69148ba1ec627b3f9770603b7817d4", "patch": "@@ -41,10 +41,10 @@ pub struct EvalContext<'a, 'mir, 'tcx: 'a + 'mir, M: Machine<'a, 'mir, 'tcx>> {\n     pub machine: M,\n \n     /// The results of the type checker, from rustc.\n-    pub tcx: TyCtxtAt<'a, 'tcx, 'tcx>,\n+    pub(crate) tcx: TyCtxtAt<'a, 'tcx, 'tcx>,\n \n     /// Bounds in scope for polymorphic evaluations.\n-    pub param_env: ty::ParamEnv<'tcx>,\n+    pub(crate) param_env: ty::ParamEnv<'tcx>,\n \n     /// The virtual memory system.\n     pub memory: Memory<'a, 'mir, 'tcx, M>,"}, {"sha": "b5eb06b82ff75b180bea4904d2e624abeaa30ec5", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b1453dda0f69148ba1ec627b3f9770603b7817d4/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1453dda0f69148ba1ec627b3f9770603b7817d4/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=b1453dda0f69148ba1ec627b3f9770603b7817d4", "patch": "@@ -57,7 +57,8 @@ pub struct Memory<'a, 'mir, 'tcx: 'a + 'mir, M: Machine<'a, 'mir, 'tcx>> {\n     /// that do not exist any more.\n     dead_alloc_map: FxHashMap<AllocId, (Size, Align)>,\n \n-    pub tcx: TyCtxtAt<'a, 'tcx, 'tcx>,\n+    /// Lets us implement `HasDataLayout`, which is awfully convenient.\n+    pub(super) tcx: TyCtxtAt<'a, 'tcx, 'tcx>,\n }\n \n impl<'b, 'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> HasDataLayout"}]}