{"sha": "045a4375561f80cc30ff15780fecc39a93c44a5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NWE0Mzc1NTYxZjgwY2MzMGZmMTU3ODBmZWNjMzlhOTNjNDRhNWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-16T21:52:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-16T21:52:08Z"}, "message": "rustc: Accept 'const' as synonym for 'mutable?'", "tree": {"sha": "246f3194dde17df9fcab5f6a4ab0c8acdde49673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/246f3194dde17df9fcab5f6a4ab0c8acdde49673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/045a4375561f80cc30ff15780fecc39a93c44a5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/045a4375561f80cc30ff15780fecc39a93c44a5b", "html_url": "https://github.com/rust-lang/rust/commit/045a4375561f80cc30ff15780fecc39a93c44a5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/045a4375561f80cc30ff15780fecc39a93c44a5b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f157d0b32c853250a902549b11dbd481465b8f45", "url": "https://api.github.com/repos/rust-lang/rust/commits/f157d0b32c853250a902549b11dbd481465b8f45", "html_url": "https://github.com/rust-lang/rust/commit/f157d0b32c853250a902549b11dbd481465b8f45"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "4e393777d2a172be247b05e780521bfeabc35eb3", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=045a4375561f80cc30ff15780fecc39a93c44a5b", "patch": "@@ -746,10 +746,13 @@ fn parse_path_and_ty_param_substs(p: parser) -> ast::path {\n \n fn parse_mutability(p: parser) -> ast::mutability {\n     if eat_word(p, \"mutable\") {\n-        if p.peek() == token::QUES { p.bump(); ret ast::maybe_mut; }\n-        ret ast::mut;\n+        if p.peek() == token::QUES { p.bump(); ast::maybe_mut }\n+        else { ast::mut }\n+    } else if eat_word(p, \"const\") {\n+        ast::maybe_mut\n+    } else {\n+        ast::imm\n     }\n-    ret ast::imm;\n }\n \n fn parse_field(p: parser, sep: token::token) -> ast::field {"}, {"sha": "e2d829f52174c28fd217bdd1ba289df2fcf1878d", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=045a4375561f80cc30ff15780fecc39a93c44a5b", "patch": "@@ -264,7 +264,7 @@ fn print_type(s: ps, &&ty: @ast::ty) {\n         word(s.s, \"[\");\n         alt mt.mut {\n           ast::mut. { word_space(s, \"mutable\"); }\n-          ast::maybe_mut. { word_space(s, \"mutable?\"); }\n+          ast::maybe_mut. { word_space(s, \"const\"); }\n           ast::imm. { }\n         }\n         print_type(s, mt.ty);"}, {"sha": "3d57531c8c66f2d4bc2b3fd0a1549d25542554ea", "filename": "src/test/run-pass/maybe-mutable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Ftest%2Frun-pass%2Fmaybe-mutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Ftest%2Frun-pass%2Fmaybe-mutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmaybe-mutable.rs?ref=045a4375561f80cc30ff15780fecc39a93c44a5b", "patch": "@@ -2,7 +2,7 @@\n \n \n // -*- rust -*-\n-fn len(v: [mutable? int]) -> uint {\n+fn len(v: [const int]) -> uint {\n     let i = 0u;\n     for x: int in v { i += 1u; }\n     ret i;"}, {"sha": "b36ec502896a3239910371b0eea9556b37b315cc", "filename": "src/test/run-pass/mutable-huh-variance-vec1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec1.rs?ref=045a4375561f80cc30ff15780fecc39a93c44a5b", "patch": "@@ -6,7 +6,7 @@ fn main() {\n     // This is ok because the outer vec is covariant with respect\n     // to the inner vec. If the outer vec was mutable then we\n     // couldn't do this.\n-    fn f(&&v: [[mutable? int]]) {\n+    fn f(&&v: [[const int]]) {\n     }\n \n     f(v);"}, {"sha": "82b0a029ba96d4a9f9df6905b903db85374fd581", "filename": "src/test/run-pass/mutable-huh-variance-vec2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045a4375561f80cc30ff15780fecc39a93c44a5b/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec2.rs?ref=045a4375561f80cc30ff15780fecc39a93c44a5b", "patch": "@@ -6,7 +6,7 @@ fn main() {\n     // This is ok because the outer vec is covariant with respect\n     // to the inner vec. If the outer vec was mutable then we\n     // couldn't do this.\n-    fn f(&&v: [mutable? [mutable? int]]) {\n+    fn f(&&v: [const [const int]]) {\n     }\n \n     f(v);"}]}