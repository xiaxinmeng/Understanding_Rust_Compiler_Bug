{"sha": "213c17486e26aa88b6088f0f015bb86cde6fdf8c", "node_id": "C_kwDOAAsO6NoAKDIxM2MxNzQ4NmUyNmFhODhiNjA4OGYwZjAxNWJiODZjZGU2ZmRmOGM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T11:26:53Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T11:26:53Z"}, "message": "Make `FunctionArgumentObligation` also use the \"no allocation for misc\" trick", "tree": {"sha": "978acd15cbbd835eb5185f7082631bf7833cfac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/978acd15cbbd835eb5185f7082631bf7833cfac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/213c17486e26aa88b6088f0f015bb86cde6fdf8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/213c17486e26aa88b6088f0f015bb86cde6fdf8c", "html_url": "https://github.com/rust-lang/rust/commit/213c17486e26aa88b6088f0f015bb86cde6fdf8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/213c17486e26aa88b6088f0f015bb86cde6fdf8c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b51e1ad2071a5cd31013a75df653b64dc6ca9c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5", "html_url": "https://github.com/rust-lang/rust/commit/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "664eef7ca5691ebad9fdcea527824fed5162042e", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/213c17486e26aa88b6088f0f015bb86cde6fdf8c/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213c17486e26aa88b6088f0f015bb86cde6fdf8c/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=213c17486e26aa88b6088f0f015bb86cde6fdf8c", "patch": "@@ -165,12 +165,9 @@ impl<'tcx> ObligationCause<'tcx> {\n \n     pub fn map_code(\n         &mut self,\n-        f: impl FnOnce(Lrc<ObligationCauseCode<'tcx>>) -> Lrc<ObligationCauseCode<'tcx>>,\n+        f: impl FnOnce(InternedObligationCauseCode<'tcx>) -> Lrc<ObligationCauseCode<'tcx>>,\n     ) {\n-        self.code = Some(f(match self.code.take() {\n-            Some(code) => code,\n-            None => Lrc::new(MISC_OBLIGATION_CAUSE_CODE),\n-        }));\n+        self.code = Some(f(InternedObligationCauseCode { code: self.code.take() }));\n     }\n \n     pub fn derived_cause(\n@@ -206,6 +203,19 @@ pub struct UnifyReceiverContext<'tcx> {\n     pub substs: SubstsRef<'tcx>,\n }\n \n+#[derive(Clone, Debug, PartialEq, Eq, Hash, Lift)]\n+pub struct InternedObligationCauseCode<'tcx> {\n+    code: Option<Lrc<ObligationCauseCode<'tcx>>>,\n+}\n+\n+impl<'tcx> std::ops::Deref for InternedObligationCauseCode<'tcx> {\n+    type Target = ObligationCauseCode<'tcx>;\n+\n+    fn deref(&self) -> &Self::Target {\n+        self.code.as_deref().unwrap_or(&MISC_OBLIGATION_CAUSE_CODE)\n+    }\n+}\n+\n #[derive(Clone, Debug, PartialEq, Eq, Hash, Lift)]\n pub enum ObligationCauseCode<'tcx> {\n     /// Not well classified or should be obvious from the span.\n@@ -293,7 +303,7 @@ pub enum ObligationCauseCode<'tcx> {\n         /// The node of the function call.\n         call_hir_id: hir::HirId,\n         /// The obligation introduced by this argument.\n-        parent_code: Lrc<ObligationCauseCode<'tcx>>,\n+        parent_code: InternedObligationCauseCode<'tcx>,\n     },\n \n     /// Error derived when matching traits/impls; see ObligationCause for more details"}, {"sha": "ee3e9544b4d60c5fd31c5b64eea95678a9b51cf0", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/213c17486e26aa88b6088f0f015bb86cde6fdf8c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213c17486e26aa88b6088f0f015bb86cde6fdf8c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=213c17486e26aa88b6088f0f015bb86cde6fdf8c", "patch": "@@ -1652,7 +1652,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             debug!(\"maybe_note_obligation_cause_for_async_await: code={:?}\", code);\n             match code {\n                 ObligationCauseCode::FunctionArgumentObligation { parent_code, .. } => {\n-                    next_code = Some(parent_code.as_ref());\n+                    next_code = Some(parent_code);\n                 }\n                 ObligationCauseCode::ImplDerivedObligation(cause) => {\n                     let ty = cause.derived.parent_trait_pred.skip_binder().self_ty();"}]}