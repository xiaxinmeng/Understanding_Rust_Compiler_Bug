{"sha": "11c184616842e26836ed541e9ec1236f85c63334", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYzE4NDYxNjg0MmUyNjgzNmVkNTQxZTllYzEyMzZmODVjNjMzMzQ=", "commit": {"author": {"name": "Igor Strebezhev", "email": "xamgore@ya.ru", "date": "2015-04-12T10:48:19Z"}, "committer": {"name": "Igor Strebezhev", "email": "xamgore@ya.ru", "date": "2015-04-12T10:48:19Z"}, "message": "mod.rs documentary fix\n\nDocs meant that Option is returned though the function returns Result.", "tree": {"sha": "ced9ea965dc6d0467064eda0f7a75476eb86c776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ced9ea965dc6d0467064eda0f7a75476eb86c776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11c184616842e26836ed541e9ec1236f85c63334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11c184616842e26836ed541e9ec1236f85c63334", "html_url": "https://github.com/rust-lang/rust/commit/11c184616842e26836ed541e9ec1236f85c63334", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11c184616842e26836ed541e9ec1236f85c63334/comments", "author": {"login": "xamgore", "id": 4586392, "node_id": "MDQ6VXNlcjQ1ODYzOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4586392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xamgore", "html_url": "https://github.com/xamgore", "followers_url": "https://api.github.com/users/xamgore/followers", "following_url": "https://api.github.com/users/xamgore/following{/other_user}", "gists_url": "https://api.github.com/users/xamgore/gists{/gist_id}", "starred_url": "https://api.github.com/users/xamgore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xamgore/subscriptions", "organizations_url": "https://api.github.com/users/xamgore/orgs", "repos_url": "https://api.github.com/users/xamgore/repos", "events_url": "https://api.github.com/users/xamgore/events{/privacy}", "received_events_url": "https://api.github.com/users/xamgore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xamgore", "id": 4586392, "node_id": "MDQ6VXNlcjQ1ODYzOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4586392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xamgore", "html_url": "https://github.com/xamgore", "followers_url": "https://api.github.com/users/xamgore/followers", "following_url": "https://api.github.com/users/xamgore/following{/other_user}", "gists_url": "https://api.github.com/users/xamgore/gists{/gist_id}", "starred_url": "https://api.github.com/users/xamgore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xamgore/subscriptions", "organizations_url": "https://api.github.com/users/xamgore/orgs", "repos_url": "https://api.github.com/users/xamgore/repos", "events_url": "https://api.github.com/users/xamgore/events{/privacy}", "received_events_url": "https://api.github.com/users/xamgore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "feeb23d42e0b1bc6f0466d4c6f035cfc3a4e9718", "url": "https://api.github.com/repos/rust-lang/rust/commits/feeb23d42e0b1bc6f0466d4c6f035cfc3a4e9718", "html_url": "https://github.com/rust-lang/rust/commit/feeb23d42e0b1bc6f0466d4c6f035cfc3a4e9718"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3fd179cf86f3a5a2510f4b0dc423cbe368d6cfa3", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11c184616842e26836ed541e9ec1236f85c63334/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11c184616842e26836ed541e9ec1236f85c63334/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=11c184616842e26836ed541e9ec1236f85c63334", "patch": "@@ -2705,7 +2705,7 @@ macro_rules! from_str_radix_float_impl {\n             ///\n             /// # Return value\n             ///\n-            /// `Err(ParseIntError)` if the string did not represent a valid number.  Otherwise,\n+            /// `Err(ParseFloatError)` if the string did not represent a valid number.\n             /// Otherwise, `Ok(n)` where `n` is the floating-point number represented by `src`.\n             #[inline]\n             #[allow(deprecated)]\n@@ -2734,7 +2734,7 @@ macro_rules! from_str_radix_float_impl {\n             ///\n             /// # Return value\n             ///\n-            /// `Err(ParseIntError)` if the string did not represent a valid number.  Otherwise,\n+            /// `Err(ParseFloatError)` if the string did not represent a valid number.\n             /// Otherwise, `Ok(n)` where `n` is the floating-point number represented by `src`.\n             fn from_str_radix(src: &str, radix: u32)\n                               -> Result<$T, ParseFloatError> {"}]}