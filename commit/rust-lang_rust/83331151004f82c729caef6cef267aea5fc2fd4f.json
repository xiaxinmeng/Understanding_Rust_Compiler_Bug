{"sha": "83331151004f82c729caef6cef267aea5fc2fd4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMzMxMTUxMDA0ZjgyYzcyOWNhZWY2Y2VmMjY3YWVhNWZjMmZkNGY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-08T23:53:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-08T23:53:58Z"}, "message": "Rollup merge of #68958 - GuillaumeGomez:clean-up-e0277-e0282, r=Dylan-DPC\n\nClean up E0277 and E0282 explanations\n\nr? @Dylan-DPC", "tree": {"sha": "2192ef1d0cedd084583ac447adb57dea65f574ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2192ef1d0cedd084583ac447adb57dea65f574ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83331151004f82c729caef6cef267aea5fc2fd4f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeP0oWCRBK7hj4Ov3rIwAAdHIIADcohc2L3GTwWYrUD0G1nn8B\nONZ4MnJJ7vQZDMaYLydAPoSy3Vyh31d/miF+ZS2jIGWqHVkhOmkikl7+4a/yHlhp\nIgwTicYL35K53QIToDJNpzibOhj0gNChi2xGrbSdPsRUO4ZddSxAz9aX4RQyPpbj\nOjWNseyIfizw3TK1Cd7s35NdiYiFfxtBsHSI23HLc4hVq+XDFIkYTJahuuWCOQF1\nCzzujV9+/H1B6x7wI3c3G4Uv7hup2dYedqGueUGD4QNybceHu8tFkAE8hmRduXwH\n4gDoEB6HsEIb3uDTP6KK+3X05hVTOtkLNz7MZFIsjUNu7umpbtOzHb5W/qUz+yo=\n=eV2a\n-----END PGP SIGNATURE-----\n", "payload": "tree 2192ef1d0cedd084583ac447adb57dea65f574ff\nparent d6087b91db85b35f93947b33c0bc0ba0b262c6f0\nparent 1177d0669ac213f12aee6c998b47ca1e8904ccf0\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581206038 +0100\ncommitter GitHub <noreply@github.com> 1581206038 +0100\n\nRollup merge of #68958 - GuillaumeGomez:clean-up-e0277-e0282, r=Dylan-DPC\n\nClean up E0277 and E0282 explanations\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83331151004f82c729caef6cef267aea5fc2fd4f", "html_url": "https://github.com/rust-lang/rust/commit/83331151004f82c729caef6cef267aea5fc2fd4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83331151004f82c729caef6cef267aea5fc2fd4f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6087b91db85b35f93947b33c0bc0ba0b262c6f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6087b91db85b35f93947b33c0bc0ba0b262c6f0", "html_url": "https://github.com/rust-lang/rust/commit/d6087b91db85b35f93947b33c0bc0ba0b262c6f0"}, {"sha": "1177d0669ac213f12aee6c998b47ca1e8904ccf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1177d0669ac213f12aee6c998b47ca1e8904ccf0", "html_url": "https://github.com/rust-lang/rust/commit/1177d0669ac213f12aee6c998b47ca1e8904ccf0"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "2e2cd5e01fb6a6cface9126163080c8748676708", "filename": "src/librustc_error_codes/error_codes/E0277.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83331151004f82c729caef6cef267aea5fc2fd4f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0277.md", "raw_url": "https://github.com/rust-lang/rust/raw/83331151004f82c729caef6cef267aea5fc2fd4f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0277.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0277.md?ref=83331151004f82c729caef6cef267aea5fc2fd4f", "patch": "@@ -1,5 +1,7 @@\n You tried to use a type which doesn't implement some trait in a place which\n-expected that trait. Erroneous code example:\n+expected that trait.\n+\n+Erroneous code example:\n \n ```compile_fail,E0277\n // here we declare the Foo trait with a bar method"}, {"sha": "49d2205f92c2a52dbb255a165c3a9bc8f8894495", "filename": "src/librustc_error_codes/error_codes/E0282.md", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/83331151004f82c729caef6cef267aea5fc2fd4f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0282.md", "raw_url": "https://github.com/rust-lang/rust/raw/83331151004f82c729caef6cef267aea5fc2fd4f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0282.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0282.md?ref=83331151004f82c729caef6cef267aea5fc2fd4f", "patch": "@@ -1,3 +1,11 @@\n+The compiler could not infer a type and asked for a type annotation.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0282\n+let x = \"hello\".chars().rev().collect();\n+```\n+\n This error indicates that type inference did not result in one unique possible\n type, and extra information is required. In most cases this can be provided\n by adding a type annotation. Sometimes you need to specify a generic type\n@@ -8,13 +16,9 @@ parameter with a `FromIterator` bound, which for a `char` iterator is\n implemented by `Vec` and `String` among others. Consider the following snippet\n that reverses the characters of a string:\n \n-```compile_fail,E0282\n-let x = \"hello\".chars().rev().collect();\n-```\n-\n-In this case, the compiler cannot infer what the type of `x` should be:\n-`Vec<char>` and `String` are both suitable candidates. To specify which type to\n-use, you can use a type annotation on `x`:\n+In the first code example, the compiler cannot infer what the type of `x` should\n+be: `Vec<char>` and `String` are both suitable candidates. To specify which type\n+to use, you can use a type annotation on `x`:\n \n ```\n let x: Vec<char> = \"hello\".chars().rev().collect();"}]}