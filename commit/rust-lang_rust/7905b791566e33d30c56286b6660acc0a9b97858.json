{"sha": "7905b791566e33d30c56286b6660acc0a9b97858", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MDViNzkxNTY2ZTMzZDMwYzU2Mjg2YjY2NjBhY2MwYTliOTc4NTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-15T20:40:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-19T03:00:51Z"}, "message": "port codemap to use dvec", "tree": {"sha": "43882aa118b94194b21bc3ba6c287e8881c9517f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43882aa118b94194b21bc3ba6c287e8881c9517f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7905b791566e33d30c56286b6660acc0a9b97858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7905b791566e33d30c56286b6660acc0a9b97858", "html_url": "https://github.com/rust-lang/rust/commit/7905b791566e33d30c56286b6660acc0a9b97858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7905b791566e33d30c56286b6660acc0a9b97858/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de1513f26a4f2d645c07d70aa00aa420037ef888", "url": "https://api.github.com/repos/rust-lang/rust/commits/de1513f26a4f2d645c07d70aa00aa420037ef888", "html_url": "https://github.com/rust-lang/rust/commit/de1513f26a4f2d645c07d70aa00aa420037ef888"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "976a5ee23eb47a4835db11bfd88664a5c7d82342", "filename": "src/librustsyntax/codemap.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7905b791566e33d30c56286b6660acc0a9b97858/src%2Flibrustsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7905b791566e33d30c56286b6660acc0a9b97858/src%2Flibrustsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fcodemap.rs?ref=7905b791566e33d30c56286b6660acc0a9b97858", "patch": "@@ -1,3 +1,5 @@\n+import dvec::{dvec, extensions};\n+\n export filename;\n export filemap;\n export span;\n@@ -42,11 +44,11 @@ type filemap =\n     @{name: filename, substr: file_substr, src: @str,\n       start_pos: file_pos, mut lines: [file_pos]};\n \n-type codemap = @{mut files: [filemap]};\n+type codemap = @{files: dvec<filemap>};\n \n type loc = {file: filemap, line: uint, col: uint};\n \n-fn new_codemap() -> codemap { @{mut files: [] } }\n+fn new_codemap() -> codemap { @{files: dvec()} }\n \n fn new_filemap_w_substr(filename: filename, substr: file_substr,\n                         src: @str,\n@@ -79,7 +81,7 @@ type lookup_fn = fn@(file_pos) -> uint;\n fn lookup_line(map: codemap, pos: uint, lookup: lookup_fn)\n     -> {fm: filemap, line: uint}\n {\n-    let len = vec::len(map.files);\n+    let len = map.files.len();\n     let mut a = 0u;\n     let mut b = len;\n     while b - a > 1u {"}, {"sha": "a8000ba4ac07be1815c604bb603daa5b19f67c11", "filename": "src/librustsyntax/parse.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7905b791566e33d30c56286b6660acc0a9b97858/src%2Flibrustsyntax%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7905b791566e33d30c56286b6660acc0a9b97858/src%2Flibrustsyntax%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse.rs?ref=7905b791566e33d30c56286b6660acc0a9b97858", "patch": "@@ -1,4 +1,5 @@\n #[doc = \"The main parser interface\"];\n+import dvec::extensions;\n \n export parse_sess;\n export next_node_id;\n@@ -152,7 +153,7 @@ fn new_parser_from_source_str(sess: parse_sess, cfg: ast::crate_cfg,\n     let ftype = parser::SOURCE_FILE;\n     let filemap = codemap::new_filemap_w_substr\n         (name, ss, source, sess.chpos, sess.byte_pos);\n-    sess.cm.files += [filemap];\n+    sess.cm.files.push(filemap);\n     let itr = @interner::mk(str::hash, str::eq);\n     let rdr = lexer::new_reader(sess.span_diagnostic,\n                                 filemap, itr);\n@@ -173,7 +174,7 @@ fn new_parser_from_file(sess: parse_sess, cfg: ast::crate_cfg, path: str,\n     };\n     let filemap = codemap::new_filemap(path, src,\n                                        sess.chpos, sess.byte_pos);\n-    sess.cm.files += [filemap];\n+    sess.cm.files.push(filemap);\n     let itr = @interner::mk(str::hash, str::eq);\n     let rdr = lexer::new_reader(sess.span_diagnostic, filemap, itr);\n     ret new_parser(sess, cfg, rdr, ftype);"}]}