{"sha": "2712fbed242ec2204249a096e4f40ba245d60919", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MTJmYmVkMjQyZWMyMjA0MjQ5YTA5NmU0ZjQwYmEyNDVkNjA5MTk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-18T14:34:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-18T14:34:54Z"}, "message": "Rollup merge of #52116 - Pazzaz:match-str-case, r=SimonSapin\n\nHandle array manually in str case conversion methods\n\nAvoiding the overhead incurred from `String.extend(char.to_lowercase())` showed a notable performance improvement when I benchmarked it.\n\nI tested on these strings:\n```rust\nALL_LOWER:       \"loremipsumdolorsitametduosensibusmnesarchumabcdefgh\"\nALL_UPPER:       \"LOREMIPSUMDOLORSITAMETDUOSENSIBUSMNESARCHUMABCDEFGH\"\nREALISTIC_UPPER: \"LOREM IPSUM DOLOR SIT AMET, DUO SENSIBUS MNESARCHUM\"\nSIGMAS:          \"\u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3, \u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\"\nWORD_UPPER:      \"Lorem Ipsum Dolor Sit Amet, Duo Sensibus Mnesarchum\"\n```\nthe performance improvements of `to_lowercase()` were\n```\nrunning 10 tests\ntest tests::all_lower           ... bench:       1,752 ns/iter (+/- 49)\ntest tests::all_lower_new       ... bench:       1,266 ns/iter (+/- 15)   -28%\ntest tests::all_upper           ... bench:       1,832 ns/iter (+/- 39)\ntest tests::all_upper_new       ... bench:       1,337 ns/iter (+/- 18)   -27%\ntest tests::realistic_upper     ... bench:       1,993 ns/iter (+/- 14)\ntest tests::realistic_upper_new ... bench:       1,445 ns/iter (+/- 22)   -27%\ntest tests::sigmas              ... bench:       1,342 ns/iter (+/- 39)\ntest tests::sigmas_new          ... bench:       1,226 ns/iter (+/- 16)    -9%\ntest tests::word_upper          ... bench:       1,899 ns/iter (+/- 12)\ntest tests::word_upper_new      ... bench:       1,381 ns/iter (+/- 26)   -27%\n```\nand of `to_uppercase()`\n```\nrunning 10 tests\ntest tests::all_lower           ... bench:       1,813 ns/iter (+/- 20)\ntest tests::all_lower_new       ... bench:       1,321 ns/iter (+/- 16)   -27%\ntest tests::all_upper           ... bench:       1,629 ns/iter (+/- 22)\ntest tests::all_upper_new       ... bench:       1,241 ns/iter (+/- 9)    -24%\ntest tests::realistic_upper     ... bench:       1,670 ns/iter (+/- 24)\ntest tests::realistic_upper_new ... bench:       1,241 ns/iter (+/- 17)   -26%\ntest tests::sigmas              ... bench:       2,053 ns/iter (+/- 20)\ntest tests::sigmas_new          ... bench:       1,753 ns/iter (+/- 23)   -15%\ntest tests::word_upper          ... bench:       1,873 ns/iter (+/- 30)\ntest tests::word_upper_new      ... bench:       1,412 ns/iter (+/- 25)   -25%\n```\nI gave up on the more advanced method from #52061 as it wasn't always a clear improvement and would help in even less cases if this PR was merged.", "tree": {"sha": "ea6748bb9a1c564aeaefb6ce0f954e279230540f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea6748bb9a1c564aeaefb6ce0f954e279230540f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2712fbed242ec2204249a096e4f40ba245d60919", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbT1AOCRBK7hj4Ov3rIwAAdHIIAG7BEtMZqO7X1zM1+Q0/B4cG\nCJUBg5DrFTyB/AtQGD64EiOvS2+qqLaJP8Dw8tz1PUJ3MB4bH/riAacCZYVLo48U\nKrrzSdjWtGmhgFD5+d86cE8fxQKKpSx1Q/UGhSP2WIQhmKD4LklIXkO+KNutsXHJ\nfRWece/eT9MitRkXgZaW44yRnSPFAp9S+eG2+xIBzjizfaHqlARDT+32JZAy4G0K\ni3h/r3/X5ZlrkVL9OravilUq7EoCTougC11lYc7Ac+Vu6GXGP22jFZ9d9VnAvJ7Z\nD4FZd7iPavrdLjDJnwI1xF5lT91UAKaPDD6SLUPv/UTT8qka2KhuxeEvrzqDSrQ=\n=OISy\n-----END PGP SIGNATURE-----\n", "payload": "tree ea6748bb9a1c564aeaefb6ce0f954e279230540f\nparent 29ee65411c46b8f701bd1f241725092cb1b347e6\nparent ad7621d42ee90143cd15715cc546177575fd5844\nauthor kennytm <kennytm@gmail.com> 1531924494 +0800\ncommitter GitHub <noreply@github.com> 1531924494 +0800\n\nRollup merge of #52116 - Pazzaz:match-str-case, r=SimonSapin\n\nHandle array manually in str case conversion methods\n\nAvoiding the overhead incurred from `String.extend(char.to_lowercase())` showed a notable performance improvement when I benchmarked it.\n\nI tested on these strings:\n```rust\nALL_LOWER:       \"loremipsumdolorsitametduosensibusmnesarchumabcdefgh\"\nALL_UPPER:       \"LOREMIPSUMDOLORSITAMETDUOSENSIBUSMNESARCHUMABCDEFGH\"\nREALISTIC_UPPER: \"LOREM IPSUM DOLOR SIT AMET, DUO SENSIBUS MNESARCHUM\"\nSIGMAS:          \"\u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3, \u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3 \u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\u03a3\"\nWORD_UPPER:      \"Lorem Ipsum Dolor Sit Amet, Duo Sensibus Mnesarchum\"\n```\nthe performance improvements of `to_lowercase()` were\n```\nrunning 10 tests\ntest tests::all_lower           ... bench:       1,752 ns/iter (+/- 49)\ntest tests::all_lower_new       ... bench:       1,266 ns/iter (+/- 15)   -28%\ntest tests::all_upper           ... bench:       1,832 ns/iter (+/- 39)\ntest tests::all_upper_new       ... bench:       1,337 ns/iter (+/- 18)   -27%\ntest tests::realistic_upper     ... bench:       1,993 ns/iter (+/- 14)\ntest tests::realistic_upper_new ... bench:       1,445 ns/iter (+/- 22)   -27%\ntest tests::sigmas              ... bench:       1,342 ns/iter (+/- 39)\ntest tests::sigmas_new          ... bench:       1,226 ns/iter (+/- 16)    -9%\ntest tests::word_upper          ... bench:       1,899 ns/iter (+/- 12)\ntest tests::word_upper_new      ... bench:       1,381 ns/iter (+/- 26)   -27%\n```\nand of `to_uppercase()`\n```\nrunning 10 tests\ntest tests::all_lower           ... bench:       1,813 ns/iter (+/- 20)\ntest tests::all_lower_new       ... bench:       1,321 ns/iter (+/- 16)   -27%\ntest tests::all_upper           ... bench:       1,629 ns/iter (+/- 22)\ntest tests::all_upper_new       ... bench:       1,241 ns/iter (+/- 9)    -24%\ntest tests::realistic_upper     ... bench:       1,670 ns/iter (+/- 24)\ntest tests::realistic_upper_new ... bench:       1,241 ns/iter (+/- 17)   -26%\ntest tests::sigmas              ... bench:       2,053 ns/iter (+/- 20)\ntest tests::sigmas_new          ... bench:       1,753 ns/iter (+/- 23)   -15%\ntest tests::word_upper          ... bench:       1,873 ns/iter (+/- 30)\ntest tests::word_upper_new      ... bench:       1,412 ns/iter (+/- 25)   -25%\n```\nI gave up on the more advanced method from #52061 as it wasn't always a clear improvement and would help in even less cases if this PR was merged.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2712fbed242ec2204249a096e4f40ba245d60919", "html_url": "https://github.com/rust-lang/rust/commit/2712fbed242ec2204249a096e4f40ba245d60919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2712fbed242ec2204249a096e4f40ba245d60919/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29ee65411c46b8f701bd1f241725092cb1b347e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/29ee65411c46b8f701bd1f241725092cb1b347e6", "html_url": "https://github.com/rust-lang/rust/commit/29ee65411c46b8f701bd1f241725092cb1b347e6"}, {"sha": "ad7621d42ee90143cd15715cc546177575fd5844", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7621d42ee90143cd15715cc546177575fd5844", "html_url": "https://github.com/rust-lang/rust/commit/ad7621d42ee90143cd15715cc546177575fd5844"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "4d6434c378e82cb50c3119273626a527149303b9", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2712fbed242ec2204249a096e4f40ba245d60919/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2712fbed242ec2204249a096e4f40ba245d60919/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=2712fbed242ec2204249a096e4f40ba245d60919", "patch": "@@ -45,6 +45,7 @@ use core::str::pattern::{Searcher, ReverseSearcher, DoubleEndedSearcher};\n use core::mem;\n use core::ptr;\n use core::iter::FusedIterator;\n+use core::unicode::conversions;\n \n use borrow::{Borrow, ToOwned};\n use boxed::Box;\n@@ -369,7 +370,18 @@ impl str {\n                 // See https://github.com/rust-lang/rust/issues/26035\n                 map_uppercase_sigma(self, i, &mut s)\n             } else {\n-                s.extend(c.to_lowercase());\n+                match conversions::to_lower(c) {\n+                    [a, '\\0', _] => s.push(a),\n+                    [a, b, '\\0'] => {\n+                        s.push(a);\n+                        s.push(b);\n+                    }\n+                    [a, b, c] => {\n+                        s.push(a);\n+                        s.push(b);\n+                        s.push(c);\n+                    }\n+                }\n             }\n         }\n         return s;\n@@ -423,7 +435,20 @@ impl str {\n     #[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]\n     pub fn to_uppercase(&self) -> String {\n         let mut s = String::with_capacity(self.len());\n-        s.extend(self.chars().flat_map(|c| c.to_uppercase()));\n+        for c in self[..].chars() {\n+            match conversions::to_upper(c) {\n+                [a, '\\0', _] => s.push(a),\n+                [a, b, '\\0'] => {\n+                    s.push(a);\n+                    s.push(b);\n+                }\n+                [a, b, c] => {\n+                    s.push(a);\n+                    s.push(b);\n+                    s.push(c);\n+                }\n+            }\n+        }\n         return s;\n     }\n "}, {"sha": "e5cda880f8807044ce97d25f482f31c942b370b1", "filename": "src/libcore/unicode/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2712fbed242ec2204249a096e4f40ba245d60919/src%2Flibcore%2Funicode%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2712fbed242ec2204249a096e4f40ba245d60919/src%2Flibcore%2Funicode%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fmod.rs?ref=2712fbed242ec2204249a096e4f40ba245d60919", "patch": "@@ -20,6 +20,9 @@ pub(crate) mod version;\n pub mod derived_property {\n     pub use unicode::tables::derived_property::{Case_Ignorable, Cased};\n }\n+pub mod conversions {\n+    pub use unicode::tables::conversions::{to_lower, to_upper};\n+}\n \n // For use in libsyntax\n pub mod property {"}]}