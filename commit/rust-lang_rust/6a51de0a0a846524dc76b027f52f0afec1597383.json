{"sha": "6a51de0a0a846524dc76b027f52f0afec1597383", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNTFkZTBhMGE4NDY1MjRkYzc2YjAyN2Y1MmYwYWZlYzE1OTczODM=", "commit": {"author": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-08-06T07:57:41Z"}, "committer": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-08-09T09:16:49Z"}, "message": "Casts are a type of binop\n\nThis just adds paren following the same cases as before", "tree": {"sha": "81dd3b283d9562b301f926c177c93d11ff3557e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81dd3b283d9562b301f926c177c93d11ff3557e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a51de0a0a846524dc76b027f52f0afec1597383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a51de0a0a846524dc76b027f52f0afec1597383", "html_url": "https://github.com/rust-lang/rust/commit/6a51de0a0a846524dc76b027f52f0afec1597383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a51de0a0a846524dc76b027f52f0afec1597383/comments", "author": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0c6af7f073620aacfb103c070e997a8d50b7201", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0c6af7f073620aacfb103c070e997a8d50b7201", "html_url": "https://github.com/rust-lang/rust/commit/c0c6af7f073620aacfb103c070e997a8d50b7201"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d59ab2ba565ca63621b956a6c96def70bf2d9f33", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a51de0a0a846524dc76b027f52f0afec1597383/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a51de0a0a846524dc76b027f52f0afec1597383/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=6a51de0a0a846524dc76b027f52f0afec1597383", "patch": "@@ -1753,7 +1753,7 @@ impl<'a> State<'a> {\n                 try!(self.print_literal(&**lit));\n             }\n             ast::ExprCast(ref expr, ref ty) => {\n-                try!(self.print_expr(&**expr));\n+                try!(self.print_expr_maybe_paren(&**expr));\n                 try!(space(&mut self.s));\n                 try!(self.word_space(\"as\"));\n                 try!(self.print_type(&**ty));"}]}