{"sha": "bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "node_id": "C_kwDOAAsO6NoAKGJiMDM3ZTZmYTc3NmY5YzhlMjhlNGYwNjY4YWRlYjI4MjRjNDE1Zjc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-12T15:04:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-12T15:04:32Z"}, "message": "Rollup merge of #110190 - cbeuw:mir-offset, r=oli-obk\n\nCustom MIR: Support `BinOp::Offset`\n\nSince offset doesn't have an infix operator, a new function `Offset` is added which is lowered to `Rvalue::BinaryOp(BinOp::Offset, ..)`\n\nr? ```@oli-obk``` or ```@tmiasko``` or ```@JakobDegen```", "tree": {"sha": "cab7a0d458f1a610f1ffed45dbc1d521bff01053", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cab7a0d458f1a610f1ffed45dbc1d521bff01053"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkNsiACRBK7hj4Ov3rIwAAGjUIAEfXdxh8zFLP32o6jKn90WJq\ntHrgaOTbO6LgRX1Lil8LnsOB8emN1vXakwBt8kcaFtsef131F+A8GMU31jji71Xt\n9erqv4FiFlL2LmkYfS9Ck7zlCQx0zZvl6KzvyXooSEdjHWN6GMGeSq4Xrr7tlmaa\nj6/kbT+LjKgPCfhKbohzPgQh7l8dC7tqkEYQv7/KXVab7joC/Eb9Zt+WPG6ThdIg\n3uH2TqYRji3kLnEvdjtg6+zgAPgta308SsekuVZ/po4WNZwNsZrlADpBi3Sc1ZgS\ncdXt7uTNUc2h/REX+S/Jz5dabBM4LuASeBdGmWio9XF8g9hgyHtf52gTobgBsP8=\n=bhfy\n-----END PGP SIGNATURE-----\n", "payload": "tree cab7a0d458f1a610f1ffed45dbc1d521bff01053\nparent 2118667ffa35e4e5dd1c31fd5d8011d3bf6bd5ab\nparent cecb901e683cdc1a2ffbb1e331ba4f262e2215c0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681311872 +0200\ncommitter GitHub <noreply@github.com> 1681311872 +0200\n\nRollup merge of #110190 - cbeuw:mir-offset, r=oli-obk\n\nCustom MIR: Support `BinOp::Offset`\n\nSince offset doesn't have an infix operator, a new function `Offset` is added which is lowered to `Rvalue::BinaryOp(BinOp::Offset, ..)`\n\nr? ```@oli-obk``` or ```@tmiasko``` or ```@JakobDegen```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "html_url": "https://github.com/rust-lang/rust/commit/bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2118667ffa35e4e5dd1c31fd5d8011d3bf6bd5ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/2118667ffa35e4e5dd1c31fd5d8011d3bf6bd5ab", "html_url": "https://github.com/rust-lang/rust/commit/2118667ffa35e4e5dd1c31fd5d8011d3bf6bd5ab"}, {"sha": "cecb901e683cdc1a2ffbb1e331ba4f262e2215c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cecb901e683cdc1a2ffbb1e331ba4f262e2215c0", "html_url": "https://github.com/rust-lang/rust/commit/cecb901e683cdc1a2ffbb1e331ba4f262e2215c0"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "931fe1b2433a0cb56efc6bebe1609cbde205117e", "filename": "compiler/rustc_mir_build/src/build/custom/parse/instruction.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs?ref=bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "patch": "@@ -148,6 +148,11 @@ impl<'tcx, 'body> ParseCtxt<'tcx, 'body> {\n                     )),\n                 )\n             },\n+            @call(\"mir_offset\", args) => {\n+                let ptr = self.parse_operand(args[0])?;\n+                let offset = self.parse_operand(args[1])?;\n+                Ok(Rvalue::BinaryOp(BinOp::Offset, Box::new((ptr, offset))))\n+            },\n             @call(\"mir_len\", args) => Ok(Rvalue::Len(self.parse_place(args[0])?)),\n             ExprKind::Borrow { borrow_kind, arg } => Ok(\n                 Rvalue::Ref(self.tcx.lifetimes.re_erased, *borrow_kind, self.parse_place(*arg)?)"}, {"sha": "d9d62eb759e69ca984a384a4c10ee3d4f5a42f27", "filename": "library/core/src/intrinsics/mir.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs?ref=bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "patch": "@@ -232,6 +232,7 @@\n //!  - `&`, `&mut`, `addr_of!`, and `addr_of_mut!` all work to create their associated rvalue.\n //!  - [`Discriminant`] and [`Len`] have associated functions.\n //!  - Unary and binary operations use their normal Rust syntax - `a * b`, `!c`, etc.\n+//!  - The binary operation `Offset` can be created via [`Offset`].\n //!  - Checked binary operations are represented by wrapping the associated binop in [`Checked`].\n //!  - Array repetition syntax (`[foo; 10]`) creates the associated rvalue.\n //!\n@@ -289,6 +290,7 @@ define!(\n     fn Discriminant<T>(place: T) -> <T as ::core::marker::DiscriminantKind>::Discriminant\n );\n define!(\"mir_set_discriminant\", fn SetDiscriminant<T>(place: T, index: u32));\n+define!(\"mir_offset\", fn Offset<T, U>(ptr: T, count: U) -> T);\n define!(\n     \"mir_field\",\n     /// Access the field with the given index of some place."}, {"sha": "f614aef4029d0127d091b66a6a2027929007339a", "filename": "tests/mir-opt/building/custom/references.raw_pointer_offset.built.after.mir", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.raw_pointer_offset.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.raw_pointer_offset.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.raw_pointer_offset.built.after.mir?ref=bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "patch": "@@ -0,0 +1,10 @@\n+// MIR for `raw_pointer_offset` after built\n+\n+fn raw_pointer_offset(_1: *const i32) -> *const i32 {\n+    let mut _0: *const i32;              // return place in scope 0 at $DIR/references.rs:+0:45: +0:55\n+\n+    bb0: {\n+        _0 = Offset(_1, const 1_isize);  // scope 0 at $DIR/references.rs:+2:9: +2:33\n+        return;                          // scope 0 at $DIR/references.rs:+3:9: +3:17\n+    }\n+}"}, {"sha": "f87f6664c7a5c55b86fa488c7f6092de604b84f3", "filename": "tests/mir-opt/building/custom/references.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb037e6fa776f9c8e28e4f0668adeb2824c415f7/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs?ref=bb037e6fa776f9c8e28e4f0668adeb2824c415f7", "patch": "@@ -45,11 +45,22 @@ pub fn raw_pointer(x: *const i32) -> *const i32 {\n     })\n }\n \n+// EMIT_MIR references.raw_pointer_offset.built.after.mir\n+#[custom_mir(dialect = \"built\")]\n+pub fn raw_pointer_offset(x: *const i32) -> *const i32 {\n+    mir!({\n+        RET = Offset(x, 1_isize);\n+        Return()\n+    })\n+}\n+\n fn main() {\n     let mut x = 5;\n+    let arr = [1, 2];\n     assert_eq!(*mut_ref(&mut x), 5);\n     assert_eq!(*immut_ref(&x), 5);\n     unsafe {\n         assert_eq!(*raw_pointer(addr_of!(x)), 5);\n+        assert_eq!(*raw_pointer_offset(addr_of!(arr[0])), 2);\n     }\n }"}]}