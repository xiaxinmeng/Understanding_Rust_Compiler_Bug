{"sha": "edb0717e7ca51dbde53f1dc26956efb0d90825c0", "node_id": "C_kwDOAAsO6NoAKGVkYjA3MTdlN2NhNTFkYmRlNTNmMWRjMjY5NTZlZmIwZDkwODI1YzA", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-03-16T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-03-16T21:55:45Z"}, "message": "Tweak implementation of overflow checking assertions\n\nExtract and reuse logic controlling behaviour of overflow checking\nassertions instead of duplicating it three times.", "tree": {"sha": "f0da9df344ce16a52bceee9f86473f5749873de0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0da9df344ce16a52bceee9f86473f5749873de0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edb0717e7ca51dbde53f1dc26956efb0d90825c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edb0717e7ca51dbde53f1dc26956efb0d90825c0", "html_url": "https://github.com/rust-lang/rust/commit/edb0717e7ca51dbde53f1dc26956efb0d90825c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edb0717e7ca51dbde53f1dc26956efb0d90825c0/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e42bea9fdef30787709ddd1de9259717954e7bd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e42bea9fdef30787709ddd1de9259717954e7bd6", "html_url": "https://github.com/rust-lang/rust/commit/e42bea9fdef30787709ddd1de9259717954e7bd6"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "1b8e9312e2f587f6095a2643f35844aad980b54a", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/edb0717e7ca51dbde53f1dc26956efb0d90825c0/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb0717e7ca51dbde53f1dc26956efb0d90825c0/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=edb0717e7ca51dbde53f1dc26956efb0d90825c0", "patch": "@@ -346,17 +346,10 @@ fn codegen_fn_body(fx: &mut FunctionCx<'_, '_, '_>, start_block: Block) {\n                 crate::abi::codegen_return(fx);\n             }\n             TerminatorKind::Assert { cond, expected, msg, target, cleanup: _ } => {\n-                if !fx.tcx.sess.overflow_checks() {\n-                    let overflow_not_to_check = match msg {\n-                        AssertKind::OverflowNeg(..) => true,\n-                        AssertKind::Overflow(op, ..) => op.is_checkable(),\n-                        _ => false,\n-                    };\n-                    if overflow_not_to_check {\n-                        let target = fx.get_block(*target);\n-                        fx.bcx.ins().jump(target, &[]);\n-                        continue;\n-                    }\n+                if !fx.tcx.sess.overflow_checks() && msg.is_optional_overflow_check() {\n+                    let target = fx.get_block(*target);\n+                    fx.bcx.ins().jump(target, &[]);\n+                    continue;\n                 }\n                 let cond = codegen_operand(fx, cond).load_scalar(fx);\n "}]}