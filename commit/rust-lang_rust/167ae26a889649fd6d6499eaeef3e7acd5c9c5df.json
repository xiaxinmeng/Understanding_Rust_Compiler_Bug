{"sha": "167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2N2FlMjZhODg5NjQ5ZmQ2ZDY0OTllYWVlZjNlN2FjZDVjOWM1ZGY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-08-22T18:52:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-22T18:52:54Z"}, "message": "Rollup merge of #88211 - petrochenkov:withhilo, r=jyn514\n\ncleanup: `Span::new` -> `Span::with_lo`\n\nExtracted from https://github.com/rust-lang/rust/pull/84373 as suggested in https://github.com/rust-lang/rust/pull/84373#issuecomment-857773867.\nIt turned out less useful then I expected, but anyway.\nr? `@cjgillot`\n`@bors` rollup", "tree": {"sha": "d76070466f359eb86baf0ac4f482f2b70bcb9874", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d76070466f359eb86baf0ac4f482f2b70bcb9874"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhIp0GCRBK7hj4Ov3rIwAApYQIACJTl0Xl3UO8scphQS4guQUq\n5aW+vLTr4h6YTjDo/ALdW6+9AvGoyeOiQPw9D3KnMg5r0xMaBh7k1llHXJr0RRTY\nnbTh8NWlZZYqiqew05OS+M0RcgT6npA4daO1TqUmNJHd0Sx0t4QruPVliwHwVSGK\n21qYYWWiZVHuKeiFeDsAZxYINq22sEIT7bZPx+Rudhi2R6+3YqgAB0sq6xo7ppc7\n7Ms6HcAPzBogOm+djID1oV+RkkE1xfknRPv38/TOLM4DdSbshYTkV++NqmdWMqjE\nxfrrm+9bj0hg+w6f1bjNX8+ERwB2CPt3PjSAw0X+bgm9eJijfueSsbj8HgAsFYw=\n=hotw\n-----END PGP SIGNATURE-----\n", "payload": "tree d76070466f359eb86baf0ac4f482f2b70bcb9874\nparent 2638d27ba56d9d1fac481de95522b00383d44b91\nparent 1df0b73196d0830413cc37659fe9da3a52002bd6\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1629658374 +0200\ncommitter GitHub <noreply@github.com> 1629658374 +0200\n\nRollup merge of #88211 - petrochenkov:withhilo, r=jyn514\n\ncleanup: `Span::new` -> `Span::with_lo`\n\nExtracted from https://github.com/rust-lang/rust/pull/84373 as suggested in https://github.com/rust-lang/rust/pull/84373#issuecomment-857773867.\nIt turned out less useful then I expected, but anyway.\nr? `@cjgillot`\n`@bors` rollup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "html_url": "https://github.com/rust-lang/rust/commit/167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2638d27ba56d9d1fac481de95522b00383d44b91", "url": "https://api.github.com/repos/rust-lang/rust/commits/2638d27ba56d9d1fac481de95522b00383d44b91", "html_url": "https://github.com/rust-lang/rust/commit/2638d27ba56d9d1fac481de95522b00383d44b91"}, {"sha": "1df0b73196d0830413cc37659fe9da3a52002bd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1df0b73196d0830413cc37659fe9da3a52002bd6", "html_url": "https://github.com/rust-lang/rust/commit/1df0b73196d0830413cc37659fe9da3a52002bd6"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "ffa26b9f299cba6a9136ee03f971bc4b0bf497e4", "filename": "compiler/rustc_middle/src/middle/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs?ref=167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "patch": "@@ -189,7 +189,7 @@ impl Scope {\n                 // To avoid issues with macro-generated spans, the span\n                 // of the statement must be nested in that of the block.\n                 if span.lo() <= stmt_span.lo() && stmt_span.lo() <= span.hi() {\n-                    return Span::new(stmt_span.lo(), span.hi(), span.ctxt());\n+                    return span.with_lo(stmt_span.lo());\n                 }\n             }\n         }"}, {"sha": "8d5bf98be9932b177037d98158f2376f12618a4c", "filename": "compiler/rustc_typeck/src/check/compare_method.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "patch": "@@ -708,11 +708,7 @@ fn compare_number_of_method_arguments<'tcx>(\n                         Some(if pos == 0 {\n                             arg.span\n                         } else {\n-                            Span::new(\n-                                trait_m_sig.decl.inputs[0].span.lo(),\n-                                arg.span.hi(),\n-                                arg.span.ctxt(),\n-                            )\n+                            arg.span.with_lo(trait_m_sig.decl.inputs[0].span.lo())\n                         })\n                     } else {\n                         trait_item_span\n@@ -731,11 +727,7 @@ fn compare_number_of_method_arguments<'tcx>(\n                     if pos == 0 {\n                         arg.span\n                     } else {\n-                        Span::new(\n-                            impl_m_sig.decl.inputs[0].span.lo(),\n-                            arg.span.hi(),\n-                            arg.span.ctxt(),\n-                        )\n+                        arg.span.with_lo(impl_m_sig.decl.inputs[0].span.lo())\n                     }\n                 } else {\n                     impl_m_span"}, {"sha": "db0f412f2a18c8ebc5302fe2c6419c957d0a9a09", "filename": "src/tools/clippy/clippy_lints/src/unit_return_expecting_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funit_return_expecting_ord.rs?ref=167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "patch": "@@ -127,7 +127,7 @@ fn check_arg<'tcx>(cx: &LateContext<'tcx>, arg: &'tcx Expr<'tcx>) -> Option<(Spa\n                 then {\n                     let data = stmt.span.data();\n                     // Make a span out of the semicolon for the help message\n-                    Some((span, Some(Span::new(data.hi-BytePos(1), data.hi, data.ctxt))))\n+                    Some((span, Some(data.with_lo(data.hi-BytePos(1)))))\n                 } else {\n                     Some((span, None))\n                 }"}, {"sha": "85d1f65c51f0911aaf1ab76ffb36ce496a759536", "filename": "src/tools/clippy/clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fwrite.rs?ref=167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "patch": "@@ -299,7 +299,7 @@ impl EarlyLintPass for Write {\n                     let nl_span = match (dest, only_nl) {\n                         // Special case of `write!(buf, \"\\n\")`: Mark everything from the end of\n                         // `buf` for removal so no trailing comma [`writeln!(buf, )`] remains.\n-                        (Some(dest_expr), true) => Span::new(dest_expr.span.hi(), nl_span.hi(), nl_span.ctxt()),\n+                        (Some(dest_expr), true) => nl_span.with_lo(dest_expr.span.hi()),\n                         _ => nl_span,\n                     };\n                     span_lint_and_then("}, {"sha": "2777e5bd0c4224beda24c2bdfb48ba6915f46eea", "filename": "src/tools/clippy/clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167ae26a889649fd6d6499eaeef3e7acd5c9c5df/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs?ref=167ae26a889649fd6d6499eaeef3e7acd5c9c5df", "patch": "@@ -881,7 +881,7 @@ fn line_span<T: LintContext>(cx: &T, span: Span) -> Span {\n     let source_map_and_line = cx.sess().source_map().lookup_line(span.lo()).unwrap();\n     let line_no = source_map_and_line.line;\n     let line_start = source_map_and_line.sf.lines[line_no];\n-    Span::new(line_start, span.hi(), span.ctxt())\n+    span.with_lo(line_start)\n }\n \n /// Gets the parent node, if any."}]}