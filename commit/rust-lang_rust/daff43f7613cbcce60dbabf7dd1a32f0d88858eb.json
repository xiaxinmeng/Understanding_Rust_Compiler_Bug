{"sha": "daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZmY0M2Y3NjEzY2JjY2U2MGRiYWJmN2RkMWEzMmYwZDg4ODU4ZWI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-23T06:30:12Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-23T06:35:56Z"}, "message": "Arg/line length bug", "tree": {"sha": "6c4e21f9f88bdf9b7cd88f481154f5c0f352d062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c4e21f9f88bdf9b7cd88f481154f5c0f352d062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "html_url": "https://github.com/rust-lang/rust/commit/daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4faaa4dab2d77ac3bc75b927ae3307665e5aff3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4faaa4dab2d77ac3bc75b927ae3307665e5aff3d", "html_url": "https://github.com/rust-lang/rust/commit/4faaa4dab2d77ac3bc75b927ae3307665e5aff3d"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "777120f5b97d8df3d98d8e3ba551ac2d31e82a40", "filename": "src/functions.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/src%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/src%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffunctions.rs?ref=daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "patch": "@@ -68,6 +68,9 @@ impl<'a> FmtVisitor<'a> {\n         let (one_line_budget, multi_line_budget, arg_indent) =\n             self.compute_budgets_for_args(&mut result, indent, ret_str.len(), newline_brace);\n \n+        debug!(\"rewrite_fn: one_line_budget: {}, multi_line_budget: {}, arg_indent: {}\",\n+               one_line_budget, multi_line_budget, arg_indent);\n+\n         result.push('(');\n         result.push_str(&self.rewrite_args(&fd.inputs,\n                                            explicit_self,\n@@ -252,8 +255,8 @@ impl<'a> FmtVisitor<'a> {\n         // Try keeping everything on the same line\n         if !result.contains(\"\\n\") {\n             // 3 = `() `, space is before ret_string\n-            let mut used_space = indent + result.len() + 3 + ret_str_len;\n-            if newline_brace {\n+            let mut used_space = indent + result.len() + ret_str_len + 3;\n+            if !newline_brace {\n                 used_space += 2;\n             }\n             let one_line_budget = if used_space > MAX_WIDTH {\n@@ -262,11 +265,13 @@ impl<'a> FmtVisitor<'a> {\n                 MAX_WIDTH - used_space\n             };\n \n+            // 2 = `()`\n             let used_space = indent + result.len() + 2;\n             let max_space = IDEAL_WIDTH + LEEWAY;\n+            debug!(\"compute_budgets_for_args: used_space: {}, max_space: {}\",\n+                   used_space, max_space);\n             if used_space < max_space {\n                 budgets = Some((one_line_budget,\n-                                // 2 = `()`\n                                 max_space - used_space,\n                                 indent + result.len() + 1));\n             }"}, {"sha": "d5f058a301b8d6773b01357cdb747b6c2b677c2a", "filename": "src/lists.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "patch": "@@ -63,6 +63,8 @@ pub fn write_list<'b>(items: &[(String, String)], formatting: &ListFormatting<'b\n \n     // Check if we need to fallback from horizontal listing, if possible.\n     if tactic == ListTactic::HorizontalVertical {\n+        debug!(\"write_list: total_width: {}, total_sep_len: {}, h_width: {}\",\n+               total_width, total_sep_len, formatting.h_width);\n         if total_width + total_sep_len > formatting.h_width {\n             tactic = ListTactic::Vertical;\n         } else {"}, {"sha": "c5f5150b3bb00caaf04df3324ff2ee9157c1444a", "filename": "src/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/src%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/src%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmod.rs?ref=daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "patch": "@@ -157,6 +157,7 @@ fn fmt_lines(changes: &mut ChangeSet) {\n         }\n \n         if newline_count > 1 {\n+            debug!(\"track truncate: {} {} {}\", f, text.len, newline_count);\n             truncate_todo.push((f, text.len - newline_count + 1))\n         }\n "}, {"sha": "0e299aaecc15eba5e2ca4a5bc2de02d3d5036364", "filename": "tests/idem/long-fn-1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/tests%2Fidem%2Flong-fn-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daff43f7613cbcce60dbabf7dd1a32f0d88858eb/tests%2Fidem%2Flong-fn-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Flong-fn-1.rs?ref=daff43f7613cbcce60dbabf7dd1a32f0d88858eb", "patch": "@@ -0,0 +1,13 @@\n+// Tests that a function which is almost short enough, but not quite, gets\n+// formatted correctly.\n+\n+impl Foo {\n+    fn some_input(&mut self,\n+                  input: Input,\n+                  input_path: Option<PathBuf>)\n+                  -> (Input, Option<PathBuf>) {\n+    }\n+\n+    fn some_inpu(&mut self, input: Input, input_path: Option<PathBuf>) -> (Input, Option<PathBuf>) {\n+    }\n+}"}]}