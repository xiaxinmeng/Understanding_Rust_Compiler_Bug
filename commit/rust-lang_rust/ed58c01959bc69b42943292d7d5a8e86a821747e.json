{"sha": "ed58c01959bc69b42943292d7d5a8e86a821747e", "node_id": "C_kwDOAAsO6NoAKGVkNThjMDE5NTliYzY5YjQyOTQzMjkyZDdkNWE4ZTg2YTgyMTc0N2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-04T12:27:53Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-04T12:36:14Z"}, "message": "don't point at nonexisting code beyond EOF when warning about unused delims\n\nPreviously we would show this:\n```\nwarning: unnecessary braces around block return value\n --> /tmp/bad.rs:1:8\n  |\n1 | fn a(){{{\n  |        ^  ^\n  |\n  = note: `#[warn(unused_braces)]` on by default\nhelp: remove these braces\n  |\n1 - fn a(){{{\n1 + fn a(){{\n  |\n```\n\nwhich is now hidden in this case.\nWe would create a span spanning between the pair of redundant {}s but there is only EOF instead of the `}` so we would previously point at nothing.\nThis would cause the debug assertion ice to trigger.\nI would have loved to just only point at the second delim and say \"you can remove that\" but I'm not sure how to do that without refactoring the entire diagnostic which seems tricky. :(\nBut given that this does not seem to regress any other tests we have, I think this edge-casey enough be acceptable.\n\nFixes https://github.com/rust-lang/rust/issues/107423\n\nr? @compiler-errors", "tree": {"sha": "2e4561ba7cbd8ddeea70ea958144c695acdbf313", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e4561ba7cbd8ddeea70ea958144c695acdbf313"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed58c01959bc69b42943292d7d5a8e86a821747e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed58c01959bc69b42943292d7d5a8e86a821747e", "html_url": "https://github.com/rust-lang/rust/commit/ed58c01959bc69b42943292d7d5a8e86a821747e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed58c01959bc69b42943292d7d5a8e86a821747e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9545094994f1ab45cab5799d5b45980871a9e97b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9545094994f1ab45cab5799d5b45980871a9e97b", "html_url": "https://github.com/rust-lang/rust/commit/9545094994f1ab45cab5799d5b45980871a9e97b"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "2f54227c425b886e3c41ede11543ec7d9212210a", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ed58c01959bc69b42943292d7d5a8e86a821747e/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed58c01959bc69b42943292d7d5a8e86a821747e/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=ed58c01959bc69b42943292d7d5a8e86a821747e", "patch": "@@ -661,6 +661,10 @@ trait UnusedDelimLint {\n         keep_space: (bool, bool),\n     ) {\n         let primary_span = if let Some((lo, hi)) = spans {\n+            if hi.is_empty() {\n+                // do not point at delims that do not exist\n+                return;\n+            }\n             MultiSpan::from(vec![lo, hi])\n         } else {\n             MultiSpan::from(value_span)"}, {"sha": "4003ee37ca1ea918de8b4b191c6501f660ffd5cf", "filename": "tests/ui/malformed/issue-107423-unused-delim-only-one-no-pair.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ed58c01959bc69b42943292d7d5a8e86a821747e/tests%2Fui%2Fmalformed%2Fissue-107423-unused-delim-only-one-no-pair.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed58c01959bc69b42943292d7d5a8e86a821747e/tests%2Fui%2Fmalformed%2Fissue-107423-unused-delim-only-one-no-pair.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmalformed%2Fissue-107423-unused-delim-only-one-no-pair.rs?ref=ed58c01959bc69b42943292d7d5a8e86a821747e", "patch": "@@ -0,0 +1,7 @@\n+// check that we don't generate a span that points beyond EOF\n+\n+// error-pattern: unclosed delimiter\n+// error-pattern: unclosed delimiter\n+// error-pattern: unclosed delimiter\n+\n+fn a(){{{"}, {"sha": "0479035171e893449a8a3d9a8159edd607ae4f90", "filename": "tests/ui/malformed/issue-107423-unused-delim-only-one-no-pair.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ed58c01959bc69b42943292d7d5a8e86a821747e/tests%2Fui%2Fmalformed%2Fissue-107423-unused-delim-only-one-no-pair.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed58c01959bc69b42943292d7d5a8e86a821747e/tests%2Fui%2Fmalformed%2Fissue-107423-unused-delim-only-one-no-pair.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmalformed%2Fissue-107423-unused-delim-only-one-no-pair.stderr?ref=ed58c01959bc69b42943292d7d5a8e86a821747e", "patch": "@@ -0,0 +1,32 @@\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-107423-unused-delim-only-one-no-pair.rs:7:11\n+   |\n+LL | fn a(){{{\n+   |       --- ^\n+   |       |||\n+   |       ||unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-107423-unused-delim-only-one-no-pair.rs:7:11\n+   |\n+LL | fn a(){{{\n+   |       --- ^\n+   |       |||\n+   |       ||unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-107423-unused-delim-only-one-no-pair.rs:7:11\n+   |\n+LL | fn a(){{{\n+   |       --- ^\n+   |       |||\n+   |       ||unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: aborting due to 3 previous errors\n+"}]}