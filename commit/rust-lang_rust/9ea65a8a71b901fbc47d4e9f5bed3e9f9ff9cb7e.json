{"sha": "9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYTY1YThhNzFiOTAxZmJjNDdkNGU5ZjViZWQzZTlmOWZmOWNiN2U=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-07-25T05:19:30Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-07-25T05:19:30Z"}, "message": "Add missing impl and tests for int to int TryFrom impls", "tree": {"sha": "1882ff68165056de53cafa928d1278ed21dae36a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1882ff68165056de53cafa928d1278ed21dae36a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e", "html_url": "https://github.com/rust-lang/rust/commit/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c46c6c59dbee8d6385f8924fe27cc5a7893841f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c46c6c59dbee8d6385f8924fe27cc5a7893841f", "html_url": "https://github.com/rust-lang/rust/commit/7c46c6c59dbee8d6385f8924fe27cc5a7893841f"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "c6c91dacdc7ee61d7ba5012d0fb2a603c148da21", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e", "patch": "@@ -2627,21 +2627,24 @@ try_from_both_bounded!(i32, u16, u8);\n try_from_both_bounded!(i64, u32, u16, u8);\n try_from_both_bounded!(i128, u64, u32, u16, u8);\n \n-#[unstable(feature = \"try_from\", issue = \"33417\")]\n-pub use self::ptr_try_from_impls::*;\n+// usize/isize\n+try_from_unbounded!(usize, usize);\n+try_from_upper_bounded!(usize, isize);\n+try_from_lower_bounded!(isize, usize);\n+try_from_unbounded!(isize, isize);\n \n #[cfg(target_pointer_width = \"16\")]\n mod ptr_try_from_impls {\n     use super::TryFromIntError;\n     use convert::TryFrom;\n \n     try_from_upper_bounded!(usize, u8);\n-    try_from_unbounded!(usize, usize, u16, u32, u64, u128);\n-    try_from_upper_bounded!(usize, i8, i16, isize);\n+    try_from_unbounded!(usize, u16, u32, u64, u128);\n+    try_from_upper_bounded!(usize, i8, i16);\n     try_from_unbounded!(usize, i32, i64, i128);\n \n     try_from_both_bounded!(isize, u8);\n-    try_from_lower_bounded!(isize, usize, u16, u32, u64, u128);\n+    try_from_lower_bounded!(isize, u16, u32, u64, u128);\n     try_from_both_bounded!(isize, i8);\n     try_from_unbounded!(isize, i16, i32, i64, i128);\n \n@@ -2662,12 +2665,12 @@ mod ptr_try_from_impls {\n     use convert::TryFrom;\n \n     try_from_upper_bounded!(usize, u8, u16);\n-    try_from_unbounded!(usize, usize, u32, u64, u128);\n-    try_from_upper_bounded!(usize, i8, i16, i32, isize);\n+    try_from_unbounded!(usize, u32, u64, u128);\n+    try_from_upper_bounded!(usize, i8, i16, i32);\n     try_from_unbounded!(usize, i64, i128);\n \n     try_from_both_bounded!(isize, u8, u16);\n-    try_from_lower_bounded!(isize, usize, u32, u64, u128);\n+    try_from_lower_bounded!(isize, u32, u64, u128);\n     try_from_both_bounded!(isize, i8, i16);\n     try_from_unbounded!(isize, i32, i64, i128);\n \n@@ -2688,12 +2691,12 @@ mod ptr_try_from_impls {\n     use convert::TryFrom;\n \n     try_from_upper_bounded!(usize, u8, u16, u32);\n-    try_from_unbounded!(usize, usize, u64, u128);\n-    try_from_upper_bounded!(usize, i8, i16, i32, i64, isize);\n+    try_from_unbounded!(usize, u64, u128);\n+    try_from_upper_bounded!(usize, i8, i16, i32, i64);\n     try_from_unbounded!(usize, i128);\n \n     try_from_both_bounded!(isize, u8, u16, u32);\n-    try_from_lower_bounded!(isize, usize, u64, u128);\n+    try_from_lower_bounded!(isize, u64, u128);\n     try_from_both_bounded!(isize, i8, i16, i32);\n     try_from_unbounded!(isize, i64, i128);\n "}, {"sha": "046b81e19f70d441ad67bb44905fdd9c826beb2a", "filename": "src/libcore/tests/num/mod.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs?ref=9ea65a8a71b901fbc47d4e9f5bed3e9f9ff9cb7e", "patch": "@@ -279,7 +279,7 @@ test_impl_try_from_always_ok! { test_try_u64u64, u64, u64 }\n test_impl_try_from_always_ok! { test_try_u64u128, u64, u128 }\n test_impl_try_from_always_ok! { test_try_u64i128, u64, i128 }\n \n-test_impl_try_from_always_ok! { test_try_u128, u128, u128 }\n+test_impl_try_from_always_ok! { test_try_u128u128, u128, u128 }\n \n test_impl_try_from_always_ok! { test_try_i8i8, i8, i8 }\n test_impl_try_from_always_ok! { test_try_i8i16, i8, i16 }\n@@ -301,8 +301,12 @@ test_impl_try_from_always_ok! { test_try_i64i128, i64, i128 }\n \n test_impl_try_from_always_ok! { test_try_i128i128, i128, i128 }\n \n+test_impl_try_from_always_ok! { test_try_usizeusize, usize, usize }\n+test_impl_try_from_always_ok! { test_try_isizeisize, isize, isize }\n+\n assume_usize_width! {\n     test_impl_try_from_always_ok! { test_try_u8usize, u8, usize }\n+    test_impl_try_from_always_ok! { test_try_u8isize, u8, isize }\n     test_impl_try_from_always_ok! { test_try_i8isize, i8, isize }\n \n     test_impl_try_from_always_ok! { test_try_u16usize, u16, usize }\n@@ -317,19 +321,27 @@ assume_usize_width! {\n \n     cfg_block!(\n         #[cfg(target_pointer_width = \"16\")] {\n-            test_impl_try_from_always_ok! { test_try_u16usize, u16, usize }\n-            test_impl_try_from_always_ok! { test_try_i16isize, i16, isize }\n+            test_impl_try_from_always_ok! { test_try_usizeu16, usize, u16 }\n+            test_impl_try_from_always_ok! { test_try_isizei16, isize, i16 }\n+            test_impl_try_from_always_ok! { test_try_usizeu32, usize, u32 }\n+            test_impl_try_from_always_ok! { test_try_usizei32, usize, i32 }\n+            test_impl_try_from_always_ok! { test_try_isizei32, isize, i32 }\n+            test_impl_try_from_always_ok! { test_try_usizei64, usize, i64 }\n         }\n \n         #[cfg(target_pointer_width = \"32\")] {\n+            test_impl_try_from_always_ok! { test_try_u16isize, u16, isize }\n             test_impl_try_from_always_ok! { test_try_usizeu32, usize, u32 }\n             test_impl_try_from_always_ok! { test_try_isizei32, isize, i32 }\n             test_impl_try_from_always_ok! { test_try_u32usize, u32, usize }\n             test_impl_try_from_always_ok! { test_try_i32isize, i32, isize }\n+            test_impl_try_from_always_ok! { test_try_usizei64, usize, i64 }\n         }\n \n         #[cfg(target_pointer_width = \"64\")] {\n+            test_impl_try_from_always_ok! { test_try_u16isize, u16, isize }\n             test_impl_try_from_always_ok! { test_try_u32usize, u32, usize }\n+            test_impl_try_from_always_ok! { test_try_u32isize, u32, isize }\n             test_impl_try_from_always_ok! { test_try_i32isize, i32, isize }\n             test_impl_try_from_always_ok! { test_try_u64usize, u64, usize }\n             test_impl_try_from_always_ok! { test_try_i64isize, i64, isize }\n@@ -451,8 +463,8 @@ assume_usize_width! {\n \n     cfg_block!(\n         #[cfg(target_pointer_width = \"16\")] {\n+            test_impl_try_from_unsigned_to_signed_upper_err! { test_try_u16isize, u16, isize }\n             test_impl_try_from_unsigned_to_signed_upper_err! { test_try_u32isize, u32, isize }\n-            test_impl_try_from_unsigned_to_signed_upper_err! { test_try_u32isize, u64, isize }\n         }\n \n         #[cfg(target_pointer_width = \"32\")] {"}]}