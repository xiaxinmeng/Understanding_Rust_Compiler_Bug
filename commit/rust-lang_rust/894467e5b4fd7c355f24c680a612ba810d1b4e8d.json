{"sha": "894467e5b4fd7c355f24c680a612ba810d1b4e8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NDQ2N2U1YjRmZDdjMzU1ZjI0YzY4MGE2MTJiYTgxMGQxYjRlOGQ=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-17T11:26:22Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-30T17:10:41Z"}, "message": "rustc_codegen_llvm: use safe references for Linker.", "tree": {"sha": "782ed363ba6e07cf68e7f6f2e378a349b937eda6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/782ed363ba6e07cf68e7f6f2e378a349b937eda6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/894467e5b4fd7c355f24c680a612ba810d1b4e8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/894467e5b4fd7c355f24c680a612ba810d1b4e8d", "html_url": "https://github.com/rust-lang/rust/commit/894467e5b4fd7c355f24c680a612ba810d1b4e8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/894467e5b4fd7c355f24c680a612ba810d1b4e8d/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c1d7fbb8373321d043f4658f310c0b869124cdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1d7fbb8373321d043f4658f310c0b869124cdc", "html_url": "https://github.com/rust-lang/rust/commit/2c1d7fbb8373321d043f4658f310c0b869124cdc"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "d5d21eb91ecba497c9538ab0c6c20e63e6ee9788", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/894467e5b4fd7c355f24c680a612ba810d1b4e8d/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/894467e5b4fd7c355f24c680a612ba810d1b4e8d/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=894467e5b4fd7c355f24c680a612ba810d1b4e8d", "patch": "@@ -294,10 +294,10 @@ fn fat_lto(cgcx: &CodegenContext,\n     }])\n }\n \n-struct Linker(llvm::LinkerRef);\n+struct Linker<'a>(&'a mut llvm::Linker<'a>);\n \n-impl Linker {\n-    fn new(llmod: &llvm::Module) -> Linker {\n+impl Linker<'a> {\n+    fn new(llmod: &'a llvm::Module) -> Self {\n         unsafe { Linker(llvm::LLVMRustLinkerNew(llmod)) }\n     }\n \n@@ -314,9 +314,9 @@ impl Linker {\n     }\n }\n \n-impl Drop for Linker {\n+impl Drop for Linker<'a> {\n     fn drop(&mut self) {\n-        unsafe { llvm::LLVMRustLinkerFree(self.0); }\n+        unsafe { llvm::LLVMRustLinkerFree(&mut *(self.0 as *mut _)); }\n     }\n }\n "}, {"sha": "ddd7809abc7314069e0910e9bf43ec0d3e159bc4", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/894467e5b4fd7c355f24c680a612ba810d1b4e8d/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/894467e5b4fd7c355f24c680a612ba810d1b4e8d/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=894467e5b4fd7c355f24c680a612ba810d1b4e8d", "patch": "@@ -414,8 +414,7 @@ extern { pub type SMDiagnostic; }\n extern { pub type RustArchiveMember; }\n pub type RustArchiveMemberRef = *mut RustArchiveMember;\n pub struct OperandBundleDef<'a>(InvariantOpaque<'a>);\n-extern { pub type Linker; }\n-pub type LinkerRef = *mut Linker;\n+pub struct Linker<'a>(InvariantOpaque<'a>);\n \n pub type DiagnosticHandler = unsafe extern \"C\" fn(&DiagnosticInfo, *mut c_void);\n pub type InlineAsmDiagHandler = unsafe extern \"C\" fn(&SMDiagnostic, *const c_void, c_uint);\n@@ -1580,9 +1579,9 @@ extern \"C\" {\n                                            CU2: &mut *mut c_void);\n     pub fn LLVMRustThinLTOPatchDICompileUnit(M: &Module, CU: *mut c_void);\n \n-    pub fn LLVMRustLinkerNew(M: &Module) -> LinkerRef;\n-    pub fn LLVMRustLinkerAdd(linker: LinkerRef,\n+    pub fn LLVMRustLinkerNew(M: &'a Module) -> &'a mut Linker<'a>;\n+    pub fn LLVMRustLinkerAdd(linker: &Linker,\n                              bytecode: *const c_char,\n                              bytecode_len: usize) -> bool;\n-    pub fn LLVMRustLinkerFree(linker: LinkerRef);\n+    pub fn LLVMRustLinkerFree(linker: &'a mut Linker<'a>);\n }"}]}