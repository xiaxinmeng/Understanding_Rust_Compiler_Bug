{"sha": "d5e77a3c75d1268880c7613c60593748ab6de4c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZTc3YTNjNzVkMTI2ODg4MGM3NjEzYzYwNTkzNzQ4YWI2ZGU0YzU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-04T10:07:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-13T05:29:10Z"}, "message": "impl graphviz trait for a newtype of regioncx", "tree": {"sha": "36986b82534e91656540164003bb58053dfc6164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36986b82534e91656540164003bb58053dfc6164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5e77a3c75d1268880c7613c60593748ab6de4c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e77a3c75d1268880c7613c60593748ab6de4c5", "html_url": "https://github.com/rust-lang/rust/commit/d5e77a3c75d1268880c7613c60593748ab6de4c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5e77a3c75d1268880c7613c60593748ab6de4c5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed366980310c6bd77a5a879dc3726ad55d48c5fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed366980310c6bd77a5a879dc3726ad55d48c5fa", "html_url": "https://github.com/rust-lang/rust/commit/ed366980310c6bd77a5a879dc3726ad55d48c5fa"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "641d7ed342c245068e1ed616c07c531ff718d6f4", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5e77a3c75d1268880c7613c60593748ab6de4c5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e77a3c75d1268880c7613c60593748ab6de4c5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=d5e77a3c75d1268880c7613c60593748ab6de4c5", "patch": "@@ -296,7 +296,7 @@ fn dump_mir_results<'a, 'gcx, 'tcx>(\n     let _: io::Result<()> = do catch {\n         let mut file =\n             pretty::create_dump_file(infcx.tcx, \"regioncx.dot\", None, \"nll\", &0, source)?;\n-        regioncx.dump_graphviz(&mut file)?;\n+        regioncx.dump_graphviz_raw_constraints(&mut file)?;\n     };\n }\n "}, {"sha": "2e41c8f8dd6a293376462d6b22c0f660b46f5a15", "filename": "src/librustc_mir/borrow_check/nll/region_infer/graphviz.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d5e77a3c75d1268880c7613c60593748ab6de4c5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e77a3c75d1268880c7613c60593748ab6de4c5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fgraphviz.rs?ref=d5e77a3c75d1268880c7613c60593748ab6de4c5", "patch": "@@ -19,15 +19,18 @@ use std::io::{self, Write};\n use super::*;\n use borrow_check::nll::constraints::OutlivesConstraint;\n \n-\n impl<'tcx> RegionInferenceContext<'tcx> {\n     /// Write out the region constraint graph.\n-    pub(crate) fn dump_graphviz(&self, mut w: &mut dyn Write) -> io::Result<()> {\n-        dot::render(self, &mut w)\n+    pub(crate) fn dump_graphviz_raw_constraints(&self, mut w: &mut dyn Write) -> io::Result<()> {\n+        dot::render(&RawConstraints { regioncx: self }, &mut w)\n     }\n }\n \n-impl<'this, 'tcx> dot::Labeller<'this> for RegionInferenceContext<'tcx> {\n+struct RawConstraints<'a, 'tcx: 'a> {\n+    regioncx: &'a RegionInferenceContext<'tcx>\n+}\n+\n+impl<'a, 'this, 'tcx> dot::Labeller<'this> for RawConstraints<'a, 'tcx> {\n     type Node = RegionVid;\n     type Edge = OutlivesConstraint;\n \n@@ -48,16 +51,16 @@ impl<'this, 'tcx> dot::Labeller<'this> for RegionInferenceContext<'tcx> {\n     }\n }\n \n-impl<'this, 'tcx> dot::GraphWalk<'this> for RegionInferenceContext<'tcx> {\n+impl<'a, 'this, 'tcx> dot::GraphWalk<'this> for RawConstraints<'a, 'tcx> {\n     type Node = RegionVid;\n     type Edge = OutlivesConstraint;\n \n     fn nodes(&'this self) -> dot::Nodes<'this, RegionVid> {\n-        let vids: Vec<RegionVid> = self.definitions.indices().collect();\n+        let vids: Vec<RegionVid> = self.regioncx.definitions.indices().collect();\n         vids.into_cow()\n     }\n     fn edges(&'this self) -> dot::Edges<'this, OutlivesConstraint> {\n-        (&self.constraints.raw[..]).into_cow()\n+        (&self.regioncx.constraints.raw[..]).into_cow()\n     }\n \n     // Render `a: b` as `a <- b`, indicating the flow"}]}