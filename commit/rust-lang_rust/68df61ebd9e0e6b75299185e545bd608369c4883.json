{"sha": "68df61ebd9e0e6b75299185e545bd608369c4883", "node_id": "C_kwDOAAsO6NoAKDY4ZGY2MWViZDllMGU2Yjc1Mjk5MTg1ZTU0NWJkNjA4MzY5YzQ4ODM", "commit": {"author": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2023-05-23T00:06:58Z"}, "committer": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2023-05-23T00:06:58Z"}, "message": "remove todo", "tree": {"sha": "92329c3ed2289b42494c4c37950fb2a481c48135", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92329c3ed2289b42494c4c37950fb2a481c48135"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68df61ebd9e0e6b75299185e545bd608369c4883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68df61ebd9e0e6b75299185e545bd608369c4883", "html_url": "https://github.com/rust-lang/rust/commit/68df61ebd9e0e6b75299185e545bd608369c4883", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68df61ebd9e0e6b75299185e545bd608369c4883/comments", "author": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fd34e0c7522fd52bf7d015de4ed78c24596498b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd34e0c7522fd52bf7d015de4ed78c24596498b", "html_url": "https://github.com/rust-lang/rust/commit/9fd34e0c7522fd52bf7d015de4ed78c24596498b"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "582337b47e813ed6e5cedab6f54df7ee1b2a2ef7", "filename": "clippy_utils/src/source.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/68df61ebd9e0e6b75299185e545bd608369c4883/clippy_utils%2Fsrc%2Fsource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68df61ebd9e0e6b75299185e545bd608369c4883/clippy_utils%2Fsrc%2Fsource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsource.rs?ref=68df61ebd9e0e6b75299185e545bd608369c4883", "patch": "@@ -73,7 +73,6 @@ pub fn expr_block<T: LintContext>(\n     let (code, from_macro) = snippet_block_with_context(cx, expr.span, outer, default, indent_relative_to, app);\n     if !from_macro &&\n         let ExprKind::Block(block, _) = expr.kind &&\n-        // TODO: Is this enough UnsafeSource::UserProvided, or should CompilerGenerated be also included?\n         block.rules != BlockCheckMode::UnsafeBlock(UnsafeSource::UserProvided)\n     {\n         format!(\"{code}\")"}]}