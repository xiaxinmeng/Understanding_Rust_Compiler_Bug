{"sha": "c2f4bbd17614bf54353ccd913463744d6f7c9242", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZjRiYmQxNzYxNGJmNTQzNTNjY2Q5MTM0NjM3NDRkNmY3YzkyNDI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-26T19:16:33Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-26T19:16:33Z"}, "message": "build-manifest: add BUILD_MANIFEST_CHECKSUM_CACHE\n\nThe checksum cache allows to reuse the calculated checksums between\nbuild-manifest and promote-release, or between multiple invocations of\nbuild-manifest.", "tree": {"sha": "b8a0258b4df9e78d5d64809890d6e8aeed9aee75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8a0258b4df9e78d5d64809890d6e8aeed9aee75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2f4bbd17614bf54353ccd913463744d6f7c9242", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl+XIQIACgkQPgar6Auq\n8ZxQeRAAnjP1s/f9b4cf8y1IrYPzniDLbZmcJvGo9nemhUqHpyixJO3K5IKBDObl\nFpL7a61VkrEqFgK36px759SqBwZZ7tTtD1Rbtf+3W745PmOIGDYmkWaxB2h+bk/x\nkw+VYtS8blMKKq0zy6tB9sPNXD+GyUMmYiZi0iQSeFf0+mn1/gnXvSA8ksBISTiy\nkXnJg1JFIFUALg7VYz4IYV3fDFLAVyEN8JCnaNvKNrEzuuRTn2GVIgAjZ9x1+OHs\nGKuRu9xBwwDLbNTP33nZPQPGCIiFaKrWyvaUNbaUrBxTP5rYbv6f48JhT0Na5Oa0\nTxbwIBWbvVUFVqtsQolqT2XoZDrWcuVG+Sx/A7h/3T9Ny4+kZKTJZakW8wIXDtTD\nO8G3SRMKwghVdmTxMJo6L7vQjHSyeFYS3NTRs86QgjIVyJNw+rgPHGcdCmcjPs8W\nlzIhGRTe26yZT2tw7aHWdG066ZVDDPM8EDsmW7RAVAigFtOVZNtibDwZn6EH/f73\n4P5kZxDftvaXstf9MUz4P6fLeTgpKlS38haQ+37wtbZp0kAToTr5o4aqcqhzA/rx\nN/sOQvwMHWCYtLkYC6WNkMHFpF9mRrXf2+mKEfDHgRa5+FqfLcvYNOA6gjgwzJcy\nnJAmqd2p+ugx2gscQ1xjOCqTEimb11BCuzy1uQsW99Y26dTtISo=\n=3AmI\n-----END PGP SIGNATURE-----", "payload": "tree b8a0258b4df9e78d5d64809890d6e8aeed9aee75\nparent 0cf3ce4739568414da15ee018024e339d2c61af4\nauthor Pietro Albini <pietro@pietroalbini.org> 1603739793 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1603739793 +0100\n\nbuild-manifest: add BUILD_MANIFEST_CHECKSUM_CACHE\n\nThe checksum cache allows to reuse the calculated checksums between\nbuild-manifest and promote-release, or between multiple invocations of\nbuild-manifest.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f4bbd17614bf54353ccd913463744d6f7c9242", "html_url": "https://github.com/rust-lang/rust/commit/c2f4bbd17614bf54353ccd913463744d6f7c9242", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2f4bbd17614bf54353ccd913463744d6f7c9242/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cf3ce4739568414da15ee018024e339d2c61af4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cf3ce4739568414da15ee018024e339d2c61af4", "html_url": "https://github.com/rust-lang/rust/commit/0cf3ce4739568414da15ee018024e339d2c61af4"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "c019c7a2f7aec597608a757beb8f9050c71cbcd2", "filename": "src/tools/build-manifest/src/checksum.rs", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4bbd17614bf54353ccd913463744d6f7c9242/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fchecksum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4bbd17614bf54353ccd913463744d6f7c9242/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fchecksum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fchecksum.rs?ref=c2f4bbd17614bf54353ccd913463744d6f7c9242", "patch": "@@ -10,12 +10,29 @@ use std::sync::Mutex;\n use std::time::Instant;\n \n pub(crate) struct Checksums {\n+    cache_path: Option<PathBuf>,\n     collected: Mutex<HashMap<PathBuf, String>>,\n }\n \n impl Checksums {\n-    pub(crate) fn new() -> Self {\n-        Checksums { collected: Mutex::new(HashMap::new()) }\n+    pub(crate) fn new() -> Result<Self, Box<dyn Error>> {\n+        let cache_path = std::env::var_os(\"BUILD_MANIFEST_CHECKSUM_CACHE\").map(PathBuf::from);\n+\n+        let mut collected = HashMap::new();\n+        if let Some(path) = &cache_path {\n+            if path.is_file() {\n+                collected = serde_json::from_slice(&std::fs::read(path)?)?;\n+            }\n+        }\n+\n+        Ok(Checksums { cache_path, collected: Mutex::new(collected) })\n+    }\n+\n+    pub(crate) fn store_cache(&self) -> Result<(), Box<dyn Error>> {\n+        if let Some(path) = &self.cache_path {\n+            std::fs::write(path, &serde_json::to_vec(&self.collected)?)?;\n+        }\n+        Ok(())\n     }\n \n     pub(crate) fn fill_missing_checksums(&mut self, manifest: &mut Manifest) {\n@@ -27,10 +44,14 @@ impl Checksums {\n     }\n \n     fn find_missing_checksums(&mut self, manifest: &mut Manifest) -> HashSet<PathBuf> {\n+        let collected = self.collected.lock().unwrap();\n         let mut need_checksums = HashSet::new();\n         crate::manifest::visit_file_hashes(manifest, |file_hash| {\n             if let FileHash::Missing(path) = file_hash {\n-                need_checksums.insert(path.clone());\n+                let path = std::fs::canonicalize(path).unwrap();\n+                if !collected.contains_key(&path) {\n+                    need_checksums.insert(path);\n+                }\n             }\n         });\n         need_checksums\n@@ -40,7 +61,8 @@ impl Checksums {\n         let collected = self.collected.lock().unwrap();\n         crate::manifest::visit_file_hashes(manifest, |file_hash| {\n             if let FileHash::Missing(path) = file_hash {\n-                match collected.get(path) {\n+                let path = std::fs::canonicalize(path).unwrap();\n+                match collected.get(&path) {\n                     Some(hash) => *file_hash = FileHash::Present(hash.clone()),\n                     None => panic!(\"missing hash for file {}\", path.display()),\n                 }"}, {"sha": "2863216855b833d645c7b2ab80c241d5ba09f049", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4bbd17614bf54353ccd913463744d6f7c9242/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4bbd17614bf54353ccd913463744d6f7c9242/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=c2f4bbd17614bf54353ccd913463744d6f7c9242", "patch": "@@ -238,7 +238,7 @@ fn main() {\n \n     Builder {\n         versions: Versions::new(&channel, &input).unwrap(),\n-        checksums: Checksums::new(),\n+        checksums: t!(Checksums::new()),\n         shipped_files: HashSet::new(),\n \n         input,\n@@ -275,6 +275,8 @@ impl Builder {\n         if let Some(path) = std::env::var_os(\"BUILD_MANIFEST_SHIPPED_FILES_PATH\") {\n             self.write_shipped_files(&Path::new(&path));\n         }\n+\n+        t!(self.checksums.store_cache());\n     }\n \n     /// If a tool does not pass its tests, don't ship it."}]}