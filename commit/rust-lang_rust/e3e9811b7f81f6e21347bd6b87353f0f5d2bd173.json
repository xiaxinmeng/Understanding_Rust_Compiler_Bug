{"sha": "e3e9811b7f81f6e21347bd6b87353f0f5d2bd173", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZTk4MTFiN2Y4MWY2ZTIxMzQ3YmQ2Yjg3MzUzZjBmNWQyYmQxNzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T00:32:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T19:08:27Z"}, "message": "Remove str::split", "tree": {"sha": "68d40380875524436cf5d4ae31b64606e625039b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68d40380875524436cf5d4ae31b64606e625039b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173", "html_url": "https://github.com/rust-lang/rust/commit/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "url": "https://api.github.com/repos/rust-lang/rust/commits/64f53dfbb070e0b2a0c77042b23db15b0ec64e48", "html_url": "https://github.com/rust-lang/rust/commit/64f53dfbb070e0b2a0c77042b23db15b0ec64e48"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "db6180ce02feca3cf06989d06f65f96eb2e40a7f", "filename": "src/lib/str.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=e3e9811b7f81f6e21347bd6b87353f0f5d2bd173", "patch": "@@ -41,7 +41,6 @@ export shift_byte;\n export pop_byte;\n export push_byte;\n export unshift_byte;\n-export split;\n export split_ivec;\n export concat;\n export connect;\n@@ -435,21 +434,6 @@ fn unshift_byte(s: &mutable str, b: u8) {\n     s = rs;\n }\n \n-fn split(s: str, sep: u8) -> vec[str] {\n-    let v: vec[str] = [];\n-    let accum: str = \"\";\n-    let ends_with_sep: bool = false;\n-    for c: u8  in s {\n-        if c == sep {\n-            v += [accum];\n-            accum = \"\";\n-            ends_with_sep = true;\n-        } else { accum += unsafe_from_byte(c); ends_with_sep = false; }\n-    }\n-    if str::byte_len(accum) != 0u || ends_with_sep { v += [accum]; }\n-    ret v;\n-}\n-\n fn split_ivec(s: str, sep: u8) -> [str] {\n     let v: [str] = ~[];\n     let accum: str = \"\";"}]}