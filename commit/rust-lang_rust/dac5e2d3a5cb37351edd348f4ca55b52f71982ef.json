{"sha": "dac5e2d3a5cb37351edd348f4ca55b52f71982ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYzVlMmQzYTVjYjM3MzUxZWRkMzQ4ZjRjYTU1YjUyZjcxOTgyZWY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-13T19:37:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-13T19:37:13Z"}, "message": "Merge pull request #3140 from matthiaskrgr/redundant_casts\n\nfix warnings about trivial casts, mostly {i,u}128 -> {i,u}128, such as \"i128::min_value() as i128\"", "tree": {"sha": "0219a3d3e04c3601005e5b7cfb4095ae741250e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0219a3d3e04c3601005e5b7cfb4095ae741250e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac5e2d3a5cb37351edd348f4ca55b52f71982ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbmrxpCRBK7hj4Ov3rIwAAdHIIAID9mwkHuP+8MzoFZgTS1T+2\nYkKkqW58oRzZoaOS6OKEHz0qr8XThGkhBC9oy7A4EcMvbqVJTDy5yIO1qSuVJ0Y6\ntLAMkxn4P8QFGnoFIYFJxD9Ac2IDgmaMbwbFCTCPgzlPUiLTyRrp9DVL5kxnr7JJ\n1yZj1xd4K3xyCF0s00KRipqXZC6jiRZGjJzxjVKVke3X8VzD8b0VAsvNNPeJRcK5\n4CEnwojE6vjBoAf/o5/OAjPtvNVt3Ryi9PiVrXOWna7MF6WdPS9+dCBceZZoxp4D\nvDCVcq/WVyvIgt/SeoFsqBGOQQeeT8RlcuOpjpwi1w31SDqM+z6t8H0VaUalOPw=\n=4SiV\n-----END PGP SIGNATURE-----\n", "payload": "tree 0219a3d3e04c3601005e5b7cfb4095ae741250e5\nparent fd86f8f14aa4f0e73ccf3578d0f249d1d0c15ec4\nparent 28424ecbfa2e644fb4661c7019346f46dd1eefd1\nauthor Philipp Hansch <dev@phansch.net> 1536867433 +0100\ncommitter GitHub <noreply@github.com> 1536867433 +0100\n\nMerge pull request #3140 from matthiaskrgr/redundant_casts\n\nfix warnings about trivial casts, mostly {i,u}128 -> {i,u}128, such as \"i128::min_value() as i128\""}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac5e2d3a5cb37351edd348f4ca55b52f71982ef", "html_url": "https://github.com/rust-lang/rust/commit/dac5e2d3a5cb37351edd348f4ca55b52f71982ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac5e2d3a5cb37351edd348f4ca55b52f71982ef/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd86f8f14aa4f0e73ccf3578d0f249d1d0c15ec4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd86f8f14aa4f0e73ccf3578d0f249d1d0c15ec4", "html_url": "https://github.com/rust-lang/rust/commit/fd86f8f14aa4f0e73ccf3578d0f249d1d0c15ec4"}, {"sha": "28424ecbfa2e644fb4661c7019346f46dd1eefd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/28424ecbfa2e644fb4661c7019346f46dd1eefd1", "html_url": "https://github.com/rust-lang/rust/commit/28424ecbfa2e644fb4661c7019346f46dd1eefd1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bcc85c31376c0fce0a00f09e9529fdc5a74636f8", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac5e2d3a5cb37351edd348f4ca55b52f71982ef/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac5e2d3a5cb37351edd348f4ca55b52f71982ef/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=dac5e2d3a5cb37351edd348f4ca55b52f71982ef", "patch": "@@ -206,7 +206,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                     ty::Array(_, n) => n.assert_usize(self.tcx).expect(\"array length\"),\n                     _ => span_bug!(e.span, \"typeck error\"),\n                 };\n-                self.expr(value).map(|v| Constant::Repeat(Box::new(v), n as u64))\n+                self.expr(value).map(|v| Constant::Repeat(Box::new(v), n))\n             },\n             ExprKind::Unary(op, ref operand) => self.expr(operand).and_then(|o| match op {\n                 UnNot => self.constant_not(&o, self.tables.expr_ty(e)),"}, {"sha": "5f0019014812e49503f6e11e5097f6617658f370", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dac5e2d3a5cb37351edd348f4ca55b52f71982ef/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac5e2d3a5cb37351edd348f4ca55b52f71982ef/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=dac5e2d3a5cb37351edd348f4ca55b52f71982ef", "patch": "@@ -9,7 +9,7 @@\n #![recursion_limit = \"256\"]\n #![feature(macro_at_most_once_rep)]\n #![feature(tool_lints)]\n-#![warn(rust_2018_idioms)]\n+#![warn(rust_2018_idioms, trivial_casts, trivial_numeric_casts)]\n #![feature(crate_visibility_modifier)]\n \n use toml;"}, {"sha": "a6cc174f0adba8cc54e2148bddec5acb1aa3f64e", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dac5e2d3a5cb37351edd348f4ca55b52f71982ef/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac5e2d3a5cb37351edd348f4ca55b52f71982ef/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=dac5e2d3a5cb37351edd348f4ca55b52f71982ef", "patch": "@@ -1590,7 +1590,7 @@ fn numeric_cast_precast_bounds<'a>(cx: &LateContext<'_, '_>, expr: &'a Expr) ->\n                     FullInt::S(i128::from(i64::min_value())),\n                     FullInt::S(i128::from(i64::max_value())),\n                 ),\n-                IntTy::I128 => (FullInt::S(i128::min_value() as i128), FullInt::S(i128::max_value() as i128)),\n+                IntTy::I128 => (FullInt::S(i128::min_value()), FullInt::S(i128::max_value())),\n                 IntTy::Isize => (FullInt::S(isize::min_value() as i128), FullInt::S(isize::max_value() as i128)),\n             }),\n             ty::Uint(uint_ty) => Some(match uint_ty {\n@@ -1607,7 +1607,7 @@ fn numeric_cast_precast_bounds<'a>(cx: &LateContext<'_, '_>, expr: &'a Expr) ->\n                     FullInt::U(u128::from(u64::min_value())),\n                     FullInt::U(u128::from(u64::max_value())),\n                 ),\n-                UintTy::U128 => (FullInt::U(u128::min_value() as u128), FullInt::U(u128::max_value() as u128)),\n+                UintTy::U128 => (FullInt::U(u128::min_value()), FullInt::U(u128::max_value())),\n                 UintTy::Usize => (FullInt::U(usize::min_value() as u128), FullInt::U(usize::max_value() as u128)),\n             }),\n             _ => None,"}]}