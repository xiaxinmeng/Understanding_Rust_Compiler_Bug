{"sha": "79f2cff44ec62cf42f6c97d28dc4286de683b1e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZjJjZmY0NGVjNjJjZjQyZjZjOTdkMjhkYzQyODZkZTY4M2IxZTU=", "commit": {"author": {"name": "Daan Sprenkels", "email": "dsprenkels@gmail.com", "date": "2016-01-07T23:01:59Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-25T15:26:10Z"}, "message": "libsyntax: move check for keyword Let to a more logical spot", "tree": {"sha": "f2456de6e9737122d5c672e1a0555e8140b3e8eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2456de6e9737122d5c672e1a0555e8140b3e8eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f2cff44ec62cf42f6c97d28dc4286de683b1e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f2cff44ec62cf42f6c97d28dc4286de683b1e5", "html_url": "https://github.com/rust-lang/rust/commit/79f2cff44ec62cf42f6c97d28dc4286de683b1e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f2cff44ec62cf42f6c97d28dc4286de683b1e5/comments", "author": {"login": "dsprenkels", "id": 439973, "node_id": "MDQ6VXNlcjQzOTk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/439973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsprenkels", "html_url": "https://github.com/dsprenkels", "followers_url": "https://api.github.com/users/dsprenkels/followers", "following_url": "https://api.github.com/users/dsprenkels/following{/other_user}", "gists_url": "https://api.github.com/users/dsprenkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsprenkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsprenkels/subscriptions", "organizations_url": "https://api.github.com/users/dsprenkels/orgs", "repos_url": "https://api.github.com/users/dsprenkels/repos", "events_url": "https://api.github.com/users/dsprenkels/events{/privacy}", "received_events_url": "https://api.github.com/users/dsprenkels/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "082c03b0780b2de24b68be04e96d1596a7c5b3cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/082c03b0780b2de24b68be04e96d1596a7c5b3cf", "html_url": "https://github.com/rust-lang/rust/commit/082c03b0780b2de24b68be04e96d1596a7c5b3cf"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f3809455fe0f60c5da6f39bc541ae5353f363a35", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/79f2cff44ec62cf42f6c97d28dc4286de683b1e5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f2cff44ec62cf42f6c97d28dc4286de683b1e5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=79f2cff44ec62cf42f6c97d28dc4286de683b1e5", "patch": "@@ -2134,6 +2134,12 @@ impl<'a> Parser<'a> {\n                 }\n                 hi = self.last_span.hi;\n             }\n+            _ if self.token.is_keyword(keywords::Let) => {\n+                // Catch this syntax error here, instead of in `check_strict_keywords`, so that\n+                // we can explicitly mention that let is not to be used as an expression\n+                let msg = \"`let` is not an expression, so it cannot be used in this way\";\n+                return Err(self.diagnostic().struct_span_err(self.span, &msg));\n+            },\n             _ => {\n                 if self.eat_lt() {\n                     let (qself, path) =\n@@ -2199,12 +2205,6 @@ impl<'a> Parser<'a> {\n                         UnsafeBlock(ast::UserProvided),\n                         attrs);\n                 }\n-                if self.eat_keyword(keywords::Let) {\n-                    return Err(self.span_fatal(self.span,\n-                                               \"`let` is not an expression, so it cannot \\\n-                                                be used in this way\"))\n-\n-                }\n                 if self.eat_keyword(keywords::Return) {\n                     if self.token.can_begin_expr() {\n                         let e = try!(self.parse_expr());"}]}