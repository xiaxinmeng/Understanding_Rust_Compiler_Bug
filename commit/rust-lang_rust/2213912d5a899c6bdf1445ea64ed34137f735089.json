{"sha": "2213912d5a899c6bdf1445ea64ed34137f735089", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMTM5MTJkNWE4OTljNmJkZjE0NDVlYTY0ZWQzNDEzN2Y3MzUwODk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-05T16:44:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-05T16:44:36Z"}, "message": "Rollup merge of #41043 - GuillaumeGomez:sup_balise, r=steveklabnik\n\nReplace ^ with <sup> html balise\n\nr? @steveklabnik", "tree": {"sha": "529e5670b8d6d94f3ffa5bb7dd5806464fe59fae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/529e5670b8d6d94f3ffa5bb7dd5806464fe59fae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2213912d5a899c6bdf1445ea64ed34137f735089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2213912d5a899c6bdf1445ea64ed34137f735089", "html_url": "https://github.com/rust-lang/rust/commit/2213912d5a899c6bdf1445ea64ed34137f735089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2213912d5a899c6bdf1445ea64ed34137f735089/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6251e4bb35517e7dc4d229e370752fd718ddecff", "url": "https://api.github.com/repos/rust-lang/rust/commits/6251e4bb35517e7dc4d229e370752fd718ddecff", "html_url": "https://github.com/rust-lang/rust/commit/6251e4bb35517e7dc4d229e370752fd718ddecff"}, {"sha": "7a07a73eb15d497efcd544ec6e332160ee46dd5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a07a73eb15d497efcd544ec6e332160ee46dd5e", "html_url": "https://github.com/rust-lang/rust/commit/7a07a73eb15d497efcd544ec6e332160ee46dd5e"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "d8db450fb1c1ff24619f951a04a6ed22aa5f5c8d", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2213912d5a899c6bdf1445ea64ed34137f735089/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2213912d5a899c6bdf1445ea64ed34137f735089/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=2213912d5a899c6bdf1445ea64ed34137f735089", "patch": "@@ -1253,17 +1253,17 @@ extern \"rust-intrinsic\" {\n     #[cfg(not(stage0))]\n     pub fn unchecked_shr<T>(x: T, y: T) -> T;\n \n-    /// Returns (a + b) mod 2^N, where N is the width of T in bits.\n+    /// Returns (a + b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     /// The stabilized versions of this intrinsic are available on the integer\n     /// primitives via the `wrapping_add` method. For example,\n     /// [`std::u32::wrapping_add`](../../std/primitive.u32.html#method.wrapping_add)\n     pub fn overflowing_add<T>(a: T, b: T) -> T;\n-    /// Returns (a - b) mod 2^N, where N is the width of T in bits.\n+    /// Returns (a - b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     /// The stabilized versions of this intrinsic are available on the integer\n     /// primitives via the `wrapping_sub` method. For example,\n     /// [`std::u32::wrapping_sub`](../../std/primitive.u32.html#method.wrapping_sub)\n     pub fn overflowing_sub<T>(a: T, b: T) -> T;\n-    /// Returns (a * b) mod 2^N, where N is the width of T in bits.\n+    /// Returns (a * b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     /// The stabilized versions of this intrinsic are available on the integer\n     /// primitives via the `wrapping_mul` method. For example,\n     /// [`std::u32::wrapping_mul`](../../std/primitive.u32.html#method.wrapping_mul)"}, {"sha": "45fa721a5a33e0b71c8504e3e0b5ef9a1ab6487c", "filename": "src/libcore/num/dec2flt/rawfp.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2213912d5a899c6bdf1445ea64ed34137f735089/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2213912d5a899c6bdf1445ea64ed34137f735089/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Frawfp.rs?ref=2213912d5a899c6bdf1445ea64ed34137f735089", "patch": "@@ -10,12 +10,12 @@\n \n //! Bit fiddling on positive IEEE 754 floats. Negative numbers aren't and needn't be handled.\n //! Normal floating point numbers have a canonical representation as (frac, exp) such that the\n-//! value is 2^exp * (1 + sum(frac[N-i] / 2^i)) where N is the number of bits. Subnormals are\n-//! slightly different and weird, but the same principle applies.\n+//! value is 2<sup>exp</sup> * (1 + sum(frac[N-i] / 2<sup>i</sup>)) where N is the number of bits.\n+//! Subnormals are slightly different and weird, but the same principle applies.\n //!\n-//! Here, however, we represent them as (sig, k) with f positive, such that the value is f * 2^e.\n-//! Besides making the \"hidden bit\" explicit, this changes the exponent by the so-called\n-//! mantissa shift.\n+//! Here, however, we represent them as (sig, k) with f positive, such that the value is f *\n+//! 2<sup>e</sup>. Besides making the \"hidden bit\" explicit, this changes the exponent by the\n+//! so-called mantissa shift.\n //!\n //! Put another way, normally floats are written as (1) but here they are written as (2):\n //!\n@@ -94,7 +94,8 @@ pub trait RawFloat : Float + Copy + Debug + LowerExp\n     /// represented, the other code in this module makes sure to never let that happen.\n     fn from_int(x: u64) -> Self;\n \n-    /// Get the value 10^e from a pre-computed table. Panics for e >= ceil_log5_of_max_sig().\n+    /// Get the value 10<sup>e</sup> from a pre-computed table. Panics for e >=\n+    /// ceil_log5_of_max_sig().\n     fn short_fast_pow10(e: usize) -> Self;\n \n     // FIXME Everything that follows should be associated constants, but taking the value of an"}, {"sha": "571ef30b6b9096356a0f92b216088c5d6571d036", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2213912d5a899c6bdf1445ea64ed34137f735089/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2213912d5a899c6bdf1445ea64ed34137f735089/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=2213912d5a899c6bdf1445ea64ed34137f735089", "patch": "@@ -267,7 +267,7 @@ impl Size {\n \n /// Alignment of a type in bytes, both ABI-mandated and preferred.\n /// Since alignments are always powers of 2, we can pack both in one byte,\n-/// giving each a nibble (4 bits) for a maximum alignment of 2^15 = 32768.\n+/// giving each a nibble (4 bits) for a maximum alignment of 2<sup>15</sup> = 32768.\n #[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]\n pub struct Align {\n     raw: u8"}]}