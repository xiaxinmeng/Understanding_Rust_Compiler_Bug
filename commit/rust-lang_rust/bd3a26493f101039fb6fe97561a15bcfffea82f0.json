{"sha": "bd3a26493f101039fb6fe97561a15bcfffea82f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkM2EyNjQ5M2YxMDEwMzlmYjZmZTk3NTYxYTE1YmNmZmZlYTgyZjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T07:13:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T07:13:32Z"}, "message": "fix stuck parser", "tree": {"sha": "f2dc8fd63c50ceed11a96fa7a0736819f8dbbf18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2dc8fd63c50ceed11a96fa7a0736819f8dbbf18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd3a26493f101039fb6fe97561a15bcfffea82f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3a26493f101039fb6fe97561a15bcfffea82f0", "html_url": "https://github.com/rust-lang/rust/commit/bd3a26493f101039fb6fe97561a15bcfffea82f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd3a26493f101039fb6fe97561a15bcfffea82f0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44334f6f56bd99635f650796af0db8047e4c21c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/44334f6f56bd99635f650796af0db8047e4c21c4", "html_url": "https://github.com/rust-lang/rust/commit/44334f6f56bd99635f650796af0db8047e4c21c4"}], "stats": {"total": 721, "additions": 719, "deletions": 2}, "files": [{"sha": "2536bac80020a9e1e384c1773f86f75f696473ff", "filename": "crates/libsyntax2/src/grammar/expressions/atom.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=bd3a26493f101039fb6fe97561a15bcfffea82f0", "patch": "@@ -140,9 +140,14 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n     }\n     while !p.at(EOF) && !p.at(R_BRACK) {\n         p.expect(COMMA);\n-        if !p.at(R_BRACK) {\n-            expr(p);\n+        if p.at(R_BRACK) {\n+            break;\n+        }\n+        if !EXPR_FIRST.contains(p.current()) {\n+            p.error(\"expected expression\");\n+            break;\n         }\n+        expr(p);\n     }\n     p.expect(R_BRACK);\n     m.complete(p, ARRAY_EXPR)"}, {"sha": "f7b9f7086ed3ff8aeff258012e96b91523dcd8f2", "filename": "crates/libsyntax2/src/grammar/expressions/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs?ref=bd3a26493f101039fb6fe97561a15bcfffea82f0", "patch": "@@ -376,6 +376,10 @@ fn arg_list(p: &mut Parser) {\n     let m = p.start();\n     p.bump();\n     while !p.at(R_PAREN) && !p.at(EOF) {\n+        if !EXPR_FIRST.contains(p.current()) {\n+            p.error(\"expected expression\");\n+            break;\n+        }\n         expr(p);\n         if !p.at(R_PAREN) && !p.expect(COMMA) {\n             break;"}, {"sha": "cd2d493a10cdcb0b027a25b90baa4c7802c26435", "filename": "crates/libsyntax2/tests/data/parser/err/0022_bad_exprs.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0022_bad_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0022_bad_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0022_bad_exprs.rs?ref=bd3a26493f101039fb6fe97561a15bcfffea82f0", "patch": "@@ -0,0 +1,3 @@\n+fn a() { [1, 2, @, struct, let] }\n+fn b() { foo(1, 2, @, impl, let) }\n+fn c() { foo.bar(1, 2, @, ], trait, let) }"}, {"sha": "287e56ac4381ee49d3fbf4231aa64ac80f448847", "filename": "crates/libsyntax2/tests/data/parser/err/0022_bad_exprs.txt", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/rust-lang/rust/blob/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0022_bad_exprs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0022_bad_exprs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0022_bad_exprs.txt?ref=bd3a26493f101039fb6fe97561a15bcfffea82f0", "patch": "@@ -0,0 +1,189 @@\n+ROOT@[0; 112)\n+  FN_DEF@[0; 33)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 4)\n+      IDENT@[3; 4) \"a\"\n+    PARAM_LIST@[4; 6)\n+      L_PAREN@[4; 5)\n+      R_PAREN@[5; 6)\n+    WHITESPACE@[6; 7)\n+    BLOCK@[7; 33)\n+      L_CURLY@[7; 8)\n+      WHITESPACE@[8; 9)\n+      EXPR_STMT@[9; 15)\n+        ARRAY_EXPR@[9; 15)\n+          L_BRACK@[9; 10)\n+          LITERAL@[10; 11)\n+            INT_NUMBER@[10; 11) \"1\"\n+          COMMA@[11; 12)\n+          WHITESPACE@[12; 13)\n+          LITERAL@[13; 14)\n+            INT_NUMBER@[13; 14) \"2\"\n+          COMMA@[14; 15)\n+          err: `expected expression`\n+          err: `expected R_BRACK`\n+          err: `expected SEMI`\n+      WHITESPACE@[15; 16)\n+      err: `expected expression`\n+      EXPR_STMT@[16; 17)\n+        ERROR@[16; 17)\n+          AT@[16; 17)\n+          err: `expected SEMI`\n+          err: `expected expression`\n+      EXPR_STMT@[17; 18)\n+        ERROR@[17; 18)\n+          COMMA@[17; 18)\n+          err: `expected SEMI`\n+      WHITESPACE@[18; 19)\n+      STRUCT_DEF@[19; 26)\n+        STRUCT_KW@[19; 25)\n+        err: `expected a name`\n+        ERROR@[25; 26)\n+          COMMA@[25; 26)\n+          err: `expected `;`, `{`, or `(``\n+      WHITESPACE@[26; 27)\n+      LET_STMT@[27; 31)\n+        LET_KW@[27; 30)\n+        err: `expected pattern`\n+        ERROR@[30; 31)\n+          R_BRACK@[30; 31)\n+          err: `expected SEMI`\n+      WHITESPACE@[31; 32)\n+      R_CURLY@[32; 33)\n+  WHITESPACE@[33; 34)\n+  FN_DEF@[34; 68)\n+    FN_KW@[34; 36)\n+    WHITESPACE@[36; 37)\n+    NAME@[37; 38)\n+      IDENT@[37; 38) \"b\"\n+    PARAM_LIST@[38; 40)\n+      L_PAREN@[38; 39)\n+      R_PAREN@[39; 40)\n+    WHITESPACE@[40; 41)\n+    BLOCK@[41; 68)\n+      L_CURLY@[41; 42)\n+      WHITESPACE@[42; 43)\n+      EXPR_STMT@[43; 52)\n+        CALL_EXPR@[43; 52)\n+          PATH_EXPR@[43; 46)\n+            PATH@[43; 46)\n+              PATH_SEGMENT@[43; 46)\n+                NAME_REF@[43; 46)\n+                  IDENT@[43; 46) \"foo\"\n+          ARG_LIST@[46; 52)\n+            L_PAREN@[46; 47)\n+            LITERAL@[47; 48)\n+              INT_NUMBER@[47; 48) \"1\"\n+            COMMA@[48; 49)\n+            WHITESPACE@[49; 50)\n+            LITERAL@[50; 51)\n+              INT_NUMBER@[50; 51) \"2\"\n+            COMMA@[51; 52)\n+            err: `expected expression`\n+            err: `expected SEMI`\n+      WHITESPACE@[52; 53)\n+      err: `expected expression`\n+      EXPR_STMT@[53; 54)\n+        ERROR@[53; 54)\n+          AT@[53; 54)\n+          err: `expected SEMI`\n+          err: `expected expression`\n+      EXPR_STMT@[54; 55)\n+        ERROR@[54; 55)\n+          COMMA@[54; 55)\n+          err: `expected SEMI`\n+      WHITESPACE@[55; 56)\n+      IMPL_ITEM@[56; 60)\n+        IMPL_KW@[56; 60)\n+        err: `expected type`\n+        err: `expected `{``\n+        err: `expected expression`\n+      EXPR_STMT@[60; 61)\n+        ERROR@[60; 61)\n+          COMMA@[60; 61)\n+          err: `expected SEMI`\n+      WHITESPACE@[61; 62)\n+      LET_STMT@[62; 65)\n+        LET_KW@[62; 65)\n+        err: `expected pattern`\n+        err: `expected SEMI`\n+        err: `expected expression`\n+      ERROR@[65; 66)\n+        R_PAREN@[65; 66)\n+      WHITESPACE@[66; 67)\n+      R_CURLY@[67; 68)\n+  WHITESPACE@[68; 69)\n+  FN_DEF@[69; 111)\n+    FN_KW@[69; 71)\n+    WHITESPACE@[71; 72)\n+    NAME@[72; 73)\n+      IDENT@[72; 73) \"c\"\n+    PARAM_LIST@[73; 75)\n+      L_PAREN@[73; 74)\n+      R_PAREN@[74; 75)\n+    WHITESPACE@[75; 76)\n+    BLOCK@[76; 111)\n+      L_CURLY@[76; 77)\n+      WHITESPACE@[77; 78)\n+      EXPR_STMT@[78; 91)\n+        METHOD_CALL_EXPR@[78; 91)\n+          PATH_EXPR@[78; 81)\n+            PATH@[78; 81)\n+              PATH_SEGMENT@[78; 81)\n+                NAME_REF@[78; 81)\n+                  IDENT@[78; 81) \"foo\"\n+          DOT@[81; 82)\n+          NAME_REF@[82; 85)\n+            IDENT@[82; 85) \"bar\"\n+          ARG_LIST@[85; 91)\n+            L_PAREN@[85; 86)\n+            LITERAL@[86; 87)\n+              INT_NUMBER@[86; 87) \"1\"\n+            COMMA@[87; 88)\n+            WHITESPACE@[88; 89)\n+            LITERAL@[89; 90)\n+              INT_NUMBER@[89; 90) \"2\"\n+            COMMA@[90; 91)\n+            err: `expected expression`\n+            err: `expected SEMI`\n+      WHITESPACE@[91; 92)\n+      err: `expected expression`\n+      EXPR_STMT@[92; 93)\n+        ERROR@[92; 93)\n+          AT@[92; 93)\n+          err: `expected SEMI`\n+          err: `expected expression`\n+      EXPR_STMT@[93; 94)\n+        ERROR@[93; 94)\n+          COMMA@[93; 94)\n+          err: `expected SEMI`\n+      WHITESPACE@[94; 95)\n+      err: `expected expression`\n+      EXPR_STMT@[95; 96)\n+        ERROR@[95; 96)\n+          R_BRACK@[95; 96)\n+          err: `expected SEMI`\n+          err: `expected expression`\n+      EXPR_STMT@[96; 97)\n+        ERROR@[96; 97)\n+          COMMA@[96; 97)\n+          err: `expected SEMI`\n+      WHITESPACE@[97; 98)\n+      TRAIT_DEF@[98; 104)\n+        TRAIT_KW@[98; 103)\n+        err: `expected a name`\n+        ERROR@[103; 104)\n+          COMMA@[103; 104)\n+          err: `expected `{``\n+      WHITESPACE@[104; 105)\n+      LET_STMT@[105; 108)\n+        LET_KW@[105; 108)\n+        err: `expected pattern`\n+        err: `expected SEMI`\n+        err: `expected expression`\n+      ERROR@[108; 109)\n+        R_PAREN@[108; 109)\n+      WHITESPACE@[109; 110)\n+      R_CURLY@[110; 111)\n+  WHITESPACE@[111; 112)"}, {"sha": "2a70ee83a481addf3bd228b1d875a10faf897508", "filename": "crates/libsyntax2/tests/data/parser/ok/0034_macro_2.0.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_2.0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_2.0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_2.0.rs?ref=bd3a26493f101039fb6fe97561a15bcfffea82f0", "patch": "@@ -0,0 +1,16 @@\n+macro parse_use_trees($($s:expr),* $(,)*) {\n+    vec![\n+        $(parse_use_tree($s),)*\n+    ]\n+}\n+\n+#[test]\n+fn test_use_tree_merge() {\n+    macro test_merge([$($input:expr),* $(,)*], [$($output:expr),* $(,)*]) {\n+        assert_eq!(\n+            merge_use_trees(parse_use_trees!($($input,)*)),\n+            parse_use_trees!($($output,)*),\n+        );\n+    }\n+}\n+"}, {"sha": "1a8ca761dd1226bb2c7fbbe498421550d2c54e50", "filename": "crates/libsyntax2/tests/data/parser/ok/0034_macro_2.0.txt", "status": "added", "additions": 250, "deletions": 0, "changes": 250, "blob_url": "https://github.com/rust-lang/rust/blob/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_2.0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_2.0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_2.0.txt?ref=bd3a26493f101039fb6fe97561a15bcfffea82f0", "patch": "@@ -0,0 +1,250 @@\n+ROOT@[0; 350)\n+  MACRO_CALL@[0; 41)\n+    PATH@[0; 5)\n+      PATH_SEGMENT@[0; 5)\n+        NAME_REF@[0; 5)\n+          IDENT@[0; 5) \"macro\"\n+          err: `expected EXCL`\n+    WHITESPACE@[5; 6)\n+    IDENT@[6; 21) \"parse_use_trees\"\n+    TOKEN_TREE@[21; 41)\n+      L_PAREN@[21; 22)\n+      DOLLAR@[22; 23)\n+      TOKEN_TREE@[23; 32)\n+        L_PAREN@[23; 24)\n+        DOLLAR@[24; 25)\n+        IDENT@[25; 26) \"s\"\n+        COLON@[26; 27)\n+        IDENT@[27; 31) \"expr\"\n+        R_PAREN@[31; 32)\n+      COMMA@[32; 33)\n+      STAR@[33; 34)\n+      WHITESPACE@[34; 35)\n+      DOLLAR@[35; 36)\n+      TOKEN_TREE@[36; 39)\n+        L_PAREN@[36; 37)\n+        COMMA@[37; 38)\n+        R_PAREN@[38; 39)\n+      STAR@[39; 40)\n+      R_PAREN@[40; 41)\n+      err: `expected SEMI`\n+  WHITESPACE@[41; 42)\n+  err: `expected an item`\n+  ERROR@[42; 93)\n+    L_CURLY@[42; 43)\n+    WHITESPACE@[43; 48)\n+    IDENT@[48; 51) \"vec\"\n+    EXCL@[51; 52)\n+    L_BRACK@[52; 53)\n+    WHITESPACE@[53; 62)\n+    DOLLAR@[62; 63)\n+    L_PAREN@[63; 64)\n+    IDENT@[64; 78) \"parse_use_tree\"\n+    L_PAREN@[78; 79)\n+    DOLLAR@[79; 80)\n+    IDENT@[80; 81) \"s\"\n+    R_PAREN@[81; 82)\n+    COMMA@[82; 83)\n+    R_PAREN@[83; 84)\n+    STAR@[84; 85)\n+    WHITESPACE@[85; 90)\n+    R_BRACK@[90; 91)\n+    WHITESPACE@[91; 92)\n+    R_CURLY@[92; 93)\n+  WHITESPACE@[93; 95)\n+  FN_DEF@[95; 348)\n+    ATTR@[95; 102)\n+      POUND@[95; 96)\n+      TOKEN_TREE@[96; 102)\n+        L_BRACK@[96; 97)\n+        IDENT@[97; 101) \"test\"\n+        R_BRACK@[101; 102)\n+    WHITESPACE@[102; 103)\n+    FN_KW@[103; 105)\n+    WHITESPACE@[105; 106)\n+    NAME@[106; 125)\n+      IDENT@[106; 125) \"test_use_tree_merge\"\n+    PARAM_LIST@[125; 127)\n+      L_PAREN@[125; 126)\n+      R_PAREN@[126; 127)\n+    WHITESPACE@[127; 128)\n+    BLOCK@[128; 348)\n+      L_CURLY@[128; 129)\n+      WHITESPACE@[129; 134)\n+      EXPR_STMT@[134; 139)\n+        PATH_EXPR@[134; 139)\n+          PATH@[134; 139)\n+            PATH_SEGMENT@[134; 139)\n+              NAME_REF@[134; 139)\n+                IDENT@[134; 139) \"macro\"\n+                err: `expected SEMI`\n+      WHITESPACE@[139; 140)\n+      EXPR_STMT@[140; 203)\n+        CALL_EXPR@[140; 203)\n+          PATH_EXPR@[140; 150)\n+            PATH@[140; 150)\n+              PATH_SEGMENT@[140; 150)\n+                NAME_REF@[140; 150)\n+                  IDENT@[140; 150) \"test_merge\"\n+          ARG_LIST@[150; 203)\n+            L_PAREN@[150; 151)\n+            ARRAY_EXPR@[151; 202)\n+              L_BRACK@[151; 152)\n+              err: `expected expression`\n+              ERROR@[152; 153)\n+                DOLLAR@[152; 153)\n+                err: `expected COMMA`\n+              TUPLE_EXPR@[153; 166)\n+                L_PAREN@[153; 154)\n+                err: `expected expression`\n+                ERROR@[154; 155)\n+                  DOLLAR@[154; 155)\n+                  err: `expected COMMA`\n+                PATH_EXPR@[155; 160)\n+                  PATH@[155; 160)\n+                    PATH_SEGMENT@[155; 160)\n+                      NAME_REF@[155; 160)\n+                        IDENT@[155; 160) \"input\"\n+                        err: `expected COMMA`\n+                        err: `expected expression`\n+                ERROR@[160; 161)\n+                  COLON@[160; 161)\n+                  err: `expected COMMA`\n+                PATH_EXPR@[161; 165)\n+                  PATH@[161; 165)\n+                    PATH_SEGMENT@[161; 165)\n+                      NAME_REF@[161; 165)\n+                        IDENT@[161; 165) \"expr\"\n+                R_PAREN@[165; 166)\n+              COMMA@[166; 167)\n+              PREFIX_EXPR@[167; 170)\n+                STAR@[167; 168)\n+                WHITESPACE@[168; 169)\n+                err: `expected expression`\n+                ERROR@[169; 170)\n+                  DOLLAR@[169; 170)\n+                  err: `expected COMMA`\n+              BIN_EXPR@[170; 175)\n+                PAREN_EXPR@[170; 173)\n+                  L_PAREN@[170; 171)\n+                  err: `expected expression`\n+                  ERROR@[171; 172)\n+                    COMMA@[171; 172)\n+                  R_PAREN@[172; 173)\n+                STAR@[173; 174)\n+                err: `expected expression`\n+                ERROR@[174; 175)\n+                  R_BRACK@[174; 175)\n+              COMMA@[175; 176)\n+              WHITESPACE@[176; 177)\n+              ARRAY_EXPR@[177; 202)\n+                L_BRACK@[177; 178)\n+                err: `expected expression`\n+                ERROR@[178; 179)\n+                  DOLLAR@[178; 179)\n+                  err: `expected COMMA`\n+                TUPLE_EXPR@[179; 193)\n+                  L_PAREN@[179; 180)\n+                  err: `expected expression`\n+                  ERROR@[180; 181)\n+                    DOLLAR@[180; 181)\n+                    err: `expected COMMA`\n+                  PATH_EXPR@[181; 187)\n+                    PATH@[181; 187)\n+                      PATH_SEGMENT@[181; 187)\n+                        NAME_REF@[181; 187)\n+                          IDENT@[181; 187) \"output\"\n+                          err: `expected COMMA`\n+                          err: `expected expression`\n+                  ERROR@[187; 188)\n+                    COLON@[187; 188)\n+                    err: `expected COMMA`\n+                  PATH_EXPR@[188; 192)\n+                    PATH@[188; 192)\n+                      PATH_SEGMENT@[188; 192)\n+                        NAME_REF@[188; 192)\n+                          IDENT@[188; 192) \"expr\"\n+                  R_PAREN@[192; 193)\n+                COMMA@[193; 194)\n+                PREFIX_EXPR@[194; 197)\n+                  STAR@[194; 195)\n+                  WHITESPACE@[195; 196)\n+                  err: `expected expression`\n+                  ERROR@[196; 197)\n+                    DOLLAR@[196; 197)\n+                    err: `expected COMMA`\n+                BIN_EXPR@[197; 202)\n+                  PAREN_EXPR@[197; 200)\n+                    L_PAREN@[197; 198)\n+                    err: `expected expression`\n+                    ERROR@[198; 199)\n+                      COMMA@[198; 199)\n+                    R_PAREN@[199; 200)\n+                  STAR@[200; 201)\n+                  err: `expected expression`\n+                  ERROR@[201; 202)\n+                    R_BRACK@[201; 202)\n+                    err: `expected COMMA`\n+                    err: `expected expression`\n+                    err: `expected R_BRACK`\n+                    err: `expected COMMA`\n+                    err: `expected expression`\n+                    err: `expected R_BRACK`\n+            R_PAREN@[202; 203)\n+            err: `expected SEMI`\n+      WHITESPACE@[203; 204)\n+      BLOCK_EXPR@[204; 346)\n+        BLOCK@[204; 346)\n+          L_CURLY@[204; 205)\n+          WHITESPACE@[205; 214)\n+          EXPR_STMT@[214; 340)\n+            MACRO_CALL@[214; 339)\n+              PATH@[214; 223)\n+                PATH_SEGMENT@[214; 223)\n+                  NAME_REF@[214; 223)\n+                    IDENT@[214; 223) \"assert_eq\"\n+              EXCL@[223; 224)\n+              TOKEN_TREE@[224; 339)\n+                L_PAREN@[224; 225)\n+                WHITESPACE@[225; 238)\n+                IDENT@[238; 253) \"merge_use_trees\"\n+                TOKEN_TREE@[253; 284)\n+                  L_PAREN@[253; 254)\n+                  IDENT@[254; 269) \"parse_use_trees\"\n+                  EXCL@[269; 270)\n+                  TOKEN_TREE@[270; 283)\n+                    L_PAREN@[270; 271)\n+                    DOLLAR@[271; 272)\n+                    TOKEN_TREE@[272; 281)\n+                      L_PAREN@[272; 273)\n+                      DOLLAR@[273; 274)\n+                      IDENT@[274; 279) \"input\"\n+                      COMMA@[279; 280)\n+                      R_PAREN@[280; 281)\n+                    STAR@[281; 282)\n+                    R_PAREN@[282; 283)\n+                  R_PAREN@[283; 284)\n+                COMMA@[284; 285)\n+                WHITESPACE@[285; 298)\n+                IDENT@[298; 313) \"parse_use_trees\"\n+                EXCL@[313; 314)\n+                TOKEN_TREE@[314; 328)\n+                  L_PAREN@[314; 315)\n+                  DOLLAR@[315; 316)\n+                  TOKEN_TREE@[316; 326)\n+                    L_PAREN@[316; 317)\n+                    DOLLAR@[317; 318)\n+                    IDENT@[318; 324) \"output\"\n+                    COMMA@[324; 325)\n+                    R_PAREN@[325; 326)\n+                  STAR@[326; 327)\n+                  R_PAREN@[327; 328)\n+                COMMA@[328; 329)\n+                WHITESPACE@[329; 338)\n+                R_PAREN@[338; 339)\n+            SEMI@[339; 340)\n+          WHITESPACE@[340; 345)\n+          R_CURLY@[345; 346)\n+      WHITESPACE@[346; 347)\n+      R_CURLY@[347; 348)\n+  WHITESPACE@[348; 350)"}, {"sha": "1a8ca761dd1226bb2c7fbbe498421550d2c54e50", "filename": "crates/libsyntax2/tests/data/parser/ok/0034_macro_stuck.txt", "status": "added", "additions": 250, "deletions": 0, "changes": 250, "blob_url": "https://github.com/rust-lang/rust/blob/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_stuck.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bd3a26493f101039fb6fe97561a15bcfffea82f0/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_stuck.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0034_macro_stuck.txt?ref=bd3a26493f101039fb6fe97561a15bcfffea82f0", "patch": "@@ -0,0 +1,250 @@\n+ROOT@[0; 350)\n+  MACRO_CALL@[0; 41)\n+    PATH@[0; 5)\n+      PATH_SEGMENT@[0; 5)\n+        NAME_REF@[0; 5)\n+          IDENT@[0; 5) \"macro\"\n+          err: `expected EXCL`\n+    WHITESPACE@[5; 6)\n+    IDENT@[6; 21) \"parse_use_trees\"\n+    TOKEN_TREE@[21; 41)\n+      L_PAREN@[21; 22)\n+      DOLLAR@[22; 23)\n+      TOKEN_TREE@[23; 32)\n+        L_PAREN@[23; 24)\n+        DOLLAR@[24; 25)\n+        IDENT@[25; 26) \"s\"\n+        COLON@[26; 27)\n+        IDENT@[27; 31) \"expr\"\n+        R_PAREN@[31; 32)\n+      COMMA@[32; 33)\n+      STAR@[33; 34)\n+      WHITESPACE@[34; 35)\n+      DOLLAR@[35; 36)\n+      TOKEN_TREE@[36; 39)\n+        L_PAREN@[36; 37)\n+        COMMA@[37; 38)\n+        R_PAREN@[38; 39)\n+      STAR@[39; 40)\n+      R_PAREN@[40; 41)\n+      err: `expected SEMI`\n+  WHITESPACE@[41; 42)\n+  err: `expected an item`\n+  ERROR@[42; 93)\n+    L_CURLY@[42; 43)\n+    WHITESPACE@[43; 48)\n+    IDENT@[48; 51) \"vec\"\n+    EXCL@[51; 52)\n+    L_BRACK@[52; 53)\n+    WHITESPACE@[53; 62)\n+    DOLLAR@[62; 63)\n+    L_PAREN@[63; 64)\n+    IDENT@[64; 78) \"parse_use_tree\"\n+    L_PAREN@[78; 79)\n+    DOLLAR@[79; 80)\n+    IDENT@[80; 81) \"s\"\n+    R_PAREN@[81; 82)\n+    COMMA@[82; 83)\n+    R_PAREN@[83; 84)\n+    STAR@[84; 85)\n+    WHITESPACE@[85; 90)\n+    R_BRACK@[90; 91)\n+    WHITESPACE@[91; 92)\n+    R_CURLY@[92; 93)\n+  WHITESPACE@[93; 95)\n+  FN_DEF@[95; 348)\n+    ATTR@[95; 102)\n+      POUND@[95; 96)\n+      TOKEN_TREE@[96; 102)\n+        L_BRACK@[96; 97)\n+        IDENT@[97; 101) \"test\"\n+        R_BRACK@[101; 102)\n+    WHITESPACE@[102; 103)\n+    FN_KW@[103; 105)\n+    WHITESPACE@[105; 106)\n+    NAME@[106; 125)\n+      IDENT@[106; 125) \"test_use_tree_merge\"\n+    PARAM_LIST@[125; 127)\n+      L_PAREN@[125; 126)\n+      R_PAREN@[126; 127)\n+    WHITESPACE@[127; 128)\n+    BLOCK@[128; 348)\n+      L_CURLY@[128; 129)\n+      WHITESPACE@[129; 134)\n+      EXPR_STMT@[134; 139)\n+        PATH_EXPR@[134; 139)\n+          PATH@[134; 139)\n+            PATH_SEGMENT@[134; 139)\n+              NAME_REF@[134; 139)\n+                IDENT@[134; 139) \"macro\"\n+                err: `expected SEMI`\n+      WHITESPACE@[139; 140)\n+      EXPR_STMT@[140; 203)\n+        CALL_EXPR@[140; 203)\n+          PATH_EXPR@[140; 150)\n+            PATH@[140; 150)\n+              PATH_SEGMENT@[140; 150)\n+                NAME_REF@[140; 150)\n+                  IDENT@[140; 150) \"test_merge\"\n+          ARG_LIST@[150; 203)\n+            L_PAREN@[150; 151)\n+            ARRAY_EXPR@[151; 202)\n+              L_BRACK@[151; 152)\n+              err: `expected expression`\n+              ERROR@[152; 153)\n+                DOLLAR@[152; 153)\n+                err: `expected COMMA`\n+              TUPLE_EXPR@[153; 166)\n+                L_PAREN@[153; 154)\n+                err: `expected expression`\n+                ERROR@[154; 155)\n+                  DOLLAR@[154; 155)\n+                  err: `expected COMMA`\n+                PATH_EXPR@[155; 160)\n+                  PATH@[155; 160)\n+                    PATH_SEGMENT@[155; 160)\n+                      NAME_REF@[155; 160)\n+                        IDENT@[155; 160) \"input\"\n+                        err: `expected COMMA`\n+                        err: `expected expression`\n+                ERROR@[160; 161)\n+                  COLON@[160; 161)\n+                  err: `expected COMMA`\n+                PATH_EXPR@[161; 165)\n+                  PATH@[161; 165)\n+                    PATH_SEGMENT@[161; 165)\n+                      NAME_REF@[161; 165)\n+                        IDENT@[161; 165) \"expr\"\n+                R_PAREN@[165; 166)\n+              COMMA@[166; 167)\n+              PREFIX_EXPR@[167; 170)\n+                STAR@[167; 168)\n+                WHITESPACE@[168; 169)\n+                err: `expected expression`\n+                ERROR@[169; 170)\n+                  DOLLAR@[169; 170)\n+                  err: `expected COMMA`\n+              BIN_EXPR@[170; 175)\n+                PAREN_EXPR@[170; 173)\n+                  L_PAREN@[170; 171)\n+                  err: `expected expression`\n+                  ERROR@[171; 172)\n+                    COMMA@[171; 172)\n+                  R_PAREN@[172; 173)\n+                STAR@[173; 174)\n+                err: `expected expression`\n+                ERROR@[174; 175)\n+                  R_BRACK@[174; 175)\n+              COMMA@[175; 176)\n+              WHITESPACE@[176; 177)\n+              ARRAY_EXPR@[177; 202)\n+                L_BRACK@[177; 178)\n+                err: `expected expression`\n+                ERROR@[178; 179)\n+                  DOLLAR@[178; 179)\n+                  err: `expected COMMA`\n+                TUPLE_EXPR@[179; 193)\n+                  L_PAREN@[179; 180)\n+                  err: `expected expression`\n+                  ERROR@[180; 181)\n+                    DOLLAR@[180; 181)\n+                    err: `expected COMMA`\n+                  PATH_EXPR@[181; 187)\n+                    PATH@[181; 187)\n+                      PATH_SEGMENT@[181; 187)\n+                        NAME_REF@[181; 187)\n+                          IDENT@[181; 187) \"output\"\n+                          err: `expected COMMA`\n+                          err: `expected expression`\n+                  ERROR@[187; 188)\n+                    COLON@[187; 188)\n+                    err: `expected COMMA`\n+                  PATH_EXPR@[188; 192)\n+                    PATH@[188; 192)\n+                      PATH_SEGMENT@[188; 192)\n+                        NAME_REF@[188; 192)\n+                          IDENT@[188; 192) \"expr\"\n+                  R_PAREN@[192; 193)\n+                COMMA@[193; 194)\n+                PREFIX_EXPR@[194; 197)\n+                  STAR@[194; 195)\n+                  WHITESPACE@[195; 196)\n+                  err: `expected expression`\n+                  ERROR@[196; 197)\n+                    DOLLAR@[196; 197)\n+                    err: `expected COMMA`\n+                BIN_EXPR@[197; 202)\n+                  PAREN_EXPR@[197; 200)\n+                    L_PAREN@[197; 198)\n+                    err: `expected expression`\n+                    ERROR@[198; 199)\n+                      COMMA@[198; 199)\n+                    R_PAREN@[199; 200)\n+                  STAR@[200; 201)\n+                  err: `expected expression`\n+                  ERROR@[201; 202)\n+                    R_BRACK@[201; 202)\n+                    err: `expected COMMA`\n+                    err: `expected expression`\n+                    err: `expected R_BRACK`\n+                    err: `expected COMMA`\n+                    err: `expected expression`\n+                    err: `expected R_BRACK`\n+            R_PAREN@[202; 203)\n+            err: `expected SEMI`\n+      WHITESPACE@[203; 204)\n+      BLOCK_EXPR@[204; 346)\n+        BLOCK@[204; 346)\n+          L_CURLY@[204; 205)\n+          WHITESPACE@[205; 214)\n+          EXPR_STMT@[214; 340)\n+            MACRO_CALL@[214; 339)\n+              PATH@[214; 223)\n+                PATH_SEGMENT@[214; 223)\n+                  NAME_REF@[214; 223)\n+                    IDENT@[214; 223) \"assert_eq\"\n+              EXCL@[223; 224)\n+              TOKEN_TREE@[224; 339)\n+                L_PAREN@[224; 225)\n+                WHITESPACE@[225; 238)\n+                IDENT@[238; 253) \"merge_use_trees\"\n+                TOKEN_TREE@[253; 284)\n+                  L_PAREN@[253; 254)\n+                  IDENT@[254; 269) \"parse_use_trees\"\n+                  EXCL@[269; 270)\n+                  TOKEN_TREE@[270; 283)\n+                    L_PAREN@[270; 271)\n+                    DOLLAR@[271; 272)\n+                    TOKEN_TREE@[272; 281)\n+                      L_PAREN@[272; 273)\n+                      DOLLAR@[273; 274)\n+                      IDENT@[274; 279) \"input\"\n+                      COMMA@[279; 280)\n+                      R_PAREN@[280; 281)\n+                    STAR@[281; 282)\n+                    R_PAREN@[282; 283)\n+                  R_PAREN@[283; 284)\n+                COMMA@[284; 285)\n+                WHITESPACE@[285; 298)\n+                IDENT@[298; 313) \"parse_use_trees\"\n+                EXCL@[313; 314)\n+                TOKEN_TREE@[314; 328)\n+                  L_PAREN@[314; 315)\n+                  DOLLAR@[315; 316)\n+                  TOKEN_TREE@[316; 326)\n+                    L_PAREN@[316; 317)\n+                    DOLLAR@[317; 318)\n+                    IDENT@[318; 324) \"output\"\n+                    COMMA@[324; 325)\n+                    R_PAREN@[325; 326)\n+                  STAR@[326; 327)\n+                  R_PAREN@[327; 328)\n+                COMMA@[328; 329)\n+                WHITESPACE@[329; 338)\n+                R_PAREN@[338; 339)\n+            SEMI@[339; 340)\n+          WHITESPACE@[340; 345)\n+          R_CURLY@[345; 346)\n+      WHITESPACE@[346; 347)\n+      R_CURLY@[347; 348)\n+  WHITESPACE@[348; 350)"}]}