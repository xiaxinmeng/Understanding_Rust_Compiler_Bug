{"sha": "00ba70a0957b8af2813940787238a733298dfa5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwYmE3MGEwOTU3YjhhZjI4MTM5NDA3ODcyMzhhNzMzMjk4ZGZhNWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T22:05:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T22:05:50Z"}, "message": "generalize", "tree": {"sha": "02f22300b30ddc15855ae241b432ba2d7cce657e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02f22300b30ddc15855ae241b432ba2d7cce657e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00ba70a0957b8af2813940787238a733298dfa5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00ba70a0957b8af2813940787238a733298dfa5f", "html_url": "https://github.com/rust-lang/rust/commit/00ba70a0957b8af2813940787238a733298dfa5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00ba70a0957b8af2813940787238a733298dfa5f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db2cbcb8bd61b4f19f61cc6319343e5ad894515", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db2cbcb8bd61b4f19f61cc6319343e5ad894515", "html_url": "https://github.com/rust-lang/rust/commit/1db2cbcb8bd61b4f19f61cc6319343e5ad894515"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "2cc175bdae130a4fc14b698d5eecd457f2656205", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/00ba70a0957b8af2813940787238a733298dfa5f/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ba70a0957b8af2813940787238a733298dfa5f/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=00ba70a0957b8af2813940787238a733298dfa5f", "patch": "@@ -1,6 +1,6 @@\n use std::{\n     marker::PhantomData,\n-    hash::Hash,\n+    hash::{Hash, Hasher},\n };\n \n use ra_db::{LocationIntener, FileId};\n@@ -139,13 +139,26 @@ impl MacroCallLoc {\n     }\n }\n \n-#[derive(Debug, PartialEq, Eq, Hash)]\n+#[derive(Debug)]\n pub struct ItemLoc<N: AstNode> {\n     pub(crate) module: Module,\n     raw: SourceItemId,\n     _ty: PhantomData<N>,\n }\n \n+impl<N: AstNode> PartialEq for ItemLoc<N> {\n+    fn eq(&self, other: &Self) -> bool {\n+        self.module == other.module && self.raw == other.raw\n+    }\n+}\n+impl<N: AstNode> Eq for ItemLoc<N> {}\n+impl<N: AstNode> Hash for ItemLoc<N> {\n+    fn hash<H: Hasher>(&self, hasher: &mut H) {\n+        self.module.hash(hasher);\n+        self.raw.hash(hasher);\n+    }\n+}\n+\n impl<N: AstNode> Clone for ItemLoc<N> {\n     fn clone(&self) -> ItemLoc<N> {\n         ItemLoc {\n@@ -173,14 +186,14 @@ impl<'a, DB: HirDatabase> LocationCtx<&'a DB> {\n     }\n     pub(crate) fn to_def<N, DEF>(self, ast: &N) -> DEF\n     where\n-        N: AstNode + Eq + Hash,\n+        N: AstNode,\n         DEF: AstItemDef<N>,\n     {\n         DEF::from_ast(self, ast)\n     }\n }\n \n-pub(crate) trait AstItemDef<N: AstNode + Eq + Hash>: ArenaId + Clone {\n+pub(crate) trait AstItemDef<N: AstNode>: ArenaId + Clone {\n     fn interner(interner: &HirInterner) -> &LocationIntener<ItemLoc<N>, Self>;\n     fn from_ast(ctx: LocationCtx<&impl HirDatabase>, ast: &N) -> Self {\n         let items = ctx.db.file_items(ctx.file_id);"}]}