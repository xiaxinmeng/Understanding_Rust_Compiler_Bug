{"sha": "e9af09c27490a9f5f264c4cf2a673272eb67b66d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YWYwOWMyNzQ5MGE5ZjVmMjY0YzRjZjJhNjczMjcyZWI2N2I2NmQ=", "commit": {"author": {"name": "flip1995", "email": "9744647+flip1995@users.noreply.github.com", "date": "2018-08-01T14:30:44Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-08-29T18:08:29Z"}, "message": "Adapt the *.stderr files of the ui-tests to the tool_lints", "tree": {"sha": "5e56dddf527aae648a028c07abb9653386ace2cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e56dddf527aae648a028c07abb9653386ace2cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9af09c27490a9f5f264c4cf2a673272eb67b66d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9af09c27490a9f5f264c4cf2a673272eb67b66d", "html_url": "https://github.com/rust-lang/rust/commit/e9af09c27490a9f5f264c4cf2a673272eb67b66d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9af09c27490a9f5f264c4cf2a673272eb67b66d/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b6f6051a8b62f966d28d63fe3c3637a29c410a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b6f6051a8b62f966d28d63fe3c3637a29c410a4", "html_url": "https://github.com/rust-lang/rust/commit/1b6f6051a8b62f966d28d63fe3c3637a29c410a4"}], "stats": {"total": 4218, "additions": 2109, "deletions": 2109}, "files": [{"sha": "2e5ebec757316e30e870715e605499ed268a8bc1", "filename": "tests/ui/absurd-extreme-comparisons.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this comparison involving the minimum or maximum element for this type co\n 10 |     u <= 0;\n    |     ^^^^^^\n    |\n-   = note: `-D absurd-extreme-comparisons` implied by `-D warnings`\n+   = note: `-D clippy::absurd-extreme-comparisons` implied by `-D warnings`\n    = help: because 0 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n@@ -141,7 +141,7 @@ error: <-comparison of unit values detected. This will always be false\n 31 |     () < {};\n    |     ^^^^^^^\n    |\n-   = note: #[deny(unit_cmp)] on by default\n+   = note: #[deny(clippy::unit_cmp)] on by default\n \n error: aborting due to 18 previous errors\n "}, {"sha": "3ff016b9c40caee533f90d56aef3dea81041b6d0", "filename": "tests/ui/approx_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fapprox_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fapprox_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: approximate value of `f{32, 64}::consts::E` found. Consider using it dire\n 7 |     let my_e = 2.7182;\n   |                ^^^^^^\n   |\n-  = note: `-D approx-constant` implied by `-D warnings`\n+  = note: `-D clippy::approx-constant` implied by `-D warnings`\n \n error: approximate value of `f{32, 64}::consts::E` found. Consider using it directly\n  --> $DIR/approx_const.rs:8:20"}, {"sha": "ee7a594fa158b6b1c9b995ddeafc9224daf71f54", "filename": "tests/ui/arithmetic.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Farithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Farithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: integer arithmetic detected\n 8 |     1 + i;\n   |     ^^^^^\n   |\n-  = note: `-D integer-arithmetic` implied by `-D warnings`\n+  = note: `-D clippy::integer-arithmetic` implied by `-D warnings`\n \n error: integer arithmetic detected\n  --> $DIR/arithmetic.rs:9:5\n@@ -37,7 +37,7 @@ error: floating-point arithmetic detected\n 23 |     f * 2.0;\n    |     ^^^^^^^\n    |\n-   = note: `-D float-arithmetic` implied by `-D warnings`\n+   = note: `-D clippy::float-arithmetic` implied by `-D warnings`\n \n error: floating-point arithmetic detected\n   --> $DIR/arithmetic.rs:25:5"}, {"sha": "fe7ccff78051571173901b53bfcb94704bb8e099", "filename": "tests/ui/assign_ops.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,57 +1,57 @@\n error: manual implementation of an assign operation\n- --> $DIR/assign_ops.rs:5:5\n+ --> $DIR/assign_ops.rs:7:5\n   |\n-5 |     a = a + 1;\n+7 |     a = a + 1;\n   |     ^^^^^^^^^ help: replace it with: `a += 1`\n   |\n-  = note: `-D assign-op-pattern` implied by `-D warnings`\n+  = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n- --> $DIR/assign_ops.rs:6:5\n+ --> $DIR/assign_ops.rs:8:5\n   |\n-6 |     a = 1 + a;\n+8 |     a = 1 + a;\n   |     ^^^^^^^^^ help: replace it with: `a += 1`\n \n error: manual implementation of an assign operation\n- --> $DIR/assign_ops.rs:7:5\n+ --> $DIR/assign_ops.rs:9:5\n   |\n-7 |     a = a - 1;\n+9 |     a = a - 1;\n   |     ^^^^^^^^^ help: replace it with: `a -= 1`\n \n error: manual implementation of an assign operation\n- --> $DIR/assign_ops.rs:8:5\n-  |\n-8 |     a = a * 99;\n-  |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n+  --> $DIR/assign_ops.rs:10:5\n+   |\n+10 |     a = a * 99;\n+   |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n \n error: manual implementation of an assign operation\n- --> $DIR/assign_ops.rs:9:5\n-  |\n-9 |     a = 42 * a;\n-  |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n+  --> $DIR/assign_ops.rs:11:5\n+   |\n+11 |     a = 42 * a;\n+   |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:10:5\n+  --> $DIR/assign_ops.rs:12:5\n    |\n-10 |     a = a / 2;\n+12 |     a = a / 2;\n    |     ^^^^^^^^^ help: replace it with: `a /= 2`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:11:5\n+  --> $DIR/assign_ops.rs:13:5\n    |\n-11 |     a = a % 5;\n+13 |     a = a % 5;\n    |     ^^^^^^^^^ help: replace it with: `a %= 5`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:12:5\n+  --> $DIR/assign_ops.rs:14:5\n    |\n-12 |     a = a & 1;\n+14 |     a = a & 1;\n    |     ^^^^^^^^^ help: replace it with: `a &= 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:18:5\n+  --> $DIR/assign_ops.rs:20:5\n    |\n-18 |     s = s + \"bla\";\n+20 |     s = s + \"bla\";\n    |     ^^^^^^^^^^^^^ help: replace it with: `s += \"bla\"`\n \n error: aborting due to 9 previous errors"}, {"sha": "93528e505773b4f541e1ff9fdd2bc2cda30090ef", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: variable appears on both sides of an assignment operation\n 8 |     a += a + 1;\n   |     ^^^^^^^^^^\n   |\n-  = note: `-D misrefactored-assign-op` implied by `-D warnings`\n+  = note: `-D clippy::misrefactored-assign-op` implied by `-D warnings`\n help: Did you mean a = a + 1 or a = a + a + 1? Consider replacing it with\n   |\n 8 |     a += 1;"}, {"sha": "6b6ecd675b3ca241ec0daa61bc5eb4dd846349ad", "filename": "tests/ui/attrs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fattrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fattrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,15 +4,15 @@ error: you have declared `#[inline(always)]` on `test_attr_lint`. This is usuall\n 6 | #[inline(always)]\n   | ^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D inline-always` implied by `-D warnings`\n+  = note: `-D clippy::inline-always` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n   --> $DIR/attrs.rs:27:14\n    |\n 27 | #[deprecated(since = \"forever\")]\n    |              ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D deprecated-semver` implied by `-D warnings`\n+   = note: `-D clippy::deprecated-semver` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n   --> $DIR/attrs.rs:30:14"}, {"sha": "46618fe4065431593f1ccb61c87079647ebeff1b", "filename": "tests/ui/author/matches.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fauthor%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fauthor%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fmatches.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: returning the result of a let binding from a block. Consider returning th\n 9 |             x\n   |             ^\n   |\n-  = note: `-D let-and-return` implied by `-D warnings`\n+  = note: `-D clippy::let-and-return` implied by `-D warnings`\n note: this expression can be directly returned\n  --> $DIR/matches.rs:8:21\n   |"}, {"sha": "dcf3f241b4b57cfb5f7135032798795fcdf196d1", "filename": "tests/ui/bit_masks.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbit_masks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbit_masks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,15 +4,15 @@ error: &-masking with zero\n 12 |     x & 0 == 0;\n    |     ^^^^^^^^^^\n    |\n-   = note: `-D bad-bit-mask` implied by `-D warnings`\n+   = note: `-D clippy::bad-bit-mask` implied by `-D warnings`\n \n error: this operation will always return zero. This is likely not the intended outcome\n   --> $DIR/bit_masks.rs:12:5\n    |\n 12 |     x & 0 == 0;\n    |     ^^^^^\n    |\n-   = note: #[deny(erasing_op)] on by default\n+   = note: #[deny(clippy::erasing_op)] on by default\n \n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n   --> $DIR/bit_masks.rs:15:5\n@@ -86,7 +86,7 @@ error: ineffective bit mask: `x | 1` compared to `3`, is the same as x compared\n 52 |     x | 1 > 3;\n    |     ^^^^^^^^^\n    |\n-   = note: `-D ineffective-bit-mask` implied by `-D warnings`\n+   = note: `-D clippy::ineffective-bit-mask` implied by `-D warnings`\n \n error: ineffective bit mask: `x | 1` compared to `4`, is the same as x compared directly\n   --> $DIR/bit_masks.rs:53:5"}, {"sha": "472401d5ed6046e25c63b505c97a1dcc8d1d19d0", "filename": "tests/ui/blacklisted_name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fblacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fblacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: use of a blacklisted/placeholder name `foo`\n 7 | fn test(foo: ()) {}\n   |         ^^^\n   |\n-  = note: `-D blacklisted-name` implied by `-D warnings`\n+  = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n \n error: use of a blacklisted/placeholder name `foo`\n   --> $DIR/blacklisted_name.rs:10:9"}, {"sha": "41f1e9c1681663c88536d769bc88b8293dc76f71", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -8,7 +8,7 @@ error: in an 'if' condition, avoid complex blocks or closures with blocks; inste\n 33 | |     } {\n    | |_____^\n    |\n-   = note: `-D block-in-if-condition-stmt` implied by `-D warnings`\n+   = note: `-D clippy::block-in-if-condition-stmt` implied by `-D warnings`\n    = help: try\n            let res = {\n                let x = 3;\n@@ -24,7 +24,7 @@ error: omit braces around single expression condition\n 41 |     if { true } {\n    |        ^^^^^^^^\n    |\n-   = note: `-D block-in-if-condition-expr` implied by `-D warnings`\n+   = note: `-D clippy::block-in-if-condition-expr` implied by `-D warnings`\n    = help: try\n            if true {\n                6\n@@ -48,7 +48,7 @@ error: this boolean expression can be simplified\n 67 |     if true && x == 3 {\n    |        ^^^^^^^^^^^^^^ help: try: `x == 3`\n    |\n-   = note: `-D nonminimal-bool` implied by `-D warnings`\n+   = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "2fcde94367a662950e832c15a8c053c9314ec89d", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: equality checks against true are unnecessary\n 7 |     if x == true { \"yes\" } else { \"no\" };\n   |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n   |\n-  = note: `-D bool-comparison` implied by `-D warnings`\n+  = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n  --> $DIR/bool_comparison.rs:8:8"}, {"sha": "45e371025ef6e4e4c71949849c81cebff5d2e227", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this boolean expression contains a logic bug\n 12 |     let _ = a && b || a;\n    |             ^^^^^^^^^^^ help: it would look like the following: `a`\n    |\n-   = note: `-D logic-bug` implied by `-D warnings`\n+   = note: `-D clippy::logic-bug` implied by `-D warnings`\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:12:18\n    |\n@@ -17,7 +17,7 @@ error: this boolean expression can be simplified\n 14 |     let _ = !true;\n    |             ^^^^^ help: try: `false`\n    |\n-   = note: `-D nonminimal-bool` implied by `-D warnings`\n+   = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:15:13"}, {"sha": "1098c7785e23ba74687fa19b5a256797e54be25a", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -7,8 +7,8 @@ error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n note: lint level defined here\n  --> $DIR/borrow_box.rs:4:9\n   |\n-4 | #![deny(borrowed_box)]\n-  |         ^^^^^^^^^^^^\n+4 | #![deny(clippy::borrowed_box)]\n+  |         ^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n   --> $DIR/borrow_box.rs:14:14"}, {"sha": "b90bb5e2a4e5d4b8149924533c942a7e3d7e5c90", "filename": "tests/ui/box_vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbox_vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbox_vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\n 17 | pub fn test(foo: Box<Vec<bool>>) {\n    |                  ^^^^^^^^^^^^^^\n    |\n-   = note: `-D box-vec` implied by `-D warnings`\n+   = note: `-D clippy::box-vec` implied by `-D warnings`\n    = help: `Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation.\n \n error: aborting due to previous error"}, {"sha": "78924ebf9cf3e85833645be429d6228dc2ead168", "filename": "tests/ui/builtin-type-shadow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbuiltin-type-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbuiltin-type-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: This generic shadows the built-in type `u32`\n 5 | fn foo<u32>(a: u32) -> u32 {\n   |        ^^^\n   |\n-  = note: `-D builtin-type-shadow` implied by `-D warnings`\n+  = note: `-D clippy::builtin-type-shadow` implied by `-D warnings`\n \n error[E0308]: mismatched types\n  --> $DIR/builtin-type-shadow.rs:6:5"}, {"sha": "0564d6a0b609a7393f959d972ca28beca09155f9", "filename": "tests/ui/bytecount.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbytecount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fbytecount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -7,8 +7,8 @@ error: You appear to be counting bytes the naive way\n note: lint level defined here\n  --> $DIR/bytecount.rs:4:8\n   |\n-4 | #[deny(naive_bytecount)]\n-  |        ^^^^^^^^^^^^^^^\n+4 | #[deny(clippy::naive_bytecount)]\n+  |        ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: You appear to be counting bytes the naive way\n   --> $DIR/bytecount.rs:10:13"}, {"sha": "2578c49893f6056afb83c6b6ce4e46f059c7ef7c", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: casting i32 to f32 causes a loss of precision (i32 is 32 bits wide, but f\n 8 |     1i32 as f32;\n   |     ^^^^^^^^^^^\n   |\n-  = note: `-D cast-precision-loss` implied by `-D warnings`\n+  = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting i64 to f32 causes a loss of precision (i64 is 64 bits wide, but f32's mantissa is only 23 bits wide)\n  --> $DIR/cast.rs:9:5\n@@ -42,7 +42,7 @@ error: casting f32 to i32 may truncate the value\n 15 |     1f32 as i32;\n    |     ^^^^^^^^^^^\n    |\n-   = note: `-D cast-possible-truncation` implied by `-D warnings`\n+   = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting f32 to u32 may truncate the value\n   --> $DIR/cast.rs:16:5\n@@ -56,7 +56,7 @@ error: casting f32 to u32 may lose the sign of the value\n 16 |     1f32 as u32;\n    |     ^^^^^^^^^^^\n    |\n-   = note: `-D cast-sign-loss` implied by `-D warnings`\n+   = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting f64 to f32 may truncate the value\n   --> $DIR/cast.rs:17:5\n@@ -106,7 +106,7 @@ error: casting u8 to i8 may wrap around the value\n 23 |     1u8 as i8;\n    |     ^^^^^^^^^\n    |\n-   = note: `-D cast-possible-wrap` implied by `-D warnings`\n+   = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting u16 to i16 may wrap around the value\n   --> $DIR/cast.rs:24:5\n@@ -138,7 +138,7 @@ error: casting f32 to f64 may become silently lossy if types change\n 29 |     1.0f32 as f64;\n    |     ^^^^^^^^^^^^^ help: try: `f64::from(1.0f32)`\n    |\n-   = note: `-D cast-lossless` implied by `-D warnings`\n+   = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting u8 to u16 may become silently lossy if types change\n   --> $DIR/cast.rs:31:5\n@@ -164,7 +164,7 @@ error: casting to the same type is unnecessary (`i32` -> `i32`)\n 37 |     1i32 as i32;\n    |     ^^^^^^^^^^^\n    |\n-   = note: `-D unnecessary-cast` implied by `-D warnings`\n+   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n \n error: casting to the same type is unnecessary (`f32` -> `f32`)\n   --> $DIR/cast.rs:38:5"}, {"sha": "d03d727a89c6c6344fb0bda968f1d58b1dd50b71", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,15 +1,15 @@\n error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n-  --> $DIR/cast_alignment.rs:13:5\n+  --> $DIR/cast_alignment.rs:15:5\n    |\n-13 |     (&1u8 as *const u8) as *const u16;\n+15 |     (&1u8 as *const u8) as *const u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D cast-ptr-alignment` implied by `-D warnings`\n+   = note: `-D clippy::cast-ptr-alignment` implied by `-D warnings`\n \n error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n-  --> $DIR/cast_alignment.rs:14:5\n+  --> $DIR/cast_alignment.rs:16:5\n    |\n-14 |     (&mut 1u8 as *mut u8) as *mut u16;\n+16 |     (&mut 1u8 as *mut u8) as *mut u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "9025633a141101da7b5835706842da95851d70be", "filename": "tests/ui/cast_lossless_float.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_lossless_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_lossless_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,63 +1,63 @@\n error: casting i8 to f32 may become silently lossy if types change\n- --> $DIR/cast_lossless_float.rs:5:5\n+ --> $DIR/cast_lossless_float.rs:7:5\n   |\n-5 |     1i8 as f32;\n+7 |     1i8 as f32;\n   |     ^^^^^^^^^^ help: try: `f32::from(1i8)`\n   |\n-  = note: `-D cast-lossless` implied by `-D warnings`\n+  = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to f64 may become silently lossy if types change\n- --> $DIR/cast_lossless_float.rs:6:5\n+ --> $DIR/cast_lossless_float.rs:8:5\n   |\n-6 |     1i8 as f64;\n+8 |     1i8 as f64;\n   |     ^^^^^^^^^^ help: try: `f64::from(1i8)`\n \n error: casting u8 to f32 may become silently lossy if types change\n- --> $DIR/cast_lossless_float.rs:7:5\n+ --> $DIR/cast_lossless_float.rs:9:5\n   |\n-7 |     1u8 as f32;\n+9 |     1u8 as f32;\n   |     ^^^^^^^^^^ help: try: `f32::from(1u8)`\n \n error: casting u8 to f64 may become silently lossy if types change\n- --> $DIR/cast_lossless_float.rs:8:5\n-  |\n-8 |     1u8 as f64;\n-  |     ^^^^^^^^^^ help: try: `f64::from(1u8)`\n+  --> $DIR/cast_lossless_float.rs:10:5\n+   |\n+10 |     1u8 as f64;\n+   |     ^^^^^^^^^^ help: try: `f64::from(1u8)`\n \n error: casting i16 to f32 may become silently lossy if types change\n- --> $DIR/cast_lossless_float.rs:9:5\n-  |\n-9 |     1i16 as f32;\n-  |     ^^^^^^^^^^^ help: try: `f32::from(1i16)`\n+  --> $DIR/cast_lossless_float.rs:11:5\n+   |\n+11 |     1i16 as f32;\n+   |     ^^^^^^^^^^^ help: try: `f32::from(1i16)`\n \n error: casting i16 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:10:5\n+  --> $DIR/cast_lossless_float.rs:12:5\n    |\n-10 |     1i16 as f64;\n+12 |     1i16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i16)`\n \n error: casting u16 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:11:5\n+  --> $DIR/cast_lossless_float.rs:13:5\n    |\n-11 |     1u16 as f32;\n+13 |     1u16 as f32;\n    |     ^^^^^^^^^^^ help: try: `f32::from(1u16)`\n \n error: casting u16 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:12:5\n+  --> $DIR/cast_lossless_float.rs:14:5\n    |\n-12 |     1u16 as f64;\n+14 |     1u16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u16)`\n \n error: casting i32 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:13:5\n+  --> $DIR/cast_lossless_float.rs:15:5\n    |\n-13 |     1i32 as f64;\n+15 |     1i32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i32)`\n \n error: casting u32 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:14:5\n+  --> $DIR/cast_lossless_float.rs:16:5\n    |\n-14 |     1u32 as f64;\n+16 |     1u32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u32)`\n \n error: aborting due to 10 previous errors"}, {"sha": "9640e1e18fa2191c909bde67fde514eb1c1836ee", "filename": "tests/ui/cast_lossless_integer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_lossless_integer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_lossless_integer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: casting i8 to i16 may become silently lossy if types change\n 6 |     1i8 as i16;\n   |     ^^^^^^^^^^ help: try: `i16::from(1i8)`\n   |\n-  = note: `-D cast-lossless` implied by `-D warnings`\n+  = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to i32 may become silently lossy if types change\n  --> $DIR/cast_lossless_integer.rs:7:5"}, {"sha": "1797e2e367f48ec776e23966c1cb2767403b2cd9", "filename": "tests/ui/cast_size.stderr", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcast_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_size.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,123 +1,123 @@\n error: casting isize to i8 may truncate the value\n- --> $DIR/cast_size.rs:5:5\n+ --> $DIR/cast_size.rs:7:5\n   |\n-5 |     1isize as i8;\n+7 |     1isize as i8;\n   |     ^^^^^^^^^^^^\n   |\n-  = note: `-D cast-possible-truncation` implied by `-D warnings`\n+  = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting isize to f64 causes a loss of precision on targets with 64-bit wide pointers (isize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n- --> $DIR/cast_size.rs:6:5\n+ --> $DIR/cast_size.rs:8:5\n   |\n-6 |     1isize as f64;\n+8 |     1isize as f64;\n   |     ^^^^^^^^^^^^^\n   |\n-  = note: `-D cast-precision-loss` implied by `-D warnings`\n+  = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting usize to f64 causes a loss of precision on targets with 64-bit wide pointers (usize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n- --> $DIR/cast_size.rs:7:5\n+ --> $DIR/cast_size.rs:9:5\n   |\n-7 |     1usize as f64;\n+9 |     1usize as f64;\n   |     ^^^^^^^^^^^^^\n \n error: casting isize to f32 causes a loss of precision (isize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n- --> $DIR/cast_size.rs:8:5\n-  |\n-8 |     1isize as f32;\n-  |     ^^^^^^^^^^^^^\n+  --> $DIR/cast_size.rs:10:5\n+   |\n+10 |     1isize as f32;\n+   |     ^^^^^^^^^^^^^\n \n error: casting usize to f32 causes a loss of precision (usize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n- --> $DIR/cast_size.rs:9:5\n-  |\n-9 |     1usize as f32;\n-  |     ^^^^^^^^^^^^^\n+  --> $DIR/cast_size.rs:11:5\n+   |\n+11 |     1usize as f32;\n+   |     ^^^^^^^^^^^^^\n \n error: casting isize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:10:5\n+  --> $DIR/cast_size.rs:12:5\n    |\n-10 |     1isize as i32;\n+12 |     1isize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to u32 may lose the sign of the value\n-  --> $DIR/cast_size.rs:11:5\n+  --> $DIR/cast_size.rs:13:5\n    |\n-11 |     1isize as u32;\n+13 |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n    |\n-   = note: `-D cast-sign-loss` implied by `-D warnings`\n+   = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting isize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:11:5\n+  --> $DIR/cast_size.rs:13:5\n    |\n-11 |     1isize as u32;\n+13 |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:12:5\n+  --> $DIR/cast_size.rs:14:5\n    |\n-12 |     1usize as u32;\n+14 |     1usize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:13:5\n+  --> $DIR/cast_size.rs:15:5\n    |\n-13 |     1usize as i32;\n+15 |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:13:5\n+  --> $DIR/cast_size.rs:15:5\n    |\n-13 |     1usize as i32;\n+15 |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n    |\n-   = note: `-D cast-possible-wrap` implied by `-D warnings`\n+   = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting i64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:15:5\n+  --> $DIR/cast_size.rs:17:5\n    |\n-15 |     1i64 as isize;\n+17 |     1i64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may lose the sign of the value\n-  --> $DIR/cast_size.rs:16:5\n+  --> $DIR/cast_size.rs:18:5\n    |\n-16 |     1i64 as usize;\n+18 |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:16:5\n+  --> $DIR/cast_size.rs:18:5\n    |\n-16 |     1i64 as usize;\n+18 |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:17:5\n+  --> $DIR/cast_size.rs:19:5\n    |\n-17 |     1u64 as isize;\n+19 |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may wrap around the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:17:5\n+  --> $DIR/cast_size.rs:19:5\n    |\n-17 |     1u64 as isize;\n+19 |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:18:5\n+  --> $DIR/cast_size.rs:20:5\n    |\n-18 |     1u64 as usize;\n+20 |     1u64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u32 to isize may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:19:5\n+  --> $DIR/cast_size.rs:21:5\n    |\n-19 |     1u32 as isize;\n+21 |     1u32 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i32 to usize may lose the sign of the value\n-  --> $DIR/cast_size.rs:22:5\n+  --> $DIR/cast_size.rs:24:5\n    |\n-22 |     1i32 as usize;\n+24 |     1i32 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: aborting due to 19 previous errors"}, {"sha": "f6ea10d57313564ccd649bab258ad640664b94fe", "filename": "tests/ui/char_lit_as_u8.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fchar_lit_as_u8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fchar_lit_as_u8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: casting character literal to u8. `char`s are 4 bytes wide in rust, so cas\n 7 |     let c = 'a' as u8;\n   |             ^^^^^^^^^\n   |\n-  = note: `-D char-lit-as-u8` implied by `-D warnings`\n+  = note: `-D clippy::char-lit-as-u8` implied by `-D warnings`\n   = help: Consider using a byte literal instead:\n           b'a'\n "}, {"sha": "4508ce442faea933233e19b0b5c437a835e0cbf9", "filename": "tests/ui/checked_unwrap.stderr", "status": "modified", "additions": 120, "deletions": 120, "changes": 240, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fchecked_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fchecked_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,313 +1,313 @@\n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n- --> $DIR/checked_unwrap.rs:7:9\n+ --> $DIR/checked_unwrap.rs:9:9\n   |\n-6 |     if x.is_some() {\n+8 |     if x.is_some() {\n   |        ----------- the check is happening here\n-7 |         x.unwrap(); // unnecessary\n+9 |         x.unwrap(); // unnecessary\n   |         ^^^^^^^^^^\n   |\n note: lint level defined here\n- --> $DIR/checked_unwrap.rs:1:27\n+ --> $DIR/checked_unwrap.rs:3:35\n   |\n-1 | #![deny(panicking_unwrap, unnecessary_unwrap)]\n-  |                           ^^^^^^^^^^^^^^^^^^\n+3 | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+  |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n- --> $DIR/checked_unwrap.rs:9:9\n-  |\n-6 |     if x.is_some() {\n-  |        ----------- because of this check\n+  --> $DIR/checked_unwrap.rs:11:9\n+   |\n+8  |     if x.is_some() {\n+   |        ----------- because of this check\n ...\n-9 |         x.unwrap(); // will panic\n-  |         ^^^^^^^^^^\n-  |\n+11 |         x.unwrap(); // will panic\n+   |         ^^^^^^^^^^\n+   |\n note: lint level defined here\n- --> $DIR/checked_unwrap.rs:1:9\n-  |\n-1 | #![deny(panicking_unwrap, unnecessary_unwrap)]\n-  |         ^^^^^^^^^^^^^^^^\n+  --> $DIR/checked_unwrap.rs:3:9\n+   |\n+3  | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:12:9\n+  --> $DIR/checked_unwrap.rs:14:9\n    |\n-11 |     if x.is_none() {\n+13 |     if x.is_none() {\n    |        ----------- because of this check\n-12 |         x.unwrap(); // will panic\n+14 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:14:9\n+  --> $DIR/checked_unwrap.rs:16:9\n    |\n-11 |     if x.is_none() {\n+13 |     if x.is_none() {\n    |        ----------- the check is happening here\n ...\n-14 |         x.unwrap(); // unnecessary\n+16 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:18:9\n+  --> $DIR/checked_unwrap.rs:20:9\n    |\n-17 |     if x.is_ok() {\n+19 |     if x.is_ok() {\n    |        --------- the check is happening here\n-18 |         x.unwrap(); // unnecessary\n+20 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:19:9\n+  --> $DIR/checked_unwrap.rs:21:9\n    |\n-17 |     if x.is_ok() {\n+19 |     if x.is_ok() {\n    |        --------- because of this check\n-18 |         x.unwrap(); // unnecessary\n-19 |         x.unwrap_err(); // will panic\n+20 |         x.unwrap(); // unnecessary\n+21 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:21:9\n+  --> $DIR/checked_unwrap.rs:23:9\n    |\n-17 |     if x.is_ok() {\n+19 |     if x.is_ok() {\n    |        --------- because of this check\n ...\n-21 |         x.unwrap(); // will panic\n+23 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:22:9\n+  --> $DIR/checked_unwrap.rs:24:9\n    |\n-17 |     if x.is_ok() {\n+19 |     if x.is_ok() {\n    |        --------- the check is happening here\n ...\n-22 |         x.unwrap_err(); // unnecessary\n+24 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:25:9\n+  --> $DIR/checked_unwrap.rs:27:9\n    |\n-24 |     if x.is_err() {\n+26 |     if x.is_err() {\n    |        ---------- because of this check\n-25 |         x.unwrap(); // will panic\n+27 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:26:9\n+  --> $DIR/checked_unwrap.rs:28:9\n    |\n-24 |     if x.is_err() {\n+26 |     if x.is_err() {\n    |        ---------- the check is happening here\n-25 |         x.unwrap(); // will panic\n-26 |         x.unwrap_err(); // unnecessary\n+27 |         x.unwrap(); // will panic\n+28 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:28:9\n+  --> $DIR/checked_unwrap.rs:30:9\n    |\n-24 |     if x.is_err() {\n+26 |     if x.is_err() {\n    |        ---------- the check is happening here\n ...\n-28 |         x.unwrap(); // unnecessary\n+30 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:29:9\n+  --> $DIR/checked_unwrap.rs:31:9\n    |\n-24 |     if x.is_err() {\n+26 |     if x.is_err() {\n    |        ---------- because of this check\n ...\n-29 |         x.unwrap_err(); // will panic\n+31 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:46:9\n+  --> $DIR/checked_unwrap.rs:48:9\n    |\n-45 |     if x.is_ok() && y.is_err() {\n+47 |     if x.is_ok() && y.is_err() {\n    |        --------- the check is happening here\n-46 |         x.unwrap(); // unnecessary\n+48 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:47:9\n+  --> $DIR/checked_unwrap.rs:49:9\n    |\n-45 |     if x.is_ok() && y.is_err() {\n+47 |     if x.is_ok() && y.is_err() {\n    |        --------- because of this check\n-46 |         x.unwrap(); // unnecessary\n-47 |         x.unwrap_err(); // will panic\n+48 |         x.unwrap(); // unnecessary\n+49 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:48:9\n+  --> $DIR/checked_unwrap.rs:50:9\n    |\n-45 |     if x.is_ok() && y.is_err() {\n+47 |     if x.is_ok() && y.is_err() {\n    |                     ---------- because of this check\n ...\n-48 |         y.unwrap(); // will panic\n+50 |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:49:9\n+  --> $DIR/checked_unwrap.rs:51:9\n    |\n-45 |     if x.is_ok() && y.is_err() {\n+47 |     if x.is_ok() && y.is_err() {\n    |                     ---------- the check is happening here\n ...\n-49 |         y.unwrap_err(); // unnecessary\n+51 |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:63:9\n+  --> $DIR/checked_unwrap.rs:65:9\n    |\n-58 |     if x.is_ok() || y.is_ok() {\n+60 |     if x.is_ok() || y.is_ok() {\n    |        --------- because of this check\n ...\n-63 |         x.unwrap(); // will panic\n+65 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:64:9\n+  --> $DIR/checked_unwrap.rs:66:9\n    |\n-58 |     if x.is_ok() || y.is_ok() {\n+60 |     if x.is_ok() || y.is_ok() {\n    |        --------- the check is happening here\n ...\n-64 |         x.unwrap_err(); // unnecessary\n+66 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:65:9\n+  --> $DIR/checked_unwrap.rs:67:9\n    |\n-58 |     if x.is_ok() || y.is_ok() {\n+60 |     if x.is_ok() || y.is_ok() {\n    |                     --------- because of this check\n ...\n-65 |         y.unwrap(); // will panic\n+67 |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:66:9\n+  --> $DIR/checked_unwrap.rs:68:9\n    |\n-58 |     if x.is_ok() || y.is_ok() {\n+60 |     if x.is_ok() || y.is_ok() {\n    |                     --------- the check is happening here\n ...\n-66 |         y.unwrap_err(); // unnecessary\n+68 |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:70:9\n+  --> $DIR/checked_unwrap.rs:72:9\n    |\n-69 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+71 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- the check is happening here\n-70 |         x.unwrap(); // unnecessary\n+72 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:71:9\n+  --> $DIR/checked_unwrap.rs:73:9\n    |\n-69 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+71 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- because of this check\n-70 |         x.unwrap(); // unnecessary\n-71 |         x.unwrap_err(); // will panic\n+72 |         x.unwrap(); // unnecessary\n+73 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:72:9\n+  --> $DIR/checked_unwrap.rs:74:9\n    |\n-69 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+71 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- because of this check\n ...\n-72 |         y.unwrap(); // will panic\n+74 |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:73:9\n+  --> $DIR/checked_unwrap.rs:75:9\n    |\n-69 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+71 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- the check is happening here\n ...\n-73 |         y.unwrap_err(); // unnecessary\n+75 |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:74:9\n+  --> $DIR/checked_unwrap.rs:76:9\n    |\n-69 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+71 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- the check is happening here\n ...\n-74 |         z.unwrap(); // unnecessary\n+76 |         z.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:75:9\n+  --> $DIR/checked_unwrap.rs:77:9\n    |\n-69 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+71 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- because of this check\n ...\n-75 |         z.unwrap_err(); // will panic\n+77 |         z.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:83:9\n+  --> $DIR/checked_unwrap.rs:85:9\n    |\n-77 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+79 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- because of this check\n ...\n-83 |         x.unwrap(); // will panic\n+85 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:84:9\n+  --> $DIR/checked_unwrap.rs:86:9\n    |\n-77 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+79 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- the check is happening here\n ...\n-84 |         x.unwrap_err(); // unnecessary\n+86 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:85:9\n+  --> $DIR/checked_unwrap.rs:87:9\n    |\n-77 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+79 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- the check is happening here\n ...\n-85 |         y.unwrap(); // unnecessary\n+87 |         y.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:86:9\n+  --> $DIR/checked_unwrap.rs:88:9\n    |\n-77 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+79 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- because of this check\n ...\n-86 |         y.unwrap_err(); // will panic\n+88 |         y.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:87:9\n+  --> $DIR/checked_unwrap.rs:89:9\n    |\n-77 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+79 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- because of this check\n ...\n-87 |         z.unwrap(); // will panic\n+89 |         z.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:88:9\n+  --> $DIR/checked_unwrap.rs:90:9\n    |\n-77 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+79 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- the check is happening here\n ...\n-88 |         z.unwrap_err(); // unnecessary\n+90 |         z.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:96:13\n+  --> $DIR/checked_unwrap.rs:98:13\n    |\n-95 |         if x.is_some() {\n+97 |         if x.is_some() {\n    |            ----------- the check is happening here\n-96 |             x.unwrap(); // unnecessary\n+98 |             x.unwrap(); // unnecessary\n    |             ^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:98:13\n-   |\n-95 |         if x.is_some() {\n-   |            ----------- because of this check\n+   --> $DIR/checked_unwrap.rs:100:13\n+    |\n+97  |         if x.is_some() {\n+    |            ----------- because of this check\n ...\n-98 |             x.unwrap(); // will panic\n-   |             ^^^^^^^^^^\n+100 |             x.unwrap(); // will panic\n+    |             ^^^^^^^^^^\n \n error: aborting due to 34 previous errors\n "}, {"sha": "7f636e6b5347b8dfac4d584c8b2ffc22c8dad186", "filename": "tests/ui/cmp_nan.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcmp_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcmp_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n 8 |     x == std::f32::NAN;\n   |     ^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D cmp-nan` implied by `-D warnings`\n+  = note: `-D clippy::cmp-nan` implied by `-D warnings`\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n  --> $DIR/cmp_nan.rs:9:5"}, {"sha": "55050d2a320ed1aa4ad3e851cd34342ad19c6f04", "filename": "tests/ui/cmp_null.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcmp_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcmp_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Comparing with null is better expressed by the .is_null() method\n 11 |     if p == ptr::null() {\n    |        ^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D cmp-null` implied by `-D warnings`\n+   = note: `-D clippy::cmp-null` implied by `-D warnings`\n \n error: Comparing with null is better expressed by the .is_null() method\n   --> $DIR/cmp_null.rs:16:8"}, {"sha": "2691c12eab1e1b86e9a7537d03213f2ef29f6432", "filename": "tests/ui/cmp_owned.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this creates an owned instance just for comparison\n 8 |         x != \"foo\".to_string();\n   |              ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n   |\n-  = note: `-D cmp-owned` implied by `-D warnings`\n+  = note: `-D clippy::cmp-owned` implied by `-D warnings`\n \n error: this creates an owned instance just for comparison\n   --> $DIR/cmp_owned.rs:10:9"}, {"sha": "a447fab7b6ecf71a92ea0edb9cd2f6d31da948ea", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -8,7 +8,7 @@ error: this if statement can be collapsed\n 12 | |     }\n    | |_____^\n    |\n-   = note: `-D collapsible-if` implied by `-D warnings`\n+   = note: `-D clippy::collapsible-if` implied by `-D warnings`\n help: try\n    |\n 8  |     if x == \"hello\" && y == \"world\" {"}, {"sha": "1c9106c0c219e89fa2a50215629c429885d2e9f2", "filename": "tests/ui/complex_types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcomplex_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcomplex_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: very complex type used. Consider factoring parts into `type` definitions\n 9 | const CST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D type-complexity` implied by `-D warnings`\n+  = note: `-D clippy::type-complexity` implied by `-D warnings`\n \n error: very complex type used. Consider factoring parts into `type` definitions\n   --> $DIR/complex_types.rs:10:12"}, {"sha": "db6c4d9444f79b413922f125e479731bc0fc569f", "filename": "tests/ui/const_static_lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fconst_static_lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fconst_static_lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Constants have by default a `'static` lifetime\n 4 | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n   |                -^^^^^^^---- help: consider removing `'static`: `&str`\n   |\n-  = note: `-D const-static-lifetime` implied by `-D warnings`\n+  = note: `-D clippy::const-static-lifetime` implied by `-D warnings`\n \n error: Constants have by default a `'static` lifetime\n  --> $DIR/const_static_lifetime.rs:8:21"}, {"sha": "febd34603c91d430e7d453510e0d0eddf01777a1", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 170, "deletions": 170, "changes": 340, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,384 +1,384 @@\n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:29:10\n+  --> $DIR/copies.rs:31:10\n    |\n-29 |       else { //~ ERROR same body as `if` block\n+31 |       else { //~ ERROR same body as `if` block\n    |  __________^\n-30 | |         Foo { bar: 42 };\n-31 | |         0..10;\n-32 | |         ..;\n+32 | |         Foo { bar: 42 };\n+33 | |         0..10;\n+34 | |         ..;\n ...  |\n-36 | |         foo();\n-37 | |     }\n+38 | |         foo();\n+39 | |     }\n    | |_____^\n    |\n-   = note: `-D if-same-then-else` implied by `-D warnings`\n+   = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n-  --> $DIR/copies.rs:20:13\n+  --> $DIR/copies.rs:22:13\n    |\n-20 |       if true {\n+22 |       if true {\n    |  _____________^\n-21 | |         Foo { bar: 42 };\n-22 | |         0..10;\n-23 | |         ..;\n+23 | |         Foo { bar: 42 };\n+24 | |         0..10;\n+25 | |         ..;\n ...  |\n-27 | |         foo();\n-28 | |     }\n+29 | |         foo();\n+30 | |     }\n    | |_____^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:78:14\n+  --> $DIR/copies.rs:80:14\n    |\n-78 |           _ => { //~ ERROR match arms have same body\n+80 |           _ => { //~ ERROR match arms have same body\n    |  ______________^\n-79 | |             foo();\n-80 | |             let mut a = 42 + [23].len() as i32;\n-81 | |             if true {\n+81 | |             foo();\n+82 | |             let mut a = 42 + [23].len() as i32;\n+83 | |             if true {\n ...  |\n-85 | |             a\n-86 | |         }\n+87 | |             a\n+88 | |         }\n    | |_________^\n    |\n-   = note: `-D match-same-arms` implied by `-D warnings`\n+   = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n-  --> $DIR/copies.rs:69:15\n+  --> $DIR/copies.rs:71:15\n    |\n-69 |           42 => {\n+71 |           42 => {\n    |  _______________^\n-70 | |             foo();\n-71 | |             let mut a = 42 + [23].len() as i32;\n-72 | |             if true {\n+72 | |             foo();\n+73 | |             let mut a = 42 + [23].len() as i32;\n+74 | |             if true {\n ...  |\n-76 | |             a\n-77 | |         }\n+78 | |             a\n+79 | |         }\n    | |_________^\n note: `42` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/copies.rs:69:15\n+  --> $DIR/copies.rs:71:15\n    |\n-69 |           42 => {\n+71 |           42 => {\n    |  _______________^\n-70 | |             foo();\n-71 | |             let mut a = 42 + [23].len() as i32;\n-72 | |             if true {\n+72 | |             foo();\n+73 | |             let mut a = 42 + [23].len() as i32;\n+74 | |             if true {\n ...  |\n-76 | |             a\n-77 | |         }\n+78 | |             a\n+79 | |         }\n    | |_________^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:92:14\n+  --> $DIR/copies.rs:94:14\n    |\n-92 |         _ => 0, //~ ERROR match arms have same body\n+94 |         _ => 0, //~ ERROR match arms have same body\n    |              ^\n    |\n note: same as this\n-  --> $DIR/copies.rs:90:19\n+  --> $DIR/copies.rs:92:19\n    |\n-90 |         Abc::A => 0,\n+92 |         Abc::A => 0,\n    |                   ^\n note: `Abc::A` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/copies.rs:90:19\n+  --> $DIR/copies.rs:92:19\n    |\n-90 |         Abc::A => 0,\n+92 |         Abc::A => 0,\n    |                   ^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:102:10\n+   --> $DIR/copies.rs:104:10\n     |\n-102 |       else { //~ ERROR same body as `if` block\n+104 |       else { //~ ERROR same body as `if` block\n     |  __________^\n-103 | |         42\n-104 | |     };\n+105 | |         42\n+106 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:99:21\n+   --> $DIR/copies.rs:101:21\n     |\n-99  |       let _ = if true {\n+101 |       let _ = if true {\n     |  _____________________^\n-100 | |         42\n-101 | |     }\n+102 | |         42\n+103 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:116:10\n+   --> $DIR/copies.rs:118:10\n     |\n-116 |       else { //~ ERROR same body as `if` block\n+118 |       else { //~ ERROR same body as `if` block\n     |  __________^\n-117 | |         for _ in &[42] {\n-118 | |             let foo: &Option<_> = &Some::<u8>(42);\n-119 | |             if true {\n+119 | |         for _ in &[42] {\n+120 | |             let foo: &Option<_> = &Some::<u8>(42);\n+121 | |             if true {\n ...   |\n-124 | |         }\n-125 | |     }\n+126 | |         }\n+127 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:106:13\n+   --> $DIR/copies.rs:108:13\n     |\n-106 |       if true {\n+108 |       if true {\n     |  _____________^\n-107 | |         for _ in &[42] {\n-108 | |             let foo: &Option<_> = &Some::<u8>(42);\n-109 | |             if true {\n+109 | |         for _ in &[42] {\n+110 | |             let foo: &Option<_> = &Some::<u8>(42);\n+111 | |             if true {\n ...   |\n-114 | |         }\n-115 | |     }\n+116 | |         }\n+117 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:138:10\n+   --> $DIR/copies.rs:140:10\n     |\n-138 |       else { //~ ERROR same body as `if` block\n+140 |       else { //~ ERROR same body as `if` block\n     |  __________^\n-139 | |         let bar = if true {\n-140 | |             42\n-141 | |         }\n+141 | |         let bar = if true {\n+142 | |             42\n+143 | |         }\n ...   |\n-147 | |         bar + 1;\n-148 | |     }\n+149 | |         bar + 1;\n+150 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:127:13\n+   --> $DIR/copies.rs:129:13\n     |\n-127 |       if true {\n+129 |       if true {\n     |  _____________^\n-128 | |         let bar = if true {\n-129 | |             42\n-130 | |         }\n+130 | |         let bar = if true {\n+131 | |             42\n+132 | |         }\n ...   |\n-136 | |         bar + 1;\n-137 | |     }\n+138 | |         bar + 1;\n+139 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:173:10\n+   --> $DIR/copies.rs:175:10\n     |\n-173 |       else { //~ ERROR same body as `if` block\n+175 |       else { //~ ERROR same body as `if` block\n     |  __________^\n-174 | |         if let Some(a) = Some(42) {}\n-175 | |     }\n+176 | |         if let Some(a) = Some(42) {}\n+177 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:170:13\n+   --> $DIR/copies.rs:172:13\n     |\n-170 |       if true {\n+172 |       if true {\n     |  _____________^\n-171 | |         if let Some(a) = Some(42) {}\n-172 | |     }\n+173 | |         if let Some(a) = Some(42) {}\n+174 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:180:10\n+   --> $DIR/copies.rs:182:10\n     |\n-180 |       else { //~ ERROR same body as `if` block\n+182 |       else { //~ ERROR same body as `if` block\n     |  __________^\n-181 | |         if let (1, .., 3) = (1, 2, 3) {}\n-182 | |     }\n+183 | |         if let (1, .., 3) = (1, 2, 3) {}\n+184 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:177:13\n+   --> $DIR/copies.rs:179:13\n     |\n-177 |       if true {\n+179 |       if true {\n     |  _____________^\n-178 | |         if let (1, .., 3) = (1, 2, 3) {}\n-179 | |     }\n+180 | |         if let (1, .., 3) = (1, 2, 3) {}\n+181 | |     }\n     | |_____^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:235:15\n+   --> $DIR/copies.rs:237:15\n     |\n-235 |         51 => foo(), //~ ERROR match arms have same body\n+237 |         51 => foo(), //~ ERROR match arms have same body\n     |               ^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:234:15\n+   --> $DIR/copies.rs:236:15\n     |\n-234 |         42 => foo(),\n+236 |         42 => foo(),\n     |               ^^^^^\n note: consider refactoring into `42 | 51`\n-   --> $DIR/copies.rs:234:15\n+   --> $DIR/copies.rs:236:15\n     |\n-234 |         42 => foo(),\n+236 |         42 => foo(),\n     |               ^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:241:17\n+   --> $DIR/copies.rs:243:17\n     |\n-241 |         None => 24, //~ ERROR match arms have same body\n+243 |         None => 24, //~ ERROR match arms have same body\n     |                 ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:240:20\n+   --> $DIR/copies.rs:242:20\n     |\n-240 |         Some(_) => 24,\n+242 |         Some(_) => 24,\n     |                    ^^\n note: consider refactoring into `Some(_) | None`\n-   --> $DIR/copies.rs:240:20\n+   --> $DIR/copies.rs:242:20\n     |\n-240 |         Some(_) => 24,\n+242 |         Some(_) => 24,\n     |                    ^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:263:28\n+   --> $DIR/copies.rs:265:28\n     |\n-263 |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n+265 |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n     |                            ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:262:28\n+   --> $DIR/copies.rs:264:28\n     |\n-262 |         (Some(a), None) => bar(a),\n+264 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n note: consider refactoring into `(Some(a), None) | (None, Some(a))`\n-   --> $DIR/copies.rs:262:28\n+   --> $DIR/copies.rs:264:28\n     |\n-262 |         (Some(a), None) => bar(a),\n+264 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:269:26\n+   --> $DIR/copies.rs:271:26\n     |\n-269 |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n+271 |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n     |                          ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:268:26\n+   --> $DIR/copies.rs:270:26\n     |\n-268 |         (Some(a), ..) => bar(a),\n+270 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n note: consider refactoring into `(Some(a), ..) | (.., Some(a))`\n-   --> $DIR/copies.rs:268:26\n+   --> $DIR/copies.rs:270:26\n     |\n-268 |         (Some(a), ..) => bar(a),\n+270 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:275:20\n+   --> $DIR/copies.rs:277:20\n     |\n-275 |         (.., 3) => 42, //~ ERROR match arms have same body\n+277 |         (.., 3) => 42, //~ ERROR match arms have same body\n     |                    ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:274:23\n+   --> $DIR/copies.rs:276:23\n     |\n-274 |         (1, .., 3) => 42,\n+276 |         (1, .., 3) => 42,\n     |                       ^^\n note: consider refactoring into `(1, .., 3) | (.., 3)`\n-   --> $DIR/copies.rs:274:23\n+   --> $DIR/copies.rs:276:23\n     |\n-274 |         (1, .., 3) => 42,\n+276 |         (1, .., 3) => 42,\n     |                       ^^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:281:12\n+   --> $DIR/copies.rs:283:12\n     |\n-281 |       } else { //~ ERROR same body as `if` block\n+283 |       } else { //~ ERROR same body as `if` block\n     |  ____________^\n-282 | |         0.0\n-283 | |     };\n+284 | |         0.0\n+285 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:279:21\n+   --> $DIR/copies.rs:281:21\n     |\n-279 |       let _ = if true {\n+281 |       let _ = if true {\n     |  _____________________^\n-280 | |         0.0\n-281 | |     } else { //~ ERROR same body as `if` block\n+282 | |         0.0\n+283 | |     } else { //~ ERROR same body as `if` block\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:287:12\n+   --> $DIR/copies.rs:289:12\n     |\n-287 |       } else { //~ ERROR same body as `if` block\n+289 |       } else { //~ ERROR same body as `if` block\n     |  ____________^\n-288 | |         -0.0\n-289 | |     };\n+290 | |         -0.0\n+291 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:285:21\n+   --> $DIR/copies.rs:287:21\n     |\n-285 |       let _ = if true {\n+287 |       let _ = if true {\n     |  _____________________^\n-286 | |         -0.0\n-287 | |     } else { //~ ERROR same body as `if` block\n+288 | |         -0.0\n+289 | |     } else { //~ ERROR same body as `if` block\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:307:12\n+   --> $DIR/copies.rs:309:12\n     |\n-307 |       } else { //~ ERROR same body as `if` block\n+309 |       } else { //~ ERROR same body as `if` block\n     |  ____________^\n-308 | |         std::f32::NAN\n-309 | |     };\n+310 | |         std::f32::NAN\n+311 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:305:21\n+   --> $DIR/copies.rs:307:21\n     |\n-305 |       let _ = if true {\n+307 |       let _ = if true {\n     |  _____________________^\n-306 | |         std::f32::NAN\n-307 | |     } else { //~ ERROR same body as `if` block\n+308 | |         std::f32::NAN\n+309 | |     } else { //~ ERROR same body as `if` block\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:325:10\n+   --> $DIR/copies.rs:327:10\n     |\n-325 |       else { //~ ERROR same body as `if` block\n+327 |       else { //~ ERROR same body as `if` block\n     |  __________^\n-326 | |         try!(Ok(\"foo\"));\n-327 | |     }\n+328 | |         try!(Ok(\"foo\"));\n+329 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:322:13\n+   --> $DIR/copies.rs:324:13\n     |\n-322 |       if true {\n+324 |       if true {\n     |  _____________^\n-323 | |         try!(Ok(\"foo\"));\n-324 | |     }\n+325 | |         try!(Ok(\"foo\"));\n+326 | |     }\n     | |_____^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:351:13\n+   --> $DIR/copies.rs:353:13\n     |\n-351 |     else if b { //~ ERROR ifs same condition\n+353 |     else if b { //~ ERROR ifs same condition\n     |             ^\n     |\n-    = note: `-D ifs-same-cond` implied by `-D warnings`\n+    = note: `-D clippy::ifs-same-cond` implied by `-D warnings`\n note: same as this\n-   --> $DIR/copies.rs:349:8\n+   --> $DIR/copies.rs:351:8\n     |\n-349 |     if b {\n+351 |     if b {\n     |        ^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:356:13\n+   --> $DIR/copies.rs:358:13\n     |\n-356 |     else if a == 1 { //~ ERROR ifs same condition\n+358 |     else if a == 1 { //~ ERROR ifs same condition\n     |             ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:354:8\n+   --> $DIR/copies.rs:356:8\n     |\n-354 |     if a == 1 {\n+356 |     if a == 1 {\n     |        ^^^^^^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:363:13\n+   --> $DIR/copies.rs:365:13\n     |\n-363 |     else if 2*a == 1 { //~ ERROR ifs same condition\n+365 |     else if 2*a == 1 { //~ ERROR ifs same condition\n     |             ^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:359:8\n+   --> $DIR/copies.rs:361:8\n     |\n-359 |     if 2*a == 1 {\n+361 |     if 2*a == 1 {\n     |        ^^^^^^^^\n \n error: aborting due to 20 previous errors"}, {"sha": "9a06a52d4bb52a2a0afe8c7a37be8b627d835c40", "filename": "tests/ui/copy_iterator.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcopy_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcopy_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopy_iterator.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,16 +1,16 @@\n error: you are implementing `Iterator` on a `Copy` type\n-  --> $DIR/copy_iterator.rs:6:1\n+  --> $DIR/copy_iterator.rs:8:1\n    |\n-6  | / impl Iterator for Countdown {\n-7  | |     type Item = u8;\n-8  | |\n-9  | |     fn next(&mut self) -> Option<u8> {\n+8  | / impl Iterator for Countdown {\n+9  | |     type Item = u8;\n+10 | |\n+11 | |     fn next(&mut self) -> Option<u8> {\n ...  |\n-14 | |     }\n-15 | | }\n+16 | |     }\n+17 | | }\n    | |_^\n    |\n-   = note: `-D copy-iterator` implied by `-D warnings`\n+   = note: `-D clippy::copy-iterator` implied by `-D warnings`\n    = note: consider implementing `IntoIterator` instead\n \n error: aborting due to previous error"}, {"sha": "2b2b51de6ae3486fc40088340cf160d1f3b115bb", "filename": "tests/ui/cstring.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcstring.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcstring.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcstring.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,15 +1,15 @@\n error: you are getting the inner pointer of a temporary `CString`\n- --> $DIR/cstring.rs:7:5\n+ --> $DIR/cstring.rs:9:5\n   |\n-7 |     CString::new(\"foo\").unwrap().as_ptr();\n+9 |     CString::new(\"foo\").unwrap().as_ptr();\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: #[deny(temporary_cstring_as_ptr)] on by default\n+  = note: #[deny(clippy::temporary_cstring_as_ptr)] on by default\n   = note: that pointer will be invalid outside this expression\n help: assign the `CString` to a variable to extend its lifetime\n- --> $DIR/cstring.rs:7:5\n+ --> $DIR/cstring.rs:9:5\n   |\n-7 |     CString::new(\"foo\").unwrap().as_ptr();\n+9 |     CString::new(\"foo\").unwrap().as_ptr();\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "ff93f21e3ae5f6cece3b730bf5f63f4acd8fad56", "filename": "tests/ui/cyclomatic_complexity.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcyclomatic_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcyclomatic_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -10,7 +10,7 @@ error: the function has a cyclomatic complexity of 28\n 89 | | }\n    | |_^\n    |\n-   = note: `-D cyclomatic-complexity` implied by `-D warnings`\n+   = note: `-D clippy::cyclomatic-complexity` implied by `-D warnings`\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 7"}, {"sha": "f8342f0d9e5022c7624c9b2474011ad7f6478141", "filename": "tests/ui/cyclomatic_complexity_attr_used.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -10,7 +10,7 @@ error: the function has a cyclomatic complexity of 3\n 17 | | }\n    | |_^\n    |\n-   = note: `-D cyclomatic-complexity` implied by `-D warnings`\n+   = note: `-D clippy::cyclomatic-complexity` implied by `-D warnings`\n    = help: you could split it up into multiple smaller functions\n \n error: aborting due to previous error"}, {"sha": "343936bb7a21947cd9dbd78ddf06d28909a7b55f", "filename": "tests/ui/decimal_literal_representation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdecimal_literal_representation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdecimal_literal_representation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: integer literal has a better hexadecimal representation\n 18 |         32_773,        // 0x8005\n    |         ^^^^^^ help: consider: `0x8005`\n    |\n-   = note: `-D decimal-literal-representation` implied by `-D warnings`\n+   = note: `-D clippy::decimal-literal-representation` implied by `-D warnings`\n \n error: integer literal has a better hexadecimal representation\n   --> $DIR/decimal_literal_representation.rs:19:9"}, {"sha": "e3c263e773291328c94085284913c9880d64a05a", "filename": "tests/ui/default_trait_access.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdefault_trait_access.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdefault_trait_access.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,51 +1,51 @@\n error: Calling std::string::String::default() is more clear than this expression\n- --> $DIR/default_trait_access.rs:8:22\n-  |\n-8 |     let s1: String = Default::default();\n-  |                      ^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n-  |\n-  = note: `-D default-trait-access` implied by `-D warnings`\n+  --> $DIR/default_trait_access.rs:10:22\n+   |\n+10 |     let s1: String = Default::default();\n+   |                      ^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n+   |\n+   = note: `-D clippy::default-trait-access` implied by `-D warnings`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:12:22\n+  --> $DIR/default_trait_access.rs:14:22\n    |\n-12 |     let s3: String = D2::default();\n+14 |     let s3: String = D2::default();\n    |                      ^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:14:22\n+  --> $DIR/default_trait_access.rs:16:22\n    |\n-14 |     let s4: String = std::default::Default::default();\n+16 |     let s4: String = std::default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:18:22\n+  --> $DIR/default_trait_access.rs:20:22\n    |\n-18 |     let s6: String = default::Default::default();\n+20 |     let s6: String = default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling GenericDerivedDefault<std::string::String>::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:28:46\n+  --> $DIR/default_trait_access.rs:30:46\n    |\n-28 |     let s11: GenericDerivedDefault<String> = Default::default();\n+30 |     let s11: GenericDerivedDefault<String> = Default::default();\n    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `GenericDerivedDefault<std::string::String>::default()`\n \n error: Calling TupleDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:34:36\n+  --> $DIR/default_trait_access.rs:36:36\n    |\n-34 |     let s14: TupleDerivedDefault = Default::default();\n+36 |     let s14: TupleDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `TupleDerivedDefault::default()`\n \n error: Calling ArrayDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:36:36\n+  --> $DIR/default_trait_access.rs:38:36\n    |\n-36 |     let s15: ArrayDerivedDefault = Default::default();\n+38 |     let s15: ArrayDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `ArrayDerivedDefault::default()`\n \n error: Calling TupleStructDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:40:42\n+  --> $DIR/default_trait_access.rs:42:42\n    |\n-40 |     let s17: TupleStructDerivedDefault = Default::default();\n+42 |     let s17: TupleStructDerivedDefault = Default::default();\n    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `TupleStructDerivedDefault::default()`\n \n error: aborting due to 8 previous errors"}, {"sha": "fa706f22b905e01d2764c4b944ec5a13c652aa08", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n 17 | #[derive(Hash)]\n    |          ^^^^\n    |\n-   = note: #[deny(derive_hash_xor_eq)] on by default\n+   = note: #[deny(clippy::derive_hash_xor_eq)] on by default\n note: `PartialEq` implemented here\n   --> $DIR/derive.rs:20:1\n    |\n@@ -49,7 +49,7 @@ error: you are implementing `Clone` explicitly on a `Copy` type\n 43 | | }\n    | |_^\n    |\n-   = note: `-D expl-impl-clone-on-copy` implied by `-D warnings`\n+   = note: `-D clippy::expl-impl-clone-on-copy` implied by `-D warnings`\n note: consider deriving `Clone` or removing `Copy`\n   --> $DIR/derive.rs:41:1\n    |"}, {"sha": "8e86a7734dc38ca69bf201ca79879a3a7512b5ea", "filename": "tests/ui/diverging_sub_expression.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdiverging_sub_expression.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdiverging_sub_expression.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,39 +1,39 @@\n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:18:10\n+  --> $DIR/diverging_sub_expression.rs:20:10\n    |\n-18 |     b || diverge();\n+20 |     b || diverge();\n    |          ^^^^^^^^^\n    |\n-   = note: `-D diverging-sub-expression` implied by `-D warnings`\n+   = note: `-D clippy::diverging-sub-expression` implied by `-D warnings`\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:19:10\n+  --> $DIR/diverging_sub_expression.rs:21:10\n    |\n-19 |     b || A.foo();\n+21 |     b || A.foo();\n    |          ^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:28:26\n+  --> $DIR/diverging_sub_expression.rs:30:26\n    |\n-28 |             6 => true || return,\n+30 |             6 => true || return,\n    |                          ^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:29:26\n+  --> $DIR/diverging_sub_expression.rs:31:26\n    |\n-29 |             7 => true || continue,\n+31 |             7 => true || continue,\n    |                          ^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:32:26\n+  --> $DIR/diverging_sub_expression.rs:34:26\n    |\n-32 |             3 => true || diverge(),\n+34 |             3 => true || diverge(),\n    |                          ^^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:37:26\n+  --> $DIR/diverging_sub_expression.rs:39:26\n    |\n-37 |             _ => true || break,\n+39 |             _ => true || break,\n    |                          ^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "5322075208ce827db48124ac4f38150319ed3b39", "filename": "tests/ui/dlist.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdlist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdlist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,48 +1,48 @@\n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:12:16\n+  --> $DIR/dlist.rs:14:16\n    |\n-12 |     type Baz = LinkedList<u8>;\n+14 |     type Baz = LinkedList<u8>;\n    |                ^^^^^^^^^^^^^^\n    |\n-   = note: `-D linkedlist` implied by `-D warnings`\n+   = note: `-D clippy::linkedlist` implied by `-D warnings`\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:13:12\n+  --> $DIR/dlist.rs:15:12\n    |\n-13 |     fn foo(LinkedList<u8>);\n+15 |     fn foo(LinkedList<u8>);\n    |            ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:14:24\n+  --> $DIR/dlist.rs:16:24\n    |\n-14 |     const BAR : Option<LinkedList<u8>>;\n+16 |     const BAR : Option<LinkedList<u8>>;\n    |                        ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:25:15\n+  --> $DIR/dlist.rs:27:15\n    |\n-25 |     fn foo(_: LinkedList<u8>) {}\n+27 |     fn foo(_: LinkedList<u8>) {}\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:28:39\n+  --> $DIR/dlist.rs:30:39\n    |\n-28 | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n+30 | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n    |                                       ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:32:29\n+  --> $DIR/dlist.rs:34:29\n    |\n-32 | pub fn test_ret() -> Option<LinkedList<u8>> {\n+34 | pub fn test_ret() -> Option<LinkedList<u8>> {\n    |                             ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work"}, {"sha": "c781f36db7aa78deb6425db0c3880f14cf65b507", "filename": "tests/ui/doc.stderr", "status": "modified", "additions": 69, "deletions": 69, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,183 +1,183 @@\n error: you should put `DOC_MARKDOWN` between ticks in the documentation\n- --> $DIR/doc.rs:1:29\n+ --> $DIR/doc.rs:3:29\n   |\n-1 | //! This file tests for the DOC_MARKDOWN lint\n+3 | //! This file tests for the DOC_MARKDOWN lint\n   |                             ^^^^^^^^^^^^\n   |\n-  = note: `-D doc-markdown` implied by `-D warnings`\n+  = note: `-D clippy::doc-markdown` implied by `-D warnings`\n \n error: you should put `foo_bar` between ticks in the documentation\n- --> $DIR/doc.rs:8:9\n-  |\n-8 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n-  |         ^^^^^^^\n+  --> $DIR/doc.rs:10:9\n+   |\n+10 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n+   |         ^^^^^^^\n \n error: you should put `foo::bar` between ticks in the documentation\n- --> $DIR/doc.rs:8:51\n-  |\n-8 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n-  |                                                   ^^^^^^^^\n+  --> $DIR/doc.rs:10:51\n+   |\n+10 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n+   |                                                   ^^^^^^^^\n \n error: you should put `Foo::some_fun` between ticks in the documentation\n- --> $DIR/doc.rs:9:84\n-  |\n-9 | /// Markdown is _weird_. I mean _really weird_.  This /_ is ok. So is `_`. But not Foo::some_fun\n-  |                                                                                    ^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:11:84\n+   |\n+11 | /// Markdown is _weird_. I mean _really weird_.  This /_ is ok. So is `_`. But not Foo::some_fun\n+   |                                                                                    ^^^^^^^^^^^^^\n \n error: you should put `a::global:path` between ticks in the documentation\n-  --> $DIR/doc.rs:11:15\n+  --> $DIR/doc.rs:13:15\n    |\n-11 | /// Here be ::a::global:path.\n+13 | /// Here be ::a::global:path.\n    |               ^^^^^^^^^^^^^^\n \n error: you should put `NotInCodeBlock` between ticks in the documentation\n-  --> $DIR/doc.rs:12:22\n+  --> $DIR/doc.rs:14:22\n    |\n-12 | /// That's not code ~NotInCodeBlock~.\n+14 | /// That's not code ~NotInCodeBlock~.\n    |                      ^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:13:5\n+  --> $DIR/doc.rs:15:5\n    |\n-13 | /// be_sure_we_got_to_the_end_of_it\n+15 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:27:5\n+  --> $DIR/doc.rs:29:5\n    |\n-27 | /// be_sure_we_got_to_the_end_of_it\n+29 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:34:5\n+  --> $DIR/doc.rs:36:5\n    |\n-34 | /// be_sure_we_got_to_the_end_of_it\n+36 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:48:5\n+  --> $DIR/doc.rs:50:5\n    |\n-48 | /// be_sure_we_got_to_the_end_of_it\n+50 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `link_with_underscores` between ticks in the documentation\n-  --> $DIR/doc.rs:52:22\n+  --> $DIR/doc.rs:54:22\n    |\n-52 | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n+54 | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n    |                      ^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `inline_link2` between ticks in the documentation\n-  --> $DIR/doc.rs:55:21\n+  --> $DIR/doc.rs:57:21\n    |\n-55 | /// It can also be [inline_link2].\n+57 | /// It can also be [inline_link2].\n    |                     ^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:65:5\n+  --> $DIR/doc.rs:67:5\n    |\n-65 | /// be_sure_we_got_to_the_end_of_it\n+67 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n-  --> $DIR/doc.rs:73:8\n+  --> $DIR/doc.rs:75:8\n    |\n-73 | /// ## CamelCaseThing\n+75 | /// ## CamelCaseThing\n    |        ^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n-  --> $DIR/doc.rs:76:7\n+  --> $DIR/doc.rs:78:7\n    |\n-76 | /// # CamelCaseThing\n+78 | /// # CamelCaseThing\n    |       ^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n-  --> $DIR/doc.rs:78:22\n+  --> $DIR/doc.rs:80:22\n    |\n-78 | /// Not a title #897 CamelCaseThing\n+80 | /// Not a title #897 CamelCaseThing\n    |                      ^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:79:5\n+  --> $DIR/doc.rs:81:5\n    |\n-79 | /// be_sure_we_got_to_the_end_of_it\n+81 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:86:5\n+  --> $DIR/doc.rs:88:5\n    |\n-86 | /// be_sure_we_got_to_the_end_of_it\n+88 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:99:5\n-   |\n-99 | /// be_sure_we_got_to_the_end_of_it\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   --> $DIR/doc.rs:101:5\n+    |\n+101 | /// be_sure_we_got_to_the_end_of_it\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-   --> $DIR/doc.rs:110:42\n+   --> $DIR/doc.rs:112:42\n     |\n-110 | /** E.g. serialization of an empty list: FooBar\n+112 | /** E.g. serialization of an empty list: FooBar\n     |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-   --> $DIR/doc.rs:115:5\n+   --> $DIR/doc.rs:117:5\n     |\n-115 | And BarQuz too.\n+117 | And BarQuz too.\n     |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:116:1\n+   --> $DIR/doc.rs:118:1\n     |\n-116 | be_sure_we_got_to_the_end_of_it\n+118 | be_sure_we_got_to_the_end_of_it\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-   --> $DIR/doc.rs:121:42\n+   --> $DIR/doc.rs:123:42\n     |\n-121 | /** E.g. serialization of an empty list: FooBar\n+123 | /** E.g. serialization of an empty list: FooBar\n     |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-   --> $DIR/doc.rs:126:5\n+   --> $DIR/doc.rs:128:5\n     |\n-126 | And BarQuz too.\n+128 | And BarQuz too.\n     |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:127:1\n+   --> $DIR/doc.rs:129:1\n     |\n-127 | be_sure_we_got_to_the_end_of_it\n+129 | be_sure_we_got_to_the_end_of_it\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:138:5\n+   --> $DIR/doc.rs:140:5\n     |\n-138 | /// be_sure_we_got_to_the_end_of_it\n+140 | /// be_sure_we_got_to_the_end_of_it\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:165:13\n+   --> $DIR/doc.rs:167:13\n     |\n-165 | /// Not ok: http://www.unicode.org\n+167 | /// Not ok: http://www.unicode.org\n     |             ^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:166:13\n+   --> $DIR/doc.rs:168:13\n     |\n-166 | /// Not ok: https://www.unicode.org\n+168 | /// Not ok: https://www.unicode.org\n     |             ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:167:13\n+   --> $DIR/doc.rs:169:13\n     |\n-167 | /// Not ok: http://www.unicode.org/\n+169 | /// Not ok: http://www.unicode.org/\n     |             ^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-   --> $DIR/doc.rs:168:13\n+   --> $DIR/doc.rs:170:13\n     |\n-168 | /// Not ok: http://www.unicode.org/reports/tr9/#Reordering_Resolved_Levels\n+170 | /// Not ok: http://www.unicode.org/reports/tr9/#Reordering_Resolved_Levels\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 30 previous errors"}, {"sha": "e6a0e976414df283e91b366c9c80435e918449e0", "filename": "tests/ui/double_comparison.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdouble_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdouble_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_comparison.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: This binary expression can be simplified\n 4 |     if x == y || x < y {\n   |        ^^^^^^^^^^^^^^^ help: try: `x <= y`\n   |\n-  = note: `-D double-comparisons` implied by `-D warnings`\n+  = note: `-D clippy::double-comparisons` implied by `-D warnings`\n \n error: This binary expression can be simplified\n  --> $DIR/double_comparison.rs:7:8"}, {"sha": "02202dbd63ce0120f29f4159a648c5e184d48e18", "filename": "tests/ui/double_neg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdouble_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdouble_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: `--x` could be misinterpreted as pre-decrement by C programmers, is usual\n 9 |     --x;\n   |     ^^^\n   |\n-  = note: `-D double-neg` implied by `-D warnings`\n+  = note: `-D clippy::double-neg` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "a6a29eeb06316f24223002bec3fba98660f2ecb1", "filename": "tests/ui/double_parens.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdouble_parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdouble_parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_parens.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Consider removing unnecessary double parentheses\n 16 |     ((0))\n    |     ^^^^^\n    |\n-   = note: `-D double-parens` implied by `-D warnings`\n+   = note: `-D clippy::double-parens` implied by `-D warnings`\n \n error: Consider removing unnecessary double parentheses\n   --> $DIR/double_parens.rs:20:14"}, {"sha": "043067fe8af7311061312eac4f689c4590af0df7", "filename": "tests/ui/drop_forget_copy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdrop_forget_copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdrop_forget_copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: calls to `std::mem::drop` with a value that implements Copy. Dropping a c\n 33 |     drop(s1);\n    |     ^^^^^^^^\n    |\n-   = note: `-D drop-copy` implied by `-D warnings`\n+   = note: `-D clippy::drop-copy` implied by `-D warnings`\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:33:10\n    |\n@@ -41,7 +41,7 @@ error: calls to `std::mem::forget` with a value that implements Copy. Forgetting\n 39 |     forget(s1);\n    |     ^^^^^^^^^^\n    |\n-   = note: `-D forget-copy` implied by `-D warnings`\n+   = note: `-D clippy::forget-copy` implied by `-D warnings`\n note: argument has type SomeStruct\n   --> $DIR/drop_forget_copy.rs:39:12\n    |"}, {"sha": "227918f591723e9127fe587bef01239e94bc7601", "filename": "tests/ui/drop_forget_ref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdrop_forget_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fdrop_forget_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_ref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: calls to `std::mem::drop` with a reference instead of an owned value. Dro\n 12 |     drop(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D drop-ref` implied by `-D warnings`\n+   = note: `-D clippy::drop-ref` implied by `-D warnings`\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:12:10\n    |\n@@ -17,7 +17,7 @@ error: calls to `std::mem::forget` with a reference instead of an owned value. F\n 13 |     forget(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D forget-ref` implied by `-D warnings`\n+   = note: `-D clippy::forget-ref` implied by `-D warnings`\n note: argument has type &SomeStruct\n   --> $DIR/drop_forget_ref.rs:13:12\n    |"}, {"sha": "70714534653af76fd50df58ba0f022024d31a6de", "filename": "tests/ui/duplicate_underscore_argument.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fduplicate_underscore_argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fduplicate_underscore_argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduplicate_underscore_argument.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: `darth` already exists, having another argument having almost the same na\n 7 | fn join_the_dark_side(darth: i32, _darth: i32) {}\n   |                       ^^^^^\n   |\n-  = note: `-D duplicate-underscore-argument` implied by `-D warnings`\n+  = note: `-D clippy::duplicate-underscore-argument` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "c23b041a80a5e06c5ba3177c7019a0216f8a77b9", "filename": "tests/ui/duration_subsec.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fduration_subsec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fduration_subsec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduration_subsec.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,33 +1,33 @@\n error: Calling `subsec_millis()` is more concise than this calculation\n- --> $DIR/duration_subsec.rs:8:24\n-  |\n-8 |     let bad_millis_1 = dur.subsec_micros() / 1_000;\n-  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n-  |\n-  = note: `-D duration-subsec` implied by `-D warnings`\n+  --> $DIR/duration_subsec.rs:10:24\n+   |\n+10 |     let bad_millis_1 = dur.subsec_micros() / 1_000;\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n+   |\n+   = note: `-D clippy::duration-subsec` implied by `-D warnings`\n \n error: Calling `subsec_millis()` is more concise than this calculation\n- --> $DIR/duration_subsec.rs:9:24\n-  |\n-9 |     let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n-  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n+  --> $DIR/duration_subsec.rs:11:24\n+   |\n+11 |     let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:14:22\n+  --> $DIR/duration_subsec.rs:16:22\n    |\n-14 |     let bad_micros = dur.subsec_nanos() / 1_000;\n+16 |     let bad_micros = dur.subsec_nanos() / 1_000;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:19:13\n+  --> $DIR/duration_subsec.rs:21:13\n    |\n-19 |     let _ = (&dur).subsec_nanos() / 1_000;\n+21 |     let _ = (&dur).subsec_nanos() / 1_000;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(&dur).subsec_micros()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:23:13\n+  --> $DIR/duration_subsec.rs:25:13\n    |\n-23 |     let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n+25 |     let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n \n error: aborting due to 5 previous errors"}, {"sha": "a352546ce9f007cb96afe9575cd96182838a4db8", "filename": "tests/ui/else_if_without_else.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Felse_if_without_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Felse_if_without_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Felse_if_without_else.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,21 +1,21 @@\n error: if expression with an `else if`, but without a final `else`\n-  --> $DIR/else_if_without_else.rs:39:12\n+  --> $DIR/else_if_without_else.rs:41:12\n    |\n-39 |       } else if bla2() { //~ ERROR else if without else\n+41 |       } else if bla2() { //~ ERROR else if without else\n    |  ____________^\n-40 | |         println!(\"else if\");\n-41 | |     }\n+42 | |         println!(\"else if\");\n+43 | |     }\n    | |_____^ help: add an `else` block here\n    |\n-   = note: `-D else-if-without-else` implied by `-D warnings`\n+   = note: `-D clippy::else-if-without-else` implied by `-D warnings`\n \n error: if expression with an `else if`, but without a final `else`\n-  --> $DIR/else_if_without_else.rs:47:12\n+  --> $DIR/else_if_without_else.rs:49:12\n    |\n-47 |       } else if bla3() { //~ ERROR else if without else\n+49 |       } else if bla3() { //~ ERROR else if without else\n    |  ____________^\n-48 | |         println!(\"else if 2\");\n-49 | |     }\n+50 | |         println!(\"else if 2\");\n+51 | |     }\n    | |_____^ help: add an `else` block here\n \n error: aborting due to 2 previous errors"}, {"sha": "f198793fed43df19b759f46161b2399597e8d764", "filename": "tests/ui/empty_enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fempty_enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fempty_enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: enum with no variants\n 7 | enum Empty {}\n   | ^^^^^^^^^^^^^\n   |\n-  = note: `-D empty-enum` implied by `-D warnings`\n+  = note: `-D clippy::empty-enum` implied by `-D warnings`\n help: consider using the uninhabited type `!` or a wrapper around it\n  --> $DIR/empty_enum.rs:7:1\n   |"}, {"sha": "7bcec54a6003f42fd0f6a52baee5335a204a348b", "filename": "tests/ui/empty_line_after_outer_attribute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fempty_line_after_outer_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -7,7 +7,7 @@ error: Found an empty line after an outer attribute. Perhaps you forgot to add a\n 8 | | fn with_one_newline_and_comment() { assert!(true) }\n   | |_\n   |\n-  = note: `-D empty-line-after-outer-attr` implied by `-D warnings`\n+  = note: `-D clippy::empty-line-after-outer-attr` implied by `-D warnings`\n \n error: Found an empty line after an outer attribute. Perhaps you forgot to add a '!' to make it an inner attribute?\n   --> $DIR/empty_line_after_outer_attribute.rs:17:1"}, {"sha": "cffe8b232359a7409fc0612771f42d5979aa4d11", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: usage of `contains_key` followed by `insert` on a `HashMap`\n 13 |     if !m.contains_key(&k) { m.insert(k, v); }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k).or_insert(v)`\n    |\n-   = note: `-D map-entry` implied by `-D warnings`\n+   = note: `-D clippy::map-entry` implied by `-D warnings`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:17:5"}, {"sha": "bb1d19e41b27a47080ad258b68df0fa4dd77d699", "filename": "tests/ui/enum_glob_use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fenum_glob_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fenum_glob_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: don't use glob imports for enum variants\n 6 | use std::cmp::Ordering::*;\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D enum-glob-use` implied by `-D warnings`\n+  = note: `-D clippy::enum-glob-use` implied by `-D warnings`\n \n error: don't use glob imports for enum variants\n   --> $DIR/enum_glob_use.rs:12:1"}, {"sha": "bd083e7e069147df907cc23af3e5226f51e6fd70", "filename": "tests/ui/enum_variants.stderr", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fenum_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fenum_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,100 +1,100 @@\n error: Variant name ends with the enum's name\n-  --> $DIR/enum_variants.rs:14:5\n+  --> $DIR/enum_variants.rs:16:5\n    |\n-14 |     cFoo,\n+16 |     cFoo,\n    |     ^^^^\n    |\n-   = note: `-D enum-variant-names` implied by `-D warnings`\n+   = note: `-D clippy::enum-variant-names` implied by `-D warnings`\n \n error: Variant name starts with the enum's name\n-  --> $DIR/enum_variants.rs:25:5\n+  --> $DIR/enum_variants.rs:27:5\n    |\n-25 |     FoodGood,\n+27 |     FoodGood,\n    |     ^^^^^^^^\n \n error: Variant name starts with the enum's name\n-  --> $DIR/enum_variants.rs:26:5\n+  --> $DIR/enum_variants.rs:28:5\n    |\n-26 |     FoodMiddle,\n+28 |     FoodMiddle,\n    |     ^^^^^^^^^^\n \n error: Variant name starts with the enum's name\n-  --> $DIR/enum_variants.rs:27:5\n+  --> $DIR/enum_variants.rs:29:5\n    |\n-27 |     FoodBad,\n+29 |     FoodBad,\n    |     ^^^^^^^\n \n error: All variants have the same prefix: `Food`\n-  --> $DIR/enum_variants.rs:24:1\n+  --> $DIR/enum_variants.rs:26:1\n    |\n-24 | / enum Food {\n-25 | |     FoodGood,\n-26 | |     FoodMiddle,\n-27 | |     FoodBad,\n-28 | | }\n+26 | / enum Food {\n+27 | |     FoodGood,\n+28 | |     FoodMiddle,\n+29 | |     FoodBad,\n+30 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `CallType`\n-  --> $DIR/enum_variants.rs:34:1\n+  --> $DIR/enum_variants.rs:36:1\n    |\n-34 | / enum BadCallType {\n-35 | |     CallTypeCall,\n-36 | |     CallTypeCreate,\n-37 | |     CallTypeDestroy,\n-38 | | }\n+36 | / enum BadCallType {\n+37 | |     CallTypeCall,\n+38 | |     CallTypeCreate,\n+39 | |     CallTypeDestroy,\n+40 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `Constant`\n-  --> $DIR/enum_variants.rs:45:1\n+  --> $DIR/enum_variants.rs:47:1\n    |\n-45 | / enum Consts {\n-46 | |     ConstantInt,\n-47 | |     ConstantCake,\n-48 | |     ConstantLie,\n-49 | | }\n+47 | / enum Consts {\n+48 | |     ConstantInt,\n+49 | |     ConstantCake,\n+50 | |     ConstantLie,\n+51 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `With`\n-  --> $DIR/enum_variants.rs:78:1\n+  --> $DIR/enum_variants.rs:80:1\n    |\n-78 | / enum Seallll {\n-79 | |     WithOutCake,\n-80 | |     WithOutTea,\n-81 | |     WithOut,\n-82 | | }\n+80 | / enum Seallll {\n+81 | |     WithOutCake,\n+82 | |     WithOutTea,\n+83 | |     WithOut,\n+84 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `Prefix`\n-  --> $DIR/enum_variants.rs:84:1\n+  --> $DIR/enum_variants.rs:86:1\n    |\n-84 | / enum NonCaps {\n-85 | |     Prefix\u7684,\n-86 | |     PrefixTea,\n-87 | |     PrefixCake,\n-88 | | }\n+86 | / enum NonCaps {\n+87 | |     Prefix\u7684,\n+88 | |     PrefixTea,\n+89 | |     PrefixCake,\n+90 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `With`\n-  --> $DIR/enum_variants.rs:90:1\n+  --> $DIR/enum_variants.rs:92:1\n    |\n-90 | / pub enum PubSeall {\n-91 | |     WithOutCake,\n-92 | |     WithOutTea,\n-93 | |     WithOut,\n-94 | | }\n+92 | / pub enum PubSeall {\n+93 | |     WithOutCake,\n+94 | |     WithOutTea,\n+95 | |     WithOut,\n+96 | | }\n    | |_^\n    |\n-   = note: `-D pub-enum-variant-names` implied by `-D warnings`\n+   = note: `-D clippy::pub-enum-variant-names` implied by `-D warnings`\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: aborting due to 10 previous errors"}, {"sha": "cccf4ed030c322b9c8266a07b5e8e3b24d6300b7", "filename": "tests/ui/enums_clike.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fenums_clike.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fenums_clike.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenums_clike.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,51 +1,51 @@\n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:10:5\n+  --> $DIR/enums_clike.rs:12:5\n    |\n-10 |     X = 0x1_0000_0000,\n+12 |     X = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D enum-clike-unportable-variant` implied by `-D warnings`\n+   = note: `-D clippy::enum-clike-unportable-variant` implied by `-D warnings`\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:17:5\n+  --> $DIR/enums_clike.rs:19:5\n    |\n-17 |     X = 0x1_0000_0000,\n+19 |     X = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:20:5\n+  --> $DIR/enums_clike.rs:22:5\n    |\n-20 |     A = 0xFFFF_FFFF,\n+22 |     A = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:27:5\n+  --> $DIR/enums_clike.rs:29:5\n    |\n-27 |     Z = 0xFFFF_FFFF,\n+29 |     Z = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:28:5\n+  --> $DIR/enums_clike.rs:30:5\n    |\n-28 |     A = 0x1_0000_0000,\n+30 |     A = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:30:5\n+  --> $DIR/enums_clike.rs:32:5\n    |\n-30 |     C = (std::i32::MIN as isize) - 1,\n+32 |     C = (std::i32::MIN as isize) - 1,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:36:5\n+  --> $DIR/enums_clike.rs:38:5\n    |\n-36 |     Z = 0xFFFF_FFFF,\n+38 |     Z = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:37:5\n+  --> $DIR/enums_clike.rs:39:5\n    |\n-37 |     A = 0x1_0000_0000,\n+39 |     A = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "ad0c8d8ecd7c860cbfbd28d6fa4c01a3f7c69301", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this boolean expression can be simplified\n 37 |     true && true;\n    |     ^^^^^^^^^^^^ help: try: `true`\n    |\n-   = note: `-D nonminimal-bool` implied by `-D warnings`\n+   = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:39:5\n@@ -42,7 +42,7 @@ error: equal expressions as operands to `==`\n 10 |     1 == 1;\n    |     ^^^^^^\n    |\n-   = note: `-D eq-op` implied by `-D warnings`\n+   = note: `-D clippy::eq-op` implied by `-D warnings`\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:11:5\n@@ -202,7 +202,7 @@ error: taken reference of right operand\n    |                 |\n    |                 help: use the right value directly: `y`\n    |\n-   = note: `-D op-ref` implied by `-D warnings`\n+   = note: `-D clippy::op-ref` implied by `-D warnings`\n \n error: equal expressions as operands to `/`\n   --> $DIR/eq_op.rs:97:20"}, {"sha": "18486ab47819aeb75a1d4c0aeb9b2416aeb42f06", "filename": "tests/ui/erasing_op.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ferasing_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ferasing_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferasing_op.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this operation will always return zero. This is likely not the intended o\n 9 |     x * 0;\n   |     ^^^^^\n   |\n-  = note: `-D erasing-op` implied by `-D warnings`\n+  = note: `-D clippy::erasing-op` implied by `-D warnings`\n \n error: this operation will always return zero. This is likely not the intended outcome\n   --> $DIR/erasing_op.rs:10:5"}, {"sha": "89543d6af0c6b9ea0046a1450a10d95405857478", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: redundant closure found\n 7 |     let a = Some(1u8).map(|a| foo(a));\n   |                           ^^^^^^^^^^ help: remove closure as shown: `foo`\n   |\n-  = note: `-D redundant-closure` implied by `-D warnings`\n+  = note: `-D clippy::redundant-closure` implied by `-D warnings`\n \n error: redundant closure found\n  --> $DIR/eta.rs:8:10\n@@ -24,7 +24,7 @@ error: this expression borrows a reference that is immediately dereferenced by t\n 11 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n    |                     ^^^ help: change this to: `&2`\n    |\n-   = note: `-D needless-borrow` implied by `-D warnings`\n+   = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: redundant closure found\n   --> $DIR/eta.rs:18:27"}, {"sha": "3caba829be42d64771a8d2cce31b85d90b1134d8", "filename": "tests/ui/eval_order_dependence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Feval_order_dependence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Feval_order_dependence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: unsequenced read of a variable\n 8 |     let a = { x = 1; 1 } + x;\n   |                            ^\n   |\n-  = note: `-D eval-order-dependence` implied by `-D warnings`\n+  = note: `-D clippy::eval-order-dependence` implied by `-D warnings`\n note: whether read occurs before this write depends on evaluation order\n  --> $DIR/eval_order_dependence.rs:8:15\n   |"}, {"sha": "bb0546cdcc689cdca6e45aa6afd8c826a9e4a2aa", "filename": "tests/ui/excessive_precision.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fexcessive_precision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fexcessive_precision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: float has excessive precision\n 15 |     const BAD32_1: f32 = 0.123_456_789_f32;\n    |                          ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n    |\n-   = note: `-D excessive-precision` implied by `-D warnings`\n+   = note: `-D clippy::excessive-precision` implied by `-D warnings`\n \n error: float has excessive precision\n   --> $DIR/excessive_precision.rs:16:26"}, {"sha": "fb14120b16d39b07c2cbc710f0e13dadb9a8b87f", "filename": "tests/ui/explicit_write.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fexplicit_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fexplicit_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,39 +1,39 @@\n error: use of `write!(stdout(), ...).unwrap()`. Consider using `print!` instead\n-  --> $DIR/explicit_write.rs:16:9\n+  --> $DIR/explicit_write.rs:18:9\n    |\n-16 |         write!(std::io::stdout(), \"test\").unwrap();\n+18 |         write!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D explicit-write` implied by `-D warnings`\n+   = note: `-D clippy::explicit-write` implied by `-D warnings`\n \n error: use of `write!(stderr(), ...).unwrap()`. Consider using `eprint!` instead\n-  --> $DIR/explicit_write.rs:17:9\n+  --> $DIR/explicit_write.rs:19:9\n    |\n-17 |         write!(std::io::stderr(), \"test\").unwrap();\n+19 |         write!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `writeln!(stdout(), ...).unwrap()`. Consider using `println!` instead\n-  --> $DIR/explicit_write.rs:18:9\n+  --> $DIR/explicit_write.rs:20:9\n    |\n-18 |         writeln!(std::io::stdout(), \"test\").unwrap();\n+20 |         writeln!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `writeln!(stderr(), ...).unwrap()`. Consider using `eprintln!` instead\n-  --> $DIR/explicit_write.rs:19:9\n+  --> $DIR/explicit_write.rs:21:9\n    |\n-19 |         writeln!(std::io::stderr(), \"test\").unwrap();\n+21 |         writeln!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `stdout().write_fmt(...).unwrap()`. Consider using `print!` instead\n-  --> $DIR/explicit_write.rs:20:9\n+  --> $DIR/explicit_write.rs:22:9\n    |\n-20 |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n+22 |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `stderr().write_fmt(...).unwrap()`. Consider using `eprint!` instead\n-  --> $DIR/explicit_write.rs:21:9\n+  --> $DIR/explicit_write.rs:23:9\n    |\n-21 |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n+23 |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "4dbc7879d316d921b1e25ad000a466c352286d84", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,91 +1,91 @@\n error: consider implementing `TryFrom` instead\n- --> $DIR/fallible_impl_from.rs:5:1\n-  |\n-5 | / impl From<String> for Foo {\n-6 | |     fn from(s: String) -> Self {\n-7 | |         Foo(s.parse().unwrap())\n-8 | |     }\n-9 | | }\n-  | |_^\n-  |\n+  --> $DIR/fallible_impl_from.rs:7:1\n+   |\n+7  | / impl From<String> for Foo {\n+8  | |     fn from(s: String) -> Self {\n+9  | |         Foo(s.parse().unwrap())\n+10 | |     }\n+11 | | }\n+   | |_^\n+   |\n note: lint level defined here\n- --> $DIR/fallible_impl_from.rs:1:9\n-  |\n-1 | #![deny(fallible_impl_from)]\n-  |         ^^^^^^^^^^^^^^^^^^\n-  = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n+  --> $DIR/fallible_impl_from.rs:3:9\n+   |\n+3  | #![deny(clippy::fallible_impl_from)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n- --> $DIR/fallible_impl_from.rs:7:13\n-  |\n-7 |         Foo(s.parse().unwrap())\n-  |             ^^^^^^^^^^^^^^^^^^\n+  --> $DIR/fallible_impl_from.rs:9:13\n+   |\n+9  |         Foo(s.parse().unwrap())\n+   |             ^^^^^^^^^^^^^^^^^^\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:28:1\n+  --> $DIR/fallible_impl_from.rs:30:1\n    |\n-28 | / impl From<usize> for Invalid {\n-29 | |     fn from(i: usize) -> Invalid {\n-30 | |         if i != 42 {\n-31 | |             panic!();\n+30 | / impl From<usize> for Invalid {\n+31 | |     fn from(i: usize) -> Invalid {\n+32 | |         if i != 42 {\n+33 | |             panic!();\n ...  |\n-34 | |     }\n-35 | | }\n+36 | |     }\n+37 | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:31:13\n+  --> $DIR/fallible_impl_from.rs:33:13\n    |\n-31 |             panic!();\n+33 |             panic!();\n    |             ^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:37:1\n+  --> $DIR/fallible_impl_from.rs:39:1\n    |\n-37 | / impl From<Option<String>> for Invalid {\n-38 | |     fn from(s: Option<String>) -> Invalid {\n-39 | |         let s = s.unwrap();\n-40 | |         if !s.is_empty() {\n+39 | / impl From<Option<String>> for Invalid {\n+40 | |     fn from(s: Option<String>) -> Invalid {\n+41 | |         let s = s.unwrap();\n+42 | |         if !s.is_empty() {\n ...  |\n-46 | |     }\n-47 | | }\n+48 | |     }\n+49 | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:39:17\n+  --> $DIR/fallible_impl_from.rs:41:17\n    |\n-39 |         let s = s.unwrap();\n+41 |         let s = s.unwrap();\n    |                 ^^^^^^^^^^\n-40 |         if !s.is_empty() {\n-41 |             panic!(42);\n+42 |         if !s.is_empty() {\n+43 |             panic!(42);\n    |             ^^^^^^^^^^^\n-42 |         } else if s.parse::<u32>().unwrap() != 42 {\n+44 |         } else if s.parse::<u32>().unwrap() != 42 {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n-43 |             panic!(\"{:?}\", s);\n+45 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:55:1\n+  --> $DIR/fallible_impl_from.rs:57:1\n    |\n-55 | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n-56 | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n-57 | |         if s.parse::<u32>().ok().unwrap() != 42 {\n-58 | |             panic!(\"{:?}\", s);\n+57 | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n+58 | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n+59 | |         if s.parse::<u32>().ok().unwrap() != 42 {\n+60 | |             panic!(\"{:?}\", s);\n ...  |\n-61 | |     }\n-62 | | }\n+63 | |     }\n+64 | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:57:12\n+  --> $DIR/fallible_impl_from.rs:59:12\n    |\n-57 |         if s.parse::<u32>().ok().unwrap() != 42 {\n+59 |         if s.parse::<u32>().ok().unwrap() != 42 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-58 |             panic!(\"{:?}\", s);\n+60 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n "}, {"sha": "1fde70601aaffec15ce89ddf59edf924c3ce13bb", "filename": "tests/ui/filter_methods.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffilter_methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffilter_methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -7,7 +7,7 @@ error: called `filter(p).map(q)` on an `Iterator`. This is more succinctly expre\n 10 | |                               .map(|x| x * 2)\n    | |_____________________________________________^\n    |\n-   = note: `-D filter-map` implied by `-D warnings`\n+   = note: `-D clippy::filter-map` implied by `-D warnings`\n \n error: called `filter(p).flat_map(q)` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)` and filtering by returning an empty Iterator.\n   --> $DIR/filter_methods.rs:13:21"}, {"sha": "598ebf3366887f2863dc3a1ac0e60bb40d18038d", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: strict comparison of f32 or f64\n 49 |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE as f64 - 2.0).abs() < error`\n    |\n-   = note: `-D float-cmp` implied by `-D warnings`\n+   = note: `-D clippy::float-cmp` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:49:5\n    |"}, {"sha": "14083979511dbafc640095397b1f020fb842a1e5", "filename": "tests/ui/float_cmp_const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffloat_cmp_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffloat_cmp_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp_const.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: strict comparison of f32 or f64 constant\n 17 |     1f32 == ONE;\n    |     ^^^^^^^^^^^ help: consider comparing them within some error: `(1f32 - ONE).abs() < error`\n    |\n-   = note: `-D float-cmp-const` implied by `-D warnings`\n+   = note: `-D clippy::float-cmp-const` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp_const.rs:17:5\n    |"}, {"sha": "732dc2ab448bda5f2d82c8d04c9cf22497b4c5c1", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: for loop over `option`, which is an `Option`. This is more readably writt\n 17 |     for x in option {\n    |              ^^^^^^\n    |\n-   = note: `-D for-loop-over-option` implied by `-D warnings`\n+   = note: `-D clippy::for-loop-over-option` implied by `-D warnings`\n    = help: consider replacing `for x in option` with `if let Some(x) = option`\n \n error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement.\n@@ -13,7 +13,7 @@ error: for loop over `result`, which is a `Result`. This is more readably writte\n 22 |     for x in result {\n    |              ^^^^^^\n    |\n-   = note: `-D for-loop-over-result` implied by `-D warnings`\n+   = note: `-D clippy::for-loop-over-result` implied by `-D warnings`\n    = help: consider replacing `for x in result` with `if let Ok(x) = result`\n \n error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n@@ -30,7 +30,7 @@ error: you are iterating over `Iterator::next()` which is an Option; this will c\n 32 |     for x in v.iter().next() {\n    |              ^^^^^^^^^^^^^^^\n    |\n-   = note: `-D iter-next-loop` implied by `-D warnings`\n+   = note: `-D clippy::iter-next-loop` implied by `-D warnings`\n \n error: for loop over `v.iter().next().and(Some(0))`, which is an `Option`. This is more readably written as an `if let` statement.\n   --> $DIR/for_loop.rs:37:14\n@@ -57,7 +57,7 @@ error: this loop never actually loops\n 56 | |     }\n    | |_____^\n    |\n-   = note: `-D never-loop` implied by `-D warnings`\n+   = note: `-D clippy::never-loop` implied by `-D warnings`\n \n error: this loop never actually loops\n   --> $DIR/for_loop.rs:59:5\n@@ -74,7 +74,7 @@ error: the loop variable `i` is only used to index `vec`.\n 86 |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n    |\n-   = note: `-D needless-range-loop` implied by `-D warnings`\n+   = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n    |\n 86 |     for <item> in &vec {\n@@ -206,7 +206,7 @@ error: this range is empty so this for loop will never run\n 148 |     for i in 10..0 {\n     |              ^^^^^\n     |\n-    = note: `-D reverse-range-loop` implied by `-D warnings`\n+    = note: `-D clippy::reverse-range-loop` implied by `-D warnings`\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n 148 |     for i in (0..10).rev() {\n@@ -270,7 +270,7 @@ error: it is more idiomatic to loop over references to containers instead of usi\n 215 |     for _v in vec.iter() {}\n     |               ^^^^^^^^^^ help: to write this more concisely, try: `&vec`\n     |\n-    = note: `-D explicit-iter-loop` implied by `-D warnings`\n+    = note: `-D clippy::explicit-iter-loop` implied by `-D warnings`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:217:15\n@@ -284,7 +284,7 @@ error: it is more idiomatic to loop over containers instead of using explicit it\n 220 |     for _v in out_vec.into_iter() {}\n     |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `out_vec`\n     |\n-    = note: `-D explicit-into-iter-loop` implied by `-D warnings`\n+    = note: `-D clippy::explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:223:15\n@@ -358,15 +358,15 @@ error: you are collect()ing an iterator and throwing away the result. Consider u\n 264 |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n-    = note: `-D unused-collect` implied by `-D warnings`\n+    = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n    --> $DIR/for_loop.rs:269:15\n     |\n 269 |     for _v in &vec {\n     |               ^^^^\n     |\n-    = note: `-D explicit-counter-loop` implied by `-D warnings`\n+    = note: `-D clippy::explicit-counter-loop` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n    --> $DIR/for_loop.rs:275:15\n@@ -380,7 +380,7 @@ error: you seem to want to iterate on a map's values\n 385 |     for (_, v) in &m {\n     |                   ^^\n     |\n-    = note: `-D for-kv-map` implied by `-D warnings`\n+    = note: `-D clippy::for-kv-map` implied by `-D warnings`\n help: use the corresponding method\n     |\n 385 |     for v in m.values() {\n@@ -432,7 +432,7 @@ error: it looks like you're manually copying between slices\n 462 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n     |\n-    = note: `-D manual-memcpy` implied by `-D warnings`\n+    = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n error: it looks like you're manually copying between slices\n    --> $DIR/for_loop.rs:467:14"}, {"sha": "ca6ef90539618493387e2c74961fb9d62177affd", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: useless use of `format!`\n 12 |     format!(\"foo\");\n    |     ^^^^^^^^^^^^^^^ help: consider using .to_string(): `\"foo\".to_string()`\n    |\n-   = note: `-D useless-format` implied by `-D warnings`\n+   = note: `-D clippy::useless-format` implied by `-D warnings`\n \n error: useless use of `format!`\n   --> $DIR/format.rs:14:5"}, {"sha": "d9fee73660c769c329761420203bfb3295476fca", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this looks like an `else if` but the `else` is missing\n 15 |     } if foo() {\n    |      ^\n    |\n-   = note: `-D suspicious-else-formatting` implied by `-D warnings`\n+   = note: `-D clippy::suspicious-else-formatting` implied by `-D warnings`\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n@@ -50,7 +50,7 @@ error: this looks like you are trying to use `.. -= ..`, but you really are doin\n 71 |     a =- 35;\n    |      ^^^^\n    |\n-   = note: `-D suspicious-assignment-formatting` implied by `-D warnings`\n+   = note: `-D clippy::suspicious-assignment-formatting` implied by `-D warnings`\n    = note: to remove this lint, use either `-=` or `= -`\n \n error: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`\n@@ -75,7 +75,7 @@ error: possibly missing a comma here\n 84 |         -1, -2, -3 // <= no comma here\n    |                   ^\n    |\n-   = note: `-D possible-missing-comma` implied by `-D warnings`\n+   = note: `-D clippy::possible-missing-comma` implied by `-D warnings`\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here"}, {"sha": "c2f7b76aab4d1fb71497bf82ff7bca5491485510", "filename": "tests/ui/functions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -5,7 +5,7 @@ error: this function has too many arguments (8/7)\n 12 | | }\n    | |_^\n    |\n-   = note: `-D too-many-arguments` implied by `-D warnings`\n+   = note: `-D clippy::too-many-arguments` implied by `-D warnings`\n \n error: this function has too many arguments (8/7)\n   --> $DIR/functions.rs:19:5\n@@ -25,7 +25,7 @@ error: this public function dereferences a raw pointer but is not marked `unsafe\n 37 |         println!(\"{}\", unsafe { *p });\n    |                                  ^\n    |\n-   = note: `-D not-unsafe-ptr-arg-deref` implied by `-D warnings`\n+   = note: `-D clippy::not-unsafe-ptr-arg-deref` implied by `-D warnings`\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n   --> $DIR/functions.rs:38:35"}, {"sha": "869a315c9eb3fb067b502e3661847895679c1785", "filename": "tests/ui/fxhash.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffxhash.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ffxhash.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffxhash.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,39 +1,39 @@\n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n- --> $DIR/fxhash.rs:6:24\n+ --> $DIR/fxhash.rs:8:24\n   |\n-6 | use std::collections::{HashMap, HashSet};\n+8 | use std::collections::{HashMap, HashSet};\n   |                        ^^^^^^^ help: use: `FxHashMap`\n   |\n-  = note: `-D default-hash-types` implied by `-D warnings`\n+  = note: `-D clippy::default-hash-types` implied by `-D warnings`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n- --> $DIR/fxhash.rs:6:33\n+ --> $DIR/fxhash.rs:8:33\n   |\n-6 | use std::collections::{HashMap, HashSet};\n+8 | use std::collections::{HashMap, HashSet};\n   |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:10:15\n+  --> $DIR/fxhash.rs:12:15\n    |\n-10 |     let _map: HashMap<String, String> = HashMap::default();\n+12 |     let _map: HashMap<String, String> = HashMap::default();\n    |               ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:10:41\n+  --> $DIR/fxhash.rs:12:41\n    |\n-10 |     let _map: HashMap<String, String> = HashMap::default();\n+12 |     let _map: HashMap<String, String> = HashMap::default();\n    |                                         ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:11:15\n+  --> $DIR/fxhash.rs:13:15\n    |\n-11 |     let _set: HashSet<String> = HashSet::default();\n+13 |     let _set: HashSet<String> = HashSet::default();\n    |               ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:11:33\n+  --> $DIR/fxhash.rs:13:33\n    |\n-11 |     let _set: HashSet<String> = HashSet::default();\n+13 |     let _set: HashSet<String> = HashSet::default();\n    |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: aborting due to 6 previous errors"}, {"sha": "63f6603c821e1ecc2ee43c379cad0050f9de6939", "filename": "tests/ui/get_unwrap.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fget_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fget_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more co\n 27 |         let _ = boxed_slice.get(1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n    |\n-   = note: `-D get-unwrap` implied by `-D warnings`\n+   = note: `-D clippy::get-unwrap` implied by `-D warnings`\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n   --> $DIR/get_unwrap.rs:28:17"}, {"sha": "ffcd3649ad650e0ac821763c3d3729219fcd2367", "filename": "tests/ui/identity_conversion.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fidentity_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fidentity_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,61 +1,61 @@\n error: identical conversion\n- --> $DIR/identity_conversion.rs:4:13\n+ --> $DIR/identity_conversion.rs:6:13\n   |\n-4 |     let _ = T::from(val);\n+6 |     let _ = T::from(val);\n   |             ^^^^^^^^^^^^ help: consider removing `T::from()`: `val`\n   |\n note: lint level defined here\n- --> $DIR/identity_conversion.rs:1:9\n+ --> $DIR/identity_conversion.rs:3:9\n   |\n-1 | #![deny(identity_conversion)]\n-  |         ^^^^^^^^^^^^^^^^^^^\n+3 | #![deny(clippy::identity_conversion)]\n+  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: identical conversion\n- --> $DIR/identity_conversion.rs:5:5\n+ --> $DIR/identity_conversion.rs:7:5\n   |\n-5 |     val.into()\n+7 |     val.into()\n   |     ^^^^^^^^^^ help: consider removing `.into()`: `val`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:17:22\n+  --> $DIR/identity_conversion.rs:19:22\n    |\n-17 |         let _: i32 = 0i32.into();\n+19 |         let _: i32 = 0i32.into();\n    |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:38:21\n+  --> $DIR/identity_conversion.rs:40:21\n    |\n-38 |     let _: String = \"foo\".to_string().into();\n+40 |     let _: String = \"foo\".to_string().into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:39:21\n+  --> $DIR/identity_conversion.rs:41:21\n    |\n-39 |     let _: String = From::from(\"foo\".to_string());\n+41 |     let _: String = From::from(\"foo\".to_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:40:13\n+  --> $DIR/identity_conversion.rs:42:13\n    |\n-40 |     let _ = String::from(\"foo\".to_string());\n+42 |     let _ = String::from(\"foo\".to_string());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:41:13\n+  --> $DIR/identity_conversion.rs:43:13\n    |\n-41 |     let _ = String::from(format!(\"A: {:04}\", 123));\n+43 |     let _ = String::from(format!(\"A: {:04}\", 123));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `format!(\"A: {:04}\", 123)`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:42:13\n+  --> $DIR/identity_conversion.rs:44:13\n    |\n-42 |     let _ = \"\".lines().into_iter();\n+44 |     let _ = \"\".lines().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `\"\".lines()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:43:13\n+  --> $DIR/identity_conversion.rs:45:13\n    |\n-43 |     let _ = vec![1, 2, 3].into_iter().into_iter();\n+45 |     let _ = vec![1, 2, 3].into_iter().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n \n error: aborting due to 9 previous errors"}, {"sha": "e494250c019351d6cf2c0c98a3daab8528e8a2f0", "filename": "tests/ui/identity_op.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fidentity_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fidentity_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: the operation is ineffective. Consider reducing it to `x`\n 13 |     x + 0;\n    |     ^^^^^\n    |\n-   = note: `-D identity-op` implied by `-D warnings`\n+   = note: `-D clippy::identity-op` implied by `-D warnings`\n \n error: the operation is ineffective. Consider reducing it to `x`\n   --> $DIR/identity_op.rs:14:5"}, {"sha": "9046625855c91814ae31e39dd5aaaf412518ada9", "filename": "tests/ui/if_let_redundant_pattern_matching.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: redundant pattern matching, consider using `is_ok()`\n 9 |     if let Ok(_) = Ok::<i32, i32>(42) {}\n   |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n   |\n-  = note: `-D if-let-redundant-pattern-matching` implied by `-D warnings`\n+  = note: `-D clippy::if-let-redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:11:12"}, {"sha": "9682f6dc18f55162b9e99da9bb58cab4b933cde4", "filename": "tests/ui/if_not_else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fif_not_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fif_not_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_not_else.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -8,7 +8,7 @@ error: Unnecessary boolean `not` operation\n 13 | |     }\n    | |_____^\n    |\n-   = note: `-D if-not-else` implied by `-D warnings`\n+   = note: `-D clippy::if-not-else` implied by `-D warnings`\n    = help: remove the `!` and swap the blocks of the if/else\n \n error: Unnecessary `!=` operation"}, {"sha": "13d4a76558d904394c90b901cda9f7c219cb134a", "filename": "tests/ui/impl.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fimpl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fimpl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,34 +1,34 @@\n error: Multiple implementations of this structure\n-  --> $DIR/impl.rs:10:1\n+  --> $DIR/impl.rs:12:1\n    |\n-10 | / impl MyStruct {\n-11 | |     fn second() {}\n-12 | | }\n+12 | / impl MyStruct {\n+13 | |     fn second() {}\n+14 | | }\n    | |_^\n    |\n-   = note: `-D multiple-inherent-impl` implied by `-D warnings`\n+   = note: `-D clippy::multiple-inherent-impl` implied by `-D warnings`\n note: First implementation here\n-  --> $DIR/impl.rs:6:1\n+  --> $DIR/impl.rs:8:1\n    |\n-6  | / impl MyStruct {\n-7  | |     fn first() {}\n-8  | | }\n+8  | / impl MyStruct {\n+9  | |     fn first() {}\n+10 | | }\n    | |_^\n \n error: Multiple implementations of this structure\n-  --> $DIR/impl.rs:24:5\n+  --> $DIR/impl.rs:26:5\n    |\n-24 | /     impl super::MyStruct {\n-25 | |         fn third() {}\n-26 | |     }\n+26 | /     impl super::MyStruct {\n+27 | |         fn third() {}\n+28 | |     }\n    | |_____^\n    |\n note: First implementation here\n-  --> $DIR/impl.rs:6:1\n+  --> $DIR/impl.rs:8:1\n    |\n-6  | / impl MyStruct {\n-7  | |     fn first() {}\n-8  | | }\n+8  | / impl MyStruct {\n+9  | |     fn first() {}\n+10 | | }\n    | |_^\n \n error: aborting due to 2 previous errors"}, {"sha": "5bb6f11b2a711ac051a56c36bd5cb0e7d23bebbc", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: impl for `HashMap` should be generalized over different hashers\n 11 | impl<K: Hash + Eq, V> Foo<i8> for HashMap<K, V> {\n    |                                   ^^^^^^^^^^^^^\n    |\n-   = note: `-D implicit-hasher` implied by `-D warnings`\n+   = note: `-D clippy::implicit-hasher` implied by `-D warnings`\n help: consider adding a type parameter\n    |\n 11 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashMap<K, V, S> {"}, {"sha": "51eeca2b864d3a20c7792db864f869224d51b1a5", "filename": "tests/ui/inconsistent_digit_grouping.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: digits grouped inconsistently by underscores\n 7 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n   |                ^^^^^^^^ help: consider: `123_456`\n   |\n-  = note: `-D inconsistent-digit-grouping` implied by `-D warnings`\n+  = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n \n error: digits grouped inconsistently by underscores\n  --> $DIR/inconsistent_digit_grouping.rs:7:26"}, {"sha": "3f09a6516e0a52d3881950713772a2bcebebdf20", "filename": "tests/ui/indexing_slicing.stderr", "status": "modified", "additions": 76, "deletions": 76, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Findexing_slicing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Findexing_slicing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,268 +1,268 @@\n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:11:5\n+  --> $DIR/indexing_slicing.rs:13:5\n    |\n-11 |     x[index];\n+13 |     x[index];\n    |     ^^^^^^^^\n    |\n-   = note: `-D indexing-slicing` implied by `-D warnings`\n+   = note: `-D clippy::indexing-slicing` implied by `-D warnings`\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:12:6\n+  --> $DIR/indexing_slicing.rs:14:6\n    |\n-12 |     &x[index..];\n+14 |     &x[index..];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:13:6\n+  --> $DIR/indexing_slicing.rs:15:6\n    |\n-13 |     &x[..index];\n+15 |     &x[..index];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:14:6\n+  --> $DIR/indexing_slicing.rs:16:6\n    |\n-14 |     &x[index_from..index_to];\n+16 |     &x[index_from..index_to];\n    |      ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:15:6\n+  --> $DIR/indexing_slicing.rs:17:6\n    |\n-15 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n+17 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:15:6\n+  --> $DIR/indexing_slicing.rs:17:6\n    |\n-15 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n+17 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:18:6\n+  --> $DIR/indexing_slicing.rs:20:6\n    |\n-18 |     &x[..=4];\n+20 |     &x[..=4];\n    |      ^^^^^^^\n    |\n-   = note: `-D out-of-bounds-indexing` implied by `-D warnings`\n+   = note: `-D clippy::out-of-bounds-indexing` implied by `-D warnings`\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:19:6\n+  --> $DIR/indexing_slicing.rs:21:6\n    |\n-19 |     &x[1..5];\n+21 |     &x[1..5];\n    |      ^^^^^^^\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:20:6\n+  --> $DIR/indexing_slicing.rs:22:6\n    |\n-20 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n+22 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n    |      ^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:20:6\n+  --> $DIR/indexing_slicing.rs:22:6\n    |\n-20 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n+22 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n    |      ^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:21:6\n+  --> $DIR/indexing_slicing.rs:23:6\n    |\n-21 |     &x[5..];\n+23 |     &x[5..];\n    |      ^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:22:6\n+  --> $DIR/indexing_slicing.rs:24:6\n    |\n-22 |     &x[..5];\n+24 |     &x[..5];\n    |      ^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:23:6\n+  --> $DIR/indexing_slicing.rs:25:6\n    |\n-23 |     &x[5..].iter().map(|x| 2 * x).collect::<Vec<i32>>();\n+25 |     &x[5..].iter().map(|x| 2 * x).collect::<Vec<i32>>();\n    |      ^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:24:6\n+  --> $DIR/indexing_slicing.rs:26:6\n    |\n-24 |     &x[0..=4];\n+26 |     &x[0..=4];\n    |      ^^^^^^^^\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:25:6\n+  --> $DIR/indexing_slicing.rs:27:6\n    |\n-25 |     &x[0..][..3];\n+27 |     &x[0..][..3];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:26:6\n+  --> $DIR/indexing_slicing.rs:28:6\n    |\n-26 |     &x[1..][..5];\n+28 |     &x[1..][..5];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:39:5\n+  --> $DIR/indexing_slicing.rs:41:5\n    |\n-39 |     y[0];\n+41 |     y[0];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:40:6\n+  --> $DIR/indexing_slicing.rs:42:6\n    |\n-40 |     &y[1..2];\n+42 |     &y[1..2];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:41:6\n+  --> $DIR/indexing_slicing.rs:43:6\n    |\n-41 |     &y[0..=4];\n+43 |     &y[0..=4];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:42:6\n+  --> $DIR/indexing_slicing.rs:44:6\n    |\n-42 |     &y[..=4];\n+44 |     &y[..=4];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:48:6\n+  --> $DIR/indexing_slicing.rs:50:6\n    |\n-48 |     &empty[1..5];\n+50 |     &empty[1..5];\n    |      ^^^^^^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:49:6\n+  --> $DIR/indexing_slicing.rs:51:6\n    |\n-49 |     &empty[0..=4];\n+51 |     &empty[0..=4];\n    |      ^^^^^^^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:50:6\n+  --> $DIR/indexing_slicing.rs:52:6\n    |\n-50 |     &empty[..=4];\n+52 |     &empty[..=4];\n    |      ^^^^^^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:51:6\n+  --> $DIR/indexing_slicing.rs:53:6\n    |\n-51 |     &empty[1..];\n+53 |     &empty[1..];\n    |      ^^^^^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:52:6\n+  --> $DIR/indexing_slicing.rs:54:6\n    |\n-52 |     &empty[..4];\n+54 |     &empty[..4];\n    |      ^^^^^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:53:6\n+  --> $DIR/indexing_slicing.rs:55:6\n    |\n-53 |     &empty[0..=0];\n+55 |     &empty[0..=0];\n    |      ^^^^^^^^^^^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:54:6\n+  --> $DIR/indexing_slicing.rs:56:6\n    |\n-54 |     &empty[..=0];\n+56 |     &empty[..=0];\n    |      ^^^^^^^^^^^\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:62:5\n+  --> $DIR/indexing_slicing.rs:64:5\n    |\n-62 |     v[0];\n+64 |     v[0];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:63:5\n+  --> $DIR/indexing_slicing.rs:65:5\n    |\n-63 |     v[10];\n+65 |     v[10];\n    |     ^^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:64:5\n+  --> $DIR/indexing_slicing.rs:66:5\n    |\n-64 |     v[1 << 3];\n+66 |     v[1 << 3];\n    |     ^^^^^^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:65:6\n+  --> $DIR/indexing_slicing.rs:67:6\n    |\n-65 |     &v[10..100];\n+67 |     &v[10..100];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:66:6\n+  --> $DIR/indexing_slicing.rs:68:6\n    |\n-66 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n+68 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |      ^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:66:6\n+  --> $DIR/indexing_slicing.rs:68:6\n    |\n-66 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n+68 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |      ^^^^^^^\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:67:6\n+  --> $DIR/indexing_slicing.rs:69:6\n    |\n-67 |     &v[10..];\n+69 |     &v[10..];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:68:6\n+  --> $DIR/indexing_slicing.rs:70:6\n    |\n-68 |     &v[..100];\n+70 |     &v[..100];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:80:5\n+  --> $DIR/indexing_slicing.rs:82:5\n    |\n-80 |     v[N];\n+82 |     v[N];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:81:5\n+  --> $DIR/indexing_slicing.rs:83:5\n    |\n-81 |     v[M];\n+83 |     v[M];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead"}, {"sha": "6e26741fc878d82fd32c0030b6738e4ee63e86f7", "filename": "tests/ui/infallible_destructuring_match.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finfallible_destructuring_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finfallible_destructuring_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,27 +1,27 @@\n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:16:5\n+  --> $DIR/infallible_destructuring_match.rs:18:5\n    |\n-16 | /     let data = match wrapper {\n-17 | |         SingleVariantEnum::Variant(i) => i,\n-18 | |     };\n+18 | /     let data = match wrapper {\n+19 | |         SingleVariantEnum::Variant(i) => i,\n+20 | |     };\n    | |______^ help: try this: `let SingleVariantEnum::Variant(data) = wrapper;`\n    |\n-   = note: `-D infallible-destructuring-match` implied by `-D warnings`\n+   = note: `-D clippy::infallible-destructuring-match` implied by `-D warnings`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:37:5\n+  --> $DIR/infallible_destructuring_match.rs:39:5\n    |\n-37 | /     let data = match wrapper {\n-38 | |         TupleStruct(i) => i,\n-39 | |     };\n+39 | /     let data = match wrapper {\n+40 | |         TupleStruct(i) => i,\n+41 | |     };\n    | |______^ help: try this: `let TupleStruct(data) = wrapper;`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:58:5\n+  --> $DIR/infallible_destructuring_match.rs:60:5\n    |\n-58 | /     let data = match wrapper {\n-59 | |         Ok(i) => i,\n-60 | |     };\n+60 | /     let data = match wrapper {\n+61 | |         Ok(i) => i,\n+62 | |     };\n    | |______^ help: try this: `let Ok(data) = wrapper;`\n \n error: aborting due to 3 previous errors"}, {"sha": "c3d67bdfde3038abbbc66d8cacda5b136d08c848", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: you are collect()ing an iterator and throwing away the result. Consider u\n 10 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D unused-collect` implied by `-D warnings`\n+   = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:10:5\n@@ -15,8 +15,8 @@ error: infinite iteration detected\n note: lint level defined here\n   --> $DIR/infinite_iter.rs:8:8\n    |\n-8  | #[deny(infinite_iter)]\n-   |        ^^^^^^^^^^^^^\n+8  | #[deny(clippy::infinite_iter)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n   --> $DIR/infinite_iter.rs:11:5\n@@ -57,8 +57,8 @@ error: possible infinite iteration detected\n note: lint level defined here\n   --> $DIR/infinite_iter.rs:22:8\n    |\n-22 | #[deny(maybe_infinite_iter)]\n-   |        ^^^^^^^^^^^^^^^^^^^\n+22 | #[deny(clippy::maybe_infinite_iter)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n   --> $DIR/infinite_iter.rs:25:5"}, {"sha": "edbe4937425755fa05e0371b4238b10044f1ccd7", "filename": "tests/ui/infinite_loop.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,57 +1,57 @@\n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:14:11\n+  --> $DIR/infinite_loop.rs:16:11\n    |\n-14 |     while y < 10 {\n+16 |     while y < 10 {\n    |           ^^^^^^\n    |\n-   = note: #[deny(while_immutable_condition)] on by default\n+   = note: #[deny(clippy::while_immutable_condition)] on by default\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:19:11\n+  --> $DIR/infinite_loop.rs:21:11\n    |\n-19 |     while y < 10 && x < 3 {\n+21 |     while y < 10 && x < 3 {\n    |           ^^^^^^^^^^^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:26:11\n+  --> $DIR/infinite_loop.rs:28:11\n    |\n-26 |     while !cond {\n+28 |     while !cond {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:70:11\n+  --> $DIR/infinite_loop.rs:72:11\n    |\n-70 |     while i < 3 {\n+72 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:75:11\n+  --> $DIR/infinite_loop.rs:77:11\n    |\n-75 |     while i < 3 && j > 0 {\n+77 |     while i < 3 && j > 0 {\n    |           ^^^^^^^^^^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:79:11\n+  --> $DIR/infinite_loop.rs:81:11\n    |\n-79 |     while i < 3 {\n+81 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:94:11\n+  --> $DIR/infinite_loop.rs:96:11\n    |\n-94 |     while i < 3 {\n+96 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:99:11\n-   |\n-99 |     while i < 3 {\n-   |           ^^^^^\n+   --> $DIR/infinite_loop.rs:101:11\n+    |\n+101 |     while i < 3 {\n+    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:162:15\n+   --> $DIR/infinite_loop.rs:164:15\n     |\n-162 |         while self.count < n {\n+164 |         while self.count < n {\n     |               ^^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors"}, {"sha": "a9a52b19053d5ba11e5e410863812fa222026c5a", "filename": "tests/ui/inline_fn_without_body.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finline_fn_without_body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finline_fn_without_body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -6,7 +6,7 @@ error: use of `#[inline]` on trait method `default_inline` which has no body\n 9 | |     fn default_inline();\n   | |____- help: remove\n   |\n-  = note: `-D inline-fn-without-body` implied by `-D warnings`\n+  = note: `-D clippy::inline-fn-without-body` implied by `-D warnings`\n \n error: use of `#[inline]` on trait method `always_inline` which has no body\n   --> $DIR/inline_fn_without_body.rs:11:5"}, {"sha": "12d7000dcfa0e1be8c186d0c41321e408c46124d", "filename": "tests/ui/int_plus_one.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fint_plus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fint_plus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fint_plus_one.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Unnecessary `>= y + 1` or `x - 1 >=`\n 10 |     x >= y + 1;\n    |     ^^^^^^^^^^\n    |\n-   = note: `-D int-plus-one` implied by `-D warnings`\n+   = note: `-D clippy::int-plus-one` implied by `-D warnings`\n help: change `>= y + 1` to `> y` as shown\n    |\n 10 |     x > y;"}, {"sha": "1ca825dd94c7796de7652fa2be12c47bfaf1570a", "filename": "tests/ui/invalid_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finvalid_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finvalid_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_ref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: reference to zeroed memory\n 27 |     let ref_zero: &T = std::mem::zeroed();     // warning\n    |                        ^^^^^^^^^^^^^^^^^^\n    |\n-   = note: #[deny(invalid_ref)] on by default\n+   = note: #[deny(clippy::invalid_ref)] on by default\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to zeroed memory"}, {"sha": "ce6d1dfa1ae236b79ac6b8e88a911ce4344f893f", "filename": "tests/ui/invalid_upcast_comparisons.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_upcast_comparisons.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: because of the numeric bounds on `u8` prior to casting, this expression i\n 16 |     (u8 as u32) > 300;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D invalid-upcast-comparisons` implied by `-D warnings`\n+   = note: `-D clippy::invalid-upcast-comparisons` implied by `-D warnings`\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n   --> $DIR/invalid_upcast_comparisons.rs:17:5"}, {"sha": "fe2d9d45b771504f3d92b8db932f2add6a1f05cc", "filename": "tests/ui/issue_2356.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fissue_2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fissue_2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,14 +1,14 @@\n error: this loop could be written as a `for` loop\n-  --> $DIR/issue_2356.rs:15:29\n+  --> $DIR/issue_2356.rs:17:29\n    |\n-15 |         while let Some(e) = it.next() {\n+17 |         while let Some(e) = it.next() {\n    |                             ^^^^^^^^^ help: try: `for e in it { .. }`\n    |\n note: lint level defined here\n-  --> $DIR/issue_2356.rs:1:9\n+  --> $DIR/issue_2356.rs:3:9\n    |\n-1  | #![deny(while_let_on_iterator)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^\n+3  | #![deny(clippy::while_let_on_iterator)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "6d20899b5ec0651a5960bbf16d5dbfa8392dfa94", "filename": "tests/ui/item_after_statement.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fitem_after_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fitem_after_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: adding items after statements is confusing, since items exist from the st\n 12 |     fn foo() { println!(\"foo\"); }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D items-after-statements` implied by `-D warnings`\n+   = note: `-D clippy::items-after-statements` implied by `-D warnings`\n \n error: adding items after statements is confusing, since items exist from the start of the scope\n   --> $DIR/item_after_statement.rs:17:5"}, {"sha": "b322ded9cfbff53294e10acbea7ae182edfe3f92", "filename": "tests/ui/large_digit_groups.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: digit groups should be smaller\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n   |                ^^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n   |\n-  = note: `-D large-digit-groups` implied by `-D warnings`\n+  = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:31"}, {"sha": "af42f905458bced98bd7039824d15778aadd3037", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: large size difference between variants\n 10 |     B([i32; 8000]),\n    |     ^^^^^^^^^^^^^^\n    |\n-   = note: `-D large-enum-variant` implied by `-D warnings`\n+   = note: `-D clippy::large-enum-variant` implied by `-D warnings`\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n 10 |     B(Box<[i32; 8000]>),"}, {"sha": "49e365e6c21f54b0c1600c58ae26cdf275cb8a94", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,139 +1,139 @@\n error: item `PubOne` has a public `len` method but no corresponding `is_empty` method\n-  --> $DIR/len_zero.rs:6:1\n+  --> $DIR/len_zero.rs:8:1\n    |\n-6  | / impl PubOne {\n-7  | |     pub fn len(self: &Self) -> isize {\n-8  | |         1\n-9  | |     }\n-10 | | }\n+8  | / impl PubOne {\n+9  | |     pub fn len(self: &Self) -> isize {\n+10 | |         1\n+11 | |     }\n+12 | | }\n    | |_^\n    |\n-   = note: `-D len-without-is-empty` implied by `-D warnings`\n+   = note: `-D clippy::len-without-is-empty` implied by `-D warnings`\n \n error: trait `PubTraitsToo` has a `len` method but no (possibly inherited) `is_empty` method\n-  --> $DIR/len_zero.rs:55:1\n+  --> $DIR/len_zero.rs:57:1\n    |\n-55 | / pub trait PubTraitsToo {\n-56 | |     fn len(self: &Self) -> isize;\n-57 | | }\n+57 | / pub trait PubTraitsToo {\n+58 | |     fn len(self: &Self) -> isize;\n+59 | | }\n    | |_^\n \n error: item `HasIsEmpty` has a public `len` method but a private `is_empty` method\n-  --> $DIR/len_zero.rs:89:1\n+  --> $DIR/len_zero.rs:91:1\n    |\n-89 | / impl HasIsEmpty {\n-90 | |     pub fn len(self: &Self) -> isize {\n-91 | |         1\n-92 | |     }\n+91 | / impl HasIsEmpty {\n+92 | |     pub fn len(self: &Self) -> isize {\n+93 | |         1\n+94 | |     }\n ...  |\n-96 | |     }\n-97 | | }\n+98 | |     }\n+99 | | }\n    | |_^\n \n error: item `HasWrongIsEmpty` has a public `len` method but no corresponding `is_empty` method\n-   --> $DIR/len_zero.rs:118:1\n+   --> $DIR/len_zero.rs:120:1\n     |\n-118 | / impl HasWrongIsEmpty {\n-119 | |     pub fn len(self: &Self) -> isize {\n-120 | |         1\n-121 | |     }\n+120 | / impl HasWrongIsEmpty {\n+121 | |     pub fn len(self: &Self) -> isize {\n+122 | |         1\n+123 | |     }\n ...   |\n-125 | |     }\n-126 | | }\n+127 | |     }\n+128 | | }\n     | |_^\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:139:8\n+   --> $DIR/len_zero.rs:141:8\n     |\n-139 |     if x.len() == 0 {\n+141 |     if x.len() == 0 {\n     |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `x.is_empty()`\n     |\n-    = note: `-D len-zero` implied by `-D warnings`\n+    = note: `-D clippy::len-zero` implied by `-D warnings`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:143:8\n+   --> $DIR/len_zero.rs:145:8\n     |\n-143 |     if \"\".len() == 0 {}\n+145 |     if \"\".len() == 0 {}\n     |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise: `\"\".is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:158:8\n+   --> $DIR/len_zero.rs:160:8\n     |\n-158 |     if has_is_empty.len() == 0 {\n+160 |     if has_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:161:8\n+   --> $DIR/len_zero.rs:163:8\n     |\n-161 |     if has_is_empty.len() != 0 {\n+163 |     if has_is_empty.len() != 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:164:8\n+   --> $DIR/len_zero.rs:166:8\n     |\n-164 |     if has_is_empty.len() > 0 {\n+166 |     if has_is_empty.len() > 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:167:8\n+   --> $DIR/len_zero.rs:169:8\n     |\n-167 |     if has_is_empty.len() < 1 {\n+169 |     if has_is_empty.len() < 1 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:170:8\n+   --> $DIR/len_zero.rs:172:8\n     |\n-170 |     if has_is_empty.len() >= 1 {\n+172 |     if has_is_empty.len() >= 1 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:181:8\n+   --> $DIR/len_zero.rs:183:8\n     |\n-181 |     if 0 == has_is_empty.len() {\n+183 |     if 0 == has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:184:8\n+   --> $DIR/len_zero.rs:186:8\n     |\n-184 |     if 0 != has_is_empty.len() {\n+186 |     if 0 != has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:187:8\n+   --> $DIR/len_zero.rs:189:8\n     |\n-187 |     if 0 < has_is_empty.len() {\n+189 |     if 0 < has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:190:8\n+   --> $DIR/len_zero.rs:192:8\n     |\n-190 |     if 1 <= has_is_empty.len() {\n+192 |     if 1 <= has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:193:8\n+   --> $DIR/len_zero.rs:195:8\n     |\n-193 |     if 1 > has_is_empty.len() {\n+195 |     if 1 > has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:207:8\n+   --> $DIR/len_zero.rs:209:8\n     |\n-207 |     if with_is_empty.len() == 0 {\n+209 |     if with_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:220:8\n+   --> $DIR/len_zero.rs:222:8\n     |\n-220 |     if b.len() != 0 {}\n+222 |     if b.len() != 0 {}\n     |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `!b.is_empty()`\n \n error: trait `DependsOnFoo` has a `len` method but no (possibly inherited) `is_empty` method\n-   --> $DIR/len_zero.rs:226:1\n+   --> $DIR/len_zero.rs:228:1\n     |\n-226 | / pub trait DependsOnFoo: Foo {\n-227 | |     fn len(&mut self) -> usize;\n-228 | | }\n+228 | / pub trait DependsOnFoo: Foo {\n+229 | |     fn len(&mut self) -> usize;\n+230 | | }\n     | |_^\n \n error: aborting due to 19 previous errors"}, {"sha": "7b4c78003abb8fa7dc347135af8117a97a9185a9", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -7,7 +7,7 @@ error: `if _ { .. } else { .. }` is an expression\n 60 | |     }\n    | |_____^ help: it is more idiomatic to write: `let <mut> foo = if f() { 42 } else { 0 };`\n    |\n-   = note: `-D useless-let-if-seq` implied by `-D warnings`\n+   = note: `-D clippy::useless-let-if-seq` implied by `-D warnings`\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression"}, {"sha": "dad628bc912f2c32c4d43dbf040a70e4e4a1422b", "filename": "tests/ui/let_return.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flet_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flet_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_return.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: returning the result of a let binding from a block. Consider returning th\n 10 |     x\n    |     ^\n    |\n-   = note: `-D let-and-return` implied by `-D warnings`\n+   = note: `-D clippy::let-and-return` implied by `-D warnings`\n note: this expression can be directly returned\n   --> $DIR/let_return.rs:9:13\n    |"}, {"sha": "f6f5d3f7dcc3da0b4faf9ad49e4215b3a26fc00e", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this let-binding has unit value. Consider omitting `let _x =`\n 14 |     let _x = println!(\"x\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D let-unit-value` implied by `-D warnings`\n+   = note: `-D clippy::let-unit-value` implied by `-D warnings`\n \n error: this let-binding has unit value. Consider omitting `let _a =`\n   --> $DIR/let_unit.rs:18:9"}, {"sha": "42fb01b75800f1ee8df1a5e1cae6ba8d0a4ba8ca", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: explicit lifetimes given in parameter types where they could be elided\n 7 | fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D needless-lifetimes` implied by `-D warnings`\n+  = note: `-D clippy::needless-lifetimes` implied by `-D warnings`\n \n error: explicit lifetimes given in parameter types where they could be elided\n  --> $DIR/lifetimes.rs:9:1"}, {"sha": "40399e498ab83ab4b21ab1bde31beb4f598bd59f", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,124 +1,124 @@\n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:12:17\n+  --> $DIR/literals.rs:14:17\n    |\n-12 |     let fail1 = 0xabCD;\n+14 |     let fail1 = 0xabCD;\n    |                 ^^^^^^\n    |\n-   = note: `-D mixed-case-hex-literals` implied by `-D warnings`\n+   = note: `-D clippy::mixed-case-hex-literals` implied by `-D warnings`\n \n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:13:17\n+  --> $DIR/literals.rs:15:17\n    |\n-13 |     let fail2 = 0xabCD_u32;\n+15 |     let fail2 = 0xabCD_u32;\n    |                 ^^^^^^^^^^\n \n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:14:17\n+  --> $DIR/literals.rs:16:17\n    |\n-14 |     let fail2 = 0xabCD_isize;\n+16 |     let fail2 = 0xabCD_isize;\n    |                 ^^^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:15:27\n+  --> $DIR/literals.rs:17:27\n    |\n-15 |     let fail_multi_zero = 000_123usize;\n+17 |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n-   = note: `-D unseparated-literal-suffix` implied by `-D warnings`\n+   = note: `-D clippy::unseparated-literal-suffix` implied by `-D warnings`\n \n error: this is a decimal constant\n-  --> $DIR/literals.rs:15:27\n+  --> $DIR/literals.rs:17:27\n    |\n-15 |     let fail_multi_zero = 000_123usize;\n+17 |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n-   = note: `-D zero-prefixed-literal` implied by `-D warnings`\n+   = note: `-D clippy::zero-prefixed-literal` implied by `-D warnings`\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-15 |     let fail_multi_zero = 123usize;\n+17 |     let fail_multi_zero = 123usize;\n    |                           ^^^^^^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-15 |     let fail_multi_zero = 0o123usize;\n+17 |     let fail_multi_zero = 0o123usize;\n    |                           ^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:20:17\n+  --> $DIR/literals.rs:22:17\n    |\n-20 |     let fail3 = 1234i32;\n+22 |     let fail3 = 1234i32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:21:17\n+  --> $DIR/literals.rs:23:17\n    |\n-21 |     let fail4 = 1234u32;\n+23 |     let fail4 = 1234u32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:22:17\n+  --> $DIR/literals.rs:24:17\n    |\n-22 |     let fail5 = 1234isize;\n+24 |     let fail5 = 1234isize;\n    |                 ^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:23:17\n+  --> $DIR/literals.rs:25:17\n    |\n-23 |     let fail6 = 1234usize;\n+25 |     let fail6 = 1234usize;\n    |                 ^^^^^^^^^\n \n error: float type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:24:17\n+  --> $DIR/literals.rs:26:17\n    |\n-24 |     let fail7 = 1.5f32;\n+26 |     let fail7 = 1.5f32;\n    |                 ^^^^^^\n \n error: this is a decimal constant\n-  --> $DIR/literals.rs:28:17\n+  --> $DIR/literals.rs:30:17\n    |\n-28 |     let fail8 = 0123;\n+30 |     let fail8 = 0123;\n    |                 ^^^^\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-28 |     let fail8 = 123;\n+30 |     let fail8 = 123;\n    |                 ^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-28 |     let fail8 = 0o123;\n+30 |     let fail8 = 0o123;\n    |                 ^^^^^\n \n error: long literal lacking separators\n-  --> $DIR/literals.rs:39:17\n+  --> $DIR/literals.rs:41:17\n    |\n-39 |     let fail9 = 0xabcdef;\n+41 |     let fail9 = 0xabcdef;\n    |                 ^^^^^^^^ help: consider: `0x00ab_cdef`\n    |\n-   = note: `-D unreadable-literal` implied by `-D warnings`\n+   = note: `-D clippy::unreadable-literal` implied by `-D warnings`\n \n error: long literal lacking separators\n-  --> $DIR/literals.rs:40:18\n+  --> $DIR/literals.rs:42:18\n    |\n-40 |     let fail10 = 0xBAFEBAFE;\n+42 |     let fail10 = 0xBAFEBAFE;\n    |                  ^^^^^^^^^^ help: consider: `0xBAFE_BAFE`\n \n error: long literal lacking separators\n-  --> $DIR/literals.rs:41:18\n+  --> $DIR/literals.rs:43:18\n    |\n-41 |     let fail11 = 0xabcdeff;\n+43 |     let fail11 = 0xabcdeff;\n    |                  ^^^^^^^^^ help: consider: `0x0abc_deff`\n \n error: long literal lacking separators\n-  --> $DIR/literals.rs:42:18\n+  --> $DIR/literals.rs:44:18\n    |\n-42 |     let fail12 = 0xabcabcabcabcabcabc;\n+44 |     let fail12 = 0xabcabcabcabcabcabc;\n    |                  ^^^^^^^^^^^^^^^^^^^^ help: consider: `0x00ab_cabc_abca_bcab_cabc`\n \n error: digit groups should be smaller\n-  --> $DIR/literals.rs:43:18\n+  --> $DIR/literals.rs:45:18\n    |\n-43 |     let fail13 = 0x1_23456_78901_usize;\n+45 |     let fail13 = 0x1_23456_78901_usize;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n    |\n-   = note: `-D large-digit-groups` implied by `-D warnings`\n+   = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n error: aborting due to 16 previous errors\n "}, {"sha": "afad65b007101b06ccd045b746455873e9a30102", "filename": "tests/ui/map_clone.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmap_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmap_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: you seem to be using .map() to clone the contents of an iterator, conside\n 12 |     x.iter().map(|y| y.clone());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D map-clone` implied by `-D warnings`\n+   = note: `-D clippy::map-clone` implied by `-D warnings`\n    = help: try\n            x.iter().cloned()\n "}, {"sha": "7ef6f714f3a382e15b2cb6a585025806c2565ab6", "filename": "tests/ui/match_bool.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmatch_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmatch_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_bool.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this boolean expression can be simplified\n 25 |     match test && test {\n    |           ^^^^^^^^^^^^ help: try: `test`\n    |\n-   = note: `-D nonminimal-bool` implied by `-D warnings`\n+   = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: you seem to be trying to match on a boolean expression\n  --> $DIR/match_bool.rs:4:5\n@@ -15,7 +15,7 @@ error: you seem to be trying to match on a boolean expression\n 7 | |     };\n   | |_____^ help: consider using an if/else expression: `if test { 0 } else { 42 }`\n   |\n-  = note: `-D match-bool` implied by `-D warnings`\n+  = note: `-D clippy::match-bool` implied by `-D warnings`\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:10:5\n@@ -59,7 +59,7 @@ error: equal expressions as operands to `&&`\n 25 |     match test && test {\n    |           ^^^^^^^^^^^^\n    |\n-   = note: #[deny(eq_op)] on by default\n+   = note: #[deny(clippy::eq_op)] on by default\n \n error: you seem to be trying to match on a boolean expression\n   --> $DIR/match_bool.rs:30:5"}, {"sha": "6f1a067382a8c399961e820fa3213a733ff160cb", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -7,7 +7,7 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 24 | |     }\n    | |_____^ help: try this: `if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else { let x = 5; None }`\n    |\n-   = note: `-D single-match-else` implied by `-D warnings`\n+   = note: `-D clippy::single-match-else` implied by `-D warnings`\n \n error: you don't need to add `&` to all patterns\n   --> $DIR/matches.rs:30:9\n@@ -18,7 +18,7 @@ error: you don't need to add `&` to all patterns\n 33 | |         }\n    | |_________^\n    |\n-   = note: `-D match-ref-pats` implied by `-D warnings`\n+   = note: `-D clippy::match-ref-pats` implied by `-D warnings`\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n 30 |         match *v {\n@@ -94,7 +94,7 @@ error: some ranges overlap\n 71 |         0 ... 10 => println!(\"0 ... 10\"),\n    |         ^^^^^^^^\n    |\n-   = note: `-D match-overlapping-arm` implied by `-D warnings`\n+   = note: `-D clippy::match-overlapping-arm` implied by `-D warnings`\n note: overlaps with this\n   --> $DIR/matches.rs:72:9\n    |\n@@ -155,7 +155,7 @@ error: Err(_) will match all errors, maybe not a good idea\n 132 |         Err(_) => panic!(\"err\")\n     |         ^^^^^^\n     |\n-    = note: `-D match-wild-err-arm` implied by `-D warnings`\n+    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n     = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n@@ -164,7 +164,7 @@ error: this `match` has identical arm bodies\n 131 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n-    = note: `-D match-same-arms` implied by `-D warnings`\n+    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n    --> $DIR/matches.rs:130:18\n     |\n@@ -347,7 +347,7 @@ error: use as_ref() instead\n 215 | |     };\n     | |_____^ help: try this: `owned.as_ref()`\n     |\n-    = note: `-D match-as-ref` implied by `-D warnings`\n+    = note: `-D clippy::match-as-ref` implied by `-D warnings`\n \n error: use as_mut() instead\n    --> $DIR/matches.rs:218:39"}, {"sha": "1f43d9f360a0e6edae6d4ae9089fca579f49191f", "filename": "tests/ui/mem_forget.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmem_forget.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmem_forget.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: usage of mem::forget on Drop type\n 18 |     memstuff::forget(six);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D mem-forget` implied by `-D warnings`\n+   = note: `-D clippy::mem-forget` implied by `-D warnings`\n \n error: usage of mem::forget on Drop type\n   --> $DIR/mem_forget.rs:21:5"}, {"sha": "3189f375647f323e733537b0d1934c18382feba7", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,15 +4,15 @@ error: defining a method called `add` on this type; consider implementing the `s\n 21 |     pub fn add(self, other: T) -> T { self }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D should-implement-trait` implied by `-D warnings`\n+   = note: `-D clippy::should-implement-trait` implied by `-D warnings`\n \n error: methods called `into_*` usually take self by value; consider choosing a less ambiguous name\n   --> $DIR/methods.rs:32:17\n    |\n 32 |     fn into_u16(&self) -> u16 { 0 }\n    |                 ^^^^^\n    |\n-   = note: `-D wrong-self-convention` implied by `-D warnings`\n+   = note: `-D clippy::wrong-self-convention` implied by `-D warnings`\n \n error: methods called `to_*` usually take self by reference; consider choosing a less ambiguous name\n   --> $DIR/methods.rs:34:21\n@@ -32,7 +32,7 @@ error: methods called `new` usually return `Self`\n 36 |     fn new(self) {}\n    |     ^^^^^^^^^^^^^^^\n    |\n-   = note: `-D new-ret-no-self` implied by `-D warnings`\n+   = note: `-D clippy::new-ret-no-self` implied by `-D warnings`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n    --> $DIR/methods.rs:104:13\n@@ -43,7 +43,7 @@ error: called `map(f).unwrap_or(a)` on an Option value. This can be done more di\n 106 | |                .unwrap_or(0); // should lint even though this call is on a separate line\n     | |____________________________^\n     |\n-    = note: `-D option-map-unwrap-or` implied by `-D warnings`\n+    = note: `-D clippy::option-map-unwrap-or` implied by `-D warnings`\n     = note: replace `map(|x| x + 1).unwrap_or(0)` with `map_or(0, |x| x + 1)`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n@@ -104,7 +104,7 @@ error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done mo\n 133 | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n     | |____________________________________^\n     |\n-    = note: `-D option-map-unwrap-or-else` implied by `-D warnings`\n+    = note: `-D clippy::option-map-unwrap-or-else` implied by `-D warnings`\n     = note: replace `map(|x| x + 1).unwrap_or_else(|| 0)` with `map_or_else(|| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n@@ -133,7 +133,7 @@ error: called `map_or(None, f)` on an Option value. This can be done more direct\n 148 |     let _ = opt.map_or(None, |x| Some(x + 1));\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using and_then instead: `opt.and_then(|x| Some(x + 1))`\n     |\n-    = note: `-D option-map-or-none` implied by `-D warnings`\n+    = note: `-D clippy::option-map-or-none` implied by `-D warnings`\n \n error: called `map_or(None, f)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n    --> $DIR/methods.rs:150:13\n@@ -160,7 +160,7 @@ error: called `map(f).unwrap_or_else(g)` on a Result value. This can be done mor\n 165 | |                .unwrap_or_else(|e| 0); // should lint even though this call is on a separate line\n     | |_____________________________________^\n     |\n-    = note: `-D result-map-unwrap-or-else` implied by `-D warnings`\n+    = note: `-D clippy::result-map-unwrap-or-else` implied by `-D warnings`\n     = note: replace `map(|x| x + 1).unwrap_or_else(|e| 0)` with `ok().map_or_else(|e| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on a Result value. This can be done more directly by calling `ok().map_or_else(g, f)` instead\n@@ -189,7 +189,7 @@ error: called `filter(p).next()` on an `Iterator`. This is more succinctly expre\n 234 |     let _ = v.iter().filter(|&x| *x < 0).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n-    = note: `-D filter-next` implied by `-D warnings`\n+    = note: `-D clippy::filter-next` implied by `-D warnings`\n     = note: replace `filter(|&x| *x < 0).next()` with `find(|&x| *x < 0)`\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n@@ -208,7 +208,7 @@ error: called `is_some()` after searching an `Iterator` with find. This is more\n 252 |     let _ = v.iter().find(|&x| *x < 0).is_some();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n-    = note: `-D search-is-some` implied by `-D warnings`\n+    = note: `-D clippy::search-is-some` implied by `-D warnings`\n     = note: replace `find(|&x| *x < 0).is_some()` with `any(|&x| *x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n@@ -263,7 +263,7 @@ error: use of `unwrap_or` followed by a function call\n 308 |     with_constructor.unwrap_or(make());\n     |                      ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(make)`\n     |\n-    = note: `-D or-fun-call` implied by `-D warnings`\n+    = note: `-D clippy::or-fun-call` implied by `-D warnings`\n \n error: use of `unwrap_or` followed by a call to `new`\n    --> $DIR/methods.rs:311:5\n@@ -337,7 +337,7 @@ error: `error_code` is shadowed by `123_i32`\n 377 |     let error_code = 123_i32;\n     |         ^^^^^^^^^^\n     |\n-    = note: `-D shadow-unrelated` implied by `-D warnings`\n+    = note: `-D clippy::shadow-unrelated` implied by `-D warnings`\n note: initialization happens here\n    --> $DIR/methods.rs:377:22\n     |\n@@ -355,7 +355,7 @@ error: use of `expect` followed by a function call\n 366 |     with_none_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", error_code))`\n     |\n-    = note: `-D expect-fun-call` implied by `-D warnings`\n+    = note: `-D clippy::expect-fun-call` implied by `-D warnings`\n \n error: use of `expect` followed by a function call\n    --> $DIR/methods.rs:369:26\n@@ -381,7 +381,7 @@ error: called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more\n 406 |         let bad_vec = some_vec.iter().nth(3);\n     |                       ^^^^^^^^^^^^^^^^^^^^^^\n     |\n-    = note: `-D iter-nth` implied by `-D warnings`\n+    = note: `-D clippy::iter-nth` implied by `-D warnings`\n \n error: called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n    --> $DIR/methods.rs:407:26\n@@ -425,7 +425,7 @@ error: called `skip(x).next()` on an iterator. This is more succinctly expressed\n 432 |     let _ = some_vec.iter().skip(42).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n-    = note: `-D iter-skip-next` implied by `-D warnings`\n+    = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n    --> $DIR/methods.rs:433:13\n@@ -451,7 +451,7 @@ error: used unwrap() on an Option value. If you don't want to handle the None ca\n 444 |     let _ = opt.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n-    = note: `-D option-unwrap-used` implied by `-D warnings`\n+    = note: `-D clippy::option-unwrap-used` implied by `-D warnings`\n \n error: aborting due to 56 previous errors\n "}, {"sha": "e89542a2ddce248177b4b1934df3cfc190001a45", "filename": "tests/ui/min_max.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmin_max.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmin_max.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this min/max combination leads to constant result\n 15 |     min(1, max(3, x));\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D min-max` implied by `-D warnings`\n+   = note: `-D clippy::min-max` implied by `-D warnings`\n \n error: this min/max combination leads to constant result\n   --> $DIR/min_max.rs:16:5"}, {"sha": "ebc4c5aca432b62a57d14f91ba4c52bda2a0c66d", "filename": "tests/ui/missing-doc.stderr", "status": "modified", "additions": 108, "deletions": 108, "changes": 216, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmissing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmissing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,267 +1,267 @@\n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:26:1\n+  --> $DIR/missing-doc.rs:28:1\n    |\n-26 | type Typedef = String;\n+28 | type Typedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D missing-docs-in-private-items` implied by `-D warnings`\n+   = note: `-D clippy::missing-docs-in-private-items` implied by `-D warnings`\n \n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:27:1\n+  --> $DIR/missing-doc.rs:29:1\n    |\n-27 | pub type PubTypedef = String;\n+29 | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct\n-  --> $DIR/missing-doc.rs:29:1\n+  --> $DIR/missing-doc.rs:31:1\n    |\n-29 | / struct Foo {\n-30 | |     a: isize,\n-31 | |     b: isize,\n-32 | | }\n+31 | / struct Foo {\n+32 | |     a: isize,\n+33 | |     b: isize,\n+34 | | }\n    | |_^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:30:5\n+  --> $DIR/missing-doc.rs:32:5\n    |\n-30 |     a: isize,\n+32 |     a: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:31:5\n+  --> $DIR/missing-doc.rs:33:5\n    |\n-31 |     b: isize,\n+33 |     b: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a struct\n-  --> $DIR/missing-doc.rs:34:1\n+  --> $DIR/missing-doc.rs:36:1\n    |\n-34 | / pub struct PubFoo {\n-35 | |     pub a: isize,\n-36 | |     b: isize,\n-37 | | }\n+36 | / pub struct PubFoo {\n+37 | |     pub a: isize,\n+38 | |     b: isize,\n+39 | | }\n    | |_^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:35:5\n+  --> $DIR/missing-doc.rs:37:5\n    |\n-35 |     pub a: isize,\n+37 |     pub a: isize,\n    |     ^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:36:5\n+  --> $DIR/missing-doc.rs:38:5\n    |\n-36 |     b: isize,\n+38 |     b: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:45:1\n+  --> $DIR/missing-doc.rs:47:1\n    |\n-45 | mod module_no_dox {}\n+47 | mod module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:46:1\n+  --> $DIR/missing-doc.rs:48:1\n    |\n-46 | pub mod pub_module_no_dox {}\n+48 | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:50:1\n+  --> $DIR/missing-doc.rs:52:1\n    |\n-50 | pub fn foo2() {}\n+52 | pub fn foo2() {}\n    | ^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:51:1\n+  --> $DIR/missing-doc.rs:53:1\n    |\n-51 | fn foo3() {}\n+53 | fn foo3() {}\n    | ^^^^^^^^^^^^\n \n error: missing documentation for a trait\n-  --> $DIR/missing-doc.rs:68:1\n+  --> $DIR/missing-doc.rs:70:1\n    |\n-68 | / pub trait C {\n-69 | |     fn foo(&self);\n-70 | |     fn foo_with_impl(&self) {}\n-71 | | }\n+70 | / pub trait C {\n+71 | |     fn foo(&self);\n+72 | |     fn foo_with_impl(&self) {}\n+73 | | }\n    | |_^\n \n error: missing documentation for a trait method\n-  --> $DIR/missing-doc.rs:69:5\n+  --> $DIR/missing-doc.rs:71:5\n    |\n-69 |     fn foo(&self);\n+71 |     fn foo(&self);\n    |     ^^^^^^^^^^^^^^\n \n error: missing documentation for a trait method\n-  --> $DIR/missing-doc.rs:70:5\n+  --> $DIR/missing-doc.rs:72:5\n    |\n-70 |     fn foo_with_impl(&self) {}\n+72 |     fn foo_with_impl(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n-  --> $DIR/missing-doc.rs:80:5\n+  --> $DIR/missing-doc.rs:82:5\n    |\n-80 |     type AssociatedType;\n+82 |     type AssociatedType;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n-  --> $DIR/missing-doc.rs:81:5\n+  --> $DIR/missing-doc.rs:83:5\n    |\n-81 |     type AssociatedTypeDef = Self;\n+83 |     type AssociatedTypeDef = Self;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-  --> $DIR/missing-doc.rs:92:5\n+  --> $DIR/missing-doc.rs:94:5\n    |\n-92 |     pub fn foo() {}\n+94 |     pub fn foo() {}\n    |     ^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-  --> $DIR/missing-doc.rs:93:5\n+  --> $DIR/missing-doc.rs:95:5\n    |\n-93 |     fn bar() {}\n+95 |     fn bar() {}\n    |     ^^^^^^^^^^^\n \n error: missing documentation for a method\n-  --> $DIR/missing-doc.rs:97:5\n+  --> $DIR/missing-doc.rs:99:5\n    |\n-97 |     pub fn foo() {}\n+99 |     pub fn foo() {}\n    |     ^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:100:5\n+   --> $DIR/missing-doc.rs:102:5\n     |\n-100 |     fn foo2() {}\n+102 |     fn foo2() {}\n     |     ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-   --> $DIR/missing-doc.rs:126:1\n+   --> $DIR/missing-doc.rs:128:1\n     |\n-126 | / enum Baz {\n-127 | |     BazA {\n-128 | |         a: isize,\n-129 | |         b: isize\n-130 | |     },\n-131 | |     BarB\n-132 | | }\n+128 | / enum Baz {\n+129 | |     BazA {\n+130 | |         a: isize,\n+131 | |         b: isize\n+132 | |     },\n+133 | |     BarB\n+134 | | }\n     | |_^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:127:5\n+   --> $DIR/missing-doc.rs:129:5\n     |\n-127 | /     BazA {\n-128 | |         a: isize,\n-129 | |         b: isize\n-130 | |     },\n+129 | /     BazA {\n+130 | |         a: isize,\n+131 | |         b: isize\n+132 | |     },\n     | |_____^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:128:9\n+   --> $DIR/missing-doc.rs:130:9\n     |\n-128 |         a: isize,\n+130 |         a: isize,\n     |         ^^^^^^^^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:129:9\n+   --> $DIR/missing-doc.rs:131:9\n     |\n-129 |         b: isize\n+131 |         b: isize\n     |         ^^^^^^^^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:131:5\n+   --> $DIR/missing-doc.rs:133:5\n     |\n-131 |     BarB\n+133 |     BarB\n     |     ^^^^\n \n error: missing documentation for an enum\n-   --> $DIR/missing-doc.rs:134:1\n+   --> $DIR/missing-doc.rs:136:1\n     |\n-134 | / pub enum PubBaz {\n-135 | |     PubBazA {\n-136 | |         a: isize,\n-137 | |     },\n-138 | | }\n+136 | / pub enum PubBaz {\n+137 | |     PubBazA {\n+138 | |         a: isize,\n+139 | |     },\n+140 | | }\n     | |_^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:135:5\n+   --> $DIR/missing-doc.rs:137:5\n     |\n-135 | /     PubBazA {\n-136 | |         a: isize,\n-137 | |     },\n+137 | /     PubBazA {\n+138 | |         a: isize,\n+139 | |     },\n     | |_____^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:136:9\n+   --> $DIR/missing-doc.rs:138:9\n     |\n-136 |         a: isize,\n+138 |         a: isize,\n     |         ^^^^^^^^\n \n error: missing documentation for a constant\n-   --> $DIR/missing-doc.rs:160:1\n+   --> $DIR/missing-doc.rs:162:1\n     |\n-160 | const FOO: u32 = 0;\n+162 | const FOO: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a constant\n-   --> $DIR/missing-doc.rs:167:1\n+   --> $DIR/missing-doc.rs:169:1\n     |\n-167 | pub const FOO4: u32 = 0;\n+169 | pub const FOO4: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-   --> $DIR/missing-doc.rs:170:1\n+   --> $DIR/missing-doc.rs:172:1\n     |\n-170 | static BAR: u32 = 0;\n+172 | static BAR: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-   --> $DIR/missing-doc.rs:177:1\n+   --> $DIR/missing-doc.rs:179:1\n     |\n-177 | pub static BAR4: u32 = 0;\n+179 | pub static BAR4: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-   --> $DIR/missing-doc.rs:180:1\n+   --> $DIR/missing-doc.rs:182:1\n     |\n-180 | / mod internal_impl {\n-181 | |     /// dox\n-182 | |     pub fn documented() {}\n-183 | |     pub fn undocumented1() {}\n+182 | / mod internal_impl {\n+183 | |     /// dox\n+184 | |     pub fn documented() {}\n+185 | |     pub fn undocumented1() {}\n ...   |\n-192 | |     }\n-193 | | }\n+194 | |     }\n+195 | | }\n     | |_^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:183:5\n+   --> $DIR/missing-doc.rs:185:5\n     |\n-183 |     pub fn undocumented1() {}\n+185 |     pub fn undocumented1() {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:184:5\n+   --> $DIR/missing-doc.rs:186:5\n     |\n-184 |     pub fn undocumented2() {}\n+186 |     pub fn undocumented2() {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:185:5\n+   --> $DIR/missing-doc.rs:187:5\n     |\n-185 |     fn undocumented3() {}\n+187 |     fn undocumented3() {}\n     |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:190:9\n+   --> $DIR/missing-doc.rs:192:9\n     |\n-190 |         pub fn also_undocumented1() {}\n+192 |         pub fn also_undocumented1() {}\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:191:9\n+   --> $DIR/missing-doc.rs:193:9\n     |\n-191 |         fn also_undocumented2() {}\n+193 |         fn also_undocumented2() {}\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 39 previous errors"}, {"sha": "3609c9101b73bb1376d058045266423237a25547", "filename": "tests/ui/missing_inline.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmissing_inline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmissing_inline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_inline.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,39 +1,39 @@\n error: missing `#[inline]` for a function\n-  --> $DIR/missing_inline.rs:31:1\n+  --> $DIR/missing_inline.rs:33:1\n    |\n-31 | pub fn pub_foo() {} // missing #[inline]\n+33 | pub fn pub_foo() {} // missing #[inline]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D missing-inline-in-public-items` implied by `-D warnings`\n+   = note: `-D clippy::missing-inline-in-public-items` implied by `-D warnings`\n \n error: missing `#[inline]` for a default trait method\n-  --> $DIR/missing_inline.rs:46:5\n+  --> $DIR/missing_inline.rs:48:5\n    |\n-46 |     fn PubBar_b() {} // missing #[inline]\n+48 |     fn PubBar_b() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:59:5\n+  --> $DIR/missing_inline.rs:61:5\n    |\n-59 |     fn PubBar_a() {} // missing #[inline]\n+61 |     fn PubBar_a() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:60:5\n+  --> $DIR/missing_inline.rs:62:5\n    |\n-60 |     fn PubBar_b() {} // missing #[inline]\n+62 |     fn PubBar_b() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:61:5\n+  --> $DIR/missing_inline.rs:63:5\n    |\n-61 |     fn PubBar_c() {} // missing #[inline]\n+63 |     fn PubBar_c() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:71:5\n+  --> $DIR/missing_inline.rs:73:5\n    |\n-71 |     pub fn PubFooImpl() {} // missing #[inline]\n+73 |     pub fn PubFooImpl() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "43f9666f78d7de2af8c3bfeaf29769921e96401f", "filename": "tests/ui/module_inception.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmodule_inception.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmodule_inception.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_inception.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -6,7 +6,7 @@ error: module has the same name as its containing module\n 9 | |         }\n   | |_________^\n   |\n-  = note: `-D module-inception` implied by `-D warnings`\n+  = note: `-D clippy::module-inception` implied by `-D warnings`\n \n error: module has the same name as its containing module\n   --> $DIR/module_inception.rs:12:5"}, {"sha": "5d42c3e0a29c7438c1dcf93e851113a26501c925", "filename": "tests/ui/modulo_one.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmodulo_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmodulo_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_one.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: any number modulo 1 will be 0\n 7 |     10 % 1;\n   |     ^^^^^^\n   |\n-  = note: `-D modulo-one` implied by `-D warnings`\n+  = note: `-D clippy::modulo-one` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "0f5baa2d27ebd7c3e861420f27cc199cd536d0c7", "filename": "tests/ui/mut_from_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_from_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_from_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_from_ref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: mutable borrow from immutable input(s)\n 9 |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n   |                                       ^^^^^^^^\n   |\n-  = note: `-D mut-from-ref` implied by `-D warnings`\n+  = note: `-D clippy::mut-from-ref` implied by `-D warnings`\n note: immutable borrow here\n  --> $DIR/mut_from_ref.rs:9:29\n   |"}, {"sha": "88bd2f729af13d52acdd8bce9a95dfe1b59c2dc8", "filename": "tests/ui/mut_mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: generally you want to avoid `&mut &mut _` if possible\n 10 | fn fun(x : &mut &mut u32) -> bool {\n    |            ^^^^^^^^^^^^^\n    |\n-   = note: `-D mut-mut` implied by `-D warnings`\n+   = note: `-D clippy::mut-mut` implied by `-D warnings`\n \n error: generally you want to avoid `&mut &mut _` if possible\n   --> $DIR/mut_mut.rs:24:17"}, {"sha": "fece961069730a0183676c844f29dcfa04c5173b", "filename": "tests/ui/mut_range_bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_range_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_range_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_range_bound.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: attempt to mutate range bound within loop; note that the range of the loo\n 18 |     for i in 0..m { m = 5; } // warning\n    |                     ^^^^^\n    |\n-   = note: `-D mut-range-bound` implied by `-D warnings`\n+   = note: `-D clippy::mut-range-bound` implied by `-D warnings`\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n   --> $DIR/mut_range_bound.rs:23:22"}, {"sha": "ee62e2647673d3d6b37e7cc64b59ac89e4dca4f2", "filename": "tests/ui/mut_reference.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmut_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_reference.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: The function/method `takes_an_immutable_reference` doesn't need a mutable\n 22 |     takes_an_immutable_reference(&mut 42);\n    |                                  ^^^^^^^\n    |\n-   = note: `-D unnecessary-mut-passed` implied by `-D warnings`\n+   = note: `-D clippy::unnecessary-mut-passed` implied by `-D warnings`\n \n error: The function/method `as_ptr` doesn't need a mutable reference\n   --> $DIR/mut_reference.rs:24:12"}, {"sha": "2df58889a4727e360da8187bc2d9b8b34b1a770b", "filename": "tests/ui/mutex_atomic.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmutex_atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fmutex_atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Consider using an AtomicBool instead of a Mutex here. If you just want th\n 9 |     Mutex::new(true);\n   |     ^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D mutex-atomic` implied by `-D warnings`\n+  = note: `-D clippy::mutex-atomic` implied by `-D warnings`\n \n error: Consider using an AtomicUsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:10:5\n@@ -36,7 +36,7 @@ error: Consider using an AtomicUsize instead of a Mutex here. If you just want t\n 15 |     Mutex::new(0u32);\n    |     ^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D mutex-integer` implied by `-D warnings`\n+   = note: `-D clippy::mutex-integer` implied by `-D warnings`\n \n error: Consider using an AtomicIsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n   --> $DIR/mutex_atomic.rs:16:5"}, {"sha": "dd132bc671e370d6998d8fbd76802934db69c09a", "filename": "tests/ui/needless_bool.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this if-then-else expression will always return true\n 9 |     if x { true } else { true };\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D needless-bool` implied by `-D warnings`\n+  = note: `-D clippy::needless-bool` implied by `-D warnings`\n \n error: this if-then-else expression will always return false\n   --> $DIR/needless_bool.rs:10:5"}, {"sha": "c720dff5d293ab7245ab876e5bbc7aa085e4d58e", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,41 +1,41 @@\n error: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/needless_borrow.rs:13:15\n+  --> $DIR/needless_borrow.rs:15:15\n    |\n-13 |     let c = x(&&a);\n+15 |     let c = x(&&a);\n    |               ^^^ help: change this to: `&a`\n    |\n-   = note: `-D needless-borrow` implied by `-D warnings`\n+   = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow.rs:20:17\n+  --> $DIR/needless_borrow.rs:22:17\n    |\n-20 |     if let Some(ref cake) = Some(&5) {}\n+22 |     if let Some(ref cake) = Some(&5) {}\n    |                 ^^^^^^^^ help: change this to: `cake`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/needless_borrow.rs:27:15\n+  --> $DIR/needless_borrow.rs:29:15\n    |\n-27 |         46 => &&a,\n+29 |         46 => &&a,\n    |               ^^^ help: change this to: `&a`\n \n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrow.rs:49:34\n+  --> $DIR/needless_borrow.rs:51:34\n    |\n-49 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+51 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n    |                                  ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n    |\n-   = note: `-D needless-borrowed-reference` implied by `-D warnings`\n+   = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n \n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrow.rs:50:30\n+  --> $DIR/needless_borrow.rs:52:30\n    |\n-50 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n+52 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                              ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow.rs:50:31\n+  --> $DIR/needless_borrow.rs:52:31\n    |\n-50 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n+52 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                               ^^^^^ help: change this to: `a`\n \n error: aborting due to 6 previous errors"}, {"sha": "3113b887b05cf4d6ae073213174c981d2fa36f2a", "filename": "tests/ui/needless_borrowed_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_borrowed_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_borrowed_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrowed_ref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this pattern takes a reference on something that is being de-referenced\n 8 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n   |                                  ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n   |\n-  = note: `-D needless-borrowed-reference` implied by `-D warnings`\n+  = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n \n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrowed_ref.rs:13:17"}, {"sha": "7cfaf89d6e00a67434fb252c12f1f28cb7c56112", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -8,7 +8,7 @@ error: This else block is redundant.\n 28 | |         }\n    | |_________^\n    |\n-   = note: `-D needless-continue` implied by `-D warnings`\n+   = note: `-D clippy::needless-continue` implied by `-D warnings`\n    = help: Consider dropping the else clause and merging the code that follows (in the loop) with the if block, like so:\n            if i % 2 == 0 && i % 3 == 0 {\n            println!(\"{}\", i);"}, {"sha": "9cb5e6e48cd2bca409fb4b5629eae0ded1f86b70", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,187 +1,187 @@\n error: this argument is passed by value, but not consumed in the function body\n- --> $DIR/needless_pass_by_value.rs:9:23\n-  |\n-9 | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n-  |                       ^^^^^^ help: consider changing the type to: `&[T]`\n-  |\n-  = note: `-D needless-pass-by-value` implied by `-D warnings`\n+  --> $DIR/needless_pass_by_value.rs:11:23\n+   |\n+11 | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n+   |                       ^^^^^^ help: consider changing the type to: `&[T]`\n+   |\n+   = note: `-D clippy::needless-pass-by-value` implied by `-D warnings`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:23:11\n+  --> $DIR/needless_pass_by_value.rs:25:11\n    |\n-23 | fn bar(x: String, y: Wrapper) {\n+25 | fn bar(x: String, y: Wrapper) {\n    |           ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:23:22\n+  --> $DIR/needless_pass_by_value.rs:25:22\n    |\n-23 | fn bar(x: String, y: Wrapper) {\n+25 | fn bar(x: String, y: Wrapper) {\n    |                      ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:29:71\n+  --> $DIR/needless_pass_by_value.rs:31:71\n    |\n-29 | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n+31 | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n    |                                                                       ^ help: consider taking a reference instead: `&V`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:41:18\n+  --> $DIR/needless_pass_by_value.rs:43:18\n    |\n-41 | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n+43 | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^\n help: consider taking a reference instead\n    |\n-41 | fn test_match(x: &Option<Option<String>>, y: Option<Option<String>>) {\n-42 |     match *x {\n+43 | fn test_match(x: &Option<Option<String>>, y: Option<Option<String>>) {\n+44 |     match *x {\n    |\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:54:24\n+  --> $DIR/needless_pass_by_value.rs:56:24\n    |\n-54 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n+56 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                        ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:54:36\n+  --> $DIR/needless_pass_by_value.rs:56:36\n    |\n-54 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n+56 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                                    ^^^^^^^\n help: consider taking a reference instead\n    |\n-54 | fn test_destructure(x: Wrapper, y: &Wrapper, z: Wrapper) {\n-55 |     let Wrapper(s) = z; // moved\n-56 |     let Wrapper(ref t) = *y; // not moved\n-57 |     let Wrapper(_) = *y; // still not moved\n+56 | fn test_destructure(x: Wrapper, y: &Wrapper, z: Wrapper) {\n+57 |     let Wrapper(s) = z; // moved\n+58 |     let Wrapper(ref t) = *y; // not moved\n+59 |     let Wrapper(_) = *y; // still not moved\n    |\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:70:49\n+  --> $DIR/needless_pass_by_value.rs:72:49\n    |\n-70 | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n+72 | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n    |                                                 ^ help: consider taking a reference instead: `&T`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:72:18\n+  --> $DIR/needless_pass_by_value.rs:74:18\n    |\n-72 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+74 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                  ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:72:29\n+  --> $DIR/needless_pass_by_value.rs:74:29\n    |\n-72 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+74 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^^^\n help: consider changing the type to\n    |\n-72 | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n+74 | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^\n help: change `t.clone()` to\n    |\n-74 |     let _ = t.to_string();\n+76 |     let _ = t.to_string();\n    |             ^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:72:40\n+  --> $DIR/needless_pass_by_value.rs:74:40\n    |\n-72 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+74 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                        ^^^^^^^^ help: consider taking a reference instead: `&Vec<i32>`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:72:53\n+  --> $DIR/needless_pass_by_value.rs:74:53\n    |\n-72 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+74 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                                     ^^^^^^^^\n help: consider changing the type to\n    |\n-72 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {\n+74 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {\n    |                                                     ^^^^^^\n help: change `v.clone()` to\n    |\n-76 |     let _ = v.to_owned();\n+78 |     let _ = v.to_owned();\n    |             ^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:84:12\n+  --> $DIR/needless_pass_by_value.rs:86:12\n    |\n-84 |         s: String,\n+86 |         s: String,\n    |            ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:85:12\n+  --> $DIR/needless_pass_by_value.rs:87:12\n    |\n-85 |         t: String,\n+87 |         t: String,\n    |            ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:97:13\n+  --> $DIR/needless_pass_by_value.rs:99:13\n    |\n-97 |         _u: U,\n+99 |         _u: U,\n    |             ^ help: consider taking a reference instead: `&U`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:98:13\n-   |\n-98 |         _s: Self,\n-   |             ^^^^ help: consider taking a reference instead: `&Self`\n+   --> $DIR/needless_pass_by_value.rs:100:13\n+    |\n+100 |         _s: Self,\n+    |             ^^^^ help: consider taking a reference instead: `&Self`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:120:24\n+   --> $DIR/needless_pass_by_value.rs:122:24\n     |\n-120 | fn bar_copy(x: u32, y: CopyWrapper) {\n+122 | fn bar_copy(x: u32, y: CopyWrapper) {\n     |                        ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n     |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:118:1\n+   --> $DIR/needless_pass_by_value.rs:120:1\n     |\n-118 | struct CopyWrapper(u32);\n+120 | struct CopyWrapper(u32);\n     | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:126:29\n+   --> $DIR/needless_pass_by_value.rs:128:29\n     |\n-126 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n+128 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n     |                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n     |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:118:1\n+   --> $DIR/needless_pass_by_value.rs:120:1\n     |\n-118 | struct CopyWrapper(u32);\n+120 | struct CopyWrapper(u32);\n     | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:126:45\n+   --> $DIR/needless_pass_by_value.rs:128:45\n     |\n-126 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n+128 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n     |                                             ^^^^^^^^^^^\n     |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:118:1\n+   --> $DIR/needless_pass_by_value.rs:120:1\n     |\n-118 | struct CopyWrapper(u32);\n+120 | struct CopyWrapper(u32);\n     | ^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider taking a reference instead\n     |\n-126 | fn test_destructure_copy(x: CopyWrapper, y: &CopyWrapper, z: CopyWrapper) {\n-127 |     let CopyWrapper(s) = z; // moved\n-128 |     let CopyWrapper(ref t) = *y; // not moved\n-129 |     let CopyWrapper(_) = *y; // still not moved\n+128 | fn test_destructure_copy(x: CopyWrapper, y: &CopyWrapper, z: CopyWrapper) {\n+129 |     let CopyWrapper(s) = z; // moved\n+130 |     let CopyWrapper(ref t) = *y; // not moved\n+131 |     let CopyWrapper(_) = *y; // still not moved\n     |\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:126:61\n+   --> $DIR/needless_pass_by_value.rs:128:61\n     |\n-126 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n+128 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n     |                                                             ^^^^^^^^^^^\n     |\n help: consider marking this type as Copy\n-   --> $DIR/needless_pass_by_value.rs:118:1\n+   --> $DIR/needless_pass_by_value.rs:120:1\n     |\n-118 | struct CopyWrapper(u32);\n+120 | struct CopyWrapper(u32);\n     | ^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider taking a reference instead\n     |\n-126 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: &CopyWrapper) {\n-127 |     let CopyWrapper(s) = *z; // moved\n+128 | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: &CopyWrapper) {\n+129 |     let CopyWrapper(s) = *z; // moved\n     |\n \n error: aborting due to 20 previous errors"}, {"sha": "1954a8240b231ab576769c9aa5c1ea71de6011ed", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: the loop variable `i` is only used to index `ns`.\n 8 |     for i in 3..10 {\n   |              ^^^^^\n   |\n-  = note: `-D needless-range-loop` implied by `-D warnings`\n+  = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n   |\n 8 |     for <item> in ns.iter().take(10).skip(3) {"}, {"sha": "094fe3642a2a1b01133381875e89bd4d95c7a6a5", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: unneeded return statement\n 11 |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n    |\n-   = note: `-D needless-return` implied by `-D warnings`\n+   = note: `-D clippy::needless-return` implied by `-D warnings`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:15:5"}, {"sha": "acc51198497f0a4d435d03c553391e40715cc3bc", "filename": "tests/ui/needless_update.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_update.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneedless_update.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_update.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: struct update has no effect, all the fields in the struct have already be\n 16 |     S { a: 1, b: 1, ..base };\n    |                       ^^^^\n    |\n-   = note: `-D needless-update` implied by `-D warnings`\n+   = note: `-D clippy::needless-update` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "5fd4ab9ba48d5a793609f1402ee89e65b6765993", "filename": "tests/ui/neg_cmp_op_on_partial_ord.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,27 +1,27 @@\n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:17:21\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:19:21\n    |\n-17 |     let _not_less = !(a_value < another_value);\n+19 |     let _not_less = !(a_value < another_value);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D neg-cmp-op-on-partial-ord` implied by `-D warnings`\n+   = note: `-D clippy::neg-cmp-op-on-partial-ord` implied by `-D warnings`\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:20:30\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:22:30\n    |\n-20 |     let _not_less_or_equal = !(a_value <= another_value);\n+22 |     let _not_less_or_equal = !(a_value <= another_value);\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:23:24\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:25:24\n    |\n-23 |     let _not_greater = !(a_value > another_value);\n+25 |     let _not_greater = !(a_value > another_value);\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:26:33\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:28:33\n    |\n-26 |     let _not_greater_or_equal = !(a_value >= another_value);\n+28 |     let _not_greater_or_equal = !(a_value >= another_value);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "ba59fdb8940d710d647c959fc603c12427b0d914", "filename": "tests/ui/neg_multiply.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneg_multiply.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fneg_multiply.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Negation by multiplying with -1\n 30 |     x * -1;\n    |     ^^^^^^\n    |\n-   = note: `-D neg-multiply` implied by `-D warnings`\n+   = note: `-D clippy::neg-multiply` implied by `-D warnings`\n \n error: Negation by multiplying with -1\n   --> $DIR/neg_multiply.rs:32:5"}, {"sha": "3d1235964d1007e7ca5813101275a1200046d4bf", "filename": "tests/ui/never_loop.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnever_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnever_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,7 +1,7 @@\n error: this loop never actually loops\n   --> $DIR/never_loop.rs:7:5\n    |\n-7  | /     loop { // never_loop\n+7  | /     loop { // clippy::never_loop\n 8  | |         x += 1;\n 9  | |         if x == 1 {\n 10 | |             return\n@@ -10,7 +10,7 @@ error: this loop never actually loops\n 13 | |     }\n    | |_____^\n    |\n-   = note: #[deny(never_loop)] on by default\n+   = note: #[deny(clippy::never_loop)] on by default\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:28:5"}, {"sha": "11ece5e87089ba1f412d209440a698b0305c1ab9", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,39 +1,39 @@\n error: you should consider deriving a `Default` implementation for `Foo`\n-  --> $DIR/new_without_default.rs:10:5\n+  --> $DIR/new_without_default.rs:12:5\n    |\n-10 |     pub fn new() -> Foo { Foo }\n+12 |     pub fn new() -> Foo { Foo }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D new-without-default-derive` implied by `-D warnings`\n+   = note: `-D clippy::new-without-default-derive` implied by `-D warnings`\n help: try this\n    |\n-7  | #[derive(Default)]\n+9  | #[derive(Default)]\n    |\n \n error: you should consider deriving a `Default` implementation for `Bar`\n-  --> $DIR/new_without_default.rs:16:5\n+  --> $DIR/new_without_default.rs:18:5\n    |\n-16 |     pub fn new() -> Self { Bar }\n+18 |     pub fn new() -> Self { Bar }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try this\n    |\n-13 | #[derive(Default)]\n+15 | #[derive(Default)]\n    |\n \n error: you should consider adding a `Default` implementation for `LtKo<'c>`\n-  --> $DIR/new_without_default.rs:64:5\n+  --> $DIR/new_without_default.rs:66:5\n    |\n-64 |     pub fn new() -> LtKo<'c> { unimplemented!() }\n+66 |     pub fn new() -> LtKo<'c> { unimplemented!() }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D new-without-default` implied by `-D warnings`\n+   = note: `-D clippy::new-without-default` implied by `-D warnings`\n help: try this\n    |\n-63 | impl Default for LtKo<'c> {\n-64 |     fn default() -> Self {\n-65 |         Self::new()\n-66 |     }\n-67 | }\n+65 | impl Default for LtKo<'c> {\n+66 |     fn default() -> Self {\n+67 |         Self::new()\n+68 |     }\n+69 | }\n    |\n \n error: aborting due to 3 previous errors"}, {"sha": "2429d934ca1b64a625639372c86ef3867769c501", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,275 +1,275 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:59:5\n+  --> $DIR/no_effect.rs:61:5\n    |\n-59 |     0;\n+61 |     0;\n    |     ^^\n    |\n-   = note: `-D no-effect` implied by `-D warnings`\n+   = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:60:5\n+  --> $DIR/no_effect.rs:62:5\n    |\n-60 |     s2;\n+62 |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:61:5\n+  --> $DIR/no_effect.rs:63:5\n    |\n-61 |     Unit;\n+63 |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:62:5\n+  --> $DIR/no_effect.rs:64:5\n    |\n-62 |     Tuple(0);\n+64 |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:63:5\n+  --> $DIR/no_effect.rs:65:5\n    |\n-63 |     Struct { field: 0 };\n+65 |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:64:5\n+  --> $DIR/no_effect.rs:66:5\n    |\n-64 |     Struct { ..s };\n+66 |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:65:5\n+  --> $DIR/no_effect.rs:67:5\n    |\n-65 |     Union { a: 0 };\n+67 |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:66:5\n+  --> $DIR/no_effect.rs:68:5\n    |\n-66 |     Enum::Tuple(0);\n+68 |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:67:5\n+  --> $DIR/no_effect.rs:69:5\n    |\n-67 |     Enum::Struct { field: 0 };\n+69 |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:68:5\n+  --> $DIR/no_effect.rs:70:5\n    |\n-68 |     5 + 6;\n+70 |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:69:5\n+  --> $DIR/no_effect.rs:71:5\n    |\n-69 |     *&42;\n+71 |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:70:5\n+  --> $DIR/no_effect.rs:72:5\n    |\n-70 |     &6;\n+72 |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:71:5\n+  --> $DIR/no_effect.rs:73:5\n    |\n-71 |     (5, 6, 7);\n+73 |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:72:5\n+  --> $DIR/no_effect.rs:74:5\n    |\n-72 |     box 42;\n+74 |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:73:5\n+  --> $DIR/no_effect.rs:75:5\n    |\n-73 |     ..;\n+75 |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:74:5\n+  --> $DIR/no_effect.rs:76:5\n    |\n-74 |     5..;\n+76 |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:75:5\n+  --> $DIR/no_effect.rs:77:5\n    |\n-75 |     ..5;\n+77 |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:76:5\n+  --> $DIR/no_effect.rs:78:5\n    |\n-76 |     5..6;\n+78 |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:78:5\n+  --> $DIR/no_effect.rs:80:5\n    |\n-78 |     [42, 55];\n+80 |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:79:5\n+  --> $DIR/no_effect.rs:81:5\n    |\n-79 |     [42, 55][1];\n+81 |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:80:5\n+  --> $DIR/no_effect.rs:82:5\n    |\n-80 |     (42, 55).1;\n+82 |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:81:5\n+  --> $DIR/no_effect.rs:83:5\n    |\n-81 |     [42; 55];\n+83 |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:82:5\n+  --> $DIR/no_effect.rs:84:5\n    |\n-82 |     [42; 55][13];\n+84 |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:84:5\n+  --> $DIR/no_effect.rs:86:5\n    |\n-84 |     || x += 5;\n+86 |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:86:5\n+  --> $DIR/no_effect.rs:88:5\n    |\n-86 |     FooString { s: s };\n+88 |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:97:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n-97 |     Tuple(get_number());\n+99 |     Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n    |\n-   = note: `-D unnecessary-operation` implied by `-D warnings`\n+   = note: `-D clippy::unnecessary-operation` implied by `-D warnings`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:98:5\n-   |\n-98 |     Struct { field: get_number() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   --> $DIR/no_effect.rs:100:5\n+    |\n+100 |     Struct { field: get_number() };\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:99:5\n-   |\n-99 |     Struct { ..get_struct() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n+   --> $DIR/no_effect.rs:101:5\n+    |\n+101 |     Struct { ..get_struct() };\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:100:5\n+   --> $DIR/no_effect.rs:102:5\n     |\n-100 |     Enum::Tuple(get_number());\n+102 |     Enum::Tuple(get_number());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:101:5\n+   --> $DIR/no_effect.rs:103:5\n     |\n-101 |     Enum::Struct { field: get_number() };\n+103 |     Enum::Struct { field: get_number() };\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:102:5\n+   --> $DIR/no_effect.rs:104:5\n     |\n-102 |     5 + get_number();\n+104 |     5 + get_number();\n     |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:103:5\n+   --> $DIR/no_effect.rs:105:5\n     |\n-103 |     *&get_number();\n+105 |     *&get_number();\n     |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:104:5\n+   --> $DIR/no_effect.rs:106:5\n     |\n-104 |     &get_number();\n+106 |     &get_number();\n     |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:105:5\n+   --> $DIR/no_effect.rs:107:5\n     |\n-105 |     (5, 6, get_number());\n+107 |     (5, 6, get_number());\n     |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:106:5\n+   --> $DIR/no_effect.rs:108:5\n     |\n-106 |     box get_number();\n+108 |     box get_number();\n     |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:107:5\n+   --> $DIR/no_effect.rs:109:5\n     |\n-107 |     get_number()..;\n+109 |     get_number()..;\n     |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:108:5\n+   --> $DIR/no_effect.rs:110:5\n     |\n-108 |     ..get_number();\n+110 |     ..get_number();\n     |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:109:5\n+   --> $DIR/no_effect.rs:111:5\n     |\n-109 |     5..get_number();\n+111 |     5..get_number();\n     |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:110:5\n+   --> $DIR/no_effect.rs:112:5\n     |\n-110 |     [42, get_number()];\n+112 |     [42, get_number()];\n     |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:111:5\n+   --> $DIR/no_effect.rs:113:5\n     |\n-111 |     [42, 55][get_number() as usize];\n+113 |     [42, 55][get_number() as usize];\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:112:5\n+   --> $DIR/no_effect.rs:114:5\n     |\n-112 |     (42, get_number()).1;\n+114 |     (42, get_number()).1;\n     |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:113:5\n+   --> $DIR/no_effect.rs:115:5\n     |\n-113 |     [get_number(); 55];\n+115 |     [get_number(); 55];\n     |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:114:5\n+   --> $DIR/no_effect.rs:116:5\n     |\n-114 |     [42; 55][get_number() as usize];\n+116 |     [42; 55][get_number() as usize];\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:115:5\n+   --> $DIR/no_effect.rs:117:5\n     |\n-115 |     {get_number()};\n+117 |     {get_number()};\n     |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:116:5\n+   --> $DIR/no_effect.rs:118:5\n     |\n-116 |     FooString { s: String::from(\"blah\"), };\n+118 |     FooString { s: String::from(\"blah\"), };\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `String::from(\"blah\");`\n \n error: aborting due to 45 previous errors"}, {"sha": "7f164595b59971e3bbcf4f8a625ea2f92ef91771", "filename": "tests/ui/non_copy_const.stderr", "status": "modified", "additions": 79, "deletions": 79, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnon_copy_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnon_copy_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_copy_const.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,272 +1,272 @@\n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:10:1\n+  --> $DIR/non_copy_const.rs:12:1\n    |\n-10 | const ATOMIC: AtomicUsize = AtomicUsize::new(5); //~ ERROR interior mutable\n+12 | const ATOMIC: AtomicUsize = AtomicUsize::new(5); //~ ERROR interior mutable\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n    | help: make this a static item: `static`\n    |\n-   = note: #[deny(declare_interior_mutable_const)] on by default\n+   = note: #[deny(clippy::declare_interior_mutable_const)] on by default\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:11:1\n+  --> $DIR/non_copy_const.rs:13:1\n    |\n-11 | const CELL: Cell<usize> = Cell::new(6); //~ ERROR interior mutable\n+13 | const CELL: Cell<usize> = Cell::new(6); //~ ERROR interior mutable\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n    | help: make this a static item: `static`\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:12:1\n+  --> $DIR/non_copy_const.rs:14:1\n    |\n-12 | const ATOMIC_TUPLE: ([AtomicUsize; 1], Vec<AtomicUsize>, u8) = ([ATOMIC], Vec::new(), 7);\n+14 | const ATOMIC_TUPLE: ([AtomicUsize; 1], Vec<AtomicUsize>, u8) = ([ATOMIC], Vec::new(), 7);\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n    | help: make this a static item: `static`\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:16:42\n+  --> $DIR/non_copy_const.rs:18:42\n    |\n-16 |     ($name:ident: $ty:ty = $e:expr) => { const $name: $ty = $e; };\n+18 |     ($name:ident: $ty:ty = $e:expr) => { const $name: $ty = $e; };\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^\n-17 | }\n-18 | declare_const!(_ONCE: Once = Once::new()); //~ ERROR interior mutable\n+19 | }\n+20 | declare_const!(_ONCE: Once = Once::new()); //~ ERROR interior mutable\n    | ------------------------------------------ in this macro invocation\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:39:5\n+  --> $DIR/non_copy_const.rs:41:5\n    |\n-39 |     const ATOMIC: AtomicUsize; //~ ERROR interior mutable\n+41 |     const ATOMIC: AtomicUsize; //~ ERROR interior mutable\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:43:5\n+  --> $DIR/non_copy_const.rs:45:5\n    |\n-43 |     const INPUT: T;\n+45 |     const INPUT: T;\n    |     ^^^^^^^^^^^^^^^\n    |\n help: consider requiring `T` to be `Copy`\n-  --> $DIR/non_copy_const.rs:43:18\n+  --> $DIR/non_copy_const.rs:45:18\n    |\n-43 |     const INPUT: T;\n+45 |     const INPUT: T;\n    |                  ^\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:46:5\n+  --> $DIR/non_copy_const.rs:48:5\n    |\n-46 |     const ASSOC: Self::NonCopyType;\n+48 |     const ASSOC: Self::NonCopyType;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `<Self as Trait<T>>::NonCopyType` to be `Copy`\n-  --> $DIR/non_copy_const.rs:46:18\n+  --> $DIR/non_copy_const.rs:48:18\n    |\n-46 |     const ASSOC: Self::NonCopyType;\n+48 |     const ASSOC: Self::NonCopyType;\n    |                  ^^^^^^^^^^^^^^^^^\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:50:5\n+  --> $DIR/non_copy_const.rs:52:5\n    |\n-50 |     const AN_INPUT: T = Self::INPUT;\n+52 |     const AN_INPUT: T = Self::INPUT;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `T` to be `Copy`\n-  --> $DIR/non_copy_const.rs:50:21\n+  --> $DIR/non_copy_const.rs:52:21\n    |\n-50 |     const AN_INPUT: T = Self::INPUT;\n+52 |     const AN_INPUT: T = Self::INPUT;\n    |                     ^\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:16:42\n+  --> $DIR/non_copy_const.rs:18:42\n    |\n-16 |     ($name:ident: $ty:ty = $e:expr) => { const $name: $ty = $e; };\n+18 |     ($name:ident: $ty:ty = $e:expr) => { const $name: $ty = $e; };\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^\n ...\n-53 |     declare_const!(ANOTHER_INPUT: T = Self::INPUT); //~ ERROR interior mutable\n+55 |     declare_const!(ANOTHER_INPUT: T = Self::INPUT); //~ ERROR interior mutable\n    |     ----------------------------------------------- in this macro invocation\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:59:5\n+  --> $DIR/non_copy_const.rs:61:5\n    |\n-59 |     const SELF_2: Self;\n+61 |     const SELF_2: Self;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `Self` to be `Copy`\n-  --> $DIR/non_copy_const.rs:59:19\n+  --> $DIR/non_copy_const.rs:61:19\n    |\n-59 |     const SELF_2: Self;\n+61 |     const SELF_2: Self;\n    |                   ^^^^\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:80:5\n+  --> $DIR/non_copy_const.rs:82:5\n    |\n-80 |     const ASSOC_3: AtomicUsize = AtomicUsize::new(14); //~ ERROR interior mutable\n+82 |     const ASSOC_3: AtomicUsize = AtomicUsize::new(14); //~ ERROR interior mutable\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:83:5\n+  --> $DIR/non_copy_const.rs:85:5\n    |\n-83 |     const U_SELF: U = U::SELF_2;\n+85 |     const U_SELF: U = U::SELF_2;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `U` to be `Copy`\n-  --> $DIR/non_copy_const.rs:83:19\n+  --> $DIR/non_copy_const.rs:85:19\n    |\n-83 |     const U_SELF: U = U::SELF_2;\n+85 |     const U_SELF: U = U::SELF_2;\n    |                   ^\n \n error: a const item should never be interior mutable\n-  --> $DIR/non_copy_const.rs:86:5\n+  --> $DIR/non_copy_const.rs:88:5\n    |\n-86 |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n+88 |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider requiring `<T as Trait<u32>>::NonCopyType` to be `Copy`\n-  --> $DIR/non_copy_const.rs:86:20\n+  --> $DIR/non_copy_const.rs:88:20\n    |\n-86 |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n+88 |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n    |                    ^^^^^^^^^^^^^^\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:93:5\n+  --> $DIR/non_copy_const.rs:95:5\n    |\n-93 |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n+95 |     ATOMIC.store(1, Ordering::SeqCst); //~ ERROR interior mutability\n    |     ^^^^^^\n    |\n-   = note: #[deny(borrow_interior_mutable_const)] on by default\n+   = note: #[deny(clippy::borrow_interior_mutable_const)] on by default\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:94:16\n+  --> $DIR/non_copy_const.rs:96:16\n    |\n-94 |     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutability\n+96 |     assert_eq!(ATOMIC.load(Ordering::SeqCst), 5); //~ ERROR interior mutability\n    |                ^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:96:5\n+  --> $DIR/non_copy_const.rs:98:5\n    |\n-96 |     ATOMIC_USIZE_INIT.store(2, Ordering::SeqCst); //~ ERROR interior mutability\n+98 |     ATOMIC_USIZE_INIT.store(2, Ordering::SeqCst); //~ ERROR interior mutability\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-  --> $DIR/non_copy_const.rs:97:16\n+  --> $DIR/non_copy_const.rs:99:16\n    |\n-97 |     assert_eq!(ATOMIC_USIZE_INIT.load(Ordering::SeqCst), 0); //~ ERROR interior mutability\n+99 |     assert_eq!(ATOMIC_USIZE_INIT.load(Ordering::SeqCst), 0); //~ ERROR interior mutability\n    |                ^^^^^^^^^^^^^^^^^\n    |\n    = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:100:22\n+   --> $DIR/non_copy_const.rs:102:22\n     |\n-100 |     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n+102 |     let _once_ref = &ONCE_INIT; //~ ERROR interior mutability\n     |                      ^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:101:25\n+   --> $DIR/non_copy_const.rs:103:25\n     |\n-101 |     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability\n+103 |     let _once_ref_2 = &&ONCE_INIT; //~ ERROR interior mutability\n     |                         ^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:102:27\n+   --> $DIR/non_copy_const.rs:104:27\n     |\n-102 |     let _once_ref_4 = &&&&ONCE_INIT; //~ ERROR interior mutability\n+104 |     let _once_ref_4 = &&&&ONCE_INIT; //~ ERROR interior mutability\n     |                           ^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:103:26\n+   --> $DIR/non_copy_const.rs:105:26\n     |\n-103 |     let _once_mut = &mut ONCE_INIT; //~ ERROR interior mutability\n+105 |     let _once_mut = &mut ONCE_INIT; //~ ERROR interior mutability\n     |                          ^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:114:14\n+   --> $DIR/non_copy_const.rs:116:14\n     |\n-114 |     let _ = &ATOMIC_TUPLE; //~ ERROR interior mutability\n+116 |     let _ = &ATOMIC_TUPLE; //~ ERROR interior mutability\n     |              ^^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:115:14\n+   --> $DIR/non_copy_const.rs:117:14\n     |\n-115 |     let _ = &ATOMIC_TUPLE.0; //~ ERROR interior mutability\n+117 |     let _ = &ATOMIC_TUPLE.0; //~ ERROR interior mutability\n     |              ^^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:116:19\n+   --> $DIR/non_copy_const.rs:118:19\n     |\n-116 |     let _ = &(&&&&ATOMIC_TUPLE).0; //~ ERROR interior mutability\n+118 |     let _ = &(&&&&ATOMIC_TUPLE).0; //~ ERROR interior mutability\n     |                   ^^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:117:14\n+   --> $DIR/non_copy_const.rs:119:14\n     |\n-117 |     let _ = &ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n+119 |     let _ = &ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n     |              ^^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:118:13\n+   --> $DIR/non_copy_const.rs:120:13\n     |\n-118 |     let _ = ATOMIC_TUPLE.0[0].load(Ordering::SeqCst); //~ ERROR interior mutability\n+120 |     let _ = ATOMIC_TUPLE.0[0].load(Ordering::SeqCst); //~ ERROR interior mutability\n     |             ^^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:124:13\n+   --> $DIR/non_copy_const.rs:126:13\n     |\n-124 |     let _ = ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n+126 |     let _ = ATOMIC_TUPLE.0[0]; //~ ERROR interior mutability\n     |             ^^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:129:5\n+   --> $DIR/non_copy_const.rs:131:5\n     |\n-129 |     CELL.set(2); //~ ERROR interior mutability\n+131 |     CELL.set(2); //~ ERROR interior mutability\n     |     ^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:130:16\n+   --> $DIR/non_copy_const.rs:132:16\n     |\n-130 |     assert_eq!(CELL.get(), 6); //~ ERROR interior mutability\n+132 |     assert_eq!(CELL.get(), 6); //~ ERROR interior mutability\n     |                ^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:143:5\n+   --> $DIR/non_copy_const.rs:145:5\n     |\n-143 |     u64::ATOMIC.store(5, Ordering::SeqCst); //~ ERROR interior mutability\n+145 |     u64::ATOMIC.store(5, Ordering::SeqCst); //~ ERROR interior mutability\n     |     ^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here\n \n error: a const item with interior mutability should not be borrowed\n-   --> $DIR/non_copy_const.rs:144:16\n+   --> $DIR/non_copy_const.rs:146:16\n     |\n-144 |     assert_eq!(u64::ATOMIC.load(Ordering::SeqCst), 9); //~ ERROR interior mutability\n+146 |     assert_eq!(u64::ATOMIC.load(Ordering::SeqCst), 9); //~ ERROR interior mutability\n     |                ^^^^^^^^^^^\n     |\n     = help: assign this const to a local or static variable, and use the variable here"}, {"sha": "b1dd62ed87cdac6f46dfb3370aec87ec7a30736f", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: binding's name is too similar to existing binding\n 18 |     let bpple: i32;\n    |         ^^^^^\n    |\n-   = note: `-D similar-names` implied by `-D warnings`\n+   = note: `-D clippy::similar-names` implied by `-D warnings`\n note: existing binding defined here\n   --> $DIR/non_expressive_names.rs:16:9\n    |\n@@ -109,7 +109,7 @@ error: 5th binding whose name is just one char\n 120 |             let e: i32;\n     |                 ^\n     |\n-    = note: `-D many-single-char-names` implied by `-D warnings`\n+    = note: `-D clippy::many-single-char-names` implied by `-D warnings`\n \n error: 5th binding whose name is just one char\n    --> $DIR/non_expressive_names.rs:123:17\n@@ -135,7 +135,7 @@ error: consider choosing a more descriptive name\n 139 |     let _1 = 1; //~ERROR Consider a more descriptive name\n     |         ^^\n     |\n-    = note: `-D just-underscores-and-digits` implied by `-D warnings`\n+    = note: `-D clippy::just-underscores-and-digits` implied by `-D warnings`\n \n error: consider choosing a more descriptive name\n    --> $DIR/non_expressive_names.rs:140:9"}, {"sha": "7c158b5207bcb54e7c4c25ea4860c4b0a77b2058", "filename": "tests/ui/ok_expect.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fok_expect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fok_expect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_expect.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: called `ok().expect()` on a Result value. You can call `expect` directly\n 14 |     res.ok().expect(\"disaster!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D ok-expect` implied by `-D warnings`\n+   = note: `-D clippy::ok-expect` implied by `-D warnings`\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n   --> $DIR/ok_expect.rs:20:5"}, {"sha": "eac49032ed8b16f82db5a2e05031a743d017ef8d", "filename": "tests/ui/ok_if_let.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fok_if_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fok_if_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -8,7 +8,7 @@ error: Matching on `Some` with `ok()` is redundant\n 11 | |     }\n    | |_____^\n    |\n-   = note: `-D if-let-some-result` implied by `-D warnings`\n+   = note: `-D clippy::if-let-some-result` implied by `-D warnings`\n    = help: Consider matching on `Ok(y)` and removing the call to `ok` instead\n \n error: aborting due to previous error"}, {"sha": "398e3a6e9e6f888ee379ca03725eeb36c7f61489", "filename": "tests/ui/op_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fop_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fop_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: needlessly taken reference of both operands\n 13 |     let foo = &5 - &6;\n    |               ^^^^^^^\n    |\n-   = note: `-D op-ref` implied by `-D warnings`\n+   = note: `-D clippy::op-ref` implied by `-D warnings`\n help: use the values directly\n    |\n 13 |     let foo = 5 - 6;"}, {"sha": "64ad667a4c76b27bbebbfc1d94a2801424fa30a9", "filename": "tests/ui/open_options.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fopen_options.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fopen_options.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fopen_options.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: file opened with \"truncate\" and \"read\"\n 8 |     OpenOptions::new().read(true).truncate(true).open(\"foo.txt\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D nonsensical-open-options` implied by `-D warnings`\n+  = note: `-D clippy::nonsensical-open-options` implied by `-D warnings`\n \n error: file opened with \"append\" and \"truncate\"\n  --> $DIR/open_options.rs:9:5"}, {"sha": "77fe24d2696e38871576cb569b7ca95f039b19b6", "filename": "tests/ui/option_map_unit_fn.stderr", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Foption_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Foption_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,207 +1,207 @@\n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:32:5\n+  --> $DIR/option_map_unit_fn.rs:34:5\n    |\n-32 |     x.field.map(do_nothing);\n+34 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n    |\n-   = note: `-D option-map-unit-fn` implied by `-D warnings`\n+   = note: `-D clippy::option-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:34:5\n+  --> $DIR/option_map_unit_fn.rs:36:5\n    |\n-34 |     x.field.map(do_nothing);\n+36 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:36:5\n+  --> $DIR/option_map_unit_fn.rs:38:5\n    |\n-36 |     x.field.map(diverge);\n+38 |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:42:5\n+  --> $DIR/option_map_unit_fn.rs:44:5\n    |\n-42 |     x.field.map(|value| x.do_option_nothing(value + captured));\n+44 |     x.field.map(|value| x.do_option_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:44:5\n+  --> $DIR/option_map_unit_fn.rs:46:5\n    |\n-44 |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n+46 |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:47:5\n+  --> $DIR/option_map_unit_fn.rs:49:5\n    |\n-47 |     x.field.map(|value| do_nothing(value + captured));\n+49 |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:49:5\n+  --> $DIR/option_map_unit_fn.rs:51:5\n    |\n-49 |     x.field.map(|value| { do_nothing(value + captured) });\n+51 |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:51:5\n+  --> $DIR/option_map_unit_fn.rs:53:5\n    |\n-51 |     x.field.map(|value| { do_nothing(value + captured); });\n+53 |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:53:5\n+  --> $DIR/option_map_unit_fn.rs:55:5\n    |\n-53 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+55 |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:56:5\n+  --> $DIR/option_map_unit_fn.rs:58:5\n    |\n-56 |     x.field.map(|value| diverge(value + captured));\n+58 |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:58:5\n+  --> $DIR/option_map_unit_fn.rs:60:5\n    |\n-58 |     x.field.map(|value| { diverge(value + captured) });\n+60 |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:60:5\n+  --> $DIR/option_map_unit_fn.rs:62:5\n    |\n-60 |     x.field.map(|value| { diverge(value + captured); });\n+62 |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:62:5\n+  --> $DIR/option_map_unit_fn.rs:64:5\n    |\n-62 |     x.field.map(|value| { { diverge(value + captured); } });\n+64 |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:67:5\n+  --> $DIR/option_map_unit_fn.rs:69:5\n    |\n-67 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+69 |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:69:5\n+  --> $DIR/option_map_unit_fn.rs:71:5\n    |\n-69 |     x.field.map(|value| { plus_one(value + captured); });\n+71 |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:71:5\n+  --> $DIR/option_map_unit_fn.rs:73:5\n    |\n-71 |     x.field.map(|value| { { plus_one(value + captured); } });\n+73 |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:74:5\n+  --> $DIR/option_map_unit_fn.rs:76:5\n    |\n-74 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+76 |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:77:5\n+  --> $DIR/option_map_unit_fn.rs:79:5\n    |\n-77 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+79 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:79:5\n+  --> $DIR/option_map_unit_fn.rs:81:5\n    |\n-79 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+81 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:83:5\n+  --> $DIR/option_map_unit_fn.rs:85:5\n    |\n-83 |        x.field.map(|value| {\n+85 |        x.field.map(|value| {\n    |   _____^\n    |  |_____|\n    | ||\n-84 | ||         do_nothing(value);\n-85 | ||         do_nothing(value)\n-86 | ||     });\n+86 | ||         do_nothing(value);\n+87 | ||         do_nothing(value)\n+88 | ||     });\n    | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n    | |_______|\n    | \n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:87:5\n+  --> $DIR/option_map_unit_fn.rs:89:5\n    |\n-87 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+89 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:90:5\n+  --> $DIR/option_map_unit_fn.rs:92:5\n    |\n-90 |     Some(42).map(diverge);\n+92 |     Some(42).map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = Some(42) { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:91:5\n+  --> $DIR/option_map_unit_fn.rs:93:5\n    |\n-91 |     \"12\".parse::<i32>().ok().map(diverge);\n+93 |     \"12\".parse::<i32>().ok().map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = \"12\".parse::<i32>().ok() { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:92:5\n+  --> $DIR/option_map_unit_fn.rs:94:5\n    |\n-92 |     Some(plus_one(1)).map(do_nothing);\n+94 |     Some(plus_one(1)).map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = Some(plus_one(1)) { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:96:5\n+  --> $DIR/option_map_unit_fn.rs:98:5\n    |\n-96 |     y.map(do_nothing);\n+98 |     y.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_y) = y { do_nothing(...) }`"}, {"sha": "4341857cce007c0db6b517966b0e955e2f9f85e4", "filename": "tests/ui/option_option.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Foption_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Foption_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_option.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enu\n 1 | fn input(_: Option<Option<u8>>) {\n   |             ^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D option-option` implied by `-D warnings`\n+  = note: `-D clippy::option-option` implied by `-D warnings`\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n  --> $DIR/option_option.rs:4:16"}, {"sha": "9659e352af136d9477b7912189491f5bd37557b7", "filename": "tests/ui/overflow_check_conditional.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Foverflow_check_conditional.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Foverflow_check_conditional.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foverflow_check_conditional.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: You are trying to use classic C overflow conditions that will fail in Rus\n 11 |     if a + b < a {\n    |        ^^^^^^^^^\n    |\n-   = note: `-D overflow-check-conditional` implied by `-D warnings`\n+   = note: `-D clippy::overflow-check-conditional` implied by `-D warnings`\n \n error: You are trying to use classic C overflow conditions that will fail in Rust.\n   --> $DIR/overflow_check_conditional.rs:14:5"}, {"sha": "c5ce42f4c5479f87def668184e6ae6aefafe7210", "filename": "tests/ui/panic_unimplemented.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fpanic_unimplemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fpanic_unimplemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_unimplemented.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: you probably are missing some parameter in your format string\n 8 |         panic!(\"{}\");\n   |                ^^^^\n   |\n-  = note: `-D panic-params` implied by `-D warnings`\n+  = note: `-D clippy::panic-params` implied by `-D warnings`\n \n error: you probably are missing some parameter in your format string\n   --> $DIR/panic_unimplemented.rs:10:16\n@@ -30,7 +30,7 @@ error: `unimplemented` should not be present in production code\n 58 |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D unimplemented` implied by `-D warnings`\n+   = note: `-D clippy::unimplemented` implied by `-D warnings`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "773bed8fd8e22f6810fcbb02ce728980b374e0ac", "filename": "tests/ui/partialeq_ne_impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fpartialeq_ne_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fpartialeq_ne_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartialeq_ne_impl.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: re-implementing `PartialEq::ne` is unnecessary\n 10 |     fn ne(&self, _: &Foo) -> bool { false }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D partialeq-ne-impl` implied by `-D warnings`\n+   = note: `-D clippy::partialeq-ne-impl` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "ce8aab7e627d683186851f62522333ed3cddd47b", "filename": "tests/ui/patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: the `y @ _` pattern can be written as just `y`\n 10 |         y @ _   => (),\n    |         ^^^^^\n    |\n-   = note: `-D redundant-pattern` implied by `-D warnings`\n+   = note: `-D clippy::redundant-pattern` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "5ec1732ee562b3dcd9b1efc5a0b727e9aa71908f", "filename": "tests/ui/precedence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: operator precedence can trip the unwary\n 18 |     1 << 2 + 3;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression: `1 << (2 + 3)`\n    |\n-   = note: `-D precedence` implied by `-D warnings`\n+   = note: `-D clippy::precedence` implied by `-D warnings`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:19:5"}, {"sha": "92a2f2f9627f845001024ae0f969fb80c705e703", "filename": "tests/ui/print.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: use of `Debug`-based formatting\n 13 |         write!(f, \"{:?}\", 43.1415)\n    |                   ^^^^^^\n    |\n-   = note: `-D use-debug` implied by `-D warnings`\n+   = note: `-D clippy::use-debug` implied by `-D warnings`\n \n error: use of `Debug`-based formatting\n   --> $DIR/print.rs:20:19\n@@ -18,7 +18,7 @@ error: use of `println!`\n 25 |     println!(\"Hello\");\n    |     ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D print-stdout` implied by `-D warnings`\n+   = note: `-D clippy::print-stdout` implied by `-D warnings`\n \n error: use of `print!`\n   --> $DIR/print.rs:26:5"}, {"sha": "bd13f5d17305a8b590f255665878af17372ddca4", "filename": "tests/ui/print_literal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprint_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprint_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: literal with an empty format string\n 24 |     println!(\"{} of {:b} people know binary, the other half doesn't\", 1, 2);\n    |                                                                       ^\n    |\n-   = note: `-D print-literal` implied by `-D warnings`\n+   = note: `-D clippy::print-literal` implied by `-D warnings`\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:25:24"}, {"sha": "12c4ecb2f3e591a5d53e041285ebba1832dae52c", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: using `print!()` with a format string that ends in a single newline, cons\n 7 |     print!(\"Hello/n\");\n   |     ^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D print-with-newline` implied by `-D warnings`\n+  = note: `-D clippy::print-with-newline` implied by `-D warnings`\n \n error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n  --> $DIR/print_with_newline.rs:8:5"}, {"sha": "96d15838400d9c63c4b8c0722db21848231d3593", "filename": "tests/ui/println_empty_string.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprintln_empty_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fprintln_empty_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprintln_empty_string.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: using `println!(\"\")`\n 3 |     println!(\"\");\n   |     ^^^^^^^^^^^^ help: replace it with: `println!()`\n   |\n-  = note: `-D println-empty-string` implied by `-D warnings`\n+  = note: `-D clippy::println-empty-string` implied by `-D warnings`\n \n error: using `println!(\"\")`\n  --> $DIR/println_empty_string.rs:6:14"}, {"sha": "6c16443f524d30e5b77f4ca366a060c2efdd42f2", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,85 +1,85 @@\n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.\n- --> $DIR/ptr_arg.rs:6:14\n+ --> $DIR/ptr_arg.rs:8:14\n   |\n-6 | fn do_vec(x: &Vec<i64>) {\n+8 | fn do_vec(x: &Vec<i64>) {\n   |              ^^^^^^^^^ help: change this to: `&[i64]`\n   |\n-  = note: `-D ptr-arg` implied by `-D warnings`\n+  = note: `-D clippy::ptr-arg` implied by `-D warnings`\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n-  --> $DIR/ptr_arg.rs:14:14\n+  --> $DIR/ptr_arg.rs:16:14\n    |\n-14 | fn do_str(x: &String) {\n+16 | fn do_str(x: &String) {\n    |              ^^^^^^^ help: change this to: `&str`\n \n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.\n-  --> $DIR/ptr_arg.rs:27:18\n+  --> $DIR/ptr_arg.rs:29:18\n    |\n-27 |     fn do_vec(x: &Vec<i64>);\n+29 |     fn do_vec(x: &Vec<i64>);\n    |                  ^^^^^^^^^ help: change this to: `&[i64]`\n \n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.\n-  --> $DIR/ptr_arg.rs:40:14\n+  --> $DIR/ptr_arg.rs:42:14\n    |\n-40 | fn cloned(x: &Vec<u8>) -> Vec<u8> {\n+42 | fn cloned(x: &Vec<u8>) -> Vec<u8> {\n    |              ^^^^^^^^\n help: change this to\n    |\n-40 | fn cloned(x: &[u8]) -> Vec<u8> {\n+42 | fn cloned(x: &[u8]) -> Vec<u8> {\n    |              ^^^^^\n help: change `x.clone()` to\n    |\n-41 |     let e = x.to_owned();\n+43 |     let e = x.to_owned();\n    |             ^^^^^^^^^^^^\n help: change `x.clone()` to\n    |\n-46 |     x.to_owned()\n+48 |     x.to_owned()\n    |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n-  --> $DIR/ptr_arg.rs:49:18\n+  --> $DIR/ptr_arg.rs:51:18\n    |\n-49 | fn str_cloned(x: &String) -> String {\n+51 | fn str_cloned(x: &String) -> String {\n    |                  ^^^^^^^\n help: change this to\n    |\n-49 | fn str_cloned(x: &str) -> String {\n+51 | fn str_cloned(x: &str) -> String {\n    |                  ^^^^\n help: change `x.clone()` to\n    |\n-50 |     let a = x.to_string();\n+52 |     let a = x.to_string();\n    |             ^^^^^^^^^^^^^\n help: change `x.clone()` to\n    |\n-51 |     let b = x.to_string();\n+53 |     let b = x.to_string();\n    |             ^^^^^^^^^^^^^\n help: change `x.clone()` to\n    |\n-56 |     x.to_string()\n+58 |     x.to_string()\n    |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n-  --> $DIR/ptr_arg.rs:59:44\n+  --> $DIR/ptr_arg.rs:61:44\n    |\n-59 | fn false_positive_capacity(x: &Vec<u8>, y: &String) {\n+61 | fn false_positive_capacity(x: &Vec<u8>, y: &String) {\n    |                                            ^^^^^^^\n help: change this to\n    |\n-59 | fn false_positive_capacity(x: &Vec<u8>, y: &str) {\n+61 | fn false_positive_capacity(x: &Vec<u8>, y: &str) {\n    |                                            ^^^^\n help: change `y.clone()` to\n    |\n-61 |     let b = y.to_string();\n+63 |     let b = y.to_string();\n    |             ^^^^^^^^^^^^^\n help: change `y.as_str()` to\n    |\n-62 |     let c = y;\n+64 |     let c = y;\n    |             ^\n \n error: using a reference to `Cow` is not recommended.\n-  --> $DIR/ptr_arg.rs:71:25\n+  --> $DIR/ptr_arg.rs:73:25\n    |\n-71 | fn test_cow_with_ref(c: &Cow<[i32]>) {\n+73 | fn test_cow_with_ref(c: &Cow<[i32]>) {\n    |                         ^^^^^^^^^^^ help: change this to: `&[i32]`\n \n error: aborting due to 7 previous errors"}, {"sha": "68c0e5e381a68279c1a55646eb1b76032838c947", "filename": "tests/ui/question_mark.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fquestion_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fquestion_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -7,7 +7,7 @@ error: this block may be rewritten with the `?` operator\n 4 | |     }\n   | |_____^ help: replace_it_with: `a?;`\n   |\n-  = note: `-D question-mark` implied by `-D warnings`\n+  = note: `-D clippy::question-mark` implied by `-D warnings`\n \n error: this block may be rewritten with the `?` operator\n   --> $DIR/question_mark.rs:37:3"}, {"sha": "651ff266c1a05a02d87f68a3276e56406d70bfd2", "filename": "tests/ui/range.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Frange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Frange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Iterator::step_by(0) will panic at runtime\n 10 |     let _ = (0..1).step_by(0);\n    |             ^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D iterator-step-by-zero` implied by `-D warnings`\n+   = note: `-D clippy::iterator-step-by-zero` implied by `-D warnings`\n \n error: Iterator::step_by(0) will panic at runtime\n   --> $DIR/range.rs:14:13\n@@ -30,7 +30,7 @@ error: It is more idiomatic to use v1.iter().enumerate()\n 26 |     let _x = v1.iter().zip(0..v1.len());\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D range-zip-with-len` implied by `-D warnings`\n+   = note: `-D clippy::range-zip-with-len` implied by `-D warnings`\n \n error: Iterator::step_by(0) will panic at runtime\n   --> $DIR/range.rs:30:13"}, {"sha": "083c153addbc8235e07706c3f8ddb3423feb80dc", "filename": "tests/ui/range_plus_minus_one.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Frange_plus_minus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Frange_plus_minus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,47 +1,47 @@\n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:10:14\n+  --> $DIR/range_plus_minus_one.rs:12:14\n    |\n-10 |     for _ in 0..3+1 { }\n+12 |     for _ in 0..3+1 { }\n    |              ^^^^^^ help: use: `0..=3`\n    |\n-   = note: `-D range-plus-one` implied by `-D warnings`\n+   = note: `-D clippy::range-plus-one` implied by `-D warnings`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:13:14\n+  --> $DIR/range_plus_minus_one.rs:15:14\n    |\n-13 |     for _ in 0..1+5 { }\n+15 |     for _ in 0..1+5 { }\n    |              ^^^^^^ help: use: `0..=5`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:16:14\n+  --> $DIR/range_plus_minus_one.rs:18:14\n    |\n-16 |     for _ in 1..1+1 { }\n+18 |     for _ in 1..1+1 { }\n    |              ^^^^^^ help: use: `1..=1`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:22:14\n+  --> $DIR/range_plus_minus_one.rs:24:14\n    |\n-22 |     for _ in 0..(1+f()) { }\n+24 |     for _ in 0..(1+f()) { }\n    |              ^^^^^^^^^^ help: use: `0..=f()`\n \n error: an exclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:26:13\n+  --> $DIR/range_plus_minus_one.rs:28:13\n    |\n-26 |     let _ = ..=11-1;\n+28 |     let _ = ..=11-1;\n    |             ^^^^^^^ help: use: `..11`\n    |\n-   = note: `-D range-minus-one` implied by `-D warnings`\n+   = note: `-D clippy::range-minus-one` implied by `-D warnings`\n \n error: an exclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:27:13\n+  --> $DIR/range_plus_minus_one.rs:29:13\n    |\n-27 |     let _ = ..=(11-1);\n+29 |     let _ = ..=(11-1);\n    |             ^^^^^^^^^ help: use: `..11`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:28:13\n+  --> $DIR/range_plus_minus_one.rs:30:13\n    |\n-28 |     let _ = (f()+1)..(f()+1);\n+30 |     let _ = (f()+1)..(f()+1);\n    |             ^^^^^^^^^^^^^^^^ help: use: `(f()+1)..=f()`\n \n error: aborting due to 7 previous errors"}, {"sha": "e4d490743adc4636984173e6e6826bff3b4218c2", "filename": "tests/ui/redundant_closure_call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fredundant_closure_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fredundant_closure_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: Closure called just once immediately after it was declared\n 15 |     i = closure();\n    |     ^^^^^^^^^^^^^\n    |\n-   = note: `-D redundant-closure-call` implied by `-D warnings`\n+   = note: `-D clippy::redundant-closure-call` implied by `-D warnings`\n \n error: Closure called just once immediately after it was declared\n   --> $DIR/redundant_closure_call.rs:18:2"}, {"sha": "457fe7d3c6cdc6804ec17cf2f9625905f7b89e1c", "filename": "tests/ui/redundant_field_names.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fredundant_field_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fredundant_field_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,45 +1,45 @@\n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:34:9\n+  --> $DIR/redundant_field_names.rs:36:9\n    |\n-34 |         gender: gender,\n+36 |         gender: gender,\n    |         ^^^^^^^^^^^^^^ help: replace it with: `gender`\n    |\n-   = note: `-D redundant-field-names` implied by `-D warnings`\n+   = note: `-D clippy::redundant-field-names` implied by `-D warnings`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:35:9\n+  --> $DIR/redundant_field_names.rs:37:9\n    |\n-35 |         age: age,\n+37 |         age: age,\n    |         ^^^^^^^^ help: replace it with: `age`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:56:25\n+  --> $DIR/redundant_field_names.rs:58:25\n    |\n-56 |     let _ = RangeFrom { start: start };\n+58 |     let _ = RangeFrom { start: start };\n    |                         ^^^^^^^^^^^^ help: replace it with: `start`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:57:23\n+  --> $DIR/redundant_field_names.rs:59:23\n    |\n-57 |     let _ = RangeTo { end: end };\n+59 |     let _ = RangeTo { end: end };\n    |                       ^^^^^^^^ help: replace it with: `end`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:58:21\n+  --> $DIR/redundant_field_names.rs:60:21\n    |\n-58 |     let _ = Range { start: start, end: end };\n+60 |     let _ = Range { start: start, end: end };\n    |                     ^^^^^^^^^^^^ help: replace it with: `start`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:58:35\n+  --> $DIR/redundant_field_names.rs:60:35\n    |\n-58 |     let _ = Range { start: start, end: end };\n+60 |     let _ = Range { start: start, end: end };\n    |                                   ^^^^^^^^ help: replace it with: `end`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:60:32\n+  --> $DIR/redundant_field_names.rs:62:32\n    |\n-60 |     let _ = RangeToInclusive { end: end };\n+62 |     let _ = RangeToInclusive { end: end };\n    |                                ^^^^^^^^ help: replace it with: `end`\n \n error: aborting due to 7 previous errors"}, {"sha": "13e0da98795006148ffb331a78cd88ee988a551c", "filename": "tests/ui/reference.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Freference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Freference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freference.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: immediately dereferencing a reference\n 19 |     let b = *&a;\n    |             ^^^ help: try this: `a`\n    |\n-   = note: `-D deref-addrof` implied by `-D warnings`\n+   = note: `-D clippy::deref-addrof` implied by `-D warnings`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:21:13"}, {"sha": "fd8fecb1139d27c63207b3f0a1d9d086bf252e88", "filename": "tests/ui/regex.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fregex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fregex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregex.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: trivial regex\n 16 |     let pipe_in_wrong_position = Regex::new(\"|\");\n    |                                             ^^^\n    |\n-   = note: `-D trivial-regex` implied by `-D warnings`\n+   = note: `-D clippy::trivial-regex` implied by `-D warnings`\n    = help: the regex is unlikely to be useful as it is\n \n error: trivial regex\n@@ -21,7 +21,7 @@ error: regex syntax error: invalid character class range, the start must be <= t\n 18 |     let wrong_char_ranice = Regex::new(\"[z-a]\");\n    |                                          ^^^\n    |\n-   = note: `-D invalid-regex` implied by `-D warnings`\n+   = note: `-D clippy::invalid-regex` implied by `-D warnings`\n \n error: regex syntax error: invalid character class range, the start must be <= the end\n   --> $DIR/regex.rs:19:37"}, {"sha": "fb9c9414c856001462c50e11634e6b9365a3fa6f", "filename": "tests/ui/replace_consts.stderr", "status": "modified", "additions": 73, "deletions": 73, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Freplace_consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Freplace_consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,217 +1,217 @@\n error: using `ATOMIC_BOOL_INIT`\n-  --> $DIR/replace_consts.rs:12:17\n+  --> $DIR/replace_consts.rs:14:17\n    |\n-12 |     { let foo = ATOMIC_BOOL_INIT; };\n+14 |     { let foo = ATOMIC_BOOL_INIT; };\n    |                 ^^^^^^^^^^^^^^^^ help: try this: `AtomicBool::new(false)`\n    |\n note: lint level defined here\n-  --> $DIR/replace_consts.rs:3:9\n+  --> $DIR/replace_consts.rs:5:9\n    |\n-3  | #![deny(replace_consts)]\n-   |         ^^^^^^^^^^^^^^\n+5  | #![deny(clippy::replace_consts)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `ATOMIC_ISIZE_INIT`\n-  --> $DIR/replace_consts.rs:13:17\n+  --> $DIR/replace_consts.rs:15:17\n    |\n-13 |     { let foo = ATOMIC_ISIZE_INIT; };\n+15 |     { let foo = ATOMIC_ISIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicIsize::new(0)`\n \n error: using `ATOMIC_I8_INIT`\n-  --> $DIR/replace_consts.rs:14:17\n+  --> $DIR/replace_consts.rs:16:17\n    |\n-14 |     { let foo = ATOMIC_I8_INIT; };\n+16 |     { let foo = ATOMIC_I8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicI8::new(0)`\n \n error: using `ATOMIC_I16_INIT`\n-  --> $DIR/replace_consts.rs:15:17\n+  --> $DIR/replace_consts.rs:17:17\n    |\n-15 |     { let foo = ATOMIC_I16_INIT; };\n+17 |     { let foo = ATOMIC_I16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI16::new(0)`\n \n error: using `ATOMIC_I32_INIT`\n-  --> $DIR/replace_consts.rs:16:17\n+  --> $DIR/replace_consts.rs:18:17\n    |\n-16 |     { let foo = ATOMIC_I32_INIT; };\n+18 |     { let foo = ATOMIC_I32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI32::new(0)`\n \n error: using `ATOMIC_I64_INIT`\n-  --> $DIR/replace_consts.rs:17:17\n+  --> $DIR/replace_consts.rs:19:17\n    |\n-17 |     { let foo = ATOMIC_I64_INIT; };\n+19 |     { let foo = ATOMIC_I64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI64::new(0)`\n \n error: using `ATOMIC_USIZE_INIT`\n-  --> $DIR/replace_consts.rs:18:17\n+  --> $DIR/replace_consts.rs:20:17\n    |\n-18 |     { let foo = ATOMIC_USIZE_INIT; };\n+20 |     { let foo = ATOMIC_USIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicUsize::new(0)`\n \n error: using `ATOMIC_U8_INIT`\n-  --> $DIR/replace_consts.rs:19:17\n+  --> $DIR/replace_consts.rs:21:17\n    |\n-19 |     { let foo = ATOMIC_U8_INIT; };\n+21 |     { let foo = ATOMIC_U8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicU8::new(0)`\n \n error: using `ATOMIC_U16_INIT`\n-  --> $DIR/replace_consts.rs:20:17\n+  --> $DIR/replace_consts.rs:22:17\n    |\n-20 |     { let foo = ATOMIC_U16_INIT; };\n+22 |     { let foo = ATOMIC_U16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU16::new(0)`\n \n error: using `ATOMIC_U32_INIT`\n-  --> $DIR/replace_consts.rs:21:17\n+  --> $DIR/replace_consts.rs:23:17\n    |\n-21 |     { let foo = ATOMIC_U32_INIT; };\n+23 |     { let foo = ATOMIC_U32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU32::new(0)`\n \n error: using `ATOMIC_U64_INIT`\n-  --> $DIR/replace_consts.rs:22:17\n+  --> $DIR/replace_consts.rs:24:17\n    |\n-22 |     { let foo = ATOMIC_U64_INIT; };\n+24 |     { let foo = ATOMIC_U64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU64::new(0)`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:24:17\n+  --> $DIR/replace_consts.rs:26:17\n    |\n-24 |     { let foo = std::isize::MIN; };\n+26 |     { let foo = std::isize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:25:17\n+  --> $DIR/replace_consts.rs:27:17\n    |\n-25 |     { let foo = std::i8::MIN; };\n+27 |     { let foo = std::i8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:26:17\n+  --> $DIR/replace_consts.rs:28:17\n    |\n-26 |     { let foo = std::i16::MIN; };\n+28 |     { let foo = std::i16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:27:17\n+  --> $DIR/replace_consts.rs:29:17\n    |\n-27 |     { let foo = std::i32::MIN; };\n+29 |     { let foo = std::i32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:28:17\n+  --> $DIR/replace_consts.rs:30:17\n    |\n-28 |     { let foo = std::i64::MIN; };\n+30 |     { let foo = std::i64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:29:17\n+  --> $DIR/replace_consts.rs:31:17\n    |\n-29 |     { let foo = std::i128::MIN; };\n+31 |     { let foo = std::i128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:30:17\n+  --> $DIR/replace_consts.rs:32:17\n    |\n-30 |     { let foo = std::usize::MIN; };\n+32 |     { let foo = std::usize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:31:17\n+  --> $DIR/replace_consts.rs:33:17\n    |\n-31 |     { let foo = std::u8::MIN; };\n+33 |     { let foo = std::u8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:32:17\n+  --> $DIR/replace_consts.rs:34:17\n    |\n-32 |     { let foo = std::u16::MIN; };\n+34 |     { let foo = std::u16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:33:17\n+  --> $DIR/replace_consts.rs:35:17\n    |\n-33 |     { let foo = std::u32::MIN; };\n+35 |     { let foo = std::u32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:34:17\n+  --> $DIR/replace_consts.rs:36:17\n    |\n-34 |     { let foo = std::u64::MIN; };\n+36 |     { let foo = std::u64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:35:17\n+  --> $DIR/replace_consts.rs:37:17\n    |\n-35 |     { let foo = std::u128::MIN; };\n+37 |     { let foo = std::u128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::min_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:37:17\n+  --> $DIR/replace_consts.rs:39:17\n    |\n-37 |     { let foo = std::isize::MAX; };\n+39 |     { let foo = std::isize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:38:17\n+  --> $DIR/replace_consts.rs:40:17\n    |\n-38 |     { let foo = std::i8::MAX; };\n+40 |     { let foo = std::i8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:39:17\n+  --> $DIR/replace_consts.rs:41:17\n    |\n-39 |     { let foo = std::i16::MAX; };\n+41 |     { let foo = std::i16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:40:17\n+  --> $DIR/replace_consts.rs:42:17\n    |\n-40 |     { let foo = std::i32::MAX; };\n+42 |     { let foo = std::i32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:41:17\n+  --> $DIR/replace_consts.rs:43:17\n    |\n-41 |     { let foo = std::i64::MAX; };\n+43 |     { let foo = std::i64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:42:17\n+  --> $DIR/replace_consts.rs:44:17\n    |\n-42 |     { let foo = std::i128::MAX; };\n+44 |     { let foo = std::i128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:43:17\n+  --> $DIR/replace_consts.rs:45:17\n    |\n-43 |     { let foo = std::usize::MAX; };\n+45 |     { let foo = std::usize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:44:17\n+  --> $DIR/replace_consts.rs:46:17\n    |\n-44 |     { let foo = std::u8::MAX; };\n+46 |     { let foo = std::u8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:45:17\n+  --> $DIR/replace_consts.rs:47:17\n    |\n-45 |     { let foo = std::u16::MAX; };\n+47 |     { let foo = std::u16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:46:17\n+  --> $DIR/replace_consts.rs:48:17\n    |\n-46 |     { let foo = std::u32::MAX; };\n+48 |     { let foo = std::u32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:47:17\n+  --> $DIR/replace_consts.rs:49:17\n    |\n-47 |     { let foo = std::u64::MAX; };\n+49 |     { let foo = std::u64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:48:17\n+  --> $DIR/replace_consts.rs:50:17\n    |\n-48 |     { let foo = std::u128::MAX; };\n+50 |     { let foo = std::u128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::max_value()`\n \n error: aborting due to 35 previous errors"}, {"sha": "5fba1a0d7ade4e1fe5fea48346f49a07d8974300", "filename": "tests/ui/result_map_unit_fn.stderr", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fresult_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fresult_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,194 +1,194 @@\n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:33:5\n+  --> $DIR/result_map_unit_fn.rs:35:5\n    |\n-33 |     x.field.map(do_nothing);\n+35 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n    |\n-   = note: `-D result-map-unit-fn` implied by `-D warnings`\n+   = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:35:5\n+  --> $DIR/result_map_unit_fn.rs:37:5\n    |\n-35 |     x.field.map(do_nothing);\n+37 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:37:5\n+  --> $DIR/result_map_unit_fn.rs:39:5\n    |\n-37 |     x.field.map(diverge);\n+39 |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:43:5\n+  --> $DIR/result_map_unit_fn.rs:45:5\n    |\n-43 |     x.field.map(|value| x.do_result_nothing(value + captured));\n+45 |     x.field.map(|value| x.do_result_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:45:5\n+  --> $DIR/result_map_unit_fn.rs:47:5\n    |\n-45 |     x.field.map(|value| { x.do_result_plus_one(value + captured); });\n+47 |     x.field.map(|value| { x.do_result_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:48:5\n+  --> $DIR/result_map_unit_fn.rs:50:5\n    |\n-48 |     x.field.map(|value| do_nothing(value + captured));\n+50 |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:50:5\n+  --> $DIR/result_map_unit_fn.rs:52:5\n    |\n-50 |     x.field.map(|value| { do_nothing(value + captured) });\n+52 |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:52:5\n+  --> $DIR/result_map_unit_fn.rs:54:5\n    |\n-52 |     x.field.map(|value| { do_nothing(value + captured); });\n+54 |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:54:5\n+  --> $DIR/result_map_unit_fn.rs:56:5\n    |\n-54 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+56 |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:57:5\n+  --> $DIR/result_map_unit_fn.rs:59:5\n    |\n-57 |     x.field.map(|value| diverge(value + captured));\n+59 |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:59:5\n+  --> $DIR/result_map_unit_fn.rs:61:5\n    |\n-59 |     x.field.map(|value| { diverge(value + captured) });\n+61 |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:61:5\n+  --> $DIR/result_map_unit_fn.rs:63:5\n    |\n-61 |     x.field.map(|value| { diverge(value + captured); });\n+63 |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:63:5\n+  --> $DIR/result_map_unit_fn.rs:65:5\n    |\n-63 |     x.field.map(|value| { { diverge(value + captured); } });\n+65 |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:68:5\n+  --> $DIR/result_map_unit_fn.rs:70:5\n    |\n-68 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+70 |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:70:5\n+  --> $DIR/result_map_unit_fn.rs:72:5\n    |\n-70 |     x.field.map(|value| { plus_one(value + captured); });\n+72 |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:72:5\n+  --> $DIR/result_map_unit_fn.rs:74:5\n    |\n-72 |     x.field.map(|value| { { plus_one(value + captured); } });\n+74 |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:75:5\n+  --> $DIR/result_map_unit_fn.rs:77:5\n    |\n-75 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+77 |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:78:5\n+  --> $DIR/result_map_unit_fn.rs:80:5\n    |\n-78 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+80 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:80:5\n+  --> $DIR/result_map_unit_fn.rs:82:5\n    |\n-80 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+82 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:84:5\n+  --> $DIR/result_map_unit_fn.rs:86:5\n    |\n-84 |        x.field.map(|value| {\n+86 |        x.field.map(|value| {\n    |   _____^\n    |  |_____|\n    | ||\n-85 | ||         do_nothing(value);\n-86 | ||         do_nothing(value)\n-87 | ||     });\n+87 | ||         do_nothing(value);\n+88 | ||         do_nothing(value)\n+89 | ||     });\n    | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n    | |_______|\n    | \n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:88:5\n+  --> $DIR/result_map_unit_fn.rs:90:5\n    |\n-88 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+90 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:92:5\n+  --> $DIR/result_map_unit_fn.rs:94:5\n    |\n-92 |     \"12\".parse::<i32>().map(diverge);\n+94 |     \"12\".parse::<i32>().map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(_) = \"12\".parse::<i32>() { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:98:5\n-   |\n-98 |     y.map(do_nothing);\n-   |     ^^^^^^^^^^^^^^^^^-\n-   |     |\n-   |     help: try this: `if let Ok(_y) = y { do_nothing(...) }`\n+   --> $DIR/result_map_unit_fn.rs:100:5\n+    |\n+100 |     y.map(do_nothing);\n+    |     ^^^^^^^^^^^^^^^^^-\n+    |     |\n+    |     help: try this: `if let Ok(_y) = y { do_nothing(...) }`\n \n error: aborting due to 23 previous errors\n "}, {"sha": "cce839a0d94c2570e626bc1302e8adc8abc56802", "filename": "tests/ui/serde.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fserde.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fserde.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fserde.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -8,7 +8,7 @@ error: you should not implement `visit_string` without also implementing `visit_\n 43 | |     }\n    | |_____^\n    |\n-   = note: `-D serde-api-misuse` implied by `-D warnings`\n+   = note: `-D clippy::serde-api-misuse` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "311177e25b4e28b4354797f0afd7ba68e96586ff", "filename": "tests/ui/shadow.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fshadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fshadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: `x` is shadowed by itself in `&mut x`\n 13 |     let x = &mut x;\n    |     ^^^^^^^^^^^^^^^\n    |\n-   = note: `-D shadow-same` implied by `-D warnings`\n+   = note: `-D clippy::shadow-same` implied by `-D warnings`\n note: previous binding is here\n   --> $DIR/shadow.rs:12:13\n    |\n@@ -41,7 +41,7 @@ error: `x` is shadowed by `{ *x + 1 }` which reuses the original value\n 16 |     let x = { *x + 1 };\n    |         ^\n    |\n-   = note: `-D shadow-reuse` implied by `-D warnings`\n+   = note: `-D clippy::shadow-reuse` implied by `-D warnings`\n note: initialization happens here\n   --> $DIR/shadow.rs:16:13\n    |\n@@ -110,7 +110,7 @@ error: `x` is shadowed by `y`\n 21 |     let x = y;\n    |         ^\n    |\n-   = note: `-D shadow-unrelated` implied by `-D warnings`\n+   = note: `-D clippy::shadow-unrelated` implied by `-D warnings`\n note: initialization happens here\n   --> $DIR/shadow.rs:21:13\n    |"}, {"sha": "bef497c33a063a8ece85484d72852247be6b5e12", "filename": "tests/ui/short_circuit_statement.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fshort_circuit_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fshort_circuit_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshort_circuit_statement.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: boolean short circuit operator in statement may be clearer using an expli\n 7 |     f() && g();\n   |     ^^^^^^^^^^^ help: replace it with: `if f() { g(); }`\n   |\n-  = note: `-D short-circuit-statement` implied by `-D warnings`\n+  = note: `-D clippy::short-circuit-statement` implied by `-D warnings`\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n  --> $DIR/short_circuit_statement.rs:8:5"}, {"sha": "783556127172c720846b208bf18756d79b7b6b59", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,123 +1,123 @@\n error: single-character string constant used as pattern\n- --> $DIR/single_char_pattern.rs:5:13\n+ --> $DIR/single_char_pattern.rs:7:13\n   |\n-5 |     x.split(\"x\");\n+7 |     x.split(\"x\");\n   |             ^^^ help: try using a char instead: `'x'`\n   |\n-  = note: `-D single-char-pattern` implied by `-D warnings`\n+  = note: `-D clippy::single-char-pattern` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:22:16\n+  --> $DIR/single_char_pattern.rs:24:16\n    |\n-22 |     x.contains(\"x\");\n+24 |     x.contains(\"x\");\n    |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:23:19\n+  --> $DIR/single_char_pattern.rs:25:19\n    |\n-23 |     x.starts_with(\"x\");\n+25 |     x.starts_with(\"x\");\n    |                   ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:24:17\n+  --> $DIR/single_char_pattern.rs:26:17\n    |\n-24 |     x.ends_with(\"x\");\n+26 |     x.ends_with(\"x\");\n    |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:25:12\n+  --> $DIR/single_char_pattern.rs:27:12\n    |\n-25 |     x.find(\"x\");\n+27 |     x.find(\"x\");\n    |            ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:26:13\n+  --> $DIR/single_char_pattern.rs:28:13\n    |\n-26 |     x.rfind(\"x\");\n+28 |     x.rfind(\"x\");\n    |             ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:27:14\n+  --> $DIR/single_char_pattern.rs:29:14\n    |\n-27 |     x.rsplit(\"x\");\n+29 |     x.rsplit(\"x\");\n    |              ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:28:24\n+  --> $DIR/single_char_pattern.rs:30:24\n    |\n-28 |     x.split_terminator(\"x\");\n+30 |     x.split_terminator(\"x\");\n    |                        ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:29:25\n+  --> $DIR/single_char_pattern.rs:31:25\n    |\n-29 |     x.rsplit_terminator(\"x\");\n+31 |     x.rsplit_terminator(\"x\");\n    |                         ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:30:17\n+  --> $DIR/single_char_pattern.rs:32:17\n    |\n-30 |     x.splitn(0, \"x\");\n+32 |     x.splitn(0, \"x\");\n    |                 ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:31:18\n+  --> $DIR/single_char_pattern.rs:33:18\n    |\n-31 |     x.rsplitn(0, \"x\");\n+33 |     x.rsplitn(0, \"x\");\n    |                  ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:32:15\n+  --> $DIR/single_char_pattern.rs:34:15\n    |\n-32 |     x.matches(\"x\");\n+34 |     x.matches(\"x\");\n    |               ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:33:16\n+  --> $DIR/single_char_pattern.rs:35:16\n    |\n-33 |     x.rmatches(\"x\");\n+35 |     x.rmatches(\"x\");\n    |                ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:34:21\n+  --> $DIR/single_char_pattern.rs:36:21\n    |\n-34 |     x.match_indices(\"x\");\n+36 |     x.match_indices(\"x\");\n    |                     ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:35:22\n+  --> $DIR/single_char_pattern.rs:37:22\n    |\n-35 |     x.rmatch_indices(\"x\");\n+37 |     x.rmatch_indices(\"x\");\n    |                      ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:36:25\n+  --> $DIR/single_char_pattern.rs:38:25\n    |\n-36 |     x.trim_left_matches(\"x\");\n+38 |     x.trim_left_matches(\"x\");\n    |                         ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:37:26\n+  --> $DIR/single_char_pattern.rs:39:26\n    |\n-37 |     x.trim_right_matches(\"x\");\n+39 |     x.trim_right_matches(\"x\");\n    |                          ^^^ help: try using a char instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:39:13\n+  --> $DIR/single_char_pattern.rs:41:13\n    |\n-39 |     x.split(\"/n\");\n+41 |     x.split(\"/n\");\n    |             ^^^^ help: try using a char instead: `'/n'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:44:31\n+  --> $DIR/single_char_pattern.rs:46:31\n    |\n-44 |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n+46 |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n    |                               ^^^ help: try using a char instead: `','`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:45:19\n+  --> $DIR/single_char_pattern.rs:47:19\n    |\n-45 |     x.starts_with(\"/x03\"); // issue #2996\n+47 |     x.starts_with(\"/x03\"); // issue #2996\n    |                   ^^^^^^ help: try using a char instead: `'/x03'`\n \n error: aborting due to 20 previous errors"}, {"sha": "20d8fed25fd28055c914233e7bc1d1ad7e1a0920", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,48 +1,48 @@\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:9:5\n+  --> $DIR/single_match.rs:11:5\n    |\n-9  | /     match x {\n-10 | |         Some(y) => { println!(\"{:?}\", y); }\n-11 | |         _ => ()\n-12 | |     };\n+11 | /     match x {\n+12 | |         Some(y) => { println!(\"{:?}\", y); }\n+13 | |         _ => ()\n+14 | |     };\n    | |_____^ help: try this: `if let Some(y) = x { println!(\"{:?}\", y); }`\n    |\n-   = note: `-D single-match` implied by `-D warnings`\n+   = note: `-D clippy::single-match` implied by `-D warnings`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:15:5\n+  --> $DIR/single_match.rs:17:5\n    |\n-15 | /     match z {\n-16 | |         (2...3, 7...9) => dummy(),\n-17 | |         _ => {}\n-18 | |     };\n+17 | /     match z {\n+18 | |         (2...3, 7...9) => dummy(),\n+19 | |         _ => {}\n+20 | |     };\n    | |_____^ help: try this: `if let (2...3, 7...9) = z { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:41:5\n+  --> $DIR/single_match.rs:43:5\n    |\n-41 | /     match x {\n-42 | |         Some(y) => dummy(),\n-43 | |         None => ()\n-44 | |     };\n+43 | /     match x {\n+44 | |         Some(y) => dummy(),\n+45 | |         None => ()\n+46 | |     };\n    | |_____^ help: try this: `if let Some(y) = x { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:46:5\n+  --> $DIR/single_match.rs:48:5\n    |\n-46 | /     match y {\n-47 | |         Ok(y) => dummy(),\n-48 | |         Err(..) => ()\n-49 | |     };\n+48 | /     match y {\n+49 | |         Ok(y) => dummy(),\n+50 | |         Err(..) => ()\n+51 | |     };\n    | |_____^ help: try this: `if let Ok(y) = y { dummy() }`\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:53:5\n+  --> $DIR/single_match.rs:55:5\n    |\n-53 | /     match c {\n-54 | |         Cow::Borrowed(..) => dummy(),\n-55 | |         Cow::Owned(..) => (),\n-56 | |     };\n+55 | /     match c {\n+56 | |         Cow::Borrowed(..) => dummy(),\n+57 | |         Cow::Owned(..) => (),\n+58 | |     };\n    | |_____^ help: try this: `if let Cow::Borrowed(..) = c { dummy() }`\n \n error: aborting due to 5 previous errors"}, {"sha": "b3fb444b5621de78e8d21ae114658e11991028d6", "filename": "tests/ui/starts_ends_with.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstarts_ends_with.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstarts_ends_with.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstarts_ends_with.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,77 +1,77 @@\n error: you should use the `starts_with` method\n- --> $DIR/starts_ends_with.rs:7:5\n+ --> $DIR/starts_ends_with.rs:9:5\n   |\n-7 |     \"\".chars().next() == Some(' ');\n+9 |     \"\".chars().next() == Some(' ');\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".starts_with(' ')`\n   |\n-  = note: `-D chars-next-cmp` implied by `-D warnings`\n+  = note: `-D clippy::chars-next-cmp` implied by `-D warnings`\n \n error: you should use the `starts_with` method\n- --> $DIR/starts_ends_with.rs:8:5\n-  |\n-8 |     Some(' ') != \"\".chars().next();\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".starts_with(' ')`\n+  --> $DIR/starts_ends_with.rs:10:5\n+   |\n+10 |     Some(' ') != \"\".chars().next();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".starts_with(' ')`\n \n error: you should use the `starts_with` method\n-  --> $DIR/starts_ends_with.rs:13:8\n+  --> $DIR/starts_ends_with.rs:15:8\n    |\n-13 |     if s.chars().next().unwrap() == 'f' { // s.starts_with('f')\n+15 |     if s.chars().next().unwrap() == 'f' { // s.starts_with('f')\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.starts_with('f')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:16:8\n+  --> $DIR/starts_ends_with.rs:18:8\n    |\n-16 |     if s.chars().next_back().unwrap() == 'o' { // s.ends_with('o')\n+18 |     if s.chars().next_back().unwrap() == 'o' { // s.ends_with('o')\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n    |\n-   = note: `-D chars-last-cmp` implied by `-D warnings`\n+   = note: `-D clippy::chars-last-cmp` implied by `-D warnings`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:19:8\n+  --> $DIR/starts_ends_with.rs:21:8\n    |\n-19 |     if s.chars().last().unwrap() == 'o' { // s.ends_with('o')\n+21 |     if s.chars().last().unwrap() == 'o' { // s.ends_with('o')\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n \n error: you should use the `starts_with` method\n-  --> $DIR/starts_ends_with.rs:22:8\n+  --> $DIR/starts_ends_with.rs:24:8\n    |\n-22 |     if s.chars().next().unwrap() != 'f' { // !s.starts_with('f')\n+24 |     if s.chars().next().unwrap() != 'f' { // !s.starts_with('f')\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.starts_with('f')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:25:8\n+  --> $DIR/starts_ends_with.rs:27:8\n    |\n-25 |     if s.chars().next_back().unwrap() != 'o' { // !s.ends_with('o')\n+27 |     if s.chars().next_back().unwrap() != 'o' { // !s.ends_with('o')\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:28:8\n+  --> $DIR/starts_ends_with.rs:30:8\n    |\n-28 |     if s.chars().last().unwrap() != 'o' { // !s.ends_with('o')\n+30 |     if s.chars().last().unwrap() != 'o' { // !s.ends_with('o')\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:35:5\n+  --> $DIR/starts_ends_with.rs:37:5\n    |\n-35 |     \"\".chars().last() == Some(' ');\n+37 |     \"\".chars().last() == Some(' ');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:36:5\n+  --> $DIR/starts_ends_with.rs:38:5\n    |\n-36 |     Some(' ') != \"\".chars().last();\n+38 |     Some(' ') != \"\".chars().last();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:37:5\n+  --> $DIR/starts_ends_with.rs:39:5\n    |\n-37 |     \"\".chars().next_back() == Some(' ');\n+39 |     \"\".chars().next_back() == Some(' ');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:38:5\n+  --> $DIR/starts_ends_with.rs:40:5\n    |\n-38 |     Some(' ') != \"\".chars().next_back();\n+40 |     Some(' ') != \"\".chars().next_back();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n error: aborting due to 12 previous errors"}, {"sha": "32e3482699c2cad8778163de6d0aa0dc7168ef68", "filename": "tests/ui/string_extend.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstring_extend.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstring_extend.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_extend.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: calling `.extend(_.chars())`\n 16 |     s.extend(abc.chars());\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.push_str(abc)`\n    |\n-   = note: `-D string-extend-chars` implied by `-D warnings`\n+   = note: `-D clippy::string-extend-chars` implied by `-D warnings`\n \n error: calling `.extend(_.chars())`\n   --> $DIR/string_extend.rs:19:5"}, {"sha": "258920e2652bff643803fcb4a950316105a11119", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,15 +4,15 @@ error: manual implementation of an assign operation\n 10 |         x = x + \".\";\n    |         ^^^^^^^^^^^ help: replace it with: `x += \".\"`\n    |\n-   = note: `-D assign-op-pattern` implied by `-D warnings`\n+   = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n \n error: you added something to a string. Consider using `String::push_str()` instead\n   --> $DIR/strings.rs:10:13\n    |\n 10 |         x = x + \".\";\n    |             ^^^^^^^\n    |\n-   = note: `-D string-add` implied by `-D warnings`\n+   = note: `-D clippy::string-add` implied by `-D warnings`\n \n error: you added something to a string. Consider using `String::push_str()` instead\n   --> $DIR/strings.rs:14:13\n@@ -26,7 +26,7 @@ error: you assigned the result of adding something to this string. Consider usin\n 24 |         x = x + \".\";\n    |         ^^^^^^^^^^^\n    |\n-   = note: `-D string-add-assign` implied by `-D warnings`\n+   = note: `-D clippy::string-add-assign` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n   --> $DIR/strings.rs:24:9\n@@ -58,7 +58,7 @@ error: calling `as_bytes()` on a string literal\n 50 |     let bs = \"hello there\".as_bytes();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"hello there\"`\n    |\n-   = note: `-D string-lit-as-bytes` implied by `-D warnings`\n+   = note: `-D clippy::string-lit-as-bytes` implied by `-D warnings`\n \n error: calling `as_bytes()` on a string literal\n   --> $DIR/strings.rs:55:18"}, {"sha": "3cc0be39567f0aa198e0449b79ffdb11eb8e57b9", "filename": "tests/ui/stutter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstutter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fstutter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstutter.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: item name starts with its containing module's name\n 8 |     pub fn foo_bar() {}\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D stutter` implied by `-D warnings`\n+  = note: `-D clippy::stutter` implied by `-D warnings`\n \n error: item name ends with its containing module's name\n  --> $DIR/stutter.rs:9:5"}, {"sha": "0f396c3a560215b45d972de91dd03d0f0d4e6b2d", "filename": "tests/ui/suspicious_arithmetic_impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,15 +4,15 @@ error: Suspicious use of binary operator in `Add` impl\n 14 |         Foo(self.0 - other.0)\n    |                    ^\n    |\n-   = note: `-D suspicious-arithmetic-impl` implied by `-D warnings`\n+   = note: `-D clippy::suspicious-arithmetic-impl` implied by `-D warnings`\n \n error: Suspicious use of binary operator in `AddAssign` impl\n   --> $DIR/suspicious_arithmetic_impl.rs:20:23\n    |\n 20 |         *self = *self - other;\n    |                       ^\n    |\n-   = note: #[deny(suspicious_op_assign_impl)] on by default\n+   = note: #[deny(clippy::suspicious_op_assign_impl)] on by default\n \n error: aborting due to 2 previous errors\n "}, {"sha": "67d4fd8a14bd29bce6f7a17da4911bce03d55a7e", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -6,7 +6,7 @@ error: this looks like you are swapping elements of `foo` manually\n 13 | |     foo[1] = temp;\n    | |_________________^ help: try: `foo.swap(0, 1)`\n    |\n-   = note: `-D manual-swap` implied by `-D warnings`\n+   = note: `-D clippy::manual-swap` implied by `-D warnings`\n \n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:20:5\n@@ -53,7 +53,7 @@ error: this looks like you are trying to swap `a` and `b`\n 45 | |     b = a;\n    | |_________^ help: try: `std::mem::swap(&mut a, &mut b)`\n    |\n-   = note: `-D almost-swapped` implied by `-D warnings`\n+   = note: `-D clippy::almost-swapped` implied by `-D warnings`\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `c.0` and `a`"}, {"sha": "38379d8bd20ca0f07cd88def4a7ce4e79f85f27a", "filename": "tests/ui/temporary_assignment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftemporary_assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftemporary_assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftemporary_assignment.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: assignment to temporary\n 29 |     Struct { field: 0 }.field = 1;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D temporary-assignment` implied by `-D warnings`\n+   = note: `-D clippy::temporary-assignment` implied by `-D warnings`\n \n error: assignment to temporary\n   --> $DIR/temporary_assignment.rs:30:5"}, {"sha": "f3fe563f2940127417b183eadb24482c0e604bae", "filename": "tests/ui/toplevel_ref_arg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftoplevel_ref_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftoplevel_ref_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: `ref` directly on a function argument is ignored. Consider using a refere\n 7 | fn the_answer(ref mut x: u8) {\n   |               ^^^^^^^^^\n   |\n-  = note: `-D toplevel-ref-arg` implied by `-D warnings`\n+  = note: `-D clippy::toplevel-ref-arg` implied by `-D warnings`\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:18:7"}, {"sha": "477f42c28f45941e99c3de581c6e98b060b50730", "filename": "tests/ui/trailing_zeros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftrailing_zeros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftrailing_zeros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_zeros.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: bit mask could be simplified with a call to `trailing_zeros`\n 7 |     let _ = #[clippy::author] (x & 0b1111 == 0);  // suggest trailing_zeros\n   |                               ^^^^^^^^^^^^^^^^^ help: try: `x.trailing_zeros() >= 4`\n   |\n-  = note: `-D verbose-bit-mask` implied by `-D warnings`\n+  = note: `-D clippy::verbose-bit-mask` implied by `-D warnings`\n \n error: bit mask could be simplified with a call to `trailing_zeros`\n  --> $DIR/trailing_zeros.rs:8:13"}, {"sha": "4340c16b97c1a56a620a0e8ef29d404adc2ea143", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: transmute from a type (`&'a T`) to itself\n 22 |     let _: &'a T = core::intrinsics::transmute(t);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D useless-transmute` implied by `-D warnings`\n+   = note: `-D clippy::useless-transmute` implied by `-D warnings`\n \n error: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:26:23\n@@ -30,7 +30,7 @@ error: transmute from a pointer type (`*const T`) to a reference type (`&T`)\n 35 |     let _: &T = std::mem::transmute(p);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*p`\n    |\n-   = note: `-D transmute-ptr-to-ref` implied by `-D warnings`\n+   = note: `-D clippy::transmute-ptr-to-ref` implied by `-D warnings`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:38:21\n@@ -134,7 +134,7 @@ error: transmute from a type (`*const Usize`) to the type that it points to (`Us\n 111 |         let _: Usize = core::intrinsics::transmute(int_const_ptr);\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n-    = note: `-D crosspointer-transmute` implied by `-D warnings`\n+    = note: `-D clippy::crosspointer-transmute` implied by `-D warnings`\n \n error: transmute from a type (`*mut Usize`) to the type that it points to (`Usize`)\n    --> $DIR/transmute.rs:113:24\n@@ -160,7 +160,7 @@ error: transmute from a `u32` to a `char`\n 123 |     let _: char = unsafe { std::mem::transmute(0_u32) };\n     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::char::from_u32(0_u32).unwrap()`\n     |\n-    = note: `-D transmute-int-to-char` implied by `-D warnings`\n+    = note: `-D clippy::transmute-int-to-char` implied by `-D warnings`\n \n error: transmute from a `i32` to a `char`\n    --> $DIR/transmute.rs:124:28\n@@ -174,15 +174,15 @@ error: transmute from a `u8` to a `bool`\n 129 |     let _: bool = unsafe { std::mem::transmute(0_u8) };\n     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `0_u8 != 0`\n     |\n-    = note: `-D transmute-int-to-bool` implied by `-D warnings`\n+    = note: `-D clippy::transmute-int-to-bool` implied by `-D warnings`\n \n error: transmute from a `u32` to a `f32`\n    --> $DIR/transmute.rs:134:27\n     |\n 134 |     let _: f32 = unsafe { std::mem::transmute(0_u32) };\n     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `f32::from_bits(0_u32)`\n     |\n-    = note: `-D transmute-int-to-float` implied by `-D warnings`\n+    = note: `-D clippy::transmute-int-to-float` implied by `-D warnings`\n \n error: transmute from a `i32` to a `f32`\n    --> $DIR/transmute.rs:135:27\n@@ -196,7 +196,7 @@ error: transmute from a `&[u8]` to a `&str`\n 139 |     let _: &str = unsafe { std::mem::transmute(b) };\n     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::str::from_utf8(b).unwrap()`\n     |\n-    = note: `-D transmute-bytes-to-str` implied by `-D warnings`\n+    = note: `-D clippy::transmute-bytes-to-str` implied by `-D warnings`\n \n error: transmute from a `&mut [u8]` to a `&mut str`\n    --> $DIR/transmute.rs:140:32\n@@ -210,7 +210,7 @@ error: transmute from a pointer to a pointer\n 172 |         let _: *const f32 = std::mem::transmute(ptr);\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ptr as *const f32`\n     |\n-    = note: `-D transmute-ptr-to-ptr` implied by `-D warnings`\n+    = note: `-D clippy::transmute-ptr-to-ptr` implied by `-D warnings`\n \n error: transmute from a pointer to a pointer\n    --> $DIR/transmute.rs:173:27"}, {"sha": "e86908655a8b2111e2d1a6d524b9e954a7be5b6d", "filename": "tests/ui/transmute_64bit.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftransmute_64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftransmute_64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_64bit.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,15 +1,15 @@\n error: transmute from a `f64` to a pointer\n- --> $DIR/transmute_64bit.rs:9:31\n-  |\n-9 |         let _: *const usize = std::mem::transmute(6.0f64);\n-  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = note: `-D wrong-transmute` implied by `-D warnings`\n+  --> $DIR/transmute_64bit.rs:11:31\n+   |\n+11 |         let _: *const usize = std::mem::transmute(6.0f64);\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::wrong-transmute` implied by `-D warnings`\n \n error: transmute from a `f64` to a pointer\n-  --> $DIR/transmute_64bit.rs:11:29\n+  --> $DIR/transmute_64bit.rs:13:29\n    |\n-11 |         let _: *mut usize = std::mem::transmute(6.0f64);\n+13 |         let _: *mut usize = std::mem::transmute(6.0f64);\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "2db627dd9b13fa812a86c592470f1c56bde32058", "filename": "tests/ui/trivially_copy_pass_by_ref.stderr", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,81 +1,81 @@\n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:40:11\n+  --> $DIR/trivially_copy_pass_by_ref.rs:42:11\n    |\n-40 | fn bad(x: &u32, y: &Foo, z: &Baz) {\n+42 | fn bad(x: &u32, y: &Foo, z: &Baz) {\n    |           ^^^^ help: consider passing by value instead: `u32`\n    |\n-   = note: `-D trivially-copy-pass-by-ref` implied by `-D warnings`\n+   = note: `-D clippy::trivially-copy-pass-by-ref` implied by `-D warnings`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:40:20\n+  --> $DIR/trivially_copy_pass_by_ref.rs:42:20\n    |\n-40 | fn bad(x: &u32, y: &Foo, z: &Baz) {\n+42 | fn bad(x: &u32, y: &Foo, z: &Baz) {\n    |                    ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:40:29\n+  --> $DIR/trivially_copy_pass_by_ref.rs:42:29\n    |\n-40 | fn bad(x: &u32, y: &Foo, z: &Baz) {\n+42 | fn bad(x: &u32, y: &Foo, z: &Baz) {\n    |                             ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:50:12\n+  --> $DIR/trivially_copy_pass_by_ref.rs:52:12\n    |\n-50 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n+52 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n    |            ^^^^^ help: consider passing by value instead: `self`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:50:22\n+  --> $DIR/trivially_copy_pass_by_ref.rs:52:22\n    |\n-50 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n+52 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n    |                      ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:50:31\n+  --> $DIR/trivially_copy_pass_by_ref.rs:52:31\n    |\n-50 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n+52 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n    |                               ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:50:40\n+  --> $DIR/trivially_copy_pass_by_ref.rs:52:40\n    |\n-50 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n+52 |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {\n    |                                        ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:53:16\n+  --> $DIR/trivially_copy_pass_by_ref.rs:55:16\n    |\n-53 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n+55 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n    |                ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:53:25\n+  --> $DIR/trivially_copy_pass_by_ref.rs:55:25\n    |\n-53 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n+55 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n    |                         ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:53:34\n+  --> $DIR/trivially_copy_pass_by_ref.rs:55:34\n    |\n-53 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n+55 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n    |                                  ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:67:16\n+  --> $DIR/trivially_copy_pass_by_ref.rs:69:16\n    |\n-67 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n+69 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n    |                ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:67:25\n+  --> $DIR/trivially_copy_pass_by_ref.rs:69:25\n    |\n-67 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n+69 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n    |                         ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/trivially_copy_pass_by_ref.rs:67:34\n+  --> $DIR/trivially_copy_pass_by_ref.rs:69:34\n    |\n-67 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n+69 |     fn bad2(x: &u32, y: &Foo, z: &Baz) {\n    |                                  ^^^^ help: consider passing by value instead: `Baz`\n \n error: aborting due to 13 previous errors"}, {"sha": "e2f75162867c67950b0515610c82badd05e87834", "filename": "tests/ui/types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: casting i32 to i64 may become silently lossy if types change\n 9 |     let c_i64 : i64 = c as i64;\n   |                       ^^^^^^^^ help: try: `i64::from(c)`\n   |\n-  = note: `-D cast-lossless` implied by `-D warnings`\n+  = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: aborting due to previous error\n "}, {"sha": "a06809b9bfd6d1a7fe3e033a39b6c689d38dee77", "filename": "tests/ui/types_fn_to_int.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftypes_fn_to_int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Ftypes_fn_to_int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes_fn_to_int.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: casting a `fn(usize) -> Foo {Foo::A}` to `i32` may truncate the function\n 12 |     let _y = x as i32;\n    |              ^^^^^^^^ help: if you need the address of the function, consider: `x as usize`\n    |\n-   = note: #[deny(fn_to_numeric_cast_with_truncation)] on by default\n+   = note: #[deny(clippy::fn_to_numeric_cast_with_truncation)] on by default\n \n error: casting a `fn(usize) -> Foo {Foo::A}` to `i32` may truncate the function address value.\n   --> $DIR/types_fn_to_int.rs:13:15\n@@ -36,7 +36,7 @@ error: casting a `fn() -> i32 {bar}` to `u64` is bad style.\n 17 |     let _y = bar as u64;\n    |              ^^^^^^^^^^ help: if you need the address of the function, consider: `bar as usize`\n    |\n-   = note: `-D fn-to-numeric-cast` implied by `-D warnings`\n+   = note: `-D clippy::fn-to-numeric-cast` implied by `-D warnings`\n \n error: casting a `fn(usize) -> Foo {Foo::A}` to `i128` is bad style.\n   --> $DIR/types_fn_to_int.rs:18:14"}, {"sha": "b0e567fc212b2b525ca8d643c07a23e6ee37300b", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: zero-width space detected\n 6 |     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D zero-width-space` implied by `-D warnings`\n+  = note: `-D clippy::zero-width-space` implied by `-D warnings`\n   = help: Consider replacing the string with:\n           \"\"Here >/u{200B}< is a ZWS, and /u{200B}another\"\"\n \n@@ -14,7 +14,7 @@ error: non-nfc unicode sequence detected\n 12 |     print!(\"\u0300a\u0300h?\");\n    |            ^^^^^\n    |\n-   = note: `-D unicode-not-nfc` implied by `-D warnings`\n+   = note: `-D clippy::unicode-not-nfc` implied by `-D warnings`\n    = help: Consider replacing the string with:\n            \"\"\u0300\u00e0h?\"\"\n \n@@ -24,7 +24,7 @@ error: literal non-ASCII character detected\n 18 |     print!(\"\u00dcben!\");\n    |            ^^^^^^^\n    |\n-   = note: `-D non-ascii-literal` implied by `-D warnings`\n+   = note: `-D clippy::non-ascii-literal` implied by `-D warnings`\n    = help: Consider replacing the string with:\n            \"\"/u{dc}ben!\"\"\n "}, {"sha": "e1845c0c0eabf1032e13fe3123b22bdd745f51df", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,67 +1,67 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:23:9\n+  --> $DIR/unit_arg.rs:25:9\n    |\n-23 |     foo({});\n+25 |     foo({});\n    |         ^^\n    |\n-   = note: `-D unit-arg` implied by `-D warnings`\n+   = note: `-D clippy::unit-arg` implied by `-D warnings`\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-23 |     foo(());\n+25 |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:24:9\n+  --> $DIR/unit_arg.rs:26:9\n    |\n-24 |     foo({ 1; });\n+26 |     foo({ 1; });\n    |         ^^^^^^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-24 |     foo(());\n+26 |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:25:9\n+  --> $DIR/unit_arg.rs:27:9\n    |\n-25 |     foo(foo(1));\n+27 |     foo(foo(1));\n    |         ^^^^^^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-25 |     foo(());\n+27 |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:26:9\n+  --> $DIR/unit_arg.rs:28:9\n    |\n-26 |       foo({\n+28 |       foo({\n    |  _________^\n-27 | |         foo(1);\n-28 | |         foo(2);\n-29 | |     });\n+29 | |         foo(1);\n+30 | |         foo(2);\n+31 | |     });\n    | |_____^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-26 |     foo(());\n+28 |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:30:10\n+  --> $DIR/unit_arg.rs:32:10\n    |\n-30 |     foo3({}, 2, 2);\n+32 |     foo3({}, 2, 2);\n    |          ^^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-30 |     foo3((), 2, 2);\n+32 |     foo3((), 2, 2);\n    |          ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:32:11\n+  --> $DIR/unit_arg.rs:34:11\n    |\n-32 |     b.bar({ 1; });\n+34 |     b.bar({ 1; });\n    |           ^^^^^^\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n-32 |     b.bar(());\n+34 |     b.bar(());\n    |           ^^\n \n error: aborting due to 6 previous errors"}, {"sha": "a85eb32841f2bc7e6b08a735f132541ef2e6b3c9", "filename": "tests/ui/unit_cmp.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funit_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funit_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_cmp.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: ==-comparison of unit values detected. This will always be true\n 16 |     if { true; } == { false; } {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D unit-cmp` implied by `-D warnings`\n+   = note: `-D clippy::unit-cmp` implied by `-D warnings`\n \n error: >-comparison of unit values detected. This will always be false\n   --> $DIR/unit_cmp.rs:19:8"}, {"sha": "b2985f84b04f7c50aedd2abef88960cf9c21f51a", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,84 +1,84 @@\n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:16:5\n+  --> $DIR/unnecessary_clone.rs:18:5\n    |\n-16 |     42.clone();\n+18 |     42.clone();\n    |     ^^^^^^^^^^ help: try removing the `clone` call: `42`\n    |\n-   = note: `-D clone-on-copy` implied by `-D warnings`\n+   = note: `-D clippy::clone-on-copy` implied by `-D warnings`\n \n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:20:5\n+  --> $DIR/unnecessary_clone.rs:22:5\n    |\n-20 |     (&42).clone();\n+22 |     (&42).clone();\n    |     ^^^^^^^^^^^^^ help: try dereferencing it: `*(&42)`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:30:5\n+  --> $DIR/unnecessary_clone.rs:32:5\n    |\n-30 |     rc.clone();\n+32 |     rc.clone();\n    |     ^^^^^^^^^^ help: try this: `Rc::<bool>::clone(&rc)`\n    |\n-   = note: `-D clone-on-ref-ptr` implied by `-D warnings`\n+   = note: `-D clippy::clone-on-ref-ptr` implied by `-D warnings`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:33:5\n+  --> $DIR/unnecessary_clone.rs:35:5\n    |\n-33 |     arc.clone();\n+35 |     arc.clone();\n    |     ^^^^^^^^^^^ help: try this: `Arc::<bool>::clone(&arc)`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:36:5\n+  --> $DIR/unnecessary_clone.rs:38:5\n    |\n-36 |     rcweak.clone();\n+38 |     rcweak.clone();\n    |     ^^^^^^^^^^^^^^ help: try this: `Weak::<bool>::clone(&rcweak)`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:39:5\n+  --> $DIR/unnecessary_clone.rs:41:5\n    |\n-39 |     arc_weak.clone();\n+41 |     arc_weak.clone();\n    |     ^^^^^^^^^^^^^^^^ help: try this: `Weak::<bool>::clone(&arc_weak)`\n \n error: using '.clone()' on a ref-counted pointer\n-  --> $DIR/unnecessary_clone.rs:43:29\n+  --> $DIR/unnecessary_clone.rs:45:29\n    |\n-43 |     let _: Arc<SomeTrait> = x.clone(); \n+45 |     let _: Arc<SomeTrait> = x.clone();\n    |                             ^^^^^^^^^ help: try this: `Arc::<SomeImpl>::clone(&x)`\n \n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:47:5\n+  --> $DIR/unnecessary_clone.rs:49:5\n    |\n-47 |     t.clone();\n+49 |     t.clone();\n    |     ^^^^^^^^^ help: try removing the `clone` call: `t`\n \n error: using `clone` on a `Copy` type\n-  --> $DIR/unnecessary_clone.rs:49:5\n+  --> $DIR/unnecessary_clone.rs:51:5\n    |\n-49 |     Some(t).clone();\n+51 |     Some(t).clone();\n    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call: `Some(t)`\n \n error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n-  --> $DIR/unnecessary_clone.rs:55:22\n+  --> $DIR/unnecessary_clone.rs:57:22\n    |\n-55 |     let z: &Vec<_> = y.clone();\n+57 |     let z: &Vec<_> = y.clone();\n    |                      ^^^^^^^^^\n    |\n-   = note: #[deny(clone_double_ref)] on by default\n+   = note: #[deny(clippy::clone_double_ref)] on by default\n help: try dereferencing it\n    |\n-55 |     let z: &Vec<_> = &(*y).clone();\n+57 |     let z: &Vec<_> = &(*y).clone();\n    |                      ^^^^^^^^^^^^^\n help: or try being explicit about what type to clone\n    |\n-55 |     let z: &Vec<_> = &std::vec::Vec<i32>::clone(y);\n+57 |     let z: &Vec<_> = &std::vec::Vec<i32>::clone(y);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n-  --> $DIR/unnecessary_clone.rs:62:27\n+  --> $DIR/unnecessary_clone.rs:64:27\n    |\n-62 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n+64 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D iter-cloned-collect` implied by `-D warnings`\n+   = note: `-D clippy::iter-cloned-collect` implied by `-D warnings`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "e72f671b67ec0d008a2ad64830bb1c1c7f83813f", "filename": "tests/ui/unnecessary_fold.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funnecessary_fold.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funnecessary_fold.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_fold.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this `.fold` can be written more succinctly using another method\n 4 |     let _ = (0..3).fold(false, |acc, x| acc || x > 2);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.any(|x| x > 2)`\n   |\n-  = note: `-D unnecessary-fold` implied by `-D warnings`\n+  = note: `-D clippy::unnecessary-fold` implied by `-D warnings`\n \n error: this `.fold` can be written more succinctly using another method\n  --> $DIR/unnecessary_fold.rs:6:19"}, {"sha": "d27ba26f3494ee928c87d065c219f9a358118d9c", "filename": "tests/ui/unnecessary_ref.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funnecessary_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funnecessary_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,14 +1,14 @@\n error: Creating a reference that is immediately dereferenced.\n-  --> $DIR/unnecessary_ref.rs:11:17\n+  --> $DIR/unnecessary_ref.rs:13:17\n    |\n-11 |     let inner = (&outer).inner;\n+13 |     let inner = (&outer).inner;\n    |                 ^^^^^^^^ help: try this: `outer.inner`\n    |\n note: lint level defined here\n-  --> $DIR/unnecessary_ref.rs:8:8\n+  --> $DIR/unnecessary_ref.rs:10:8\n    |\n-8  | #[deny(ref_in_deref)]\n-   |        ^^^^^^^^^^^^\n+10 | #[deny(clippy::ref_in_deref)]\n+   |        ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "40aa4f524feed9b3a04e0e659e9ab9eade6cede4", "filename": "tests/ui/unneeded_field_pattern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funneeded_field_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funneeded_field_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funneeded_field_pattern.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: You matched a field with a wildcard pattern. Consider using `..` instead\n 17 |         Foo { a: _, b: 0, .. } => {}\n    |               ^^^^\n    |\n-   = note: `-D unneeded-field-pattern` implied by `-D warnings`\n+   = note: `-D clippy::unneeded-field-pattern` implied by `-D warnings`\n    = help: Try with `Foo { b: 0, .. }`\n \n error: All the struct fields are matched to a wildcard pattern, consider using `..`."}, {"sha": "516b6ccc5958755d4c3b3bb2ebf8513e2f4d1601", "filename": "tests/ui/unreadable_literal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: long literal lacking separators\n 7 |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n   |                ^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n   |\n-  = note: `-D unreadable-literal` implied by `-D warnings`\n+  = note: `-D clippy::unreadable-literal` implied by `-D warnings`\n \n error: long literal lacking separators\n  --> $DIR/unreadable_literal.rs:7:30"}, {"sha": "2b014ca58631f196f0eecbb6418749d4aa0494a4", "filename": "tests/ui/unsafe_removed_from_name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funsafe_removed_from_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funsafe_removed_from_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe_removed_from_name.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: removed \"unsafe\" from the name of `UnsafeCell` in use as `TotallySafeCell\n 7 | use std::cell::{UnsafeCell as TotallySafeCell};\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D unsafe-removed-from-name` implied by `-D warnings`\n+  = note: `-D clippy::unsafe-removed-from-name` implied by `-D warnings`\n \n error: removed \"unsafe\" from the name of `UnsafeCell` in use as `TotallySafeCellAgain`\n  --> $DIR/unsafe_removed_from_name.rs:9:1"}, {"sha": "48a5751579ca734f9ab74b680d1df1e19b511ca4", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: handle written amount returned or use `Write::write_all` instead\n 11 |     try!(s.write(b\"test\"));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D unused-io-amount` implied by `-D warnings`\n+   = note: `-D clippy::unused-io-amount` implied by `-D warnings`\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: handle read amount returned or use `Read::read_exact` instead"}, {"sha": "d35ca41a1a1058d32cb1bb1b7ce97780bd61147a", "filename": "tests/ui/unused_labels.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funused_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funused_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_labels.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -6,7 +6,7 @@ error: unused label `'label`\n 10 | |     }\n    | |_____^\n    |\n-   = note: `-D unused-label` implied by `-D warnings`\n+   = note: `-D clippy::unused-label` implied by `-D warnings`\n \n error: unused label `'a`\n   --> $DIR/unused_labels.rs:21:5"}, {"sha": "4cad611c2a13e008ec9d0fc1c072cc4e7cb29904", "filename": "tests/ui/unused_lt.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funused_lt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funused_lt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_lt.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: this lifetime isn't used in the function definition\n 16 | fn unused_lt<'a>(x: u8) {\n    |              ^^\n    |\n-   = note: `-D extra-unused-lifetimes` implied by `-D warnings`\n+   = note: `-D clippy::extra-unused-lifetimes` implied by `-D warnings`\n \n error: this lifetime isn't used in the function definition\n   --> $DIR/unused_lt.rs:20:25"}, {"sha": "42c72090ca55e4718785c3335d5462c3edc2873f", "filename": "tests/ui/unwrap_or.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funwrap_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Funwrap_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap_or.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,16 +1,16 @@\n error: use of `unwrap_or` followed by a function call\n- --> $DIR/unwrap_or.rs:4:47\n+ --> $DIR/unwrap_or.rs:5:47\n   |\n-4 |     let s = Some(String::from(\"test string\")).unwrap_or(\"Fail\".to_string()).len();\n+5 |     let s = Some(String::from(\"test string\")).unwrap_or(\"Fail\".to_string()).len();\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| \"Fail\".to_string())`\n   |\n-  = note: `-D or-fun-call` implied by `-D warnings`\n+  = note: `-D clippy::or-fun-call` implied by `-D warnings`\n \n error: use of `unwrap_or` followed by a function call\n- --> $DIR/unwrap_or.rs:9:10\n-  |\n-9 |         .unwrap_or(\"Fail\".to_string())\n-  |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| \"Fail\".to_string())`\n+  --> $DIR/unwrap_or.rs:10:10\n+   |\n+10 |         .unwrap_or(\"Fail\".to_string())\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| \"Fail\".to_string())`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "cf673e166d8689edd6edfe63a0e6adb7a340ca86", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,123 +1,123 @@\n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:11:21\n+  --> $DIR/use_self.rs:13:21\n    |\n-11 |         fn new() -> Foo {\n+13 |         fn new() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n    |\n-   = note: `-D use-self` implied by `-D warnings`\n+   = note: `-D clippy::use-self` implied by `-D warnings`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:12:13\n+  --> $DIR/use_self.rs:14:13\n    |\n-12 |             Foo {}\n+14 |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:14:22\n+  --> $DIR/use_self.rs:16:22\n    |\n-14 |         fn test() -> Foo {\n+16 |         fn test() -> Foo {\n    |                      ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:15:13\n+  --> $DIR/use_self.rs:17:13\n    |\n-15 |             Foo::new()\n+17 |             Foo::new()\n    |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:20:25\n+  --> $DIR/use_self.rs:22:25\n    |\n-20 |         fn default() -> Foo {\n+22 |         fn default() -> Foo {\n    |                         ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:21:13\n+  --> $DIR/use_self.rs:23:13\n    |\n-21 |             Foo::new()\n+23 |             Foo::new()\n    |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:84:22\n+  --> $DIR/use_self.rs:86:22\n    |\n-84 |         fn refs(p1: &Bad) -> &Bad {\n+86 |         fn refs(p1: &Bad) -> &Bad {\n    |                      ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:84:31\n+  --> $DIR/use_self.rs:86:31\n    |\n-84 |         fn refs(p1: &Bad) -> &Bad {\n+86 |         fn refs(p1: &Bad) -> &Bad {\n    |                               ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:88:37\n+  --> $DIR/use_self.rs:90:37\n    |\n-88 |         fn ref_refs<'a>(p1: &'a &'a Bad) -> &'a &'a Bad {\n+90 |         fn ref_refs<'a>(p1: &'a &'a Bad) -> &'a &'a Bad {\n    |                                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:88:53\n+  --> $DIR/use_self.rs:90:53\n    |\n-88 |         fn ref_refs<'a>(p1: &'a &'a Bad) -> &'a &'a Bad {\n+90 |         fn ref_refs<'a>(p1: &'a &'a Bad) -> &'a &'a Bad {\n    |                                                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:92:30\n+  --> $DIR/use_self.rs:94:30\n    |\n-92 |         fn mut_refs(p1: &mut Bad) -> &mut Bad {\n+94 |         fn mut_refs(p1: &mut Bad) -> &mut Bad {\n    |                              ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:92:43\n+  --> $DIR/use_self.rs:94:43\n    |\n-92 |         fn mut_refs(p1: &mut Bad) -> &mut Bad {\n+94 |         fn mut_refs(p1: &mut Bad) -> &mut Bad {\n    |                                           ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:96:28\n+  --> $DIR/use_self.rs:98:28\n    |\n-96 |         fn nested(_p1: Box<Bad>, _p2: (&u8, &Bad)) {\n+98 |         fn nested(_p1: Box<Bad>, _p2: (&u8, &Bad)) {\n    |                            ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:96:46\n+  --> $DIR/use_self.rs:98:46\n    |\n-96 |         fn nested(_p1: Box<Bad>, _p2: (&u8, &Bad)) {\n+98 |         fn nested(_p1: Box<Bad>, _p2: (&u8, &Bad)) {\n    |                                              ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:99:20\n-   |\n-99 |         fn vals(_: Bad) -> Bad {\n-   |                    ^^^ help: use the applicable keyword: `Self`\n+   --> $DIR/use_self.rs:101:20\n+    |\n+101 |         fn vals(_: Bad) -> Bad {\n+    |                    ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:99:28\n-   |\n-99 |         fn vals(_: Bad) -> Bad {\n-   |                            ^^^ help: use the applicable keyword: `Self`\n+   --> $DIR/use_self.rs:101:28\n+    |\n+101 |         fn vals(_: Bad) -> Bad {\n+    |                            ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-   --> $DIR/use_self.rs:100:13\n+   --> $DIR/use_self.rs:102:13\n     |\n-100 |             Bad::default()\n+102 |             Bad::default()\n     |             ^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-   --> $DIR/use_self.rs:105:23\n+   --> $DIR/use_self.rs:107:23\n     |\n-105 |         type Output = Bad;\n+107 |         type Output = Bad;\n     |                       ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-   --> $DIR/use_self.rs:107:27\n+   --> $DIR/use_self.rs:109:27\n     |\n-107 |         fn mul(self, rhs: Bad) -> Bad {\n+109 |         fn mul(self, rhs: Bad) -> Bad {\n     |                           ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-   --> $DIR/use_self.rs:107:35\n+   --> $DIR/use_self.rs:109:35\n     |\n-107 |         fn mul(self, rhs: Bad) -> Bad {\n+109 |         fn mul(self, rhs: Bad) -> Bad {\n     |                                   ^^^ help: use the applicable keyword: `Self`\n \n error: aborting due to 20 previous errors"}, {"sha": "a1bb57a50a57501ea663f1f006fd7fe031b1a1ee", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: used binding `_foo` which is prefixed with an underscore. A leading under\n 17 |     _foo + 1\n    |     ^^^^\n    |\n-   = note: `-D used-underscore-binding` implied by `-D warnings`\n+   = note: `-D clippy::used-underscore-binding` implied by `-D warnings`\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n   --> $DIR/used_underscore_binding.rs:22:20"}, {"sha": "6247fb27a792850035726cab16dc43fa2b005bcc", "filename": "tests/ui/useless_asref.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fuseless_asref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fuseless_asref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_asref.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,73 +1,73 @@\n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:31:18\n+  --> $DIR/useless_asref.rs:33:18\n    |\n-31 |         foo_rstr(rstr.as_ref());\n+33 |         foo_rstr(rstr.as_ref());\n    |                  ^^^^^^^^^^^^^ help: try this: `rstr`\n    |\n note: lint level defined here\n-  --> $DIR/useless_asref.rs:1:9\n+  --> $DIR/useless_asref.rs:3:9\n    |\n-1  | #![deny(useless_asref)]\n-   |         ^^^^^^^^^^^^^\n+3  | #![deny(clippy::useless_asref)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:33:20\n+  --> $DIR/useless_asref.rs:35:20\n    |\n-33 |         foo_rslice(rslice.as_ref());\n+35 |         foo_rslice(rslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^ help: try this: `rslice`\n \n error: this call to `as_mut` does nothing\n-  --> $DIR/useless_asref.rs:37:21\n+  --> $DIR/useless_asref.rs:39:21\n    |\n-37 |         foo_mrslice(mrslice.as_mut());\n+39 |         foo_mrslice(mrslice.as_mut());\n    |                     ^^^^^^^^^^^^^^^^ help: try this: `mrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:39:20\n+  --> $DIR/useless_asref.rs:41:20\n    |\n-39 |         foo_rslice(mrslice.as_ref());\n+41 |         foo_rslice(mrslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^^ help: try this: `mrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:46:20\n+  --> $DIR/useless_asref.rs:48:20\n    |\n-46 |         foo_rslice(rrrrrslice.as_ref());\n+48 |         foo_rslice(rrrrrslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^^^^^ help: try this: `rrrrrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:48:18\n+  --> $DIR/useless_asref.rs:50:18\n    |\n-48 |         foo_rstr(rrrrrstr.as_ref());\n+50 |         foo_rstr(rrrrrstr.as_ref());\n    |                  ^^^^^^^^^^^^^^^^^ help: try this: `rrrrrstr`\n \n error: this call to `as_mut` does nothing\n-  --> $DIR/useless_asref.rs:53:21\n+  --> $DIR/useless_asref.rs:55:21\n    |\n-53 |         foo_mrslice(mrrrrrslice.as_mut());\n+55 |         foo_mrslice(mrrrrrslice.as_mut());\n    |                     ^^^^^^^^^^^^^^^^^^^^ help: try this: `mrrrrrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:55:20\n+  --> $DIR/useless_asref.rs:57:20\n    |\n-55 |         foo_rslice(mrrrrrslice.as_ref());\n+57 |         foo_rslice(mrrrrrslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^^^^^^ help: try this: `mrrrrrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:58:16\n+  --> $DIR/useless_asref.rs:60:16\n    |\n-58 |     foo_rrrrmr((&&&&MoreRef).as_ref());\n+60 |     foo_rrrrmr((&&&&MoreRef).as_ref());\n    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try this: `(&&&&MoreRef)`\n \n error: this call to `as_mut` does nothing\n-   --> $DIR/useless_asref.rs:104:13\n+   --> $DIR/useless_asref.rs:106:13\n     |\n-104 |     foo_mrt(mrt.as_mut());\n+106 |     foo_mrt(mrt.as_mut());\n     |             ^^^^^^^^^^^^ help: try this: `mrt`\n \n error: this call to `as_ref` does nothing\n-   --> $DIR/useless_asref.rs:106:12\n+   --> $DIR/useless_asref.rs:108:12\n     |\n-106 |     foo_rt(mrt.as_ref());\n+108 |     foo_rt(mrt.as_ref());\n     |            ^^^^^^^^^^^^ help: try this: `mrt`\n \n error: aborting due to 11 previous errors"}, {"sha": "59f1aaffb3f091ced4700634b2245094613637b6", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: useless lint attribute\n 5 | #[allow(dead_code, unused_extern_crates)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![allow(dead_code, unused_extern_crates)]`\n   |\n-  = note: `-D useless-attribute` implied by `-D warnings`\n+  = note: `-D clippy::useless-attribute` implied by `-D warnings`\n \n error: useless lint attribute\n  --> $DIR/useless_attribute.rs:6:1"}, {"sha": "b9541e58c77888c97b071932d1eb8621c46cc4b4", "filename": "tests/ui/vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fvec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fvec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: useless use of `vec!`\n 24 |     on_slice(&vec![]);\n    |              ^^^^^^^ help: you can use a slice directly: `&[]`\n    |\n-   = note: `-D useless-vec` implied by `-D warnings`\n+   = note: `-D clippy::useless-vec` implied by `-D warnings`\n \n error: useless use of `vec!`\n   --> $DIR/vec.rs:27:14"}, {"sha": "cc309e37946a7640ae18e27aa424a4c08acfd716", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -10,7 +10,7 @@ error: this loop could be written as a `while let` loop\n 15 | |     }\n    | |_____^ help: try: `while let Some(_x) = y { .. }`\n    |\n-   = note: `-D while-let-loop` implied by `-D warnings`\n+   = note: `-D clippy::while-let-loop` implied by `-D warnings`\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:22:5\n@@ -65,7 +65,7 @@ error: this loop could be written as a `for` loop\n 68 |     while let Option::Some(x) = iter.next() {\n    |                                 ^^^^^^^^^^^ help: try: `for x in iter { .. }`\n    |\n-   = note: `-D while-let-on-iterator` implied by `-D warnings`\n+   = note: `-D clippy::while-let-on-iterator` implied by `-D warnings`\n \n error: this loop could be written as a `for` loop\n   --> $DIR/while_loop.rs:73:25\n@@ -97,7 +97,7 @@ error: empty `loop {}` detected. You may want to either use `panic!()` or add `s\n 123 |         loop {}\n     |         ^^^^^^^\n     |\n-    = note: `-D empty-loop` implied by `-D warnings`\n+    = note: `-D clippy::empty-loop` implied by `-D warnings`\n \n error: this loop could be written as a `for` loop\n    --> $DIR/while_loop.rs:183:29"}, {"sha": "644f6f15b4230393b36b115aee4331a5d5b2a15d", "filename": "tests/ui/write_literal.stderr", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwrite_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwrite_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_literal.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,87 +1,87 @@\n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:27:79\n+  --> $DIR/write_literal.rs:29:79\n    |\n-27 |     writeln!(&mut v, \"{} of {:b} people know binary, the other half doesn't\", 1, 2);\n+29 |     writeln!(&mut v, \"{} of {:b} people know binary, the other half doesn't\", 1, 2);\n    |                                                                               ^\n    |\n-   = note: `-D write-literal` implied by `-D warnings`\n+   = note: `-D clippy::write-literal` implied by `-D warnings`\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:28:32\n+  --> $DIR/write_literal.rs:30:32\n    |\n-28 |     write!(&mut v, \"Hello {}\", \"world\");\n+30 |     write!(&mut v, \"Hello {}\", \"world\");\n    |                                ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:29:44\n+  --> $DIR/write_literal.rs:31:44\n    |\n-29 |     writeln!(&mut v, \"Hello {} {}\", world, \"world\");\n+31 |     writeln!(&mut v, \"Hello {} {}\", world, \"world\");\n    |                                            ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:30:34\n+  --> $DIR/write_literal.rs:32:34\n    |\n-30 |     writeln!(&mut v, \"Hello {}\", \"world\");\n+32 |     writeln!(&mut v, \"Hello {}\", \"world\");\n    |                                  ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:31:38\n+  --> $DIR/write_literal.rs:33:38\n    |\n-31 |     writeln!(&mut v, \"10 / 4 is {}\", 2.5);\n+33 |     writeln!(&mut v, \"10 / 4 is {}\", 2.5);\n    |                                      ^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:32:36\n+  --> $DIR/write_literal.rs:34:36\n    |\n-32 |     writeln!(&mut v, \"2 + 1 = {}\", 3);\n+34 |     writeln!(&mut v, \"2 + 1 = {}\", 3);\n    |                                    ^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:37:33\n+  --> $DIR/write_literal.rs:39:33\n    |\n-37 |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n+39 |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n    |                                 ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:37:42\n+  --> $DIR/write_literal.rs:39:42\n    |\n-37 |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n+39 |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n    |                                          ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:38:33\n+  --> $DIR/write_literal.rs:40:33\n    |\n-38 |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n+40 |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n    |                                 ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:38:42\n+  --> $DIR/write_literal.rs:40:42\n    |\n-38 |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n+40 |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n    |                                          ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:41:41\n+  --> $DIR/write_literal.rs:43:41\n    |\n-41 |     writeln!(&mut v, \"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n+43 |     writeln!(&mut v, \"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n    |                                         ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:41:54\n+  --> $DIR/write_literal.rs:43:54\n    |\n-41 |     writeln!(&mut v, \"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n+43 |     writeln!(&mut v, \"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n    |                                                      ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:42:41\n+  --> $DIR/write_literal.rs:44:41\n    |\n-42 |     writeln!(&mut v, \"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n+44 |     writeln!(&mut v, \"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n    |                                         ^^^^^^^\n \n error: literal with an empty format string\n-  --> $DIR/write_literal.rs:42:54\n+  --> $DIR/write_literal.rs:44:54\n    |\n-42 |     writeln!(&mut v, \"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n+44 |     writeln!(&mut v, \"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n    |                                                      ^^^^^^^\n \n error: aborting due to 14 previous errors"}, {"sha": "c8617b4939a0ab1d132bc8149189a08185ab485d", "filename": "tests/ui/write_with_newline.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwrite_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwrite_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,27 +1,27 @@\n error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n-  --> $DIR/write_with_newline.rs:10:5\n+  --> $DIR/write_with_newline.rs:12:5\n    |\n-10 |     write!(&mut v, \"Hello/n\");\n+12 |     write!(&mut v, \"Hello/n\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D write-with-newline` implied by `-D warnings`\n+   = note: `-D clippy::write-with-newline` implied by `-D warnings`\n \n error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n-  --> $DIR/write_with_newline.rs:11:5\n+  --> $DIR/write_with_newline.rs:13:5\n    |\n-11 |     write!(&mut v, \"Hello {}/n\", \"world\");\n+13 |     write!(&mut v, \"Hello {}/n\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n-  --> $DIR/write_with_newline.rs:12:5\n+  --> $DIR/write_with_newline.rs:14:5\n    |\n-12 |     write!(&mut v, \"Hello {} {}/n\", \"world\", \"#2\");\n+14 |     write!(&mut v, \"Hello {} {}/n\", \"world\", \"#2\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n-  --> $DIR/write_with_newline.rs:13:5\n+  --> $DIR/write_with_newline.rs:15:5\n    |\n-13 |     write!(&mut v, \"{}/n\", 1265);\n+15 |     write!(&mut v, \"{}/n\", 1265);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "ef1e9b3d36ea866bbd317c0b38020ef1fd386ff6", "filename": "tests/ui/writeln_empty_string.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwriteln_empty_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwriteln_empty_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwriteln_empty_string.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -1,15 +1,15 @@\n error: using `writeln!(&mut v, \"\")`\n- --> $DIR/writeln_empty_string.rs:9:5\n-  |\n-9 |     writeln!(&mut v, \"\");\n-  |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `writeln!(&mut v)`\n-  |\n-  = note: `-D writeln-empty-string` implied by `-D warnings`\n+  --> $DIR/writeln_empty_string.rs:11:5\n+   |\n+11 |     writeln!(&mut v, \"\");\n+   |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `writeln!(&mut v)`\n+   |\n+   = note: `-D clippy::writeln-empty-string` implied by `-D warnings`\n \n error: using `writeln!(&mut suggestion, \"\")`\n-  --> $DIR/writeln_empty_string.rs:12:5\n+  --> $DIR/writeln_empty_string.rs:14:5\n    |\n-12 |     writeln!(&mut suggestion, \"\");\n+14 |     writeln!(&mut suggestion, \"\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `writeln!(&mut suggestion)`\n \n error: aborting due to 2 previous errors"}, {"sha": "4a6e5e0ab226596acc0a9fcc68f273432000e15c", "filename": "tests/ui/wrong_self_convention.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwrong_self_convention.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fwrong_self_convention.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: methods called `from_*` usually take no self; consider choosing a less am\n 21 |     fn from_i32(self) {}\n    |                 ^^^^\n    |\n-   = note: `-D wrong-self-convention` implied by `-D warnings`\n+   = note: `-D clippy::wrong-self-convention` implied by `-D warnings`\n \n error: methods called `from_*` usually take no self; consider choosing a less ambiguous name\n   --> $DIR/wrong_self_convention.rs:27:21"}, {"sha": "a5e86883d2515910284589b96343a2c7c5d70a5b", "filename": "tests/ui/zero_div_zero.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fzero_div_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fzero_div_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_div_zero.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,15 +4,15 @@ error: equal expressions as operands to `/`\n 7 |     let nan = 0.0 / 0.0;\n   |               ^^^^^^^^^\n   |\n-  = note: #[deny(eq_op)] on by default\n+  = note: #[deny(clippy::eq_op)] on by default\n \n error: constant division of 0.0 with 0.0 will always result in NaN\n  --> $DIR/zero_div_zero.rs:7:15\n   |\n 7 |     let nan = 0.0 / 0.0;\n   |               ^^^^^^^^^\n   |\n-  = note: `-D zero-divided-by-zero` implied by `-D warnings`\n+  = note: `-D clippy::zero-divided-by-zero` implied by `-D warnings`\n   = help: Consider using `std::f64::NAN` if you would like a constant representing NaN\n \n error: equal expressions as operands to `/`"}, {"sha": "b5e279eaa3ad0053d9996bcd66f56ebf29ace8db", "filename": "tests/ui/zero_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fzero_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9af09c27490a9f5f264c4cf2a673272eb67b66d/tests%2Fui%2Fzero_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_ptr.stderr?ref=e9af09c27490a9f5f264c4cf2a673272eb67b66d", "patch": "@@ -4,7 +4,7 @@ error: `0 as *const _` detected. Consider using `ptr::null()`\n 6 |     let x = 0 as *const usize;\n   |             ^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D zero-ptr` implied by `-D warnings`\n+  = note: `-D clippy::zero-ptr` implied by `-D warnings`\n \n error: `0 as *mut _` detected. Consider using `ptr::null_mut()`\n  --> $DIR/zero_ptr.rs:7:13"}]}