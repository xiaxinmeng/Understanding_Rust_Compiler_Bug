{"sha": "3a1390cdca2678ad7d80ae4f5122bb70029a9815", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMTM5MGNkY2EyNjc4YWQ3ZDgwYWU0ZjUxMjJiYjcwMDI5YTk4MTU=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-09-17T21:10:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-17T21:10:51Z"}, "message": "Rollup merge of #64502 - RalfJung:miri-toolstate, r=pietroalbini\n\navoid duplicate issues for Miri build failures\n\nCurrently, when Miri regressed from test-pass to test-fail, we pen an issue -- and then when it regresses further from test-fail to build-fail, we open a *second* issue.\n\nThis changes the logic to avoid the redundant second issue for Miri.\n\nr? @pietroalbini @kennytm", "tree": {"sha": "6f06425e2b426dfc0691abb1c81a3441468af2ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f06425e2b426dfc0691abb1c81a3441468af2ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a1390cdca2678ad7d80ae4f5122bb70029a9815", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdgUvbCRBK7hj4Ov3rIwAAdHIIAFMsn/9aS7kP0jmaBa9rZkcg\nYk5lx0IWKnNo/GO8GTWbJTlMp2jB+HG8hzpkcutgVFuSZK7HfdKD2pk8rFlL1Il7\nROcQbw65/hydtkDaU052xcm92J+/9JLE9bgQQCdr2RXFuLRLxXVdpjInzFBGbpkY\ne2LjACMZvt7luKeZAjJ2Pkzz2IPAOp/w2V98fLZ4FYS2uk+r95XMahYER0xUACAG\nLJjUzzite2/NjKSpqEe2X7j81lo3Sp4h1Llqe8FOWiOVs8/jYDQBm7jf5e6+rRBN\nnOpRgG5V6fNeoA/iei+xxqJ4YTyAKDekmsQqBmspXskTkyjifmc9qWHDIApd6hw=\n=SwA9\n-----END PGP SIGNATURE-----\n", "payload": "tree 6f06425e2b426dfc0691abb1c81a3441468af2ff\nparent d6f2205ed8460da20f21e959e019d2bc6817cb5a\nparent 388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3\nauthor Tyler Mandry <tmandry@gmail.com> 1568754651 -0700\ncommitter GitHub <noreply@github.com> 1568754651 -0700\n\nRollup merge of #64502 - RalfJung:miri-toolstate, r=pietroalbini\n\navoid duplicate issues for Miri build failures\n\nCurrently, when Miri regressed from test-pass to test-fail, we pen an issue -- and then when it regresses further from test-fail to build-fail, we open a *second* issue.\n\nThis changes the logic to avoid the redundant second issue for Miri.\n\nr? @pietroalbini @kennytm\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a1390cdca2678ad7d80ae4f5122bb70029a9815", "html_url": "https://github.com/rust-lang/rust/commit/3a1390cdca2678ad7d80ae4f5122bb70029a9815", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a1390cdca2678ad7d80ae4f5122bb70029a9815/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6f2205ed8460da20f21e959e019d2bc6817cb5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f2205ed8460da20f21e959e019d2bc6817cb5a", "html_url": "https://github.com/rust-lang/rust/commit/d6f2205ed8460da20f21e959e019d2bc6817cb5a"}, {"sha": "388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3", "html_url": "https://github.com/rust-lang/rust/commit/388cd5d88eb6cbb9a2440d0a05fa0ea7d0b24dd3"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "7cf3cc7663b470f35dedeaaf07a118c94f9d1bcf", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3a1390cdca2678ad7d80ae4f5122bb70029a9815/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/3a1390cdca2678ad7d80ae4f5122bb70029a9815/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=3a1390cdca2678ad7d80ae4f5122bb70029a9815", "patch": "@@ -201,7 +201,9 @@ def update_latest(\n                 new = s.get(tool, old)\n                 status[os] = new\n                 maintainers = ' '.join('@'+name for name in MAINTAINERS[tool])\n-                if new > old: # comparing the strings, but they are ordered appropriately!\n+                # comparing the strings, but they are ordered appropriately:\n+                # \"test-pass\" > \"test-fail\" > \"build-fail\"\n+                if new > old:\n                     # things got fixed or at least the status quo improved\n                     changed = True\n                     message += '\ud83c\udf89 {} on {}: {} \u2192 {} (cc {}, @rust-lang/infra).\\n' \\\n@@ -213,10 +215,17 @@ def update_latest(\n                         .format(tool, os, old, new)\n                     message += '{} (cc {}, @rust-lang/infra).\\n' \\\n                         .format(title, maintainers)\n-                    # Most tools only create issues for build failures.\n-                    # Other failures can be spurious.\n-                    if new == 'build-fail' or (tool == 'miri' and new == 'test-fail'):\n-                        create_issue_for_status = new\n+                    # See if we need to create an issue.\n+                    if tool == 'miri':\n+                        # Create issue if tests used to pass before. Don't open a *second*\n+                        # issue when we regress from \"test-fail\" to \"build-fail\".\n+                        if old == 'test-pass':\n+                            create_issue_for_status = new\n+                    else:\n+                        # Create issue if things no longer build.\n+                        # (No issue for mere test failures to avoid spurious issues.)\n+                        if new == 'build-fail':\n+                            create_issue_for_status = new\n \n             if create_issue_for_status is not None:\n                 try:"}]}