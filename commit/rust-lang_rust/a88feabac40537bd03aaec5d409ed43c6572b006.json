{"sha": "a88feabac40537bd03aaec5d409ed43c6572b006", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4OGZlYWJhYzQwNTM3YmQwM2FhZWM1ZDQwOWVkNDNjNjU3MmIwMDY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-12-06T06:48:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-06T06:48:50Z"}, "message": "Rollup merge of #56332 - GuillaumeGomez:specifi-crate-search, r=QuietMisdreavus\n\n[rustdoc] Specific crate search\n\nReopening of #54706.\nFixes #54616.\n\n<img width=\"1440\" alt=\"screenshot 2018-11-29 at 01 29 11\" src=\"https://user-images.githubusercontent.com/3050060/49191372-979adf80-f376-11e8-963e-e4feb927c1da.png\">\n\nr? @QuietMisdreavus", "tree": {"sha": "4009e387d7d243c0747904cc5da33d2acc3e9cef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4009e387d7d243c0747904cc5da33d2acc3e9cef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a88feabac40537bd03aaec5d409ed43c6572b006", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcCMZTCRBK7hj4Ov3rIwAAdHIIAClPyMTa6PTVgUPKHloP7qZz\nk84M4da8+xyaYqHrF8XzDGfEFplXHlX2UerBx/n7CjRlgFhIeOzZWO4m0J94L+yh\nytP3uTGHPjZ1DwlekoruL7EZrljOnqKXr4MrkjVhfc+4HZ177ZlEGxNNE6s1uTeY\nXYFKBGflEcPEGcTOHO/8qrTGlGH/J9qyKL4LQXGQo05PKRT7y6Cdk1X0+Eh/eZJv\nykGMbgKL1NEz0v+Ou41eG2gPzZeoOf3l+oUIxYqtBTbi8o3ODAGTf6gZ3+1vSul5\nu5B1NFbInrbMh5LowA/VelU4jADRpQfc8pBPuFZ78kNQ+NlIIUvodRAFNkBdsJs=\n=m732\n-----END PGP SIGNATURE-----\n", "payload": "tree 4009e387d7d243c0747904cc5da33d2acc3e9cef\nparent 3073c7af5ff31672cfb42a20a7b88b91734e477c\nparent 3f253f53946398199277cfb6e3af7c05b5ed3b4f\nauthor Pietro Albini <pietro@pietroalbini.org> 1544078930 +0100\ncommitter GitHub <noreply@github.com> 1544078930 +0100\n\nRollup merge of #56332 - GuillaumeGomez:specifi-crate-search, r=QuietMisdreavus\n\n[rustdoc] Specific crate search\n\nReopening of #54706.\nFixes #54616.\n\n<img width=\"1440\" alt=\"screenshot 2018-11-29 at 01 29 11\" src=\"https://user-images.githubusercontent.com/3050060/49191372-979adf80-f376-11e8-963e-e4feb927c1da.png\">\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a88feabac40537bd03aaec5d409ed43c6572b006", "html_url": "https://github.com/rust-lang/rust/commit/a88feabac40537bd03aaec5d409ed43c6572b006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a88feabac40537bd03aaec5d409ed43c6572b006/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3073c7af5ff31672cfb42a20a7b88b91734e477c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3073c7af5ff31672cfb42a20a7b88b91734e477c", "html_url": "https://github.com/rust-lang/rust/commit/3073c7af5ff31672cfb42a20a7b88b91734e477c"}, {"sha": "3f253f53946398199277cfb6e3af7c05b5ed3b4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f253f53946398199277cfb6e3af7c05b5ed3b4f", "html_url": "https://github.com/rust-lang/rust/commit/3f253f53946398199277cfb6e3af7c05b5ed3b4f"}], "stats": {"total": 190, "additions": 164, "deletions": 26}, "files": [{"sha": "fa5d015e5b72dc494ea7469d0c36567a64013b1e", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -57,6 +57,9 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     {css_extension}\\\n     {favicon}\\\n     {in_header}\\\n+    <style type=\\\"text/css\\\">\\\n+    #crate-search{{background-image:url(\\\"{root_path}down-arrow{suffix}.svg\\\");}}\\\n+    </style>\\\n </head>\\\n <body class=\\\"rustdoc {css_class}\\\">\\\n     <!--[if lte IE 8]>\\\n@@ -81,11 +84,16 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     <nav class=\\\"sub\\\">\\\n         <form class=\\\"search-form js-only\\\">\\\n             <div class=\\\"search-container\\\">\\\n-                <input class=\\\"search-input\\\" name=\\\"search\\\" \\\n-                       autocomplete=\\\"off\\\" \\\n-                       spellcheck=\\\"false\\\" \\\n-                       placeholder=\\\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\\\" \\\n-                       type=\\\"search\\\">\\\n+                <div>\\\n+                    <select id=\\\"crate-search\\\">\\\n+                        <option value=\\\"All crates\\\">All crates</option>\\\n+                    </select>\\\n+                    <input class=\\\"search-input\\\" name=\\\"search\\\" \\\n+                           autocomplete=\\\"off\\\" \\\n+                           spellcheck=\\\"false\\\" \\\n+                           placeholder=\\\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\\\" \\\n+                           type=\\\"search\\\">\\\n+                </div>\\\n                 <a id=\\\"settings-menu\\\" href=\\\"{root_path}settings.html\\\">\\\n                     <img src=\\\"{root_path}wheel{suffix}.svg\\\" width=\\\"18\\\" alt=\\\"Change settings\\\">\\\n                 </a>\\"}, {"sha": "6158815fb9a51ec533785f8f1b03f235d2826335", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -793,6 +793,8 @@ fn write_shared(\n           static_files::BRUSH_SVG)?;\n     write(cx.dst.join(&format!(\"wheel{}.svg\", cx.shared.resource_suffix)),\n           static_files::WHEEL_SVG)?;\n+    write(cx.dst.join(&format!(\"down-arrow{}.svg\", cx.shared.resource_suffix)),\n+          static_files::DOWN_ARROW_SVG)?;\n     write_minify(cx.dst.join(&format!(\"light{}.css\", cx.shared.resource_suffix)),\n                  static_files::themes::LIGHT,\n                  options.enable_minification)?;\n@@ -1066,7 +1068,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n                                        &[(minifier::js::Keyword::Null, \"N\")]),\n                  &dst);\n     }\n-    try_err!(writeln!(&mut w, \"initSearch(searchIndex);\"), &dst);\n+    try_err!(writeln!(&mut w, \"initSearch(searchIndex);addSearchOptions(searchIndex);\"), &dst);\n \n     if options.enable_index_page {\n         if let Some(index_page) = options.index_page.clone() {"}, {"sha": "a2d9a37dde09129757b25280f9ca887ecfbe47cb", "filename": "src/librustdoc/html/static/down-arrow.svg", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fdown-arrow.svg", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fdown-arrow.svg", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fdown-arrow.svg?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -0,0 +1 @@\n+<?xml version=\"1.0\" ?><!DOCTYPE svg  PUBLIC '-//W3C//DTD SVG 1.1//EN'  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'><svg height=\"128px\" id=\"Layer_1\" style=\"enable-background:new 0 0 128 128;\" version=\"1.1\" viewBox=\"0 0 128 128\" width=\"128px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><line style=\"fill:none;stroke:#2F3435;stroke-width:12;stroke-linecap:square;stroke-miterlimit:10;\" x1=\"111\" x2=\"64\" y1=\"40.5\" y2=\"87.499\"/><line style=\"fill:none;stroke:#2F3435;stroke-width:12;stroke-linecap:square;stroke-miterlimit:10;\" x1=\"64\" x2=\"17\" y1=\"87.499\" y2=\"40.5\"/></g></svg>\n\\ No newline at end of file"}, {"sha": "1869969a5306956171b4026989941a5782b92913", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 83, "deletions": 16, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -218,12 +218,14 @@ if (!String.prototype.endsWith) {\n     //\n     // So I guess you could say things are getting pretty interoperable.\n     function getVirtualKey(ev) {\n-        if (\"key\" in ev && typeof ev.key != \"undefined\")\n+        if (\"key\" in ev && typeof ev.key != \"undefined\") {\n             return ev.key;\n+        }\n \n         var c = ev.charCode || ev.keyCode;\n-        if (c == 27)\n+        if (c == 27) {\n             return \"Escape\";\n+        }\n         return String.fromCharCode(c);\n     }\n \n@@ -431,12 +433,13 @@ if (!String.prototype.endsWith) {\n \n         /**\n          * Executes the query and builds an index of results\n-         * @param  {[Object]} query     [The user query]\n-         * @param  {[type]} searchWords [The list of search words to query\n-         *                               against]\n-         * @return {[type]}             [A search index of results]\n+         * @param  {[Object]} query      [The user query]\n+         * @param  {[type]} searchWords  [The list of search words to query\n+         *                                against]\n+         * @param  {[type]} filterCrates [Crate to search in if defined]\n+         * @return {[type]}              [A search index of results]\n          */\n-        function execQuery(query, searchWords) {\n+        function execQuery(query, searchWords, filterCrates) {\n             function itemTypeFromName(typename) {\n                 for (var i = 0; i < itemTypes.length; ++i) {\n                     if (itemTypes[i] === typename) {\n@@ -812,6 +815,9 @@ if (!String.prototype.endsWith) {\n             {\n                 val = extractGenerics(val.substr(1, val.length - 2));\n                 for (var i = 0; i < nSearchWords; ++i) {\n+                    if (filterCrates !== undefined && searchIndex[i].crate !== filterCrates) {\n+                        continue;\n+                    }\n                     var in_args = findArg(searchIndex[i], val, true);\n                     var returned = checkReturned(searchIndex[i], val, true);\n                     var ty = searchIndex[i];\n@@ -866,6 +872,9 @@ if (!String.prototype.endsWith) {\n                 var output = extractGenerics(parts[1]);\n \n                 for (var i = 0; i < nSearchWords; ++i) {\n+                    if (filterCrates !== undefined && searchIndex[i].crate !== filterCrates) {\n+                        continue;\n+                    }\n                     var type = searchIndex[i].type;\n                     var ty = searchIndex[i];\n                     if (!type) {\n@@ -937,11 +946,11 @@ if (!String.prototype.endsWith) {\n                 var contains = paths.slice(0, paths.length > 1 ? paths.length - 1 : 1);\n \n                 for (j = 0; j < nSearchWords; ++j) {\n-                    var lev_distance;\n                     var ty = searchIndex[j];\n-                    if (!ty) {\n+                    if (!ty || (filterCrates !== undefined && ty.crate !== filterCrates)) {\n                         continue;\n                     }\n+                    var lev_distance;\n                     var lev_add = 0;\n                     if (paths.length > 1) {\n                         var lev = checkPath(contains, paths[paths.length - 1], ty);\n@@ -1326,7 +1335,7 @@ if (!String.prototype.endsWith) {\n             return '<div>' + text + ' <div class=\"count\">(' + nbElems + ')</div></div>';\n         }\n \n-        function showResults(results) {\n+        function showResults(results, filterCrates) {\n             if (results['others'].length === 1 &&\n                 getCurrentValue('rustdoc-go-to-only-result') === \"true\") {\n                 var elem = document.createElement('a');\n@@ -1344,8 +1353,13 @@ if (!String.prototype.endsWith) {\n             var ret_in_args = addTab(results['in_args'], query, false);\n             var ret_returned = addTab(results['returned'], query, false);\n \n+            var filter = \"\";\n+            if (filterCrates !== undefined) {\n+                filter = \" (in <b>\" + filterCrates + \"</b> crate)\";\n+            }\n+\n             var output = '<h1>Results for ' + escape(query.query) +\n-                (query.type ? ' (type: ' + escape(query.type) + ')' : '') + '</h1>' +\n+                (query.type ? ' (type: ' + escape(query.type) + ')' : '') + filter + '</h1>' +\n                 '<div id=\"titles\">' +\n                 makeTabHeader(0, \"In Names\", ret_others[1]) +\n                 makeTabHeader(1, \"In Parameters\", ret_in_args[1]) +\n@@ -1374,7 +1388,7 @@ if (!String.prototype.endsWith) {\n             printTab(currentTab);\n         }\n \n-        function execSearch(query, searchWords) {\n+        function execSearch(query, searchWords, filterCrates) {\n             var queries = query.raw.split(\",\");\n             var results = {\n                 'in_args': [],\n@@ -1385,7 +1399,7 @@ if (!String.prototype.endsWith) {\n             for (var i = 0; i < queries.length; ++i) {\n                 var query = queries[i].trim();\n                 if (query.length !== 0) {\n-                    var tmp = execQuery(getQuery(query), searchWords);\n+                    var tmp = execQuery(getQuery(query), searchWords, filterCrates);\n \n                     results['in_args'].push(tmp['in_args']);\n                     results['returned'].push(tmp['returned']);\n@@ -1447,15 +1461,27 @@ if (!String.prototype.endsWith) {\n             }\n         }\n \n-        function search(e) {\n+        function getFilterCrates() {\n+            var elem = document.getElementById(\"crate-search\");\n+\n+            if (elem && elem.value !== \"All crates\" && rawSearchIndex.hasOwnProperty(elem.value)) {\n+                return elem.value;\n+            }\n+            return undefined;\n+        }\n+\n+        function search(e, forced) {\n             var params = getQueryStringParams();\n             var query = getQuery(search_input.value.trim());\n \n             if (e) {\n                 e.preventDefault();\n             }\n \n-            if (query.query.length === 0 || query.id === currentResults) {\n+            if (query.query.length === 0) {\n+                return;\n+            }\n+            if (forced !== true && query.id === currentResults) {\n                 if (query.query.length > 0) {\n                     putBackSearch(search_input);\n                 }\n@@ -1475,7 +1501,8 @@ if (!String.prototype.endsWith) {\n                 }\n             }\n \n-            showResults(execSearch(query, index));\n+            var filterCrates = getFilterCrates();\n+            showResults(execSearch(query, index, filterCrates), filterCrates);\n         }\n \n         function buildIndex(rawSearchIndex) {\n@@ -1575,6 +1602,13 @@ if (!String.prototype.endsWith) {\n             };\n             search_input.onpaste = search_input.onchange;\n \n+            var selectCrate = document.getElementById('crate-search');\n+            if (selectCrate) {\n+                selectCrate.onchange = function() {\n+                    search(undefined, true);\n+                };\n+            }\n+\n             // Push and pop states are used to add search results to the browser\n             // history.\n             if (browserSupportsHistoryApi()) {\n@@ -2323,6 +2357,39 @@ if (!String.prototype.endsWith) {\n     if (window.location.hash && window.location.hash.length > 0) {\n         expandSection(window.location.hash.replace(/^#/, ''));\n     }\n+\n+    function addSearchOptions(crates) {\n+        var elem = document.getElementById('crate-search');\n+\n+        if (!elem) {\n+            return;\n+        }\n+        var crates_text = [];\n+        for (var crate in crates) {\n+            if (crates.hasOwnProperty(crate)) {\n+                crates_text.push(crate);\n+            }\n+        }\n+        crates_text.sort(function(a, b) {\n+            var lower_a = a.toLowerCase();\n+            var lower_b = b.toLowerCase();\n+\n+            if (lower_a < lower_b) {\n+                return -1;\n+            } else if (lower_a > lower_b) {\n+                return 1;\n+            }\n+            return 0;\n+        });\n+        for (var i = 0; i < crates_text.length; ++i) {\n+            var option = document.createElement(\"option\");\n+            option.value = crates_text[i];\n+            option.innerText = crates_text[i];\n+            elem.appendChild(option);\n+        }\n+    }\n+\n+    window.addSearchOptions = addSearchOptions;\n }());\n \n // Sets the focus on the search bar at the top of the page"}, {"sha": "37d26a4cadc572b8d2b35c8721deb35078424a9c", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -620,27 +620,51 @@ a {\n .search-container {\n \tposition: relative;\n }\n+.search-container > div {\n+\tdisplay: inline-flex;\n+\twidth: calc(100% - 34px);\n+}\n+#crate-search {\n+\tmargin-top: 5px;\n+\tpadding: 6px;\n+\tpadding-right: 19px;\n+\tborder: 0;\n+\tborder-right: 0;\n+\tborder-radius: 4px 0 0 4px;\n+\toutline: none;\n+\tcursor: pointer;\n+\tborder-right: 1px solid;\n+\t-moz-appearance: none;\n+\t-webkit-appearance: none;\n+\t/* Removes default arrow from firefox */\n+\ttext-indent: 0.01px;\n+\ttext-overflow: \"\";\n+\tbackground-repeat: no-repeat;\n+\tbackground-color: transparent;\n+\tbackground-size: 16%;\n+\tbackground-position: calc(100% - 1px) 56%;\n+}\n .search-container > .top-button {\n \tposition: absolute;\n \tright: 0;\n \ttop: 10px;\n }\n .search-input {\n-\twidth: calc(100% - 34px);\n \t/* Override Normalize.css: we have margins and do\n \t not want to overflow - the `moz` attribute is necessary\n \t until Firefox 29, too early to drop at this point */\n \t-moz-box-sizing: border-box !important;\n \tbox-sizing: border-box !important;\n \toutline: none;\n \tborder: none;\n-\tborder-radius: 1px;\n+\tborder-radius: 0 1px 1px 0;\n \tmargin-top: 5px;\n \tpadding: 10px 16px;\n \tfont-size: 17px;\n \ttransition: border-color 300ms ease;\n \ttransition: border-radius 300ms ease-in-out;\n \ttransition: box-shadow 300ms ease-in-out;\n+\twidth: 100%;\n }\n \n .search-input:focus {"}, {"sha": "2cd1a8580890c44320934c700e905799097790a4", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -182,9 +182,15 @@ a.test-arrow {\n \tcolor: #999;\n }\n \n+#crate-search {\n+\tcolor: #111;\n+\tbackground-color: #f0f0f0;\n+\tborder-color: #000;\n+}\n+\n .search-input {\n \tcolor: #111;\n-\tbox-shadow: 0 0 0 1px #000, 0 0 0 2px transparent;\n+\tbox-shadow: 1px 0 0 1px #000, 0 0 0 2px transparent;\n \tbackground-color: #f0f0f0;\n }\n "}, {"sha": "4cf35f64d19a4463cb4d1cc071baf19fffd6d79f", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -182,9 +182,16 @@ a.test-arrow {\n \tcolor: #999;\n }\n \n+#crate-search {\n+\tcolor: #555;\n+\tbackground-color: white;\n+\tborder-color: #e0e0e0;\n+\tbox-shadow: 0px 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n+}\n+\n .search-input {\n \tcolor: #555;\n-\tbox-shadow: 0 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n+\tbox-shadow: 1px 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n \tbackground-color: white;\n }\n "}, {"sha": "a485facfac2dcb1fb30084aabfd4e44fda6d24ba", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -45,6 +45,9 @@ pub static BRUSH_SVG: &'static [u8] = include_bytes!(\"static/brush.svg\");\n /// The file contents of `wheel.svg`, the icon used for the settings button.\n pub static WHEEL_SVG: &'static [u8] = include_bytes!(\"static/wheel.svg\");\n \n+/// The file contents of `down-arrow.svg`, the icon used for the crate choice combobox.\n+pub static DOWN_ARROW_SVG: &'static [u8] = include_bytes!(\"static/down-arrow.svg\");\n+\n /// The contents of `COPYRIGHT.txt`, the license listing for files distributed with documentation\n /// output.\n pub static COPYRIGHT: &'static [u8] = include_bytes!(\"static/COPYRIGHT.txt\");"}, {"sha": "97ecc607f476419371a0150eaeaba284ab33ab69", "filename": "src/test/rustdoc-js/filter-crate.js", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Ftest%2Frustdoc-js%2Ffilter-crate.js", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Ftest%2Frustdoc-js%2Ffilter-crate.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Ffilter-crate.js?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// exact-check\n+\n+const QUERY = 'hashmap';\n+const FILTER_CRATE = 'core';\n+\n+const EXPECTED = {\n+    'others': [\n+    ],\n+};"}, {"sha": "f7c30df9f3ebb86d85c329188421abaed6422b5d", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/a88feabac40537bd03aaec5d409ed43c6572b006/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=a88feabac40537bd03aaec5d409ed43c6572b006", "patch": "@@ -259,6 +259,7 @@ function main(argv) {\n                                'exports.QUERY = QUERY;exports.EXPECTED = EXPECTED;');\n         const expected = loadedFile.EXPECTED;\n         const query = loadedFile.QUERY;\n+        const filter_crate = loadedFile.FILTER_CRATE;\n         const ignore_order = loadedFile.ignore_order;\n         const exact_check = loadedFile.exact_check;\n         const should_fail = loadedFile.should_fail;"}]}