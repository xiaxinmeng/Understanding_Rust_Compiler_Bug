{"sha": "8ae3384bf7208387237b67636b8632d4707d3ec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZTMzODRiZjcyMDgzODcyMzdiNjc2MzZiODYzMmQ0NzA3ZDNlYzE=", "commit": {"author": {"name": "Dr. Koutheir Attouchi", "email": "koutheir@gmail.com", "date": "2020-08-21T18:52:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-21T18:52:30Z"}, "message": "Added link to Microsoft's documentation of CFG", "tree": {"sha": "fbb4fcf528f00170516690c6e63c7d6ef0dce147", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbb4fcf528f00170516690c6e63c7d6ef0dce147"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ae3384bf7208387237b67636b8632d4707d3ec1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfQBfuCRBK7hj4Ov3rIwAAdHIIAALNKC6ELTbLp6pc/Xf5qhga\nRXX/QQPAigAJ2ACPGpPIo/MjpT4jqs8QKho/9EJjA4wJl5L8M55CJ5ccYESvVxlE\ncVWbV+REEq+YtOck+X2gVfMGlUXO6cpTUbXnUkmYropSvMs9VcPYUB7qrPtrCE0Q\niKYbb/befnGYlIYJu1hUIA2rSstYir/lH6Rshc2o3U6Gvx9asBVacL6L1PiIoTqo\np8SWctZ1HQCaM/UNy1icRfKz+c10ZoqqUqZ9DR7RYZ2/RBwhQVL5XORL7TSq4+y1\n3ErXsBK3P+L8bC9qcg5sGfs9CRovMAzPJxgHQPmyVxq5iJv/gHb0BgsRIY9GFN0=\n=Ys/e\n-----END PGP SIGNATURE-----\n", "payload": "tree fbb4fcf528f00170516690c6e63c7d6ef0dce147\nparent ec9657aec6e0d341e2e32f2ca3cc1d8a508a5415\nauthor Dr. Koutheir Attouchi <koutheir@gmail.com> 1598035950 -0400\ncommitter GitHub <noreply@github.com> 1598035950 -0400\n\nAdded link to Microsoft's documentation of CFG"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae3384bf7208387237b67636b8632d4707d3ec1", "html_url": "https://github.com/rust-lang/rust/commit/8ae3384bf7208387237b67636b8632d4707d3ec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ae3384bf7208387237b67636b8632d4707d3ec1/comments", "author": {"login": "koutheir", "id": 1145849, "node_id": "MDQ6VXNlcjExNDU4NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1145849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koutheir", "html_url": "https://github.com/koutheir", "followers_url": "https://api.github.com/users/koutheir/followers", "following_url": "https://api.github.com/users/koutheir/following{/other_user}", "gists_url": "https://api.github.com/users/koutheir/gists{/gist_id}", "starred_url": "https://api.github.com/users/koutheir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koutheir/subscriptions", "organizations_url": "https://api.github.com/users/koutheir/orgs", "repos_url": "https://api.github.com/users/koutheir/repos", "events_url": "https://api.github.com/users/koutheir/events{/privacy}", "received_events_url": "https://api.github.com/users/koutheir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec9657aec6e0d341e2e32f2ca3cc1d8a508a5415", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec9657aec6e0d341e2e32f2ca3cc1d8a508a5415", "html_url": "https://github.com/rust-lang/rust/commit/ec9657aec6e0d341e2e32f2ca3cc1d8a508a5415"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c43d91bf070edd97a878a9acdec8039fe954d4b1", "filename": "src/doc/unstable-book/src/compiler-flags/control-flow-guard.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ae3384bf7208387237b67636b8632d4707d3ec1/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcontrol-flow-guard.md", "raw_url": "https://github.com/rust-lang/rust/raw/8ae3384bf7208387237b67636b8632d4707d3ec1/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcontrol-flow-guard.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcontrol-flow-guard.md?ref=8ae3384bf7208387237b67636b8632d4707d3ec1", "patch": "@@ -6,7 +6,7 @@ The tracking issue for this feature is: [#68793](https://github.com/rust-lang/ru\n \n The rustc flag `-Z control-flow-guard` enables the Windows [Control Flow Guard](https://docs.microsoft.com/en-us/windows/win32/secbp/control-flow-guard) (CFG) platform security feature.\n \n-CFG is an exploit mitigation designed to enforce control-flow integrity for software running on supported Windows platforms (Windows 8.1 onwards). Specifically, CFG uses runtime checks to validate the target address of every indirect call/jump before allowing the call to complete. \n+CFG is an exploit mitigation designed to enforce control-flow integrity for software running on supported [Windows platforms (Windows 8.1 onwards)](https://docs.microsoft.com/en-us/windows/win32/secbp/control-flow-guard). Specifically, CFG uses runtime checks to validate the target address of every indirect call/jump before allowing the call to complete. \n \n During compilation, the compiler identifies all indirect calls/jumps and adds CFG checks. It also emits metadata containing the relative addresses of all address-taken functions. At runtime, if the binary is run on a CFG-aware operating system, the loader uses the CFG metadata to generate a bitmap of the address space and marks those addresses that contain valid targets. On each indirect call, the inserted check determines whether the target address is marked in this bitmap. If the target is not valid, the process is terminated.\n "}]}