{"sha": "4c8d75fd9b4e0abf1107647a48e3578907e2e00e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOGQ3NWZkOWI0ZTBhYmYxMTA3NjQ3YTQ4ZTM1Nzg5MDdlMmUwMGU=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-08-19T20:04:13Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-08-19T22:52:12Z"}, "message": "don't do deprecations yet", "tree": {"sha": "99bdf04169c57fe4c74c45a02e26b32fe1db1296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99bdf04169c57fe4c74c45a02e26b32fe1db1296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c8d75fd9b4e0abf1107647a48e3578907e2e00e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c8d75fd9b4e0abf1107647a48e3578907e2e00e", "html_url": "https://github.com/rust-lang/rust/commit/4c8d75fd9b4e0abf1107647a48e3578907e2e00e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c8d75fd9b4e0abf1107647a48e3578907e2e00e/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bbaa3c9ac64cbd324240d6aa079c5d4b0e7f82e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bbaa3c9ac64cbd324240d6aa079c5d4b0e7f82e", "html_url": "https://github.com/rust-lang/rust/commit/5bbaa3c9ac64cbd324240d6aa079c5d4b0e7f82e"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "aa71b7b132a1246a3b3739532b812e0649a3d30f", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c8d75fd9b4e0abf1107647a48e3578907e2e00e/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8d75fd9b4e0abf1107647a48e3578907e2e00e/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=4c8d75fd9b4e0abf1107647a48e3578907e2e00e", "patch": "@@ -270,15 +270,13 @@ impl<T: ?Sized> Arc<T> {\n     /// Get the number of weak references to this value.\n     #[inline]\n     #[unstable(feature = \"arc_counts\", reason = \"not clearly useful, and racy\", issue = \"27718\")]\n-    #[deprecated(since = \"1.4.0\", reason = \"not clearly useful, and racy\")]\n     pub fn weak_count(this: &Self) -> usize {\n         this.inner().weak.load(SeqCst) - 1\n     }\n \n     /// Get the number of strong references to this value.\n     #[inline]\n     #[unstable(feature = \"arc_counts\", reason = \"not clearly useful, and racy\", issue = \"27718\")]\n-    #[deprecated(since = \"1.4.0\", reason = \"not clearly useful, and racy\")]\n     pub fn strong_count(this: &Self) -> usize {\n         this.inner().strong.load(SeqCst)\n     }"}, {"sha": "9649d0f71a14d94aa717ab9b34b2285b1f0ba8b2", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c8d75fd9b4e0abf1107647a48e3578907e2e00e/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c8d75fd9b4e0abf1107647a48e3578907e2e00e/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=4c8d75fd9b4e0abf1107647a48e3578907e2e00e", "patch": "@@ -292,13 +292,11 @@ impl<T: ?Sized> Rc<T> {\n     /// Get the number of weak references to this value.\n     #[inline]\n     #[unstable(feature = \"rc_counts\", reason = \"not clearly useful\", issue = \"27718\")]\n-    #[deprecated(since = \"1.4.0\", reason = \"not clearly useful\")]\n     pub fn weak_count(this: &Self) -> usize { this.weak() - 1 }\n \n     /// Get the number of strong references to this value.\n     #[inline]\n     #[unstable(feature = \"rc_counts\", reason = \"not clearly useful\", issue = \"27718\")]\n-    #[deprecated(since = \"1.4.0\", reason = \"not clearly useful\")]\n     pub fn strong_count(this: &Self) -> usize { this.strong() }\n \n     /// Returns true if there are no other `Rc` or `Weak<T>` values that share\n@@ -317,7 +315,6 @@ impl<T: ?Sized> Rc<T> {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"rc_counts\", reason = \"uniqueness has unclear meaning\", issue = \"27718\")]\n-    #[deprecated(since = \"1.4.0\", reason = \"uniqueness has unclear meaning\")]\n     pub fn is_unique(this: &Self) -> bool {\n         Rc::weak_count(this) == 0 && Rc::strong_count(this) == 1\n     }"}]}