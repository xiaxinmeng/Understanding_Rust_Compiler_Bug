{"sha": "6792c6a8510640dcdf7b6e82dc9c35d39dbf4226", "node_id": "C_kwDOAAsO6NoAKDY3OTJjNmE4NTEwNjQwZGNkZjdiNmU4MmRjOWMzNWQzOWRiZjQyMjY", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-06T17:16:02Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-12T20:08:32Z"}, "message": "Sort candidate libraries by source path in error\n\nThis makes the error output deterministic and thus testable.", "tree": {"sha": "2099032b14d993e17eae6e98149e93eeac069dbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2099032b14d993e17eae6e98149e93eeac069dbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226", "html_url": "https://github.com/rust-lang/rust/commit/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9475e609b8458fff9e444934a6017d2e590642cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9475e609b8458fff9e444934a6017d2e590642cf", "html_url": "https://github.com/rust-lang/rust/commit/9475e609b8458fff9e444934a6017d2e590642cf"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f1ada3e1b754200ded43340cd9562a9fffadc264", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6792c6a8510640dcdf7b6e82dc9c35d39dbf4226/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=6792c6a8510640dcdf7b6e82dc9c35d39dbf4226", "patch": "@@ -910,9 +910,15 @@ impl CrateError {\n                     \"multiple matching crates for `{}`\",\n                     crate_name\n                 );\n+                let mut libraries: Vec<_> = libraries.into_values().collect();\n+                // Make ordering of candidates deterministic.\n+                // This has to `clone()` to work around lifetime restrictions with `sort_by_key()`.\n+                // `sort_by()` could be used instead, but this is in the error path,\n+                // so the performance shouldn't matter.\n+                libraries.sort_by_cached_key(|lib| lib.source.paths().next().unwrap().clone());\n                 let candidates = libraries\n                     .iter()\n-                    .filter_map(|(_, lib)| {\n+                    .filter_map(|lib| {\n                         let crate_name = &lib.metadata.get_root().name().as_str();\n                         match (&lib.source.dylib, &lib.source.rlib) {\n                             (Some((pd, _)), Some((pr, _))) => Some(format!("}]}