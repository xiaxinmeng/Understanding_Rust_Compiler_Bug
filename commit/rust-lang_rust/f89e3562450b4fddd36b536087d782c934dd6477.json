{"sha": "f89e3562450b4fddd36b536087d782c934dd6477", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OWUzNTYyNDUwYjRmZGRkMzZiNTM2MDg3ZDc4MmM5MzRkZDY0Nzc=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-04-28T23:20:46Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-05-17T20:13:09Z"}, "message": "Add two keywords specific to editions 2015 and 2018 respectively", "tree": {"sha": "704b91ef4a6a2e3ec3fa031e857b4e816a9a9d5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/704b91ef4a6a2e3ec3fa031e857b4e816a9a9d5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f89e3562450b4fddd36b536087d782c934dd6477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f89e3562450b4fddd36b536087d782c934dd6477", "html_url": "https://github.com/rust-lang/rust/commit/f89e3562450b4fddd36b536087d782c934dd6477", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f89e3562450b4fddd36b536087d782c934dd6477/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "640884bad0199e80a7701469a3d0eae0977b5998", "url": "https://api.github.com/repos/rust-lang/rust/commits/640884bad0199e80a7701469a3d0eae0977b5998", "html_url": "https://github.com/rust-lang/rust/commit/640884bad0199e80a7701469a3d0eae0977b5998"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "cbafad253b8f5a3a69a1793002b9ad43ee633931", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f89e3562450b4fddd36b536087d782c934dd6477/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f89e3562450b4fddd36b536087d782c934dd6477/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=f89e3562450b4fddd36b536087d782c934dd6477", "patch": "@@ -15,13 +15,14 @@ pub use self::Lit::*;\n pub use self::Token::*;\n \n use ast::{self};\n+use edition::Edition;\n use parse::ParseSess;\n use print::pprust;\n use ptr::P;\n use serialize::{Decodable, Decoder, Encodable, Encoder};\n use symbol::keywords;\n use syntax::parse::parse_stream_from_source_str;\n-use syntax_pos::{self, Span, FileName};\n+use syntax_pos::{self, hygiene, Span, FileName};\n use tokenstream::{TokenStream, TokenTree};\n use tokenstream;\n \n@@ -168,7 +169,11 @@ pub fn is_used_keyword(id: ast::Ident) -> bool {\n \n /// Returns `true` if the token is a keyword reserved for possible future use.\n pub fn is_unused_keyword(id: ast::Ident) -> bool {\n-    id.name >= keywords::Abstract.name() && id.name <= keywords::Yield.name()\n+    let edition = || id.span.ctxt().outer().expn_info().map_or_else(|| hygiene::default_edition(),\n+                                                                    |einfo| einfo.callee.edition);\n+    id.name >= keywords::Abstract.name() && id.name <= keywords::Yield.name() ||\n+    id.name == keywords::Proc.name() && edition() == Edition::Edition2015 ||\n+    id.name == keywords::Async.name() && edition() == Edition::Edition2018\n }\n \n /// Returns `true` if the token is either a special identifier or a keyword."}, {"sha": "b3687d2962ce8399a03195baffa589f611e3823e", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f89e3562450b4fddd36b536087d782c934dd6477/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f89e3562450b4fddd36b536087d782c934dd6477/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=f89e3562450b4fddd36b536087d782c934dd6477", "patch": "@@ -383,16 +383,20 @@ declare_keywords! {\n     (53, Virtual,            \"virtual\")\n     (54, Yield,              \"yield\")\n \n+    // Edition-specific keywords reserved for future use.\n+    (55, Async,              \"async\") // >= 2018 Edition Only\n+    (56, Proc,               \"proc\") // <= 2015 Edition Only\n+\n     // Special lifetime names\n-    (55, UnderscoreLifetime, \"'_\")\n-    (56, StaticLifetime,     \"'static\")\n+    (57, UnderscoreLifetime, \"'_\")\n+    (58, StaticLifetime,     \"'static\")\n \n     // Weak keywords, have special meaning only in specific contexts.\n-    (57, Auto,               \"auto\")\n-    (58, Catch,              \"catch\")\n-    (59, Default,            \"default\")\n-    (60, Dyn,                \"dyn\")\n-    (61, Union,              \"union\")\n+    (59, Auto,               \"auto\")\n+    (60, Catch,              \"catch\")\n+    (61, Default,            \"default\")\n+    (62, Dyn,                \"dyn\")\n+    (63, Union,              \"union\")\n }\n \n // If an interner exists, return it. Otherwise, prepare a fresh one."}]}