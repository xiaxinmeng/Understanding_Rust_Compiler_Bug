{"sha": "5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNDRlMTBmYjdlOWQxMjI2YWYxMWRmMjZlZTVmYTc4YjhkNTRjYzM=", "commit": {"author": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-12T22:42:44Z"}, "committer": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-29T08:29:44Z"}, "message": "[LLVM-3.9] Preserve certain functions when internalizing\n\nThis makes sure to still use the old way for older LLVM versions.", "tree": {"sha": "bf10e8d4f50a9278d6e6b84a8e52575f02d4f02e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf10e8d4f50a9278d6e6b84a8e52575f02d4f02e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3", "html_url": "https://github.com/rust-lang/rust/commit/5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3/comments", "author": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ed5db8d351038622b180be917ef2e2e3f0727b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed5db8d351038622b180be917ef2e2e3f0727b2", "html_url": "https://github.com/rust-lang/rust/commit/6ed5db8d351038622b180be917ef2e2e3f0727b2"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "64edc79a86a3b9531b34046594a2fc9e7743fa56", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=5b44e10fb7e9d1226af11df26ee5fa78b8d54cc3", "patch": "@@ -358,9 +358,24 @@ LLVMRustAddAlwaysInlinePass(LLVMPassManagerBuilderRef PMB, bool AddLifetimes) {\n \n extern \"C\" void\n LLVMRustRunRestrictionPass(LLVMModuleRef M, char **symbols, size_t len) {\n-    PassManager passes;\n+    llvm::legacy::PassManager passes;\n+\n+#if LLVM_VERSION_MINOR <= 8\n     ArrayRef<const char*> ref(symbols, len);\n     passes.add(llvm::createInternalizePass(ref));\n+#else\n+    auto PreserveFunctions = [=](const GlobalValue &GV) {\n+        for (size_t i=0; i<len; i++) {\n+            if (GV.getName() == symbols[i]) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    };\n+\n+    passes.add(llvm::createInternalizePass(PreserveFunctions));\n+#endif\n+\n     passes.run(*unwrap(M));\n }\n "}]}