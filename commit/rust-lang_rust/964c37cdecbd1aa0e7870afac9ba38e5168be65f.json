{"sha": "964c37cdecbd1aa0e7870afac9ba38e5168be65f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NGMzN2NkZWNiZDFhYTBlNzg3MGFmYWM5YmEzOGU1MTY4YmU2NWY=", "commit": {"author": {"name": "Baoshan", "email": "pangbw@gmail.com", "date": "2019-08-29T17:16:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-29T17:16:22Z"}, "message": "Merge pull request #10 from Wind-River/bpang-runtest\n\nrun test for vxWorks in 'pure' static linking mode by default;", "tree": {"sha": "1813e5dd1e4efd5806f401968b4ed34b8c9c76ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1813e5dd1e4efd5806f401968b4ed34b8c9c76ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/964c37cdecbd1aa0e7870afac9ba38e5168be65f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdaAhmCRBK7hj4Ov3rIwAAdHIIAE6Gseq2uvy1AHxQFc8m8KD+\nnqFE81h5edPC40/FBfyGLcwSsh6z99UNM8o/cmK8oM0de22iUlf4Ku6VitfPxD2l\nsoE8bl2Qlre2AeVYKgV1WZity4MB4tPclWk2ZguRKMaNMVB+A1pRxER3QR6KDKXE\nlk134vfIu+PYsiFS+LJ/85KI+kYyW05zE7znivpXwr8A936fsyTYQEbiqfwrP/Ck\nhZaLTPNV1IQ09/Xcv2N3/4kjCA022F+L532wanyH+/BCq7ItSK661eceHB3//vet\nTmkDZAkThth+W/qUHuQzww+5ApcxdtzqX1pokt36SKmf508gpoR+kKhlHBshpQg=\n=wdkJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 1813e5dd1e4efd5806f401968b4ed34b8c9c76ac\nparent 76f17219c71973fd4a58f2f8020eec4d8f5dcd11\nparent 043c19c69c0beac3696cb82d44476ba4298a6b07\nauthor Baoshan <pangbw@gmail.com> 1567098982 -0700\ncommitter GitHub <noreply@github.com> 1567098982 -0700\n\nMerge pull request #10 from Wind-River/bpang-runtest\n\nrun test for vxWorks in 'pure' static linking mode by default;"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/964c37cdecbd1aa0e7870afac9ba38e5168be65f", "html_url": "https://github.com/rust-lang/rust/commit/964c37cdecbd1aa0e7870afac9ba38e5168be65f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/964c37cdecbd1aa0e7870afac9ba38e5168be65f/comments", "author": {"login": "BaoshanPang", "id": 3380860, "node_id": "MDQ6VXNlcjMzODA4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3380860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaoshanPang", "html_url": "https://github.com/BaoshanPang", "followers_url": "https://api.github.com/users/BaoshanPang/followers", "following_url": "https://api.github.com/users/BaoshanPang/following{/other_user}", "gists_url": "https://api.github.com/users/BaoshanPang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaoshanPang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaoshanPang/subscriptions", "organizations_url": "https://api.github.com/users/BaoshanPang/orgs", "repos_url": "https://api.github.com/users/BaoshanPang/repos", "events_url": "https://api.github.com/users/BaoshanPang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaoshanPang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76f17219c71973fd4a58f2f8020eec4d8f5dcd11", "url": "https://api.github.com/repos/rust-lang/rust/commits/76f17219c71973fd4a58f2f8020eec4d8f5dcd11", "html_url": "https://github.com/rust-lang/rust/commit/76f17219c71973fd4a58f2f8020eec4d8f5dcd11"}, {"sha": "043c19c69c0beac3696cb82d44476ba4298a6b07", "url": "https://api.github.com/repos/rust-lang/rust/commits/043c19c69c0beac3696cb82d44476ba4298a6b07", "html_url": "https://github.com/rust-lang/rust/commit/043c19c69c0beac3696cb82d44476ba4298a6b07"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "0bc77c6c502dc9afeeafbe0a19ce707ecacec7c5", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/964c37cdecbd1aa0e7870afac9ba38e5168be65f/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/964c37cdecbd1aa0e7870afac9ba38e5168be65f/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=964c37cdecbd1aa0e7870afac9ba38e5168be65f", "patch": "@@ -1725,14 +1725,25 @@ impl<'test> TestCx<'test> {\n         }\n     }\n \n-    fn use_dynamic_linking(&self) -> bool {\n+    fn is_vxworks_pure_static(&self) -> bool {\n+        if self.config.target.contains(\"vxworks\") {\n+            match env::var(\"RUST_TEST_DYLINK\") {\n+                Ok(s) => s != \"1\",\n+                _ => true\n+            }\n+        } else {\n+            false\n+        }\n+    }\n+\n+    fn is_vxworks_pure_dynamic(&self) -> bool {\n         if self.config.target.contains(\"vxworks\") {\n             match env::var(\"RUST_TEST_DYLINK\") {\n                 Ok(s) => s == \"1\",\n                 _ => false\n             }\n         } else {\n-            true\n+            false\n         }\n     }\n \n@@ -1779,7 +1790,7 @@ impl<'test> TestCx<'test> {\n                     && !self.config.host.contains(\"musl\"))\n                 || self.config.target.contains(\"wasm32\")\n                 || self.config.target.contains(\"nvptx\")\n-                || !self.use_dynamic_linking()\n+                || self.is_vxworks_pure_static()\n             {\n                 // We primarily compile all auxiliary libraries as dynamic libraries\n                 // to avoid code size bloat and large binaries as much as possible\n@@ -2012,13 +2023,10 @@ impl<'test> TestCx<'test> {\n \n         if !is_rustdoc {\n             if self.config.target == \"wasm32-unknown-unknown\"\n-            || !self.use_dynamic_linking() {\n+                || self.is_vxworks_pure_static() {\n                 // rustc.arg(\"-g\"); // get any backtrace at all on errors\n             } else if !self.props.no_prefer_dynamic {\n                 rustc.args(&[\"-C\", \"prefer-dynamic\"]);\n-                if self.config.target.contains(\"vxworks\") {\n-                    rustc.args(&[\"-C\", \"target-feature=-crt-static\"]);\n-                }\n             }\n         }\n \n@@ -2060,7 +2068,8 @@ impl<'test> TestCx<'test> {\n         }\n \n         // Use dynamic musl for tests because static doesn't allow creating dylibs\n-        if self.config.host.contains(\"musl\") {\n+        if self.config.host.contains(\"musl\")\n+            || self.is_vxworks_pure_dynamic() {\n             rustc.arg(\"-Ctarget-feature=-crt-static\");\n         }\n "}]}