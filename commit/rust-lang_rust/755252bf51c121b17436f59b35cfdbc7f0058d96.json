{"sha": "755252bf51c121b17436f59b35cfdbc7f0058d96", "node_id": "C_kwDOAAsO6NoAKDc1NTI1MmJmNTFjMTIxYjE3NDM2ZjU5YjM1Y2ZkYmM3ZjAwNThkOTY", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-02-02T12:34:11Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-02-14T20:22:10Z"}, "message": "Show the effects of weird code commented out", "tree": {"sha": "594b2664cc6fb1809f59c8f16b5ccefe46ef0b08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/594b2664cc6fb1809f59c8f16b5ccefe46ef0b08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/755252bf51c121b17436f59b35cfdbc7f0058d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/755252bf51c121b17436f59b35cfdbc7f0058d96", "html_url": "https://github.com/rust-lang/rust/commit/755252bf51c121b17436f59b35cfdbc7f0058d96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/755252bf51c121b17436f59b35cfdbc7f0058d96/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd176ee591cd391835bfbcb3409a743bac2128ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd176ee591cd391835bfbcb3409a743bac2128ca", "html_url": "https://github.com/rust-lang/rust/commit/bd176ee591cd391835bfbcb3409a743bac2128ca"}], "stats": {"total": 82, "additions": 35, "deletions": 47}, "files": [{"sha": "6d164d1c2b2717e169035c997ceeaeeb3281c730", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/755252bf51c121b17436f59b35cfdbc7f0058d96/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/755252bf51c121b17436f59b35cfdbc7f0058d96/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs?ref=755252bf51c121b17436f59b35cfdbc7f0058d96", "patch": "@@ -1135,20 +1135,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n         }\n \n-        // Incorporate the argument changes in the removal suggestion.\n-        let mut prev = -1;\n-        for (expected_idx, provided_idx) in matched_inputs.iter_enumerated() {\n-            if let Some(provided_idx) = provided_idx {\n-                prev = provided_idx.index() as i64;\n-            }\n-            let idx = ProvidedIdx::from_usize((prev + 1) as usize);\n-            if let None = provided_idx\n-                && let Some((_, arg_span)) = provided_arg_tys.get(idx)\n-            {\n-                let (_, expected_ty) = formal_and_expected_inputs[expected_idx];\n-                suggestions.push((*arg_span, ty_to_snippet(expected_ty, expected_idx)));\n-            }\n-        }\n+        // // Incorporate the argument changes in the removal suggestion.\n+        // let mut prev = -1;\n+        // for (expected_idx, provided_idx) in matched_inputs.iter_enumerated() {\n+        //     if let Some(provided_idx) = provided_idx {\n+        //         prev = provided_idx.index() as i64;\n+        //     }\n+        //     let idx = ProvidedIdx::from_usize((prev + 1) as usize);\n+        //     if let None = provided_idx\n+        //         && let Some((_, arg_span)) = provided_arg_tys.get(idx)\n+        //     {\n+        //         let (_, expected_ty) = formal_and_expected_inputs[expected_idx];\n+        //         suggestions.push((*arg_span, ty_to_snippet(expected_ty, expected_idx)));\n+        //     }\n+        // }\n \n         // If we have less than 5 things to say, it would be useful to call out exactly what's wrong\n         if labels.len() <= 5 {"}, {"sha": "2c2797b3911499758a25a2beee618b6e53aa5c87", "filename": "tests/ui/argument-suggestions/issue-97484.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fissue-97484.stderr?ref=755252bf51c121b17436f59b35cfdbc7f0058d96", "patch": "@@ -20,7 +20,7 @@ LL |     foo(&&A, B, C, D, &E, F, G);\n help: remove the extra arguments\n    |\n LL -     foo(&&A, B, C, D, E, F, G);\n-LL +     foo(&&A, D, /* &E */, G);\n+LL +     foo(&&A, D, E, G);\n    |\n \n error: aborting due to previous error"}, {"sha": "cfa5702ab7fe387c8b55bef53bc5c7e32b0fc54a", "filename": "tests/ui/argument-suggestions/mixed_cases.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr?ref=755252bf51c121b17436f59b35cfdbc7f0058d96", "patch": "@@ -2,20 +2,17 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/mixed_cases.rs:10:3\n    |\n LL |   two_args(1, \"\", X {});\n-   |   ^^^^^^^^    --  ---- unexpected argument of type `X`\n-   |               |\n+   |   ^^^^^^^^    --------\n+   |               | | |\n+   |               | | unexpected argument of type `X`\n+   |               | help: remove the extra argument\n    |               expected `f32`, found `&str`\n    |\n note: function defined here\n   --> $DIR/mixed_cases.rs:5:4\n    |\n LL | fn two_args(_a: i32, _b: f32) {}\n    |    ^^^^^^^^ -------  -------\n-help: remove the extra argument\n-   |\n-LL -   two_args(1, \"\", X {});\n-LL +   two_args(1, /* f32 */);\n-   |\n \n error[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> $DIR/mixed_cases.rs:11:3"}, {"sha": "8032aa32b4f8a7ad2749a7444356e77ca6bb6987", "filename": "tests/ui/mismatched_types/overloaded-calls-bad.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr?ref=755252bf51c121b17436f59b35cfdbc7f0058d96", "patch": "@@ -32,20 +32,17 @@ error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/overloaded-calls-bad.rs:37:15\n    |\n LL |     let ans = s(\"burma\", \"shave\");\n-   |               ^ -------  ------- unexpected argument of type `&'static str`\n-   |                 |\n+   |               ^ ----------------\n+   |                 |      | |\n+   |                 |      | unexpected argument of type `&'static str`\n+   |                 |      help: remove the extra argument\n    |                 expected `isize`, found `&str`\n    |\n note: implementation defined here\n   --> $DIR/overloaded-calls-bad.rs:10:1\n    |\n LL | impl FnMut<(isize,)> for S {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-help: remove the extra argument\n-   |\n-LL -     let ans = s(\"burma\", \"shave\");\n-LL +     let ans = s(/* isize */);\n-   |\n \n error[E0308]: mismatched types\n   --> $DIR/overloaded-calls-bad.rs:40:7"}, {"sha": "143363321dac9b5c09df3ac2345d5b9cdde553f2", "filename": "tests/ui/suggestions/args-instead-of-tuple-errors.stderr", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr?ref=755252bf51c121b17436f59b35cfdbc7f0058d96", "patch": "@@ -2,7 +2,10 @@ error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:6:34\n    |\n LL |     let _: Option<(i32, bool)> = Some(1, 2);\n-   |                                  ^^^^    - unexpected argument of type `{integer}`\n+   |                                  ^^^^  ---\n+   |                                        | |\n+   |                                        | unexpected argument of type `{integer}`\n+   |                                        help: remove the extra argument\n    |\n note: expected `(i32, bool)`, found integer\n   --> $DIR/args-instead-of-tuple-errors.rs:6:39\n@@ -20,17 +23,15 @@ LL |     let _: Option<(i32, bool)> = Some(1, 2);\n    |                                       this argument influences the type of `Some`\n note: tuple variant defined here\n   --> $SRC_DIR/core/src/option.rs:LL:COL\n-help: remove the extra argument\n-   |\n-LL -     let _: Option<(i32, bool)> = Some(1, 2);\n-LL +     let _: Option<(i32, bool)> = Some(/* (i32, bool) */);\n-   |\n \n error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:8:5\n    |\n LL |     int_bool(1, 2);\n-   |     ^^^^^^^^    - unexpected argument of type `{integer}`\n+   |     ^^^^^^^^  ---\n+   |               | |\n+   |               | unexpected argument of type `{integer}`\n+   |               help: remove the extra argument\n    |\n note: expected `(i32, bool)`, found integer\n   --> $DIR/args-instead-of-tuple-errors.rs:8:14\n@@ -44,11 +45,6 @@ note: function defined here\n    |\n LL | fn int_bool(_: (i32, bool)) {\n    |    ^^^^^^^^ --------------\n-help: remove the extra argument\n-   |\n-LL -     int_bool(1, 2);\n-LL +     int_bool(/* (i32, bool) */);\n-   |\n \n error[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:11:28"}, {"sha": "8b4fca4de7d418b031a67f272d7247b7901498b7", "filename": "tests/ui/tuple/wrong_argument_ice-3.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/755252bf51c121b17436f59b35cfdbc7f0058d96/tests%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr?ref=755252bf51c121b17436f59b35cfdbc7f0058d96", "patch": "@@ -2,7 +2,10 @@ error[E0061]: this method takes 1 argument but 2 arguments were supplied\n   --> $DIR/wrong_argument_ice-3.rs:9:16\n    |\n LL |         groups.push(new_group, vec![process]);\n-   |                ^^^^            ------------- unexpected argument of type `Vec<&Process>`\n+   |                ^^^^          ---------------\n+   |                              | |\n+   |                              | unexpected argument of type `Vec<&Process>`\n+   |                              help: remove the extra argument\n    |\n note: expected `(Vec<String>, Vec<Process>)`, found `Vec<String>`\n   --> $DIR/wrong_argument_ice-3.rs:9:21\n@@ -13,11 +16,6 @@ LL |         groups.push(new_group, vec![process]);\n              found struct `Vec<String>`\n note: associated function defined here\n   --> $SRC_DIR/alloc/src/vec/mod.rs:LL:COL\n-help: remove the extra argument\n-   |\n-LL -         groups.push(new_group, vec![process]);\n-LL +         groups.push(/* (Vec<String>, Vec<Process>) */);\n-   |\n \n error: aborting due to previous error\n "}]}