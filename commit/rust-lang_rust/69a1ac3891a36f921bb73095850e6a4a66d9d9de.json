{"sha": "69a1ac3891a36f921bb73095850e6a4a66d9d9de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YTFhYzM4OTFhMzZmOTIxYmI3MzA5NTg1MGU2YTRhNjZkOWQ5ZGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-03T00:39:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-03T00:39:05Z"}, "message": "Rollup merge of #72848 - camelid:fix-72815, r=varkor\n\nCorrect generic parameter ordering in error note for E0747\n\nFixes #72815.\n\nr? @varkor", "tree": {"sha": "3152d276eabe485ab8bee3ab4582a814937eb1fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3152d276eabe485ab8bee3ab4582a814937eb1fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69a1ac3891a36f921bb73095850e6a4a66d9d9de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe1vEqCRBK7hj4Ov3rIwAAdHIIAARqHK9EL4zdm0sVUyVOKuUo\nPy7+AZpx/5NwHT5RBgF9x4+eknlairm85zxZcbXFsG56viYHs2+PUGOQRLIifN/h\nB2/Za3u3Baol/Lvsu2zQzG1I6Fg++jd/Rq2ydtcumpAiArGjCNqw+sFGUFINQtii\nCjRe61p95FW/0PGk2cJMx9RzyuktB/XGaHujhQvVmDsHvLBU0p6FAl0BLzbwMLYw\n8tP8Kdro4sVyQk3gjLxmoBuleTxT9PqKx6/dBzGbCAgpo6gekRTeAWqzp1yUE4Yn\nztRl8UTj37uRzcwgxcSz52VHid6BWUOgPSrekmRYp9RFBF9x2Uc+qQjhY009KyA=\n=Q+Vi\n-----END PGP SIGNATURE-----\n", "payload": "tree 3152d276eabe485ab8bee3ab4582a814937eb1fe\nparent 9c3ac0c9bb09d9ddaa15ba618597b6ccb9b66417\nparent 56f87efa2c587539ea1e7f22e2feff5107429aae\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591144745 +0200\ncommitter GitHub <noreply@github.com> 1591144745 +0200\n\nRollup merge of #72848 - camelid:fix-72815, r=varkor\n\nCorrect generic parameter ordering in error note for E0747\n\nFixes #72815.\n\nr? @varkor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69a1ac3891a36f921bb73095850e6a4a66d9d9de", "html_url": "https://github.com/rust-lang/rust/commit/69a1ac3891a36f921bb73095850e6a4a66d9d9de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69a1ac3891a36f921bb73095850e6a4a66d9d9de/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c3ac0c9bb09d9ddaa15ba618597b6ccb9b66417", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3ac0c9bb09d9ddaa15ba618597b6ccb9b66417", "html_url": "https://github.com/rust-lang/rust/commit/9c3ac0c9bb09d9ddaa15ba618597b6ccb9b66417"}, {"sha": "56f87efa2c587539ea1e7f22e2feff5107429aae", "url": "https://api.github.com/repos/rust-lang/rust/commits/56f87efa2c587539ea1e7f22e2feff5107429aae", "html_url": "https://github.com/rust-lang/rust/commit/56f87efa2c587539ea1e7f22e2feff5107429aae"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "f1dc7e5390629a11f297d36f73ebe94b9bf5faa4", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/69a1ac3891a36f921bb73095850e6a4a66d9d9de/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69a1ac3891a36f921bb73095850e6a4a66d9d9de/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=69a1ac3891a36f921bb73095850e6a4a66d9d9de", "patch": "@@ -8,6 +8,7 @@\n use crate::collect::PlaceholderHirTyCollector;\n use crate::middle::resolve_lifetime as rl;\n use crate::require_c_abi_if_c_variadic;\n+use rustc_ast::ast::ParamKindOrd;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::ErrorReported;\n@@ -483,8 +484,25 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             arg.descr(),\n             kind,\n         );\n+\n+        let kind_ord = match kind {\n+            \"lifetime\" => ParamKindOrd::Lifetime,\n+            \"type\" => ParamKindOrd::Type,\n+            \"constant\" => ParamKindOrd::Const,\n+            // It's more concise to match on the string representation, though it means\n+            // the match is non-exhaustive.\n+            _ => bug!(\"invalid generic parameter kind {}\", kind),\n+        };\n+        let arg_ord = match arg {\n+            GenericArg::Lifetime(_) => ParamKindOrd::Lifetime,\n+            GenericArg::Type(_) => ParamKindOrd::Type,\n+            GenericArg::Const(_) => ParamKindOrd::Const,\n+        };\n+\n         // This note will be true as long as generic parameters are strictly ordered by their kind.\n-        err.note(&format!(\"{} arguments must be provided before {} arguments\", kind, arg.descr()));\n+        let (first, last) =\n+            if kind_ord < arg_ord { (kind, arg.descr()) } else { (arg.descr(), kind) };\n+        err.note(&format!(\"{} arguments must be provided before {} arguments\", first, last));\n         err.emit();\n     }\n "}, {"sha": "96f1656bae4ac321c6b2cbfdb4149e3ed7744635", "filename": "src/test/ui/suggestions/suggest-move-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69a1ac3891a36f921bb73095850e6a4a66d9d9de/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/69a1ac3891a36f921bb73095850e6a4a66d9d9de/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr?ref=69a1ac3891a36f921bb73095850e6a4a66d9d9de", "patch": "@@ -124,15 +124,15 @@ error[E0747]: lifetime provided when a type was expected\n LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n    |                                                        ^^\n    |\n-   = note: type arguments must be provided before lifetime arguments\n+   = note: lifetime arguments must be provided before type arguments\n \n error[E0747]: lifetime provided when a type was expected\n   --> $DIR/suggest-move-types.rs:82:56\n    |\n LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n    |                                                        ^^\n    |\n-   = note: type arguments must be provided before lifetime arguments\n+   = note: lifetime arguments must be provided before type arguments\n \n error: aborting due to 12 previous errors\n "}]}