{"sha": "465b86253ce828e215d564fde53adf8742f0e3f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NWI4NjI1M2NlODI4ZTIxNWQ1NjRmZGU1M2FkZjg3NDJmMGUzZjY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-01T11:41:58Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-02T21:46:29Z"}, "message": "Use correct `ParamEnv` in `Instance::resolve`", "tree": {"sha": "948be479871dc9348ec0e3599f78da676649bd04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/948be479871dc9348ec0e3599f78da676649bd04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/465b86253ce828e215d564fde53adf8742f0e3f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/465b86253ce828e215d564fde53adf8742f0e3f6", "html_url": "https://github.com/rust-lang/rust/commit/465b86253ce828e215d564fde53adf8742f0e3f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/465b86253ce828e215d564fde53adf8742f0e3f6/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d20646b2d8033f31423b5bda3e56776df115e144", "url": "https://api.github.com/repos/rust-lang/rust/commits/d20646b2d8033f31423b5bda3e56776df115e144", "html_url": "https://github.com/rust-lang/rust/commit/d20646b2d8033f31423b5bda3e56776df115e144"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f73e069df36c7d8faca6004c2b90a370bcadb788", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/465b86253ce828e215d564fde53adf8742f0e3f6/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465b86253ce828e215d564fde53adf8742f0e3f6/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=465b86253ce828e215d564fde53adf8742f0e3f6", "patch": "@@ -285,7 +285,7 @@ impl<'tcx> Instance<'tcx> {\n                 _ => {\n                     if Some(def_id) == tcx.lang_items().drop_in_place_fn() {\n                         let ty = substs.type_at(0);\n-                        if ty.needs_drop(tcx, ty::ParamEnv::reveal_all()) {\n+                        if ty.needs_drop(tcx, param_env.with_reveal_all()) {\n                             debug!(\" => nontrivial drop glue\");\n                             ty::InstanceDef::DropGlue(def_id, Some(ty))\n                         } else {"}]}