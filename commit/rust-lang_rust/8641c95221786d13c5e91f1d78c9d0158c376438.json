{"sha": "8641c95221786d13c5e91f1d78c9d0158c376438", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NDFjOTUyMjE3ODZkMTNjNWU5MWYxZDc4YzlkMDE1OGMzNzY0Mzg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-30T05:28:26Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-30T05:28:26Z"}, "message": "core: Add str::each_char", "tree": {"sha": "2e9d8e30421cf4d542646810b0774c51ba8efa33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e9d8e30421cf4d542646810b0774c51ba8efa33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8641c95221786d13c5e91f1d78c9d0158c376438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8641c95221786d13c5e91f1d78c9d0158c376438", "html_url": "https://github.com/rust-lang/rust/commit/8641c95221786d13c5e91f1d78c9d0158c376438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8641c95221786d13c5e91f1d78c9d0158c376438/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bff2f25455ac781afecf09afe8d26653460601b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bff2f25455ac781afecf09afe8d26653460601b", "html_url": "https://github.com/rust-lang/rust/commit/9bff2f25455ac781afecf09afe8d26653460601b"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "2cf3f04fa941d4711c115a1188a1e686c0b9df59", "filename": "src/libcore/str.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8641c95221786d13c5e91f1d78c9d0158c376438/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8641c95221786d13c5e91f1d78c9d0158c376438/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8641c95221786d13c5e91f1d78c9d0158c376438", "patch": "@@ -55,6 +55,7 @@ export\n    all_between, any_between,\n    map,\n    each,\n+   each_char,\n    bytes_iter,\n    chars_iter,\n    split_char_iter,\n@@ -635,6 +636,18 @@ fn each(s: str, it: fn(u8) -> bool) {\n     }\n }\n \n+#[doc = \"Iterates over the chars in a string\"]\n+#[inline(always)]\n+fn each_char(s: str, it: fn(char) -> bool) {\n+    let mut pos = 0u;\n+    let len = len(s);\n+    while pos < len {\n+        let {ch, next} = char_range_at(s, pos);\n+        pos = next;\n+        if !it(ch) { break; }\n+    }\n+}\n+\n #[doc = \"Iterate over the characters in a string\"]\n fn chars_iter(s: str, it: fn(char)) {\n     let mut pos = 0u;\n@@ -2669,4 +2682,17 @@ mod tests {\n             assert to_utf16(from_utf16(u)) == u;\n         }\n     }\n+\n+    #[test]\n+    fn test_each_char() {\n+        let s = \"abc\";\n+        let mut found_b = false;\n+        for each_char(s) {|ch|\n+            if ch == 'b' {\n+                found_b = true;\n+                break;\n+            }\n+        }\n+        assert found_b;\n+    }\n }"}]}