{"sha": "104002be6ff9636f897434bd588da398c34dc1f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNDAwMmJlNmZmOTYzNmY4OTc0MzRiZDU4OGRhMzk4YzM0ZGMxZjA=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-02-07T10:50:07Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-02-07T10:50:07Z"}, "message": "Span debugger", "tree": {"sha": "24ae5e8a917281dac9e00950f86fc3582a5bee71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ae5e8a917281dac9e00950f86fc3582a5bee71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/104002be6ff9636f897434bd588da398c34dc1f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/104002be6ff9636f897434bd588da398c34dc1f0", "html_url": "https://github.com/rust-lang/rust/commit/104002be6ff9636f897434bd588da398c34dc1f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/104002be6ff9636f897434bd588da398c34dc1f0/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21b856d2dc6ae2e4b40c73958d34501358707b39", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b856d2dc6ae2e4b40c73958d34501358707b39", "html_url": "https://github.com/rust-lang/rust/commit/21b856d2dc6ae2e4b40c73958d34501358707b39"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "3e5ecc605d612abd6a3f6293db69ce30928c8d2d", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=104002be6ff9636f897434bd588da398c34dc1f0", "patch": "@@ -518,6 +518,10 @@ pub fn compile_input(sess: Session, cfg: ast::CrateConfig, input: &Input,\n     let (outputs, trans) = {\n         let (expanded_crate, ast_map) = {\n             let crate = phase_1_parse_input(sess, cfg, input);\n+            if sess.show_span() {\n+                front::show_span::run(sess, &crate);\n+                return;\n+            }\n             if stop_after_phase_1(sess) { return; }\n             let loader = &mut Loader::new(sess);\n             phase_2_configure_and_expand(sess, loader, crate)"}, {"sha": "4e386fa343d08af14f92feee98cb45a5b10bcb84", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=104002be6ff9636f897434bd588da398c34dc1f0", "patch": "@@ -60,6 +60,7 @@ debugging_opts!(\n         BORROWCK_STATS,\n         NO_LANDING_PADS,\n         DEBUG_LLVM,\n+        SHOW_SPAN,\n         COUNT_TYPE_SIZES,\n         META_STATS,\n         NO_OPT,\n@@ -95,6 +96,7 @@ pub fn debugging_opts_map() -> ~[(&'static str, &'static str, u64)] {\n      (\"no-landing-pads\", \"omit landing pads for unwinding\",\n       NO_LANDING_PADS),\n      (\"debug-llvm\", \"enable debug output from LLVM\", DEBUG_LLVM),\n+     (\"show-span\", \"show spans\", SHOW_SPAN),\n      (\"count-type-sizes\", \"count the sizes of aggregate types\",\n       COUNT_TYPE_SIZES),\n      (\"meta-stats\", \"gather metadata statistics\", META_STATS),\n@@ -351,6 +353,9 @@ impl Session_ {\n     pub fn no_landing_pads(&self) -> bool {\n         self.debugging_opt(NO_LANDING_PADS)\n     }\n+    pub fn show_span(&self) -> bool {\n+        self.debugging_opt(SHOW_SPAN)\n+    }\n \n     // DEPRECATED. This function results in a lot of allocations when they\n     // are not necessary."}, {"sha": "a5bc8e0243bdc34175084cd87c425f00ea6b084e", "filename": "src/librustc/front/show_span.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Ffront%2Fshow_span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Ffront%2Fshow_span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fshow_span.rs?ref=104002be6ff9636f897434bd588da398c34dc1f0", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use syntax::ast;\n+use syntax::visit;\n+use syntax::visit::Visitor;\n+\n+use driver::session::Session;\n+\n+struct ShowSpanVisitor {\n+    sess: Session\n+}\n+\n+impl Visitor<()> for ShowSpanVisitor {\n+    fn visit_expr(&mut self, e: &ast::Expr, _: ()) {\n+        self.sess.span_note(e.span, \"expression\");\n+        visit::walk_expr(self, e, ());\n+    }\n+}\n+\n+pub fn run(sess: Session, crate: &ast::Crate) {\n+    let mut v = ShowSpanVisitor { sess: sess };\n+    visit::walk_crate(&mut v, crate, ());\n+}"}, {"sha": "edcefdf659402613359978eeab870faf2812c338", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/104002be6ff9636f897434bd588da398c34dc1f0/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=104002be6ff9636f897434bd588da398c34dc1f0", "patch": "@@ -97,6 +97,7 @@ pub mod front {\n     pub mod std_inject;\n     pub mod assign_node_ids_and_map;\n     pub mod feature_gate;\n+    pub mod show_span;\n }\n \n pub mod back {"}]}