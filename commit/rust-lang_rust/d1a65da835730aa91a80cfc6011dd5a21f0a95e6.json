{"sha": "d1a65da835730aa91a80cfc6011dd5a21f0a95e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYTY1ZGE4MzU3MzBhYTkxYTgwY2ZjNjAxMWRkNWEyMWYwYTk1ZTY=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-01T01:44:01Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-01T02:07:24Z"}, "message": "Time lint in the driver like every other pass, instead of in lint.", "tree": {"sha": "af7fb2117a20f442c84217f3a23c8192ab8922e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af7fb2117a20f442c84217f3a23c8192ab8922e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1a65da835730aa91a80cfc6011dd5a21f0a95e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a65da835730aa91a80cfc6011dd5a21f0a95e6", "html_url": "https://github.com/rust-lang/rust/commit/d1a65da835730aa91a80cfc6011dd5a21f0a95e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1a65da835730aa91a80cfc6011dd5a21f0a95e6/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675", "url": "https://api.github.com/repos/rust-lang/rust/commits/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675", "html_url": "https://github.com/rust-lang/rust/commit/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675"}], "stats": {"total": 30, "additions": 9, "deletions": 21}, "files": [{"sha": "d36667c36950b4792662d23321992333f9734b8a", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d1a65da835730aa91a80cfc6011dd5a21f0a95e6/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a65da835730aa91a80cfc6011dd5a21f0a95e6/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=d1a65da835730aa91a80cfc6011dd5a21f0a95e6", "patch": "@@ -205,7 +205,8 @@ fn compile_upto(sess: session, cfg: ast::crate_cfg,\n     time(time_passes, \"kind checking\",\n          bind kind::check_crate(ty_cx, method_map, last_use_map, crate));\n \n-    lint::check_crate(ty_cx, crate, sess.opts.lint_opts, time_passes);\n+    time(time_passes, \"lint checking\",\n+         bind lint::check_crate(ty_cx, crate, sess.opts.lint_opts));\n \n     if upto == cu_no_trans { ret {crate: crate, tcx: some(ty_cx)}; }\n     let outputs = option::get(outputs);"}, {"sha": "2a5f6b637de3cf49f8f0f650a5a495eed93dd2e8", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d1a65da835730aa91a80cfc6011dd5a21f0a95e6/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a65da835730aa91a80cfc6011dd5a21f0a95e6/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=d1a65da835730aa91a80cfc6011dd5a21f0a95e6", "patch": "@@ -199,17 +199,6 @@ fn lookup_lint(dict: lint_dict, s: str)\n     }\n }\n \n-\n-// FIXME: Copied from driver.rs, to work around a bug(#1566)\n-fn time(do_it: bool, what: str, thunk: fn()) {\n-    if !do_it{ ret thunk(); }\n-    let start = std::time::precise_time_s();\n-    thunk();\n-    let end = std::time::precise_time_s();\n-    io::stdout().write_str(#fmt(\"time: %3.3f s\\t%s\\n\",\n-                                end - start, what));\n-}\n-\n fn check_item(i: @ast::item, &&cx: ctxt, v: visit::vt<ctxt>) {\n     cx.with_warn_attrs(i.attrs) {|cx|\n         for cx.curr.each {|lint, level|\n@@ -368,7 +357,7 @@ fn check_item_old_vecs(cx: ctxt, level: level, it: @ast::item) {\n \n \n fn check_crate(tcx: ty::ctxt, crate: @ast::crate,\n-               lint_opts: [(lint, level)], time_pass: bool) {\n+               lint_opts: [(lint, level)]) {\n \n     fn hash_lint(&&lint: lint) -> uint { lint as uint }\n     fn eq_lint(&&a: lint, &&b: lint) -> bool { a == b }\n@@ -386,14 +375,12 @@ fn check_crate(tcx: ty::ctxt, crate: @ast::crate,\n         cx.set_level(lint, level);\n     }\n \n-    time(time_pass, \"lint checking\") {||\n-        cx.with_warn_attrs(crate.node.attrs) {|cx|\n-            let visit = visit::mk_vt(@{\n-                visit_item: check_item\n-                with *visit::default_visitor()\n-            });\n-            visit::visit_crate(*crate, cx, visit);\n-        }\n+    cx.with_warn_attrs(crate.node.attrs) {|cx|\n+        let visit = visit::mk_vt(@{\n+            visit_item: check_item\n+            with *visit::default_visitor()\n+        });\n+        visit::visit_crate(*crate, cx, visit);\n     }\n \n     tcx.sess.abort_if_errors();"}]}