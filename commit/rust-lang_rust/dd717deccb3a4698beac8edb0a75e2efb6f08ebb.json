{"sha": "dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNzE3ZGVjY2IzYTQ2OThiZWFjOGVkYjBhNzVlMmVmYjZmMDhlYmI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-30T22:47:54Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-11-28T18:33:33Z"}, "message": "Add crate filtering", "tree": {"sha": "d7e474fa30699d68c6e4b3db2b4191273f194e8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7e474fa30699d68c6e4b3db2b4191273f194e8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "html_url": "https://github.com/rust-lang/rust/commit/dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b76ee83254ec0398da554f25c2168d917ba60f1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b76ee83254ec0398da554f25c2168d917ba60f1c", "html_url": "https://github.com/rust-lang/rust/commit/b76ee83254ec0398da554f25c2168d917ba60f1c"}], "stats": {"total": 157, "additions": 131, "deletions": 26}, "files": [{"sha": "d585b737517b3fbd7a7cfb5616f8f8a63a37ca66", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "patch": "@@ -81,11 +81,16 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     <nav class=\\\"sub\\\">\\\n         <form class=\\\"search-form js-only\\\">\\\n             <div class=\\\"search-container\\\">\\\n-                <input class=\\\"search-input\\\" name=\\\"search\\\" \\\n-                       autocomplete=\\\"off\\\" \\\n-                       spellcheck=\\\"false\\\" \\\n-                       placeholder=\\\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\\\" \\\n-                       type=\\\"search\\\">\\\n+                <div>\\\n+                    <select id=\\\"crate-search\\\">\\\n+                        <option value=\\\"All crates\\\">All crates</option>\\\n+                    </select>\\\n+                    <input class=\\\"search-input\\\" name=\\\"search\\\" \\\n+                           autocomplete=\\\"off\\\" \\\n+                           spellcheck=\\\"false\\\" \\\n+                           placeholder=\\\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\\\" \\\n+                           type=\\\"search\\\">\\\n+                </div>\\\n                 <a id=\\\"settings-menu\\\" href=\\\"{root_path}settings.html\\\">\\\n                     <img src=\\\"{root_path}wheel{suffix}.svg\\\" width=\\\"18\\\" alt=\\\"Change settings\\\">\\\n                 </a>\\"}, {"sha": "48da90de02a8a396bcc9313f861a721df229dd54", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "patch": "@@ -983,7 +983,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n                                        &[(minifier::js::Keyword::Null, \"N\")]),\n                  &dst);\n     }\n-    try_err!(writeln!(&mut w, \"initSearch(searchIndex);\"), &dst);\n+    try_err!(writeln!(&mut w, \"initSearch(searchIndex);addSearchOptions(searchIndex);\"), &dst);\n \n     if options.enable_index_page {\n         if let Some(index_page) = options.index_page.clone() {"}, {"sha": "66e10b24440be7adaa442415e21d256689ff4eb1", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 83, "deletions": 16, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "patch": "@@ -254,12 +254,14 @@\n     //\n     // So I guess you could say things are getting pretty interoperable.\n     function getVirtualKey(ev) {\n-        if (\"key\" in ev && typeof ev.key != \"undefined\")\n+        if (\"key\" in ev && typeof ev.key != \"undefined\") {\n             return ev.key;\n+        }\n \n         var c = ev.charCode || ev.keyCode;\n-        if (c == 27)\n+        if (c == 27) {\n             return \"Escape\";\n+        }\n         return String.fromCharCode(c);\n     }\n \n@@ -467,12 +469,13 @@\n \n         /**\n          * Executes the query and builds an index of results\n-         * @param  {[Object]} query     [The user query]\n-         * @param  {[type]} searchWords [The list of search words to query\n-         *                               against]\n-         * @return {[type]}             [A search index of results]\n+         * @param  {[Object]} query      [The user query]\n+         * @param  {[type]} searchWords  [The list of search words to query\n+         *                                against]\n+         * @param  {[type]} filterCrates [Crate to search in if defined]\n+         * @return {[type]}              [A search index of results]\n          */\n-        function execQuery(query, searchWords) {\n+        function execQuery(query, searchWords, filterCrates) {\n             function itemTypeFromName(typename) {\n                 for (var i = 0; i < itemTypes.length; ++i) {\n                     if (itemTypes[i] === typename) {\n@@ -848,6 +851,9 @@\n             {\n                 val = extractGenerics(val.substr(1, val.length - 2));\n                 for (var i = 0; i < nSearchWords; ++i) {\n+                    if (filterCrates !== undefined && searchIndex[i].crate !== filterCrates) {\n+                        continue;\n+                    }\n                     var in_args = findArg(searchIndex[i], val, true);\n                     var returned = checkReturned(searchIndex[i], val, true);\n                     var ty = searchIndex[i];\n@@ -902,6 +908,9 @@\n                 var output = extractGenerics(parts[1]);\n \n                 for (var i = 0; i < nSearchWords; ++i) {\n+                    if (filterCrates !== undefined && searchIndex[i].crate !== filterCrates) {\n+                        continue;\n+                    }\n                     var type = searchIndex[i].type;\n                     var ty = searchIndex[i];\n                     if (!type) {\n@@ -973,11 +982,11 @@\n                 var contains = paths.slice(0, paths.length > 1 ? paths.length - 1 : 1);\n \n                 for (j = 0; j < nSearchWords; ++j) {\n-                    var lev_distance;\n                     var ty = searchIndex[j];\n-                    if (!ty) {\n+                    if (!ty || (filterCrates !== undefined && ty.crate !== filterCrates)) {\n                         continue;\n                     }\n+                    var lev_distance;\n                     var lev_add = 0;\n                     if (paths.length > 1) {\n                         var lev = checkPath(contains, paths[paths.length - 1], ty);\n@@ -1353,7 +1362,7 @@\n             return '<div>' + text + ' <div class=\"count\">(' + nbElems + ')</div></div>';\n         }\n \n-        function showResults(results) {\n+        function showResults(results, filterCrates) {\n             if (results['others'].length === 1 &&\n                 getCurrentValue('rustdoc-go-to-only-result') === \"true\") {\n                 var elem = document.createElement('a');\n@@ -1371,8 +1380,13 @@\n             var ret_in_args = addTab(results['in_args'], query, false);\n             var ret_returned = addTab(results['returned'], query, false);\n \n+            var filter = \"\";\n+            if (filterCrates !== undefined) {\n+                filter = \" (in <b>\" + filterCrates + \"</b> crate)\";\n+            }\n+\n             var output = '<h1>Results for ' + escape(query.query) +\n-                (query.type ? ' (type: ' + escape(query.type) + ')' : '') + '</h1>' +\n+                (query.type ? ' (type: ' + escape(query.type) + ')' : '') + filter + '</h1>' +\n                 '<div id=\"titles\">' +\n                 makeTabHeader(0, \"In Names\", ret_others[1]) +\n                 makeTabHeader(1, \"In Parameters\", ret_in_args[1]) +\n@@ -1401,7 +1415,7 @@\n             printTab(currentTab);\n         }\n \n-        function execSearch(query, searchWords) {\n+        function execSearch(query, searchWords, filterCrates) {\n             var queries = query.raw.split(\",\");\n             var results = {\n                 'in_args': [],\n@@ -1412,7 +1426,7 @@\n             for (var i = 0; i < queries.length; ++i) {\n                 var query = queries[i].trim();\n                 if (query.length !== 0) {\n-                    var tmp = execQuery(getQuery(query), searchWords);\n+                    var tmp = execQuery(getQuery(query), searchWords, filterCrates);\n \n                     results['in_args'].push(tmp['in_args']);\n                     results['returned'].push(tmp['returned']);\n@@ -1474,15 +1488,27 @@\n             }\n         }\n \n-        function search(e) {\n+        function getFilterCrates() {\n+            var elem = document.getElementById(\"crate-search\");\n+\n+            if (elem && elem.value !== \"All crates\" && rawSearchIndex.hasOwnProperty(elem.value)) {\n+                return elem.value;\n+            }\n+            return undefined;\n+        }\n+\n+        function search(e, forced) {\n             var params = getQueryStringParams();\n             var query = getQuery(search_input.value.trim());\n \n             if (e) {\n                 e.preventDefault();\n             }\n \n-            if (query.query.length === 0 || query.id === currentResults) {\n+            if (query.query.length === 0) {\n+                return;\n+            }\n+            if (forced !== true && query.id === currentResults) {\n                 if (query.query.length > 0) {\n                     putBackSearch(search_input);\n                 }\n@@ -1502,7 +1528,8 @@\n                 }\n             }\n \n-            showResults(execSearch(query, index));\n+            var filterCrates = getFilterCrates();\n+            showResults(execSearch(query, index, filterCrates), filterCrates);\n         }\n \n         function buildIndex(rawSearchIndex) {\n@@ -1602,6 +1629,13 @@\n             };\n             search_input.onpaste = search_input.onchange;\n \n+            var selectCrate = document.getElementById('crate-search');\n+            if (selectCrate) {\n+                selectCrate.onchange = function() {\n+                    search(undefined, true);\n+                };\n+            }\n+\n             // Push and pop states are used to add search results to the browser\n             // history.\n             if (browserSupportsHistoryApi()) {\n@@ -2350,6 +2384,39 @@\n     if (window.location.hash && window.location.hash.length > 0) {\n         expandSection(window.location.hash.replace(/^#/, ''));\n     }\n+\n+    function addSearchOptions(crates) {\n+        var elem = document.getElementById('crate-search');\n+\n+        if (!elem) {\n+            return;\n+        }\n+        var crates_text = [];\n+        for (var crate in crates) {\n+            if (crates.hasOwnProperty(crate)) {\n+                crates_text.push(crate);\n+            }\n+        }\n+        crates_text.sort(function(a, b) {\n+            var lower_a = a.toLowerCase();\n+            var lower_b = b.toLowerCase();\n+\n+            if (lower_a < lower_b) {\n+                return -1;\n+            } else if (lower_a > lower_b) {\n+                return 1;\n+            }\n+            return 0;\n+        });\n+        for (var i = 0; i < crates_text.length; ++i) {\n+            var option = document.createElement(\"option\");\n+            option.value = crates_text[i];\n+            option.innerText = crates_text[i];\n+            elem.appendChild(option);\n+        }\n+    }\n+\n+    window.addSearchOptions = addSearchOptions;\n }());\n \n // Sets the focus on the search bar at the top of the page"}, {"sha": "cbf55c12244d1a4ef6243dc1abd4e11433a64e37", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "patch": "@@ -614,27 +614,47 @@ a {\n .search-container {\n \tposition: relative;\n }\n+.search-container > div {\n+\tdisplay: inline-flex;\n+\twidth: calc(100% - 34px);\n+}\n+#crate-search {\n+\tmargin-top: 5px;\n+\tpadding: 6px;\n+\tpadding-right: 12px;\n+\tborder: 0;\n+\tborder-right: 0;\n+\tborder-radius: 4px 0 0 4px;\n+\toutline: none;\n+\tcursor: pointer;\n+\tborder-right: 1px solid;\n+\t-moz-appearance: none;\n+\t-webkit-appearance: none;\n+\t/* Removes default arrow from firefox */\n+\ttext-indent: 0.01px;\n+\ttext-overflow: \"\";\n+}\n .search-container > .top-button {\n \tposition: absolute;\n \tright: 0;\n \ttop: 10px;\n }\n .search-input {\n-\twidth: calc(100% - 34px);\n \t/* Override Normalize.css: we have margins and do\n \t not want to overflow - the `moz` attribute is necessary\n \t until Firefox 29, too early to drop at this point */\n \t-moz-box-sizing: border-box !important;\n \tbox-sizing: border-box !important;\n \toutline: none;\n \tborder: none;\n-\tborder-radius: 1px;\n+\tborder-radius: 0 1px 1px 0;\n \tmargin-top: 5px;\n \tpadding: 10px 16px;\n \tfont-size: 17px;\n \ttransition: border-color 300ms ease;\n \ttransition: border-radius 300ms ease-in-out;\n \ttransition: box-shadow 300ms ease-in-out;\n+\twidth: 100%;\n }\n \n .search-input:focus {"}, {"sha": "8fdf39ccaa1a6c501bdf4cf96130a88b6c863d65", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "patch": "@@ -182,9 +182,15 @@ a.test-arrow {\n \tcolor: #999;\n }\n \n+#crate-search {\n+\tcolor: #111;\n+\tbackground-color: #f0f0f0;\n+\tborder-color: #000;\n+}\n+\n .search-input {\n \tcolor: #111;\n-\tbox-shadow: 0 0 0 1px #000, 0 0 0 2px transparent;\n+\tbox-shadow: 1px 0 0 1px #000, 0 0 0 2px transparent;\n \tbackground-color: #f0f0f0;\n }\n "}, {"sha": "425aa601e9b3e06016eaaed85dfdec9de4575422", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/dd717deccb3a4698beac8edb0a75e2efb6f08ebb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=dd717deccb3a4698beac8edb0a75e2efb6f08ebb", "patch": "@@ -182,9 +182,16 @@ a.test-arrow {\n \tcolor: #999;\n }\n \n+#crate-search {\n+\tcolor: #555;\n+\tbackground-color: white;\n+\tborder-color: #e0e0e0;\n+\tbox-shadow: 0px 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n+}\n+\n .search-input {\n \tcolor: #555;\n-\tbox-shadow: 0 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n+\tbox-shadow: 1px 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n \tbackground-color: white;\n }\n "}]}