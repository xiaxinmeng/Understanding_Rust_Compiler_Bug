{"sha": "ed542df9bc798bbdfe4d18308b9a6528bebf0461", "node_id": "C_kwDOAAsO6NoAKGVkNTQyZGY5YmM3OThiYmRmZTRkMTgzMDhiOWE2NTI4YmViZjA0NjE", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2022-07-09T22:52:37Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2022-07-09T22:52:37Z"}, "message": "Fix binary name in help message for test binaries", "tree": {"sha": "67a3b067196914720f31fa49243df26cd0411342", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67a3b067196914720f31fa49243df26cd0411342"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed542df9bc798bbdfe4d18308b9a6528bebf0461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed542df9bc798bbdfe4d18308b9a6528bebf0461", "html_url": "https://github.com/rust-lang/rust/commit/ed542df9bc798bbdfe4d18308b9a6528bebf0461", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed542df9bc798bbdfe4d18308b9a6528bebf0461/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c20ab744b0f82646d90ce9d25894823abc9c669", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c20ab744b0f82646d90ce9d25894823abc9c669", "html_url": "https://github.com/rust-lang/rust/commit/6c20ab744b0f82646d90ce9d25894823abc9c669"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f981b9c4954762c21ceee2d44325934090c38405", "filename": "library/test/src/cli.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ed542df9bc798bbdfe4d18308b9a6528bebf0461/library%2Ftest%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed542df9bc798bbdfe4d18308b9a6528bebf0461/library%2Ftest%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fcli.rs?ref=ed542df9bc798bbdfe4d18308b9a6528bebf0461", "patch": "@@ -196,6 +196,7 @@ Test Attributes:\n pub fn parse_opts(args: &[String]) -> Option<OptRes> {\n     // Parse matches.\n     let opts = optgroups();\n+    let binary = args.get(0).map(|c| &**c).unwrap_or(\"...\");\n     let args = args.get(1..).unwrap_or(args);\n     let matches = match opts.parse(args) {\n         Ok(m) => m,\n@@ -205,7 +206,7 @@ pub fn parse_opts(args: &[String]) -> Option<OptRes> {\n     // Check if help was requested.\n     if matches.opt_present(\"h\") {\n         // Show help and do nothing more.\n-        usage(&args[0], &opts);\n+        usage(binary, &opts);\n         return None;\n     }\n "}]}