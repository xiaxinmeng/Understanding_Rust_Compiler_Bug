{"sha": "1d2e9818d60df37afea07d9c3547371ad2879101", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMmU5ODE4ZDYwZGYzN2FmZWEwN2Q5YzM1NDczNzFhZDI4NzkxMDE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-18T11:53:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-18T11:53:46Z"}, "message": "internal: parser cleanups", "tree": {"sha": "e59b0f48074a434425d5848d9d4ffe0b00d84d64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e59b0f48074a434425d5848d9d4ffe0b00d84d64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d2e9818d60df37afea07d9c3547371ad2879101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d2e9818d60df37afea07d9c3547371ad2879101", "html_url": "https://github.com/rust-lang/rust/commit/1d2e9818d60df37afea07d9c3547371ad2879101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d2e9818d60df37afea07d9c3547371ad2879101/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "html_url": "https://github.com/rust-lang/rust/commit/aaadaa40bd17db4221a9c84e5cad6eee54afc13e"}], "stats": {"total": 142, "additions": 58, "deletions": 84}, "files": [{"sha": "dd1ecf97e44d9281a278f814cf1d980a6bfa6357", "filename": "crates/parser/src/grammar/items/traits.rs", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -42,24 +42,23 @@ pub(super) fn trait_(p: &mut Parser, m: Marker) {\n     m.complete(p, TRAIT);\n }\n \n-// test impl_def\n-// impl Foo {}\n+// test impl_item\n+// impl S {}\n pub(super) fn impl_(p: &mut Parser, m: Marker) {\n-    assert!(p.at(T![impl]));\n     p.bump(T![impl]);\n-    if choose_type_params_over_qpath(p) {\n+    if p.at(T![<]) && not_a_qualified_path(p) {\n         type_params::opt_generic_param_list(p);\n     }\n \n-    // test impl_def_const\n-    // impl const Send for X {}\n+    // test impl_item_const\n+    // impl const Send for S {}\n     p.eat(T![const]);\n \n     // FIXME: never type\n     // impl ! {}\n \n-    // test impl_def_neg\n-    // impl !Send for X {}\n+    // test impl_item_neg\n+    // impl !Send for S {}\n     p.eat(T![!]);\n     impl_type(p);\n     if p.eat(T![for]) {\n@@ -74,7 +73,7 @@ pub(super) fn impl_(p: &mut Parser, m: Marker) {\n     m.complete(p, IMPL);\n }\n \n-// test impl_item_list\n+// test assoc_item_list\n // impl F {\n //     type A = i32;\n //     const B: i32 = 92;\n@@ -83,14 +82,11 @@ pub(super) fn impl_(p: &mut Parser, m: Marker) {\n // }\n pub(crate) fn assoc_item_list(p: &mut Parser) {\n     assert!(p.at(T!['{']));\n+\n     let m = p.start();\n     p.bump(T!['{']);\n-    // test impl_inner_attributes\n-    // enum F{}\n-    // impl F {\n-    //      //! This is a doc comment\n-    //      #![doc(\"This is also a doc comment\")]\n-    // }\n+    // test assoc_item_list_inner_attrs\n+    // impl S { #![attr] }\n     attributes::inner_attrs(p);\n \n     while !p.at(EOF) && !p.at(T!['}']) {\n@@ -106,7 +102,7 @@ pub(crate) fn assoc_item_list(p: &mut Parser) {\n \n // test impl_type_params\n // impl<const N: u32> Bar<N> {}\n-fn choose_type_params_over_qpath(p: &Parser) -> bool {\n+fn not_a_qualified_path(p: &Parser) -> bool {\n     // There's an ambiguity between generic parameters and qualified paths in impls.\n     // If we see `<` it may start both, so we have to inspect some following tokens.\n     // The following combinations can only start generics,\n@@ -123,9 +119,6 @@ fn choose_type_params_over_qpath(p: &Parser) -> bool {\n     // we disambiguate it in favor of generics (`impl<T> ::absolute::Path<T> { ... }`)\n     // because this is what almost always expected in practice, qualified paths in impls\n     // (`impl <Type>::AssocTy { ... }`) aren't even allowed by type checker at the moment.\n-    if !p.at(T![<]) {\n-        return false;\n-    }\n     if p.nth(1) == T![#] || p.nth(1) == T![>] || p.nth(1) == T![const] {\n         return true;\n     }"}, {"sha": "dc7f6295b2228eb46dca5cff2f214a33c6012507", "filename": "crates/syntax/test_data/parser/inline/ok/0021_assoc_item_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_assoc_item_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_assoc_item_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_assoc_item_list.rast?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0021_impl_item_list.rast"}, {"sha": "f108514879dbbf18493b585432341e7c67deabcf", "filename": "crates/syntax/test_data/parser/inline/ok/0021_assoc_item_list.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_assoc_item_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_assoc_item_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_assoc_item_list.rs?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0021_impl_item_list.rs"}, {"sha": "b7527c8705acb07589470ae7a882cf2b9c7cabb9", "filename": "crates/syntax/test_data/parser/inline/ok/0063_impl_def_neg.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rs?ref=aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "patch": "@@ -1 +0,0 @@\n-impl !Send for X {}"}, {"sha": "4ab352223b4dd79ce577d5351f651806a5b54af1", "filename": "crates/syntax/test_data/parser/inline/ok/0063_impl_item_neg.rast", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_item_neg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_item_neg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_item_neg.rast?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -15,7 +15,7 @@ SOURCE_FILE@0..20\n       PATH@15..16\n         PATH_SEGMENT@15..16\n           NAME_REF@15..16\n-            IDENT@15..16 \"X\"\n+            IDENT@15..16 \"S\"\n     WHITESPACE@16..17 \" \"\n     ASSOC_ITEM_LIST@17..19\n       L_CURLY@17..18 \"{\"", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0063_impl_def_neg.rast"}, {"sha": "a7bd4b048d6c7ab08c041357a712850f48730f3e", "filename": "crates/syntax/test_data/parser/inline/ok/0063_impl_item_neg.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_item_neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_item_neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_item_neg.rs?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -0,0 +1 @@\n+impl !Send for S {}"}, {"sha": "209711fc49637711f6895a09babdfeb1e4648f04", "filename": "crates/syntax/test_data/parser/inline/ok/0079_impl_def.rast", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast", "raw_url": "https://github.com/rust-lang/rust/raw/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast?ref=aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "patch": "@@ -1,14 +0,0 @@\n-SOURCE_FILE@0..12\n-  IMPL@0..11\n-    IMPL_KW@0..4 \"impl\"\n-    WHITESPACE@4..5 \" \"\n-    PATH_TYPE@5..8\n-      PATH@5..8\n-        PATH_SEGMENT@5..8\n-          NAME_REF@5..8\n-            IDENT@5..8 \"Foo\"\n-    WHITESPACE@8..9 \" \"\n-    ASSOC_ITEM_LIST@9..11\n-      L_CURLY@9..10 \"{\"\n-      R_CURLY@10..11 \"}\"\n-  WHITESPACE@11..12 \"\\n\""}, {"sha": "d6337f6b3a77b519e9937c7d0ae645e8c4b14912", "filename": "crates/syntax/test_data/parser/inline/ok/0079_impl_def.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rs?ref=aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "patch": "@@ -1 +0,0 @@\n-impl Foo {}"}, {"sha": "6516a78f831e6b27e6067448b0cb83cb897fd9d9", "filename": "crates/syntax/test_data/parser/inline/ok/0079_impl_item.rast", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_item.rast?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -0,0 +1,14 @@\n+SOURCE_FILE@0..10\n+  IMPL@0..9\n+    IMPL_KW@0..4 \"impl\"\n+    WHITESPACE@4..5 \" \"\n+    PATH_TYPE@5..6\n+      PATH@5..6\n+        PATH_SEGMENT@5..6\n+          NAME_REF@5..6\n+            IDENT@5..6 \"S\"\n+    WHITESPACE@6..7 \" \"\n+    ASSOC_ITEM_LIST@7..9\n+      L_CURLY@7..8 \"{\"\n+      R_CURLY@8..9 \"}\"\n+  WHITESPACE@9..10 \"\\n\""}, {"sha": "647799d7c14f95154bd555f79ffbaae6c50a2db6", "filename": "crates/syntax/test_data/parser/inline/ok/0079_impl_item.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_item.rs?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -0,0 +1 @@\n+impl S {}"}, {"sha": "24ac1d66a4f3e20dfb77779fb3effc49efd283e9", "filename": "crates/syntax/test_data/parser/inline/ok/0118_impl_inner_attributes.rast", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast?ref=aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "patch": "@@ -1,41 +0,0 @@\n-SOURCE_FILE@0..94\n-  ENUM@0..8\n-    ENUM_KW@0..4 \"enum\"\n-    WHITESPACE@4..5 \" \"\n-    NAME@5..6\n-      IDENT@5..6 \"F\"\n-    VARIANT_LIST@6..8\n-      L_CURLY@6..7 \"{\"\n-      R_CURLY@7..8 \"}\"\n-  WHITESPACE@8..9 \"\\n\"\n-  IMPL@9..93\n-    IMPL_KW@9..13 \"impl\"\n-    WHITESPACE@13..14 \" \"\n-    PATH_TYPE@14..15\n-      PATH@14..15\n-        PATH_SEGMENT@14..15\n-          NAME_REF@14..15\n-            IDENT@14..15 \"F\"\n-    WHITESPACE@15..16 \" \"\n-    ASSOC_ITEM_LIST@16..93\n-      L_CURLY@16..17 \"{\"\n-      WHITESPACE@17..23 \"\\n     \"\n-      COMMENT@23..48 \"//! This is a doc com ...\"\n-      WHITESPACE@48..54 \"\\n     \"\n-      ATTR@54..91\n-        POUND@54..55 \"#\"\n-        BANG@55..56 \"!\"\n-        L_BRACK@56..57 \"[\"\n-        META@57..90\n-          PATH@57..60\n-            PATH_SEGMENT@57..60\n-              NAME_REF@57..60\n-                IDENT@57..60 \"doc\"\n-          TOKEN_TREE@60..90\n-            L_PAREN@60..61 \"(\"\n-            STRING@61..89 \"\\\"This is also a doc c ...\"\n-            R_PAREN@89..90 \")\"\n-        R_BRACK@90..91 \"]\"\n-      WHITESPACE@91..92 \"\\n\"\n-      R_CURLY@92..93 \"}\"\n-  WHITESPACE@93..94 \"\\n\""}, {"sha": "4d68cceb710ebb1b920d839f3efa958d66e4bbd9", "filename": "crates/syntax/test_data/parser/inline/ok/0118_impl_inner_attributes.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rs?ref=aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "patch": "@@ -1,5 +0,0 @@\n-enum F{}\n-impl F {\n-     //! This is a doc comment\n-     #![doc(\"This is also a doc comment\")]\n-}"}, {"sha": "8d68864693b7811fffb9cfb39ec30caa24f94fc5", "filename": "crates/syntax/test_data/parser/inline/ok/0161_impl_def_const.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_def_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaadaa40bd17db4221a9c84e5cad6eee54afc13e/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_def_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_def_const.rs?ref=aaadaa40bd17db4221a9c84e5cad6eee54afc13e", "patch": "@@ -1 +0,0 @@\n-impl const Send for X {}"}, {"sha": "925dfa2f1131af57ab8d03894df63dc0bf03e2cb", "filename": "crates/syntax/test_data/parser/inline/ok/0161_impl_item_const.rast", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_item_const.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_item_const.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_item_const.rast?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -16,7 +16,7 @@ SOURCE_FILE@0..25\n       PATH@20..21\n         PATH_SEGMENT@20..21\n           NAME_REF@20..21\n-            IDENT@20..21 \"X\"\n+            IDENT@20..21 \"S\"\n     WHITESPACE@21..22 \" \"\n     ASSOC_ITEM_LIST@22..24\n       L_CURLY@22..23 \"{\"", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0161_impl_def_const.rast"}, {"sha": "3252d6f362a8c99da0b0ece1bc14b32c213ab27f", "filename": "crates/syntax/test_data/parser/inline/ok/0161_impl_item_const.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_item_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_item_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_impl_item_const.rs?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -0,0 +1 @@\n+impl const Send for S {}"}, {"sha": "65b4743d14146015648217b423460fad11b80e1e", "filename": "crates/syntax/test_data/parser/inline/ok/0177_assoc_item_list_inner_attrs.rast", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0177_assoc_item_list_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0177_assoc_item_list_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0177_assoc_item_list_inner_attrs.rast?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -0,0 +1,26 @@\n+SOURCE_FILE@0..20\n+  IMPL@0..19\n+    IMPL_KW@0..4 \"impl\"\n+    WHITESPACE@4..5 \" \"\n+    PATH_TYPE@5..6\n+      PATH@5..6\n+        PATH_SEGMENT@5..6\n+          NAME_REF@5..6\n+            IDENT@5..6 \"S\"\n+    WHITESPACE@6..7 \" \"\n+    ASSOC_ITEM_LIST@7..19\n+      L_CURLY@7..8 \"{\"\n+      WHITESPACE@8..9 \" \"\n+      ATTR@9..17\n+        POUND@9..10 \"#\"\n+        BANG@10..11 \"!\"\n+        L_BRACK@11..12 \"[\"\n+        META@12..16\n+          PATH@12..16\n+            PATH_SEGMENT@12..16\n+              NAME_REF@12..16\n+                IDENT@12..16 \"attr\"\n+        R_BRACK@16..17 \"]\"\n+      WHITESPACE@17..18 \" \"\n+      R_CURLY@18..19 \"}\"\n+  WHITESPACE@19..20 \"\\n\""}, {"sha": "915e2c932723a1687eab594a9aeb4a1ea8569954", "filename": "crates/syntax/test_data/parser/inline/ok/0177_assoc_item_list_inner_attrs.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0177_assoc_item_list_inner_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2e9818d60df37afea07d9c3547371ad2879101/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0177_assoc_item_list_inner_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0177_assoc_item_list_inner_attrs.rs?ref=1d2e9818d60df37afea07d9c3547371ad2879101", "patch": "@@ -0,0 +1 @@\n+impl S { #![attr] }"}]}