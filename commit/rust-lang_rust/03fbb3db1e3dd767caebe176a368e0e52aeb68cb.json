{"sha": "03fbb3db1e3dd767caebe176a368e0e52aeb68cb", "node_id": "C_kwDOAAsO6NoAKDAzZmJiM2RiMWUzZGQ3NjdjYWViZTE3NmEzNjhlMGU1MmFlYjY4Y2I", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-01T21:43:39Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-03T15:59:21Z"}, "message": "Expand parameters.", "tree": {"sha": "953c0ab353a58c46e9b85ac72354d0b18801356e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/953c0ab353a58c46e9b85ac72354d0b18801356e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03fbb3db1e3dd767caebe176a368e0e52aeb68cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03fbb3db1e3dd767caebe176a368e0e52aeb68cb", "html_url": "https://github.com/rust-lang/rust/commit/03fbb3db1e3dd767caebe176a368e0e52aeb68cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03fbb3db1e3dd767caebe176a368e0e52aeb68cb/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73aeeaeeee456b58f3d45041d4169318c2b7130", "url": "https://api.github.com/repos/rust-lang/rust/commits/e73aeeaeeee456b58f3d45041d4169318c2b7130", "html_url": "https://github.com/rust-lang/rust/commit/e73aeeaeeee456b58f3d45041d4169318c2b7130"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "de63e07b7d5777944062abeee77be6cf50db4449", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/03fbb3db1e3dd767caebe176a368e0e52aeb68cb/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fbb3db1e3dd767caebe176a368e0e52aeb68cb/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=03fbb3db1e3dd767caebe176a368e0e52aeb68cb", "patch": "@@ -144,8 +144,8 @@ impl<'a, 'tcx> Visitor<'a, 'tcx> for MatchVisitor<'a, '_, 'tcx> {\n             ExprKind::Let { box ref pat, expr } => {\n                 self.check_let(pat, expr, self.let_source, ex.span);\n             }\n-            ExprKind::LogicalOp { op: LogicalOp::And, .. } => {\n-                self.check_let_chain(ex, self.let_source);\n+            ExprKind::LogicalOp { op: LogicalOp::And, lhs, rhs } => {\n+                self.check_let_chain(self.let_source, ex.span, lhs, rhs);\n             }\n             _ => {}\n         };\n@@ -296,13 +296,17 @@ impl<'p, 'tcx> MatchVisitor<'_, 'p, 'tcx> {\n     }\n \n     #[instrument(level = \"trace\", skip(self))]\n-    fn check_let_chain(&mut self, top_expr: &Expr<'tcx>, let_source: LetSource) {\n+    fn check_let_chain(\n+        &mut self,\n+        let_source: LetSource,\n+        top_expr_span: Span,\n+        mut lhs: ExprId,\n+        rhs: ExprId,\n+    ) {\n         if let LetSource::None = let_source {\n             return;\n         }\n \n-        let ExprKind::LogicalOp { op: LogicalOp::And, mut lhs, rhs } = top_expr.kind else { bug!() };\n-\n         // Lint level enclosing the next `lhs`.\n         let mut cur_lint_level = self.lint_level;\n \n@@ -367,7 +371,7 @@ impl<'p, 'tcx> MatchVisitor<'_, 'p, 'tcx> {\n                 self.lint_level,\n                 let_source,\n                 chain_refutabilities.len(),\n-                top_expr.span,\n+                top_expr_span,\n             );\n             return;\n         }"}]}