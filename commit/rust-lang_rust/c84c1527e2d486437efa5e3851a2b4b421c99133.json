{"sha": "c84c1527e2d486437efa5e3851a2b4b421c99133", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NGMxNTI3ZTJkNDg2NDM3ZWZhNWUzODUxYTJiNGI0MjFjOTkxMzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-10T08:23:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-10T08:28:24Z"}, "message": "factor grabbing of cargo options into separate function and make it better", "tree": {"sha": "96580dc1a73f9bb294c57607fa85cf677b343da9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96580dc1a73f9bb294c57607fa85cf677b343da9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c84c1527e2d486437efa5e3851a2b4b421c99133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c84c1527e2d486437efa5e3851a2b4b421c99133", "html_url": "https://github.com/rust-lang/rust/commit/c84c1527e2d486437efa5e3851a2b4b421c99133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c84c1527e2d486437efa5e3851a2b4b421c99133/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bccadeb4f7cbeeb14097a365653148afe8bbd159", "url": "https://api.github.com/repos/rust-lang/rust/commits/bccadeb4f7cbeeb14097a365653148afe8bbd159", "html_url": "https://github.com/rust-lang/rust/commit/bccadeb4f7cbeeb14097a365653148afe8bbd159"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "436b6a9430bf48a66a3466dfec08c5b76b5fc891", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c84c1527e2d486437efa5e3851a2b4b421c99133/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84c1527e2d486437efa5e3851a2b4b421c99133/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=c84c1527e2d486437efa5e3851a2b4b421c99133", "patch": "@@ -53,25 +53,39 @@ fn show_error(msg: String) -> ! {\n     std::process::exit(1)\n }\n \n-fn list_targets(mut args: impl Iterator<Item=String>) -> impl Iterator<Item=cargo_metadata::Target> {\n+fn get_arg_flag_value(name: &str) -> Option<String> {\n+    // stop searching at `--`\n+    let mut args = std::env::args().skip_while(|val| !(val.starts_with(name) || val == \"--\"));\n+\n+    match args.next() {\n+        Some(ref p) if p == \"--\" => None,\n+        Some(ref p) if p == name => args.next(),\n+        Some(p) => {\n+            // Make sure this really starts with `$name=`, we didn't test for the `=` yet.\n+            let v = &p[name.len()..]; // strip leading `$name`\n+            if v.starts_with('=') {\n+                Some(v[1..].to_owned()) // strip leading `=`\n+            } else {\n+                None\n+            }\n+        },\n+        None => None,\n+    }\n+}\n+\n+fn list_targets() -> impl Iterator<Item=cargo_metadata::Target> {\n     // We need to get the manifest, and then the metadata, to enumerate targets.\n-    let manifest_path_arg = args.find(|val| {\n-        val.starts_with(\"--manifest-path=\")\n-    });\n+    let manifest_path = get_arg_flag_value(\"--manifest-path\").map(PathBuf::from);\n \n     let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(\n-        manifest_path_arg.as_ref().map(AsRef::as_ref),\n+        manifest_path.as_ref().map(AsRef::as_ref),\n     )\n     {\n         metadata\n     } else {\n         show_error(format!(\"error: Could not obtain cargo metadata.\"));\n     };\n \n-    let manifest_path = manifest_path_arg.map(|arg| {\n-        PathBuf::from(Path::new(&arg[\"--manifest-path=\".len()..]))\n-    });\n-\n     let current_dir = std::env::current_dir();\n \n     let package_index = metadata\n@@ -232,7 +246,7 @@ fn main() {\n         }\n \n         // Now run the command.\n-        for target in list_targets(std::env::args().skip(skip)) {\n+        for target in list_targets() {\n             let args = std::env::args().skip(skip);\n             let kind = target.kind.get(0).expect(\n                 \"badly formatted cargo metadata: target::kind is an empty array\","}]}