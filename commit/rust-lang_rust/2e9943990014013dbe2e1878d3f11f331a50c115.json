{"sha": "2e9943990014013dbe2e1878d3f11f331a50c115", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOTk0Mzk5MDAxNDAxM2RiZTJlMTg3OGQzZjExZjMzMWE1MGMxMTU=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-18T08:59:03Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-18T09:01:09Z"}, "message": "Replace unnecessary map_or_else with map_or", "tree": {"sha": "3d52a66a2a11b83c72d5ef6484f725ec7c5ba10a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d52a66a2a11b83c72d5ef6484f725ec7c5ba10a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e9943990014013dbe2e1878d3f11f331a50c115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9943990014013dbe2e1878d3f11f331a50c115", "html_url": "https://github.com/rust-lang/rust/commit/2e9943990014013dbe2e1878d3f11f331a50c115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e9943990014013dbe2e1878d3f11f331a50c115/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3a0f68453ee695495d88db2d3de3aadedaac3d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a0f68453ee695495d88db2d3de3aadedaac3d9", "html_url": "https://github.com/rust-lang/rust/commit/f3a0f68453ee695495d88db2d3de3aadedaac3d9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "752e57e4b6f1a78fdf49976b407fc8839112cc72", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e9943990014013dbe2e1878d3f11f331a50c115/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9943990014013dbe2e1878d3f11f331a50c115/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=2e9943990014013dbe2e1878d3f11f331a50c115", "patch": "@@ -968,7 +968,7 @@ fn warn_if_doc(cx: &EarlyContext<'_>, node_span: Span, node_kind: &str, attrs: &\n     while let Some(attr) = attrs.next() {\n         if attr.is_doc_comment() {\n             sugared_span =\n-                Some(sugared_span.map_or_else(|| attr.span, |span| span.with_hi(attr.span.hi())));\n+                Some(sugared_span.map_or(attr.span, |span| span.with_hi(attr.span.hi())));\n         }\n \n         if attrs.peek().map(|next_attr| next_attr.is_doc_comment()).unwrap_or_default() {"}, {"sha": "5da4be4e98279ce7ba7598edfed25037883ba837", "filename": "compiler/rustc_middle/src/hir/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e9943990014013dbe2e1878d3f11f331a50c115/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9943990014013dbe2e1878d3f11f331a50c115/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fplace.rs?ref=2e9943990014013dbe2e1878d3f11f331a50c115", "patch": "@@ -103,7 +103,7 @@ impl<'tcx> Place<'tcx> {\n \n     /// Returns the type of this `Place` after all projections have been applied.\n     pub fn ty(&self) -> Ty<'tcx> {\n-        self.projections.last().map_or_else(|| self.base_ty, |proj| proj.ty)\n+        self.projections.last().map_or(self.base_ty, |proj| proj.ty)\n     }\n \n     /// Returns the type of this `Place` immediately before `projection_index`th projection"}]}