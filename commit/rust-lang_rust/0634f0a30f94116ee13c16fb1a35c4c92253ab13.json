{"sha": "0634f0a30f94116ee13c16fb1a35c4c92253ab13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MzRmMGEzMGY5NDExNmVlMTNjMTZmYjFhMzVjNGM5MjI1M2FiMTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-03T00:18:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-03T00:18:26Z"}, "message": "Auto merge of #41624 - RalfJung:mutexguard-sync, r=alexcrichton\n\nMutexGuard<T> may be Sync only if T is Sync\n\nFixes #41622\n\nThis is a breaking change. Does that imply any further process?\n\nI am not sure whether I wrote that \"compilation must fail\"-test correctly, but at least it is passing here with the patch applied. Same for the `since = \"1.18.0\"`, I just picked it because I had to pick something.", "tree": {"sha": "f3e85c93ba0a3053a560a1d16fc09d1212e04ae7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3e85c93ba0a3053a560a1d16fc09d1212e04ae7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0634f0a30f94116ee13c16fb1a35c4c92253ab13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0634f0a30f94116ee13c16fb1a35c4c92253ab13", "html_url": "https://github.com/rust-lang/rust/commit/0634f0a30f94116ee13c16fb1a35c4c92253ab13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0634f0a30f94116ee13c16fb1a35c4c92253ab13/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d81b14b80a076fa249a4b7022688c600f2e9590", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d81b14b80a076fa249a4b7022688c600f2e9590", "html_url": "https://github.com/rust-lang/rust/commit/4d81b14b80a076fa249a4b7022688c600f2e9590"}, {"sha": "23522f6cabf9fc5803411c3dec4a90c56cc3dab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/23522f6cabf9fc5803411c3dec4a90c56cc3dab2", "html_url": "https://github.com/rust-lang/rust/commit/23522f6cabf9fc5803411c3dec4a90c56cc3dab2"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "5c3eaa4668d28c091560eff631d8b2edc61df2e8", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0634f0a30f94116ee13c16fb1a35c4c92253ab13/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0634f0a30f94116ee13c16fb1a35c4c92253ab13/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=0634f0a30f94116ee13c16fb1a35c4c92253ab13", "patch": "@@ -10,7 +10,6 @@\n \n use cell::UnsafeCell;\n use fmt;\n-use marker;\n use mem;\n use ops::{Deref, DerefMut};\n use ptr;\n@@ -153,7 +152,9 @@ pub struct MutexGuard<'a, T: ?Sized + 'a> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T: ?Sized> !marker::Send for MutexGuard<'a, T> {}\n+impl<'a, T: ?Sized> !Send for MutexGuard<'a, T> { }\n+#[stable(feature = \"mutexguard\", since = \"1.18.0\")]\n+unsafe impl<'a, T: ?Sized + Sync> Sync for MutexGuard<'a, T> { }\n \n impl<T> Mutex<T> {\n     /// Creates a new mutex in an unlocked state ready for use.\n@@ -459,9 +460,6 @@ mod tests {\n     #[derive(Eq, PartialEq, Debug)]\n     struct NonCopy(i32);\n \n-    unsafe impl<T: Send> Send for Packet<T> {}\n-    unsafe impl<T> Sync for Packet<T> {}\n-\n     #[test]\n     fn smoke() {\n         let m = Mutex::new(());"}, {"sha": "861714720c57a4c766ec83c7447497688dfcfc3e", "filename": "src/test/compile-fail/mutexguard-sync.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0634f0a30f94116ee13c16fb1a35c4c92253ab13/src%2Ftest%2Fcompile-fail%2Fmutexguard-sync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0634f0a30f94116ee13c16fb1a35c4c92253ab13/src%2Ftest%2Fcompile-fail%2Fmutexguard-sync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmutexguard-sync.rs?ref=0634f0a30f94116ee13c16fb1a35c4c92253ab13", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// MutexGuard<Cell<i32>> must not be Sync, that would be unsound.\n+use std::sync::Mutex;\n+use std::cell::Cell;\n+\n+fn test_sync<T: Sync>(_t: T) {}\n+\n+fn main()\n+{\n+    let m = Mutex::new(Cell::new(0i32));\n+    let guard = m.lock().unwrap();\n+    test_sync(guard); //~ ERROR the trait bound\n+}"}]}