{"sha": "372c7de20104bd3f968cda6429dfad2c1d559a35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MmM3ZGUyMDEwNGJkM2Y5NjhjZGE2NDI5ZGZhZDJjMWQ1NTlhMzU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-10-01T18:35:27Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-10-02T03:44:30Z"}, "message": "Add struct to auto_serialize2 test", "tree": {"sha": "34117c9355bfe72ca8232ab1cc87171215a86b36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34117c9355bfe72ca8232ab1cc87171215a86b36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/372c7de20104bd3f968cda6429dfad2c1d559a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/372c7de20104bd3f968cda6429dfad2c1d559a35", "html_url": "https://github.com/rust-lang/rust/commit/372c7de20104bd3f968cda6429dfad2c1d559a35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/372c7de20104bd3f968cda6429dfad2c1d559a35/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f4160ee3bd4ca0779821c24240af525d07d859a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f4160ee3bd4ca0779821c24240af525d07d859a", "html_url": "https://github.com/rust-lang/rust/commit/4f4160ee3bd4ca0779821c24240af525d07d859a"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "f3f7e80e8a263ccf1d34d650addd4e0a1343ca2a", "filename": "src/test/run-pass/auto_serialize2.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/372c7de20104bd3f968cda6429dfad2c1d559a35/src%2Ftest%2Frun-pass%2Fauto_serialize2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/372c7de20104bd3f968cda6429dfad2c1d559a35/src%2Ftest%2Frun-pass%2Fauto_serialize2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto_serialize2.rs?ref=372c7de20104bd3f968cda6429dfad2c1d559a35", "patch": "@@ -10,8 +10,8 @@ use std::serialization2::{Serializable, Deserializable, deserialize};\n use std::prettyprint2;\n \n fn test_ser_and_deser<A:Eq Serializable Deserializable>(\n-    a1: A,\n-    expected: ~str\n+    a1: &A,\n+    +expected: ~str\n ) {\n     // check the pretty printer:\n     let s = do io::with_str_writer |w| {\n@@ -27,7 +27,7 @@ fn test_ser_and_deser<A:Eq Serializable Deserializable>(\n     };\n     let d = ebml2::Doc(@bytes);\n     let a2: A = deserialize(&ebml2::Deserializer(d));\n-    assert a1 == a2;\n+    assert *a1 == a2;\n }\n \n #[auto_serialize2]\n@@ -121,7 +121,7 @@ type SomeRec = {v: ~[uint]};\n enum AnEnum = SomeRec;\n \n #[auto_serialize2]\n-type Point = {x: uint, y: uint};\n+struct Point {x: uint, y: uint}\n \n #[auto_serialize2]\n enum Quark<T> {\n@@ -133,24 +133,24 @@ enum Quark<T> {\n enum CLike { A, B, C }\n \n fn main() {\n-    test_ser_and_deser(Plus(@Minus(@Val(3u), @Val(10u)),\n-                            @Plus(@Val(22u), @Val(5u))),\n+    test_ser_and_deser(&Plus(@Minus(@Val(3u), @Val(10u)),\n+                             @Plus(@Val(22u), @Val(5u))),\n                        ~\"Plus(@Minus(@Val(3u), @Val(10u)), \\\n                         @Plus(@Val(22u), @Val(5u)))\");\n \n-    test_ser_and_deser({lo: 0u, hi: 5u, node: 22u},\n+    test_ser_and_deser(&{lo: 0u, hi: 5u, node: 22u},\n                        ~\"{lo: 0u, hi: 5u, node: 22u}\");\n \n-    test_ser_and_deser(AnEnum({v: ~[1u, 2u, 3u]}),\n+    test_ser_and_deser(&AnEnum({v: ~[1u, 2u, 3u]}),\n                        ~\"AnEnum({v: ~[1u, 2u, 3u]})\");\n \n-    test_ser_and_deser({x: 3u, y: 5u}, ~\"{x: 3u, y: 5u}\");\n+    test_ser_and_deser(&Point {x: 3u, y: 5u}, ~\"Point {x: 3u, y: 5u}\");\n \n-    test_ser_and_deser(@[1u, 2u, 3u], ~\"@[1u, 2u, 3u]\");\n+    test_ser_and_deser(&@[1u, 2u, 3u], ~\"@[1u, 2u, 3u]\");\n \n-    test_ser_and_deser(Top(22u), ~\"Top(22u)\");\n-    test_ser_and_deser(Bottom(222u), ~\"Bottom(222u)\");\n+    test_ser_and_deser(&Top(22u), ~\"Top(22u)\");\n+    test_ser_and_deser(&Bottom(222u), ~\"Bottom(222u)\");\n \n-    test_ser_and_deser(A, ~\"A\");\n-    test_ser_and_deser(B, ~\"B\");\n+    test_ser_and_deser(&A, ~\"A\");\n+    test_ser_and_deser(&B, ~\"B\");\n }"}]}