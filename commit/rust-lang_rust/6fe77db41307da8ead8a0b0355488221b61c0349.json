{"sha": "6fe77db41307da8ead8a0b0355488221b61c0349", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZTc3ZGI0MTMwN2RhOGVhZDhhMGIwMzU1NDg4MjIxYjYxYzAzNDk=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "github@adolfo.ochagavia.xyz", "date": "2018-10-11T15:16:12Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "github@adolfo.ochagavia.xyz", "date": "2018-10-11T15:16:12Z"}, "message": "Remove smart multiline comment join", "tree": {"sha": "d57e995a10c8f8faf837e9be327fe5c618148281", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d57e995a10c8f8faf837e9be327fe5c618148281"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fe77db41307da8ead8a0b0355488221b61c0349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fe77db41307da8ead8a0b0355488221b61c0349", "html_url": "https://github.com/rust-lang/rust/commit/6fe77db41307da8ead8a0b0355488221b61c0349", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fe77db41307da8ead8a0b0355488221b61c0349/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92f5ca64ae09ab996e83acb4017e355437eddc86", "url": "https://api.github.com/repos/rust-lang/rust/commits/92f5ca64ae09ab996e83acb4017e355437eddc86", "html_url": "https://github.com/rust-lang/rust/commit/92f5ca64ae09ab996e83acb4017e355437eddc86"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "1dc658f9b0947476266ef7d47965ba1b63b0a296", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/6fe77db41307da8ead8a0b0355488221b61c0349/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fe77db41307da8ead8a0b0355488221b61c0349/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=6fe77db41307da8ead8a0b0355488221b61c0349", "patch": "@@ -174,27 +174,10 @@ fn remove_newline(\n         );\n     } else if let (Some(_), Some(next)) = (ast::Comment::cast(prev), ast::Comment::cast(next)) {\n         // Removes: newline (incl. surrounding whitespace), start of the next comment\n-        let comment_text = next.text();\n-        if let Some(newline_pos) = comment_text.find('\\n') {\n-            // Special case for multiline comments: join the comment content but\n-            // keep the leading `/*`\n-\n-            let newline_offset = next.syntax().range().start()\n-                                + TextUnit::from(newline_pos as u32)\n-                                + TextUnit::of_char('\\n');\n-\n-            edit.insert(newline_offset, \"/*\".to_string());\n-            edit.delete(TextRange::from_to(\n-                node.range().start(),\n-                next.syntax().range().start() + TextUnit::of_str(next.prefix())\n-            ));\n-        } else {\n-            // Single-line comments\n-            edit.delete(TextRange::from_to(\n-                node.range().start(),\n-                next.syntax().range().start() + TextUnit::of_str(next.prefix())\n-            ));\n-        }\n+        edit.delete(TextRange::from_to(\n+            node.range().start(),\n+            next.syntax().range().start() + TextUnit::of_str(next.prefix())\n+        ));\n     } else {\n         // Remove newline but add a computed amount of whitespace characters\n         edit.replace(\n@@ -356,7 +339,7 @@ fn foo() {\n     }\n \n     #[test]\n-    fn test_join_lines_multiline_comments() {\n+    fn test_join_lines_multiline_comments_1() {\n         check_join_lines(r\"\n fn foo() {\n     // Hello<|>\n@@ -369,6 +352,24 @@ fn foo() {\n \");\n     }\n \n+    #[test]\n+    fn test_join_lines_multiline_comments_2() {\n+        check_join_lines(r\"\n+fn foo() {\n+    // The<|>\n+    /* quick\n+    brown\n+    fox! */\n+}\n+\", r\"\n+fn foo() {\n+    // The<|> quick\n+    brown\n+    fox! */\n+}\n+\");\n+    }\n+\n     fn check_join_lines_sel(before: &str, after: &str) {\n         let (sel, before) = extract_range(before);\n         let file = File::parse(&before);"}]}