{"sha": "f053f06973afde6400528e409d6332ea2171fda2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNTNmMDY5NzNhZmRlNjQwMDUyOGU0MDlkNjMzMmVhMjE3MWZkYTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T22:08:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T22:08:47Z"}, "message": "rustdoc: Record paths to native functions", "tree": {"sha": "430938fd99dd41bc97289167004b66320d3c3566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/430938fd99dd41bc97289167004b66320d3c3566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f053f06973afde6400528e409d6332ea2171fda2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f053f06973afde6400528e409d6332ea2171fda2", "html_url": "https://github.com/rust-lang/rust/commit/f053f06973afde6400528e409d6332ea2171fda2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f053f06973afde6400528e409d6332ea2171fda2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "681e5beac438c9c273b0bc434d4ccd17791c52a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/681e5beac438c9c273b0bc434d4ccd17791c52a9", "html_url": "https://github.com/rust-lang/rust/commit/681e5beac438c9c273b0bc434d4ccd17791c52a9"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "8589e3264e07b9abd623d45eb61f2f0e66dc5e3a", "filename": "src/rustdoc/path_pass.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f053f06973afde6400528e409d6332ea2171fda2/src%2Frustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f053f06973afde6400528e409d6332ea2171fda2/src%2Frustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpath_pass.rs?ref=f053f06973afde6400528e409d6332ea2171fda2", "patch": "@@ -16,7 +16,8 @@ fn run(srv: astsrv::srv, doc: doc::cratedoc) -> doc::cratedoc {\n     };\n     let fold = fold::fold({\n         fold_item: fold_item,\n-        fold_mod: fold_mod\n+        fold_mod: fold_mod,\n+        fold_nmod: fold_nmod\n         with *fold::default_any_fold(ctxt)\n     });\n     fold.fold_crate(fold, doc)\n@@ -42,6 +43,13 @@ fn fold_mod(fold: fold::fold<ctxt>, doc: doc::moddoc) -> doc::moddoc {\n     }\n }\n \n+fn fold_nmod(fold: fold::fold<ctxt>, doc: doc::nmoddoc) -> doc::nmoddoc {\n+    vec::push(fold.ctxt.path, doc.name());\n+    let doc = fold::default_seq_fold_nmod(fold, doc);\n+    vec::pop(fold.ctxt.path);\n+    ret doc;\n+}\n+\n #[test]\n fn should_record_mod_paths() {\n     let source = \"mod a { mod b { mod c { } } mod d { mod e { } } }\";\n@@ -61,4 +69,14 @@ fn should_record_fn_paths() {\n         let doc = run(srv, doc);\n         assert doc.topmod.mods()[0].fns()[0].path() == [\"a\"];\n     }\n+}\n+\n+#[test]\n+fn should_record_native_fn_paths() {\n+    let source = \"native mod a { fn b(); }\";\n+    astsrv::from_str(source) {|srv|\n+        let doc = extract::from_srv(srv, \"\");\n+        let doc = run(srv, doc);\n+        assert doc.topmod.nmods()[0].fns[0].path() == [\"a\"];\n+    }\n }\n\\ No newline at end of file"}]}