{"sha": "4e4ad3d27cd662b790395b61f3cda560fd4e2146", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNGFkM2QyN2NkNjYyYjc5MDM5NWI2MWYzY2RhNTYwZmQ0ZTIxNDY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-04T12:47:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-04T12:47:45Z"}, "message": "tuple patterns", "tree": {"sha": "51cce768f964e66771694800cede65d01f7664ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51cce768f964e66771694800cede65d01f7664ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e4ad3d27cd662b790395b61f3cda560fd4e2146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4ad3d27cd662b790395b61f3cda560fd4e2146", "html_url": "https://github.com/rust-lang/rust/commit/4e4ad3d27cd662b790395b61f3cda560fd4e2146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e4ad3d27cd662b790395b61f3cda560fd4e2146/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1c64505574f60c805c5b4a32e55e818b9e0eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1c64505574f60c805c5b4a32e55e818b9e0eee", "html_url": "https://github.com/rust-lang/rust/commit/8f1c64505574f60c805c5b4a32e55e818b9e0eee"}], "stats": {"total": 438, "additions": 434, "deletions": 4}, "files": [{"sha": "655ed2e404c0bd895ed3ec399e8c69fb51edd12c", "filename": "src/grammar.ron", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -126,6 +126,9 @@ Grammar(\n         \"REF_PAT\",\n         \"BIND_PAT\",\n         \"PLACEHOLDER_PAT\",\n+        \"PATH_PAT\",\n+        \"STRUCT_PAT\",\n+        \"TUPLE_PAT\",\n \n         \"TUPLE_EXPR\",\n         \"PATH_EXPR\","}, {"sha": "770274686c124ace3ea30ba759a9fce5db75f48b", "filename": "src/grammar/patterns.rs", "status": "modified", "additions": 88, "deletions": 4, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/src%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/src%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fpatterns.rs?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -1,14 +1,98 @@\n use super::*;\n \n pub(super) fn pattern(p: &mut Parser) {\n-    match p.current() {\n+    let la0 = p.nth(0);\n+    let la1 = p.nth(1);\n+    if la0 == REF_KW || la0 == MUT_KW\n+        || (la0 == IDENT && !(la1 == COLONCOLON || la1 == L_PAREN || la1 == L_CURLY)) {\n+        bind_pat(p, true);\n+        return;\n+    }\n+    if paths::is_path_start(p) {\n+        path_pat(p);\n+        return;\n+    }\n+\n+    match la0 {\n         UNDERSCORE => placeholder_pat(p),\n         AMPERSAND => ref_pat(p),\n-        IDENT | REF_KW | MUT_KW => bind_pat(p),\n         _ => p.err_and_bump(\"expected pattern\"),\n     }\n }\n \n+// test path_part\n+// fn foo() {\n+//     let foo::Bar = ();\n+//     let ::Bar = ();\n+//     let Bar { .. } = ();\n+//     let Bar(..) = ();\n+// }\n+fn path_pat(p: &mut Parser) {\n+    let m = p.start();\n+    paths::expr_path(p);\n+    let kind = match p.current() {\n+        L_PAREN => {\n+            tuple_pat_fields(p);\n+            TUPLE_PAT\n+        }\n+        L_CURLY => {\n+            struct_pat_fields(p);\n+            STRUCT_PAT\n+        }\n+        _ => PATH_PAT\n+    };\n+    m.complete(p, kind);\n+}\n+\n+// test tuple_pat_fields\n+// fn foo() {\n+//     let S() = ();\n+//     let S(_) = ();\n+//     let S(_,) = ();\n+//     let S(_, .. , x) = ();\n+// }\n+fn tuple_pat_fields(p: &mut Parser) {\n+    assert!(p.at(L_PAREN));\n+    p.bump();\n+    while !p.at(EOF) && !p.at(R_PAREN) {\n+        match p.current() {\n+            DOTDOT => p.bump(),\n+            _ => pattern(p),\n+        }\n+        if !p.at(R_PAREN) {\n+            p.expect(COMMA);\n+        }\n+    }\n+    p.expect(R_PAREN);\n+}\n+\n+// test struct_pat_fields\n+// fn foo() {\n+//     let S {} = ();\n+//     let S { f, ref mut g } = ();\n+//     let S { h: _, ..} = ();\n+//     let S { h: _, } = ();\n+// }\n+fn struct_pat_fields(p: &mut Parser) {\n+    assert!(p.at(L_CURLY));\n+    p.bump();\n+    while !p.at(EOF) && !p.at(R_CURLY) {\n+        match p.current() {\n+            DOTDOT => p.bump(),\n+            IDENT if p.nth(1) == COLON => {\n+                p.bump();\n+                p.bump();\n+                pattern(p);\n+            }\n+            _ => bind_pat(p, false),\n+        }\n+        if !p.at(R_CURLY) {\n+            p.expect(COMMA);\n+        }\n+    }\n+    p.expect(R_CURLY);\n+}\n+\n // test placeholder_pat\n // fn main() { let _ = (); }\n fn placeholder_pat(p: &mut Parser) {\n@@ -41,12 +125,12 @@ fn ref_pat(p: &mut Parser) {\n //     let e @ _ = ();\n //     let ref mut f @ g @ _ = ();\n // }\n-fn bind_pat(p: &mut Parser) {\n+fn bind_pat(p: &mut Parser, with_at: bool) {\n     let m = p.start();\n     p.eat(REF_KW);\n     p.eat(MUT_KW);\n     name(p);\n-    if p.eat(AT) {\n+    if with_at && p.eat(AT) {\n         pattern(p);\n     }\n     m.complete(p, BIND_PAT);"}, {"sha": "d7a57f4d09e3397e23f8db2f0dbdc6b683e84b09", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -118,6 +118,9 @@ pub enum SyntaxKind {\n     REF_PAT,\n     BIND_PAT,\n     PLACEHOLDER_PAT,\n+    PATH_PAT,\n+    STRUCT_PAT,\n+    TUPLE_PAT,\n     TUPLE_EXPR,\n     PATH_EXPR,\n     CALL_EXPR,\n@@ -331,6 +334,9 @@ impl SyntaxKind {\n             REF_PAT => &SyntaxInfo { name: \"REF_PAT\" },\n             BIND_PAT => &SyntaxInfo { name: \"BIND_PAT\" },\n             PLACEHOLDER_PAT => &SyntaxInfo { name: \"PLACEHOLDER_PAT\" },\n+            PATH_PAT => &SyntaxInfo { name: \"PATH_PAT\" },\n+            STRUCT_PAT => &SyntaxInfo { name: \"STRUCT_PAT\" },\n+            TUPLE_PAT => &SyntaxInfo { name: \"TUPLE_PAT\" },\n             TUPLE_EXPR => &SyntaxInfo { name: \"TUPLE_EXPR\" },\n             PATH_EXPR => &SyntaxInfo { name: \"PATH_EXPR\" },\n             CALL_EXPR => &SyntaxInfo { name: \"CALL_EXPR\" },"}, {"sha": "0dfe63629679baa0eef52b815e49ffa5dd6cfac8", "filename": "tests/data/parser/inline/0071_tuple_pat_fields.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0071_tuple_pat_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0071_tuple_pat_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0071_tuple_pat_fields.rs?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -0,0 +1,6 @@\n+fn foo() {\n+    let S() = ();\n+    let S(_) = ();\n+    let S(_,) = ();\n+    let S(_, .. , x) = ();\n+}"}, {"sha": "f0b3198f57658c28238bac75eb65b79b17cc0b25", "filename": "tests/data/parser/inline/0071_tuple_pat_fields.txt", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0071_tuple_pat_fields.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0071_tuple_pat_fields.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0071_tuple_pat_fields.txt?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -0,0 +1,103 @@\n+FILE@[0; 97)\n+  FN_ITEM@[0; 97)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 97)\n+      L_CURLY@[9; 10)\n+      LET_STMT@[10; 33)\n+        WHITESPACE@[10; 15)\n+        LET_KW@[15; 18)\n+        TUPLE_PAT@[18; 23)\n+          PATH@[18; 20)\n+            PATH_SEGMENT@[18; 20)\n+              NAME_REF@[18; 20)\n+                WHITESPACE@[18; 19)\n+                IDENT@[19; 20) \"S\"\n+          L_PAREN@[20; 21)\n+          R_PAREN@[21; 22)\n+          WHITESPACE@[22; 23)\n+        EQ@[23; 24)\n+        TUPLE_EXPR@[24; 27)\n+          WHITESPACE@[24; 25)\n+          L_PAREN@[25; 26)\n+          R_PAREN@[26; 27)\n+        SEMI@[27; 28)\n+        WHITESPACE@[28; 33)\n+      LET_STMT@[33; 52)\n+        LET_KW@[33; 36)\n+        TUPLE_PAT@[36; 42)\n+          PATH@[36; 38)\n+            PATH_SEGMENT@[36; 38)\n+              NAME_REF@[36; 38)\n+                WHITESPACE@[36; 37)\n+                IDENT@[37; 38) \"S\"\n+          L_PAREN@[38; 39)\n+          PLACEHOLDER_PAT@[39; 40)\n+            UNDERSCORE@[39; 40)\n+          R_PAREN@[40; 41)\n+          WHITESPACE@[41; 42)\n+        EQ@[42; 43)\n+        TUPLE_EXPR@[43; 46)\n+          WHITESPACE@[43; 44)\n+          L_PAREN@[44; 45)\n+          R_PAREN@[45; 46)\n+        SEMI@[46; 47)\n+        WHITESPACE@[47; 52)\n+      LET_STMT@[52; 72)\n+        LET_KW@[52; 55)\n+        TUPLE_PAT@[55; 62)\n+          PATH@[55; 57)\n+            PATH_SEGMENT@[55; 57)\n+              NAME_REF@[55; 57)\n+                WHITESPACE@[55; 56)\n+                IDENT@[56; 57) \"S\"\n+          L_PAREN@[57; 58)\n+          PLACEHOLDER_PAT@[58; 59)\n+            UNDERSCORE@[58; 59)\n+          COMMA@[59; 60)\n+          R_PAREN@[60; 61)\n+          WHITESPACE@[61; 62)\n+        EQ@[62; 63)\n+        TUPLE_EXPR@[63; 66)\n+          WHITESPACE@[63; 64)\n+          L_PAREN@[64; 65)\n+          R_PAREN@[65; 66)\n+        SEMI@[66; 67)\n+        WHITESPACE@[67; 72)\n+      LET_STMT@[72; 95)\n+        LET_KW@[72; 75)\n+        TUPLE_PAT@[75; 89)\n+          PATH@[75; 77)\n+            PATH_SEGMENT@[75; 77)\n+              NAME_REF@[75; 77)\n+                WHITESPACE@[75; 76)\n+                IDENT@[76; 77) \"S\"\n+          L_PAREN@[77; 78)\n+          PLACEHOLDER_PAT@[78; 79)\n+            UNDERSCORE@[78; 79)\n+          COMMA@[79; 80)\n+          WHITESPACE@[80; 81)\n+          DOTDOT@[81; 83)\n+          WHITESPACE@[83; 84)\n+          COMMA@[84; 85)\n+          BIND_PAT@[85; 87)\n+            NAME@[85; 87)\n+              WHITESPACE@[85; 86)\n+              IDENT@[86; 87) \"x\"\n+          R_PAREN@[87; 88)\n+          WHITESPACE@[88; 89)\n+        EQ@[89; 90)\n+        TUPLE_EXPR@[90; 93)\n+          WHITESPACE@[90; 91)\n+          L_PAREN@[91; 92)\n+          R_PAREN@[92; 93)\n+        SEMI@[93; 94)\n+        WHITESPACE@[94; 95)\n+      R_CURLY@[95; 96)\n+      WHITESPACE@[96; 97)"}, {"sha": "f6e32c7c1493a36389b207b27572de2004670e62", "filename": "tests/data/parser/inline/0072_path_part.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0072_path_part.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0072_path_part.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0072_path_part.rs?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -0,0 +1,6 @@\n+fn foo() {\n+    let foo::Bar = ();\n+    let ::Bar = ();\n+    let Bar { .. } = ();\n+    let Bar(..) = ();\n+}"}, {"sha": "227046fcc21c2f393cb093af2f198bcb09092a77", "filename": "tests/data/parser/inline/0072_path_part.txt", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0072_path_part.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0072_path_part.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0072_path_part.txt?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -0,0 +1,94 @@\n+FILE@[0; 103)\n+  FN_ITEM@[0; 103)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 103)\n+      L_CURLY@[9; 10)\n+      LET_STMT@[10; 38)\n+        WHITESPACE@[10; 15)\n+        LET_KW@[15; 18)\n+        PATH_PAT@[18; 28)\n+          PATH@[18; 28)\n+            PATH@[18; 22)\n+              PATH_SEGMENT@[18; 22)\n+                NAME_REF@[18; 22)\n+                  WHITESPACE@[18; 19)\n+                  IDENT@[19; 22) \"foo\"\n+            COLONCOLON@[22; 24)\n+            PATH_SEGMENT@[24; 28)\n+              NAME_REF@[24; 28)\n+                IDENT@[24; 27) \"Bar\"\n+                WHITESPACE@[27; 28)\n+        EQ@[28; 29)\n+        TUPLE_EXPR@[29; 32)\n+          WHITESPACE@[29; 30)\n+          L_PAREN@[30; 31)\n+          R_PAREN@[31; 32)\n+        SEMI@[32; 33)\n+        WHITESPACE@[33; 38)\n+      LET_STMT@[38; 58)\n+        LET_KW@[38; 41)\n+        PATH_PAT@[41; 48)\n+          PATH@[41; 48)\n+            PATH_SEGMENT@[41; 48)\n+              WHITESPACE@[41; 42)\n+              COLONCOLON@[42; 44)\n+              NAME_REF@[44; 48)\n+                IDENT@[44; 47) \"Bar\"\n+                WHITESPACE@[47; 48)\n+        EQ@[48; 49)\n+        TUPLE_EXPR@[49; 52)\n+          WHITESPACE@[49; 50)\n+          L_PAREN@[50; 51)\n+          R_PAREN@[51; 52)\n+        SEMI@[52; 53)\n+        WHITESPACE@[53; 58)\n+      LET_STMT@[58; 83)\n+        LET_KW@[58; 61)\n+        STRUCT_PAT@[61; 73)\n+          PATH@[61; 66)\n+            PATH_SEGMENT@[61; 66)\n+              NAME_REF@[61; 66)\n+                WHITESPACE@[61; 62)\n+                IDENT@[62; 65) \"Bar\"\n+                WHITESPACE@[65; 66)\n+          L_CURLY@[66; 67)\n+          WHITESPACE@[67; 68)\n+          DOTDOT@[68; 70)\n+          WHITESPACE@[70; 71)\n+          R_CURLY@[71; 72)\n+          WHITESPACE@[72; 73)\n+        EQ@[73; 74)\n+        TUPLE_EXPR@[74; 77)\n+          WHITESPACE@[74; 75)\n+          L_PAREN@[75; 76)\n+          R_PAREN@[76; 77)\n+        SEMI@[77; 78)\n+        WHITESPACE@[78; 83)\n+      LET_STMT@[83; 101)\n+        LET_KW@[83; 86)\n+        TUPLE_PAT@[86; 95)\n+          PATH@[86; 90)\n+            PATH_SEGMENT@[86; 90)\n+              NAME_REF@[86; 90)\n+                WHITESPACE@[86; 87)\n+                IDENT@[87; 90) \"Bar\"\n+          L_PAREN@[90; 91)\n+          DOTDOT@[91; 93)\n+          R_PAREN@[93; 94)\n+          WHITESPACE@[94; 95)\n+        EQ@[95; 96)\n+        TUPLE_EXPR@[96; 99)\n+          WHITESPACE@[96; 97)\n+          L_PAREN@[97; 98)\n+          R_PAREN@[98; 99)\n+        SEMI@[99; 100)\n+        WHITESPACE@[100; 101)\n+      R_CURLY@[101; 102)\n+      WHITESPACE@[102; 103)"}, {"sha": "da3412fa8a94a44de833d2edfae5d7b9dd1e2660", "filename": "tests/data/parser/inline/0073_struct_pat_fields.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0073_struct_pat_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0073_struct_pat_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0073_struct_pat_fields.rs?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -0,0 +1,6 @@\n+fn foo() {\n+    let S {} = ();\n+    let S { f, ref mut g } = ();\n+    let S { h: _, ..} = ();\n+    let S { h: _, } = ();\n+}"}, {"sha": "639c34dcbc6481748e3a4f94dbef5346311e6057", "filename": "tests/data/parser/inline/0073_struct_pat_fields.txt", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0073_struct_pat_fields.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4e4ad3d27cd662b790395b61f3cda560fd4e2146/tests%2Fdata%2Fparser%2Finline%2F0073_struct_pat_fields.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0073_struct_pat_fields.txt?ref=4e4ad3d27cd662b790395b61f3cda560fd4e2146", "patch": "@@ -0,0 +1,122 @@\n+FILE@[0; 119)\n+  FN_ITEM@[0; 119)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 119)\n+      L_CURLY@[9; 10)\n+      LET_STMT@[10; 34)\n+        WHITESPACE@[10; 15)\n+        LET_KW@[15; 18)\n+        STRUCT_PAT@[18; 24)\n+          PATH@[18; 21)\n+            PATH_SEGMENT@[18; 21)\n+              NAME_REF@[18; 21)\n+                WHITESPACE@[18; 19)\n+                IDENT@[19; 20) \"S\"\n+                WHITESPACE@[20; 21)\n+          L_CURLY@[21; 22)\n+          R_CURLY@[22; 23)\n+          WHITESPACE@[23; 24)\n+        EQ@[24; 25)\n+        TUPLE_EXPR@[25; 28)\n+          WHITESPACE@[25; 26)\n+          L_PAREN@[26; 27)\n+          R_PAREN@[27; 28)\n+        SEMI@[28; 29)\n+        WHITESPACE@[29; 34)\n+      LET_STMT@[34; 67)\n+        LET_KW@[34; 37)\n+        STRUCT_PAT@[37; 57)\n+          PATH@[37; 40)\n+            PATH_SEGMENT@[37; 40)\n+              NAME_REF@[37; 40)\n+                WHITESPACE@[37; 38)\n+                IDENT@[38; 39) \"S\"\n+                WHITESPACE@[39; 40)\n+          L_CURLY@[40; 41)\n+          BIND_PAT@[41; 43)\n+            NAME@[41; 43)\n+              WHITESPACE@[41; 42)\n+              IDENT@[42; 43) \"f\"\n+          COMMA@[43; 44)\n+          BIND_PAT@[44; 55)\n+            WHITESPACE@[44; 45)\n+            REF_KW@[45; 48)\n+            WHITESPACE@[48; 49)\n+            MUT_KW@[49; 52)\n+            NAME@[52; 55)\n+              WHITESPACE@[52; 53)\n+              IDENT@[53; 54) \"g\"\n+              WHITESPACE@[54; 55)\n+          R_CURLY@[55; 56)\n+          WHITESPACE@[56; 57)\n+        EQ@[57; 58)\n+        TUPLE_EXPR@[58; 61)\n+          WHITESPACE@[58; 59)\n+          L_PAREN@[59; 60)\n+          R_PAREN@[60; 61)\n+        SEMI@[61; 62)\n+        WHITESPACE@[62; 67)\n+      LET_STMT@[67; 95)\n+        LET_KW@[67; 70)\n+        STRUCT_PAT@[70; 85)\n+          PATH@[70; 73)\n+            PATH_SEGMENT@[70; 73)\n+              NAME_REF@[70; 73)\n+                WHITESPACE@[70; 71)\n+                IDENT@[71; 72) \"S\"\n+                WHITESPACE@[72; 73)\n+          L_CURLY@[73; 74)\n+          WHITESPACE@[74; 75)\n+          IDENT@[75; 76) \"h\"\n+          COLON@[76; 77)\n+          PLACEHOLDER_PAT@[77; 79)\n+            WHITESPACE@[77; 78)\n+            UNDERSCORE@[78; 79)\n+          COMMA@[79; 80)\n+          WHITESPACE@[80; 81)\n+          DOTDOT@[81; 83)\n+          R_CURLY@[83; 84)\n+          WHITESPACE@[84; 85)\n+        EQ@[85; 86)\n+        TUPLE_EXPR@[86; 89)\n+          WHITESPACE@[86; 87)\n+          L_PAREN@[87; 88)\n+          R_PAREN@[88; 89)\n+        SEMI@[89; 90)\n+        WHITESPACE@[90; 95)\n+      LET_STMT@[95; 117)\n+        LET_KW@[95; 98)\n+        STRUCT_PAT@[98; 111)\n+          PATH@[98; 101)\n+            PATH_SEGMENT@[98; 101)\n+              NAME_REF@[98; 101)\n+                WHITESPACE@[98; 99)\n+                IDENT@[99; 100) \"S\"\n+                WHITESPACE@[100; 101)\n+          L_CURLY@[101; 102)\n+          WHITESPACE@[102; 103)\n+          IDENT@[103; 104) \"h\"\n+          COLON@[104; 105)\n+          PLACEHOLDER_PAT@[105; 107)\n+            WHITESPACE@[105; 106)\n+            UNDERSCORE@[106; 107)\n+          COMMA@[107; 108)\n+          WHITESPACE@[108; 109)\n+          R_CURLY@[109; 110)\n+          WHITESPACE@[110; 111)\n+        EQ@[111; 112)\n+        TUPLE_EXPR@[112; 115)\n+          WHITESPACE@[112; 113)\n+          L_PAREN@[113; 114)\n+          R_PAREN@[114; 115)\n+        SEMI@[115; 116)\n+        WHITESPACE@[116; 117)\n+      R_CURLY@[117; 118)\n+      WHITESPACE@[118; 119)"}]}