{"sha": "f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "node_id": "C_kwDOAAsO6NoAKGY0OTFhOWY2MDFhOGFkMGVmZTdmMzhkZTViODA3YTJjMDc3NzRhZTE", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-01-19T19:23:44Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-01-19T19:23:44Z"}, "message": "Add tests to ensure that let_chains works with if_let_guard", "tree": {"sha": "bc97e55d5deffc828487a78a57e6fdcb6c4dd76e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc97e55d5deffc828487a78a57e6fdcb6c4dd76e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "html_url": "https://github.com/rust-lang/rust/commit/f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f491a9f601a8ad0efe7f38de5b807a2c07774ae1/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e57faa78aa7661c6000204591558f6665f11abc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e57faa78aa7661c6000204591558f6665f11abc", "html_url": "https://github.com/rust-lang/rust/commit/5e57faa78aa7661c6000204591558f6665f11abc"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "945c665e35d28539e2d6d4c60509d9b4cda4f289", "filename": "src/test/ui/rfc-2497-if-let-chains/irrefutable-lets.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f491a9f601a8ad0efe7f38de5b807a2c07774ae1/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Firrefutable-lets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f491a9f601a8ad0efe7f38de5b807a2c07774ae1/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Firrefutable-lets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Firrefutable-lets.rs?ref=f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![feature(let_chains)]\n+#![feature(if_let_guard, let_chains)]\n \n use std::ops::Range;\n \n@@ -16,6 +16,16 @@ fn main() {\n         && let None = local_start {\n     }\n \n+    match opt {\n+        Some(ref first) if let second = first && let _third = second => {},\n+        _ => {}\n+    }\n+    match opt {\n+        Some(ref first) if let Range { start: local_start, end: _ } = first\n+            && let None = local_start => {},\n+        _ => {}\n+    }\n+\n     while let first = &opt && let Some(ref second) = first && let None = second.start {\n     }\n     while let Some(ref first) = opt && let second = first && let _third = second {"}, {"sha": "e061174f667d97a68384d77c36e295d0d52979de", "filename": "src/test/ui/rfc-2497-if-let-chains/then-else-blocks.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f491a9f601a8ad0efe7f38de5b807a2c07774ae1/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fthen-else-blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f491a9f601a8ad0efe7f38de5b807a2c07774ae1/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fthen-else-blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fthen-else-blocks.rs?ref=f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-#![feature(let_chains)]\n+#![feature(if_let_guard, let_chains)]\n \n fn check_if_let(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n     if let Some(first) = opt\n@@ -15,6 +15,17 @@ fn check_if_let(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n     }\n }\n \n+fn check_let_guard(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n+    match opt {\n+        Some(first) if let Some(second) = first && let Some(third) = second && third == value => {\n+            true\n+        }\n+        _ => {\n+            false\n+        }\n+    }\n+}\n+\n fn check_while_let(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n     while let Some(first) = opt\n         && let Some(second) = first\n@@ -30,6 +41,9 @@ fn main() {\n     assert_eq!(check_if_let(Some(Some(Some(1))), 1), true);\n     assert_eq!(check_if_let(Some(Some(Some(1))), 9), false);\n \n+    assert_eq!(check_let_guard(Some(Some(Some(1))), 1), true);\n+    assert_eq!(check_let_guard(Some(Some(Some(1))), 9), false);\n+\n     assert_eq!(check_while_let(Some(Some(Some(1))), 1), true);\n     assert_eq!(check_while_let(Some(Some(Some(1))), 9), false);\n }"}]}