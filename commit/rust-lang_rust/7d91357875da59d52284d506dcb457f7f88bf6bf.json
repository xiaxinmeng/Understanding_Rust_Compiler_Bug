{"sha": "7d91357875da59d52284d506dcb457f7f88bf6bf", "node_id": "C_kwDOAAsO6NoAKDdkOTEzNTc4NzVkYTU5ZDUyMjg0ZDUwNmRjYjQ1N2Y3Zjg4YmY2YmY", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-11-10T07:49:16Z"}, "committer": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-11-10T22:40:32Z"}, "message": "Dynamically detect AVX512 in CI\n\nWe would like to check for errors with AVX512,\nbut we don't pick our CPU. So, detect available features.\nThis variance in checks stochastically reveals issues.\nNondeterminism is acceptable as our goal is protecting downstream.", "tree": {"sha": "af197c8cf59e6a1e6e80f1038ee71f4109bee511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af197c8cf59e6a1e6e80f1038ee71f4109bee511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d91357875da59d52284d506dcb457f7f88bf6bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d91357875da59d52284d506dcb457f7f88bf6bf", "html_url": "https://github.com/rust-lang/rust/commit/7d91357875da59d52284d506dcb457f7f88bf6bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d91357875da59d52284d506dcb457f7f88bf6bf/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "949f71c0dc8716e285c164eae225db2d18333f0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/949f71c0dc8716e285c164eae225db2d18333f0d", "html_url": "https://github.com/rust-lang/rust/commit/949f71c0dc8716e285c164eae225db2d18333f0d"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "d50dfa1be4cba292f65500132daaf6e05a394ca6", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7d91357875da59d52284d506dcb457f7f88bf6bf/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/7d91357875da59d52284d506dcb457f7f88bf6bf/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=7d91357875da59d52284d506dcb457f7f88bf6bf", "patch": "@@ -228,14 +228,14 @@ jobs:\n         run: cross test --verbose --target=${{ matrix.target }} --release\n \n   features:\n-    name: \"Check cargo features (${{ matrix.features }} ${{ matrix.rustflags }})\"\n+    name: \"Check cargo features (${{ matrix.simd }} \u00d7 ${{ matrix.features }})\"\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n       matrix:\n-        rustflags:\n+        simd:\n           - \"\"\n-          - \"-Ctarget-feature=+avx512f\" # AVX-512 uses packed bit masks, so enable it to test more code paths\n+          - \"avx512\"\n         features:\n           - \"\"\n           - \"--features std\"\n@@ -248,7 +248,13 @@ jobs:\n         run: |\n           rustup update nightly --no-self-update\n           rustup default nightly\n+      - name: Detect AVX512\n+        run: echo \"CPU_FEATURE=$(lscpu | grep -o avx512[a-z]* | sed s/avx/+avx/ | tr '\\n' ',' )\" >> $GITHUB_ENV\n       - name: Check build\n-        run: cargo check --all-targets --no-default-features ${{ matrix.features }}\n-        env:\n-            RUSTFLAGS: -Dwarnings ${{ matrix.rustflags }}\n+        if: ${{ matrix.simd == '' }}\n+        run: RUSTFLAGS=\"-Dwarnings\" cargo check --all-targets --no-default-features ${{ matrix.features }}\n+      - name: Check AVX\n+        if: ${{ matrix.simd == 'avx512' && contains(env.CPU_FEATURE, 'avx512') }}\n+        run: |\n+          echo \"Found AVX features: $CPU_FEATURE\"\n+          RUSTFLAGS=\"-Dwarnings -Ctarget-feature=$CPU_FEATURE\" cargo check --all-targets --no-default-features ${{ matrix.features }}"}]}