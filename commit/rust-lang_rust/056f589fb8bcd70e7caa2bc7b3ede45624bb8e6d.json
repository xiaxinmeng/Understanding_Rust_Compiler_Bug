{"sha": "056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NmY1ODlmYjhiY2Q3MGU3Y2FhMmJjN2IzZWRlNDU2MjRiYjhlNmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-07T19:49:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-07T19:49:39Z"}, "message": "Auto merge of #49678 - bobtwinkles:fix_multiple_activations, r=nikomatsakis\n\ntwo-phase borrows: support multiple activations in one statement\n\nThe need for this has arisen since the introduction of two-phase borrows on\nmethod autorefs in #49348. r'ing @pnkfelix to keep things off Niko's plate so he can make this redundant, and @pnkfelix is familiar with the code.\n\nFixes #49635\nFixes #49662\n\nr? @pnkfelix", "tree": {"sha": "394f286530edf7d0322e14789b7075650a907937", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/394f286530edf7d0322e14789b7075650a907937"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "html_url": "https://github.com/rust-lang/rust/commit/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "780707490f2b6c3e71a1418e08ef80a6730bce13", "url": "https://api.github.com/repos/rust-lang/rust/commits/780707490f2b6c3e71a1418e08ef80a6730bce13", "html_url": "https://github.com/rust-lang/rust/commit/780707490f2b6c3e71a1418e08ef80a6730bce13"}, {"sha": "bacd1209575b94f9f2347cebf254bf99ce5ab4bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bacd1209575b94f9f2347cebf254bf99ce5ab4bc", "html_url": "https://github.com/rust-lang/rust/commit/bacd1209575b94f9f2347cebf254bf99ce5ab4bc"}], "stats": {"total": 106, "additions": 92, "deletions": 14}, "files": [{"sha": "aa991427be09397b615d9ef466536c7b8afdd5a2", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "patch": "@@ -64,10 +64,7 @@ pub struct Borrows<'a, 'gcx: 'tcx, 'tcx: 'a> {\n     assigned_map: FxHashMap<Place<'tcx>, FxHashSet<BorrowIndex>>,\n \n     /// Locations which activate borrows.\n-    /// NOTE: A given location may activate more than one borrow in the future\n-    /// when more general two-phase borrow support is introduced, but for now we\n-    /// only need to store one borrow index\n-    activation_map: FxHashMap<Location, BorrowIndex>,\n+    activation_map: FxHashMap<Location, FxHashSet<BorrowIndex>>,\n \n     /// Every borrow has a region; this maps each such regions back to\n     /// its borrow-indexes.\n@@ -174,7 +171,7 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n             idx_vec: IndexVec<BorrowIndex, BorrowData<'tcx>>,\n             location_map: FxHashMap<Location, BorrowIndex>,\n             assigned_map: FxHashMap<Place<'tcx>, FxHashSet<BorrowIndex>>,\n-            activation_map: FxHashMap<Location, BorrowIndex>,\n+            activation_map: FxHashMap<Location, FxHashSet<BorrowIndex>>,\n             region_map: FxHashMap<Region<'tcx>, FxHashSet<BorrowIndex>>,\n             local_map: FxHashMap<mir::Local, FxHashSet<BorrowIndex>>,\n             region_span_map: FxHashMap<RegionKind, Span>,\n@@ -211,12 +208,7 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n                     let idx = self.idx_vec.push(borrow);\n                     self.location_map.insert(location, idx);\n \n-                    // This assert is a good sanity check until more general 2-phase borrow\n-                    // support is introduced. See NOTE on the activation_map field for more\n-                    assert!(!self.activation_map.contains_key(&activate_location),\n-                            \"More than one activation introduced at the same location.\");\n-                    self.activation_map.insert(activate_location, idx);\n-\n+                    insert(&mut self.activation_map, &activate_location, idx);\n                     insert(&mut self.assigned_map, assigned_place, idx);\n                     insert(&mut self.region_map, &region, idx);\n                     if let Some(local) = root_local(borrowed_place) {\n@@ -552,9 +544,11 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n                                        location: Location) {\n         // Handle activations\n         match self.activation_map.get(&location) {\n-            Some(&activated) => {\n-                debug!(\"activating borrow {:?}\", activated);\n-                sets.gen(&ReserveOrActivateIndex::active(activated))\n+            Some(activations) => {\n+                for activated in activations {\n+                    debug!(\"activating borrow {:?}\", activated);\n+                    sets.gen(&ReserveOrActivateIndex::active(*activated))\n+                }\n             }\n             None => {}\n         }"}, {"sha": "2b823628855734251798ddd84516d373f4a940b4", "filename": "src/test/ui/borrowck/two-phase-multi-mut.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multi-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multi-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multi-mut.rs?ref=056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(nll)]\n+\n+struct Foo {\n+}\n+\n+impl Foo {\n+    fn method(&mut self, foo: &mut Foo) {\n+    }\n+}\n+\n+fn main() {\n+    let mut foo = Foo { };\n+    foo.method(&mut foo);\n+    //~^     cannot borrow `foo` as mutable more than once at a time\n+    //~^^    cannot borrow `foo` as mutable more than once at a time\n+}"}, {"sha": "0c02acf6548557eac0d3106a4387ad77adf67921", "filename": "src/test/ui/borrowck/two-phase-multi-mut.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multi-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multi-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multi-mut.stderr?ref=056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "patch": "@@ -0,0 +1,23 @@\n+error[E0499]: cannot borrow `foo` as mutable more than once at a time\n+  --> $DIR/two-phase-multi-mut.rs:23:16\n+   |\n+LL |     foo.method(&mut foo);\n+   |     -----------^^^^^^^^-\n+   |     |          |\n+   |     |          second mutable borrow occurs here\n+   |     first mutable borrow occurs here\n+   |     borrow later used here\n+\n+error[E0499]: cannot borrow `foo` as mutable more than once at a time\n+  --> $DIR/two-phase-multi-mut.rs:23:5\n+   |\n+LL |     foo.method(&mut foo);\n+   |     ^^^^^^^^^^^--------^\n+   |     |          |\n+   |     |          first mutable borrow occurs here\n+   |     second mutable borrow occurs here\n+   |     borrow later used here\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0499`."}, {"sha": "e1ed41bfb2c64cb97e9fd3bf92ed672e3cc518ca", "filename": "src/test/ui/borrowck/two-phase-multiple-activations.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multiple-activations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multiple-activations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-multiple-activations.rs?ref=056f589fb8bcd70e7caa2bc7b3ede45624bb8e6d", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// revisions: lxl nll\n+//[lxl]compile-flags: -Z borrowck=mir -Z two-phase-borrows\n+//[nll]compile-flags: -Z borrowck=mir -Z two-phase-borrows -Z nll\n+\n+// run-pass\n+\n+use std::io::Result;\n+\n+struct Foo {}\n+\n+pub trait FakeRead {\n+    fn read_to_end(&mut self, buf: &mut Vec<u8>) -> Result<usize>;\n+}\n+\n+impl FakeRead for Foo {\n+    fn read_to_end(&mut self, buf: &mut Vec<u8>) -> Result<usize> {\n+        Ok(4)\n+    }\n+}\n+\n+fn main() {\n+    let mut a = Foo {};\n+    let mut v = Vec::new();\n+    a.read_to_end(&mut v);\n+}"}]}