{"sha": "e6fc0c4b43da08b7889b0450de5f3599b1f6b237", "node_id": "C_kwDOAAsO6NoAKGU2ZmMwYzRiNDNkYTA4Yjc4ODliMDQ1MGRlNWYzNTk5YjFmNmIyMzc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-14T04:42:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-14T04:42:53Z"}, "message": "Rollup merge of #97005 - est31:master, r=petrochenkov\n\nTwo small improvements of rustc_expand\n\nI found them while doing #96150\n\nr? ``@petrochenkov``", "tree": {"sha": "056c01680a2ac0a36fa6061881b1a8bd58b507be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/056c01680a2ac0a36fa6061881b1a8bd58b507be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6fc0c4b43da08b7889b0450de5f3599b1f6b237", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJifzNNCRBK7hj4Ov3rIwAApUMIALDliR2oVQysyrtj79cxbROi\nVUf/FOny1+ZQqHCy6Grc4df+0dNpvtIhYfKEt7YQ6JbTqxP5jxXqmwR8BOiyzr9D\n8KniH2EMsSqsRpCylKfcZ+cyD8oFjPiBCan9oW0izkOFdLPWIQ+yOIBw+Sl+HfGx\nqUx7yzUUb/zE5mC6hJm8z0guUjJ0aQpF9zl+sqZ36rmFQ2SLgKI49mk+Zth4Pqlx\n8628BrOMxf2JQmpqLQk2lx0ZbNujAMZ5Bw3/PgJRsX+8vJTpSM2rpk57uECJEm+R\nNMC1+HDjoef/himN0+W2Fgcx1E3WHvmv2jE/UQ7AgwNNr028GLp/p8z+ihJXe1M=\n=/JFF\n-----END PGP SIGNATURE-----\n", "payload": "tree 056c01680a2ac0a36fa6061881b1a8bd58b507be\nparent 93a4dfd7378a12c591df79065729b8d13117e2cf\nparent e6ccf9b5d8e56d08936cd77f1bb72abd5e2582ed\nauthor Yuki Okushi <jtitor@2k36.org> 1652503373 +0900\ncommitter GitHub <noreply@github.com> 1652503373 +0900\n\nRollup merge of #97005 - est31:master, r=petrochenkov\n\nTwo small improvements of rustc_expand\n\nI found them while doing #96150\n\nr? ``@petrochenkov``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6fc0c4b43da08b7889b0450de5f3599b1f6b237", "html_url": "https://github.com/rust-lang/rust/commit/e6fc0c4b43da08b7889b0450de5f3599b1f6b237", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6fc0c4b43da08b7889b0450de5f3599b1f6b237/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93a4dfd7378a12c591df79065729b8d13117e2cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/93a4dfd7378a12c591df79065729b8d13117e2cf", "html_url": "https://github.com/rust-lang/rust/commit/93a4dfd7378a12c591df79065729b8d13117e2cf"}, {"sha": "e6ccf9b5d8e56d08936cd77f1bb72abd5e2582ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ccf9b5d8e56d08936cd77f1bb72abd5e2582ed", "html_url": "https://github.com/rust-lang/rust/commit/e6ccf9b5d8e56d08936cd77f1bb72abd5e2582ed"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "ddfbef945efaa29bbef4a0ce98812f0304e36b35", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6fc0c4b43da08b7889b0450de5f3599b1f6b237/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6fc0c4b43da08b7889b0450de5f3599b1f6b237/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=e6fc0c4b43da08b7889b0450de5f3599b1f6b237", "patch": "@@ -76,6 +76,7 @@ crate use ParseResult::*;\n use crate::mbe::{KleeneOp, TokenTree};\n \n use rustc_ast::token::{self, DocComment, Nonterminal, NonterminalKind, Token};\n+use rustc_lint_defs::pluralize;\n use rustc_parse::parser::{NtOrTt, Parser};\n use rustc_span::symbol::MacroRulesNormalizedIdent;\n use rustc_span::Span;\n@@ -668,8 +669,7 @@ impl TtParser {\n                 self.macro_name,\n                 match self.next_mps.len() {\n                     0 => format!(\"built-in NTs {}.\", nts),\n-                    1 => format!(\"built-in NTs {} or 1 other option.\", nts),\n-                    n => format!(\"built-in NTs {} or {} other options.\", nts, n),\n+                    n => format!(\"built-in NTs {} or {n} other option{s}.\", nts, s = pluralize!(n)),\n                 }\n             ),\n         )"}, {"sha": "4cc3169180ea5ea01638bd0f83c7afd09512a792", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e6fc0c4b43da08b7889b0450de5f3599b1f6b237/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6fc0c4b43da08b7889b0450de5f3599b1f6b237/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=e6fc0c4b43da08b7889b0450de5f3599b1f6b237", "patch": "@@ -175,7 +175,7 @@ impl TTMacroExpander for MacroRulesMacroExpander {\n         if !self.valid {\n             return DummyResult::any(sp);\n         }\n-        generic_extension(\n+        expand_macro(\n             cx,\n             sp,\n             self.span,\n@@ -202,8 +202,9 @@ fn trace_macros_note(cx_expansions: &mut FxHashMap<Span, Vec<String>>, sp: Span,\n     cx_expansions.entry(sp).or_default().push(message);\n }\n \n-/// Given `lhses` and `rhses`, this is the new macro we create\n-fn generic_extension<'cx, 'tt>(\n+/// Expands the rules based macro defined by `lhses` and `rhses` for a given\n+/// input `arg`.\n+fn expand_macro<'cx, 'tt>(\n     cx: &'cx mut ExtCtxt<'_>,\n     sp: Span,\n     def_span: Span,"}]}