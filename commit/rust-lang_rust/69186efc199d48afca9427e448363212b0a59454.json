{"sha": "69186efc199d48afca9427e448363212b0a59454", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MTg2ZWZjMTk5ZDQ4YWZjYTk0MjdlNDQ4MzYzMjEyYjBhNTk0NTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-03T20:11:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-03T20:11:25Z"}, "message": "auto merge of #10768 : Blei/rust/logging-enabled-macros, r=alexcrichton\n\nThis is useful when the information that is needed to do useful logging\r\nis expensive to produce.", "tree": {"sha": "c9aaf99caa391a1ae5284f0139486d1b5c7cd609", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9aaf99caa391a1ae5284f0139486d1b5c7cd609"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69186efc199d48afca9427e448363212b0a59454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69186efc199d48afca9427e448363212b0a59454", "html_url": "https://github.com/rust-lang/rust/commit/69186efc199d48afca9427e448363212b0a59454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69186efc199d48afca9427e448363212b0a59454/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "899217c11b122a13708fa9f12c07f6d215c1c6fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/899217c11b122a13708fa9f12c07f6d215c1c6fe", "html_url": "https://github.com/rust-lang/rust/commit/899217c11b122a13708fa9f12c07f6d215c1c6fe"}, {"sha": "a68917190b9c2d52a25a6f1452fa9d2129e7e721", "url": "https://api.github.com/repos/rust-lang/rust/commits/a68917190b9c2d52a25a6f1452fa9d2129e7e721", "html_url": "https://github.com/rust-lang/rust/commit/a68917190b9c2d52a25a6f1452fa9d2129e7e721"}], "stats": {"total": 76, "additions": 71, "deletions": 5}, "files": [{"sha": "1605dcebf1ac3d64222fd877e12cd305cb3fd329", "filename": "src/libstd/logging.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/69186efc199d48afca9427e448363212b0a59454/src%2Flibstd%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69186efc199d48afca9427e448363212b0a59454/src%2Flibstd%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flogging.rs?ref=69186efc199d48afca9427e448363212b0a59454", "patch": "@@ -20,14 +20,20 @@ There are five macros that the logging subsystem uses:\n \n * `log!(level, ...)` - the generic logging macro, takes a level as a u32 and any\n                        related `format!` arguments\n-* `debug!(...)` - a macro hard-wired to the log level of 4\n-* `info!(...)` - a macro hard-wired to the log level of 3\n-* `warn!(...)` - a macro hard-wired to the log level of 2\n-* `error!(...)` - a macro hard-wired to the log level of 1\n+* `debug!(...)` - a macro hard-wired to the log level of `DEBUG`\n+* `info!(...)` - a macro hard-wired to the log level of `INFO`\n+* `warn!(...)` - a macro hard-wired to the log level of `WARN`\n+* `error!(...)` - a macro hard-wired to the log level of `ERROR`\n \n All of these macros use the same style of syntax as the `format!` syntax\n extension. Details about the syntax can be found in the documentation of\n-`std::fmt` along with the Rust tutorial/manual\n+`std::fmt` along with the Rust tutorial/manual.\n+\n+If you want to check at runtime if a given logging level is enabled (e.g. if the\n+information you would want to log is expensive to produce), you can use the\n+following macro:\n+\n+* `log_enabled!(level)` - returns true if logging of the given level is enabled\n \n ## Enabling logging\n \n@@ -95,6 +101,15 @@ use rt::local::Local;\n use rt::logging::{Logger, StdErrLogger};\n use rt::task::Task;\n \n+/// Debug log level\n+pub static DEBUG: u32 = 4;\n+/// Info log level\n+pub static INFO: u32 = 3;\n+/// Warn log level\n+pub static WARN: u32 = 2;\n+/// Error log level\n+pub static ERROR: u32 = 1;\n+\n /// This function is called directly by the compiler when using the logging\n /// macros. This function does not take into account whether the log level\n /// specified is active or not, it will always log something if this method is"}, {"sha": "1d040c109847a7d856e34022bee91c1037588d14", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/69186efc199d48afca9427e448363212b0a59454/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69186efc199d48afca9427e448363212b0a59454/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=69186efc199d48afca9427e448363212b0a59454", "patch": "@@ -754,6 +754,13 @@ pub fn std_macros() -> @str {\n         if cfg!(not(ndebug)) { log!(4u32, $($arg)*) }\n     ))\n \n+    macro_rules! log_enabled(\n+        ($lvl:expr) => ( {\n+            let lvl = $lvl;\n+            lvl <= __log_level() && (lvl != 4 || cfg!(not(ndebug)))\n+        } )\n+    )\n+\n     macro_rules! fail(\n         () => (\n             fail!(\"explicit failure\")"}, {"sha": "4bfdbc5563ac2709ed79c1d74470a43675c4b5fa", "filename": "src/test/run-pass/logging-enabled-debug.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/69186efc199d48afca9427e448363212b0a59454/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69186efc199d48afca9427e448363212b0a59454/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled-debug.rs?ref=69186efc199d48afca9427e448363212b0a59454", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast\n+// compile-flags:--cfg ndebug\n+// exec-env:RUST_LOG=logging-enabled-debug=debug\n+\n+use std::logging;\n+\n+fn main() {\n+    if log_enabled!(logging::DEBUG) {\n+        fail!(\"what?! debugging?\");\n+    }\n+}"}, {"sha": "1fc38ac30c2fd80ce0d4cecd6710d4cdf93bd104", "filename": "src/test/run-pass/logging-enabled.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/69186efc199d48afca9427e448363212b0a59454/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69186efc199d48afca9427e448363212b0a59454/src%2Ftest%2Frun-pass%2Flogging-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-enabled.rs?ref=69186efc199d48afca9427e448363212b0a59454", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast\n+// exec-env:RUST_LOG=logging-enabled=info\n+\n+use std::logging;\n+\n+fn main() {\n+    if log_enabled!(logging::DEBUG) {\n+        fail!(\"what?! debugging?\");\n+    }\n+    if !log_enabled!(logging::INFO) {\n+        fail!(\"what?! no info?\");\n+    }\n+}"}]}