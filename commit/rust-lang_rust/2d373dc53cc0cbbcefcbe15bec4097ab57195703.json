{"sha": "2d373dc53cc0cbbcefcbe15bec4097ab57195703", "node_id": "C_kwDOAAsO6NoAKDJkMzczZGM1M2NjMGNiYmNlZmNiZTE1YmVjNDA5N2FiNTcxOTU3MDM", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-27T18:05:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "verify during parse", "tree": {"sha": "7d53f234e984af703a70d991848e258c0a381c5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d53f234e984af703a70d991848e258c0a381c5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d373dc53cc0cbbcefcbe15bec4097ab57195703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d373dc53cc0cbbcefcbe15bec4097ab57195703", "html_url": "https://github.com/rust-lang/rust/commit/2d373dc53cc0cbbcefcbe15bec4097ab57195703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d373dc53cc0cbbcefcbe15bec4097ab57195703/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8b965523613022633cf91eff9c2ee724da9a6eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b965523613022633cf91eff9c2ee724da9a6eb", "html_url": "https://github.com/rust-lang/rust/commit/b8b965523613022633cf91eff9c2ee724da9a6eb"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "72d26d53a3119e94cf77fc33193e3da6e6097055", "filename": "crates/ide_ssr/src/fragments.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2d373dc53cc0cbbcefcbe15bec4097ab57195703/crates%2Fide_ssr%2Fsrc%2Ffragments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d373dc53cc0cbbcefcbe15bec4097ab57195703/crates%2Fide_ssr%2Fsrc%2Ffragments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Ffragments.rs?ref=2d373dc53cc0cbbcefcbe15bec4097ab57195703", "patch": "@@ -6,7 +6,6 @@\n //! needs to determine it somehow. We do this in a stupid way -- by pasting SSR\n //! rule into different contexts and checking what works.\n \n-use parser::SyntaxKind;\n use syntax::{ast, AstNode, SyntaxNode};\n \n pub(crate) fn ty(s: &str) -> Result<SyntaxNode, ()> {\n@@ -17,6 +16,9 @@ pub(crate) fn ty(s: &str) -> Result<SyntaxNode, ()> {\n         return Err(());\n     }\n     let node = parse.tree().syntax().descendants().find_map(ast::Type::cast).ok_or(())?;\n+    if node.to_string() != s {\n+        return Err(());\n+    }\n     Ok(node.syntax().clone())\n }\n \n@@ -28,5 +30,8 @@ pub(crate) fn item(s: &str) -> Result<SyntaxNode, ()> {\n         return Err(());\n     }\n     let node = parse.tree().syntax().descendants().find_map(ast::Item::cast).ok_or(())?;\n+    if node.to_string() != s {\n+        return Err(());\n+    }\n     Ok(node.syntax().clone())\n }"}]}