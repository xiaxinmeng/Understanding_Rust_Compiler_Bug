{"sha": "823ffaa834bde2fb0daabd010c369aae561fb765", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyM2ZmYWE4MzRiZGUyZmIwZGFhYmQwMTBjMzY5YWFlNTYxZmI3NjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-29T13:16:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-02T08:36:18Z"}, "message": "update comments", "tree": {"sha": "243413ecb01e4452c1ac0663062a79328db20ee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/243413ecb01e4452c1ac0663062a79328db20ee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/823ffaa834bde2fb0daabd010c369aae561fb765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/823ffaa834bde2fb0daabd010c369aae561fb765", "html_url": "https://github.com/rust-lang/rust/commit/823ffaa834bde2fb0daabd010c369aae561fb765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/823ffaa834bde2fb0daabd010c369aae561fb765/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ba7e776b611b797b00e5a2cd02584c5993514d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba7e776b611b797b00e5a2cd02584c5993514d5", "html_url": "https://github.com/rust-lang/rust/commit/2ba7e776b611b797b00e5a2cd02584c5993514d5"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "899cc40dc32065f3f4078657e9138bf1ab8a43fe", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/823ffaa834bde2fb0daabd010c369aae561fb765/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/823ffaa834bde2fb0daabd010c369aae561fb765/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=823ffaa834bde2fb0daabd010c369aae561fb765", "patch": "@@ -529,13 +529,15 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M>\n         let op = match val.val {\n             ConstValue::ByRef(ptr, _alloc) => {\n                 // We rely on mutability being set correctly in that allocation to prevent writes\n-                // where none should happen -- and for `static mut`, we copy on demand anyway.\n+                // where none should happen.\n                 let ptr = self.tag_static_base_pointer(ptr);\n                 Operand::Indirect(MemPlace::from_ptr(ptr, layout.align.abi))\n             },\n             ConstValue::Scalar(x) =>\n                 Operand::Immediate(Immediate::Scalar(tag_scalar(x).into())),\n             ConstValue::Slice { data, start, end } => {\n+                // We rely on mutability being set correctly in `data` to prevent writes\n+                // where none should happen.\n                 let ptr = Pointer::new(\n                     self.tcx.alloc_map.lock().create_memory_alloc(data),\n                     Size::from_bytes(start as u64), // offset: `start`"}]}