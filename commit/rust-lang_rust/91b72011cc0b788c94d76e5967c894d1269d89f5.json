{"sha": "91b72011cc0b788c94d76e5967c894d1269d89f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYjcyMDExY2MwYjc4OGM5NGQ3NmU1OTY3Yzg5NGQxMjY5ZDg5ZjU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-09T00:12:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-09T00:12:26Z"}, "message": "Rollup merge of #25898 - azerupi:patch-3, r=steveklabnik\n\nAs mentioned in #25893 the copy trait is not very well explained for beginners. There is no clear mention that all primitive types implement the copy trait and there are not a lot of examples. \r\n\r\nWith this change I try to make it more visible and understandable for new users. \r\n\r\nI myself have struggled with this, see [my question on stackoverflow](http://stackoverflow.com/questions/30540419/why-are-booleans-copyable-even-though-the-documentation-doesnt-indicate-that). And I want to make it more transparent for others. \r\n\r\nI filed issue #25893 but I thought that I could give it a shot myself to relieve some of the work from the devs :)\r\n\r\nIf it is not well written or there are some changes to be made before it can be merged, let me know.\r\n\r\nCheers,\r\nMathieu", "tree": {"sha": "7bf17bc98f8a78aaaddf4cad78028844257d286c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bf17bc98f8a78aaaddf4cad78028844257d286c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91b72011cc0b788c94d76e5967c894d1269d89f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91b72011cc0b788c94d76e5967c894d1269d89f5", "html_url": "https://github.com/rust-lang/rust/commit/91b72011cc0b788c94d76e5967c894d1269d89f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91b72011cc0b788c94d76e5967c894d1269d89f5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/521f82eb12f939fa95aa06ad1649f4aa1420ddfd", "html_url": "https://github.com/rust-lang/rust/commit/521f82eb12f939fa95aa06ad1649f4aa1420ddfd"}, {"sha": "5efdcf268aed5139b8ec9de52db094edaf866822", "url": "https://api.github.com/repos/rust-lang/rust/commits/5efdcf268aed5139b8ec9de52db094edaf866822", "html_url": "https://github.com/rust-lang/rust/commit/5efdcf268aed5139b8ec9de52db094edaf866822"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "46af311acf31547332961f38c2a980bbf260ee06", "filename": "src/doc/trpl/ownership.md", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/91b72011cc0b788c94d76e5967c894d1269d89f5/src%2Fdoc%2Ftrpl%2Fownership.md", "raw_url": "https://github.com/rust-lang/rust/raw/91b72011cc0b788c94d76e5967c894d1269d89f5/src%2Fdoc%2Ftrpl%2Fownership.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fownership.md?ref=91b72011cc0b788c94d76e5967c894d1269d89f5", "patch": "@@ -156,6 +156,46 @@ that, just like a move, when we assign `v` to `v2`, a copy of the data is made.\n But, unlike a move, we can still use `v` afterward. This is because an `i32`\n has no pointers to data somewhere else, copying it is a full copy.\n \n+All primitive types implement the `Copy` trait and their ownership is\n+therefore not moved like one would assume, following the \u00b4ownership rules\u00b4.\n+To give an example, the two following snippets of code only compile because the \n+`i32` and `bool` types implement the `Copy` trait. \n+\n+```rust\n+fn main() {\n+    let a = 5;\n+\n+    let _y = double(a);\n+    println!(\"{}\", a);\n+}\n+\n+fn double(x: i32) -> i32 {\n+    x * 2\n+}\n+```\n+\n+```rust\n+fn main() {\n+    let a = true;\n+\n+    let _y = change_truth(a);\n+    println!(\"{}\", a);\n+}\n+\n+fn change_truth(x: bool) -> bool {\n+    !x\n+}\n+```\n+\n+If we would have used types that do not implement the `Copy` trait,\n+we would have gotten a compile error because we tried to use a moved value.\n+\n+```text\n+error: use of moved value: `a`\n+println!(\"{}\", a);\n+               ^\n+```\n+\n We will discuss how to make your own types `Copy` in the [traits][traits]\n section.\n "}]}