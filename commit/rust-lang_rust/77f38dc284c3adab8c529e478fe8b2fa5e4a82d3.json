{"sha": "77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZjM4ZGMyODRjM2FkYWI4YzUyOWU0NzhmZThiMmZhNWU0YTgyZDM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-12T04:16:38Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-16T16:00:30Z"}, "message": "ty: convert `ErrorHandled::Reported` to `ConstKind::Error`.", "tree": {"sha": "a46b9a3f2faacdbf3de15673081f6f54f7ad7c49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a46b9a3f2faacdbf3de15673081f6f54f7ad7c49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "html_url": "https://github.com/rust-lang/rust/commit/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7c4081b18fbf50f2d260ea893b659aec0b1d84a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c4081b18fbf50f2d260ea893b659aec0b1d84a", "html_url": "https://github.com/rust-lang/rust/commit/d7c4081b18fbf50f2d260ea893b659aec0b1d84a"}], "stats": {"total": 349, "additions": 54, "deletions": 295}, "files": [{"sha": "c80d4fb99b52534870db922852827299211d65ba", "filename": "src/librustc_middle/ty/sty.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Flibrustc_middle%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Flibrustc_middle%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsty.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -18,6 +18,7 @@ use crate::ty::{List, ParamEnv, ParamEnvAnd, TyS};\n use polonius_engine::Atom;\n use rustc_ast::ast::{self, Ident};\n use rustc_data_structures::captures::Captures;\n+use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_index::vec::Idx;\n@@ -2340,6 +2341,8 @@ impl<'tcx> Const<'tcx> {\n     /// unevaluated constant.\n     pub fn eval(&self, tcx: TyCtxt<'tcx>, param_env: ParamEnv<'tcx>) -> &Const<'tcx> {\n         if let ConstKind::Unevaluated(did, substs, promoted) = self.val {\n+            use crate::mir::interpret::ErrorHandled;\n+\n             let param_env_and_substs = param_env.with_reveal_all().and(substs);\n \n             // HACK(eddyb) this erases lifetimes even though `const_eval_resolve`\n@@ -2369,8 +2372,10 @@ impl<'tcx> Const<'tcx> {\n                 // (which may be identity substs, see above),\n                 // can leak through `val` into the const we return.\n                 Ok(val) => Const::from_value(tcx, val, self.ty),\n-\n-                Err(_) => self,\n+                Err(ErrorHandled::TooGeneric | ErrorHandled::Linted) => self,\n+                Err(ErrorHandled::Reported(ErrorReported)) => {\n+                    tcx.mk_const(ty::Const { val: ty::ConstKind::Error, ty: self.ty })\n+                }\n             }\n         } else {\n             self"}, {"sha": "60589f7c264a612fe771d66ae61bb25c2055aeb3", "filename": "src/test/ui/array-break-length.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Farray-break-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Farray-break-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-break-length.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -1,11 +1,9 @@\n fn main() {\n     loop {\n         |_: [_; break]| {} //~ ERROR: `break` outside of a loop\n-        //~^ ERROR mismatched types\n     }\n \n     loop {\n         |_: [_; continue]| {} //~ ERROR: `continue` outside of a loop\n-        //~^ ERROR mismatched types\n     }\n }"}, {"sha": "93f1c238bcc47c4a0a25f37d69e64a974fe02fe9", "filename": "src/test/ui/array-break-length.stderr", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Farray-break-length.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Farray-break-length.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-break-length.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -5,30 +5,11 @@ LL |         |_: [_; break]| {}\n    |                 ^^^^^ cannot `break` outside of a loop\n \n error[E0268]: `continue` outside of a loop\n-  --> $DIR/array-break-length.rs:8:17\n+  --> $DIR/array-break-length.rs:7:17\n    |\n LL |         |_: [_; continue]| {}\n    |                 ^^^^^^^^ cannot `continue` outside of a loop\n \n-error[E0308]: mismatched types\n-  --> $DIR/array-break-length.rs:3:9\n-   |\n-LL |         |_: [_; break]| {}\n-   |         ^^^^^^^^^^^^^^^^^^ expected `()`, found closure\n-   |\n-   = note: expected unit type `()`\n-                found closure `[closure@$DIR/array-break-length.rs:3:9: 3:27]`\n-\n-error[E0308]: mismatched types\n-  --> $DIR/array-break-length.rs:8:9\n-   |\n-LL |         |_: [_; continue]| {}\n-   |         ^^^^^^^^^^^^^^^^^^^^^ expected `()`, found closure\n-   |\n-   = note: expected unit type `()`\n-                found closure `[closure@$DIR/array-break-length.rs:8:9: 8:30]`\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0268, E0308.\n-For more information about an error, try `rustc --explain E0268`.\n+For more information about this error, try `rustc --explain E0268`."}, {"sha": "fda590fda022c442a8bcf4e2cd347669dbf5c7d9", "filename": "src/test/ui/closures/closure-array-break-length.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -2,8 +2,6 @@ fn main() {\n     |_: [_; continue]| {}; //~ ERROR: `continue` outside of a loop\n \n     while |_: [_; continue]| {} {} //~ ERROR: `continue` outside of a loop\n-    //~^ ERROR mismatched types\n \n     while |_: [_; break]| {} {} //~ ERROR: `break` outside of a loop\n-    //~^ ERROR mismatched types\n }"}, {"sha": "2b8ab9bfc4414938d21f0e0679369feefd3067a9", "filename": "src/test/ui/closures/closure-array-break-length.stderr", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -11,30 +11,11 @@ LL |     while |_: [_; continue]| {} {}\n    |                   ^^^^^^^^ cannot `continue` outside of a loop\n \n error[E0268]: `break` outside of a loop\n-  --> $DIR/closure-array-break-length.rs:7:19\n+  --> $DIR/closure-array-break-length.rs:6:19\n    |\n LL |     while |_: [_; break]| {} {}\n    |                   ^^^^^ cannot `break` outside of a loop\n \n-error[E0308]: mismatched types\n-  --> $DIR/closure-array-break-length.rs:4:11\n-   |\n-LL |     while |_: [_; continue]| {} {}\n-   |           ^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found closure\n-   |\n-   = note: expected type `bool`\n-           found closure `[closure@$DIR/closure-array-break-length.rs:4:11: 4:32]`\n-\n-error[E0308]: mismatched types\n-  --> $DIR/closure-array-break-length.rs:7:11\n-   |\n-LL |     while |_: [_; break]| {} {}\n-   |           ^^^^^^^^^^^^^^^^^^ expected `bool`, found closure\n-   |\n-   = note: expected type `bool`\n-           found closure `[closure@$DIR/closure-array-break-length.rs:7:11: 7:29]`\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0268, E0308.\n-For more information about an error, try `rustc --explain E0268`.\n+For more information about this error, try `rustc --explain E0268`."}, {"sha": "6fd8e9cbc806b17c872bcc12c77623134faa428a", "filename": "src/test/ui/consts/const-eval/const-eval-overflow-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -19,7 +19,6 @@ const A_I8_I\n     : [u32; (i8::MAX as usize) + 1]\n     = [0; (i8::MAX + 1) as usize];\n //~^ ERROR evaluation of constant value failed\n-//~| ERROR mismatched types\n \n fn main() {\n     foo(&A_I8_I[..]);"}, {"sha": "2c5b4607aa4d3ca802d13aa78f3f1b69437f46d4", "filename": "src/test/ui/consts/const-eval/const-eval-overflow-3.stderr", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -4,16 +4,6 @@ error[E0080]: evaluation of constant value failed\n LL |     = [0; (i8::MAX + 1) as usize];\n    |           ^^^^^^^^^^^^^ attempt to add with overflow\n \n-error[E0308]: mismatched types\n-  --> $DIR/const-eval-overflow-3.rs:20:7\n-   |\n-LL |     = [0; (i8::MAX + 1) as usize];\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `128usize`, found `(i8::MAX + 1) as usize`\n-   |\n-   = note: expected array `[u32; 128]`\n-              found array `[u32; _]`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0080, E0308.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "db6f17a671aea5b71db75f41abe6837018d67ef4", "filename": "src/test/ui/consts/const-eval/const-eval-overflow-3b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -18,7 +18,6 @@ const A_I8_I\n     = [0; (i8::MAX + 1u8) as usize];\n //~^ ERROR mismatched types\n //~| ERROR cannot add `u8` to `i8`\n-//~| ERROR mismatched types\n \n fn main() {\n     foo(&A_I8_I[..]);"}, {"sha": "3da34fe9af7ecbe8ba069bd644be8d4a769630b5", "filename": "src/test/ui/consts/const-eval/const-eval-overflow-3b.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-overflow-3b.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -12,16 +12,7 @@ LL |     = [0; (i8::MAX + 1u8) as usize];\n    |\n    = help: the trait `std::ops::Add<u8>` is not implemented for `i8`\n \n-error[E0308]: mismatched types\n-  --> $DIR/const-eval-overflow-3b.rs:18:7\n-   |\n-LL |     = [0; (i8::MAX + 1u8) as usize];\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `128usize`, found `(i8::MAX + 1u8) as usize`\n-   |\n-   = note: expected array `[u32; 128]`\n-              found array `[u32; _]`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n Some errors have detailed explanations: E0277, E0308.\n For more information about an error, try `rustc --explain E0277`."}, {"sha": "80494d1662987e98efbf5bf12896aeafe35a5887", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -2,7 +2,7 @@ fn main() {\n     // Make sure match uses the usual pointer comparison code path -- i.e., it should complain\n     // that pointer comparison is disallowed, not that parts of a pointer are accessed as raw\n     // bytes.\n-    let _: [u8; 0] = [4; { //~ ERROR mismatched types\n+    let _: [u8; 0] = [4; {\n         match &1 as *const i32 as usize {\n             //~^ ERROR casting pointers to integers in constants\n             //~| ERROR `match` is not allowed in a `const`"}, {"sha": "b47f6d5f845feeab0e81fbd237a557ebbfbf939f", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.stderr", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -28,30 +28,7 @@ error[E0080]: evaluation of constant value failed\n LL |         match &1 as *const i32 as usize {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^ \"pointer-to-integer cast\" needs an rfc before being allowed inside constants\n \n-error[E0308]: mismatched types\n-  --> $DIR/match-test-ptr-null.rs:5:22\n-   |\n-LL |       let _: [u8; 0] = [4; {\n-   |  ____________-------___^\n-   | |            |\n-   | |            expected due to this\n-LL | |         match &1 as *const i32 as usize {\n-LL | |\n-LL | |\n-...  |\n-LL | |         }\n-LL | |     }];\n-   | |______^ expected `0usize`, found `{\n-        match &1 as *const i32 as usize {\n-            0 => 42,\n-            n => n,\n-        }\n-    }`\n-   |\n-   = note: expected array `[u8; 0]`\n-              found array `[u8; _]`\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0080, E0308, E0658.\n+Some errors have detailed explanations: E0080, E0658.\n For more information about an error, try `rustc --explain E0080`."}, {"sha": "35915a7a606a4ddee8e5b93493b1227d97e03d0c", "filename": "src/test/ui/consts/const-integer-bool-ops.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-integer-bool-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-integer-bool-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-integer-bool-ops.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -6,7 +6,6 @@ const X: usize = 42 && 39;\n //~| ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARR: [i32; X] = [99; 34];\n-//~^ ERROR evaluation of constant value failed\n \n const X1: usize = 42 || 39;\n //~^ ERROR mismatched types\n@@ -16,7 +15,6 @@ const X1: usize = 42 || 39;\n //~| ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARR1: [i32; X1] = [99; 47];\n-//~^ ERROR evaluation of constant value failed\n \n const X2: usize = -42 || -39;\n //~^ ERROR mismatched types\n@@ -26,7 +24,6 @@ const X2: usize = -42 || -39;\n //~| ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARR2: [i32; X2] = [99; 18446744073709551607];\n-//~^ ERROR evaluation of constant value failed\n \n const X3: usize = -42 && -39;\n //~^ ERROR mismatched types\n@@ -36,43 +33,36 @@ const X3: usize = -42 && -39;\n //~| ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARR3: [i32; X3] = [99; 6];\n-//~^ ERROR evaluation of constant value failed\n \n const Y: usize = 42.0 == 42.0;\n //~^ ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARRR: [i32; Y] = [99; 1];\n-//~^ ERROR evaluation of constant value failed\n \n const Y1: usize = 42.0 >= 42.0;\n //~^ ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARRR1: [i32; Y1] = [99; 1];\n-//~^ ERROR evaluation of constant value failed\n \n const Y2: usize = 42.0 <= 42.0;\n //~^ ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARRR2: [i32; Y2] = [99; 1];\n-//~^ ERROR evaluation of constant value failed\n \n const Y3: usize = 42.0 > 42.0;\n //~^ ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARRR3: [i32; Y3] = [99; 0];\n-//~^ ERROR evaluation of constant value failed\n \n const Y4: usize = 42.0 < 42.0;\n //~^ ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARRR4: [i32; Y4] = [99; 0];\n-//~^ ERROR evaluation of constant value failed\n \n const Y5: usize = 42.0 != 42.0;\n //~^ ERROR mismatched types\n //~| expected `usize`, found `bool`\n const ARRR5: [i32; Y5] = [99; 0];\n-//~^ ERROR evaluation of constant value failed\n \n fn main() {\n     let _ = ARR;"}, {"sha": "4e503e5a5c0a4df39a204d7e5e31c4679f620d8a", "filename": "src/test/ui/consts/const-integer-bool-ops.stderr", "status": "modified", "additions": 17, "deletions": 78, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-integer-bool-ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-integer-bool-ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-integer-bool-ops.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -16,157 +16,96 @@ error[E0308]: mismatched types\n LL | const X: usize = 42 && 39;\n    |                  ^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:8:18\n-   |\n-LL | const ARR: [i32; X] = [99; 34];\n-   |                  ^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:11:19\n+  --> $DIR/const-integer-bool-ops.rs:10:19\n    |\n LL | const X1: usize = 42 || 39;\n    |                   ^^ expected `bool`, found integer\n \n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:11:25\n+  --> $DIR/const-integer-bool-ops.rs:10:25\n    |\n LL | const X1: usize = 42 || 39;\n    |                         ^^ expected `bool`, found integer\n \n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:11:19\n+  --> $DIR/const-integer-bool-ops.rs:10:19\n    |\n LL | const X1: usize = 42 || 39;\n    |                   ^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:18:19\n-   |\n-LL | const ARR1: [i32; X1] = [99; 47];\n-   |                   ^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:21:19\n+  --> $DIR/const-integer-bool-ops.rs:19:19\n    |\n LL | const X2: usize = -42 || -39;\n    |                   ^^^ expected `bool`, found integer\n \n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:21:26\n+  --> $DIR/const-integer-bool-ops.rs:19:26\n    |\n LL | const X2: usize = -42 || -39;\n    |                          ^^^ expected `bool`, found integer\n \n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:21:19\n+  --> $DIR/const-integer-bool-ops.rs:19:19\n    |\n LL | const X2: usize = -42 || -39;\n    |                   ^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:28:19\n-   |\n-LL | const ARR2: [i32; X2] = [99; 18446744073709551607];\n-   |                   ^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:31:19\n+  --> $DIR/const-integer-bool-ops.rs:28:19\n    |\n LL | const X3: usize = -42 && -39;\n    |                   ^^^ expected `bool`, found integer\n \n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:31:26\n+  --> $DIR/const-integer-bool-ops.rs:28:26\n    |\n LL | const X3: usize = -42 && -39;\n    |                          ^^^ expected `bool`, found integer\n \n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:31:19\n+  --> $DIR/const-integer-bool-ops.rs:28:19\n    |\n LL | const X3: usize = -42 && -39;\n    |                   ^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:38:19\n-   |\n-LL | const ARR3: [i32; X3] = [99; 6];\n-   |                   ^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:41:18\n+  --> $DIR/const-integer-bool-ops.rs:37:18\n    |\n LL | const Y: usize = 42.0 == 42.0;\n    |                  ^^^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:44:19\n-   |\n-LL | const ARRR: [i32; Y] = [99; 1];\n-   |                   ^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:47:19\n+  --> $DIR/const-integer-bool-ops.rs:42:19\n    |\n LL | const Y1: usize = 42.0 >= 42.0;\n    |                   ^^^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:50:20\n-   |\n-LL | const ARRR1: [i32; Y1] = [99; 1];\n-   |                    ^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:53:19\n+  --> $DIR/const-integer-bool-ops.rs:47:19\n    |\n LL | const Y2: usize = 42.0 <= 42.0;\n    |                   ^^^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:56:20\n-   |\n-LL | const ARRR2: [i32; Y2] = [99; 1];\n-   |                    ^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:59:19\n+  --> $DIR/const-integer-bool-ops.rs:52:19\n    |\n LL | const Y3: usize = 42.0 > 42.0;\n    |                   ^^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:62:20\n-   |\n-LL | const ARRR3: [i32; Y3] = [99; 0];\n-   |                    ^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:65:19\n+  --> $DIR/const-integer-bool-ops.rs:57:19\n    |\n LL | const Y4: usize = 42.0 < 42.0;\n    |                   ^^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:68:20\n-   |\n-LL | const ARRR4: [i32; Y4] = [99; 0];\n-   |                    ^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/const-integer-bool-ops.rs:71:19\n+  --> $DIR/const-integer-bool-ops.rs:62:19\n    |\n LL | const Y5: usize = 42.0 != 42.0;\n    |                   ^^^^^^^^^^^^ expected `usize`, found `bool`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-integer-bool-ops.rs:74:20\n-   |\n-LL | const ARRR5: [i32; Y5] = [99; 0];\n-   |                    ^^ referenced constant has errors\n-\n-error: aborting due to 28 previous errors\n+error: aborting due to 18 previous errors\n \n-Some errors have detailed explanations: E0080, E0308.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "8057d64369a23e553ba21dcb181203e10c97d4db", "filename": "src/test/ui/consts/const-tup-index-span.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-tup-index-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-tup-index-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-tup-index-span.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -4,7 +4,6 @@ const TUP: (usize,) = 5usize << 64;\n //~^ ERROR mismatched types\n //~| expected tuple, found `usize`\n const ARR: [i32; TUP.0] = [];\n-//~^ ERROR evaluation of constant value failed\n \n fn main() {\n }"}, {"sha": "6724984d8d7ac1f26f023cecc3e3bed91dc9488f", "filename": "src/test/ui/consts/const-tup-index-span.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-tup-index-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fconsts%2Fconst-tup-index-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-tup-index-span.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -7,13 +7,6 @@ LL | const TUP: (usize,) = 5usize << 64;\n    = note: expected tuple `(usize,)`\n                found type `usize`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-tup-index-span.rs:6:18\n-   |\n-LL | const ARR: [i32; TUP.0] = [];\n-   |                  ^^^ referenced constant has errors\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0080, E0308.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "3a52e4d6216a5e30b944953c1210c8b410265212", "filename": "src/test/ui/issues/issue-39559-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -17,5 +17,4 @@ fn main() {\n         = [0; Dim3::dim()];\n         //~^ ERROR E0015\n         //~| ERROR E0080\n-        //~| ERROR mismatched types\n }"}, {"sha": "586debbbe535348fc2bcd9e9566194be05df8ed7", "filename": "src/test/ui/issues/issue-39559-2.stderr", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -22,19 +22,7 @@ error[E0080]: evaluation of constant value failed\n LL |         = [0; Dim3::dim()];\n    |               ^^^^^^^^^^^ calling non-const function `<Dim3 as Dim>::dim`\n \n-error[E0308]: mismatched types\n-  --> $DIR/issue-39559-2.rs:17:11\n-   |\n-LL |     let array: [usize; Dim3::dim()]\n-   |                -------------------- expected due to this\n-...\n-LL |         = [0; Dim3::dim()];\n-   |           ^^^^^^^^^^^^^^^^ expected `Dim3::dim()`, found `Dim3::dim()`\n-   |\n-   = note: expected array `[usize; _]`\n-              found array `[usize; _]`\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0015, E0080, E0308.\n+Some errors have detailed explanations: E0015, E0080.\n For more information about an error, try `rustc --explain E0015`."}, {"sha": "06a330813406a9fe0f5a61de534e8e403854181c", "filename": "src/test/ui/issues/issue-41394.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-41394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-41394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41394.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -5,7 +5,6 @@ enum Foo {\n \n enum Bar {\n     A = Foo::A as isize\n-    //~^ ERROR evaluation of constant value failed\n }\n \n fn main() {}"}, {"sha": "fa95ca9c18a1004a049da6e67152c0e40be605a0", "filename": "src/test/ui/issues/issue-41394.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-41394.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-41394.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41394.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -6,13 +6,6 @@ LL |     A = \"\" + 1\n    |         |\n    |         &str\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-41394.rs:7:9\n-   |\n-LL |     A = Foo::A as isize\n-   |         ^^^^^^^^^^^^^^^ referenced constant has errors\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0080, E0369.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0369`."}, {"sha": "00588735b9a5932c78fdfb9b3d3b9057d8492541", "filename": "src/test/ui/issues/issue-50599.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-50599.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-50599.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50599.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -2,5 +2,4 @@ fn main() {\n     const N: u32 = 1_000;\n     const M: usize = (f64::from(N) * std::f64::LOG10_2) as usize; //~ ERROR cannot find value\n     let mut digits = [0u32; M];\n-    //~^ ERROR evaluation of constant value failed\n }"}, {"sha": "378c57011ac506c9d3666008895ebfb6b45ef017", "filename": "src/test/ui/issues/issue-50599.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-50599.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-50599.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50599.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -11,13 +11,6 @@ LL | use std::f32::consts::LOG10_2;\n LL | use std::f64::consts::LOG10_2;\n    |\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-50599.rs:4:29\n-   |\n-LL |     let mut digits = [0u32; M];\n-   |                             ^ referenced constant has errors\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0080, E0425.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "fed08902c8b9d35def06f90722a25d06b55a4bdc", "filename": "src/test/ui/issues/issue-52060.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-52060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-52060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52060.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -4,6 +4,5 @@ static A: &'static [u32] = &[1];\n static B: [u32; 1] = [0; A.len()];\n //~^ ERROR [E0013]\n //~| ERROR evaluation of constant value failed\n-//~| ERROR mismatched types\n \n fn main() {}"}, {"sha": "502825e9766e3d90af04bd09c311cdfccecbdc26", "filename": "src/test/ui/issues/issue-52060.stderr", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-52060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-52060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52060.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -12,16 +12,7 @@ error[E0080]: evaluation of constant value failed\n LL | static B: [u32; 1] = [0; A.len()];\n    |                          ^ constant accesses static\n \n-error[E0308]: mismatched types\n-  --> $DIR/issue-52060.rs:4:22\n-   |\n-LL | static B: [u32; 1] = [0; A.len()];\n-   |                      ^^^^^^^^^^^^ expected `1usize`, found `A.len()`\n-   |\n-   = note: expected array `[u32; 1]`\n-              found array `[u32; _]`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0013, E0080, E0308.\n+Some errors have detailed explanations: E0013, E0080.\n For more information about an error, try `rustc --explain E0013`."}, {"sha": "00805eb5dc90d041c1d5aae815b9034e03ee56cf", "filename": "src/test/ui/issues/issue-54954.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-54954.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-54954.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54954.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -11,8 +11,6 @@ trait Tt {\n }\n \n fn f(z: [f32; ARR_LEN]) -> [f32; ARR_LEN] {\n-    //~^ ERROR evaluation of constant value failed\n-    //~| ERROR evaluation of constant value failed\n     z\n }\n "}, {"sha": "29d439b457ff64ecc2d3e5891911317c8da1c581", "filename": "src/test/ui/issues/issue-54954.stderr", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -15,19 +15,7 @@ LL |     const fn const_val<T: Sized>() -> usize {\n    |\n    = note: cannot satisfy `_: Tt`\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-54954.rs:13:15\n-   |\n-LL | fn f(z: [f32; ARR_LEN]) -> [f32; ARR_LEN] {\n-   |               ^^^^^^^ referenced constant has errors\n-\n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-54954.rs:13:34\n-   |\n-LL | fn f(z: [f32; ARR_LEN]) -> [f32; ARR_LEN] {\n-   |                                  ^^^^^^^ referenced constant has errors\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0080, E0283, E0379.\n-For more information about an error, try `rustc --explain E0080`.\n+Some errors have detailed explanations: E0283, E0379.\n+For more information about an error, try `rustc --explain E0283`."}, {"sha": "b6a083516093bfb00aef33e5e0d1158653feb15e", "filename": "src/test/ui/resolve/issue-65035-static-with-parent-generics.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -23,8 +23,7 @@ fn h<const N: usize>() {\n fn i<const N: usize>() {\n     static a: [u8; N] = [0; N];\n     //~^ ERROR can't use generic parameters from outer function\n-    //~^^ ERROR can't use generic parameters from outer function\n-    //~| ERROR mismatched types\n+    //~| ERROR can't use generic parameters from outer function\n }\n \n fn main() {}"}, {"sha": "6076328b12f736cadb933fc1613dd7de4a0badce", "filename": "src/test/ui/resolve/issue-65035-static-with-parent-generics.stderr", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-65035-static-with-parent-generics.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -48,16 +48,6 @@ LL | #![feature(const_generics)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error[E0308]: mismatched types\n-  --> $DIR/issue-65035-static-with-parent-generics.rs:24:25\n-   |\n-LL |     static a: [u8; N] = [0; N];\n-   |                         ^^^^^^ expected `N`, found `N`\n-   |\n-   = note: expected array `[u8; _]`\n-              found array `[u8; _]`\n-\n-error: aborting due to 6 previous errors; 1 warning emitted\n+error: aborting due to 5 previous errors; 1 warning emitted\n \n-Some errors have detailed explanations: E0308, E0401.\n-For more information about an error, try `rustc --explain E0308`.\n+For more information about this error, try `rustc --explain E0401`."}, {"sha": "4b6bc6124dbf301e232d640498f539cfde51fbba", "filename": "src/test/ui/type/type-dependent-def-issue-49241.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.rs?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -2,6 +2,4 @@ fn main() {\n     let v = vec![0];\n     const l: usize = v.count(); //~ ERROR attempt to use a non-constant value in a constant\n     let s: [u32; l] = v.into_iter().collect();\n-    //~^ ERROR evaluation of constant value failed\n-    //~^^ ERROR a value of type\n }"}, {"sha": "c5dcfa7a4313324c498db6236001fdde3bda0687", "filename": "src/test/ui/type/type-dependent-def-issue-49241.stderr", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f38dc284c3adab8c529e478fe8b2fa5e4a82d3/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-dependent-def-issue-49241.stderr?ref=77f38dc284c3adab8c529e478fe8b2fa5e4a82d3", "patch": "@@ -4,21 +4,6 @@ error[E0435]: attempt to use a non-constant value in a constant\n LL |     const l: usize = v.count();\n    |                      ^ non-constant value\n \n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/type-dependent-def-issue-49241.rs:4:18\n-   |\n-LL |     let s: [u32; l] = v.into_iter().collect();\n-   |                  ^ referenced constant has errors\n-\n-error[E0277]: a value of type `[u32; _]` cannot be built from an iterator over elements of type `{integer}`\n-  --> $DIR/type-dependent-def-issue-49241.rs:4:37\n-   |\n-LL |     let s: [u32; l] = v.into_iter().collect();\n-   |                                     ^^^^^^^ value of type `[u32; _]` cannot be built from `std::iter::Iterator<Item={integer}>`\n-   |\n-   = help: the trait `std::iter::FromIterator<{integer}>` is not implemented for `[u32; _]`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0080, E0277, E0435.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0435`."}]}