{"sha": "7f84e3d791846fb462eb39d05bbec029b68d97af", "node_id": "C_kwDOAAsO6NoAKDdmODRlM2Q3OTE4NDZmYjQ2MmViMzlkMDViYmVjMDI5YjY4ZDk3YWY", "commit": {"author": {"name": "Nathaniel Hamovitz", "email": "18648574+nhamovitz@users.noreply.github.com", "date": "2021-10-18T10:45:08Z"}, "committer": {"name": "Nathaniel Hamovitz", "email": "18648574+nhamovitz@users.noreply.github.com", "date": "2021-10-18T10:45:08Z"}, "message": "Rename lint", "tree": {"sha": "55ebe13712b29ca5de1c66c781fdf2bd7043fb0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55ebe13712b29ca5de1c66c781fdf2bd7043fb0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f84e3d791846fb462eb39d05bbec029b68d97af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f84e3d791846fb462eb39d05bbec029b68d97af", "html_url": "https://github.com/rust-lang/rust/commit/7f84e3d791846fb462eb39d05bbec029b68d97af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f84e3d791846fb462eb39d05bbec029b68d97af/comments", "author": {"login": "nhamovitz", "id": 18648574, "node_id": "MDQ6VXNlcjE4NjQ4NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/18648574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhamovitz", "html_url": "https://github.com/nhamovitz", "followers_url": "https://api.github.com/users/nhamovitz/followers", "following_url": "https://api.github.com/users/nhamovitz/following{/other_user}", "gists_url": "https://api.github.com/users/nhamovitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhamovitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhamovitz/subscriptions", "organizations_url": "https://api.github.com/users/nhamovitz/orgs", "repos_url": "https://api.github.com/users/nhamovitz/repos", "events_url": "https://api.github.com/users/nhamovitz/events{/privacy}", "received_events_url": "https://api.github.com/users/nhamovitz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nhamovitz", "id": 18648574, "node_id": "MDQ6VXNlcjE4NjQ4NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/18648574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhamovitz", "html_url": "https://github.com/nhamovitz", "followers_url": "https://api.github.com/users/nhamovitz/followers", "following_url": "https://api.github.com/users/nhamovitz/following{/other_user}", "gists_url": "https://api.github.com/users/nhamovitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhamovitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhamovitz/subscriptions", "organizations_url": "https://api.github.com/users/nhamovitz/orgs", "repos_url": "https://api.github.com/users/nhamovitz/repos", "events_url": "https://api.github.com/users/nhamovitz/events{/privacy}", "received_events_url": "https://api.github.com/users/nhamovitz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "149b3728732169cbd6684dfb5e17242924a506a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/149b3728732169cbd6684dfb5e17242924a506a7", "html_url": "https://github.com/rust-lang/rust/commit/149b3728732169cbd6684dfb5e17242924a506a7"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "0cf19a6f0f1695163d9a378af369917727080f79", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f84e3d791846fb462eb39d05bbec029b68d97af/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/7f84e3d791846fb462eb39d05bbec029b68d97af/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=7f84e3d791846fb462eb39d05bbec029b68d97af", "patch": "@@ -3021,7 +3021,7 @@ Released 2018-09-13\n [`too_many_arguments`]: https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n [`too_many_lines`]: https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines\n [`toplevel_ref_arg`]: https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg\n-[`trailing_zero_sized_array_without_repr_c`]: https://rust-lang.github.io/rust-clippy/master/index.html#trailing_zero_sized_array_without_repr_c\n+[`trailing_zero_sized_array_without_repr`]: https://rust-lang.github.io/rust-clippy/master/index.html#trailing_zero_sized_array_without_repr\n [`trait_duplication_in_bounds`]: https://rust-lang.github.io/rust-clippy/master/index.html#trait_duplication_in_bounds\n [`transmute_bytes_to_str`]: https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\n [`transmute_float_to_int`]: https://rust-lang.github.io/rust-clippy/master/index.html#transmute_float_to_int"}, {"sha": "af0629beb36d819a51ee4af3994cbdc1aa524c53", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=7f84e3d791846fb462eb39d05bbec029b68d97af", "patch": "@@ -443,7 +443,7 @@ store.register_lints(&[\n     temporary_assignment::TEMPORARY_ASSIGNMENT,\n     to_digit_is_some::TO_DIGIT_IS_SOME,\n     to_string_in_display::TO_STRING_IN_DISPLAY,\n-    trailing_zero_sized_array_without_repr_c::TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR_C,\n+    trailing_zero_sized_array_without_repr::TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR,\n     trait_bounds::TRAIT_DUPLICATION_IN_BOUNDS,\n     trait_bounds::TYPE_REPETITION_IN_BOUNDS,\n     transmute::CROSSPOINTER_TRANSMUTE,"}, {"sha": "eab0e5b90f11c8832d8039c46422bddfbea46f10", "filename": "clippy_lints/src/lib.register_nursery.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_nursery.rs?ref=7f84e3d791846fb462eb39d05bbec029b68d97af", "patch": "@@ -25,7 +25,7 @@ store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n     LintId::of(regex::TRIVIAL_REGEX),\n     LintId::of(strings::STRING_LIT_AS_BYTES),\n     LintId::of(suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS),\n-    LintId::of(trailing_zero_sized_array_without_repr_c::TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR_C),\n+    LintId::of(trailing_zero_sized_array_without_repr::TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR),\n     LintId::of(transmute::USELESS_TRANSMUTE),\n     LintId::of(use_self::USE_SELF),\n ])"}, {"sha": "1473a2f3095d0d6f7291a6648e8ccfb18b91c5a0", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=7f84e3d791846fb462eb39d05bbec029b68d97af", "patch": "@@ -356,7 +356,7 @@ mod tabs_in_doc_comments;\n mod temporary_assignment;\n mod to_digit_is_some;\n mod to_string_in_display;\n-mod trailing_zero_sized_array_without_repr_c;\n+mod trailing_zero_sized_array_without_repr;\n mod trait_bounds;\n mod transmute;\n mod transmuting_null;\n@@ -779,7 +779,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(move || Box::new(undocumented_unsafe_blocks::UndocumentedUnsafeBlocks::default()));\n     store.register_late_pass(|| Box::new(match_str_case_mismatch::MatchStrCaseMismatch));\n     store.register_late_pass(move || Box::new(format_args::FormatArgs));\n-    store.register_late_pass(|| Box::new(trailing_zero_sized_array_without_repr_c::TrailingZeroSizedArrayWithoutReprC));\n+    store.register_late_pass(|| Box::new(trailing_zero_sized_array_without_repr::TrailingZeroSizedArrayWithoutRepr));\n \n }\n "}, {"sha": "0267f7bdf0e9b2ad6ccf9411e08e12998e0b2595", "filename": "clippy_lints/src/trailing_zero_sized_array_without_repr.rs", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Ftrailing_zero_sized_array_without_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f84e3d791846fb462eb39d05bbec029b68d97af/clippy_lints%2Fsrc%2Ftrailing_zero_sized_array_without_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrailing_zero_sized_array_without_repr.rs?ref=7f84e3d791846fb462eb39d05bbec029b68d97af", "patch": "@@ -8,10 +8,10 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Displays a warning when a struct with a trailing zero-sized array is declared without the `repr(C)` attribute.\n+    /// Displays a warning when a struct with a trailing zero-sized array is declared without a `repr` attribute.\n     ///\n     /// ### Why is this bad?\n-    /// Zero-sized arrays aren't very useful in Rust itself, so such a struct is likely being created to pass to C code (or in conjuction with manual allocation to make it easy to compute the offset of the array). Either way, `#[repr(C)]` is needed.\n+    /// Zero-sized arrays aren't very useful in Rust itself, so such a struct is likely being created to pass to C code or in some other situation where control over memory layout matters (for example, in conjuction with manual allocation to make it easy to compute the offset of the array). Either way, `#[repr(C)]` (or another `repr` attribute) is needed.\n     ///\n     /// ### Example\n     /// ```rust\n@@ -29,13 +29,13 @@ declare_clippy_lint! {\n     ///     last: [SomeType; 0],\n     /// }\n     /// ```\n-    pub TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR_C,\n+    pub TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR,\n     nursery,\n     \"struct with a trailing zero-sized array but without `repr(C)` or another `repr` attribute\"\n }\n-declare_lint_pass!(TrailingZeroSizedArrayWithoutReprC => [TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR_C]);\n+declare_lint_pass!(TrailingZeroSizedArrayWithoutRepr => [TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR]);\n \n-impl<'tcx> LateLintPass<'tcx> for TrailingZeroSizedArrayWithoutReprC {\n+impl<'tcx> LateLintPass<'tcx> for TrailingZeroSizedArrayWithoutRepr {\n     fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx Item<'tcx>) {\n         if is_struct_with_trailing_zero_sized_array(cx, item) {\n             // NOTE: This is to include attributes on the definition when we print the lint. If the convention\n@@ -52,7 +52,7 @@ impl<'tcx> LateLintPass<'tcx> for TrailingZeroSizedArrayWithoutReprC {\n             if !has_repr_attr(cx, attrs) {\n                 span_lint_and_help(\n                     cx,\n-                    TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR_C,\n+                    TRAILING_ZERO_SIZED_ARRAY_WITHOUT_REPR,\n                     lint_span,\n                     \"trailing zero-sized array in a struct which is not marked `#[repr(C)]`\",\n                     None,\n@@ -65,17 +65,17 @@ impl<'tcx> LateLintPass<'tcx> for TrailingZeroSizedArrayWithoutReprC {\n \n fn is_struct_with_trailing_zero_sized_array(cx: &LateContext<'tcx>, item: &'tcx Item<'tcx>) -> bool {\n     // TODO: when finalized, replace with an `if_chain`. I have it like this because my rust-analyzer\n-    // doesn't work when it's an `if_chain` First check if last field is an array\n+    // doesn't work when it's an `if_chain`.\n+\n+    // First check if last field is an array\n     if let ItemKind::Struct(data, _) = &item.kind {\n-        let field_defs = data.fields();\n-        if let Some(last_field) = field_defs.last() {\n+        if let Some(last_field) = data.fields().last() {\n             if let rustc_hir::TyKind::Array(_, length) = last_field.ty.kind {\n                 // Then check if that that array zero-sized\n                 let length_ldid = cx.tcx.hir().local_def_id(length.hir_id);\n                 let length = Const::from_anon_const(cx.tcx, length_ldid);\n                 let length = length.try_eval_usize(cx.tcx, cx.param_env);\n-                // if let Some((Constant::Int(length), _)) = length {\n-                if let Some(length) = length { length == 0 } else { false }\n+                length == Some(0)\n             } else {\n                 false\n             }", "previous_filename": "clippy_lints/src/trailing_zero_sized_array_without_repr_c.rs"}, {"sha": "6ac124c8b34d56e52504934825da5ab489eb6998", "filename": "tests/ui/trailing_zero_sized_array_without_repr.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f84e3d791846fb462eb39d05bbec029b68d97af/tests%2Fui%2Ftrailing_zero_sized_array_without_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f84e3d791846fb462eb39d05bbec029b68d97af/tests%2Fui%2Ftrailing_zero_sized_array_without_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_zero_sized_array_without_repr.rs?ref=7f84e3d791846fb462eb39d05bbec029b68d97af", "patch": "@@ -1,4 +1,4 @@\n-#![warn(clippy::trailing_zero_sized_array_without_repr_c)]\n+#![warn(clippy::trailing_zero_sized_array_without_repr)]\n #![feature(const_generics_defaults)]\n \n // Do lint:", "previous_filename": "tests/ui/trailing_zero_sized_array_without_repr_c.rs"}]}