{"sha": "386863ac537d8f0cab87eff21ac7056c8935263e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4Njg2M2FjNTM3ZDhmMGNhYjg3ZWZmMjFhYzcwNTZjODkzNTI2M2U=", "commit": {"author": {"name": "Pointerbender", "email": "pointerbender@gmail.com", "date": "2021-06-03T15:24:10Z"}, "committer": {"name": "Pointerbender", "email": "pointerbender@gmail.com", "date": "2021-06-03T15:25:23Z"}, "message": "added a strings.rs regression test case for potential future UB", "tree": {"sha": "e337c422a8a4c0b7f4369b067f9657bf654c8b3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e337c422a8a4c0b7f4369b067f9657bf654c8b3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/386863ac537d8f0cab87eff21ac7056c8935263e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/386863ac537d8f0cab87eff21ac7056c8935263e", "html_url": "https://github.com/rust-lang/rust/commit/386863ac537d8f0cab87eff21ac7056c8935263e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/386863ac537d8f0cab87eff21ac7056c8935263e/comments", "author": {"login": "Pointerbender", "id": 81013316, "node_id": "MDQ6VXNlcjgxMDEzMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/81013316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pointerbender", "html_url": "https://github.com/Pointerbender", "followers_url": "https://api.github.com/users/Pointerbender/followers", "following_url": "https://api.github.com/users/Pointerbender/following{/other_user}", "gists_url": "https://api.github.com/users/Pointerbender/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pointerbender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pointerbender/subscriptions", "organizations_url": "https://api.github.com/users/Pointerbender/orgs", "repos_url": "https://api.github.com/users/Pointerbender/repos", "events_url": "https://api.github.com/users/Pointerbender/events{/privacy}", "received_events_url": "https://api.github.com/users/Pointerbender/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Pointerbender", "id": 81013316, "node_id": "MDQ6VXNlcjgxMDEzMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/81013316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pointerbender", "html_url": "https://github.com/Pointerbender", "followers_url": "https://api.github.com/users/Pointerbender/followers", "following_url": "https://api.github.com/users/Pointerbender/following{/other_user}", "gists_url": "https://api.github.com/users/Pointerbender/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pointerbender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pointerbender/subscriptions", "organizations_url": "https://api.github.com/users/Pointerbender/orgs", "repos_url": "https://api.github.com/users/Pointerbender/repos", "events_url": "https://api.github.com/users/Pointerbender/events{/privacy}", "received_events_url": "https://api.github.com/users/Pointerbender/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef998308805748289e46bce394a5d539b12b0118", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef998308805748289e46bce394a5d539b12b0118", "html_url": "https://github.com/rust-lang/rust/commit/ef998308805748289e46bce394a5d539b12b0118"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "b009e8bc6c4a437b2c359699b973b58ced38144b", "filename": "tests/run-pass/strings.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/386863ac537d8f0cab87eff21ac7056c8935263e/tests%2Frun-pass%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/386863ac537d8f0cab87eff21ac7056c8935263e/tests%2Frun-pass%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstrings.rs?ref=386863ac537d8f0cab87eff21ac7056c8935263e", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags: -Zmiri-track-raw-pointers\n+\n fn empty() -> &'static str {\n     \"\"\n }\n@@ -23,6 +25,32 @@ fn str_indexing() {\n     let _v = &mut x[..3];  // Test IndexMut on String.\n }\n \n+fn unique_aliasing() {\n+    // This is a regression test for the aliasing rules of a `Unique<T>` pointer.\n+    // At the time of writing this test case, Miri does not treat `Unique<T>`\n+    // pointers as a special case, these are treated like any other raw pointer.\n+    // However, there are existing Github issues which may lead to `Unique<T>`\n+    // becoming a special case through asserting unique ownership over the pointee:\n+    // - https://github.com/rust-lang/unsafe-code-guidelines/issues/258\n+    // - https://github.com/rust-lang/unsafe-code-guidelines/issues/262\n+    // Below, the calls to `String::remove` and `String::insert[_str]` follow\n+    // code paths that would trigger undefined behavior in case `Unique<T>`\n+    // would ever assert semantic ownership over the pointee. Internally,\n+    // these methods call `self.vec.as_ptr()` and `self.vec.as_mut_ptr()` on\n+    // the vector of bytes that are backing the `String`. That `Vec<u8>` holds a\n+    // `Unique<u8>` internally. The second call to `Vec::as_mut_ptr(&mut self)`\n+    // would then invalidate the pointers derived from `Vec::as_ptr(&self)`.\n+    // Note that as long as `Unique<T>` is treated like any other raw pointer,\n+    // this test case should pass. It is merely here as a canary test for\n+    // potential future undefined behavior.\n+    let mut x = String::from(\"Hello\");\n+    assert_eq!(x.remove(0), 'H');\n+    x.insert(0, 'H');\n+    assert_eq!(x, \"Hello\");\n+    x.insert_str(x.len(), \", world!\");\n+    assert_eq!(x, \"Hello, world!\");\n+}\n+\n fn main() {\n     assert_eq!(empty(), \"\");\n     assert_eq!(hello(), \"Hello, world!\");\n@@ -31,4 +59,5 @@ fn main() {\n \n     fat_pointer_on_32_bit(); // Should run without crashing.\n     str_indexing();\n+    unique_aliasing();\n }"}]}