{"sha": "7168eadafeacb50e9de56224c1366290b1c10e22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNjhlYWRhZmVhY2I1MGU5ZGU1NjIyNGMxMzY2MjkwYjFjMTBlMjI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-07T05:57:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-07T05:57:44Z"}, "message": "Rollup merge of #58192 - dlrobertson:fix_57876, r=oli-obk\n\nDo not ICE in codegen when using a extern_type static\n\nThe layout of a extern_type static is unsized, but may pass the\nWell-Formed check in typeck (See #55257).  As a result, we\ncannot assume that a static is sized when generating the `Place`\nfor an r-value.\n\nFixes: #57876\n\nr? @oli-obk", "tree": {"sha": "d235a7ffd9909bd4806c8919686106c9b727a323", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d235a7ffd9909bd4806c8919686106c9b727a323"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7168eadafeacb50e9de56224c1366290b1c10e22", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcW8jYCRBK7hj4Ov3rIwAAdHIIAIkFxAKakia3TZSuI8oefVet\nAGvXO5V32UZd6srda24Rsvvu02nIAGn64lIZUX+fCLn7wv0BWGagGYUrT7RP4uLL\njsz449GCVrJVyZftJd0F4DMCUCP3Czers4v3Ls+6yWe9js6EGtYDrBiDWkbwgTZ3\np+YHuP3D83TPaV3C93JnQnYUppHGWxbQbBdDlGDK6XUyTCFilGtQdEckD+aoRzAR\nO6U3hXoI7TAAOsw4BGmbiKkgGQaeH1pyCuhuPxOXrlZd6R1xKuDn6+jsTD0FEHW8\nSHbr6kWa3xh6NZ4GKU+HvPK+T5gHIK1wdEDeCCCywp+8yRaV36Oa4HlHD0iDBjE=\n=zYni\n-----END PGP SIGNATURE-----\n", "payload": "tree d235a7ffd9909bd4806c8919686106c9b727a323\nparent 4c9bef0cf8828d8dff66ac6b654a0018d39bcacc\nparent 80c052bed76d7b7406e956747012bc8a929fe909\nauthor kennytm <kennytm@gmail.com> 1549519064 +0800\ncommitter GitHub <noreply@github.com> 1549519064 +0800\n\nRollup merge of #58192 - dlrobertson:fix_57876, r=oli-obk\n\nDo not ICE in codegen when using a extern_type static\n\nThe layout of a extern_type static is unsized, but may pass the\nWell-Formed check in typeck (See #55257).  As a result, we\ncannot assume that a static is sized when generating the `Place`\nfor an r-value.\n\nFixes: #57876\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7168eadafeacb50e9de56224c1366290b1c10e22", "html_url": "https://github.com/rust-lang/rust/commit/7168eadafeacb50e9de56224c1366290b1c10e22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7168eadafeacb50e9de56224c1366290b1c10e22/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c9bef0cf8828d8dff66ac6b654a0018d39bcacc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9bef0cf8828d8dff66ac6b654a0018d39bcacc", "html_url": "https://github.com/rust-lang/rust/commit/4c9bef0cf8828d8dff66ac6b654a0018d39bcacc"}, {"sha": "80c052bed76d7b7406e956747012bc8a929fe909", "url": "https://api.github.com/repos/rust-lang/rust/commits/80c052bed76d7b7406e956747012bc8a929fe909", "html_url": "https://github.com/rust-lang/rust/commit/80c052bed76d7b7406e956747012bc8a929fe909"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "596f97a038892678a01520619a43b108b2b9c0f0", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=7168eadafeacb50e9de56224c1366290b1c10e22", "patch": "@@ -41,6 +41,21 @@ impl<'a, 'tcx: 'a, V: CodegenObject> PlaceRef<'tcx, V> {\n         }\n     }\n \n+    fn new_thin_place<Bx: BuilderMethods<'a, 'tcx, Value = V>>(\n+        bx: &mut Bx,\n+        llval: V,\n+        layout: TyLayout<'tcx>,\n+        align: Align,\n+    ) -> PlaceRef<'tcx, V> {\n+        assert!(!bx.cx().type_has_metadata(layout.ty));\n+        PlaceRef {\n+            llval,\n+            llextra: None,\n+            layout,\n+            align\n+        }\n+    }\n+\n     pub fn alloca<Bx: BuilderMethods<'a, 'tcx, Value = V>>(\n         bx: &mut Bx,\n         layout: TyLayout<'tcx>,\n@@ -421,8 +436,10 @@ impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 }\n             }\n             mir::Place::Static(box mir::Static { def_id, ty }) => {\n+                // NB: The layout of a static may be unsized as is the case when working\n+                // with a static that is an extern_type.\n                 let layout = cx.layout_of(self.monomorphize(&ty));\n-                PlaceRef::new_sized(bx.get_static(def_id), layout, layout.align.abi)\n+                PlaceRef::new_thin_place(bx, bx.get_static(def_id), layout, layout.align.abi)\n             },\n             mir::Place::Projection(box mir::Projection {\n                 ref base,"}, {"sha": "5879fc0ce7781a2f109cea88da1c65d463e69be2", "filename": "src/test/run-make-fulldeps/static-extern-type/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2FMakefile?ref=7168eadafeacb50e9de56224c1366290b1c10e22", "patch": "@@ -0,0 +1,5 @@\n+-include ../tools.mk\n+\n+all: $(call NATIVE_STATICLIB,define-foo)\n+\t$(RUSTC) -ldefine-foo use-foo.rs\n+\t$(call RUN,use-foo) || exit 1"}, {"sha": "39be5acfa11182f4c46ed1f09f3c4bf27100499b", "filename": "src/test/run-make-fulldeps/static-extern-type/define-foo.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2Fdefine-foo.c", "raw_url": "https://github.com/rust-lang/rust/raw/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2Fdefine-foo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2Fdefine-foo.c?ref=7168eadafeacb50e9de56224c1366290b1c10e22", "patch": "@@ -0,0 +1,11 @@\n+#include <stdint.h>\n+\n+struct Foo {\n+    uint8_t x;\n+};\n+\n+struct Foo FOO = { 42 };\n+\n+uint8_t bar(const struct Foo* foo) {\n+    return foo->x;\n+}"}, {"sha": "932b5b5944bc72d732f530e50fa268986e7400ad", "filename": "src/test/run-make-fulldeps/static-extern-type/use-foo.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2Fuse-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7168eadafeacb50e9de56224c1366290b1c10e22/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2Fuse-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-extern-type%2Fuse-foo.rs?ref=7168eadafeacb50e9de56224c1366290b1c10e22", "patch": "@@ -0,0 +1,14 @@\n+#![feature(extern_types)]\n+\n+extern \"C\" {\n+    type Foo;\n+    static FOO: Foo;\n+    fn bar(foo: *const Foo) -> u8;\n+}\n+\n+fn main() {\n+    unsafe {\n+        let foo = &FOO;\n+        assert_eq!(bar(foo), 42);\n+    }\n+}"}]}