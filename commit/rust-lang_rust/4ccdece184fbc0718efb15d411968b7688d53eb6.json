{"sha": "4ccdece184fbc0718efb15d411968b7688d53eb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjY2RlY2UxODRmYmMwNzE4ZWZiMTVkNDExOTY4Yjc2ODhkNTNlYjY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-12T23:13:37Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-12T23:13:37Z"}, "message": "Wrap long line.", "tree": {"sha": "63519a76ff1f7a04395189bac6bdcafe4fe83500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63519a76ff1f7a04395189bac6bdcafe4fe83500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ccdece184fbc0718efb15d411968b7688d53eb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ccdece184fbc0718efb15d411968b7688d53eb6", "html_url": "https://github.com/rust-lang/rust/commit/4ccdece184fbc0718efb15d411968b7688d53eb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ccdece184fbc0718efb15d411968b7688d53eb6/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19e70d76fc9443a7424a62c0b66a23aea3a27022", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e70d76fc9443a7424a62c0b66a23aea3a27022", "html_url": "https://github.com/rust-lang/rust/commit/19e70d76fc9443a7424a62c0b66a23aea3a27022"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "68353fc9e968c637aae61566fcd8517c44af495b", "filename": "src/boot/me/resolve.ml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4ccdece184fbc0718efb15d411968b7688d53eb6/src%2Fboot%2Fme%2Fresolve.ml", "raw_url": "https://github.com/rust-lang/rust/raw/4ccdece184fbc0718efb15d411968b7688d53eb6/src%2Fboot%2Fme%2Fresolve.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fresolve.ml?ref=4ccdece184fbc0718efb15d411968b7688d53eb6", "patch": "@@ -642,8 +642,9 @@ let lval_base_resolving_visitor\n       (fun _ -> log cx \"looking up slot or item with ident '%s'\" ident);\n     match lookup cx (!scopes) (Ast.KEY_ident ident) with\n         RES_failed _ -> err (Some id) \"unresolved identifier '%s'\" ident\n-      | RES_ok (_, id) -> ((iflog cx (fun _ -> log cx \"resolved to node id #%d\"\n-                                        (int_of_node id))); id)\n+      | RES_ok (_, id) ->\n+          ((iflog cx (fun _ -> log cx \"resolved to node id #%d\"\n+                        (int_of_node id))); id)\n   in\n   let lookup_slot_by_temp id temp =\n     iflog cx (fun _ -> log cx \"looking up temp slot #%d\" (int_of_temp temp));"}]}