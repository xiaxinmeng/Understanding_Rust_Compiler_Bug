{"sha": "565a7b07584c16b0113fdf8c6154546546cca900", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NWE3YjA3NTg0YzE2YjAxMTNmZGY4YzYxNTQ1NDY1NDZjY2E5MDA=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-20T12:27:30Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-20T12:27:30Z"}, "message": "Merge #303\n\n303: fix typos r=matklad a=brotzeit\n\n\n\nCo-authored-by: brotzeit <brotzeitmacher@gmail.com>", "tree": {"sha": "36a763e89e3fdf978c1671644b48ce7fad2ba943", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36a763e89e3fdf978c1671644b48ce7fad2ba943"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/565a7b07584c16b0113fdf8c6154546546cca900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/565a7b07584c16b0113fdf8c6154546546cca900", "html_url": "https://github.com/rust-lang/rust/commit/565a7b07584c16b0113fdf8c6154546546cca900", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/565a7b07584c16b0113fdf8c6154546546cca900/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "c96011833c7017505a9de21f35e5c7dece7446d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c96011833c7017505a9de21f35e5c7dece7446d3", "html_url": "https://github.com/rust-lang/rust/commit/c96011833c7017505a9de21f35e5c7dece7446d3"}, {"sha": "2c835ff0aa6c8e4e4a60e0c91463056f1003a652", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c835ff0aa6c8e4e4a60e0c91463056f1003a652", "html_url": "https://github.com/rust-lang/rust/commit/2c835ff0aa6c8e4e4a60e0c91463056f1003a652"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "b326f9c717fce63c476b3839de4d356b4cf4e4a9", "filename": "ARCHITECTURE.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/565a7b07584c16b0113fdf8c6154546546cca900/ARCHITECTURE.md", "raw_url": "https://github.com/rust-lang/rust/raw/565a7b07584c16b0113fdf8c6154546546cca900/ARCHITECTURE.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ARCHITECTURE.md?ref=565a7b07584c16b0113fdf8c6154546546cca900", "patch": "@@ -20,7 +20,7 @@ memory and never does any IO. Because the input data is source code, which\n typically measures in tens of megabytes at most, keeping all input data in\n memory is OK.\n \n-A \"structured semantic model\" is basically an object-oriented representations of\n+A \"structured semantic model\" is basically an object-oriented representation of\n modules, functions and types which appear in the source code. This representation\n is fully \"resolved\": all expressions have types, all references are bound to\n declarations, etc.\n@@ -90,29 +90,29 @@ fixes a bug in the grammar.\n We use [salsa][https://github.com/salsa-rs/salsa] crate for incremental and\n on-demand computation. Roughly, you can think of salsa as a key-value store, but\n it also can compute derived values using specified functions. The `ra_db` crate\n-provides a basic infrastructure for interracting with salsa. Crucially, it\n+provides a basic infrastructure for interacting with salsa. Crucially, it\n defines most of the \"input\" queries: facts supplied by the client of the\n analyzer. Reading the docs of the `ra_db::input` module should be useful:\n-everithing else is strictly derived from thouse inputs.\n+everything else is strictly derived from those inputs.\n \n ### `crates/ra_hir`\n \n-HIR provides a high-level \"object oriented\" acess to Rust code.\n+HIR provides high-level \"object oriented\" access to Rust code.\n \n The principal difference between HIR and syntax trees is that HIR is bound to a\n particular crate instance. That is, it has cfg flags and features applied (in\n-theory, in practice this is to be implemented). So, there relation between\n+theory, in practice this is to be implemented). So, the relation between\n syntax and HIR is many-to-one. The `source_binder` modules is responsible for\n-guessing a hir for a particular source position.\n+guessing a HIR for a particular source position.\n \n-Underneath, hir works on top of salsa, using a `HirDatabase` trait.\n+Underneath, HIR works on top of salsa, using a `HirDatabase` trait.\n \n ### `crates/ra_analysis`\n \n A stateful library for analyzing many Rust files as they change.\n-`AnalysisHost` is a mutable entity (clojure's atom) which holds\n+`AnalysisHost` is a mutable entity (clojure's atom) which holds the\n current state, incorporates changes and handles out `Analysis` --- an\n-immutable consistent snapshot of world state at a point in time, which\n+immutable and consistent snapshot of world state at a point in time, which\n actually powers analysis.\n \n One interesting aspect of analysis is its support for cancellation. When a change\n@@ -137,7 +137,7 @@ without the need to fiddle with build-systems, file\n synchronization and such.\n \n In a sense, `ra_editor` is just a bunch of pure functions which take a\n-syntax tree as an input.\n+syntax tree as input.\n \n The tests for `ra_editor` are `#[cfg(test)] mod tests` unit-tests spread\n throughout its modules."}]}