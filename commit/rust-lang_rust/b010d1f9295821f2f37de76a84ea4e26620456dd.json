{"sha": "b010d1f9295821f2f37de76a84ea4e26620456dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMTBkMWY5Mjk1ODIxZjJmMzdkZTc2YTg0ZWE0ZTI2NjIwNDU2ZGQ=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2018-08-02T18:58:13Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2018-08-02T18:58:13Z"}, "message": "Tidy fixes", "tree": {"sha": "aee1fa8923814fc9703c71088492c7ff073d69c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aee1fa8923814fc9703c71088492c7ff073d69c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b010d1f9295821f2f37de76a84ea4e26620456dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAltjVEUACgkQtAh+UQ6Y\nsWRByQ//furEtkfRoEH1NWbcWKKQVD0XUMg6s9dgA9jIlTL98QZARZR8bhS46+pW\nd9ZR89zYg90GmfnTQtHmdHczK/ODwh591sWFRlJtUXuWbfX0nkfxKQK/8iUry7cZ\nqsCvvF1mJPmHG23QI+4Xt4Nq/UXduCWWbrjtaAK1EaYjtsRw/JZpjUihIHgFwrxU\nCt4fFLqZeRpVKhlZPfSuHO8ulonnD6J7Ed0KZ0b8I3Q03PKYZ+Wv0AOamnuuwtNj\n9Eiz5HmDXgZqxeCYP36Pgrh+kosuNsTqyCFbD1k9fI/+cWd5HWNut6nlc9ssMkPM\nogcqHyCFSI2Sib76y8QozhhP+s7XWECIfFpeZPPU69XByaZoC7RLZQcjYGEON5h7\ngGB0+rMw0GmZV2f6LRa9FgIWh3dANHBZ/8OymQfhsqQOS6I4s5lcQD8hWVly/U1d\n3tqsx1CCnXLilXJ6byHW6EmksQ58CcAEx54VPvfwQKmpSaGDETcpUT/mvRBQCPtw\nlKvdBpNUCDz5+bXIydbRpdc+Oxt1McfoezUmlyK5GZ5D3eEvHUHezVu1iDLiBcFh\nwjxvijXGMfphCe8sAE2TzL6KBHPbAxsXMyRRyi1/0OcUvL6zBi28CisxFeUT7jAn\nahb70A6j4q4VZBJxi30fKp+MGSEs215KRwnX9qAHp4yqFTAzdT0=\n=p48B\n-----END PGP SIGNATURE-----", "payload": "tree aee1fa8923814fc9703c71088492c7ff073d69c7\nparent 016b5866852e3d9c7c5ba6cdc3938afe7976af9e\nauthor Aaron Hill <aa1ronham@gmail.com> 1533236293 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1533236293 -0400\n\nTidy fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b010d1f9295821f2f37de76a84ea4e26620456dd", "html_url": "https://github.com/rust-lang/rust/commit/b010d1f9295821f2f37de76a84ea4e26620456dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b010d1f9295821f2f37de76a84ea4e26620456dd/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "016b5866852e3d9c7c5ba6cdc3938afe7976af9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/016b5866852e3d9c7c5ba6cdc3938afe7976af9e", "html_url": "https://github.com/rust-lang/rust/commit/016b5866852e3d9c7c5ba6cdc3938afe7976af9e"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "cfe3583a9806f7836431f78a97c027aaf018c41f", "filename": "src/librustc/traits/auto_trait.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b010d1f9295821f2f37de76a84ea4e26620456dd/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b010d1f9295821f2f37de76a84ea4e26620456dd/src%2Flibrustc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fauto_trait.rs?ref=b010d1f9295821f2f37de76a84ea4e26620456dd", "patch": "@@ -358,7 +358,8 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n                 &Err(SelectionError::Unimplemented) => {\n                     if self.is_of_param(pred.skip_binder().trait_ref.substs) {\n                         already_visited.remove(&pred);\n-                        self.add_user_pred(&mut user_computed_preds, ty::Predicate::Trait(pred.clone()));\n+                        self.add_user_pred(&mut user_computed_preds,\n+                                           ty::Predicate::Trait(pred.clone()));\n                         predicates.push_back(pred);\n                     } else {\n                         debug!(\n@@ -416,7 +417,8 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n     // under which a type implements an auto trait. A trait predicate involving\n     // a HRTB means that the type needs to work with any choice of lifetime,\n     // not just one specific lifetime (e.g. 'static).\n-    fn add_user_pred<'c>(&self, user_computed_preds: &mut FxHashSet<ty::Predicate<'c>>, new_pred: ty::Predicate<'c>) {\n+    fn add_user_pred<'c>(&self, user_computed_preds: &mut FxHashSet<ty::Predicate<'c>>,\n+                         new_pred: ty::Predicate<'c>) {\n         let mut should_add_new = true;\n         user_computed_preds.retain(|&old_pred| {\n             match (&new_pred, old_pred) {\n@@ -430,11 +432,17 @@ impl<'a, 'tcx> AutoTraitFinder<'a, 'tcx> {\n                             return true\n                         }\n \n-                        for (new_region, old_region) in new_substs.regions().zip(old_substs.regions()) {\n+                        for (new_region, old_region) in new_substs\n+                            .regions()\n+                            .zip(old_substs.regions()) {\n+\n                             match (new_region, old_region) {\n                                 // If both predicates have an 'ReLateBound' (a HRTB) in the\n                                 // same spot, we do nothing\n-                                (ty::RegionKind::ReLateBound(_, _), ty::RegionKind::ReLateBound(_, _)) => {},\n+                                (\n+                                    ty::RegionKind::ReLateBound(_, _),\n+                                    ty::RegionKind::ReLateBound(_, _)\n+                                ) => {},\n \n                                 (ty::RegionKind::ReLateBound(_, _), _) => {\n                                     // The new predicate has a HRTB in a spot where the old"}]}