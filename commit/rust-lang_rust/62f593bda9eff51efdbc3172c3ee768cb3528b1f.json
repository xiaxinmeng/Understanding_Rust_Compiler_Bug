{"sha": "62f593bda9eff51efdbc3172c3ee768cb3528b1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZjU5M2JkYTllZmY1MWVmZGJjMzE3MmMzZWU3NjhjYjM1MjhiMWY=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-12-20T20:38:41Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-12-20T20:38:41Z"}, "message": "Precompute vector length in smart_resolve_path_fragment", "tree": {"sha": "e4178a64e2857305e4db68b1ec4ad370560073f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4178a64e2857305e4db68b1ec4ad370560073f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62f593bda9eff51efdbc3172c3ee768cb3528b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62f593bda9eff51efdbc3172c3ee768cb3528b1f", "html_url": "https://github.com/rust-lang/rust/commit/62f593bda9eff51efdbc3172c3ee768cb3528b1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62f593bda9eff51efdbc3172c3ee768cb3528b1f/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93d5a8025dd53469c0ea80b645a3087a1d87bb57", "url": "https://api.github.com/repos/rust-lang/rust/commits/93d5a8025dd53469c0ea80b645a3087a1d87bb57", "html_url": "https://github.com/rust-lang/rust/commit/93d5a8025dd53469c0ea80b645a3087a1d87bb57"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4beaf6bfa8093ddd6fdb761aef01d60dedee43b5", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62f593bda9eff51efdbc3172c3ee768cb3528b1f/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62f593bda9eff51efdbc3172c3ee768cb3528b1f/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=62f593bda9eff51efdbc3172c3ee768cb3528b1f", "patch": "@@ -1891,8 +1891,9 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     self.r.trait_map.insert(id, traits);\n                 }\n \n-                let mut std_path = vec![Segment::from_ident(Ident::with_dummy_span(sym::std))];\n+                let mut std_path = Vec::with_capacity(1 + path.len());\n \n+                std_path.push(Segment::from_ident(Ident::with_dummy_span(sym::std)));\n                 std_path.extend(path);\n \n                 if self.r.primitive_type_table.primitive_types.contains_key(&path[0].ident.name) {"}]}