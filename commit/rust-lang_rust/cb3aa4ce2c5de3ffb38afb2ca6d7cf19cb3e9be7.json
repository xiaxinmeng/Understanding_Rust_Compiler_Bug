{"sha": "cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiM2FhNGNlMmM1ZGUzZmZiMzhhZmIyY2E2ZDdjZjE5Y2IzZTliZTc=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-07-12T20:13:48Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-07-14T11:32:14Z"}, "message": "Less unsafe in the array example of MaybeUninit docs", "tree": {"sha": "09b22087221f666c83403f687484113ae02127f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09b22087221f666c83403f687484113ae02127f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7", "html_url": "https://github.com/rust-lang/rust/commit/cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71f9384e3bec467158a628e2d11e77ffada16a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/71f9384e3bec467158a628e2d11e77ffada16a90", "html_url": "https://github.com/rust-lang/rust/commit/71f9384e3bec467158a628e2d11e77ffada16a90"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "f6f7ccffdb005d097cd688b7388465cc025214c5", "filename": "src/libcore/mem/maybe_uninit.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs?ref=cb3aa4ce2c5de3ffb38afb2ca6d7cf19cb3e9be7", "patch": "@@ -112,7 +112,6 @@ use crate::mem::ManuallyDrop;\n ///\n /// ```\n /// use std::mem::{self, MaybeUninit};\n-/// use std::ptr;\n ///\n /// let data = {\n ///     // Create an uninitialized array of `MaybeUninit`. The `assume_init` is\n@@ -122,10 +121,13 @@ use crate::mem::ManuallyDrop;\n ///         MaybeUninit::uninit().assume_init()\n ///     };\n ///\n-///     // Dropping a `MaybeUninit` does nothing, so if there is a panic during this loop,\n-///     // we have a memory leak, but there is no memory safety issue.\n+///     // Dropping a `MaybeUninit` does nothing. Thus using raw pointer\n+///     // assignment instead of `ptr::write` does not cause the old\n+///     // uninitialized value to be dropped. Also if there is a panic during\n+///     // this loop, we have a memory leak, but there is no memory safety\n+///     // issue.\n ///     for elem in &mut data[..] {\n-///         unsafe { ptr::write(elem.as_mut_ptr(), vec![42]); }\n+///         *elem = MaybeUninit::new(vec![42]);\n ///     }\n ///\n ///     // Everything is initialized. Transmute the array to the\n@@ -151,7 +153,7 @@ use crate::mem::ManuallyDrop;\n /// let mut data_len: usize = 0;\n ///\n /// for elem in &mut data[0..500] {\n-///     unsafe { ptr::write(elem.as_mut_ptr(), String::from(\"hello\")); }\n+///     *elem = MaybeUninit::new(String::from(\"hello\"));\n ///     data_len += 1;\n /// }\n ///"}]}