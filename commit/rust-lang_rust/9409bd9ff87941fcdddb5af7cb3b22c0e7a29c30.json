{"sha": "9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MDliZDlmZjg3OTQxZmNkZGRiNWFmN2NiM2IyMmMwZTdhMjljMzA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-05T16:04:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-13T01:24:34Z"}, "message": "Introduce predicates but don't use them.", "tree": {"sha": "9e5c5e503303fc5dcf886ce6b52ef888fe1cd574", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e5c5e503303fc5dcf886ce6b52ef888fe1cd574"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "html_url": "https://github.com/rust-lang/rust/commit/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70be49d2c7372313921f8121d5c4fe83821a3b65", "url": "https://api.github.com/repos/rust-lang/rust/commits/70be49d2c7372313921f8121d5c4fe83821a3b65", "html_url": "https://github.com/rust-lang/rust/commit/70be49d2c7372313921f8121d5c4fe83821a3b65"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "79bfc46dca8d7a9b727af19b14c5de84efd54c15", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "patch": "@@ -1437,7 +1437,9 @@ fn doc_generics<'tcx>(base_doc: rbml::Doc,\n         true\n     });\n \n-    ty::Generics { types: types, regions: regions }\n+    let predicates = subst::VecPerParamSpace::empty(); // TODO fix in later commit\n+\n+    ty::Generics { types: types, regions: regions, predicates: predicates }\n }\n \n pub fn is_associated_type(cdata: Cmd, id: ast::NodeId) -> bool {"}, {"sha": "319337bf48b7da98fa9a2214dde223f3ddeb9be2", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "patch": "@@ -1554,6 +1554,9 @@ impl<'a, 'tcx> rbml_decoder_decoder_helpers<'tcx> for reader::Decoder<'a> {\n                                 Ok(this.read_vec_per_param_space(\n                                     |this| Decodable::decode(this).unwrap()))\n                             }).unwrap(),\n+\n+                            predicates:\n+                            subst::VecPerParamSpace::empty(), // TODO fix in later commit\n                         })\n                     })\n                 }).unwrap(),"}, {"sha": "ef8e3f3b2d7f6a89fa9bf7801f8cc818c16fdc54", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "patch": "@@ -1619,13 +1619,30 @@ pub struct RegionParameterDef {\n pub struct Generics<'tcx> {\n     pub types: VecPerParamSpace<TypeParameterDef<'tcx>>,\n     pub regions: VecPerParamSpace<RegionParameterDef>,\n+    pub predicates: VecPerParamSpace<Predicate<'tcx>>,\n+}\n+\n+#[deriving(Clone, Show)]\n+pub enum Predicate<'tcx> {\n+    /// where Foo : Bar\n+    Trait(Rc<TraitRef<'tcx>>),\n+\n+    /// where Foo == Bar\n+    Equate(Ty<'tcx>, Ty<'tcx>),\n+\n+    /// where 'a : 'b\n+    RegionOutlives(Region, Region),\n+\n+    /// where T : 'a\n+    TypeOutlives(Ty<'tcx>, Region),\n }\n \n impl<'tcx> Generics<'tcx> {\n     pub fn empty() -> Generics<'tcx> {\n         Generics {\n             types: VecPerParamSpace::empty(),\n             regions: VecPerParamSpace::empty(),\n+            predicates: VecPerParamSpace::empty(),\n         }\n     }\n "}, {"sha": "87467ba064a239e8cb7370ab1b4bf4bef4b812cb", "filename": "src/librustc/middle/ty_fold.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty_fold.rs?ref=9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "patch": "@@ -399,6 +399,25 @@ impl<'tcx> TypeFoldable<'tcx> for ty::Generics<'tcx> {\n         ty::Generics {\n             types: self.types.fold_with(folder),\n             regions: self.regions.fold_with(folder),\n+            predicates: self.predicates.fold_with(folder),\n+        }\n+    }\n+}\n+\n+impl<'tcx> TypeFoldable<'tcx> for ty::Predicate<'tcx> {\n+    fn fold_with<F: TypeFolder<'tcx>>(&self, folder: &mut F) -> ty::Predicate<'tcx> {\n+        match *self {\n+            ty::Predicate::Trait(ref a) =>\n+                ty::Predicate::Trait(a.fold_with(folder)),\n+            ty::Predicate::Equate(ref a, ref b) =>\n+                ty::Predicate::Equate(a.fold_with(folder),\n+                                        b.fold_with(folder)),\n+            ty::Predicate::RegionOutlives(ref a, ref b) =>\n+                ty::Predicate::RegionOutlives(a.fold_with(folder),\n+                                                b.fold_with(folder)),\n+            ty::Predicate::TypeOutlives(ref a, ref b) =>\n+                ty::Predicate::TypeOutlives(a.fold_with(folder),\n+                                              b.fold_with(folder)),\n         }\n     }\n }"}, {"sha": "41ed5b8ec365628189cbf43054088a6d16c00274", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=9409bd9ff87941fcdddb5af7cb3b22c0e7a29c30", "patch": "@@ -163,6 +163,7 @@ fn no_params<'tcx>(t: Ty<'tcx>) -> ty::Polytype<'tcx> {\n         generics: ty::Generics {\n             types: VecPerParamSpace::empty(),\n             regions: VecPerParamSpace::empty(),\n+            predicates: VecPerParamSpace::empty(),\n         },\n         ty: t\n     }"}]}