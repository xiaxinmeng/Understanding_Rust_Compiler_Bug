{"sha": "160cbdaeeaa1e401328bdc206ff451d168ea4f1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MGNiZGFlZWFhMWU0MDEzMjhiZGMyMDZmZjQ1MWQxNjhlYTRmMWQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-16T09:19:36Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-18T08:53:08Z"}, "message": "Don't call `local_def_id` twice on the same node id", "tree": {"sha": "43fd85af1680ceff26c2c2e7946807cf8248a3fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43fd85af1680ceff26c2c2e7946807cf8248a3fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/160cbdaeeaa1e401328bdc206ff451d168ea4f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/160cbdaeeaa1e401328bdc206ff451d168ea4f1d", "html_url": "https://github.com/rust-lang/rust/commit/160cbdaeeaa1e401328bdc206ff451d168ea4f1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/160cbdaeeaa1e401328bdc206ff451d168ea4f1d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e8cc76a91d22d060e0278be8f441533227a05fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8cc76a91d22d060e0278be8f441533227a05fa", "html_url": "https://github.com/rust-lang/rust/commit/4e8cc76a91d22d060e0278be8f441533227a05fa"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "e9510d118f7d4d48d2905f806cfd3ef0d6880268", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/160cbdaeeaa1e401328bdc206ff451d168ea4f1d/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/160cbdaeeaa1e401328bdc206ff451d168ea4f1d/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=160cbdaeeaa1e401328bdc206ff451d168ea4f1d", "patch": "@@ -1185,8 +1185,7 @@ fn find_existential_constraints<'a, 'tcx>(\n         found: Option<(Span, ty::Ty<'tcx>)>,\n     }\n     impl<'a, 'tcx> ConstraintLocator<'a, 'tcx> {\n-        fn check(&mut self, node_id: ast::NodeId) {\n-            let def_id = self.tcx.hir.local_def_id(node_id);\n+        fn check(&mut self, def_id: DefId) {\n             // don't try to check items that cannot possibly constrain the type\n             if !self.tcx.has_typeck_tables(def_id) {\n                 return;\n@@ -1221,21 +1220,24 @@ fn find_existential_constraints<'a, 'tcx>(\n             intravisit::NestedVisitorMap::All(&self.tcx.hir)\n         }\n         fn visit_item(&mut self, it: &'tcx Item) {\n+            let def_id = self.tcx.hir.local_def_id(it.id);\n             // the existential type itself or its children are not within its reveal scope\n-            if self.tcx.hir.local_def_id(it.id) != self.def_id {\n-                self.check(it.id);\n+            if def_id != self.def_id {\n+                self.check(def_id);\n                 intravisit::walk_item(self, it);\n             }\n         }\n         fn visit_impl_item(&mut self, it: &'tcx ImplItem) {\n+            let def_id = self.tcx.hir.local_def_id(it.id);\n             // the existential type itself or its children are not within its reveal scope\n-            if self.tcx.hir.local_def_id(it.id) != self.def_id {\n-                self.check(it.id);\n+            if def_id != self.def_id {\n+                self.check(def_id);\n                 intravisit::walk_impl_item(self, it);\n             }\n         }\n         fn visit_trait_item(&mut self, it: &'tcx TraitItem) {\n-            self.check(it.id);\n+            let def_id = self.tcx.hir.local_def_id(it.id);\n+            self.check(def_id);\n             intravisit::walk_trait_item(self, it);\n         }\n     }"}]}