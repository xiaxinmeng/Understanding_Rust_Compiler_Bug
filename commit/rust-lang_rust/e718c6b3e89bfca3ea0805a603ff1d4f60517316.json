{"sha": "e718c6b3e89bfca3ea0805a603ff1d4f60517316", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MThjNmIzZTg5YmZjYTNlYTA4MDVhNjAzZmYxZDRmNjA1MTczMTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-10T13:10:56Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-10T13:10:56Z"}, "message": "feat: auto-indent use tree lists", "tree": {"sha": "cd2aafb81ba93f077092bd1cbf1e2b6fdea5a39d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd2aafb81ba93f077092bd1cbf1e2b6fdea5a39d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e718c6b3e89bfca3ea0805a603ff1d4f60517316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e718c6b3e89bfca3ea0805a603ff1d4f60517316", "html_url": "https://github.com/rust-lang/rust/commit/e718c6b3e89bfca3ea0805a603ff1d4f60517316", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e718c6b3e89bfca3ea0805a603ff1d4f60517316/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17038756baeaea2c66fc300ff395e4c4e8a18ee8", "url": "https://api.github.com/repos/rust-lang/rust/commits/17038756baeaea2c66fc300ff395e4c4e8a18ee8", "html_url": "https://github.com/rust-lang/rust/commit/17038756baeaea2c66fc300ff395e4c4e8a18ee8"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "81c4d95b1b5d2191f76ed8307a16a102cded9c0e", "filename": "crates/ide/src/typing/on_enter.rs", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/e718c6b3e89bfca3ea0805a603ff1d4f60517316/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e718c6b3e89bfca3ea0805a603ff1d4f60517316/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=e718c6b3e89bfca3ea0805a603ff1d4f60517316", "patch": "@@ -54,6 +54,14 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Text\n             cov_mark::hit!(indent_block_contents);\n             return Some(edit);\n         }\n+\n+        // Typing enter after the `{` of a use tree list.\n+        if let Some(edit) = find_node_at_offset(file.syntax(), position.offset - TextSize::of('{'))\n+            .and_then(|list| on_enter_in_use_tree_list(list, position))\n+        {\n+            cov_mark::hit!(indent_block_contents);\n+            return Some(edit);\n+        }\n     }\n \n     None\n@@ -111,6 +119,21 @@ fn on_enter_in_block(block: ast::BlockExpr, position: FilePosition) -> Option<Te\n     Some(edit)\n }\n \n+fn on_enter_in_use_tree_list(list: ast::UseTreeList, position: FilePosition) -> Option<TextEdit> {\n+    if list.syntax().text().contains_char('\\n') {\n+        return None;\n+    }\n+\n+    let indent = IndentLevel::from_node(list.syntax());\n+    let mut edit = TextEdit::insert(position.offset, format!(\"\\n{}$0\", indent + 1));\n+    edit.union(TextEdit::insert(\n+        list.r_curly_token()?.text_range().start(),\n+        format!(\"\\n{}\", indent),\n+    ))\n+    .ok()?;\n+    Some(edit)\n+}\n+\n fn block_contents(block: &ast::BlockExpr) -> Option<SyntaxNode> {\n     let mut node = block.tail_expr().map(|e| e.syntax().clone());\n \n@@ -484,4 +507,96 @@ fn f() {$0\n         \"#,\n         );\n     }\n+\n+    #[test]\n+    fn indents_use_tree_list() {\n+        do_check(\n+            r#\"\n+use crate::{$0};\n+            \"#,\n+            r#\"\n+use crate::{\n+    $0\n+};\n+            \"#,\n+        );\n+        do_check(\n+            r#\"\n+use crate::{$0Object, path::to::OtherThing};\n+            \"#,\n+            r#\"\n+use crate::{\n+    $0Object, path::to::OtherThing\n+};\n+            \"#,\n+        );\n+        do_check(\n+            r#\"\n+use {crate::{$0Object, path::to::OtherThing}};\n+            \"#,\n+            r#\"\n+use {crate::{\n+    $0Object, path::to::OtherThing\n+}};\n+            \"#,\n+        );\n+        do_check(\n+            r#\"\n+use {\n+    crate::{$0Object, path::to::OtherThing}\n+};\n+            \"#,\n+            r#\"\n+use {\n+    crate::{\n+        $0Object, path::to::OtherThing\n+    }\n+};\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn does_not_indent_use_tree_list_when_not_at_curly_brace() {\n+        do_check_noop(\n+            r#\"\n+use path::{Thing$0};\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn does_not_indent_use_tree_list_without_curly_braces() {\n+        do_check_noop(\n+            r#\"\n+use path::Thing$0;\n+            \"#,\n+        );\n+        do_check_noop(\n+            r#\"\n+use path::$0Thing;\n+            \"#,\n+        );\n+        do_check_noop(\n+            r#\"\n+use path::Thing$0};\n+            \"#,\n+        );\n+        do_check_noop(\n+            r#\"\n+use path::{$0Thing;\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn does_not_indent_multiline_use_tree_list() {\n+        do_check_noop(\n+            r#\"\n+use path::{$0\n+    Thing\n+};\n+            \"#,\n+        );\n+    }\n }"}]}