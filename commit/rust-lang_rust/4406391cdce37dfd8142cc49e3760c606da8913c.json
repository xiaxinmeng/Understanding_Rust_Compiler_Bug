{"sha": "4406391cdce37dfd8142cc49e3760c606da8913c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MDYzOTFjZGNlMzdkZmQ4MTQyY2M0OWUzNzYwYzYwNmRhODkxM2M=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-30T21:13:16Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-30T21:15:48Z"}, "message": "Fix bug in matching on floating-point ranges", "tree": {"sha": "6851b010c32c5863ded0d14afe928270e91e9bbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6851b010c32c5863ded0d14afe928270e91e9bbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4406391cdce37dfd8142cc49e3760c606da8913c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4406391cdce37dfd8142cc49e3760c606da8913c", "html_url": "https://github.com/rust-lang/rust/commit/4406391cdce37dfd8142cc49e3760c606da8913c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4406391cdce37dfd8142cc49e3760c606da8913c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fb52fb538946600dfe76be0b943556363904136", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb52fb538946600dfe76be0b943556363904136", "html_url": "https://github.com/rust-lang/rust/commit/0fb52fb538946600dfe76be0b943556363904136"}], "stats": {"total": 91, "additions": 35, "deletions": 56}, "files": [{"sha": "f7e034df1dadc581f2c296d37da22fc776c08ece", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=4406391cdce37dfd8142cc49e3760c606da8913c", "patch": "@@ -812,8 +812,17 @@ impl<'tcx> IntRange<'tcx> {\n     fn from_ctor(tcx: TyCtxt<'_, 'tcx, 'tcx>,\n                  ctor: &Constructor<'tcx>)\n                  -> Option<IntRange<'tcx>> {\n+        // Floating-point ranges are permitted and we don't want\n+        // to consider them when constructing integer ranges.\n+        fn is_integral<'tcx>(ty: Ty<'tcx>) -> bool {\n+            match ty.sty {\n+                ty::Char | ty::Int(_) | ty::Uint(_) => true,\n+                _ => false,\n+            }\n+        }\n+\n         match ctor {\n-            ConstantRange(lo, hi, ty, end) => {\n+            ConstantRange(lo, hi, ty, end) if is_integral(ty) => {\n                 // Perform a shift if the underlying types are signed,\n                 // which makes the interval arithmetic simpler.\n                 let bias = IntRange::signed_bias(tcx, ty);\n@@ -826,7 +835,7 @@ impl<'tcx> IntRange<'tcx> {\n                     Some(IntRange { range: lo..=(hi - offset), ty })\n                 }\n             }\n-            ConstantValue(val) => {\n+            ConstantValue(val) if is_integral(val.ty) => {\n                 let ty = val.ty;\n                 if let Some(val) = val.assert_bits(tcx, ty::ParamEnv::empty().and(ty)) {\n                     let bias = IntRange::signed_bias(tcx, ty);\n@@ -836,9 +845,7 @@ impl<'tcx> IntRange<'tcx> {\n                     None\n                 }\n             }\n-            Single | Variant(_) | Slice(_) => {\n-                None\n-            }\n+            _ => None,\n         }\n     }\n "}, {"sha": "fd811e8083cf08885bce0b45b47351da2975d03a", "filename": "src/test/run-pass/array-slice-vec/vec-matching-autoslice.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Farray-slice-vec%2Fvec-matching-autoslice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Farray-slice-vec%2Fvec-matching-autoslice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farray-slice-vec%2Fvec-matching-autoslice.stderr?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -1,8 +0,0 @@\n-warning: unreachable pattern\n-  --> $DIR/vec-matching-autoslice.rs:31:9\n-   |\n-LL |         ([_, _], _) => panic!(),\n-   |         ^^^^^^^^^^^\n-   |\n-   = note: #[warn(unreachable_patterns)] on by default\n-"}, {"sha": "f402a98af49b3b317cabe50f56d5b576e3537b88", "filename": "src/test/run-pass/binding/match-range.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Fbinding%2Fmatch-range.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Fbinding%2Fmatch-range.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinding%2Fmatch-range.stderr?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -1,20 +0,0 @@\n-warning: unreachable pattern\n-  --> $DIR/match-range.rs:47:7\n-   |\n-LL |       _ => panic!(\"should match float range\")\n-   |       ^\n-   |\n-   = note: #[warn(unreachable_patterns)] on by default\n-\n-warning: unreachable pattern\n-  --> $DIR/match-range.rs:55:9\n-   |\n-LL |         _ => {},\n-   |         ^\n-\n-warning: unreachable pattern\n-  --> $DIR/match-range.rs:59:9\n-   |\n-LL |         _ => panic!(\"should match the range start\"),\n-   |         ^\n-"}, {"sha": "41b4130acf43534e04692b7275114de81b0a3b25", "filename": "src/test/run-pass/issues/issue-15881-model-lexer-dotdotdot.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Fissues%2Fissue-15881-model-lexer-dotdotdot.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Fissues%2Fissue-15881-model-lexer-dotdotdot.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-15881-model-lexer-dotdotdot.stderr?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -1,8 +0,0 @@\n-warning: unreachable pattern\n-  --> $DIR/issue-15881-model-lexer-dotdotdot.rs:41:7\n-   |\n-LL |       _ => panic!(\"should match float range\")\n-   |       ^\n-   |\n-   = note: #[warn(unreachable_patterns)] on by default\n-"}, {"sha": "1b231f2da39eba7e0070759cffb218057ef552f1", "filename": "src/test/run-pass/issues/issue-7222.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Fissues%2Fissue-7222.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fb52fb538946600dfe76be0b943556363904136/src%2Ftest%2Frun-pass%2Fissues%2Fissue-7222.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-7222.stderr?ref=0fb52fb538946600dfe76be0b943556363904136", "patch": "@@ -1,8 +0,0 @@\n-warning: unreachable pattern\n-  --> $DIR/issue-7222.rs:20:9\n-   |\n-LL |         _ => ()\n-   |         ^\n-   |\n-   = note: #[warn(unreachable_patterns)] on by default\n-"}, {"sha": "d75630e09c507c08013761cd81b05adafaada62f", "filename": "src/test/ui/match/match-range-fail-dominate.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-range-fail-dominate.stderr?ref=4406391cdce37dfd8142cc49e3760c606da8913c", "patch": "@@ -62,11 +62,5 @@ error: unreachable pattern\n LL |       0.02f64 => {}\n    |       ^^^^^^^\n \n-error: unreachable pattern\n-  --> $DIR/match-range-fail-dominate.rs:47:7\n-   |\n-LL |       _ => {}\n-   |       ^\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n "}, {"sha": "588fecbf10dd50ff7cdb36a205247358804d0c21", "filename": "src/test/ui/non-exhaustive/non-exhaustive-float-range-match.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Ftest%2Fui%2Fnon-exhaustive%2Fnon-exhaustive-float-range-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Ftest%2Fui%2Fnon-exhaustive%2Fnon-exhaustive-float-range-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-exhaustive%2Fnon-exhaustive-float-range-match.rs?ref=4406391cdce37dfd8142cc49e3760c606da8913c", "patch": "@@ -0,0 +1,13 @@\n+#![allow(illegal_floating_point_literal_pattern)]\n+#![deny(unreachable_patterns)]\n+\n+fn main() {\n+    match 0.0 {\n+      0.0..=1.0 => {}\n+      _ => {} // ok\n+    }\n+\n+    match 0.0 { //~ ERROR non-exhaustive patterns\n+      0.0..=1.0 => {}\n+    }\n+}"}, {"sha": "2e285afb3804e614b2d3ca24c9a4b0ae0193d0bc", "filename": "src/test/ui/non-exhaustive/non-exhaustive-float-range-match.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Ftest%2Fui%2Fnon-exhaustive%2Fnon-exhaustive-float-range-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4406391cdce37dfd8142cc49e3760c606da8913c/src%2Ftest%2Fui%2Fnon-exhaustive%2Fnon-exhaustive-float-range-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-exhaustive%2Fnon-exhaustive-float-range-match.stderr?ref=4406391cdce37dfd8142cc49e3760c606da8913c", "patch": "@@ -0,0 +1,9 @@\n+error[E0004]: non-exhaustive patterns: `_` not covered\n+  --> $DIR/non-exhaustive-float-range-match.rs:10:11\n+   |\n+LL |     match 0.0 { //~ ERROR non-exhaustive patterns\n+   |           ^^^ pattern `_` not covered\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0004`."}]}