{"sha": "15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YTZjMDliNmU4YTk3N2YyYzZmNWE3M2RlMDFhMjBkMDBiMzc5MzA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T22:19:02Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-23T22:32:03Z"}, "message": "pre-expansion gate type_ascription", "tree": {"sha": "c367b20d8aed10f33996bbbb5227b99c7150dad7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c367b20d8aed10f33996bbbb5227b99c7150dad7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "html_url": "https://github.com/rust-lang/rust/commit/15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4ed8865786a787a7b0c045f7674569b6be0e9bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ed8865786a787a7b0c045f7674569b6be0e9bc", "html_url": "https://github.com/rust-lang/rust/commit/e4ed8865786a787a7b0c045f7674569b6be0e9bc"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "502b1c0f7437157eb90be023383a9fd5b05e4ddb", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "patch": "@@ -498,21 +498,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         }\n     }\n \n-    fn visit_expr(&mut self, e: &'a ast::Expr) {\n-        match e.kind {\n-            ast::ExprKind::Type(..) => {\n-                // To avoid noise about type ascription in common syntax errors, only emit if it\n-                // is the *only* error.\n-                if self.parse_sess.span_diagnostic.err_count() == 0 {\n-                    gate_feature_post!(&self, type_ascription, e.span,\n-                                       \"type ascription is experimental\");\n-                }\n-            }\n-            _ => {}\n-        }\n-        visit::walk_expr(self, e)\n-    }\n-\n     fn visit_pat(&mut self, pattern: &'a ast::Pat) {\n         match &pattern.kind {\n             PatKind::Slice(pats) => {\n@@ -805,6 +790,12 @@ pub fn check_crate(krate: &ast::Crate,\n     gate_all!(label_break_value, \"labels on blocks are unstable\");\n     gate_all!(box_syntax, \"box expression syntax is experimental; you can call `Box::new` instead\");\n \n+    // To avoid noise about type ascription in common syntax errors,\n+    // only emit if it is the *only* error. (Also check it last.)\n+    if parse_sess.span_diagnostic.err_count() == 0 {\n+        gate_all!(type_ascription, \"type ascription is experimental\");\n+    }\n+\n     visit::walk_crate(&mut visitor, krate);\n }\n "}, {"sha": "97b1092452aafa22214905be4e5ec47852579274", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "patch": "@@ -252,6 +252,7 @@ impl<'a> Parser<'a> {\n                 self.last_type_ascription = Some((self.prev_span, maybe_path));\n \n                 lhs = self.parse_assoc_op_cast(lhs, lhs_span, ExprKind::Type)?;\n+                self.sess.gated_spans.type_ascription.borrow_mut().push(lhs.span);\n                 continue\n             } else if op == AssocOp::DotDot || op == AssocOp::DotDotEq {\n                 // If we didn\u2019t have to handle `x..`/`x..=`, it would be pretty easy to"}, {"sha": "28a0868d5dd1ea055edb880b444e326de0019205", "filename": "src/libsyntax/sess.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Flibsyntax%2Fsess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Flibsyntax%2Fsess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsess.rs?ref=15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "patch": "@@ -50,6 +50,8 @@ crate struct GatedSpans {\n     pub label_break_value: Lock<Vec<Span>>,\n     /// Spans collected for gating `box_syntax`, e.g. `box $expr`.\n     pub box_syntax: Lock<Vec<Span>>,\n+    /// Spans collected for gating `type_ascription`, e.g. `42: usize`.\n+    pub type_ascription: Lock<Vec<Span>>,\n }\n \n /// Info about a parsing session."}, {"sha": "655891d802c1ceda3cc54331dedd4bd8106e8262", "filename": "src/test/ui/feature-gates/feature-gate-type_ascription.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.rs?ref=15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "patch": "@@ -1,5 +1,8 @@\n // Type ascription is unstable\n \n-fn main() {\n+#[cfg(FALSE)]\n+fn foo() {\n     let a = 10: u8; //~ ERROR type ascription is experimental\n }\n+\n+fn main() {}"}, {"sha": "d63d624c6c112bfd74ac6602f6196778dc51ec72", "filename": "src/test/ui/feature-gates/feature-gate-type_ascription.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15a6c09b6e8a977f2c6f5a73de01a20d00b37930/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr?ref=15a6c09b6e8a977f2c6f5a73de01a20d00b37930", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: type ascription is experimental\n-  --> $DIR/feature-gate-type_ascription.rs:4:13\n+  --> $DIR/feature-gate-type_ascription.rs:5:13\n    |\n LL |     let a = 10: u8;\n    |             ^^^^^^"}]}