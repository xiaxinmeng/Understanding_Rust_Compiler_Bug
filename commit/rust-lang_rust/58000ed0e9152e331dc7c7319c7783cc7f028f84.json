{"sha": "58000ed0e9152e331dc7c7319c7783cc7f028f84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MDAwZWQwZTkxNTJlMzMxZGM3YzczMTljNzc4M2NjN2YwMjhmODQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-31T16:36:25Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-08T16:25:47Z"}, "message": "Move get_tools_search_paths from FileSearch to Session\n\nIt only uses fields of FileSearch that are stored in Session too", "tree": {"sha": "016c84e135bedde47645080539c80260a28f6011", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/016c84e135bedde47645080539c80260a28f6011"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58000ed0e9152e331dc7c7319c7783cc7f028f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58000ed0e9152e331dc7c7319c7783cc7f028f84", "html_url": "https://github.com/rust-lang/rust/commit/58000ed0e9152e331dc7c7319c7783cc7f028f84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58000ed0e9152e331dc7c7319c7783cc7f028f84/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4a22f07d79b1a2adc6e59811ebfbcd8b2cf21a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4a22f07d79b1a2adc6e59811ebfbcd8b2cf21a4", "html_url": "https://github.com/rust-lang/rust/commit/a4a22f07d79b1a2adc6e59811ebfbcd8b2cf21a4"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "826c09cd948f649e0edf10d9cf26b6e835b06ae9", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=58000ed0e9152e331dc7c7319c7783cc7f028f84", "patch": "@@ -637,7 +637,7 @@ fn link_dwarf_object<'a>(sess: &'a Session, executable_out_filename: &Path) {\n     cmd.arg(\"-o\");\n     cmd.arg(&dwp_out_filename);\n \n-    let mut new_path = sess.host_filesearch(PathKind::All).get_tools_search_paths(false);\n+    let mut new_path = sess.get_tools_search_paths(false);\n     if let Some(path) = env::var_os(\"PATH\") {\n         new_path.extend(env::split_paths(&path));\n     }\n@@ -2555,8 +2555,7 @@ fn add_gcc_ld_path(cmd: &mut dyn Linker, sess: &Session, flavor: LinkerFlavor) {\n             match ld_impl {\n                 LdImpl::Lld => {\n                     if sess.target.lld_flavor == LldFlavor::Ld64 {\n-                        let tools_path =\n-                            sess.host_filesearch(PathKind::All).get_tools_search_paths(false);\n+                        let tools_path = sess.get_tools_search_paths(false);\n                         let ld64_exe = tools_path\n                             .into_iter()\n                             .map(|p| p.join(\"gcc-ld\"))\n@@ -2571,8 +2570,7 @@ fn add_gcc_ld_path(cmd: &mut dyn Linker, sess: &Session, flavor: LinkerFlavor) {\n                             arg\n                         });\n                     } else {\n-                        let tools_path =\n-                            sess.host_filesearch(PathKind::All).get_tools_search_paths(false);\n+                        let tools_path = sess.get_tools_search_paths(false);\n                         let lld_path = tools_path\n                             .into_iter()\n                             .map(|p| p.join(\"gcc-ld\"))"}, {"sha": "e3b0eea0d89c70ac0dd0988731bc6352852efa72", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=58000ed0e9152e331dc7c7319c7783cc7f028f84", "patch": "@@ -15,7 +15,6 @@ use rustc_middle::middle::dependency_format::Linkage;\n use rustc_middle::ty::TyCtxt;\n use rustc_serialize::{json, Encoder};\n use rustc_session::config::{self, CrateType, DebugInfo, LinkerPluginLto, Lto, OptLevel, Strip};\n-use rustc_session::search_paths::PathKind;\n use rustc_session::Session;\n use rustc_span::symbol::Symbol;\n use rustc_target::spec::{LinkOutputKind, LinkerFlavor, LldFlavor};\n@@ -101,7 +100,7 @@ pub fn get_linker<'a>(\n \n     // The compiler's sysroot often has some bundled tools, so add it to the\n     // PATH for the child.\n-    let mut new_path = sess.host_filesearch(PathKind::All).get_tools_search_paths(self_contained);\n+    let mut new_path = sess.get_tools_search_paths(self_contained);\n     let mut msvc_changed_path = false;\n     if sess.target.is_like_msvc {\n         if let Some(ref tool) = msvc_tool {"}, {"sha": "9359a55e55a9c74845c6a539f30abb43b3016056", "filename": "compiler/rustc_session/src/filesearch.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs?ref=58000ed0e9152e331dc7c7319c7783cc7f028f84", "patch": "@@ -87,18 +87,6 @@ impl<'a> FileSearch<'a> {\n     pub fn search_path_dirs(&self) -> Vec<PathBuf> {\n         self.search_paths().map(|sp| sp.dir.to_path_buf()).collect()\n     }\n-\n-    /// Returns a list of directories where target-specific tool binaries are located.\n-    pub fn get_tools_search_paths(&self, self_contained: bool) -> Vec<PathBuf> {\n-        let rustlib_path = rustc_target::target_rustlib_path(self.sysroot, &self.triple);\n-        let p = std::array::IntoIter::new([\n-            Path::new(&self.sysroot),\n-            Path::new(&rustlib_path),\n-            Path::new(\"bin\"),\n-        ])\n-        .collect::<PathBuf>();\n-        if self_contained { vec![p.clone(), p.join(\"self-contained\")] } else { vec![p] }\n-    }\n }\n \n pub fn make_target_lib_path(sysroot: &Path, target_triple: &str) -> PathBuf {"}, {"sha": "648743b7e866db759251c965b525c52f12c8d300", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58000ed0e9152e331dc7c7319c7783cc7f028f84/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=58000ed0e9152e331dc7c7319c7783cc7f028f84", "patch": "@@ -36,7 +36,7 @@ use std::fmt;\n use std::io::Write;\n use std::num::NonZeroU32;\n use std::ops::{Div, Mul};\n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n use std::str::FromStr;\n use std::sync::Arc;\n use std::time::Duration;\n@@ -799,6 +799,18 @@ impl Session {\n         )\n     }\n \n+    /// Returns a list of directories where target-specific tool binaries are located.\n+    pub fn get_tools_search_paths(&self, self_contained: bool) -> Vec<PathBuf> {\n+        let rustlib_path = rustc_target::target_rustlib_path(&self.sysroot, &config::host_triple());\n+        let p = std::array::IntoIter::new([\n+            Path::new(&self.sysroot),\n+            Path::new(&rustlib_path),\n+            Path::new(\"bin\"),\n+        ])\n+        .collect::<PathBuf>();\n+        if self_contained { vec![p.clone(), p.join(\"self-contained\")] } else { vec![p] }\n+    }\n+\n     pub fn init_incr_comp_session(\n         &self,\n         session_dir: PathBuf,"}]}