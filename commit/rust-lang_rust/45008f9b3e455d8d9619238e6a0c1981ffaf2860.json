{"sha": "45008f9b3e455d8d9619238e6a0c1981ffaf2860", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MDA4ZjliM2U0NTVkOGQ5NjE5MjM4ZTZhMGMxOTgxZmZhZjI4NjA=", "commit": {"author": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2014-02-22T08:36:11Z"}, "committer": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2014-02-23T03:55:30Z"}, "message": "Emacs: stay at the correct position when indenting\n\nWhen indenting a non-blank line, stay at the same cursor position\nrelative to the content after indenting.", "tree": {"sha": "41e45ad0651acfa35afa56d4fbc6e034867595db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41e45ad0651acfa35afa56d4fbc6e034867595db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45008f9b3e455d8d9619238e6a0c1981ffaf2860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45008f9b3e455d8d9619238e6a0c1981ffaf2860", "html_url": "https://github.com/rust-lang/rust/commit/45008f9b3e455d8d9619238e6a0c1981ffaf2860", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45008f9b3e455d8d9619238e6a0c1981ffaf2860/comments", "author": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fbcda1c655736ec5bc058c25c6e720030ee039e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fbcda1c655736ec5bc058c25c6e720030ee039e", "html_url": "https://github.com/rust-lang/rust/commit/7fbcda1c655736ec5bc058c25c6e720030ee039e"}], "stats": {"total": 83, "additions": 74, "deletions": 9}, "files": [{"sha": "c0543b691a23d91051b2295196b38a49b249cdad", "filename": "src/etc/emacs/rust-mode-tests.el", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/45008f9b3e455d8d9619238e6a0c1981ffaf2860/src%2Fetc%2Femacs%2Frust-mode-tests.el", "raw_url": "https://github.com/rust-lang/rust/raw/45008f9b3e455d8d9619238e6a0c1981ffaf2860/src%2Fetc%2Femacs%2Frust-mode-tests.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode-tests.el?ref=45008f9b3e455d8d9619238e6a0c1981ffaf2860", "patch": "@@ -488,6 +488,26 @@ struct Foo {\n }\n \"\n       rust-test-region-string rust-test-motion-string\n+      rust-test-indent-motion-string\n+      \"\n+fn blank_line(arg:int) -> bool {\n+\n+}\n+\n+fn indenting_closing_brace() {\n+    if(true) {\n+}\n+}\n+\n+fn indenting_middle_of_line() {\n+    if(true) {\n+ push_me_out();\n+} else {\n+               pull_me_back_in();\n+}\n+}\n+\"\n+\n       ;; Symbol -> (line column)\n       rust-test-positions-alist '((start-of-fn1 (2 0))\n                                   (start-of-fn1-middle-of-line (2 15))\n@@ -502,7 +522,17 @@ struct Foo {\n                                   (middle-of-fn3 (16 4))\n                                   (middle-of-struct (21 10))\n                                   (before-start-of-struct (19 0))\n-                                  (after-end-of-struct (23 0))))\n+                                  (after-end-of-struct (23 0))\n+                                  (blank-line-indent-start (3 0))\n+                                  (blank-line-indent-target (3 4))\n+                                  (closing-brace-indent-start (8 1))\n+                                  (closing-brace-indent-target (8 5))\n+                                  (middle-push-indent-start (13 2))\n+                                  (middle-push-indent-target (13 9))\n+                                  (after-whitespace-indent-start (13 1))\n+                                  (after-whitespace-indent-target (13 8))\n+                                  (middle-pull-indent-start (15 19))\n+                                  (middle-pull-indent-target (15 12))))\n \n (defun rust-get-buffer-pos (pos-symbol)\n   \"Get buffer position from POS-SYMBOL.\n@@ -664,3 +694,38 @@ All positions are position symbols found in `rust-test-positions-alist'.\"\n    'middle-of-struct\n    'before-start-of-struct 'after-end-of-struct\n    #'mark-defun))\n+\n+(ert-deftest indent-line-blank-line-motion ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'blank-line-indent-start\n+   'blank-line-indent-target\n+   #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-closing-brace-motion ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'closing-brace-indent-start\n+   'closing-brace-indent-target\n+   #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-middle-push-motion ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'middle-push-indent-start\n+   'middle-push-indent-target\n+   #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-after-whitespace-motion ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'after-whitespace-indent-start\n+   'after-whitespace-indent-target\n+   #'indent-for-tab-command))\n+\n+(ert-deftest indent-line-middle-pull-motion ()\n+  (rust-test-motion\n+   rust-test-indent-motion-string\n+   'middle-pull-indent-start\n+   'middle-pull-indent-target\n+   #'indent-for-tab-command))"}, {"sha": "a2e1fc0b99f5715d58e220228eb5f9e920c01573", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/45008f9b3e455d8d9619238e6a0c1981ffaf2860/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/45008f9b3e455d8d9619238e6a0c1981ffaf2860/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=45008f9b3e455d8d9619238e6a0c1981ffaf2860", "patch": "@@ -114,14 +114,14 @@\n \n               ;; Otherwise we're in a column-zero definition\n               (t 0))))))\n-    (cond\n-     ;; If we're to the left of the indentation, reindent and jump to it.\n-     ((<= (current-column) indent)\n-      (indent-line-to indent))\n-\n-     ;; We're to the right; if it needs indent, do so but save excursion.\n-     ((not (eq (current-indentation) indent))\n-      (save-excursion (indent-line-to indent))))))\n+    (when (not (eq (current-indentation) indent))\n+      ;; If we're at the beginning of the line (before or at the current\n+      ;; indentation), jump with the indentation change.  Otherwise, save the\n+      ;; excursion so that adding the indentations will leave us at the\n+      ;; equivalent position within the line to where we were before.\n+      (if (<= (current-column) (current-indentation))\n+          (indent-line-to indent)\n+        (save-excursion (indent-line-to indent))))))\n \n \n ;; Font-locking definitions and helpers"}]}