{"sha": "d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NGFiNDEyZWY4ZjdlMjc5MDE4ZTZhZDBkZjZiYzk5NjVlMmNmNWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-23T15:55:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-23T15:55:19Z"}, "message": "Auto merge of #26503 - GuillaumeGomez:patch-4, r=Manishearth\n\nr? @Manishearth", "tree": {"sha": "500c44375d439953ca1ab4c295b1c022133e378d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/500c44375d439953ca1ab4c295b1c022133e378d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f", "html_url": "https://github.com/rust-lang/rust/commit/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3223c885b925d0cde92aaf900fa32dbcc5c8318c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3223c885b925d0cde92aaf900fa32dbcc5c8318c", "html_url": "https://github.com/rust-lang/rust/commit/3223c885b925d0cde92aaf900fa32dbcc5c8318c"}, {"sha": "3ff12223dc56f0a5731ae8d7b2811a83f9e4b15c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff12223dc56f0a5731ae8d7b2811a83f9e4b15c", "html_url": "https://github.com/rust-lang/rust/commit/3ff12223dc56f0a5731ae8d7b2811a83f9e4b15c"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "da7c262d63a654e682bf6eb4442e2de7aea940e3", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f", "patch": "@@ -1551,7 +1551,7 @@ pub fn ast_ty_to_ty<'tcx>(this: &AstConv<'tcx>,\n         ast::TyParen(ref typ) => ast_ty_to_ty(this, rscope, &**typ),\n         ast::TyBareFn(ref bf) => {\n             if bf.decl.variadic && bf.abi != abi::C {\n-                span_err!(tcx.sess, ast_ty.span, E0222,\n+                span_err!(tcx.sess, ast_ty.span, E0045,\n                           \"variadic function must have C calling convention\");\n             }\n             let bare_fn = ty_of_bare_fn(this, bf.unsafety, bf.abi, &*bf.decl);"}, {"sha": "16af8c6961ef67c45c615dbd9b55f897db54b9c3", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=d54ab412ef8f7e279018e6ad0df6bc9965e2cf5f", "patch": "@@ -380,6 +380,28 @@ fn main() {\n ```\n \"##,\n \n+E0045: r##\"\n+Rust only supports variadic parameters for interoperability with C code in its\n+FFI. As such, variadic parameters can only be used with functions which are\n+using the C ABI. Examples of erroneous code:\n+\n+```\n+extern \"rust-call\" { fn foo(x: u8, ...); }\n+// or\n+fn foo(x: u8, ...) {}\n+```\n+\n+To fix such code, put them in an extern \"C\" block:\n+\n+```\n+extern \"C\" fn foo (x: u8, ...);\n+// or:\n+extern \"C\" {\n+    fn foo (x: u8, ...);\n+}\n+```\n+\"##,\n+\n E0046: r##\"\n When trying to make some type implement a trait `Foo`, you must, at minimum,\n provide implementations for all of `Foo`'s required methods (meaning the\n@@ -1467,7 +1489,6 @@ For more information see the [opt-in builtin traits RFC](https://github.com/rust\n \n register_diagnostics! {\n     E0044, // foreign items may not have type parameters\n-    E0045, // variadic function must have C calling convention\n     E0068,\n     E0071,\n     E0074,\n@@ -1535,7 +1556,8 @@ register_diagnostics! {\n     E0219, // associated type defined in higher-ranked supertrait\n     E0220, // associated type not found for type parameter\n     E0221, // ambiguous associated type in bounds\n-    E0222, // variadic function must have C calling convention\n+    //E0222, // Error code E0045 (variadic function must have C calling\n+             // convention) duplicate\n     E0223, // ambiguous associated type\n     E0224, // at least one non-builtin train is required for an object type\n     E0225, // only the builtin traits can be used as closure or object bounds"}]}