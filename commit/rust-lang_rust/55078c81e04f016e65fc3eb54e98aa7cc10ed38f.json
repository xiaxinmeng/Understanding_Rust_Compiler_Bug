{"sha": "55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MDc4YzgxZTA0ZjAxNmU2NWZjM2ViNTRlOThhYTdjYzEwZWQzOGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T18:53:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T18:53:24Z"}, "message": "internal: more local test for mod item", "tree": {"sha": "9966b08b5dceb10c5cf6d1ebd7bcce683dd0e1e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9966b08b5dceb10c5cf6d1ebd7bcce683dd0e1e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "html_url": "https://github.com/rust-lang/rust/commit/55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "715cd8d93870d8211f3f188ca9bcb543d0db9007", "url": "https://api.github.com/repos/rust-lang/rust/commits/715cd8d93870d8211f3f188ca9bcb543d0db9007", "html_url": "https://github.com/rust-lang/rust/commit/715cd8d93870d8211f3f188ca9bcb543d0db9007"}], "stats": {"total": 236, "additions": 119, "deletions": 117}, "files": [{"sha": "af83ba126a207f418109c398f73c1cdb5a9118ff", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "patch": "@@ -309,6 +309,30 @@ fn extern_crate(p: &mut Parser, m: Marker) {\n     m.complete(p, EXTERN_CRATE);\n }\n \n+// test mod_item\n+// mod a;\n+pub(crate) fn mod_item(p: &mut Parser, m: Marker) {\n+    p.bump(T![mod]);\n+    name(p);\n+    if p.at(T!['{']) {\n+        // test mod_item_curly\n+        // mod b { }\n+        item_list(p);\n+    } else if !p.eat(T![;]) {\n+        p.error(\"expected `;` or `{`\");\n+    }\n+    m.complete(p, MODULE);\n+}\n+\n+pub(crate) fn item_list(p: &mut Parser) {\n+    assert!(p.at(T!['{']));\n+    let m = p.start();\n+    p.bump(T!['{']);\n+    mod_contents(p, true);\n+    p.expect(T!['}']);\n+    m.complete(p, ITEM_LIST);\n+}\n+\n pub(crate) fn extern_item_list(p: &mut Parser) {\n     assert!(p.at(T!['{']));\n     let m = p.start();\n@@ -376,28 +400,6 @@ fn type_alias(p: &mut Parser, m: Marker) {\n     m.complete(p, TYPE_ALIAS);\n }\n \n-pub(crate) fn mod_item(p: &mut Parser, m: Marker) {\n-    assert!(p.at(T![mod]));\n-    p.bump(T![mod]);\n-\n-    name(p);\n-    if p.at(T!['{']) {\n-        item_list(p);\n-    } else if !p.eat(T![;]) {\n-        p.error(\"expected `;` or `{`\");\n-    }\n-    m.complete(p, MODULE);\n-}\n-\n-pub(crate) fn item_list(p: &mut Parser) {\n-    assert!(p.at(T!['{']));\n-    let m = p.start();\n-    p.bump(T!['{']);\n-    mod_contents(p, true);\n-    p.expect(T!['}']);\n-    m.complete(p, ITEM_LIST);\n-}\n-\n fn macro_rules(p: &mut Parser, m: Marker) {\n     assert!(p.at_contextual_kw(\"macro_rules\"));\n     p.bump_remap(T![macro_rules]);"}, {"sha": "423eacf92e23a3d481d22d7c473de4c3804935a2", "filename": "crates/syntax/test_data/parser/inline/ok/0169_mod_item.rast", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0169_mod_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0169_mod_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0169_mod_item.rast?ref=55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "patch": "@@ -0,0 +1,8 @@\n+SOURCE_FILE@0..7\n+  MODULE@0..6\n+    MOD_KW@0..3 \"mod\"\n+    WHITESPACE@3..4 \" \"\n+    NAME@4..5\n+      IDENT@4..5 \"a\"\n+    SEMICOLON@5..6 \";\"\n+  WHITESPACE@6..7 \"\\n\""}, {"sha": "f21af614da057799f1daff3eae932ab1a1505ea6", "filename": "crates/syntax/test_data/parser/inline/ok/0169_mod_item.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0169_mod_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0169_mod_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0169_mod_item.rs?ref=55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "patch": "@@ -0,0 +1 @@\n+mod a;"}, {"sha": "33ad9c44f5c62b34f4549014fd0d92c2e0db7e6b", "filename": "crates/syntax/test_data/parser/inline/ok/0170_mod_item_curly.rast", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0170_mod_item_curly.rast", "raw_url": "https://github.com/rust-lang/rust/raw/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0170_mod_item_curly.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0170_mod_item_curly.rast?ref=55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "patch": "@@ -0,0 +1,12 @@\n+SOURCE_FILE@0..10\n+  MODULE@0..9\n+    MOD_KW@0..3 \"mod\"\n+    WHITESPACE@3..4 \" \"\n+    NAME@4..5\n+      IDENT@4..5 \"b\"\n+    WHITESPACE@5..6 \" \"\n+    ITEM_LIST@6..9\n+      L_CURLY@6..7 \"{\"\n+      WHITESPACE@7..8 \" \"\n+      R_CURLY@8..9 \"}\"\n+  WHITESPACE@9..10 \"\\n\""}, {"sha": "16b1b43e8773e1bd511b289532a05706f63275a1", "filename": "crates/syntax/test_data/parser/inline/ok/0170_mod_item_curly.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0170_mod_item_curly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0170_mod_item_curly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0170_mod_item_curly.rs?ref=55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "patch": "@@ -0,0 +1 @@\n+mod b { }"}, {"sha": "712e1534625905cda8e1d0fbae1474be460be89c", "filename": "crates/syntax/test_data/parser/ok/0008_mod_item.rast", "status": "modified", "additions": 72, "deletions": 89, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast?ref=55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "patch": "@@ -1,93 +1,76 @@\n-SOURCE_FILE@0..118\n-  MODULE@0..6\n+SOURCE_FILE@0..100\n+  MODULE@0..46\n     MOD_KW@0..3 \"mod\"\n     WHITESPACE@3..4 \" \"\n     NAME@4..5\n-      IDENT@4..5 \"a\"\n-    SEMICOLON@5..6 \";\"\n-  WHITESPACE@6..8 \"\\n\\n\"\n-  MODULE@8..17\n-    MOD_KW@8..11 \"mod\"\n-    WHITESPACE@11..12 \" \"\n-    NAME@12..13\n-      IDENT@12..13 \"b\"\n-    WHITESPACE@13..14 \" \"\n-    ITEM_LIST@14..17\n-      L_CURLY@14..15 \"{\"\n-      WHITESPACE@15..16 \"\\n\"\n-      R_CURLY@16..17 \"}\"\n-  WHITESPACE@17..19 \"\\n\\n\"\n-  MODULE@19..65\n-    MOD_KW@19..22 \"mod\"\n-    WHITESPACE@22..23 \" \"\n-    NAME@23..24\n-      IDENT@23..24 \"c\"\n-    WHITESPACE@24..25 \" \"\n-    ITEM_LIST@25..65\n-      L_CURLY@25..26 \"{\"\n-      WHITESPACE@26..31 \"\\n    \"\n-      FN@31..47\n-        FN_KW@31..33 \"fn\"\n-        WHITESPACE@33..34 \" \"\n-        NAME@34..37\n-          IDENT@34..37 \"foo\"\n-        PARAM_LIST@37..39\n-          L_PAREN@37..38 \"(\"\n-          R_PAREN@38..39 \")\"\n+      IDENT@4..5 \"c\"\n+    WHITESPACE@5..6 \" \"\n+    ITEM_LIST@6..46\n+      L_CURLY@6..7 \"{\"\n+      WHITESPACE@7..12 \"\\n    \"\n+      FN@12..28\n+        FN_KW@12..14 \"fn\"\n+        WHITESPACE@14..15 \" \"\n+        NAME@15..18\n+          IDENT@15..18 \"foo\"\n+        PARAM_LIST@18..20\n+          L_PAREN@18..19 \"(\"\n+          R_PAREN@19..20 \")\"\n+        WHITESPACE@20..21 \" \"\n+        BLOCK_EXPR@21..28\n+          L_CURLY@21..22 \"{\"\n+          WHITESPACE@22..27 \"\\n    \"\n+          R_CURLY@27..28 \"}\"\n+      WHITESPACE@28..33 \"\\n    \"\n+      STRUCT@33..44\n+        STRUCT_KW@33..39 \"struct\"\n         WHITESPACE@39..40 \" \"\n-        BLOCK_EXPR@40..47\n-          L_CURLY@40..41 \"{\"\n-          WHITESPACE@41..46 \"\\n    \"\n-          R_CURLY@46..47 \"}\"\n-      WHITESPACE@47..52 \"\\n    \"\n-      STRUCT@52..63\n-        STRUCT_KW@52..58 \"struct\"\n-        WHITESPACE@58..59 \" \"\n-        NAME@59..60\n-          IDENT@59..60 \"S\"\n-        WHITESPACE@60..61 \" \"\n-        RECORD_FIELD_LIST@61..63\n-          L_CURLY@61..62 \"{\"\n-          R_CURLY@62..63 \"}\"\n-      WHITESPACE@63..64 \"\\n\"\n-      R_CURLY@64..65 \"}\"\n-  WHITESPACE@65..67 \"\\n\\n\"\n-  MODULE@67..118\n-    MOD_KW@67..70 \"mod\"\n-    WHITESPACE@70..71 \" \"\n-    NAME@71..72\n-      IDENT@71..72 \"d\"\n-    WHITESPACE@72..73 \" \"\n-    ITEM_LIST@73..118\n-      L_CURLY@73..74 \"{\"\n-      WHITESPACE@74..79 \"\\n    \"\n-      ATTR@79..87\n-        POUND@79..80 \"#\"\n-        BANG@80..81 \"!\"\n-        L_BRACK@81..82 \"[\"\n-        META@82..86\n-          PATH@82..86\n-            PATH_SEGMENT@82..86\n-              NAME_REF@82..86\n-                IDENT@82..86 \"attr\"\n-        R_BRACK@86..87 \"]\"\n-      WHITESPACE@87..92 \"\\n    \"\n-      MODULE@92..98\n-        MOD_KW@92..95 \"mod\"\n-        WHITESPACE@95..96 \" \"\n-        NAME@96..97\n-          IDENT@96..97 \"e\"\n-        SEMICOLON@97..98 \";\"\n-      WHITESPACE@98..103 \"\\n    \"\n-      MODULE@103..116\n-        MOD_KW@103..106 \"mod\"\n-        WHITESPACE@106..107 \" \"\n-        NAME@107..108\n-          IDENT@107..108 \"f\"\n-        WHITESPACE@108..109 \" \"\n-        ITEM_LIST@109..116\n-          L_CURLY@109..110 \"{\"\n-          WHITESPACE@110..115 \"\\n    \"\n-          R_CURLY@115..116 \"}\"\n-      WHITESPACE@116..117 \"\\n\"\n-      R_CURLY@117..118 \"}\"\n+        NAME@40..41\n+          IDENT@40..41 \"S\"\n+        WHITESPACE@41..42 \" \"\n+        RECORD_FIELD_LIST@42..44\n+          L_CURLY@42..43 \"{\"\n+          R_CURLY@43..44 \"}\"\n+      WHITESPACE@44..45 \"\\n\"\n+      R_CURLY@45..46 \"}\"\n+  WHITESPACE@46..48 \"\\n\\n\"\n+  MODULE@48..99\n+    MOD_KW@48..51 \"mod\"\n+    WHITESPACE@51..52 \" \"\n+    NAME@52..53\n+      IDENT@52..53 \"d\"\n+    WHITESPACE@53..54 \" \"\n+    ITEM_LIST@54..99\n+      L_CURLY@54..55 \"{\"\n+      WHITESPACE@55..60 \"\\n    \"\n+      ATTR@60..68\n+        POUND@60..61 \"#\"\n+        BANG@61..62 \"!\"\n+        L_BRACK@62..63 \"[\"\n+        META@63..67\n+          PATH@63..67\n+            PATH_SEGMENT@63..67\n+              NAME_REF@63..67\n+                IDENT@63..67 \"attr\"\n+        R_BRACK@67..68 \"]\"\n+      WHITESPACE@68..73 \"\\n    \"\n+      MODULE@73..79\n+        MOD_KW@73..76 \"mod\"\n+        WHITESPACE@76..77 \" \"\n+        NAME@77..78\n+          IDENT@77..78 \"e\"\n+        SEMICOLON@78..79 \";\"\n+      WHITESPACE@79..84 \"\\n    \"\n+      MODULE@84..97\n+        MOD_KW@84..87 \"mod\"\n+        WHITESPACE@87..88 \" \"\n+        NAME@88..89\n+          IDENT@88..89 \"f\"\n+        WHITESPACE@89..90 \" \"\n+        ITEM_LIST@90..97\n+          L_CURLY@90..91 \"{\"\n+          WHITESPACE@91..96 \"\\n    \"\n+          R_CURLY@96..97 \"}\"\n+      WHITESPACE@97..98 \"\\n\"\n+      R_CURLY@98..99 \"}\"\n+  WHITESPACE@99..100 \"\\n\""}, {"sha": "4ff0d9795c781701edf44d062abaa68e37761015", "filename": "crates/syntax/test_data/parser/ok/0008_mod_item.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55078c81e04f016e65fc3eb54e98aa7cc10ed38f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rs?ref=55078c81e04f016e65fc3eb54e98aa7cc10ed38f", "patch": "@@ -1,8 +1,3 @@\n-mod a;\n-\n-mod b {\n-}\n-\n mod c {\n     fn foo() {\n     }\n@@ -14,4 +9,4 @@ mod d {\n     mod e;\n     mod f {\n     }\n-}\n\\ No newline at end of file\n+}"}]}