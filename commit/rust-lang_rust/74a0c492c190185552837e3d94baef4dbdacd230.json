{"sha": "74a0c492c190185552837e3d94baef4dbdacd230", "node_id": "C_kwDOAAsO6NoAKDc0YTBjNDkyYzE5MDE4NTU1MjgzN2UzZDk0YmFlZjRkYmRhY2QyMzA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-23T12:58:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-23T12:58:42Z"}, "message": "Rollup merge of #90168 - tmiasko:const-qualif-storage, r=matthewjasper\n\nReset qualifs when a storage of a local ends\n\nReset qualifs when a storage of a local ends to ensure that the local qualifs\nare affected by the state from previous loop iterations only if the local is\nkept alive.\n\nThe change should be forward compatible with a stricter handling of indirect\nassignments, since storage dead invalidates all existing pointers to the local.", "tree": {"sha": "a019c5cbe196d7868df7149ef634acd5bb6f5c74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a019c5cbe196d7868df7149ef634acd5bb6f5c74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74a0c492c190185552837e3d94baef4dbdacd230", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhdAcCCRBK7hj4Ov3rIwAAtbwIAJCp8cJJWktpKwJ6LxepQYSo\nKoWBFqsyVyHMCpZ8Ajc16BmMEoMZeJPH0yXzb+RqS3Ng+c4AHfm9McpFEl0d3vtO\ncjTL+hT1h1UNLl9g0k+H7xShdK/ecOymJDKpLPrdhkxf4yxBEziLygjcYrw8Ul5k\nhX1DzjjY+NTlb3bf8BuANA1U5kEDsjf00pKKU6gxyZKk2t8E8ecSUYjuRvGgE3I2\n7h7G6V+B72qEM741s/aODLJqHSc2JRe5NUh2h0rP915cDzyDyuTCajagSFmcRY2q\nvBm+hhmVFJlR0cXVn+QsbaQDplXkjl860mfbso3mtB9v3WsPGmVIpIP4p+y1J/Y=\n=u3y8\n-----END PGP SIGNATURE-----\n", "payload": "tree a019c5cbe196d7868df7149ef634acd5bb6f5c74\nparent 2b874f0242ee8e27af9961dd1a8712390832f1ad\nparent e4aeeca667b6ce0446703f22f95552a64954df0d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634993922 +0200\ncommitter GitHub <noreply@github.com> 1634993922 +0200\n\nRollup merge of #90168 - tmiasko:const-qualif-storage, r=matthewjasper\n\nReset qualifs when a storage of a local ends\n\nReset qualifs when a storage of a local ends to ensure that the local qualifs\nare affected by the state from previous loop iterations only if the local is\nkept alive.\n\nThe change should be forward compatible with a stricter handling of indirect\nassignments, since storage dead invalidates all existing pointers to the local.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74a0c492c190185552837e3d94baef4dbdacd230", "html_url": "https://github.com/rust-lang/rust/commit/74a0c492c190185552837e3d94baef4dbdacd230", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74a0c492c190185552837e3d94baef4dbdacd230/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b874f0242ee8e27af9961dd1a8712390832f1ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b874f0242ee8e27af9961dd1a8712390832f1ad", "html_url": "https://github.com/rust-lang/rust/commit/2b874f0242ee8e27af9961dd1a8712390832f1ad"}, {"sha": "e4aeeca667b6ce0446703f22f95552a64954df0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4aeeca667b6ce0446703f22f95552a64954df0d", "html_url": "https://github.com/rust-lang/rust/commit/e4aeeca667b6ce0446703f22f95552a64954df0d"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "e20b86dd4523cd2c946ae55bed60bdf287e67a3d", "filename": "compiler/rustc_const_eval/src/transform/check_consts/resolver.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/74a0c492c190185552837e3d94baef4dbdacd230/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a0c492c190185552837e3d94baef4dbdacd230/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fresolver.rs?ref=74a0c492c190185552837e3d94baef4dbdacd230", "patch": "@@ -4,7 +4,7 @@\n \n use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::visit::Visitor;\n-use rustc_middle::mir::{self, BasicBlock, Local, Location};\n+use rustc_middle::mir::{self, BasicBlock, Local, Location, Statement, StatementKind};\n \n use std::marker::PhantomData;\n \n@@ -120,6 +120,15 @@ where\n         self.super_assign(place, rvalue, location);\n     }\n \n+    fn visit_statement(&mut self, statement: &Statement<'tcx>, location: Location) {\n+        match statement.kind {\n+            StatementKind::StorageDead(local) => {\n+                self.qualifs_per_local.remove(local);\n+            }\n+            _ => self.super_statement(statement, location),\n+        }\n+    }\n+\n     fn visit_terminator(&mut self, terminator: &mir::Terminator<'tcx>, location: Location) {\n         // The effect of assignment to the return place in `TerminatorKind::Call` is not applied\n         // here; that occurs in `apply_call_return_effect`."}, {"sha": "52ef685e8f4f838bed471d66172245a243d407cc", "filename": "src/test/ui/consts/promoted-storage.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/74a0c492c190185552837e3d94baef4dbdacd230/src%2Ftest%2Fui%2Fconsts%2Fpromoted-storage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a0c492c190185552837e3d94baef4dbdacd230/src%2Ftest%2Fui%2Fconsts%2Fpromoted-storage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromoted-storage.rs?ref=74a0c492c190185552837e3d94baef4dbdacd230", "patch": "@@ -0,0 +1,20 @@\n+// Check that storage statements reset local qualification.\n+// check-pass\n+use std::cell::Cell;\n+\n+const C: Option<Cell<u32>> = {\n+    let mut c = None;\n+    let mut i = 0;\n+    while i == 0 {\n+        let mut x = None;\n+        c = x;\n+        x = Some(Cell::new(0));\n+        let _ = x;\n+        i += 1;\n+    }\n+    c\n+};\n+\n+fn main() {\n+    let _: &'static _ = &C;\n+}"}]}