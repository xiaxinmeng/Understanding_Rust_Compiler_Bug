{"sha": "fdd8b967c180192fb74bf17f07e2fda040bb9865", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZDhiOTY3YzE4MDE5MmZiNzRiZjE3ZjA3ZTJmZGEwNDBiYjk4NjU=", "commit": {"author": {"name": "Sam Radhakrishan", "email": "sk09idm@gmail.com", "date": "2019-08-28T21:13:09Z"}, "committer": {"name": "Sam Radhakrishan", "email": "sk09idm@gmail.com", "date": "2019-08-28T21:18:36Z"}, "message": "Fixes #63976. Incorrect error message.\n\nFix incorrect error message when accessing\nprivate field of union", "tree": {"sha": "c4cee5cbdf7c74b396bc1f3142c8513b206733ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4cee5cbdf7c74b396bc1f3142c8513b206733ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdd8b967c180192fb74bf17f07e2fda040bb9865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdd8b967c180192fb74bf17f07e2fda040bb9865", "html_url": "https://github.com/rust-lang/rust/commit/fdd8b967c180192fb74bf17f07e2fda040bb9865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdd8b967c180192fb74bf17f07e2fda040bb9865/comments", "author": {"login": "sam09", "id": 6648290, "node_id": "MDQ6VXNlcjY2NDgyOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6648290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam09", "html_url": "https://github.com/sam09", "followers_url": "https://api.github.com/users/sam09/followers", "following_url": "https://api.github.com/users/sam09/following{/other_user}", "gists_url": "https://api.github.com/users/sam09/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam09/subscriptions", "organizations_url": "https://api.github.com/users/sam09/orgs", "repos_url": "https://api.github.com/users/sam09/repos", "events_url": "https://api.github.com/users/sam09/events{/privacy}", "received_events_url": "https://api.github.com/users/sam09/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sam09", "id": 6648290, "node_id": "MDQ6VXNlcjY2NDgyOTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6648290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam09", "html_url": "https://github.com/sam09", "followers_url": "https://api.github.com/users/sam09/followers", "following_url": "https://api.github.com/users/sam09/following{/other_user}", "gists_url": "https://api.github.com/users/sam09/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam09/subscriptions", "organizations_url": "https://api.github.com/users/sam09/orgs", "repos_url": "https://api.github.com/users/sam09/repos", "events_url": "https://api.github.com/users/sam09/events{/privacy}", "received_events_url": "https://api.github.com/users/sam09/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4223726c354642705d87b9837933e3c3f38a2d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4223726c354642705d87b9837933e3c3f38a2d8", "html_url": "https://github.com/rust-lang/rust/commit/c4223726c354642705d87b9837933e3c3f38a2d8"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "4943270e193ec70c3f94ad1a8b597d3b8ef769a4", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdd8b967c180192fb74bf17f07e2fda040bb9865/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdd8b967c180192fb74bf17f07e2fda040bb9865/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=fdd8b967c180192fb74bf17f07e2fda040bb9865", "patch": "@@ -1396,8 +1396,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             self.tcx().sess,\n             expr.span,\n             E0616,\n-            \"field `{}` of struct `{}` is private\",\n+            \"field `{}` of `{}` `{}` is private\",\n             field,\n+            if let Some(def_kind) = self.tcx().def_kind(base_did){ def_kind.descr(base_did) }\n+            else { \" \" },\n             struct_path\n         );\n         // Also check if an accessible method exists, which is often what is meant."}]}