{"sha": "0b47f0226760ae059f011006342833564cfa40ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNDdmMDIyNjc2MGFlMDU5ZjAxMTAwNjM0MjgzMzU2NGNmYTQwYWU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-12-07T22:59:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-07T22:59:04Z"}, "message": "Rollup merge of #46548 - jonathanstrong:master, r=dtolnay\n\nRecommends lazily evaluated alternatives for `Option::or` and `Result::or`\n\nAdds language to docs for `Option` and `Result` recommending the use of lazily evaluated alternatives when appropriate. These comments are intended to echo a [clippy lint] on the same topic. The [reddit discussion] may also be of interest.\n\n[clippy lint]: https://rust-lang-nursery.github.io/rust-clippy/master/index.html#or_fun_call\n[reddit discussion]: https://www.reddit.com/r/rust/comments/7hutqn/perils_of_optionor_and_resultor/", "tree": {"sha": "4e9965f4dbcf426da68fe6acb00a27546f320a3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e9965f4dbcf426da68fe6acb00a27546f320a3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b47f0226760ae059f011006342833564cfa40ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b47f0226760ae059f011006342833564cfa40ae", "html_url": "https://github.com/rust-lang/rust/commit/0b47f0226760ae059f011006342833564cfa40ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b47f0226760ae059f011006342833564cfa40ae/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "655303ce9b759a2b7484a569f9a5df035a7cfdc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/655303ce9b759a2b7484a569f9a5df035a7cfdc3", "html_url": "https://github.com/rust-lang/rust/commit/655303ce9b759a2b7484a569f9a5df035a7cfdc3"}, {"sha": "5847d0babdb4bc4545d9aeb9ef89862589ae1504", "url": "https://api.github.com/repos/rust-lang/rust/commits/5847d0babdb4bc4545d9aeb9ef89862589ae1504", "html_url": "https://github.com/rust-lang/rust/commit/5847d0babdb4bc4545d9aeb9ef89862589ae1504"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "d8f3ec38cf38c4a2297d592ab9b1d2c6c78652b5", "filename": "src/libcore/option.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0b47f0226760ae059f011006342833564cfa40ae/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b47f0226760ae059f011006342833564cfa40ae/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=0b47f0226760ae059f011006342833564cfa40ae", "patch": "@@ -338,6 +338,12 @@ impl<T> Option<T> {\n \n     /// Returns the contained value or a default.\n     ///\n+    /// Arguments passed to `unwrap_or` are eagerly evaluated; if you are passing\n+    /// the result of a function call, it is recommended to use [`unwrap_or_else`],\n+    /// which is lazily evaluated.\n+    ///\n+    /// [`unwrap_or_else`]: #method.unwrap_or_else\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -451,11 +457,16 @@ impl<T> Option<T> {\n     /// Transforms the `Option<T>` into a [`Result<T, E>`], mapping [`Some(v)`] to\n     /// [`Ok(v)`] and [`None`] to [`Err(err)`].\n     ///\n+    /// Arguments passed to `ok_or` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`ok_or_else`], which is\n+    /// lazily evaluated.\n+    ///\n     /// [`Result<T, E>`]: ../../std/result/enum.Result.html\n     /// [`Ok(v)`]: ../../std/result/enum.Result.html#variant.Ok\n     /// [`Err(err)`]: ../../std/result/enum.Result.html#variant.Err\n     /// [`None`]: #variant.None\n     /// [`Some(v)`]: #variant.Some\n+    /// [`ok_or_else`]: #method.ok_or_else\n     ///\n     /// # Examples\n     ///\n@@ -644,6 +655,12 @@ impl<T> Option<T> {\n \n     /// Returns the option if it contains a value, otherwise returns `optb`.\n     ///\n+    /// Arguments passed to `or` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`or_else`], which is\n+    /// lazily evaluated.\n+    ///\n+    /// [`or_else`]: #method.or_else\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "2ace3d2aee8739fc4671637a7c467f0b0dea34b0", "filename": "src/libcore/result.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0b47f0226760ae059f011006342833564cfa40ae/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b47f0226760ae059f011006342833564cfa40ae/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=0b47f0226760ae059f011006342833564cfa40ae", "patch": "@@ -625,8 +625,13 @@ impl<T, E> Result<T, E> {\n \n     /// Returns `res` if the result is [`Err`], otherwise returns the [`Ok`] value of `self`.\n     ///\n+    /// Arguments passed to `or` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`or_else`], which is\n+    /// lazily evaluated.\n+    ///\n     /// [`Ok`]: enum.Result.html#variant.Ok\n     /// [`Err`]: enum.Result.html#variant.Err\n+    /// [`or_else`]: #method.or_else\n     ///\n     /// # Examples\n     ///\n@@ -690,8 +695,13 @@ impl<T, E> Result<T, E> {\n     /// Unwraps a result, yielding the content of an [`Ok`].\n     /// Else, it returns `optb`.\n     ///\n+    /// Arguments passed to `unwrap_or` are eagerly evaluated; if you are passing\n+    /// the result of a function call, it is recommended to use [`unwrap_or_else`],\n+    /// which is lazily evaluated.\n+    ///\n     /// [`Ok`]: enum.Result.html#variant.Ok\n     /// [`Err`]: enum.Result.html#variant.Err\n+    /// [`unwrap_or_else`]: #method.unwrap_or_else\n     ///\n     /// # Examples\n     ///"}]}