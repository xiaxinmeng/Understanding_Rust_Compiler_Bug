{"sha": "f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxN2UzODRhNDNkZDhjYTBhZWZiMzZiZmNkOGE2OWQ5YWQ3ZjEyY2Y=", "commit": {"author": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-08-24T17:41:58Z"}, "committer": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-08-24T17:41:58Z"}, "message": "use convention for with_* methods", "tree": {"sha": "ceab8cc96a4c987f26b0a2e8ab7f78793edcb5bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceab8cc96a4c987f26b0a2e8ab7f78793edcb5bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf", "html_url": "https://github.com/rust-lang/rust/commit/f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf/comments", "author": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3f07b2e30eb29a737b13ab127db927d3825c22b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f07b2e30eb29a737b13ab127db927d3825c22b", "html_url": "https://github.com/rust-lang/rust/commit/e3f07b2e30eb29a737b13ab127db927d3825c22b"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "d206df461200a6f1396d5a98c05938add7f3ded7", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=f17e384a43dd8ca0aefb36bfcd8a69d9ad7f12cf", "patch": "@@ -713,16 +713,18 @@ impl WrappingRange {\n         self.start > self.end || self.start == 0\n     }\n \n-    /// Returns new `WrappingRange` with replaced `start`\n+    /// Returns `self` with replaced `start`\n     #[inline(always)]\n-    pub fn with_start(&self, start: u128) -> Self {\n-        Self { start, end: self.end }\n+    pub fn with_start(mut self, start: u128) -> Self {\n+        self.start = start;\n+        self\n     }\n \n-    /// Returns new `WrappingRange` with replaced `end`\n+    /// Returns `self` with replaced `end`\n     #[inline(always)]\n-    pub fn with_end(&self, end: u128) -> Self {\n-        Self { start: self.start, end }\n+    pub fn with_end(mut self, end: u128) -> Self {\n+        self.end = end;\n+        self\n     }\n }\n \n@@ -1024,7 +1026,7 @@ impl Niche {\n     pub fn reserve<C: HasDataLayout>(&self, cx: &C, count: u128) -> Option<(u128, Scalar)> {\n         assert!(count > 0);\n \n-        let Scalar { value, valid_range: ref v } = self.scalar;\n+        let Scalar { value, valid_range: v } = self.scalar.clone();\n         let bits = value.size(cx).bits();\n         assert!(bits <= 128);\n         let max_value = !0u128 >> (128 - bits);"}]}