{"sha": "14983477cacd5576fadd7ead609c24451b748e56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0OTgzNDc3Y2FjZDU1NzZmYWRkN2VhZDYwOWMyNDQ1MWI3NDhlNTY=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-11-17T23:33:34Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-11-19T20:00:36Z"}, "message": "Ignore malformed environment variables on Windows too\n\nLeading equals symbols are treated as part of the variable name, if\nthere is no other equality symbol or none at all, the environment string\nis ignored.", "tree": {"sha": "9410ef10cf7b79e1078509dd7b53e4de7adf2483", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9410ef10cf7b79e1078509dd7b53e4de7adf2483"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14983477cacd5576fadd7ead609c24451b748e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14983477cacd5576fadd7ead609c24451b748e56", "html_url": "https://github.com/rust-lang/rust/commit/14983477cacd5576fadd7ead609c24451b748e56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14983477cacd5576fadd7ead609c24451b748e56/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e48b0e380319dc586a329baac640b9457feb87a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e48b0e380319dc586a329baac640b9457feb87a", "html_url": "https://github.com/rust-lang/rust/commit/3e48b0e380319dc586a329baac640b9457feb87a"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "545dec270fbcbb735fd194bc551384d7ecb6bf7a", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/14983477cacd5576fadd7ead609c24451b748e56/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14983477cacd5576fadd7ead609c24451b748e56/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=14983477cacd5576fadd7ead609c24451b748e56", "patch": "@@ -78,22 +78,31 @@ impl Iterator for Env {\n     type Item = (OsString, OsString);\n \n     fn next(&mut self) -> Option<(OsString, OsString)> {\n-        unsafe {\n-            if *self.cur == 0 { return None }\n-            let p = &*self.cur;\n-            let mut len = 0;\n-            while *(p as *const u16).offset(len) != 0 {\n-                len += 1;\n+        loop {\n+            unsafe {\n+                if *self.cur == 0 { return None }\n+                let p = &*self.cur as *const u16;\n+                let mut len = 0;\n+                while *p.offset(len) != 0 {\n+                    len += 1;\n+                }\n+                let s = slice::from_raw_parts(p, len as usize);\n+                self.cur = self.cur.offset(len + 1);\n+\n+                // Windows allows environment variables to start with an equals\n+                // symbol (in any other position, this is the separator between\n+                // variable name and value). Since`s` has at least length 1 at\n+                // this point (because the empty string terminates the array of\n+                // environment variables), we can safely slice.\n+                let pos = match s[1..].iter().position(|&u| u == b'=' as u16).map(|p| p + 1) {\n+                    Some(p) => p,\n+                    None => continue,\n+                }\n+                return Some((\n+                    OsStringExt::from_wide(&s[..pos]),\n+                    OsStringExt::from_wide(&s[pos+1..]),\n+                ))\n             }\n-            let p = p as *const u16;\n-            let s = slice::from_raw_parts(p, len as usize);\n-            self.cur = self.cur.offset(len + 1);\n-\n-            let (k, v) = match s.iter().position(|&b| b == '=' as u16) {\n-                Some(n) => (&s[..n], &s[n+1..]),\n-                None => (s, &[][..]),\n-            };\n-            Some((OsStringExt::from_wide(k), OsStringExt::from_wide(v)))\n         }\n     }\n }"}]}