{"sha": "db1a107b3f920637dc785fcc6d6bbe247a271e7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMWExMDdiM2Y5MjA2MzdkYzc4NWZjYzZkNmJiZTI0N2EyNzFlN2I=", "commit": {"author": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-01-25T18:23:22Z"}, "committer": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-01-28T18:30:34Z"}, "message": "Fill tracking issue for `iter_map_while` feature", "tree": {"sha": "864e665356ca2b5ebe0f7abb19920ad2f4c5a06b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/864e665356ca2b5ebe0f7abb19920ad2f4c5a06b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db1a107b3f920637dc785fcc6d6bbe247a271e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db1a107b3f920637dc785fcc6d6bbe247a271e7b", "html_url": "https://github.com/rust-lang/rust/commit/db1a107b3f920637dc785fcc6d6bbe247a271e7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db1a107b3f920637dc785fcc6d6bbe247a271e7b/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aff08010d6b35f2c7cef685b77ff1245c45a523", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aff08010d6b35f2c7cef685b77ff1245c45a523", "html_url": "https://github.com/rust-lang/rust/commit/1aff08010d6b35f2c7cef685b77ff1245c45a523"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7d10ef3d282198d49a1078da50674b5869c1e887", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db1a107b3f920637dc785fcc6d6bbe247a271e7b/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1a107b3f920637dc785fcc6d6bbe247a271e7b/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=db1a107b3f920637dc785fcc6d6bbe247a271e7b", "patch": "@@ -1760,7 +1760,7 @@ where\n /// [`map_while`]: trait.Iterator.html#method.map_while\n /// [`Iterator`]: trait.Iterator.html\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n-#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"68537\")]\n #[derive(Clone)]\n pub struct MapWhile<I, P> {\n     iter: I,\n@@ -1774,14 +1774,14 @@ impl<I, P> MapWhile<I, P> {\n     }\n }\n \n-#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"68537\")]\n impl<I: fmt::Debug, P> fmt::Debug for MapWhile<I, P> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_struct(\"MapWhile\").field(\"iter\", &self.iter).field(\"flag\", &self.finished).finish()\n     }\n }\n \n-#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"68537\")]\n impl<B, I: Iterator, P> Iterator for MapWhile<I, P>\n where\n     P: FnMut(I::Item) -> Option<B>,"}, {"sha": "d8a56cb3ae5152cc5e47fb3578e0d9ae0e395334", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db1a107b3f920637dc785fcc6d6bbe247a271e7b/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1a107b3f920637dc785fcc6d6bbe247a271e7b/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=db1a107b3f920637dc785fcc6d6bbe247a271e7b", "patch": "@@ -351,7 +351,7 @@ pub use self::adapters::Cloned;\n pub use self::adapters::Copied;\n #[stable(feature = \"iterator_flatten\", since = \"1.29.0\")]\n pub use self::adapters::Flatten;\n-#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"none\")]\n+#[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"68537\")]\n pub use self::adapters::MapWhile;\n #[stable(feature = \"iterator_step_by\", since = \"1.28.0\")]\n pub use self::adapters::StepBy;"}, {"sha": "1d055676c7708a75db07fd4d25c018bc33cc3712", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db1a107b3f920637dc785fcc6d6bbe247a271e7b/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1a107b3f920637dc785fcc6d6bbe247a271e7b/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=db1a107b3f920637dc785fcc6d6bbe247a271e7b", "patch": "@@ -1117,7 +1117,7 @@ pub trait Iterator {\n     /// [`Some`]: ../../std/option/enum.Option.html#variant.Some\n     /// [`None`]: ../../std/option/enum.Option.html#variant.None\n     #[inline]\n-    #[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"none\")]\n+    #[unstable(feature = \"iter_map_while\", reason = \"recently added\", issue = \"68537\")]\n     fn map_while<B, P>(self, predicate: P) -> MapWhile<Self, P>\n     where\n         Self: Sized,"}]}