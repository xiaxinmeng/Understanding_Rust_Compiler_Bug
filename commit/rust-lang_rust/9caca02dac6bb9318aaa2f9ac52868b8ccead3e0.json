{"sha": "9caca02dac6bb9318aaa2f9ac52868b8ccead3e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYWNhMDJkYWM2YmI5MzE4YWFhMmY5YWM1Mjg2OGI4Y2NlYWQzZTA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-02-13T19:29:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-02-13T19:29:58Z"}, "message": "Merge pull request #1827 from uasi/from-cstr\n\nAvoid extra memory allocations in core::str::from_cstr{,_len}", "tree": {"sha": "6dc4f303b91fca3acc856838dd5633dfe3cff394", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dc4f303b91fca3acc856838dd5633dfe3cff394"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9caca02dac6bb9318aaa2f9ac52868b8ccead3e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9caca02dac6bb9318aaa2f9ac52868b8ccead3e0", "html_url": "https://github.com/rust-lang/rust/commit/9caca02dac6bb9318aaa2f9ac52868b8ccead3e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9caca02dac6bb9318aaa2f9ac52868b8ccead3e0/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "url": "https://api.github.com/repos/rust-lang/rust/commits/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "html_url": "https://github.com/rust-lang/rust/commit/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26"}, {"sha": "4d788be80d98c792111f65605bb8853ab3cbdd4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d788be80d98c792111f65605bb8853ab3cbdd4a", "html_url": "https://github.com/rust-lang/rust/commit/4d788be80d98c792111f65605bb8853ab3cbdd4a"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "5b4cc1f77e864bd10d2a41a11a34518197695f90", "filename": "src/libcore/str.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9caca02dac6bb9318aaa2f9ac52868b8ccead3e0/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9caca02dac6bb9318aaa2f9ac52868b8ccead3e0/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=9caca02dac6bb9318aaa2f9ac52868b8ccead3e0", "patch": "@@ -194,35 +194,33 @@ Function: from_cstr\n \n Create a Rust string from a null-terminated C string\n */\n-unsafe fn from_cstr(cstr: sbuf) -> str {\n-    let res = [];\n+fn from_cstr(cstr: sbuf) -> str unsafe {\n     let start = cstr;\n     let curr = start;\n     let i = 0u;\n     while *curr != 0u8 {\n-        vec::push(res, *curr);\n         i += 1u;\n         curr = ptr::offset(start, i);\n     }\n-    ret from_bytes(res);\n+    ret from_cstr_len(cstr, i);\n }\n \n /*\n Function: from_cstr_len\n \n Create a Rust string from a C string of the given length\n */\n-unsafe fn from_cstr_len(cstr: sbuf, len: uint) -> str {\n-    let res = [];\n-    let start = cstr;\n-    let curr = start;\n-    let i = 0u;\n-    while i < len {\n-        vec::push(res, *curr);\n-        i += 1u;\n-        curr = ptr::offset(start, i);\n-    }\n-    ret from_bytes(res);\n+fn from_cstr_len(cstr: sbuf, len: uint) -> str unsafe {\n+    let buf: [u8] = [];\n+    vec::reserve(buf, len + 1u);\n+    vec::as_buf(buf) {|b| ptr::memcpy(b, cstr, len); }\n+    vec::unsafe::set_len(buf, len);\n+    buf += [0u8];\n+\n+    assert is_utf8(buf);\n+    let s: str = ::unsafe::reinterpret_cast(buf);\n+    ::unsafe::leak(buf);\n+    ret s;\n }\n \n /*"}]}