{"sha": "44e07476647ffb26f1aae034813a7ca430cb37b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZTA3NDc2NjQ3ZmZiMjZmMWFhZTAzNDgxM2E3Y2E0MzBjYjM3Yjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-17T05:45:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-17T05:45:24Z"}, "message": "Auto merge of #7216 - ThibsG:OptionIfLetElse7006, r=llogiq\n\nStop linting `else if let` pattern in [`option_if_let_else`] lint\n\nFor readability concerns, it is counterproductive to lint `else if let` pattern.\nUnfortunately the suggested code is much less readable.\n\nFixes: #7006\n\nchangelog: stop linting `else if let` pattern in [`option_if_let_else`] lint", "tree": {"sha": "96968af76ea9d1779df1d3d0cf0e1da9b9e78ba3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96968af76ea9d1779df1d3d0cf0e1da9b9e78ba3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44e07476647ffb26f1aae034813a7ca430cb37b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44e07476647ffb26f1aae034813a7ca430cb37b9", "html_url": "https://github.com/rust-lang/rust/commit/44e07476647ffb26f1aae034813a7ca430cb37b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44e07476647ffb26f1aae034813a7ca430cb37b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48dad265ab407b3aaa65166a300400be0aa79866", "url": "https://api.github.com/repos/rust-lang/rust/commits/48dad265ab407b3aaa65166a300400be0aa79866", "html_url": "https://github.com/rust-lang/rust/commit/48dad265ab407b3aaa65166a300400be0aa79866"}, {"sha": "368e621265ab7f3066d1e3e56b0633bca3f7e831", "url": "https://api.github.com/repos/rust-lang/rust/commits/368e621265ab7f3066d1e3e56b0633bca3f7e831", "html_url": "https://github.com/rust-lang/rust/commit/368e621265ab7f3066d1e3e56b0633bca3f7e831"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "2d98b275de7c5256ada053eb530b6a40d1a0a02f", "filename": "clippy_lints/src/option_if_let_else.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44e07476647ffb26f1aae034813a7ca430cb37b9/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44e07476647ffb26f1aae034813a7ca430cb37b9/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_if_let_else.rs?ref=44e07476647ffb26f1aae034813a7ca430cb37b9", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::usage::contains_return_break_continue_macro;\n-use clippy_utils::{eager_or_lazy, get_enclosing_block, in_macro, is_lang_ctor};\n+use clippy_utils::{eager_or_lazy, get_enclosing_block, in_macro, is_else_clause, is_lang_ctor};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::LangItem::OptionSome;\n@@ -161,13 +161,15 @@ fn detect_option_if_let_else<'tcx>(\n     if_chain! {\n         if !in_macro(expr.span); // Don't lint macros, because it behaves weirdly\n         if let ExprKind::Match(cond_expr, arms, MatchSource::IfLetDesugar{contains_else_clause: true}) = &expr.kind;\n+        if !is_else_clause(cx.tcx, expr);\n         if arms.len() == 2;\n         if !is_result_ok(cx, cond_expr); // Don't lint on Result::ok because a different lint does it already\n         if let PatKind::TupleStruct(struct_qpath, &[inner_pat], _) = &arms[0].pat.kind;\n         if is_lang_ctor(cx, struct_qpath, OptionSome);\n         if let PatKind::Binding(bind_annotation, _, id, _) = &inner_pat.kind;\n         if !contains_return_break_continue_macro(arms[0].body);\n         if !contains_return_break_continue_macro(arms[1].body);\n+\n         then {\n             let capture_mut = if bind_annotation == &BindingAnnotation::Mutable { \"mut \" } else { \"\" };\n             let some_body = extract_body_from_arm(&arms[0])?;"}, {"sha": "769ccc14bc1e4c2ba27f1e0a21c46799f052a3cc", "filename": "tests/ui/option_if_let_else.fixed", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/44e07476647ffb26f1aae034813a7ca430cb37b9/tests%2Fui%2Foption_if_let_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/44e07476647ffb26f1aae034813a7ca430cb37b9/tests%2Fui%2Foption_if_let_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.fixed?ref=44e07476647ffb26f1aae034813a7ca430cb37b9", "patch": "@@ -10,7 +10,11 @@ fn bad1(string: Option<&str>) -> (bool, &str) {\n fn else_if_option(string: Option<&str>) -> Option<(bool, &str)> {\n     if string.is_none() {\n         None\n-    } else { string.map_or(Some((false, \"\")), |x| Some((true, x))) }\n+    } else if let Some(x) = string {\n+        Some((true, x))\n+    } else {\n+        Some((false, \"\"))\n+    }\n }\n \n fn unop_bad(string: &Option<&str>, mut num: Option<i32>) {"}, {"sha": "4ebb068d22ed52bd3de3a674f214639aad6417fc", "filename": "tests/ui/option_if_let_else.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/44e07476647ffb26f1aae034813a7ca430cb37b9/tests%2Fui%2Foption_if_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44e07476647ffb26f1aae034813a7ca430cb37b9/tests%2Fui%2Foption_if_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.stderr?ref=44e07476647ffb26f1aae034813a7ca430cb37b9", "patch": "@@ -10,17 +10,6 @@ LL | |     }\n    |\n    = note: `-D clippy::option-if-let-else` implied by `-D warnings`\n \n-error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:17:12\n-   |\n-LL |       } else if let Some(x) = string {\n-   |  ____________^\n-LL | |         Some((true, x))\n-LL | |     } else {\n-LL | |         Some((false, \"\"))\n-LL | |     }\n-   | |_____^ help: try: `{ string.map_or(Some((false, \"\")), |x| Some((true, x))) }`\n-\n error: use Option::map_or instead of an if let/else\n   --> $DIR/option_if_let_else.rs:25:13\n    |\n@@ -159,5 +148,5 @@ error: use Option::map_or instead of an if let/else\n LL |     let _ = if let Some(x) = optional { x + 2 } else { 5 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `optional.map_or(5, |x| x + 2)`\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 11 previous errors\n "}]}