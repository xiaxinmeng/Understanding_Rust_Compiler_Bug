{"sha": "710da44e2249873eed123f8960667b88b1334289", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMGRhNDRlMjI0OTg3M2VlZDEyM2Y4OTYwNjY3Yjg4YjEzMzQyODk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T05:13:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T05:13:43Z"}, "message": "Auto merge of #84228 - SkiFire13:fix-84213, r=estebank\n\nSuggest to borrow after failing to cast from T to *const/mut T\n\nFixes #84213", "tree": {"sha": "e225230f6f8a1038218b709972e93bbb8ba7abfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e225230f6f8a1038218b709972e93bbb8ba7abfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/710da44e2249873eed123f8960667b88b1334289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/710da44e2249873eed123f8960667b88b1334289", "html_url": "https://github.com/rust-lang/rust/commit/710da44e2249873eed123f8960667b88b1334289", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/710da44e2249873eed123f8960667b88b1334289/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e7bebad1dc1900427d189040e547dd9d7b36f41", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e7bebad1dc1900427d189040e547dd9d7b36f41", "html_url": "https://github.com/rust-lang/rust/commit/5e7bebad1dc1900427d189040e547dd9d7b36f41"}, {"sha": "791e8001d1368a34fc938ed0e39f600c1b4079e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/791e8001d1368a34fc938ed0e39f600c1b4079e1", "html_url": "https://github.com/rust-lang/rust/commit/791e8001d1368a34fc938ed0e39f600c1b4079e1"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "b760a54f08c76f1e2f979468ca87f0ca993cd987", "filename": "compiler/rustc_typeck/src/check/cast.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -359,6 +359,21 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                     {\n                         sugg = Some(format!(\"&{}\", mutbl.prefix_str()));\n                     }\n+                } else if let ty::RawPtr(TypeAndMut { mutbl, .. }) = *self.cast_ty.kind() {\n+                    if fcx\n+                        .try_coerce(\n+                            self.expr,\n+                            fcx.tcx.mk_ref(\n+                                &ty::RegionKind::ReErased,\n+                                TypeAndMut { ty: self.expr_ty, mutbl },\n+                            ),\n+                            self.cast_ty,\n+                            AllowTwoPhase::No,\n+                        )\n+                        .is_ok()\n+                    {\n+                        sugg = Some(format!(\"&{}\", mutbl.prefix_str()));\n+                    }\n                 }\n                 if let Some(sugg) = sugg {\n                     err.span_label(self.span, \"invalid cast\");"}, {"sha": "e1a60557a20c760b2442cca68cfbadbae8b4360a", "filename": "src/test/ui/cast/issue-84213.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fcast%2Fissue-84213.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fcast%2Fissue-84213.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-84213.fixed?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+struct Something {\n+    pub field: u32,\n+}\n+\n+fn main() {\n+    let mut something = Something { field: 1337 };\n+\n+    let _pointer_to_something = &something as *const Something;\n+    //~^ ERROR: non-primitive cast\n+\n+    let _mut_pointer_to_something = &mut something as *mut Something;\n+    //~^ ERROR: non-primitive cast\n+}"}, {"sha": "3df264bdffb6ac968e8be89ad4f7ae7dc862eecd", "filename": "src/test/ui/cast/issue-84213.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fcast%2Fissue-84213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fcast%2Fissue-84213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-84213.rs?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+struct Something {\n+    pub field: u32,\n+}\n+\n+fn main() {\n+    let mut something = Something { field: 1337 };\n+\n+    let _pointer_to_something = something as *const Something;\n+    //~^ ERROR: non-primitive cast\n+\n+    let _mut_pointer_to_something = something as *mut Something;\n+    //~^ ERROR: non-primitive cast\n+}"}, {"sha": "a76aac580131ee92f74baea872791a78ab9e90d1", "filename": "src/test/ui/cast/issue-84213.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fcast%2Fissue-84213.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/710da44e2249873eed123f8960667b88b1334289/src%2Ftest%2Fui%2Fcast%2Fissue-84213.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-84213.stderr?ref=710da44e2249873eed123f8960667b88b1334289", "patch": "@@ -0,0 +1,25 @@\n+error[E0605]: non-primitive cast: `Something` as `*const Something`\n+  --> $DIR/issue-84213.rs:10:33\n+   |\n+LL |     let _pointer_to_something = something as *const Something;\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid cast\n+   |\n+help: borrow the value for the cast to be valid\n+   |\n+LL |     let _pointer_to_something = &something as *const Something;\n+   |                                 ^\n+\n+error[E0605]: non-primitive cast: `Something` as `*mut Something`\n+  --> $DIR/issue-84213.rs:13:37\n+   |\n+LL |     let _mut_pointer_to_something = something as *mut Something;\n+   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid cast\n+   |\n+help: borrow the value for the cast to be valid\n+   |\n+LL |     let _mut_pointer_to_something = &mut something as *mut Something;\n+   |                                     ^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0605`."}]}