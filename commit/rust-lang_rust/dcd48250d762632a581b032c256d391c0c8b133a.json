{"sha": "dcd48250d762632a581b032c256d391c0c8b133a", "node_id": "C_kwDOAAsO6NoAKGRjZDQ4MjUwZDc2MjYzMmE1ODFiMDMyYzI1NmQzOTFjMGM4YjEzM2E", "commit": {"author": {"name": "Petr Sumbera", "email": "petr.sumbera@oracle.com", "date": "2021-12-01T09:03:45Z"}, "committer": {"name": "Petr Sumbera", "email": "petr.sumbera@oracle.com", "date": "2021-12-01T09:03:45Z"}, "message": "fix sparc64 ABI for aggregates with floating point members", "tree": {"sha": "a4a2a671946d8cd44fa023330feb97d029f1c8d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4a2a671946d8cd44fa023330feb97d029f1c8d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcd48250d762632a581b032c256d391c0c8b133a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcd48250d762632a581b032c256d391c0c8b133a", "html_url": "https://github.com/rust-lang/rust/commit/dcd48250d762632a581b032c256d391c0c8b133a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcd48250d762632a581b032c256d391c0c8b133a/comments", "author": {"login": "psumbera", "id": 4249116, "node_id": "MDQ6VXNlcjQyNDkxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4249116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psumbera", "html_url": "https://github.com/psumbera", "followers_url": "https://api.github.com/users/psumbera/followers", "following_url": "https://api.github.com/users/psumbera/following{/other_user}", "gists_url": "https://api.github.com/users/psumbera/gists{/gist_id}", "starred_url": "https://api.github.com/users/psumbera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psumbera/subscriptions", "organizations_url": "https://api.github.com/users/psumbera/orgs", "repos_url": "https://api.github.com/users/psumbera/repos", "events_url": "https://api.github.com/users/psumbera/events{/privacy}", "received_events_url": "https://api.github.com/users/psumbera/received_events", "type": "User", "site_admin": false}, "committer": {"login": "psumbera", "id": 4249116, "node_id": "MDQ6VXNlcjQyNDkxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4249116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psumbera", "html_url": "https://github.com/psumbera", "followers_url": "https://api.github.com/users/psumbera/followers", "following_url": "https://api.github.com/users/psumbera/following{/other_user}", "gists_url": "https://api.github.com/users/psumbera/gists{/gist_id}", "starred_url": "https://api.github.com/users/psumbera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psumbera/subscriptions", "organizations_url": "https://api.github.com/users/psumbera/orgs", "repos_url": "https://api.github.com/users/psumbera/repos", "events_url": "https://api.github.com/users/psumbera/events{/privacy}", "received_events_url": "https://api.github.com/users/psumbera/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a912fedd0fb2ffc6927e2116110dc94ed3e45336", "url": "https://api.github.com/repos/rust-lang/rust/commits/a912fedd0fb2ffc6927e2116110dc94ed3e45336", "html_url": "https://github.com/rust-lang/rust/commit/a912fedd0fb2ffc6927e2116110dc94ed3e45336"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f1b9c310e728a6df7def182eadaf73a01d9c5e51", "filename": "src/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcd48250d762632a581b032c256d391c0c8b133a/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcd48250d762632a581b032c256d391c0c8b133a/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=dcd48250d762632a581b032c256d391c0c8b133a", "patch": "@@ -48,8 +48,8 @@ impl GccType for CastTarget {\n         let mut args: Vec<_> = self\n             .prefix\n             .iter()\n-            .flat_map(|option_kind| {\n-                option_kind.map(|kind| Reg { kind, size: self.prefix_chunk_size }.gcc_type(cx))\n+            .flat_map(|option_reg| {\n+                option_reg.map(|reg| reg.gcc_type(cx))\n             })\n             .chain((0..rest_count).map(|_| rest_gcc_unit))\n             .collect();"}]}