{"sha": "52bdda778ad595e661d06b16a193b3affe443d41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYmRkYTc3OGFkNTk1ZTY2MWQwNmIxNmExOTNiM2FmZmU0NDNkNDE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-15T21:14:03Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-15T21:14:03Z"}, "message": "Address the `asm!` case of #22234.", "tree": {"sha": "ec62ce5a39ebb1bc3212f6639c3a54f81accb271", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec62ce5a39ebb1bc3212f6639c3a54f81accb271"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52bdda778ad595e661d06b16a193b3affe443d41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52bdda778ad595e661d06b16a193b3affe443d41", "html_url": "https://github.com/rust-lang/rust/commit/52bdda778ad595e661d06b16a193b3affe443d41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52bdda778ad595e661d06b16a193b3affe443d41/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d8222e6a8a795272eea169c5415e5af28219fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/20d8222e6a8a795272eea169c5415e5af28219fb", "html_url": "https://github.com/rust-lang/rust/commit/20d8222e6a8a795272eea169c5415e5af28219fb"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "d8cba139fb5979b9258c5d8e6498a24e00be8f42", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/52bdda778ad595e661d06b16a193b3affe443d41/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bdda778ad595e661d06b16a193b3affe443d41/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=52bdda778ad595e661d06b16a193b3affe443d41", "patch": "@@ -18,6 +18,7 @@ use codemap;\n use codemap::Span;\n use ext::base;\n use ext::base::*;\n+use feature_gate;\n use parse::token::InternedString;\n use parse::token;\n use ptr::P;\n@@ -48,6 +49,12 @@ static OPTIONS: &'static [&'static str] = &[\"volatile\", \"alignstack\", \"intel\"];\n \n pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n                        -> Box<base::MacResult+'cx> {\n+    if !cx.ecfg.enable_asm() {\n+        feature_gate::emit_feature_err(\n+            &cx.parse_sess.span_diagnostic, \"asm\", sp, feature_gate::EXPLAIN_ASM);\n+        return DummyResult::expr(sp);\n+    }\n+\n     let mut p = cx.new_parser_from_tts(tts);\n     let mut asm = InternedString::new(\"\");\n     let mut asm_str_style = None;"}, {"sha": "e31c1a3274984ca64892c69dccb358e3e5681b90", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/52bdda778ad595e661d06b16a193b3affe443d41/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bdda778ad595e661d06b16a193b3affe443d41/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=52bdda778ad595e661d06b16a193b3affe443d41", "patch": "@@ -1425,7 +1425,14 @@ impl<'feat> ExpansionConfig<'feat> {\n \n     pub fn enable_quotes(&self) -> bool {\n         match self.features {\n-            Some(&Features { quote: true, .. }) => true,\n+            Some(&Features { allow_quote: true, .. }) => true,\n+            _ => false,\n+        }\n+    }\n+\n+    pub fn enable_asm(&self) -> bool {\n+        match self.features {\n+            Some(&Features { allow_asm: true, .. }) => true,\n             _ => false,\n         }\n     }"}, {"sha": "9d14f894a46fbedc705b3f6751a4d198013ade1a", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/52bdda778ad595e661d06b16a193b3affe443d41/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bdda778ad595e661d06b16a193b3affe443d41/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=52bdda778ad595e661d06b16a193b3affe443d41", "patch": "@@ -156,7 +156,8 @@ pub struct Features {\n     pub unboxed_closures: bool,\n     pub rustc_diagnostic_macros: bool,\n     pub visible_private_types: bool,\n-    pub quote: bool,\n+    pub allow_quote: bool,\n+    pub allow_asm: bool,\n     pub old_orphan_check: bool,\n     pub simd_ffi: bool,\n     pub unmarked_api: bool,\n@@ -172,7 +173,8 @@ impl Features {\n             unboxed_closures: false,\n             rustc_diagnostic_macros: false,\n             visible_private_types: false,\n-            quote: false,\n+            allow_quote: false,\n+            allow_asm: false,\n             old_orphan_check: false,\n             simd_ffi: false,\n             unmarked_api: false,\n@@ -221,6 +223,9 @@ pub fn emit_feature_warn(diag: &SpanHandler, feature: &str, span: Span, explain:\n     }\n }\n \n+pub const EXPLAIN_ASM: &'static str =\n+    \"inline assembly is not stable enough for use and is subject to change\";\n+\n struct MacroVisitor<'a> {\n     context: &'a Context<'a>\n }\n@@ -231,8 +236,7 @@ impl<'a, 'v> Visitor<'v> for MacroVisitor<'a> {\n         let id = path.segments.last().unwrap().identifier;\n \n         if id == token::str_to_ident(\"asm\") {\n-            self.context.gate_feature(\"asm\", path.span, \"inline assembly is not \\\n-                stable enough for use and is subject to change\");\n+            self.context.gate_feature(\"asm\", path.span, EXPLAIN_ASM);\n         }\n \n         else if id == token::str_to_ident(\"log_syntax\") {\n@@ -594,7 +598,8 @@ fn check_crate_inner<F>(cm: &CodeMap, span_handler: &SpanHandler, krate: &ast::C\n         unboxed_closures: cx.has_feature(\"unboxed_closures\"),\n         rustc_diagnostic_macros: cx.has_feature(\"rustc_diagnostic_macros\"),\n         visible_private_types: cx.has_feature(\"visible_private_types\"),\n-        quote: cx.has_feature(\"quote\"),\n+        allow_quote: cx.has_feature(\"quote\"),\n+        allow_asm: cx.has_feature(\"asm\"),\n         old_orphan_check: cx.has_feature(\"old_orphan_check\"),\n         simd_ffi: cx.has_feature(\"simd_ffi\"),\n         unmarked_api: cx.has_feature(\"unmarked_api\"),"}, {"sha": "d2ee01109f8d8f577d97db9727f3c2d3c089f398", "filename": "src/test/compile-fail/asm-gated2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/52bdda778ad595e661d06b16a193b3affe443d41/src%2Ftest%2Fcompile-fail%2Fasm-gated2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bdda778ad595e661d06b16a193b3affe443d41/src%2Ftest%2Fcompile-fail%2Fasm-gated2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fasm-gated2.rs?ref=52bdda778ad595e661d06b16a193b3affe443d41", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    unsafe {\n+        println!(\"{}\", asm!(\"\")); //~ ERROR inline assembly is not stable\n+    }\n+}"}]}