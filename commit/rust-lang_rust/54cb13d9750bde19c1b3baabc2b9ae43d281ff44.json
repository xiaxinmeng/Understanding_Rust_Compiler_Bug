{"sha": "54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0Y2IxM2Q5NzUwYmRlMTljMWIzYmFhYmMyYjlhZTQzZDI4MWZmNDQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-06-05T14:33:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-05T14:33:48Z"}, "message": "Rollup merge of #51308 - fanzier:const-prop-array-bounds-check, r=oli-obk\n\nCheck array indices in constant propagation\n\nPreviously, uses of constant weren't correctly propagated.\nThis fixes #48920.\n\nr? @oli-obk because you suggested it", "tree": {"sha": "38eaffb76c4c82cb3c6e7fa903cc65aba97ddd1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38eaffb76c4c82cb3c6e7fa903cc65aba97ddd1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbFp9MCRBK7hj4Ov3rIwAAdHIIAB/2lwk+aE3vSSlxw2N1CREt\n/TDgw7zWUPieO0QM7OXUaNgvNqt1cazdVBBVi3AxR5k37abuZ4+sivDC22Wh9fmX\nJiGSLZgGsgEnX86+5TV+SQZoOE2c1kH89cbCYLOHJrSyWvvmZ8bw2kCTHIXDLyd+\nWCY4kXSueGwENz24b9BHcNlTnEIzTVQHQUnk2hOgBgKeKZhQp1CtrvRPLy7+AYcp\ncQLAZ8Ch14Rp/NBV/rwiCuaB6UmQnYtf06S66m6LTZJ6TggMYVmqQEi373lu2tbu\naHWqLvw0aVwAGd7UxEOIX64QhJ/yf6LkHM+XDLvptvPbu5uv6kzD3QLvfU1a0vo=\n=SPa+\n-----END PGP SIGNATURE-----\n", "payload": "tree 38eaffb76c4c82cb3c6e7fa903cc65aba97ddd1f\nparent ac32f8151b33fe1f00e1991c1d5ac20f7914fad3\nparent 96004899bec1d63a8f54bea461f2d2a2965d4636\nauthor Mark Simulacrum <mark.simulacrum@gmail.com> 1528209228 -0600\ncommitter GitHub <noreply@github.com> 1528209228 -0600\n\nRollup merge of #51308 - fanzier:const-prop-array-bounds-check, r=oli-obk\n\nCheck array indices in constant propagation\n\nPreviously, uses of constant weren't correctly propagated.\nThis fixes #48920.\n\nr? @oli-obk because you suggested it\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "html_url": "https://github.com/rust-lang/rust/commit/54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac32f8151b33fe1f00e1991c1d5ac20f7914fad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac32f8151b33fe1f00e1991c1d5ac20f7914fad3", "html_url": "https://github.com/rust-lang/rust/commit/ac32f8151b33fe1f00e1991c1d5ac20f7914fad3"}, {"sha": "96004899bec1d63a8f54bea461f2d2a2965d4636", "url": "https://api.github.com/repos/rust-lang/rust/commits/96004899bec1d63a8f54bea461f2d2a2965d4636", "html_url": "https://github.com/rust-lang/rust/commit/96004899bec1d63a8f54bea461f2d2a2965d4636"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "d39042ceba99fc6162c5d4aa6d246084d6ad3f26", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -240,16 +240,6 @@ impl<'b, 'a, 'tcx:'b> ConstPropagator<'b, 'a, 'tcx> {\n     ) -> Option<Const<'tcx>> {\n         let span = source_info.span;\n         match *rvalue {\n-            // No need to overwrite an already evaluated constant\n-            Rvalue::Use(Operand::Constant(box Constant {\n-                literal: Literal::Value {\n-                    value: &ty::Const {\n-                        val: ConstVal::Value(_),\n-                        ..\n-                    },\n-                },\n-                ..\n-            })) => None,\n             // This branch exists for the sanity type check\n             Rvalue::Use(Operand::Constant(ref c)) => {\n                 assert_eq!(c.ty, place_ty);"}, {"sha": "f8b20f6ee7933f4efac8699f741efe23c6b56491", "filename": "src/test/compile-fail/const-err-early.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -19,8 +19,8 @@ pub const C: u8 = 200u8 * 4; //~ ERROR const_err\n //~^ ERROR this constant cannot be used\n pub const D: u8 = 42u8 - (42u8 + 1); //~ ERROR const_err\n //~^ ERROR this constant cannot be used\n-pub const E: u8 = [5u8][1];\n-//~^ ERROR const_err\n+pub const E: u8 = [5u8][1]; //~ ERROR const_err\n+//~| ERROR this constant cannot be used\n \n fn main() {\n     let _a = A;"}, {"sha": "9a5cb5a4a83fac6fdd10a4ba4930688ff7531609", "filename": "src/test/compile-fail/const-err2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err2.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -31,6 +31,7 @@ fn main() {\n     let d = 42u8 - (42u8 + 1);\n     //~^ ERROR const_err\n     let _e = [5u8][1];\n+    //~^ ERROR const_err\n     black_box(a);\n     black_box(b);\n     black_box(c);"}, {"sha": "f5e43b57e7775082022d99b3291b3765c03da23b", "filename": "src/test/compile-fail/const-err3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fcompile-fail%2Fconst-err3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fcompile-fail%2Fconst-err3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err3.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -23,6 +23,7 @@ fn main() {\n     let d = 42u8 - (42u8 + 1);\n     //~^ ERROR const_err\n     let _e = [5u8][1];\n+    //~^ ERROR const_err\n     black_box(b);\n     black_box(c);\n     black_box(d);"}, {"sha": "cf342ad94f990271e34c8f0eedfd5fac33727c2f", "filename": "src/test/run-fail/mir_indexing_oob_1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_1.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -12,6 +12,7 @@\n \n const C: [u32; 5] = [0; 5];\n \n+#[allow(const_err)]\n fn test() -> u32 {\n     C[10]\n }"}, {"sha": "3eb94682b20471d05a05eead80d74f9ef0009573", "filename": "src/test/run-fail/mir_indexing_oob_2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_2.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -12,6 +12,7 @@\n \n const C: &'static [u8; 5] = b\"hello\";\n \n+#[allow(const_err)]\n fn test() -> u8 {\n     C[10]\n }"}, {"sha": "06bb6d4d2871378cc173b75cd81f49f8d26235be", "filename": "src/test/run-fail/mir_indexing_oob_3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmir_indexing_oob_3.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -12,6 +12,7 @@\n \n const C: &'static [u8; 5] = b\"hello\";\n \n+#[allow(const_err)]\n fn mir() -> u8 {\n     C[10]\n }"}, {"sha": "d16231c72b91a5040cf65ee083332eb9ccc592fe", "filename": "src/test/ui/const-eval/index_out_of_bound.stderr", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac32f8151b33fe1f00e1991c1d5ac20f7914fad3/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac32f8151b33fe1f00e1991c1d5ac20f7914fad3/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bound.stderr?ref=ac32f8151b33fe1f00e1991c1d5ac20f7914fad3", "patch": "@@ -1,9 +0,0 @@\n-error[E0080]: constant evaluation error\n-  --> $DIR/index_out_of_bound.rs:11:19\n-   |\n-LL | static FOO: i32 = [][0];\n-   |                   ^^^^^ index out of bounds: the len is 0 but the index is 0\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0080`."}, {"sha": "f3578bcef6e411b5018155264b7bbc6be5d28b18", "filename": "src/test/ui/const-eval/index_out_of_bounds.rs", "status": "renamed", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bounds.rs?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -11,4 +11,7 @@\n static FOO: i32 = [][0];\n //~^ ERROR E0080\n \n-fn main() {}\n+fn main() {\n+    let array = [std::env::args().len()];\n+    array[1]; //~ ERROR index out of bounds\n+}", "previous_filename": "src/test/ui/const-eval/index_out_of_bound.rs"}, {"sha": "96e592dc209a8a7c59b82b9ea45d4c5e42ff6127", "filename": "src/test/ui/const-eval/index_out_of_bounds.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54cb13d9750bde19c1b3baabc2b9ae43d281ff44/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Findex_out_of_bounds.stderr?ref=54cb13d9750bde19c1b3baabc2b9ae43d281ff44", "patch": "@@ -0,0 +1,17 @@\n+error[E0080]: constant evaluation error\n+  --> $DIR/index_out_of_bounds.rs:11:19\n+   |\n+LL | static FOO: i32 = [][0];\n+   |                   ^^^^^ index out of bounds: the len is 0 but the index is 0\n+\n+error: index out of bounds: the len is 1 but the index is 1\n+  --> $DIR/index_out_of_bounds.rs:16:5\n+   |\n+LL |     array[1]; //~ ERROR index out of bounds\n+   |     ^^^^^^^^\n+   |\n+   = note: #[deny(const_err)] on by default\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0080`."}]}