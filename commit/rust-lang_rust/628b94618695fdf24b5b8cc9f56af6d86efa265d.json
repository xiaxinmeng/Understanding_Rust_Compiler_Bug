{"sha": "628b94618695fdf24b5b8cc9f56af6d86efa265d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyOGI5NDYxODY5NWZkZjI0YjViOGNjOWY1NmFmNmQ4NmVmYTI2NWQ=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-27T14:23:55Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-31T03:40:52Z"}, "message": "libcore: rewrite str::reserve in pure rust.", "tree": {"sha": "840a678f98c3ce53925a33782413ac5d270ca06a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/840a678f98c3ce53925a33782413ac5d270ca06a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/628b94618695fdf24b5b8cc9f56af6d86efa265d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/628b94618695fdf24b5b8cc9f56af6d86efa265d", "html_url": "https://github.com/rust-lang/rust/commit/628b94618695fdf24b5b8cc9f56af6d86efa265d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/628b94618695fdf24b5b8cc9f56af6d86efa265d/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9074d9b5813c43cb1d4920dbc9de7dfde032577a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9074d9b5813c43cb1d4920dbc9de7dfde032577a", "html_url": "https://github.com/rust-lang/rust/commit/9074d9b5813c43cb1d4920dbc9de7dfde032577a"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "888d992321cdd4ff3ae86d2377a3a05be68dde96", "filename": "src/libcore/str.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/628b94618695fdf24b5b8cc9f56af6d86efa265d/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/628b94618695fdf24b5b8cc9f56af6d86efa265d/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=628b94618695fdf24b5b8cc9f56af6d86efa265d", "patch": "@@ -115,11 +115,6 @@ export\n    StrSlice,\n    UniqueStr;\n \n-#[abi = \"cdecl\"]\n-extern mod rustrt {\n-    fn str_reserve_shared(&ss: ~str, nn: libc::size_t);\n-}\n-\n /*\n Section: Creating a string\n */\n@@ -1818,8 +1813,9 @@ pure fn as_buf<T>(s: &str, f: fn(*u8, uint) -> T) -> T {\n  * * n - The number of bytes to reserve space for\n  */\n fn reserve(&s: ~str, n: uint) {\n-    if capacity(s) < n {\n-        rustrt::str_reserve_shared(s, n as size_t);\n+    unsafe {\n+        let v: *mut ~[u8] = ::unsafe::reinterpret_cast(ptr::addr_of(s));\n+        vec::reserve(*v, n + 1);\n     }\n }\n "}, {"sha": "f9da1c91cf0d8da42004f86519d5996cc1c18231", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/628b94618695fdf24b5b8cc9f56af6d86efa265d/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/628b94618695fdf24b5b8cc9f56af6d86efa265d/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=628b94618695fdf24b5b8cc9f56af6d86efa265d", "patch": "@@ -141,13 +141,6 @@ vec_reserve_shared(type_desc* ty, rust_vec_box** vp,\n     reserve_vec_exact(task, vp, n_elts * ty->size);\n }\n \n-extern \"C\" CDECL void\n-str_reserve_shared(rust_vec_box** sp,\n-                   size_t n_elts) {\n-    rust_task *task = rust_get_current_task();\n-    reserve_vec_exact(task, sp, n_elts + 1);\n-}\n-\n extern \"C\" CDECL rust_vec*\n rand_seed() {\n     size_t size = sizeof(ub4) * RANDSIZ;"}, {"sha": "8c550833d1c38c125a055ac99d0264f0685a4edc", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/628b94618695fdf24b5b8cc9f56af6d86efa265d/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/628b94618695fdf24b5b8cc9f56af6d86efa265d/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=628b94618695fdf24b5b8cc9f56af6d86efa265d", "patch": "@@ -61,7 +61,6 @@ shape_log_str\n start_task\n vec_reserve_shared_actual\n vec_reserve_shared\n-str_reserve_shared\n task_clear_event_reject\n task_wait_event\n task_signal_event"}]}