{"sha": "97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZWEyZGZjNGI2YjQ5YTE3NWQ0ZDBmODViMzdjNzdiZDFlYTNmM2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-08T11:58:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-08T11:58:54Z"}, "message": "Move to a dedicated file", "tree": {"sha": "862095016a179751c2f6f7070935f259a441a22c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/862095016a179751c2f6f7070935f259a441a22c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "html_url": "https://github.com/rust-lang/rust/commit/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e4fca5882bdd6d00dfcc384473c1f612e00baa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4fca5882bdd6d00dfcc384473c1f612e00baa2", "html_url": "https://github.com/rust-lang/rust/commit/6e4fca5882bdd6d00dfcc384473c1f612e00baa2"}], "stats": {"total": 121, "additions": 64, "deletions": 57}, "files": [{"sha": "747654c1fcb2317058f5ad6caf4bf866d5eaa5ef", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 2, "deletions": 55, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "patch": "@@ -4,6 +4,7 @@\n \n pub mod not_bash;\n pub mod install;\n+pub mod release;\n pub mod dist;\n pub mod pre_commit;\n \n@@ -19,7 +20,7 @@ use walkdir::{DirEntry, WalkDir};\n \n use crate::{\n     codegen::Mode,\n-    not_bash::{date_iso, fs2, pushd, pushenv, rm_rf, run},\n+    not_bash::{fs2, pushd, pushenv, rm_rf, run},\n };\n \n pub use anyhow::{bail, Context as _, Result};\n@@ -153,60 +154,6 @@ pub fn run_pre_cache() -> Result<()> {\n     Ok(())\n }\n \n-pub fn run_release(dry_run: bool) -> Result<()> {\n-    if !dry_run {\n-        run!(\"git switch release\")?;\n-        run!(\"git fetch upstream --tags --force\")?;\n-        run!(\"git reset --hard tags/nightly\")?;\n-        run!(\"git push\")?;\n-    }\n-    codegen::generate_assists_docs(Mode::Overwrite)?;\n-    codegen::generate_feature_docs(Mode::Overwrite)?;\n-\n-    let website_root = project_root().join(\"../rust-analyzer.github.io\");\n-    let changelog_dir = website_root.join(\"./thisweek/_posts\");\n-\n-    let today = date_iso()?;\n-    let commit = run!(\"git rev-parse HEAD\")?;\n-    let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n-\n-    let contents = format!(\n-        \"\\\n-= Changelog #{}\n-:sectanchors:\n-:page-layout: post\n-\n-Commit: commit:{}[] +\n-Release: release:{}[]\n-\n-== New Features\n-\n-* pr:[] .\n-\n-== Fixes\n-\n-== Internal Improvements\n-\",\n-        changelog_n, commit, today\n-    );\n-\n-    let path = changelog_dir.join(format!(\"{}-changelog-{}.adoc\", today, changelog_n));\n-    fs2::write(&path, &contents)?;\n-\n-    for &adoc in [\"manual.adoc\", \"generated_features.adoc\", \"generated_assists.adoc\"].iter() {\n-        let src = project_root().join(\"./docs/user/\").join(adoc);\n-        let dst = website_root.join(adoc);\n-        fs2::copy(src, dst)?;\n-    }\n-\n-    let tags = run!(\"git tag --list\"; echo = false)?;\n-    let prev_tag = tags.lines().filter(|line| is_release_tag(line)).last().unwrap();\n-\n-    println!(\"\\n    git log {}..HEAD --merges --reverse\", prev_tag);\n-\n-    Ok(())\n-}\n-\n fn is_release_tag(tag: &str) -> bool {\n     tag.len() == \"2020-02-24\".len() && tag.starts_with(|c: char| c.is_ascii_digit())\n }"}, {"sha": "701c60fc0230a7ad23e96dc6a90d74c34c69e686", "filename": "xtask/src/main.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "patch": "@@ -16,8 +16,9 @@ use xtask::{\n     dist::run_dist,\n     install::{ClientOpt, InstallCmd, ServerOpt},\n     not_bash::pushd,\n-    pre_commit, project_root, run_clippy, run_fuzzer, run_pre_cache, run_release, run_rustfmt,\n-    Result,\n+    pre_commit, project_root,\n+    release::run_release,\n+    run_clippy, run_fuzzer, run_pre_cache, run_rustfmt, Result,\n };\n \n fn main() -> Result<()> {"}, {"sha": "771a8cf718b67cdb13cb52badd277be22047c6c7", "filename": "xtask/src/release.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b/xtask%2Fsrc%2Frelease.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b/xtask%2Fsrc%2Frelease.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Frelease.rs?ref=97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "patch": "@@ -0,0 +1,59 @@\n+use crate::{\n+    codegen, is_release_tag,\n+    not_bash::{date_iso, fs2, run},\n+    project_root, Mode, Result,\n+};\n+\n+pub fn run_release(dry_run: bool) -> Result<()> {\n+    if !dry_run {\n+        run!(\"git switch release\")?;\n+        run!(\"git fetch upstream --tags --force\")?;\n+        run!(\"git reset --hard tags/nightly\")?;\n+        run!(\"git push\")?;\n+    }\n+    codegen::generate_assists_docs(Mode::Overwrite)?;\n+    codegen::generate_feature_docs(Mode::Overwrite)?;\n+\n+    let website_root = project_root().join(\"../rust-analyzer.github.io\");\n+    let changelog_dir = website_root.join(\"./thisweek/_posts\");\n+\n+    let today = date_iso()?;\n+    let commit = run!(\"git rev-parse HEAD\")?;\n+    let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n+\n+    let contents = format!(\n+        \"\\\n+= Changelog #{}\n+:sectanchors:\n+:page-layout: post\n+\n+Commit: commit:{}[] +\n+Release: release:{}[]\n+\n+== New Features\n+\n+* pr:[] .\n+\n+== Fixes\n+\n+== Internal Improvements\n+\",\n+        changelog_n, commit, today\n+    );\n+\n+    let path = changelog_dir.join(format!(\"{}-changelog-{}.adoc\", today, changelog_n));\n+    fs2::write(&path, &contents)?;\n+\n+    for &adoc in [\"manual.adoc\", \"generated_features.adoc\", \"generated_assists.adoc\"].iter() {\n+        let src = project_root().join(\"./docs/user/\").join(adoc);\n+        let dst = website_root.join(adoc);\n+        fs2::copy(src, dst)?;\n+    }\n+\n+    let tags = run!(\"git tag --list\"; echo = false)?;\n+    let prev_tag = tags.lines().filter(|line| is_release_tag(line)).last().unwrap();\n+\n+    println!(\"\\n    git log {}..HEAD --merges --reverse\", prev_tag);\n+\n+    Ok(())\n+}"}]}