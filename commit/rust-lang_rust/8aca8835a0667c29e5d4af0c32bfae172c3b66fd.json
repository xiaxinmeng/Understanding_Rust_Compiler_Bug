{"sha": "8aca8835a0667c29e5d4af0c32bfae172c3b66fd", "node_id": "C_kwDOAAsO6NoAKDhhY2E4ODM1YTA2NjdjMjllNWQ0YWYwYzMyYmZhZTE3MmMzYjY2ZmQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-27T18:04:54Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-27T18:04:54Z"}, "message": "rustdoc: remove Clean trait impl for ty::Term", "tree": {"sha": "a7dedfbda0d97f909b12c2e7ff22506d38637859", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7dedfbda0d97f909b12c2e7ff22506d38637859"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aca8835a0667c29e5d4af0c32bfae172c3b66fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aca8835a0667c29e5d4af0c32bfae172c3b66fd", "html_url": "https://github.com/rust-lang/rust/commit/8aca8835a0667c29e5d4af0c32bfae172c3b66fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aca8835a0667c29e5d4af0c32bfae172c3b66fd/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a220937c283803bfd5d1155e4a81e6287089504", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a220937c283803bfd5d1155e4a81e6287089504", "html_url": "https://github.com/rust-lang/rust/commit/2a220937c283803bfd5d1155e4a81e6287089504"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "0c4851732f68b6d54db4d0850ee84b3d6e97bd7c", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8aca8835a0667c29e5d4af0c32bfae172c3b66fd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aca8835a0667c29e5d4af0c32bfae172c3b66fd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=8aca8835a0667c29e5d4af0c32bfae172c3b66fd", "patch": "@@ -398,12 +398,10 @@ fn clean_type_outlives_predicate<'tcx>(\n     })\n }\n \n-impl<'tcx> Clean<'tcx, Term> for ty::Term<'tcx> {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> Term {\n-        match self {\n-            ty::Term::Ty(ty) => Term::Type(clean_middle_ty(*ty, cx, None)),\n-            ty::Term::Const(c) => Term::Constant(clean_middle_const(*c, cx)),\n-        }\n+fn clean_middle_term<'tcx>(term: ty::Term<'tcx>, cx: &mut DocContext<'tcx>) -> Term {\n+    match term {\n+        ty::Term::Ty(ty) => Term::Type(clean_middle_ty(ty, cx, None)),\n+        ty::Term::Const(c) => Term::Constant(clean_middle_const(c, cx)),\n     }\n }\n \n@@ -426,7 +424,7 @@ fn clean_projection_predicate<'tcx>(\n     let ty::ProjectionPredicate { projection_ty, term } = pred;\n     WherePredicate::EqPredicate {\n         lhs: clean_projection(projection_ty, cx, None),\n-        rhs: term.clean(cx),\n+        rhs: clean_middle_term(term, cx),\n     }\n }\n \n@@ -1682,7 +1680,9 @@ pub(crate) fn clean_middle_ty<'tcx>(\n                             .projection_ty,\n                         cx,\n                     ),\n-                    kind: TypeBindingKind::Equality { term: pb.skip_binder().term.clean(cx) },\n+                    kind: TypeBindingKind::Equality {\n+                        term: clean_middle_term(pb.skip_binder().term, cx),\n+                    },\n                 });\n             }\n \n@@ -1746,7 +1746,7 @@ pub(crate) fn clean_middle_ty<'tcx>(\n                                     Some(TypeBinding {\n                                         assoc: projection_to_path_segment(proj.projection_ty, cx),\n                                         kind: TypeBindingKind::Equality {\n-                                            term: proj.term.clean(cx),\n+                                            term: clean_middle_term(proj.term, cx),\n                                         },\n                                     })\n                                 } else {"}]}