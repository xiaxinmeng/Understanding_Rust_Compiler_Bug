{"sha": "8659889ed959d1a5921cb18e42d92e7a4cad5903", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NTk4ODllZDk1OWQxYTU5MjFjYjE4ZTQyZDkyZTdhNGNhZDU5MDM=", "commit": {"author": {"name": "Ben Gamari", "email": "bgamari.foss@gmail.com", "date": "2014-07-17T02:17:16Z"}, "committer": {"name": "Ben Gamari", "email": "bgamari.foss@gmail.com", "date": "2014-07-17T02:17:16Z"}, "message": "syntax: Add ToTokens for Attribute_", "tree": {"sha": "e5177a9a399847906f4a780a508e2b1ff33827b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5177a9a399847906f4a780a508e2b1ff33827b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8659889ed959d1a5921cb18e42d92e7a4cad5903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8659889ed959d1a5921cb18e42d92e7a4cad5903", "html_url": "https://github.com/rust-lang/rust/commit/8659889ed959d1a5921cb18e42d92e7a4cad5903", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8659889ed959d1a5921cb18e42d92e7a4cad5903/comments", "author": {"login": "bgamari", "id": 1010174, "node_id": "MDQ6VXNlcjEwMTAxNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1010174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgamari", "html_url": "https://github.com/bgamari", "followers_url": "https://api.github.com/users/bgamari/followers", "following_url": "https://api.github.com/users/bgamari/following{/other_user}", "gists_url": "https://api.github.com/users/bgamari/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgamari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgamari/subscriptions", "organizations_url": "https://api.github.com/users/bgamari/orgs", "repos_url": "https://api.github.com/users/bgamari/repos", "events_url": "https://api.github.com/users/bgamari/events{/privacy}", "received_events_url": "https://api.github.com/users/bgamari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bgamari", "id": 1010174, "node_id": "MDQ6VXNlcjEwMTAxNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1010174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgamari", "html_url": "https://github.com/bgamari", "followers_url": "https://api.github.com/users/bgamari/followers", "following_url": "https://api.github.com/users/bgamari/following{/other_user}", "gists_url": "https://api.github.com/users/bgamari/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgamari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgamari/subscriptions", "organizations_url": "https://api.github.com/users/bgamari/orgs", "repos_url": "https://api.github.com/users/bgamari/repos", "events_url": "https://api.github.com/users/bgamari/events{/privacy}", "received_events_url": "https://api.github.com/users/bgamari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eddc3ccce8d50634f860cd1f79f2f242eed7be0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/eddc3ccce8d50634f860cd1f79f2f242eed7be0f", "html_url": "https://github.com/rust-lang/rust/commit/eddc3ccce8d50634f860cd1f79f2f242eed7be0f"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "eb1f25143cfce1e60ba441b4c3e1c5d3138ad03a", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8659889ed959d1a5921cb18e42d92e7a4cad5903/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8659889ed959d1a5921cb18e42d92e7a4cad5903/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=8659889ed959d1a5921cb18e42d92e7a4cad5903", "patch": "@@ -147,6 +147,12 @@ pub mod rt {\n     impl_to_source_slice!(ast::Ty, \", \")\n     impl_to_source_slice!(Gc<ast::Item>, \"\\n\\n\")\n \n+    impl ToSource for ast::Attribute_ {\n+        fn to_source(&self) -> String {\n+            pprust::attribute_to_string(&dummy_spanned(*self))\n+        }\n+    }\n+\n     impl<'a> ToSource for &'a str {\n         fn to_source(&self) -> String {\n             let lit = dummy_spanned(ast::LitStr(\n@@ -238,6 +244,7 @@ pub mod rt {\n     impl_to_tokens!(Gc<ast::Expr>)\n     impl_to_tokens!(ast::Block)\n     impl_to_tokens!(ast::Arg)\n+    impl_to_tokens!(ast::Attribute_)\n     impl_to_tokens_lifetime!(&'a str)\n     impl_to_tokens!(())\n     impl_to_tokens!(char)"}]}