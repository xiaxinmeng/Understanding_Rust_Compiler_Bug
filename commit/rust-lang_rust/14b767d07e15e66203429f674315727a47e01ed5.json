{"sha": "14b767d07e15e66203429f674315727a47e01ed5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0Yjc2N2QwN2UxNWU2NjIwMzQyOWY2NzQzMTU3MjdhNDdlMDFlZDU=", "commit": {"author": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-05-22T22:06:25Z"}, "committer": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-05-22T22:06:25Z"}, "message": "Add example of recursive drop to Drop trait.", "tree": {"sha": "a495e810386735f254a64dc49cfd87ec64a864a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a495e810386735f254a64dc49cfd87ec64a864a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14b767d07e15e66203429f674315727a47e01ed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14b767d07e15e66203429f674315727a47e01ed5", "html_url": "https://github.com/rust-lang/rust/commit/14b767d07e15e66203429f674315727a47e01ed5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14b767d07e15e66203429f674315727a47e01ed5/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81734e0e06d24cf580dd5352c64d10110e4d3b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/81734e0e06d24cf580dd5352c64d10110e4d3b7b", "html_url": "https://github.com/rust-lang/rust/commit/81734e0e06d24cf580dd5352c64d10110e4d3b7b"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "4c2d05accf389478a1d120086d3703a11b63eb2f", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/14b767d07e15e66203429f674315727a47e01ed5/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14b767d07e15e66203429f674315727a47e01ed5/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=14b767d07e15e66203429f674315727a47e01ed5", "patch": "@@ -153,6 +153,8 @@ use marker::Unsize;\n /// The `Drop` trait is used to run some code when a value goes out of scope.\n /// This is sometimes called a 'destructor'.\n ///\n+/// \n+///\n /// # Examples\n ///\n /// A trivial implementation of `Drop`. The `drop` method is called when `_x`\n@@ -171,6 +173,32 @@ use marker::Unsize;\n ///     let _x = HasDrop;\n /// }\n /// ```\n+///\n+/// Showing the recursive nature of `Drop`. When `outer` goes out of scope, the\n+/// `drop` method will be called for `Outer` and then the `drop` method for\n+/// `Inner` will be called. Therefore `main` prints `Dropping Outer!` and then\n+/// `Dropping Inner!`.\n+/// \n+/// ```\n+/// struct Inner;\n+/// struct Outer(Inner);\n+///\n+/// impl Drop for Inner {\n+///     fn drop(&mut self) {\n+///         println!(\"Dropping Inner!\");\n+///     }\n+/// }\n+///\n+/// impl Drop for Outer {\n+///     fn drop(&mut self) {\n+///         println!(\"Dropping Outer!\");\n+///     }\n+/// }\n+///\n+/// fn main() {\n+///     let _x = Outer(Inner);\n+/// }\n+/// ```\n #[lang = \"drop\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Drop {"}]}