{"sha": "568a9adf8780c80b3301d25981a4926307d73e50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2OGE5YWRmODc4MGM4MGIzMzAxZDI1OTgxYTQ5MjYzMDdkNzNlNTA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-31T07:24:07Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-31T07:24:07Z"}, "message": "Avoid early line breaks in match condition", "tree": {"sha": "4876f6488812b2a144c3544f14a96aa221ddfaef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4876f6488812b2a144c3544f14a96aa221ddfaef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/568a9adf8780c80b3301d25981a4926307d73e50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/568a9adf8780c80b3301d25981a4926307d73e50", "html_url": "https://github.com/rust-lang/rust/commit/568a9adf8780c80b3301d25981a4926307d73e50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/568a9adf8780c80b3301d25981a4926307d73e50/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e588f2fd7b0445944f15341f9b45051f440b82b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e588f2fd7b0445944f15341f9b45051f440b82b4", "html_url": "https://github.com/rust-lang/rust/commit/e588f2fd7b0445944f15341f9b45051f440b82b4"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "0a1a4a5831613ed6984878c30cac42140dbb6f2a", "filename": "src/expr.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/568a9adf8780c80b3301d25981a4926307d73e50/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/568a9adf8780c80b3301d25981a4926307d73e50/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=568a9adf8780c80b3301d25981a4926307d73e50", "patch": "@@ -1531,17 +1531,25 @@ fn rewrite_match(\n         return None;\n     }\n \n-    // 6 = `match `, 2 = ` {`\n+    // Do not take the rhs overhead from the upper expressions into account\n+    // when rewriting match condition.\n+    let new_width = try_opt!(context.config.max_width().checked_sub(shape.used_width()));\n+    let cond_shape = Shape {\n+        width: new_width,\n+        ..shape\n+    };\n+    // 6 = `match `\n     let cond_shape = match context.config.control_style() {\n-        Style::Legacy => try_opt!(shape.shrink_left(6).and_then(|s| s.sub_width(2))),\n-        Style::Rfc => try_opt!(shape.offset_left(6).and_then(|s| s.sub_width(2))),\n+        Style::Legacy => try_opt!(cond_shape.shrink_left(6)),\n+        Style::Rfc => try_opt!(cond_shape.offset_left(6)),\n     };\n     let cond_str = try_opt!(cond.rewrite(context, cond_shape));\n     let alt_block_sep = String::from(\"\\n\") + &shape.indent.block_only().to_string(context.config);\n     let block_sep = match context.config.control_brace_style() {\n         ControlBraceStyle::AlwaysNextLine => &alt_block_sep,\n         _ if last_line_extendable(&cond_str) => \" \",\n-        _ if cond_str.contains('\\n') => &alt_block_sep,\n+        // 2 = ` {`\n+        _ if cond_str.contains('\\n') || cond_str.len() + 2 > cond_shape.width => &alt_block_sep,\n         _ => \" \",\n     };\n "}]}