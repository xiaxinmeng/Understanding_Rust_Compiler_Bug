{"sha": "5454bca1b4b14706529e496ae6df8069682d24ae", "node_id": "C_kwDOAAsO6NoAKDU0NTRiY2ExYjRiMTQ3MDY1MjllNDk2YWU2ZGY4MDY5NjgyZDI0YWU", "commit": {"author": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2022-06-10T18:54:53Z"}, "committer": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2022-06-10T18:54:53Z"}, "message": "net listen backlog set to negative on Linux.\n\nit will be 4076 (from 5.4) or 128.", "tree": {"sha": "83659d953cd166d221cba8b6707e5e9743ce053c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83659d953cd166d221cba8b6707e5e9743ce053c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5454bca1b4b14706529e496ae6df8069682d24ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5454bca1b4b14706529e496ae6df8069682d24ae", "html_url": "https://github.com/rust-lang/rust/commit/5454bca1b4b14706529e496ae6df8069682d24ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5454bca1b4b14706529e496ae6df8069682d24ae/comments", "author": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec55c61305eaf385fc1b93ac9a78284b4d887fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec55c61305eaf385fc1b93ac9a78284b4d887fe5", "html_url": "https://github.com/rust-lang/rust/commit/ec55c61305eaf385fc1b93ac9a78284b4d887fe5"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "3b31c000f252a478794486150e19a6bddbc8c3ed", "filename": "library/std/src/os/unix/net/listener.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5454bca1b4b14706529e496ae6df8069682d24ae/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5454bca1b4b14706529e496ae6df8069682d24ae/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs?ref=5454bca1b4b14706529e496ae6df8069682d24ae", "patch": "@@ -73,9 +73,13 @@ impl UnixListener {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;\n             let (addr, len) = sockaddr_un(path.as_ref())?;\n+            #[cfg(target_os = \"linux\")]\n+            const backlog: libc::c_int = -1;\n+            #[cfg(not(target_os = \"linux\"))]\n+            const backlog: libc::c_int = 128;\n \n             cvt(libc::bind(inner.as_inner().as_raw_fd(), &addr as *const _ as *const _, len as _))?;\n-            cvt(libc::listen(inner.as_inner().as_raw_fd(), 128))?;\n+            cvt(libc::listen(inner.as_inner().as_raw_fd(), backlog))?;\n \n             Ok(UnixListener(inner))\n         }\n@@ -109,12 +113,16 @@ impl UnixListener {\n     pub fn bind_addr(socket_addr: &SocketAddr) -> io::Result<UnixListener> {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;\n+            #[cfg(target_os = \"linux\")]\n+            const backlog: libc::c_int = -1;\n+            #[cfg(not(target_os = \"linux\"))]\n+            const backlog: libc::c_int = 128;\n             cvt(libc::bind(\n                 inner.as_raw_fd(),\n                 &socket_addr.addr as *const _ as *const _,\n                 socket_addr.len as _,\n             ))?;\n-            cvt(libc::listen(inner.as_raw_fd(), 128))?;\n+            cvt(libc::listen(inner.as_raw_fd(), backlog))?;\n             Ok(UnixListener(inner))\n         }\n     }"}]}