{"sha": "840176ab6f9fdda0878bd0ba1297437b506c6b7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MDE3NmFiNmY5ZmRkYTA4NzhiZDBiYTEyOTc0MzdiNTA2YzZiN2M=", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2020-06-14T21:17:51Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2020-06-14T21:17:51Z"}, "message": "asm: Unify pseudo-keyword parsing using `eat`, rather than a final `expect`\n\nCurrently, `asm!` parsing uses an `expect` for the last parsed\npseudo-keyword (`sym`), which makes it difficult to extend without\nsimultaneously refactoring. Use `eat` for the last pseudo-keyword, and\nthen add an `else` that fails parsing. No change to error output.", "tree": {"sha": "7e30010316c823ae752f8850265fb45d337ea165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e30010316c823ae752f8850265fb45d337ea165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/840176ab6f9fdda0878bd0ba1297437b506c6b7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/840176ab6f9fdda0878bd0ba1297437b506c6b7c", "html_url": "https://github.com/rust-lang/rust/commit/840176ab6f9fdda0878bd0ba1297437b506c6b7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/840176ab6f9fdda0878bd0ba1297437b506c6b7c/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb54ed484e2239a3e9eff3be17df00d2a162be3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb54ed484e2239a3e9eff3be17df00d2a162be3", "html_url": "https://github.com/rust-lang/rust/commit/4fb54ed484e2239a3e9eff3be17df00d2a162be3"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "afe2231cec67fd3330361d247f92385b7811256d", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/840176ab6f9fdda0878bd0ba1297437b506c6b7c/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/840176ab6f9fdda0878bd0ba1297437b506c6b7c/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=840176ab6f9fdda0878bd0ba1297437b506c6b7c", "patch": "@@ -135,8 +135,7 @@ fn parse_args<'a>(\n         } else if p.eat(&token::Ident(kw::Const, false)) {\n             let expr = p.parse_expr()?;\n             ast::InlineAsmOperand::Const { expr }\n-        } else {\n-            p.expect(&token::Ident(sym::sym, false))?;\n+        } else if p.eat(&token::Ident(sym::sym, false)) {\n             let expr = p.parse_expr()?;\n             match expr.kind {\n                 ast::ExprKind::Path(..) => {}\n@@ -147,6 +146,8 @@ fn parse_args<'a>(\n                 }\n             }\n             ast::InlineAsmOperand::Sym { expr }\n+        } else {\n+            return Err(p.expect_one_of(&[], &[]).unwrap_err());\n         };\n \n         let span = span_start.to(p.prev_token.span);"}]}