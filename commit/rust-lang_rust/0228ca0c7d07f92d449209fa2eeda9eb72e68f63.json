{"sha": "0228ca0c7d07f92d449209fa2eeda9eb72e68f63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMjhjYTBjN2QwN2Y5MmQ0NDkyMDlmYTJlZWRhOWViNzJlNjhmNjM=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-04-22T14:23:20Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-04-26T12:42:43Z"}, "message": "Add success and fail tests for into_boxed_slice", "tree": {"sha": "1f1fb6d86762fd37c66d22427a739a1698723b51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f1fb6d86762fd37c66d22427a739a1698723b51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0228ca0c7d07f92d449209fa2eeda9eb72e68f63", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl6lgcMZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqfwJWD/wJN/L9hVKQbfwCRdwxeb03\ngE5jV4gumFFNgdq3spbA3WzVokuXqrDVE6wldcuP3VF+gHVrUwQ4kHrupH/JDzK/\ndaBbipHYt15soBpIuVXbCkhj9f3aHAKBGxYrPbx40uzjPJ8TzzDB/ENsBlbbfi/1\nQlyhwy7cr6o8a78ecpL64HAFWrWq5Hy7AemnH/Z72i0xnqNhvO0GkuSnYYQ24sDq\naSHR8LTm6mhL48RegsxewvJic8GckoFlfaJUsV4rWiHCtbBWxOg2zgdHMyboYg5S\nsxuzO3/0+3wIO3gh/Rt3PUtVJYCdAV7xIOxu/yL5hVmrqwD9KMU3FqT5sMGktVhn\n+fchcJcj/CMV+9cENDr17PXYUG9g/iHC8fv5X9KHDl+Q7c9wWSpCYpy7Gg++7bqA\ndGpJxvf84erCwamnpJqIzyog3WLCPMRtlPxIJY/1tMo/ZqB06wgef0OtazBhqqRA\nLZbpu4+uJKMoD0PEAqAzStpvIe2J4ocev4dmzSwPrF6Duj49gcBauzRt8FOOnoOY\nmLq3cyfV6HHoOuyl+X6iqHOAcINQa+TxzjWy4U2swyGQIEY8npLZGqDHtisLYmDZ\ntRopbwZKCJID2rRQ1xWAOhpTUnmfckzvojDk97wu5p/kWNdEVevEcBWNvr/bXjG1\nDxY+WEDuS5ZplObdsYk4BA==\n=E6cJ\n-----END PGP SIGNATURE-----", "payload": "tree 1f1fb6d86762fd37c66d22427a739a1698723b51\nparent 6f31f05aaf8e89f87e01052ba61fa04613b0a090\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1587565400 +0300\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1587904963 +0300\n\nAdd success and fail tests for into_boxed_slice\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0228ca0c7d07f92d449209fa2eeda9eb72e68f63", "html_url": "https://github.com/rust-lang/rust/commit/0228ca0c7d07f92d449209fa2eeda9eb72e68f63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0228ca0c7d07f92d449209fa2eeda9eb72e68f63/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f31f05aaf8e89f87e01052ba61fa04613b0a090", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f31f05aaf8e89f87e01052ba61fa04613b0a090", "html_url": "https://github.com/rust-lang/rust/commit/6f31f05aaf8e89f87e01052ba61fa04613b0a090"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "5f8a3fd9d6a5491a96f02cb49184b1793e4d3df7", "filename": "src/test/ui/box-into-boxed-slice-fail.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0228ca0c7d07f92d449209fa2eeda9eb72e68f63/src%2Ftest%2Fui%2Fbox-into-boxed-slice-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0228ca0c7d07f92d449209fa2eeda9eb72e68f63/src%2Ftest%2Fui%2Fbox-into-boxed-slice-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox-into-boxed-slice-fail.rs?ref=0228ca0c7d07f92d449209fa2eeda9eb72e68f63", "patch": "@@ -0,0 +1,15 @@\n+// ignore-tidy-linelength\n+#![feature(box_into_boxed_slice)]\n+\n+use std::boxed::Box;\n+use std::fmt::Debug;\n+fn main() {\n+    let boxed_slice = Box::new([1,2,3]) as Box<[u8]>;\n+    let _ = Box::into_boxed_slice(boxed_slice);\n+    //~^ ERROR the size for values of type `[u8]` cannot be known at compilation time\n+    //~^^ ERROR the size for values of type `[u8]` cannot be known at compilation time\n+    let boxed_trait: Box<dyn Debug> = Box::new(5u8);\n+    let _ = Box::into_boxed_slice(boxed_trait);\n+    //~^ ERROR the size for values of type `dyn std::fmt::Debug` cannot be known at compilation time\n+    //~^^ ERROR the size for values of type `dyn std::fmt::Debug` cannot be known at compilation time\n+}"}, {"sha": "dfc4999958a5725602cbf1693362e51dd5f36199", "filename": "src/test/ui/box-into-boxed-slice-fail.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0228ca0c7d07f92d449209fa2eeda9eb72e68f63/src%2Ftest%2Fui%2Fbox-into-boxed-slice-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0228ca0c7d07f92d449209fa2eeda9eb72e68f63/src%2Ftest%2Fui%2Fbox-into-boxed-slice-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox-into-boxed-slice-fail.stderr?ref=0228ca0c7d07f92d449209fa2eeda9eb72e68f63", "patch": "@@ -0,0 +1,43 @@\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/box-into-boxed-slice-fail.rs:8:35\n+   |\n+LL |     let _ = Box::into_boxed_slice(boxed_slice);\n+   |                                   ^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = note: required by `std::boxed::Box::<T>::into_boxed_slice`\n+\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/box-into-boxed-slice-fail.rs:8:13\n+   |\n+LL |     let _ = Box::into_boxed_slice(boxed_slice);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = note: slice and array elements must have `Sized` type\n+\n+error[E0277]: the size for values of type `dyn std::fmt::Debug` cannot be known at compilation time\n+  --> $DIR/box-into-boxed-slice-fail.rs:12:35\n+   |\n+LL |     let _ = Box::into_boxed_slice(boxed_trait);\n+   |                                   ^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `dyn std::fmt::Debug`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = note: required by `std::boxed::Box::<T>::into_boxed_slice`\n+\n+error[E0277]: the size for values of type `dyn std::fmt::Debug` cannot be known at compilation time\n+  --> $DIR/box-into-boxed-slice-fail.rs:12:13\n+   |\n+LL |     let _ = Box::into_boxed_slice(boxed_trait);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `dyn std::fmt::Debug`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = note: slice and array elements must have `Sized` type\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "61b3d91525347ae01075cf817f27bdc6ed32a3d5", "filename": "src/test/ui/box-into-boxed-slice.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0228ca0c7d07f92d449209fa2eeda9eb72e68f63/src%2Ftest%2Fui%2Fbox-into-boxed-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0228ca0c7d07f92d449209fa2eeda9eb72e68f63/src%2Ftest%2Fui%2Fbox-into-boxed-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox-into-boxed-slice.rs?ref=0228ca0c7d07f92d449209fa2eeda9eb72e68f63", "patch": "@@ -0,0 +1,11 @@\n+// run-pass\n+#![feature(box_into_boxed_slice)]\n+\n+use std::boxed::Box;\n+fn main() {\n+    assert_eq!(Box::into_boxed_slice(Box::new(5u8)), Box::new([5u8]) as Box<[u8]>);\n+    assert_eq!(Box::into_boxed_slice(Box::new([25u8])), Box::new([[25u8]]) as Box<[[u8; 1]]>);\n+    let a: Box<[Box<[u8; 1]>]> = Box::into_boxed_slice(Box::new(Box::new([5u8])));\n+    let b: Box<[Box<[u8; 1]>]> = Box::new([Box::new([5u8])]);\n+    assert_eq!(a, b);\n+}"}]}