{"sha": "50ef22af522f2545295090cc1ad3e4bd4aa8632c", "node_id": "C_kwDOAAsO6NoAKDUwZWYyMmFmNTIyZjI1NDUyOTUwOTBjYzFhZDNlNGJkNGFhODYzMmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-13T13:04:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-13T13:04:16Z"}, "message": "Auto merge of #2484 - RalfJung:rustup, r=RalfJung\n\nrustup; enable extra const UB checks", "tree": {"sha": "322dd74d78b034af28508dc3641dc3ce97b89f17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/322dd74d78b034af28508dc3641dc3ce97b89f17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50ef22af522f2545295090cc1ad3e4bd4aa8632c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50ef22af522f2545295090cc1ad3e4bd4aa8632c", "html_url": "https://github.com/rust-lang/rust/commit/50ef22af522f2545295090cc1ad3e4bd4aa8632c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50ef22af522f2545295090cc1ad3e4bd4aa8632c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e1bc7e695cb412fa77fe17b5380b0244e9a70b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1bc7e695cb412fa77fe17b5380b0244e9a70b9", "html_url": "https://github.com/rust-lang/rust/commit/4e1bc7e695cb412fa77fe17b5380b0244e9a70b9"}, {"sha": "d59bad95fdd0157df3bfcbfb878bc7c451d0bee2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2", "html_url": "https://github.com/rust-lang/rust/commit/d59bad95fdd0157df3bfcbfb878bc7c451d0bee2"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "fdd18704d184076fb0b55d35d1b6e58e14488014", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50ef22af522f2545295090cc1ad3e4bd4aa8632c/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/50ef22af522f2545295090cc1ad3e4bd4aa8632c/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=50ef22af522f2545295090cc1ad3e4bd4aa8632c", "patch": "@@ -1 +1 @@\n-20ffea6938b5839c390252e07940b99e3b6a889a\n+75b7e52e92c3b00fc891b47f5b2efdff0a2be55a"}, {"sha": "ba337f28311e940e30a484a0973b0d77496d4d7b", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50ef22af522f2545295090cc1ad3e4bd4aa8632c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ef22af522f2545295090cc1ad3e4bd4aa8632c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=50ef22af522f2545295090cc1ad3e4bd4aa8632c", "patch": "@@ -116,4 +116,5 @@ pub const MIRI_DEFAULT_ARGS: &[&str] = &[\n     \"-Zmir-opt-level=0\",\n     \"--cfg=miri\",\n     \"-Cdebug-assertions=on\",\n+    \"-Zextra-const-ub-checks\",\n ];"}, {"sha": "fa522c30cbd0fdda4c397188b3383bea7070a8c8", "filename": "tests/fail/const-ub-checks.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/50ef22af522f2545295090cc1ad3e4bd4aa8632c/tests%2Ffail%2Fconst-ub-checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ef22af522f2545295090cc1ad3e4bd4aa8632c/tests%2Ffail%2Fconst-ub-checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconst-ub-checks.rs?ref=50ef22af522f2545295090cc1ad3e4bd4aa8632c", "patch": "@@ -0,0 +1,11 @@\n+#![feature(const_ptr_read)]\n+\n+const UNALIGNED_READ: () = unsafe {\n+    let x = &[0u8; 4];\n+    let ptr = x.as_ptr().cast::<u32>();\n+    ptr.read(); //~ERROR: evaluation of constant value failed\n+};\n+\n+fn main() {\n+    let _x = UNALIGNED_READ;\n+}"}, {"sha": "a8b7ea242b97018c21811a80c08f22f3ed2cca47", "filename": "tests/fail/const-ub-checks.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/50ef22af522f2545295090cc1ad3e4bd4aa8632c/tests%2Ffail%2Fconst-ub-checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50ef22af522f2545295090cc1ad3e4bd4aa8632c/tests%2Ffail%2Fconst-ub-checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconst-ub-checks.stderr?ref=50ef22af522f2545295090cc1ad3e4bd4aa8632c", "patch": "@@ -0,0 +1,9 @@\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/const-ub-checks.rs:LL:CC\n+   |\n+LL |     ptr.read();\n+   |     ^^^^^^^^^^ accessing memory with alignment ALIGN, but alignment ALIGN is required\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "9c7030db3db8b73ef70e0ea71407e321d6557046", "filename": "tests/pass/concurrency/data_race.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/50ef22af522f2545295090cc1ad3e4bd4aa8632c/tests%2Fpass%2Fconcurrency%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ef22af522f2545295090cc1ad3e4bd4aa8632c/tests%2Fpass%2Fconcurrency%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fdata_race.rs?ref=50ef22af522f2545295090cc1ad3e4bd4aa8632c", "patch": "@@ -1,5 +1,5 @@\n //@ignore-target-windows: Concurrency on Windows is not supported yet.\n-//@compile-flags: -Zmiri-disable-weak-memory-emulation\n+//@compile-flags: -Zmiri-disable-weak-memory-emulation -Zmiri-preemption-rate=0\n \n use std::sync::atomic::{fence, AtomicUsize, Ordering};\n use std::thread::spawn;\n@@ -10,9 +10,9 @@ struct EvilSend<T>(pub T);\n unsafe impl<T> Send for EvilSend<T> {}\n unsafe impl<T> Sync for EvilSend<T> {}\n \n-static SYNC: AtomicUsize = AtomicUsize::new(0);\n-\n fn test_fence_sync() {\n+    static SYNC: AtomicUsize = AtomicUsize::new(0);\n+\n     let mut var = 0u32;\n     let ptr = &mut var as *mut u32;\n     let evil_ptr = EvilSend(ptr);\n@@ -28,7 +28,7 @@ fn test_fence_sync() {\n             fence(Ordering::Acquire);\n             unsafe { *evil_ptr.0 }\n         } else {\n-            0\n+            panic!(); // relies on thread 2 going last\n         }\n     });\n \n@@ -56,6 +56,8 @@ fn test_multiple_reads() {\n }\n \n pub fn test_rmw_no_block() {\n+    static SYNC: AtomicUsize = AtomicUsize::new(0);\n+\n     let mut a = 0u32;\n     let b = &mut a as *mut u32;\n     let c = EvilSend(b);\n@@ -77,11 +79,13 @@ pub fn test_rmw_no_block() {\n         j1.join().unwrap();\n         j2.join().unwrap();\n         let v = j3.join().unwrap();\n-        assert!(v == 1 || v == 2);\n+        assert!(v == 1 || v == 2); // relies on thread 3 going last\n     }\n }\n \n pub fn test_simple_release() {\n+    static SYNC: AtomicUsize = AtomicUsize::new(0);\n+\n     let mut a = 0u32;\n     let b = &mut a as *mut u32;\n     let c = EvilSend(b);\n@@ -95,7 +99,7 @@ pub fn test_simple_release() {\n         let j2 = spawn(move || if SYNC.load(Ordering::Acquire) == 1 { *c.0 } else { 0 });\n \n         j1.join().unwrap();\n-        assert_eq!(j2.join().unwrap(), 1);\n+        assert_eq!(j2.join().unwrap(), 1); // relies on thread 2 going last\n     }\n }\n "}]}