{"sha": "ab6ffb6371b78d1777b90c25a44163562ae53036", "node_id": "C_kwDOAAsO6NoAKGFiNmZmYjYzNzFiNzhkMTc3N2I5MGMyNWE0NDE2MzU2MmFlNTMwMzY", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-03T22:57:35Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-04T16:45:43Z"}, "message": "Add lint to detect `allow` attributes without reason", "tree": {"sha": "edb92a712aba1d5dd83c940166a9273e05ba81f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edb92a712aba1d5dd83c940166a9273e05ba81f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab6ffb6371b78d1777b90c25a44163562ae53036", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmIiQjcACgkQ/Ny/Ka9k\n1gGURBAAq33+69sztScglsS2XCChtzG5MiVbwE/6R3HMmTSjqLsdLlmR1n2z8LVl\nogkAVfSfremYD/i+7DQqIYrUTI/I0aYyzAsR/ZG3hZBT8egR+bpjwjL01/eL3tH4\nOLn1cEhnoP4S38F1XVellF1V/03zvaSmFhX7t3xUeQ0Wa2AN2+dkKyf2z+t7PLai\nLBw4cP2uUPEPF9Pe2fNC3iulMsM286iDjNHY4gIITE8v4mOtoorL8/z1qG0zwlgf\n9Fok//SbT652ck6Sw3pq2fFUxGZlYFC/jfo8wLsw8+RGUmJcLdaaxXbbWRQoVu8T\nT75x7vYAl6DpMhUqYT7oGryhrO9s+BImnz9hAdpGQEsHJMbmEUPqXzwfB5GxTpek\nt9er6q1xh3+scscydZSs4q6CvS8UbIx2VJ7as/0ZF6q057TTtwttnlOSykTQ0Q3c\nR4mFaEEqsb7vL2AiTz3Lid+lslPAe8JOpR6OuOx3g4zcgbG76EOulv7FbtxHbxVq\nMNxHiRHP9slnKZsWCze+CYO4J4hqJBNs1Xl3v/V63psddE37hxZFwtGbJ3IcQrBl\nuLBv97JJTZ9Hz6wqu10cCaxmk0254V9l1Vvb/QWKB167buq+WV1WEAUNoPjWO/yc\nDejY5/33/4FhAr2hKwLpDf6JzLANk3VQJDOX6eB5UNPGBS4k+SY=\n=Xtla\n-----END PGP SIGNATURE-----", "payload": "tree edb92a712aba1d5dd83c940166a9273e05ba81f7\nparent 4417f78e91eca7b2de09a820ea29efc0b2629901\nauthor xFrednet <xFrednet@gmail.com> 1646348255 +0100\ncommitter xFrednet <xFrednet@gmail.com> 1646412343 +0100\n\nAdd lint to detect `allow` attributes without reason\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab6ffb6371b78d1777b90c25a44163562ae53036", "html_url": "https://github.com/rust-lang/rust/commit/ab6ffb6371b78d1777b90c25a44163562ae53036", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab6ffb6371b78d1777b90c25a44163562ae53036/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4417f78e91eca7b2de09a820ea29efc0b2629901", "url": "https://api.github.com/repos/rust-lang/rust/commits/4417f78e91eca7b2de09a820ea29efc0b2629901", "html_url": "https://github.com/rust-lang/rust/commit/4417f78e91eca7b2de09a820ea29efc0b2629901"}], "stats": {"total": 100, "additions": 99, "deletions": 1}, "files": [{"sha": "bcdbc73738a97265e98688849aae7d925cbda60d", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab6ffb6371b78d1777b90c25a44163562ae53036/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/ab6ffb6371b78d1777b90c25a44163562ae53036/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=ab6ffb6371b78d1777b90c25a44163562ae53036", "patch": "@@ -3042,6 +3042,7 @@ Released 2018-09-13\n <!-- lint disable no-unused-definitions -->\n <!-- begin autogenerated links to lint list -->\n [`absurd_extreme_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n+[`allow_attributes_without_reason`]: https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason\n [`almost_swapped`]: https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped\n [`approx_constant`]: https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n [`as_conversions`]: https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions"}, {"sha": "d0b03c0a9c276e644e89c6bfa22499cfdce7e052", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 59, "deletions": 1, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/ab6ffb6371b78d1777b90c25a44163562ae53036/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6ffb6371b78d1777b90c25a44163562ae53036/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=ab6ffb6371b78d1777b90c25a44163562ae53036", "patch": "@@ -255,7 +255,38 @@ declare_clippy_lint! {\n     \"usage of `cfg(operating_system)` instead of `cfg(target_os = \\\"operating_system\\\")`\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for attributes that allow lints without a reason.\n+    ///\n+    /// (This requires the `lint_reasons` feature)\n+    ///\n+    /// ### Why is this bad?\n+    /// Allowing a lint should always have a reason. This reason should be documented to\n+    /// ensure that others understand the reasoning\n+    ///\n+    /// ### Example\n+    /// Bad:\n+    /// ```rust\n+    /// #![feature(lint_reasons)]\n+    ///\n+    /// #![allow(clippy::some_lint)]\n+    /// ```\n+    ///\n+    /// Good:\n+    /// ```rust\n+    /// #![feature(lint_reasons)]\n+    ///\n+    /// #![allow(clippy::some_lint, reason = \"False positive rust-lang/rust-clippy#1002020\")]\n+    /// ```\n+    #[clippy::version = \"1.61.0\"]\n+    pub ALLOW_ATTRIBUTES_WITHOUT_REASON,\n+    restriction,\n+    \"ensures that all `allow` and `expect` attributes have a reason\"\n+}\n+\n declare_lint_pass!(Attributes => [\n+    ALLOW_ATTRIBUTES_WITHOUT_REASON,\n     INLINE_ALWAYS,\n     DEPRECATED_SEMVER,\n     USELESS_ATTRIBUTE,\n@@ -269,6 +300,9 @@ impl<'tcx> LateLintPass<'tcx> for Attributes {\n                 if is_lint_level(ident.name) {\n                     check_clippy_lint_names(cx, ident.name, items);\n                 }\n+                if matches!(ident.name, sym::allow | sym::expect) {\n+                    check_lint_reason(cx, ident.name, items, attr);\n+                }\n                 if items.is_empty() || !attr.has_name(sym::deprecated) {\n                     return;\n                 }\n@@ -404,6 +438,30 @@ fn check_clippy_lint_names(cx: &LateContext<'_>, name: Symbol, items: &[NestedMe\n     }\n }\n \n+fn check_lint_reason(cx: &LateContext<'_>, name: Symbol, items: &[NestedMetaItem], attr: &'_ Attribute) {\n+    // Check for the feature\n+    if !cx.tcx.sess.features_untracked().lint_reasons {\n+        return;\n+    }\n+\n+    // Check if the reason is present\n+    if let Some(item) = items.last().and_then(NestedMetaItem::meta_item)\n+        && let MetaItemKind::NameValue(_) = &item.kind\n+        && item.path == sym::reason\n+    {\n+        return;\n+    }\n+\n+    span_lint_and_help(\n+        cx,\n+        ALLOW_ATTRIBUTES_WITHOUT_REASON,\n+        attr.span,\n+        &format!(\"`{}` attribute without specifying a reason\", name.as_str()),\n+        None,\n+        \"try adding a reason at the end with `, reason = \\\"..\\\"`\",\n+    );\n+}\n+\n fn is_relevant_item(cx: &LateContext<'_>, item: &Item<'_>) -> bool {\n     if let ItemKind::Fn(_, _, eid) = item.kind {\n         is_relevant_expr(cx, cx.tcx.typeck_body(eid), &cx.tcx.hir().body(eid).value)\n@@ -659,5 +717,5 @@ fn check_mismatched_target_os(cx: &EarlyContext<'_>, attr: &Attribute) {\n }\n \n fn is_lint_level(symbol: Symbol) -> bool {\n-    matches!(symbol, sym::allow | sym::warn | sym::deny | sym::forbid)\n+    matches!(symbol, sym::allow | sym::expect | sym::warn | sym::deny | sym::forbid)\n }"}, {"sha": "d4c7eba4cba11ee7bfb23b1554e58fd01caf52fc", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab6ffb6371b78d1777b90c25a44163562ae53036/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6ffb6371b78d1777b90c25a44163562ae53036/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=ab6ffb6371b78d1777b90c25a44163562ae53036", "patch": "@@ -42,6 +42,7 @@ store.register_lints(&[\n     assign_ops::ASSIGN_OP_PATTERN,\n     assign_ops::MISREFACTORED_ASSIGN_OP,\n     async_yields_async::ASYNC_YIELDS_ASYNC,\n+    attrs::ALLOW_ATTRIBUTES_WITHOUT_REASON,\n     attrs::BLANKET_CLIPPY_RESTRICTION_LINTS,\n     attrs::DEPRECATED_CFG_ATTR,\n     attrs::DEPRECATED_SEMVER,"}, {"sha": "4e30fc381975135ba3c678078173390dcb9e95a9", "filename": "clippy_lints/src/lib.register_restriction.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab6ffb6371b78d1777b90c25a44163562ae53036/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6ffb6371b78d1777b90c25a44163562ae53036/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_restriction.rs?ref=ab6ffb6371b78d1777b90c25a44163562ae53036", "patch": "@@ -8,6 +8,7 @@ store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), ve\n     LintId::of(as_conversions::AS_CONVERSIONS),\n     LintId::of(asm_syntax::INLINE_ASM_X86_ATT_SYNTAX),\n     LintId::of(asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX),\n+    LintId::of(attrs::ALLOW_ATTRIBUTES_WITHOUT_REASON),\n     LintId::of(casts::FN_TO_NUMERIC_CAST_ANY),\n     LintId::of(create_dir::CREATE_DIR),\n     LintId::of(dbg_macro::DBG_MACRO),"}, {"sha": "1a0d4e886576e07695ecb5083bdf456b10163e0d", "filename": "tests/ui/allow_attributes_without_reason.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ab6ffb6371b78d1777b90c25a44163562ae53036/tests%2Fui%2Fallow_attributes_without_reason.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab6ffb6371b78d1777b90c25a44163562ae53036/tests%2Fui%2Fallow_attributes_without_reason.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fallow_attributes_without_reason.rs?ref=ab6ffb6371b78d1777b90c25a44163562ae53036", "patch": "@@ -0,0 +1,14 @@\n+#![feature(lint_reasons)]\n+#![deny(clippy::allow_attributes_without_reason)]\n+\n+// These should trigger the lint\n+#[allow(dead_code)]\n+#[allow(dead_code, deprecated)]\n+// These should be fine\n+#[allow(dead_code, reason = \"This should be allowed\")]\n+#[warn(dyn_drop, reason = \"Warnings can also have reasons\")]\n+#[warn(deref_nullptr)]\n+#[deny(deref_nullptr)]\n+#[forbid(deref_nullptr)]\n+\n+fn main() {}"}, {"sha": "cd040a144aaca8c35c299a4f9dca1a9e507c08fe", "filename": "tests/ui/allow_attributes_without_reason.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ab6ffb6371b78d1777b90c25a44163562ae53036/tests%2Fui%2Fallow_attributes_without_reason.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab6ffb6371b78d1777b90c25a44163562ae53036/tests%2Fui%2Fallow_attributes_without_reason.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fallow_attributes_without_reason.stderr?ref=ab6ffb6371b78d1777b90c25a44163562ae53036", "patch": "@@ -0,0 +1,23 @@\n+error: `allow` attribute without specifying a reason\n+  --> $DIR/allow_attributes_without_reason.rs:5:1\n+   |\n+LL | #[allow(dead_code)]\n+   | ^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/allow_attributes_without_reason.rs:2:9\n+   |\n+LL | #![deny(clippy::allow_attributes_without_reason)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = help: try adding a reason at the end with `, reason = \"..\"`\n+\n+error: `allow` attribute without specifying a reason\n+  --> $DIR/allow_attributes_without_reason.rs:6:1\n+   |\n+LL | #[allow(dead_code, deprecated)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: try adding a reason at the end with `, reason = \"..\"`\n+\n+error: aborting due to 2 previous errors\n+"}]}