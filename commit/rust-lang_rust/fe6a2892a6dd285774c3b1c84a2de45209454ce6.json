{"sha": "fe6a2892a6dd285774c3b1c84a2de45209454ce6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNmEyODkyYTZkZDI4NTc3NGMzYjFjODRhMmRlNDUyMDk0NTRjZTY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-11T16:50:01Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-19T11:54:25Z"}, "message": "Rewrite prepare.sh in rust", "tree": {"sha": "953d54435e5caa1c8bb560df9a61a30af5868f51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/953d54435e5caa1c8bb560df9a61a30af5868f51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe6a2892a6dd285774c3b1c84a2de45209454ce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6a2892a6dd285774c3b1c84a2de45209454ce6", "html_url": "https://github.com/rust-lang/rust/commit/fe6a2892a6dd285774c3b1c84a2de45209454ce6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe6a2892a6dd285774c3b1c84a2de45209454ce6/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2db4e50618faf277aa6e7b0b45b6fc1aa5389653", "url": "https://api.github.com/repos/rust-lang/rust/commits/2db4e50618faf277aa6e7b0b45b6fc1aa5389653", "html_url": "https://github.com/rust-lang/rust/commit/2db4e50618faf277aa6e7b0b45b6fc1aa5389653"}], "stats": {"total": 170, "additions": 114, "deletions": 56}, "files": [{"sha": "61da6a2491c52fcd3270195db5fb441e89c0a496", "filename": ".cirrus.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/.cirrus.yml", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/.cirrus.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cirrus.yml?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -14,7 +14,7 @@ task:\n     - . $HOME/.cargo/env\n     - git config --global user.email \"user@example.com\"\n     - git config --global user.name \"User\"\n-    - ./prepare.sh\n+    - ./y.rs prepare\n   test_script:\n     - . $HOME/.cargo/env\n     - # Enable backtraces for easier debugging"}, {"sha": "6734920bdd6cb2aaa86d5d9dce097a49e611e8da", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -53,7 +53,7 @@ jobs:\n       run: |\n         git config --global user.email \"user@example.com\"\n         git config --global user.name \"User\"\n-        ./prepare.sh\n+        ./y.rs prepare\n \n     - name: Test\n       env:"}, {"sha": "1c08e5ece33d27e67fc01b5012f1ac237f2fc51c", "filename": ".github/workflows/rustc.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/.github%2Fworkflows%2Frustc.yml", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/.github%2Fworkflows%2Frustc.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frustc.yml?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -34,7 +34,7 @@ jobs:\n       run: |\n         git config --global user.email \"user@example.com\"\n         git config --global user.name \"User\"\n-        ./prepare.sh\n+        ./y.rs prepare\n \n     - name: Test\n       run: |\n@@ -72,7 +72,7 @@ jobs:\n       run: |\n         git config --global user.email \"user@example.com\"\n         git config --global user.name \"User\"\n-        ./prepare.sh\n+        ./y.rs prepare\n \n     - name: Test\n       run: |"}, {"sha": "37644b6382c537d101ede711f32676f0b5715a9d", "filename": "Readme.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -10,8 +10,8 @@ If not please open an issue.\n ```bash\n $ git clone https://github.com/bjorn3/rustc_codegen_cranelift.git\n $ cd rustc_codegen_cranelift\n-$ ./prepare.sh # download and patch sysroot src and install hyperfine for benchmarking\n-$ ./build.sh\n+$ ./y.rs prepare # download and patch sysroot src and install hyperfine for benchmarking\n+$ ./y.rs build\n ```\n \n To run the test suite replace the last command with:\n@@ -20,7 +20,7 @@ To run the test suite replace the last command with:\n $ ./test.sh\n ```\n \n-This will implicitly build cg_clif too. Both `build.sh` and `test.sh` accept a `--debug` argument to\n+This will implicitly build cg_clif too. Both `y.rs build` and `test.sh` accept a `--debug` argument to\n build in debug mode.\n \n Alternatively you can download a pre built version from [GHA]. It is listed in the artifacts section\n@@ -32,7 +32,7 @@ of workflow runs. Unfortunately due to GHA restrictions you need to be logged in\n \n rustc_codegen_cranelift can be used as a near-drop-in replacement for `cargo build` or `cargo run` for existing projects.\n \n-Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`prepare.sh` and `build.sh` or `test.sh`).\n+Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`y.rs prepare` and `y.rs build` or `test.sh`).\n \n In the directory with your project (where you can do the usual `cargo build`), run:\n "}, {"sha": "81c47fa835839b5f155cb7dc78fd8a1fe188f18d", "filename": "build_system/build_backend.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Fbuild_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Fbuild_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_backend.rs?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -1,5 +1,5 @@\n use std::env;\n-use std::process::{self, Command};\n+use std::process::Command;\n \n pub(crate) fn build_backend(channel: &str) -> String {\n     let mut cmd = Command::new(\"cargo\");\n@@ -33,9 +33,7 @@ pub(crate) fn build_backend(channel: &str) -> String {\n     }\n \n     eprintln!(\"[BUILD] rustc_codegen_cranelift\");\n-    if !cmd.spawn().unwrap().wait().unwrap().success() {\n-        process::exit(1);\n-    }\n+    crate::utils::spawn_and_wait(cmd);\n \n     crate::rustc_info::get_dylib_name(\"rustc_codegen_cranelift\")\n }"}, {"sha": "60906a8f19ae103a98283edc24a1679ac1960c8c", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -1,4 +1,5 @@\n-use crate::{try_hard_link, SysrootKind};\n+use crate::utils::try_hard_link;\n+use crate::SysrootKind;\n use std::env;\n use std::fs;\n use std::path::Path;"}, {"sha": "4aef916259459266ca63bf74739cf978bf05c845", "filename": "build_system/prepare.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -0,0 +1,74 @@\n+use std::ffi::OsStr;\n+use std::ffi::OsString;\n+use std::fs;\n+use std::process::Command;\n+\n+use crate::utils::spawn_and_wait;\n+\n+pub(crate) fn prepare() {\n+    // FIXME implement in rust\n+    let prepare_sysroot_cmd = Command::new(\"./build_sysroot/prepare_sysroot_src.sh\");\n+    spawn_and_wait(prepare_sysroot_cmd);\n+\n+    eprintln!(\"[INSTALL] hyperfine\");\n+    Command::new(\"cargo\").arg(\"install\").arg(\"hyperfine\").spawn().unwrap().wait().unwrap();\n+\n+    clone_repo(\n+        \"rand\",\n+        \"https://github.com/rust-random/rand.git\",\n+        \"0f933f9c7176e53b2a3c7952ded484e1783f0bf1\",\n+    );\n+\n+    eprintln!(\"[PATCH] rand\");\n+    for patch in get_patches(\"crate_patches\", \"rand\") {\n+        let mut patch_arg = OsString::from(\"../crate_patches/\");\n+        patch_arg.push(patch);\n+        let mut apply_patch_cmd = Command::new(\"git\");\n+        apply_patch_cmd.arg(\"am\").arg(patch_arg).current_dir(\"rand\");\n+        spawn_and_wait(apply_patch_cmd);\n+    }\n+\n+    clone_repo(\n+        \"regex\",\n+        \"https://github.com/rust-lang/regex.git\",\n+        \"341f207c1071f7290e3f228c710817c280c8dca1\",\n+    );\n+\n+    clone_repo(\n+        \"simple-raytracer\",\n+        \"https://github.com/ebobby/simple-raytracer\",\n+        \"804a7a21b9e673a482797aa289a18ed480e4d813\",\n+    );\n+\n+    eprintln!(\"[LLVM BUILD] simple-raytracer\");\n+    let mut build_cmd = Command::new(\"cargo\");\n+    build_cmd.arg(\"build\").env_remove(\"CARGO_TARGET_DIR\").current_dir(\"simple-raytracer\");\n+    spawn_and_wait(build_cmd);\n+    fs::copy(\"simple-raytracer/target/debug/main\", \"simple-raytracer/raytracer_cg_llvm\").unwrap();\n+}\n+\n+fn clone_repo(name: &str, repo: &str, commit: &str) {\n+    eprintln!(\"[CLONE] {}\", repo);\n+    // Ignore exit code as the repo may already have been checked out\n+    Command::new(\"git\").arg(\"clone\").arg(repo).spawn().unwrap().wait().unwrap();\n+\n+    let mut clean_cmd = Command::new(\"git\");\n+    clean_cmd.arg(\"checkout\").arg(\"--\").arg(\".\").current_dir(name);\n+    spawn_and_wait(clean_cmd);\n+\n+    let mut checkout_cmd = Command::new(\"git\");\n+    checkout_cmd.arg(\"checkout\").arg(commit).current_dir(name);\n+    spawn_and_wait(checkout_cmd);\n+}\n+\n+fn get_patches(patch_dir: &str, crate_name: &str) -> Vec<OsString> {\n+    let mut patches: Vec<_> = fs::read_dir(patch_dir)\n+        .unwrap()\n+        .map(|entry| entry.unwrap().path())\n+        .filter(|path| path.extension() == Some(OsStr::new(\"patch\")))\n+        .map(|path| path.file_name().unwrap().to_owned())\n+        .filter(|file_name| file_name.to_str().unwrap().split(\"-\").nth(1).unwrap() == crate_name)\n+        .collect();\n+    patches.sort();\n+    patches\n+}"}, {"sha": "3eba87ee8a429bcb40829a41c73a720eeaa66deb", "filename": "build_system/utils.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/build_system%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Futils.rs?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -0,0 +1,18 @@\n+use std::fs;\n+use std::path::Path;\n+use std::process::{self, Command};\n+\n+#[track_caller]\n+pub(crate) fn try_hard_link(src: impl AsRef<Path>, dst: impl AsRef<Path>) {\n+    let src = src.as_ref();\n+    let dst = dst.as_ref();\n+    if let Err(_) = fs::hard_link(src, dst) {\n+        fs::copy(src, dst).unwrap(); // Fallback to copying if hardlinking failed\n+    }\n+}\n+\n+pub(crate) fn spawn_and_wait(mut cmd: Command) {\n+    if !cmd.spawn().unwrap().wait().unwrap().success() {\n+        process::exit(1);\n+    }\n+}"}, {"sha": "7e1e0a9bc9d6ba722b5a42a05515020ce6c0b2bc", "filename": "docs/usage.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/docs%2Fusage.md", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/docs%2Fusage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fusage.md?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -2,7 +2,7 @@\n \n rustc_codegen_cranelift can be used as a near-drop-in replacement for `cargo build` or `cargo run` for existing projects.\n \n-Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`prepare.sh` and `build.sh` or `test.sh`).\n+Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`y.rs prepare` and `y.rs build` or `test.sh`).\n \n ## Cargo\n "}, {"sha": "64c097261c908bf6909aec2789646e998552f4ee", "filename": "prepare.sh", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2db4e50618faf277aa6e7b0b45b6fc1aa5389653/prepare.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2db4e50618faf277aa6e7b0b45b6fc1aa5389653/prepare.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/prepare.sh?ref=2db4e50618faf277aa6e7b0b45b6fc1aa5389653", "patch": "@@ -1,29 +0,0 @@\n-#!/usr/bin/env bash\n-set -e\n-\n-./build_sysroot/prepare_sysroot_src.sh\n-cargo install hyperfine || echo \"Skipping hyperfine install\"\n-\n-git clone https://github.com/rust-random/rand.git || echo \"rust-random/rand has already been cloned\"\n-pushd rand\n-git checkout -- .\n-git checkout 0f933f9c7176e53b2a3c7952ded484e1783f0bf1\n-git am ../crate_patches/*-rand-*.patch\n-popd\n-\n-git clone https://github.com/rust-lang/regex.git || echo \"rust-lang/regex has already been cloned\"\n-pushd regex\n-git checkout -- .\n-git checkout 341f207c1071f7290e3f228c710817c280c8dca1\n-popd\n-\n-git clone https://github.com/ebobby/simple-raytracer || echo \"ebobby/simple-raytracer has already been cloned\"\n-pushd simple-raytracer\n-git checkout -- .\n-git checkout 804a7a21b9e673a482797aa289a18ed480e4d813\n-\n-# build with cg_llvm for perf comparison\n-unset CARGO_TARGET_DIR\n-cargo build\n-mv target/debug/main raytracer_cg_llvm\n-popd"}, {"sha": "cc34c08088665bc19cdea842e961593052c28e50", "filename": "scripts/rustup.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/scripts%2Frustup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/scripts%2Frustup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Frustup.sh?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -17,7 +17,7 @@ case $1 in\n         done\n \n         ./clean_all.sh\n-        ./prepare.sh\n+        ./y.rs prepare\n \n         (cd build_sysroot && cargo update)\n "}, {"sha": "62debc117c354e84ec785ebb52672f6c6c7d40b6", "filename": "y.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fe6a2892a6dd285774c3b1c84a2de45209454ce6/y.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6a2892a6dd285774c3b1c84a2de45209454ce6/y.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/y.rs?ref=fe6a2892a6dd285774c3b1c84a2de45209454ce6", "patch": "@@ -24,19 +24,23 @@ exec ${0/.rs/.bin} $@\n //! The name `y.rs` was chosen to not conflict with rustc's `x.py`.\n \n use std::env;\n-use std::fs;\n-use std::path::{Path, PathBuf};\n+use std::path::PathBuf;\n use std::process;\n \n #[path = \"build_system/build_backend.rs\"]\n mod build_backend;\n #[path = \"build_system/build_sysroot.rs\"]\n mod build_sysroot;\n+#[path = \"build_system/prepare.rs\"]\n+mod prepare;\n #[path = \"build_system/rustc_info.rs\"]\n mod rustc_info;\n+#[path = \"build_system/utils.rs\"]\n+mod utils;\n \n fn usage() {\n     eprintln!(\"Usage:\");\n+    eprintln!(\"  ./y.rs prepare\");\n     eprintln!(\"  ./y.rs build [--debug] [--sysroot none|clif|llvm] [--target-dir DIR]\");\n }\n \n@@ -69,7 +73,8 @@ fn main() {\n             if args.next().is_some() {\n                 arg_error!(\"./x.rs prepare doesn't expect arguments\");\n             }\n-            todo!();\n+            prepare::prepare();\n+            process::exit(0);\n         }\n         Some(\"build\") => Command::Build,\n         Some(flag) if flag.starts_with('-') => arg_error!(\"Expected command found flag {}\", flag),\n@@ -130,12 +135,3 @@ fn main() {\n         &target_triple,\n     );\n }\n-\n-#[track_caller]\n-fn try_hard_link(src: impl AsRef<Path>, dst: impl AsRef<Path>) {\n-    let src = src.as_ref();\n-    let dst = dst.as_ref();\n-    if let Err(_) = fs::hard_link(src, dst) {\n-        fs::copy(src, dst).unwrap(); // Fallback to copying if hardlinking failed\n-    }\n-}"}]}