{"sha": "23d11428de3e973b34a5090a78d62887f821c90e", "node_id": "C_kwDOAAsO6NoAKDIzZDExNDI4ZGUzZTk3M2IzNGE1MDkwYTc4ZDYyODg3ZjgyMWM5MGU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-17T12:24:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-17T12:24:03Z"}, "message": "Auto merge of #8134 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: none", "tree": {"sha": "96e7e639e00f774eae1c5ed7aeb641703d64bc92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96e7e639e00f774eae1c5ed7aeb641703d64bc92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23d11428de3e973b34a5090a78d62887f821c90e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23d11428de3e973b34a5090a78d62887f821c90e", "html_url": "https://github.com/rust-lang/rust/commit/23d11428de3e973b34a5090a78d62887f821c90e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23d11428de3e973b34a5090a78d62887f821c90e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40fd785199d80a06c1a1664d64209f78343c0e05", "url": "https://api.github.com/repos/rust-lang/rust/commits/40fd785199d80a06c1a1664d64209f78343c0e05", "html_url": "https://github.com/rust-lang/rust/commit/40fd785199d80a06c1a1664d64209f78343c0e05"}, {"sha": "646a9cf559ecec7dfef815ce69ba01ae54e98e3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/646a9cf559ecec7dfef815ce69ba01ae54e98e3c", "html_url": "https://github.com/rust-lang/rust/commit/646a9cf559ecec7dfef815ce69ba01ae54e98e3c"}], "stats": {"total": 305, "additions": 144, "deletions": 161}, "files": [{"sha": "f419781dbc82f1ef46f1f121f35aedbf2f6184ba", "filename": "clippy_lints/src/asm_syntax.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fasm_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fasm_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fasm_syntax.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -65,13 +65,15 @@ declare_clippy_lint! {\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n     /// # unsafe { let ptr = \"\".as_ptr();\n+    /// # use std::arch::asm;\n     /// asm!(\"lea {}, [{}]\", lateout(reg) _, in(reg) ptr);\n     /// # }\n     /// ```\n     /// Use instead:\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n     /// # unsafe { let ptr = \"\".as_ptr();\n+    /// # use std::arch::asm;\n     /// asm!(\"lea ({}), {}\", in(reg) ptr, lateout(reg) _, options(att_syntax));\n     /// # }\n     /// ```\n@@ -102,13 +104,15 @@ declare_clippy_lint! {\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n     /// # unsafe { let ptr = \"\".as_ptr();\n+    /// # use std::arch::asm;\n     /// asm!(\"lea ({}), {}\", in(reg) ptr, lateout(reg) _, options(att_syntax));\n     /// # }\n     /// ```\n     /// Use instead:\n     /// ```rust,no_run\n     /// # #![feature(asm)]\n     /// # unsafe { let ptr = \"\".as_ptr();\n+    /// # use std::arch::asm;\n     /// asm!(\"lea {}, [{}]\", lateout(reg) _, in(reg) ptr);\n     /// # }\n     /// ```"}, {"sha": "92336a54e27ee2ec3f0e1fb2522c36d2f22513d4", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -42,7 +42,7 @@ impl<'tcx> LateLintPass<'tcx> for ByteCount {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n         if_chain! {\n             if let ExprKind::MethodCall(count, _, [count_recv], _) = expr.kind;\n-            if count.ident.name == sym!(count);\n+            if count.ident.name == sym::count;\n             if let ExprKind::MethodCall(filter, _, [filter_recv, filter_arg], _) = count_recv.kind;\n             if filter.ident.name == sym!(filter);\n             if let ExprKind::Closure(_, _, body_id, _, _) = filter_arg.kind;"}, {"sha": "43911a313d5a606aa022b7371e2cf22b63433eed", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -68,8 +68,8 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n             let mut is_future = false;\n             for &(p, _span) in preds {\n                 let p = p.subst(cx.tcx, subst);\n-                if let Some(trait_ref) = p.to_opt_poly_trait_ref() {\n-                    if Some(trait_ref.value.def_id()) == cx.tcx.lang_items().future_trait() {\n+                if let Some(trait_pred) = p.to_opt_poly_trait_pred() {\n+                    if Some(trait_pred.skip_binder().trait_ref.def_id) == cx.tcx.lang_items().future_trait() {\n                         is_future = true;\n                         break;\n                     }"}, {"sha": "d1c7956a7a5c89f8ce9be63a2c6d5f6b21e52979", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -3,7 +3,6 @@\n #![feature(box_patterns)]\n #![feature(drain_filter)]\n #![feature(in_band_lifetimes)]\n-#![feature(iter_zip)]\n #![feature(once_cell)]\n #![feature(rustc_private)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "acac08872264dc9f829729742f6556e49a76df2c", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -13,7 +13,6 @@ use clippy_utils::{\n     strip_pat_refs,\n };\n use clippy_utils::{paths, search_same, SpanlessEq, SpanlessHash};\n-use core::array;\n use core::iter::{once, ExactSizeIterator};\n use if_chain::if_chain;\n use rustc_ast::ast::{Attribute, LitKind};\n@@ -1314,7 +1313,7 @@ fn check_match_like_matches<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>)\n         return find_matches_sugg(\n             cx,\n             let_expr,\n-            array::IntoIter::new([(&[][..], Some(let_pat), if_then, None), (&[][..], None, if_else, None)]),\n+            IntoIterator::into_iter([(&[][..], Some(let_pat), if_then, None), (&[][..], None, if_else, None)]),\n             expr,\n             true,\n         );"}, {"sha": "e5fafdb075c66374f42ef4eafe0b13fb2ea52b9f", "filename": "clippy_lints/src/methods/str_splitn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fmethods%2Fstr_splitn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fmethods%2Fstr_splitn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fstr_splitn.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -204,7 +204,7 @@ fn parse_iter_usage(\n         match e.kind {\n             ExprKind::Call(\n                 Expr {\n-                    kind: ExprKind::Path(QPath::LangItem(LangItem::TryTraitBranch, _)),\n+                    kind: ExprKind::Path(QPath::LangItem(LangItem::TryTraitBranch, ..)),\n                     ..\n                 },\n                 _,"}, {"sha": "094a3f111ba5ae5d9f4b17415166ce4e7b92c09c", "filename": "clippy_lints/src/needless_late_init.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_late_init.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -155,8 +155,14 @@ fn assignment_suggestions<'tcx>(\n     }\n \n     let suggestions = assignments\n-        .into_iter()\n-        .map(|assignment| Some((assignment.span, snippet_opt(cx, assignment.rhs_span)?)))\n+        .iter()\n+        .map(|assignment| Some((assignment.span.until(assignment.rhs_span), String::new())))\n+        .chain(assignments.iter().map(|assignment| {\n+            Some((\n+                assignment.rhs_span.shrink_to_hi().with_hi(assignment.span.hi()),\n+                String::new(),\n+            ))\n+        }))\n         .collect::<Option<Vec<(Span, String)>>>()?;\n \n     let applicability = if suggestions.len() > 1 {"}, {"sha": "0e7ae43ce2dd53df347a380c4321f24b50f6cd51", "filename": "clippy_lints/src/needless_question_mark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_question_mark.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -105,7 +105,7 @@ fn check(cx: &LateContext<'_>, expr: &Expr<'_>) {\n         };\n         if let ExprKind::Match(inner_expr_with_q, _, MatchSource::TryDesugar) = &arg.kind;\n         if let ExprKind::Call(called, [inner_expr]) = &inner_expr_with_q.kind;\n-        if let ExprKind::Path(QPath::LangItem(LangItem::TryTraitBranch, _)) = &called.kind;\n+        if let ExprKind::Path(QPath::LangItem(LangItem::TryTraitBranch, ..)) = &called.kind;\n         if expr.span.ctxt() == inner_expr.span.ctxt();\n         let expr_ty = cx.typeck_results().expr_ty(expr);\n         let inner_ty = cx.typeck_results().expr_ty(inner_expr);"}, {"sha": "1cf349f8aa7c7daa7526a25aee610df890de0904", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::mir::{\n     Mutability,\n };\n use rustc_middle::ty::{self, fold::TypeVisitor, Ty, TyCtxt};\n-use rustc_mir_dataflow::{Analysis, AnalysisDomain, GenKill, GenKillAnalysis, ResultsCursor};\n+use rustc_mir_dataflow::{Analysis, AnalysisDomain, CallReturnPlaces, GenKill, GenKillAnalysis, ResultsCursor};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};\n use rustc_span::sym;\n@@ -500,11 +500,9 @@ impl<'tcx> GenKillAnalysis<'tcx> for MaybeStorageLive {\n \n     fn call_return_effect(\n         &self,\n-        _in_out: &mut impl GenKill<Self::Idx>,\n+        _trans: &mut impl GenKill<Self::Idx>,\n         _block: mir::BasicBlock,\n-        _func: &mir::Operand<'tcx>,\n-        _args: &[mir::Operand<'tcx>],\n-        _return_place: mir::Place<'tcx>,\n+        _return_places: CallReturnPlaces<'_, 'tcx>,\n     ) {\n         // Nothing to do when a call returns successfully\n     }"}, {"sha": "73600a8a08773402f7d3144ae91f325202e8ab14", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -257,7 +257,7 @@ impl<'tcx> LateLintPass<'tcx> for StringLitAsBytes {\n             if method_names[0] == sym!(as_bytes);\n \n             // Check for slicer\n-            if let ExprKind::Struct(QPath::LangItem(LangItem::Range, _), _, _) = right.kind;\n+            if let ExprKind::Struct(QPath::LangItem(LangItem::Range, ..), _, _) = right.kind;\n \n             then {\n                 let mut applicability = Applicability::MachineApplicable;"}, {"sha": "4da32c52e750a06e47e1c68a840a83df0c429b8d", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -65,7 +65,7 @@ impl<'tcx> LateLintPass<'tcx> for TryErr {\n             if let ExprKind::Match(match_arg, _, MatchSource::TryDesugar) = expr.kind;\n             if let ExprKind::Call(match_fun, try_args) = match_arg.kind;\n             if let ExprKind::Path(ref match_fun_path) = match_fun.kind;\n-            if matches!(match_fun_path, QPath::LangItem(LangItem::TryTraitBranch, _));\n+            if matches!(match_fun_path, QPath::LangItem(LangItem::TryTraitBranch, ..));\n             if let Some(try_arg) = try_args.get(0);\n             if let ExprKind::Call(err_fun, err_args) = try_arg.kind;\n             if let Some(err_arg) = err_args.get(0);"}, {"sha": "111413e51930bd06dacd48a0e8c99917f617d443", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -49,7 +49,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedIoAmount {\n                 if let hir::ExprKind::Call(func, [ref arg_0, ..]) = res.kind {\n                     if matches!(\n                         func.kind,\n-                        hir::ExprKind::Path(hir::QPath::LangItem(hir::LangItem::TryTraitBranch, _))\n+                        hir::ExprKind::Path(hir::QPath::LangItem(hir::LangItem::TryTraitBranch, ..))\n                     ) {\n                         check_map_error(cx, arg_0, expr);\n                     }"}, {"sha": "f186e1f05a0b45d3324f75717f5daf3a00d606c2", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -260,7 +260,7 @@ impl<'a, 'tcx> PrintVisitor<'a, 'tcx> {\n     }\n \n     fn qpath(&self, qpath: &Binding<&QPath<'_>>) {\n-        if let QPath::LangItem(lang_item, _) = *qpath.value {\n+        if let QPath::LangItem(lang_item, ..) = *qpath.value {\n             out!(\"if matches!({qpath}, QPath::LangItem(LangItem::{lang_item:?}, _));\");\n         } else {\n             out!(\"if match_qpath({qpath}, &[{}]);\", path_to_string(qpath.value));"}, {"sha": "fc32e49420e4b82debc05b94c593f3814a52c7f7", "filename": "clippy_utils/src/higher.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_utils%2Fsrc%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_utils%2Fsrc%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fhigher.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -218,7 +218,7 @@ impl<'a> Range<'a> {\n             hir::ExprKind::Call(path, args)\n                 if matches!(\n                     path.kind,\n-                    hir::ExprKind::Path(hir::QPath::LangItem(hir::LangItem::RangeInclusiveNew, _))\n+                    hir::ExprKind::Path(hir::QPath::LangItem(hir::LangItem::RangeInclusiveNew, ..))\n                 ) =>\n             {\n                 Some(Range {\n@@ -228,27 +228,27 @@ impl<'a> Range<'a> {\n                 })\n             },\n             hir::ExprKind::Struct(path, fields, None) => match &path {\n-                hir::QPath::LangItem(hir::LangItem::RangeFull, _) => Some(Range {\n+                hir::QPath::LangItem(hir::LangItem::RangeFull, ..) => Some(Range {\n                     start: None,\n                     end: None,\n                     limits: ast::RangeLimits::HalfOpen,\n                 }),\n-                hir::QPath::LangItem(hir::LangItem::RangeFrom, _) => Some(Range {\n+                hir::QPath::LangItem(hir::LangItem::RangeFrom, ..) => Some(Range {\n                     start: Some(get_field(\"start\", fields)?),\n                     end: None,\n                     limits: ast::RangeLimits::HalfOpen,\n                 }),\n-                hir::QPath::LangItem(hir::LangItem::Range, _) => Some(Range {\n+                hir::QPath::LangItem(hir::LangItem::Range, ..) => Some(Range {\n                     start: Some(get_field(\"start\", fields)?),\n                     end: Some(get_field(\"end\", fields)?),\n                     limits: ast::RangeLimits::HalfOpen,\n                 }),\n-                hir::QPath::LangItem(hir::LangItem::RangeToInclusive, _) => Some(Range {\n+                hir::QPath::LangItem(hir::LangItem::RangeToInclusive, ..) => Some(Range {\n                     start: None,\n                     end: Some(get_field(\"end\", fields)?),\n                     limits: ast::RangeLimits::Closed,\n                 }),\n-                hir::QPath::LangItem(hir::LangItem::RangeTo, _) => Some(Range {\n+                hir::QPath::LangItem(hir::LangItem::RangeTo, ..) => Some(Range {\n                     start: None,\n                     end: Some(get_field(\"end\", fields)?),\n                     limits: ast::RangeLimits::HalfOpen,"}, {"sha": "b8e53e47ed9e58c74a3c944743aa196f61ac499b", "filename": "clippy_utils/src/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_utils%2Fsrc%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_utils%2Fsrc%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fhir_utils.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -348,7 +348,7 @@ impl HirEqInterExpr<'_, '_, '_> {\n             (&QPath::TypeRelative(lty, lseg), &QPath::TypeRelative(rty, rseg)) => {\n                 self.eq_ty(lty, rty) && self.eq_path_segment(lseg, rseg)\n             },\n-            (&QPath::LangItem(llang_item, _), &QPath::LangItem(rlang_item, _)) => llang_item == rlang_item,\n+            (&QPath::LangItem(llang_item, ..), &QPath::LangItem(rlang_item, ..)) => llang_item == rlang_item,\n             _ => false,\n         }\n     }"}, {"sha": "d384c5a069eb0a8b6fbc879961b603e896a363a6", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,6 +1,5 @@\n #![feature(box_patterns)]\n #![feature(in_band_lifetimes)]\n-#![feature(iter_zip)]\n #![feature(let_else)]\n #![feature(rustc_private)]\n #![feature(control_flow_enum)]"}, {"sha": "3a5dfa6a8c7d8d4265be4ec5704b497c76bbe6b3", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2021-12-02\"\n+channel = \"nightly-2021-12-17\"\n components = [\"cargo\", \"llvm-tools-preview\", \"rust-src\", \"rust-std\", \"rustc\", \"rustc-dev\", \"rustfmt\"]"}, {"sha": "0220bf3331f5b0664b66d2a56a884353f5c23b96", "filename": "tests/ui/asm_syntax.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fasm_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fasm_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasm_syntax.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,11 +1,10 @@\n // only-x86_64\n // ignore-aarch64\n \n-#![feature(asm)]\n-\n #[warn(clippy::inline_asm_x86_intel_syntax)]\n mod warn_intel {\n     pub(super) unsafe fn use_asm() {\n+        use std::arch::asm;\n         asm!(\"\");\n         asm!(\"\", options());\n         asm!(\"\", options(nostack));\n@@ -17,6 +16,7 @@ mod warn_intel {\n #[warn(clippy::inline_asm_x86_att_syntax)]\n mod warn_att {\n     pub(super) unsafe fn use_asm() {\n+        use std::arch::asm;\n         asm!(\"\");\n         asm!(\"\", options());\n         asm!(\"\", options(nostack));"}, {"sha": "e9b150121aa31edb0ea54af01c7831cb3039858b", "filename": "tests/ui/asm_syntax.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fasm_syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fasm_syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasm_syntax.stderr?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,5 +1,5 @@\n error: Intel x86 assembly syntax used\n-  --> $DIR/asm_syntax.rs:9:9\n+  --> $DIR/asm_syntax.rs:8:9\n    |\n LL |         asm!(\"\");\n    |         ^^^^^^^^\n@@ -8,15 +8,15 @@ LL |         asm!(\"\");\n    = help: use AT&T x86 assembly syntax\n \n error: Intel x86 assembly syntax used\n-  --> $DIR/asm_syntax.rs:10:9\n+  --> $DIR/asm_syntax.rs:9:9\n    |\n LL |         asm!(\"\", options());\n    |         ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: use AT&T x86 assembly syntax\n \n error: Intel x86 assembly syntax used\n-  --> $DIR/asm_syntax.rs:11:9\n+  --> $DIR/asm_syntax.rs:10:9\n    |\n LL |         asm!(\"\", options(nostack));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "7ffbd7a64b341fdb9cf27bddd90b50a49edec5d9", "filename": "tests/ui/crashes/ice-6250.stderr", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fcrashes%2Fice-6250.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fcrashes%2Fice-6250.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6250.stderr?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,14 +1,3 @@\n-error[E0658]: destructuring assignments are unstable\n-  --> $DIR/ice-6250.rs:12:25\n-   |\n-LL |         Some(reference) = cache.data.get(key) {\n-   |         --------------- ^\n-   |         |\n-   |         cannot assign to this expression\n-   |\n-   = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n-   = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n-\n error[E0601]: `main` function not found in crate `ice_6250`\n   --> $DIR/ice-6250.rs:4:1\n    |\n@@ -41,7 +30,7 @@ error[E0308]: mismatched types\n LL |         Some(reference) = cache.data.get(key) {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `()`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0308, E0601, E0658.\n+Some errors have detailed explanations: E0308, E0601.\n For more information about an error, try `rustc --explain E0308`."}, {"sha": "e43635abcd112fcebf173130d56aaab75e474876", "filename": "tests/ui/entry.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fentry.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fentry.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.fixed?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -2,8 +2,8 @@\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]\n #![warn(clippy::map_entry)]\n-#![feature(asm)]\n \n+use std::arch::asm;\n use std::collections::HashMap;\n use std::hash::Hash;\n "}, {"sha": "d999b3b7dc80d8125ed5ce1fe56fe92c3cc59dd5", "filename": "tests/ui/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -2,8 +2,8 @@\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]\n #![warn(clippy::map_entry)]\n-#![feature(asm)]\n \n+use std::arch::asm;\n use std::collections::HashMap;\n use std::hash::Hash;\n "}, {"sha": "a9f2ad36d0aba06294010d71216093977cba5319", "filename": "tests/ui/future_not_send.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Ffuture_not_send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Ffuture_not_send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffuture_not_send.stderr?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -6,22 +6,22 @@ LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |\n    = note: `-D clippy::future-not-send` implied by `-D warnings`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:8:5\n+  --> $DIR/future_not_send.rs:8:19\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                         -- has type `std::rc::Rc<[u8]>` which is not `Send`\n LL |     async { true }.await\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `rc` maybe used later\n+   |                   ^^^^^^ await occurs here, with `rc` maybe used later\n LL | }\n    | - `rc` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:8:5\n+  --> $DIR/future_not_send.rs:8:19\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                       ---- has type `&std::cell::Cell<usize>` which is not `Send`\n LL |     async { true }.await\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `cell` maybe used later\n+   |                   ^^^^^^ await occurs here, with `cell` maybe used later\n LL | }\n    | - `cell` is later dropped here\n    = note: `std::cell::Cell<usize>` doesn't implement `std::marker::Sync`\n@@ -33,12 +33,12 @@ LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                                          ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:12:5\n+  --> $DIR/future_not_send.rs:12:19\n    |\n LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                            -- has type `std::rc::Rc<[u8]>` which is not `Send`\n LL |     async { true }.await;\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `rc` maybe used later\n+   |                   ^^^^^^ await occurs here, with `rc` maybe used later\n LL | }\n    | - `rc` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n@@ -82,12 +82,12 @@ LL |     async fn private_future(&self) -> usize {\n    |                                       ^^^^^ future returned by `private_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:35:9\n+  --> $DIR/future_not_send.rs:35:23\n    |\n LL |     async fn private_future(&self) -> usize {\n    |                             ----- has type `&Dummy` which is not `Send`\n LL |         async { true }.await;\n-   |         ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `&self` maybe used later\n+   |                       ^^^^^^ await occurs here, with `&self` maybe used later\n LL |         self.rc.len()\n LL |     }\n    |     - `&self` is later dropped here\n@@ -100,12 +100,12 @@ LL |     pub async fn public_future(&self) {\n    |                                       ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:40:9\n+  --> $DIR/future_not_send.rs:40:30\n    |\n LL |     pub async fn public_future(&self) {\n    |                                ----- has type `&Dummy` which is not `Send`\n LL |         self.private_future().await;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ await occurs here, with `&self` maybe used later\n+   |                              ^^^^^^ await occurs here, with `&self` maybe used later\n LL |     }\n    |     - `&self` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Sync`\n@@ -117,12 +117,12 @@ LL | async fn generic_future<T>(t: T) -> T\n    |                                     ^ future returned by `generic_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:54:5\n+  --> $DIR/future_not_send.rs:54:19\n    |\n LL |     let rt = &t;\n    |         -- has type `&T` which is not `Send`\n LL |     async { true }.await;\n-   |     ^^^^^^^^^^^^^^^^^^^^ await occurs here, with `rt` maybe used later\n+   |                   ^^^^^^ await occurs here, with `rt` maybe used later\n LL |     t\n LL | }\n    | - `rt` is later dropped here"}, {"sha": "6e2e710e21c84026b5e15c10e64fe9bbeef430af", "filename": "tests/ui/missing-doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fmissing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fmissing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -2,10 +2,11 @@\n // When denying at the crate level, be sure to not get random warnings from the\n // injected intrinsics by the compiler.\n #![allow(dead_code)]\n-#![feature(global_asm)]\n //! Some garbage docs for the crate here\n #![doc = \"More garbage\"]\n \n+use std::arch::global_asm;\n+\n type Typedef = String;\n pub type PubTypedef = String;\n "}, {"sha": "a876dc078ebff96f25c8e34efad90156b896a70a", "filename": "tests/ui/missing-doc.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fmissing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fmissing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.stderr?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,43 +1,43 @@\n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:9:1\n+  --> $DIR/missing-doc.rs:10:1\n    |\n LL | type Typedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-docs-in-private-items` implied by `-D warnings`\n \n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:10:1\n+  --> $DIR/missing-doc.rs:11:1\n    |\n LL | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:12:1\n+  --> $DIR/missing-doc.rs:13:1\n    |\n LL | mod module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:13:1\n+  --> $DIR/missing-doc.rs:14:1\n    |\n LL | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:17:1\n+  --> $DIR/missing-doc.rs:18:1\n    |\n LL | pub fn foo2() {}\n    | ^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:18:1\n+  --> $DIR/missing-doc.rs:19:1\n    |\n LL | fn foo3() {}\n    | ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing-doc.rs:32:1\n+  --> $DIR/missing-doc.rs:33:1\n    |\n LL | / enum Baz {\n LL | |     BazA { a: isize, b: isize },\n@@ -46,75 +46,75 @@ LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing-doc.rs:33:5\n+  --> $DIR/missing-doc.rs:34:5\n    |\n LL |     BazA { a: isize, b: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:33:12\n+  --> $DIR/missing-doc.rs:34:12\n    |\n LL |     BazA { a: isize, b: isize },\n    |            ^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:33:22\n+  --> $DIR/missing-doc.rs:34:22\n    |\n LL |     BazA { a: isize, b: isize },\n    |                      ^^^^^^^^\n \n error: missing documentation for a variant\n-  --> $DIR/missing-doc.rs:34:5\n+  --> $DIR/missing-doc.rs:35:5\n    |\n LL |     BarB,\n    |     ^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing-doc.rs:37:1\n+  --> $DIR/missing-doc.rs:38:1\n    |\n LL | / pub enum PubBaz {\n LL | |     PubBazA { a: isize },\n LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing-doc.rs:38:5\n+  --> $DIR/missing-doc.rs:39:5\n    |\n LL |     PubBazA { a: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:38:15\n+  --> $DIR/missing-doc.rs:39:15\n    |\n LL |     PubBazA { a: isize },\n    |               ^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing-doc.rs:58:1\n+  --> $DIR/missing-doc.rs:59:1\n    |\n LL | const FOO: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing-doc.rs:65:1\n+  --> $DIR/missing-doc.rs:66:1\n    |\n LL | pub const FOO4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing-doc.rs:67:1\n+  --> $DIR/missing-doc.rs:68:1\n    |\n LL | static BAR: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing-doc.rs:74:1\n+  --> $DIR/missing-doc.rs:75:1\n    |\n LL | pub static BAR4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:76:1\n+  --> $DIR/missing-doc.rs:77:1\n    |\n LL | / mod internal_impl {\n LL | |     /// dox\n@@ -126,31 +126,31 @@ LL | | }\n    | |_^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:79:5\n+  --> $DIR/missing-doc.rs:80:5\n    |\n LL |     pub fn undocumented1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:80:5\n+  --> $DIR/missing-doc.rs:81:5\n    |\n LL |     pub fn undocumented2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:81:5\n+  --> $DIR/missing-doc.rs:82:5\n    |\n LL |     fn undocumented3() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:86:9\n+  --> $DIR/missing-doc.rs:87:9\n    |\n LL |         pub fn also_undocumented1() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:87:9\n+  --> $DIR/missing-doc.rs:88:9\n    |\n LL |         fn also_undocumented2() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "89e012c066fe4d9593460873e0049ada3c8a8993", "filename": "tests/ui/needless_late_init.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -39,6 +39,19 @@ fn main() {\n         e = format!(\"{}\", c);\n     }\n \n+    let f;\n+    match 1 {\n+        1 => f = \"three\",\n+        _ => return,\n+    }; // has semi\n+\n+    let g: usize;\n+    if true {\n+        g = 5;\n+    } else {\n+        panic!();\n+    }\n+\n     println!(\"{}\", a);\n }\n "}, {"sha": "ef79e635d2ae623da06255747c8dc3fd66f059e4", "filename": "tests/ui/needless_late_init.stderr", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.stderr?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -105,7 +105,43 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:50:5\n+  --> $DIR/needless_late_init.rs:42:5\n+   |\n+LL |     let f;\n+   |     ^^^^^^\n+   |\n+help: declare `f` here\n+   |\n+LL |     let f = match 1 {\n+   |     +++++++\n+help: remove the assignments from the `match` arms\n+   |\n+LL -         1 => f = \"three\",\n+LL +         1 => \"three\",\n+   | \n+\n+error: unneeded late initalization\n+  --> $DIR/needless_late_init.rs:48:5\n+   |\n+LL |     let g: usize;\n+   |     ^^^^^^^^^^^^^\n+   |\n+help: declare `g` here\n+   |\n+LL |     let g: usize = if true {\n+   |     ++++++++++++++\n+help: remove the assignments from the branches\n+   |\n+LL -         g = 5;\n+LL +         5\n+   | \n+help: add a semicolon after the `if` expression\n+   |\n+LL |     };\n+   |      +\n+\n+error: unneeded late initalization\n+  --> $DIR/needless_late_init.rs:63:5\n    |\n LL |     let a;\n    |     ^^^^^^\n@@ -126,7 +162,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:67:5\n+  --> $DIR/needless_late_init.rs:80:5\n    |\n LL |     let a;\n    |     ^^^^^^\n@@ -146,5 +182,5 @@ help: add a semicolon after the `match` expression\n LL |     };\n    |      +\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 9 previous errors\n "}, {"sha": "b516f9d86b75b652b0e4f788c85cc16853d573a4", "filename": "tests/ui/needless_late_init_fixable.fixed", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init_fixable.fixed?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -19,19 +19,6 @@ fn main() {\n     e = 2;\n \n     \n-    let f = match 1 {\n-        1 => \"three\",\n-        _ => return,\n-    }; // has semi\n-\n-    \n-    let g: usize = if true {\n-        5\n-    } else {\n-        panic!();\n-    };\n-\n-    \n     let h = format!(\"{}\", e);\n \n     println!(\"{}\", a);"}, {"sha": "75a4bc916deacb5cbd52e2f10c9f1fa5643abf5d", "filename": "tests/ui/needless_late_init_fixable.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init_fixable.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -18,19 +18,6 @@ fn main() {\n     e = 1;\n     e = 2;\n \n-    let f;\n-    match 1 {\n-        1 => f = \"three\",\n-        _ => return,\n-    }; // has semi\n-\n-    let g: usize;\n-    if true {\n-        g = 5;\n-    } else {\n-        panic!();\n-    }\n-\n     let h;\n     h = format!(\"{}\", e);\n "}, {"sha": "3f3d4f5286b2b2e088a737288c3759955bbcd1af", "filename": "tests/ui/needless_late_init_fixable.stderr", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Fneedless_late_init_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init_fixable.stderr?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -57,40 +57,6 @@ LL |     let mut e = 1;\n error: unneeded late initalization\n   --> $DIR/needless_late_init_fixable.rs:21:5\n    |\n-LL |     let f;\n-   |     ^^^^^^\n-   |\n-help: declare `f` here\n-   |\n-LL |     let f = match 1 {\n-   |     +++++++\n-help: remove the assignments from the `match` arms\n-   |\n-LL |         1 => \"three\",\n-   |              ~~~~~~~\n-\n-error: unneeded late initalization\n-  --> $DIR/needless_late_init_fixable.rs:27:5\n-   |\n-LL |     let g: usize;\n-   |     ^^^^^^^^^^^^^\n-   |\n-help: declare `g` here\n-   |\n-LL |     let g: usize = if true {\n-   |     ++++++++++++++\n-help: remove the assignments from the branches\n-   |\n-LL |         5\n-   |\n-help: add a semicolon after the `if` expression\n-   |\n-LL |     };\n-   |      +\n-\n-error: unneeded late initalization\n-  --> $DIR/needless_late_init_fixable.rs:34:5\n-   |\n LL |     let h;\n    |     ^^^^^^\n    |\n@@ -99,5 +65,5 @@ help: declare `h` here\n LL |     let h = format!(\"{}\", e);\n    |     ~~~~~\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "c39b0bcaf227fb2db8b36952a8d6f22f42226ffa", "filename": "tests/ui/trailing_empty_array.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Ftrailing_empty_array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Ftrailing_empty_array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_empty_array.rs?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,5 +1,4 @@\n #![warn(clippy::trailing_empty_array)]\n-#![feature(const_generics_defaults)]\n \n // Do lint:\n "}, {"sha": "9e2bd31d9fa51ec7a922ed918d411e94ceb55466", "filename": "tests/ui/trailing_empty_array.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Ftrailing_empty_array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23d11428de3e973b34a5090a78d62887f821c90e/tests%2Fui%2Ftrailing_empty_array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_empty_array.stderr?ref=23d11428de3e973b34a5090a78d62887f821c90e", "patch": "@@ -1,5 +1,5 @@\n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:6:1\n+  --> $DIR/trailing_empty_array.rs:5:1\n    |\n LL | / struct RarelyUseful {\n LL | |     field: i32,\n@@ -11,7 +11,7 @@ LL | | }\n    = help: consider annotating `RarelyUseful` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:11:1\n+  --> $DIR/trailing_empty_array.rs:10:1\n    |\n LL | / struct OnlyField {\n LL | |     first_and_last: [usize; 0],\n@@ -21,7 +21,7 @@ LL | | }\n    = help: consider annotating `OnlyField` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:15:1\n+  --> $DIR/trailing_empty_array.rs:14:1\n    |\n LL | / struct GenericArrayType<T> {\n LL | |     field: i32,\n@@ -32,7 +32,7 @@ LL | | }\n    = help: consider annotating `GenericArrayType` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:21:1\n+  --> $DIR/trailing_empty_array.rs:20:1\n    |\n LL | / struct OnlyAnotherAttribute {\n LL | |     field: i32,\n@@ -43,7 +43,7 @@ LL | | }\n    = help: consider annotating `OnlyAnotherAttribute` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:27:1\n+  --> $DIR/trailing_empty_array.rs:26:1\n    |\n LL | / struct OnlyADeriveAttribute {\n LL | |     field: i32,\n@@ -54,7 +54,7 @@ LL | | }\n    = help: consider annotating `OnlyADeriveAttribute` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:33:1\n+  --> $DIR/trailing_empty_array.rs:32:1\n    |\n LL | / struct ZeroSizedWithConst {\n LL | |     field: i32,\n@@ -65,7 +65,7 @@ LL | | }\n    = help: consider annotating `ZeroSizedWithConst` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:42:1\n+  --> $DIR/trailing_empty_array.rs:41:1\n    |\n LL | / struct ZeroSizedWithConstFunction {\n LL | |     field: i32,\n@@ -76,7 +76,7 @@ LL | | }\n    = help: consider annotating `ZeroSizedWithConstFunction` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:50:1\n+  --> $DIR/trailing_empty_array.rs:49:1\n    |\n LL | / struct ZeroSizedWithConstFunction2 {\n LL | |     field: i32,\n@@ -87,23 +87,23 @@ LL | | }\n    = help: consider annotating `ZeroSizedWithConstFunction2` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:55:1\n+  --> $DIR/trailing_empty_array.rs:54:1\n    |\n LL | struct ZeroSizedArrayWrapper([usize; 0]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider annotating `ZeroSizedArrayWrapper` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:57:1\n+  --> $DIR/trailing_empty_array.rs:56:1\n    |\n LL | struct TupleStruct(i32, [usize; 0]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider annotating `TupleStruct` with `#[repr(C)]` or another `repr` attribute\n \n error: trailing zero-sized array in a struct which is not marked with a `repr` attribute\n-  --> $DIR/trailing_empty_array.rs:59:1\n+  --> $DIR/trailing_empty_array.rs:58:1\n    |\n LL | / struct LotsOfFields {\n LL | |     f1: u32,"}]}