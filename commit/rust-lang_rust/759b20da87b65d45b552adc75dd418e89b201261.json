{"sha": "759b20da87b65d45b552adc75dd418e89b201261", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OWIyMGRhODdiNjVkNDViNTUyYWRjNzVkZDQxOGU4OWIyMDEyNjE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-19T12:07:18Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-19T12:37:50Z"}, "message": "std::fmt: fix markdown peculiarity, unicodify some arrows, ` some trait names.", "tree": {"sha": "848b1924de52cb214f44bbc043a044488942b211", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/848b1924de52cb214f44bbc043a044488942b211"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/759b20da87b65d45b552adc75dd418e89b201261", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/759b20da87b65d45b552adc75dd418e89b201261", "html_url": "https://github.com/rust-lang/rust/commit/759b20da87b65d45b552adc75dd418e89b201261", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/759b20da87b65d45b552adc75dd418e89b201261/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "404a4619dc132c53c6c5c9e023316c779275b223", "url": "https://api.github.com/repos/rust-lang/rust/commits/404a4619dc132c53c6c5c9e023316c779275b223", "html_url": "https://github.com/rust-lang/rust/commit/404a4619dc132c53c6c5c9e023316c779275b223"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "3223ca9a731cb899b267280a238829d9fa221f6c", "filename": "src/libstd/fmt/mod.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/759b20da87b65d45b552adc75dd418e89b201261/src%2Flibstd%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759b20da87b65d45b552adc75dd418e89b201261/src%2Flibstd%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt%2Fmod.rs?ref=759b20da87b65d45b552adc75dd418e89b201261", "patch": "@@ -134,20 +134,20 @@ actually requesting that an argument ascribes to a particular trait. This allows\n multiple actual types to be formatted via `{:d}` (like `i8` as well as `int`).\n The current mapping of types to traits is:\n \n-* `?` => Poly\n-* `d` => Signed\n-* `i` => Signed\n-* `u` => Unsigned\n-* `b` => Bool\n-* `c` => Char\n-* `o` => Octal\n-* `x` => LowerHex\n-* `X` => UpperHex\n-* `s` => String\n-* `p` => Pointer\n-* `t` => Binary\n-* `f` => Float\n-* `` (nothing) => Default\n+* `?` \u21d2 `Poly`\n+* `d` \u21d2 `Signed`\n+* `i` \u21d2 `Signed`\n+* `u` \u21d2 `Unsigned`\n+* `b` \u21d2 `Bool`\n+* `c` \u21d2 `Char`\n+* `o` \u21d2 `Octal`\n+* `x` \u21d2 `LowerHex`\n+* `X` \u21d2 `UpperHex`\n+* `s` \u21d2 `String`\n+* `p` \u21d2 `Pointer`\n+* `t` \u21d2 `Binary`\n+* `f` \u21d2 `Float`\n+* *nothing* \u21d2 `Default`\n \n What this means is that any type of argument which implements the\n `std::fmt::Binary` trait can then be formatted with `{:t}`. Implementations are"}]}