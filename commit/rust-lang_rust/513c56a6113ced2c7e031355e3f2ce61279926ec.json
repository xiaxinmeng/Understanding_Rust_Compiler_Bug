{"sha": "513c56a6113ced2c7e031355e3f2ce61279926ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxM2M1NmE2MTEzY2VkMmM3ZTAzMTM1NWUzZjJjZTYxMjc5OTI2ZWM=", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-05-06T12:59:53Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-05-06T12:59:53Z"}, "message": "remove unused variant", "tree": {"sha": "a0c0993a0a5ea417211990bd8f29b86881cae31e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0c0993a0a5ea417211990bd8f29b86881cae31e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/513c56a6113ced2c7e031355e3f2ce61279926ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/513c56a6113ced2c7e031355e3f2ce61279926ec", "html_url": "https://github.com/rust-lang/rust/commit/513c56a6113ced2c7e031355e3f2ce61279926ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/513c56a6113ced2c7e031355e3f2ce61279926ec/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d99508b52499c9efd213738e71927458c1d394e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d99508b52499c9efd213738e71927458c1d394e", "html_url": "https://github.com/rust-lang/rust/commit/1d99508b52499c9efd213738e71927458c1d394e"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "1cafb2fe1a24f48be2c35cb106bb53a5c9973a2a", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/513c56a6113ced2c7e031355e3f2ce61279926ec/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513c56a6113ced2c7e031355e3f2ce61279926ec/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=513c56a6113ced2c7e031355e3f2ce61279926ec", "patch": "@@ -2398,9 +2398,6 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 self.tcx.associated_item(def_id).ident\n             ),\n             infer::EarlyBoundRegion(_, name) => format!(\" for lifetime parameter `{}`\", name),\n-            infer::BoundRegionInCoherence(name) => {\n-                format!(\" for lifetime parameter `{}` in coherence check\", name)\n-            }\n             infer::UpvarRegion(ref upvar_id, _) => {\n                 let var_name = self.tcx.hir().name(upvar_id.var_path.hir_id);\n                 format!(\" for capture of `{}` by closure\", var_name)"}, {"sha": "f39431f2494b1868f53c19f58ff893eb0c93a614", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/513c56a6113ced2c7e031355e3f2ce61279926ec/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513c56a6113ced2c7e031355e3f2ce61279926ec/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=513c56a6113ced2c7e031355e3f2ce61279926ec", "patch": "@@ -453,8 +453,6 @@ pub enum RegionVariableOrigin {\n \n     UpvarRegion(ty::UpvarId, Span),\n \n-    BoundRegionInCoherence(Symbol),\n-\n     /// This origin is used for the inference variables that we create\n     /// during NLL region processing.\n     Nll(NllRegionVariableOrigin),\n@@ -1749,7 +1747,6 @@ impl RegionVariableOrigin {\n             | EarlyBoundRegion(a, ..)\n             | LateBoundRegion(a, ..)\n             | UpvarRegion(_, a) => a,\n-            BoundRegionInCoherence(_) => rustc_span::DUMMY_SP,\n             Nll(..) => bug!(\"NLL variable used with `span`\"),\n         }\n     }"}]}