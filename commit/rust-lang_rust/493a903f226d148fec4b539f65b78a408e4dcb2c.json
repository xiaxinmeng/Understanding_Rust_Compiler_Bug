{"sha": "493a903f226d148fec4b539f65b78a408e4dcb2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5M2E5MDNmMjI2ZDE0OGZlYzRiNTM5ZjY1Yjc4YTQwOGU0ZGNiMmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-26T11:02:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-26T13:15:57Z"}, "message": "Bump main thread priority on windows", "tree": {"sha": "ae660f8813688bde603f8c7b6b1ec5f4ae94c36e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae660f8813688bde603f8c7b6b1ec5f4ae94c36e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/493a903f226d148fec4b539f65b78a408e4dcb2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/493a903f226d148fec4b539f65b78a408e4dcb2c", "html_url": "https://github.com/rust-lang/rust/commit/493a903f226d148fec4b539f65b78a408e4dcb2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/493a903f226d148fec4b539f65b78a408e4dcb2c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40109941db20180eb71b70c23c578fed5244bd74", "url": "https://api.github.com/repos/rust-lang/rust/commits/40109941db20180eb71b70c23c578fed5244bd74", "html_url": "https://github.com/rust-lang/rust/commit/40109941db20180eb71b70c23c578fed5244bd74"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "8e320458bf82bc0669bb0ded14e72ab60fc80257", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/493a903f226d148fec4b539f65b78a408e4dcb2c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/493a903f226d148fec4b539f65b78a408e4dcb2c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=493a903f226d148fec4b539f65b78a408e4dcb2c", "patch": "@@ -1079,6 +1079,7 @@ dependencies = [\n  \"tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n  \"threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]"}, {"sha": "fdf81ed87c9fe72feb95ecd6c88d2dadeba57559", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/493a903f226d148fec4b539f65b78a408e4dcb2c/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/493a903f226d148fec4b539f65b78a408e4dcb2c/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=493a903f226d148fec4b539f65b78a408e4dcb2c", "patch": "@@ -30,6 +30,9 @@ env_logger = { version = \"0.7.1\", default-features = false }\n ra_cargo_watch = { path = \"../ra_cargo_watch\" }\n either = \"1.5\"\n \n+[target.'cfg(windows)'.dependencies]\n+winapi = \"0.3\"\n+\n [dev-dependencies]\n tempfile = \"3\"\n test_utils = { path = \"../test_utils\" }"}, {"sha": "15bf519c9a7d4affc9825c23fd00c0235af2a095", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/493a903f226d148fec4b539f65b78a408e4dcb2c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/493a903f226d148fec4b539f65b78a408e4dcb2c/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=493a903f226d148fec4b539f65b78a408e4dcb2c", "patch": "@@ -57,6 +57,25 @@ pub fn main_loop(\n ) -> Result<()> {\n     log::info!(\"server_config: {:#?}\", config);\n \n+    // Windows scheduler implements priority boosts: if thread waits for an\n+    // event (like a condvar), and event fires, priority of the thread is\n+    // temporary bumped. This optimization backfires in our case: each time the\n+    // `main_loop` schedules a task to run on a threadpool, the worker threads\n+    // gets a higher priority, and (on a machine with fewer cores) displaces the\n+    // main loop! We work-around this by marking the main loop as a\n+    // higher-priority thread.\n+    //\n+    // https://docs.microsoft.com/en-us/windows/win32/procthread/scheduling-priorities\n+    // https://docs.microsoft.com/en-us/windows/win32/procthread/priority-boosts\n+    // https://github.com/rust-analyzer/rust-analyzer/issues/2835\n+    #[cfg(windows)]\n+    unsafe {\n+        use winapi::um::processthreadsapi::*;\n+        let thread = GetCurrentThread();\n+        let thread_priority_above_normal = 1;\n+        SetThreadPriority(thread, thread_priority_above_normal);\n+    }\n+\n     let mut loop_state = LoopState::default();\n     let mut world_state = {\n         let feature_flags = {"}]}