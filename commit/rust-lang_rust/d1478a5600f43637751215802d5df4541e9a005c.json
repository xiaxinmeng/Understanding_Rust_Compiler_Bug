{"sha": "d1478a5600f43637751215802d5df4541e9a005c", "node_id": "C_kwDOAAsO6NoAKGQxNDc4YTU2MDBmNDM2Mzc3NTEyMTU4MDJkNWRmNDU0MWU5YTAwNWM", "commit": {"author": {"name": "Yiming Lei", "email": "yiming.lei@futurewei.com", "date": "2023-01-12T20:28:07Z"}, "committer": {"name": "Yiming Lei", "email": "yiming.lei@futurewei.com", "date": "2023-01-17T17:20:15Z"}, "message": "delay E0512 as a bug by checking the references_error\nfix #106695", "tree": {"sha": "9b86d1f0073a0a9ee71f5db9ac8b9b8cb8034db0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b86d1f0073a0a9ee71f5db9ac8b9b8cb8034db0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1478a5600f43637751215802d5df4541e9a005c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1478a5600f43637751215802d5df4541e9a005c", "html_url": "https://github.com/rust-lang/rust/commit/d1478a5600f43637751215802d5df4541e9a005c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1478a5600f43637751215802d5df4541e9a005c/comments", "author": null, "committer": null, "parents": [{"sha": "1bc3683b3275a5eb2ed13d24edcdcbc59afe5d70", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc3683b3275a5eb2ed13d24edcdcbc59afe5d70", "html_url": "https://github.com/rust-lang/rust/commit/1bc3683b3275a5eb2ed13d24edcdcbc59afe5d70"}], "stats": {"total": 41, "additions": 15, "deletions": 26}, "files": [{"sha": "3c873024c924f3837c473312fb3c0395be8eeaa1", "filename": "compiler/rustc_hir_typeck/src/intrinsicck.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d1478a5600f43637751215802d5df4541e9a005c/compiler%2Frustc_hir_typeck%2Fsrc%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1478a5600f43637751215802d5df4541e9a005c/compiler%2Frustc_hir_typeck%2Fsrc%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fintrinsicck.rs?ref=d1478a5600f43637751215802d5df4541e9a005c", "patch": "@@ -105,6 +105,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         } else {\n             err.note(&format!(\"source type: `{}` ({})\", from, skeleton_string(from, sk_from)))\n                 .note(&format!(\"target type: `{}` ({})\", to, skeleton_string(to, sk_to)));\n+            let mut should_delay_as_bug = false;\n+            if let Err(LayoutError::Unknown(bad_from)) = sk_from && bad_from.references_error() {\n+                should_delay_as_bug = true;\n+            }\n+            if let Err(LayoutError::Unknown(bad_to)) = sk_to && bad_to.references_error() {\n+                should_delay_as_bug = true;\n+            }\n+            if should_delay_as_bug {\n+                err.delay_as_bug();\n+            }\n         }\n         err.emit();\n     }"}, {"sha": "057930f0c1ce759a4d12c4ebff64c43076ab3714", "filename": "tests/ui/type-alias-impl-trait/issue-53092-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-53092-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-53092-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-53092-2.rs?ref=d1478a5600f43637751215802d5df4541e9a005c", "patch": "@@ -4,7 +4,6 @@\n type Bug<T, U> = impl Fn(T) -> U + Copy; //~ ERROR cycle detected\n \n const CONST_BUG: Bug<u8, ()> = unsafe { std::mem::transmute(|_: u8| ()) };\n-//~^ ERROR: cannot transmute\n \n fn make_bug<T, U: From<T>>() -> Bug<T, U> {\n     |x| x.into() //~ ERROR the trait bound `U: From<T>` is not satisfied"}, {"sha": "2565a28b493541c1a48bc195e01546d1dfe66160", "filename": "tests/ui/type-alias-impl-trait/issue-53092-2.stderr", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-53092-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-53092-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-53092-2.stderr?ref=d1478a5600f43637751215802d5df4541e9a005c", "patch": "@@ -24,23 +24,14 @@ LL | |     CONST_BUG(0);\n LL | | }\n    | |_^\n \n-error[E0512]: cannot transmute between types of different sizes, or dependently-sized types\n-  --> $DIR/issue-53092-2.rs:6:41\n-   |\n-LL | const CONST_BUG: Bug<u8, ()> = unsafe { std::mem::transmute(|_: u8| ()) };\n-   |                                         ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: source type: `[closure@$DIR/issue-53092-2.rs:6:61: 6:68]` (0 bits)\n-   = note: target type: `Bug<u8, ()>` (size can vary because of [type error])\n-\n error[E0277]: the trait bound `U: From<T>` is not satisfied\n-  --> $DIR/issue-53092-2.rs:10:5\n+  --> $DIR/issue-53092-2.rs:9:5\n    |\n LL |     |x| x.into()\n    |     ^^^^^^^^^^^^ the trait `From<T>` is not implemented for `U`\n    |\n note: required by a bound in `make_bug`\n-  --> $DIR/issue-53092-2.rs:9:19\n+  --> $DIR/issue-53092-2.rs:8:19\n    |\n LL | fn make_bug<T, U: From<T>>() -> Bug<T, U> {\n    |                   ^^^^^^^ required by this bound in `make_bug`\n@@ -49,7 +40,7 @@ help: consider restricting type parameter `U`\n LL | type Bug<T, U: std::convert::From<T>> = impl Fn(T) -> U + Copy;\n    |              +++++++++++++++++++++++\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0277, E0391, E0512.\n+Some errors have detailed explanations: E0277, E0391.\n For more information about an error, try `rustc --explain E0277`."}, {"sha": "0f0a02e97d82db4054e6531932337b7c3b939a3a", "filename": "tests/ui/type-alias-impl-trait/no_inferrable_concrete_type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.rs?ref=d1478a5600f43637751215802d5df4541e9a005c", "patch": "@@ -15,5 +15,4 @@ mod foo {\n \n fn main() {\n     let _: foo::Foo = std::mem::transmute(0u8);\n-    //~^ ERROR cannot transmute between types of different sizes, or dependently-sized types\n }"}, {"sha": "f3e8ae9c7dbae9ff379197ee592b8de713090669", "filename": "tests/ui/type-alias-impl-trait/no_inferrable_concrete_type.stderr", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d1478a5600f43637751215802d5df4541e9a005c/tests%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fno_inferrable_concrete_type.stderr?ref=d1478a5600f43637751215802d5df4541e9a005c", "patch": "@@ -6,15 +6,5 @@ LL |     pub type Foo = impl Copy;\n    |\n    = note: `Foo` must be used in combination with a concrete type within the same module\n \n-error[E0512]: cannot transmute between types of different sizes, or dependently-sized types\n-  --> $DIR/no_inferrable_concrete_type.rs:17:23\n-   |\n-LL |     let _: foo::Foo = std::mem::transmute(0u8);\n-   |                       ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: source type: `u8` (8 bits)\n-   = note: target type: `Foo` (size can vary because of [type error])\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0512`."}]}