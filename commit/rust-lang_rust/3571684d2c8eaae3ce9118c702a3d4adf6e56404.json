{"sha": "3571684d2c8eaae3ce9118c702a3d4adf6e56404", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NzE2ODRkMmM4ZWFhZTNjZTkxMThjNzAyYTNkNGFkZjZlNTY0MDQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-05-27T11:10:12Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-06-06T13:25:18Z"}, "message": "Create thread-pool", "tree": {"sha": "39d6f72e5d3372be9b69e405e56f9d30b95414f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39d6f72e5d3372be9b69e405e56f9d30b95414f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3571684d2c8eaae3ce9118c702a3d4adf6e56404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3571684d2c8eaae3ce9118c702a3d4adf6e56404", "html_url": "https://github.com/rust-lang/rust/commit/3571684d2c8eaae3ce9118c702a3d4adf6e56404", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3571684d2c8eaae3ce9118c702a3d4adf6e56404/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c819ba043aa00ca15c5ab63da89e387c2130f5bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c819ba043aa00ca15c5ab63da89e387c2130f5bb", "html_url": "https://github.com/rust-lang/rust/commit/c819ba043aa00ca15c5ab63da89e387c2130f5bb"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "6f5e2affdbd3c3d33726a441350d7223ce98090e", "filename": "src/test/run-make-fulldeps/issue-19371/foo.rs", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/3571684d2c8eaae3ce9118c702a3d4adf6e56404/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3571684d2c8eaae3ce9118c702a3d4adf6e56404/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs?ref=3571684d2c8eaae3ce9118c702a3d4adf6e56404", "patch": "@@ -19,9 +19,9 @@ extern crate rustc_codegen_utils;\n extern crate syntax;\n \n use rustc::session::{build_session, Session};\n-use rustc::session::config::{basic_options, Input,\n+use rustc::session::config::{basic_options, Input, Options,\n                              OutputType, OutputTypes};\n-use rustc_driver::driver::{compile_input, CompileController};\n+use rustc_driver::driver::{self, compile_input, CompileController};\n use rustc_metadata::cstore::CStore;\n use rustc_errors::registry::Registry;\n use syntax::codemap::FileName;\n@@ -52,14 +52,7 @@ fn main() {\n     compile(src.to_string(), tmpdir.join(\"out\"), sysroot.clone());\n }\n \n-fn basic_sess(sysroot: PathBuf) -> (Session, Rc<CStore>, Box<CodegenBackend>) {\n-    let mut opts = basic_options();\n-    opts.output_types = OutputTypes::new(&[(OutputType::Exe, None)]);\n-    opts.maybe_sysroot = Some(sysroot);\n-    if let Ok(linker) = std::env::var(\"RUSTC_LINKER\") {\n-        opts.cg.linker = Some(linker.into());\n-    }\n-\n+fn basic_sess(opts: Options) -> (Session, Rc<CStore>, Box<CodegenBackend>) {\n     let descriptions = Registry::new(&rustc::DIAGNOSTICS);\n     let sess = build_session(opts, None, descriptions);\n     let codegen_backend = rustc_driver::get_codegen_backend(&sess);\n@@ -70,19 +63,27 @@ fn basic_sess(sysroot: PathBuf) -> (Session, Rc<CStore>, Box<CodegenBackend>) {\n \n fn compile(code: String, output: PathBuf, sysroot: PathBuf) {\n     syntax::with_globals(|| {\n-        let (sess, cstore, codegen_backend) = basic_sess(sysroot);\n-        let control = CompileController::basic();\n-        let input = Input::Str { name: FileName::Anon, input: code };\n-        let _ = compile_input(\n-            codegen_backend,\n-            &sess,\n-            &cstore,\n-            &None,\n-            &input,\n-            &None,\n-            &Some(output),\n-            None,\n-            &control\n-        );\n+        let mut opts = basic_options();\n+        opts.output_types = OutputTypes::new(&[(OutputType::Exe, None)]);\n+        opts.maybe_sysroot = Some(sysroot);\n+        if let Ok(linker) = std::env::var(\"RUSTC_LINKER\") {\n+            opts.cg.linker = Some(linker.into());\n+        }\n+        driver::spawn_thread_pool(opts, |opts| {\n+            let (sess, cstore, codegen_backend) = basic_sess(opts);\n+            let control = CompileController::basic();\n+            let input = Input::Str { name: FileName::Anon, input: code };\n+            let _ = compile_input(\n+                codegen_backend,\n+                &sess,\n+                &cstore,\n+                &None,\n+                &input,\n+                &None,\n+                &Some(output),\n+                None,\n+                &control\n+            );\n+        });\n     });\n }"}]}