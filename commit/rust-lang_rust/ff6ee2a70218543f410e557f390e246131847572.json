{"sha": "ff6ee2a70218543f410e557f390e246131847572", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNmVlMmE3MDIxODU0M2Y0MTBlNTU3ZjM5MGUyNDYxMzE4NDc1NzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-26T02:56:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-26T02:56:37Z"}, "message": "Auto merge of #79113 - andjo403:raw_vec_ptr, r=m-ou-se\n\nmark raw_vec::ptr with inline\n\nwhen a lot of vectors is used in a enum as in the example in #66617 if this function is not inlined and multiple cgus is used this results in huge compile times. with this fix the compile time is 6s from minutes for the example in #66617. I did not have the patience to wait for it to compile for more then 3 min.", "tree": {"sha": "6dccd2551882bd1396602faf360a7204436807cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dccd2551882bd1396602faf360a7204436807cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff6ee2a70218543f410e557f390e246131847572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff6ee2a70218543f410e557f390e246131847572", "html_url": "https://github.com/rust-lang/rust/commit/ff6ee2a70218543f410e557f390e246131847572", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff6ee2a70218543f410e557f390e246131847572/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4eb5d9f719cd3c849befc8914ad8ce0ddcf34ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4eb5d9f719cd3c849befc8914ad8ce0ddcf34ed", "html_url": "https://github.com/rust-lang/rust/commit/f4eb5d9f719cd3c849befc8914ad8ce0ddcf34ed"}, {"sha": "88d1f31a904efdb28d504bc6dff5b6671a2f052b", "url": "https://api.github.com/repos/rust-lang/rust/commits/88d1f31a904efdb28d504bc6dff5b6671a2f052b", "html_url": "https://github.com/rust-lang/rust/commit/88d1f31a904efdb28d504bc6dff5b6671a2f052b"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "56f4ebe57f8afb232075c7fea1774818db208a36", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff6ee2a70218543f410e557f390e246131847572/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6ee2a70218543f410e557f390e246131847572/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=ff6ee2a70218543f410e557f390e246131847572", "patch": "@@ -232,6 +232,7 @@ impl<T, A: Allocator> RawVec<T, A> {\n     /// Gets a raw pointer to the start of the allocation. Note that this is\n     /// `Unique::dangling()` if `capacity == 0` or `T` is zero-sized. In the former case, you must\n     /// be careful.\n+    #[inline]\n     pub fn ptr(&self) -> *mut T {\n         self.ptr.as_ptr()\n     }"}]}