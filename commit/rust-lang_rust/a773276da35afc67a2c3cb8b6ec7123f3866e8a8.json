{"sha": "a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NzMyNzZkYTM1YWZjNjdhMmMzY2I4YjZlYzcxMjNmMzg2NmU4YTg=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-01-19T09:36:27Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-01-19T09:36:27Z"}, "message": "Fix bad `while_let_on_iterator` suggestion.\n\nDon't suggest a `for` loop if the iterator is used inside the `while` loop.\n\nCloses #3670", "tree": {"sha": "24020ceac0ae9e5988de51382a7f5f90b5002ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24020ceac0ae9e5988de51382a7f5f90b5002ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "html_url": "https://github.com/rust-lang/rust/commit/a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a773276da35afc67a2c3cb8b6ec7123f3866e8a8/comments", "author": null, "committer": null, "parents": [{"sha": "235f96005cb3c94f4f3d185e7c3d4ffaa08685aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/235f96005cb3c94f4f3d185e7c3d4ffaa08685aa", "html_url": "https://github.com/rust-lang/rust/commit/235f96005cb3c94f4f3d185e7c3d4ffaa08685aa"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "acc7b11e3463827456a9d2cba0b3fe6568f935f7", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a773276da35afc67a2c3cb8b6ec7123f3866e8a8/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a773276da35afc67a2c3cb8b6ec7123f3866e8a8/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "patch": "@@ -565,6 +565,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     && lhs_constructor.ident.name == \"Some\"\n                     && (pat_args.is_empty()\n                         || !is_refutable(cx, &pat_args[0])\n+                            && !is_used_inside(cx, iter_expr, &arms[0].body)\n                             && !is_iterator_used_after_while_let(cx, iter_expr)\n                             && !is_nested(cx, expr, &method_args[0]))\n                 {\n@@ -1888,6 +1889,19 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n     }\n }\n \n+fn is_used_inside<'a, 'tcx: 'a>(cx: &'a LateContext<'a, 'tcx>, expr: &'tcx Expr, container: &'tcx Expr) -> bool {\n+    let def_id = match var_def_id(cx, expr) {\n+        Some(id) => id,\n+        None => return false,\n+    };\n+    if let Some(used_mutably) = mutated_variables(container, cx) {\n+        if used_mutably.contains(&def_id) {\n+            return true;\n+        }\n+    }\n+    false\n+}\n+\n fn is_iterator_used_after_while_let<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, iter_expr: &'tcx Expr) -> bool {\n     let def_id = match var_def_id(cx, iter_expr) {\n         Some(id) => id,"}, {"sha": "8c3bf1cc674b617e8b752116343ce9877f31c41b", "filename": "tests/ui/while_loop.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a773276da35afc67a2c3cb8b6ec7123f3866e8a8/tests%2Fui%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a773276da35afc67a2c3cb8b6ec7123f3866e8a8/tests%2Fui%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.rs?ref=a773276da35afc67a2c3cb8b6ec7123f3866e8a8", "patch": "@@ -216,4 +216,14 @@ fn refutable() {\n     while let Some(..) = values.iter().next() {\n         values.remove(&1);\n     }\n+\n+    // Issue 3670\n+    {\n+        let array = [Some(0), None, Some(1)];\n+        let mut iter = array.iter();\n+\n+        while let Some(elem) = iter.next() {\n+            let _ = elem.or_else(|| *iter.next()?);\n+        }\n+    }\n }"}]}