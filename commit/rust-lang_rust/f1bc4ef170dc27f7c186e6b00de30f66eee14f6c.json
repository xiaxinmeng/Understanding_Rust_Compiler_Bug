{"sha": "f1bc4ef170dc27f7c186e6b00de30f66eee14f6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxYmM0ZWYxNzBkYzI3ZjdjMTg2ZTZiMDBkZTMwZjY2ZWVlMTRmNmM=", "commit": {"author": {"name": "Pyry Kontio", "email": "pyry.kontio@drasa.eu", "date": "2019-11-06T05:47:52Z"}, "committer": {"name": "Pyry Kontio", "email": "kontio@r.recruit.co.jp", "date": "2019-11-06T05:48:23Z"}, "message": "Addressed review comments.", "tree": {"sha": "c93f3598afb85bbf3664ea4236557c35466f7b5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c93f3598afb85bbf3664ea4236557c35466f7b5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1bc4ef170dc27f7c186e6b00de30f66eee14f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1bc4ef170dc27f7c186e6b00de30f66eee14f6c", "html_url": "https://github.com/rust-lang/rust/commit/f1bc4ef170dc27f7c186e6b00de30f66eee14f6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1bc4ef170dc27f7c186e6b00de30f66eee14f6c/comments", "author": {"login": "golddranks", "id": 2675542, "node_id": "MDQ6VXNlcjI2NzU1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2675542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/golddranks", "html_url": "https://github.com/golddranks", "followers_url": "https://api.github.com/users/golddranks/followers", "following_url": "https://api.github.com/users/golddranks/following{/other_user}", "gists_url": "https://api.github.com/users/golddranks/gists{/gist_id}", "starred_url": "https://api.github.com/users/golddranks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/golddranks/subscriptions", "organizations_url": "https://api.github.com/users/golddranks/orgs", "repos_url": "https://api.github.com/users/golddranks/repos", "events_url": "https://api.github.com/users/golddranks/events{/privacy}", "received_events_url": "https://api.github.com/users/golddranks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "golddranks", "id": 2675542, "node_id": "MDQ6VXNlcjI2NzU1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2675542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/golddranks", "html_url": "https://github.com/golddranks", "followers_url": "https://api.github.com/users/golddranks/followers", "following_url": "https://api.github.com/users/golddranks/following{/other_user}", "gists_url": "https://api.github.com/users/golddranks/gists{/gist_id}", "starred_url": "https://api.github.com/users/golddranks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/golddranks/subscriptions", "organizations_url": "https://api.github.com/users/golddranks/orgs", "repos_url": "https://api.github.com/users/golddranks/repos", "events_url": "https://api.github.com/users/golddranks/events{/privacy}", "received_events_url": "https://api.github.com/users/golddranks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "002c1c74d99295e49e30a02fb98f25383f1576f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/002c1c74d99295e49e30a02fb98f25383f1576f8", "html_url": "https://github.com/rust-lang/rust/commit/002c1c74d99295e49e30a02fb98f25383f1576f8"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "5a936da05fd48980127d35eeb7cfe069e13fd4c2", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f1bc4ef170dc27f7c186e6b00de30f66eee14f6c/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1bc4ef170dc27f7c186e6b00de30f66eee14f6c/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=f1bc4ef170dc27f7c186e6b00de30f66eee14f6c", "patch": "@@ -1273,15 +1273,15 @@ impl fmt::Debug for Thread {\n ///\n /// The value contained in the `Result::Err` variant\n /// is the value the thread panicked with;\n-/// that is, the parameter the `panic!` macro was called with.\n+/// that is, the argument the `panic!` macro was called with.\n /// Unlike with normal errors, this value doesn't implement\n-/// the `std::error::Error` trait.\n+/// the [`Error`] trait.\n ///\n-/// Thus, a sensible way to handle a thread panic is to either\n-/// `unwrap` the `Result`, propagating the panic,\n-/// or in case the thread is intended to be a subsystem boundary\n+/// Thus, a sensible way to handle a thread panic is to either:\n+/// 1. `unwrap` the `Result<T>`, propagating the panic\n+/// 2. or in case the thread is intended to be a subsystem boundary\n /// that is supposed to isolate system-level failures,\n-/// match for the `Err` variant and handle the panic in an appropriate way.\n+/// match on the `Err` variant and handle the panic in an appropriate way.\n ///\n /// A thread that completes without panicking is considered to exit successfully.\n ///"}]}