{"sha": "f63c2f80e51a1942a28c660adad0d3bad74574e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2M2MyZjgwZTUxYTE5NDJhMjhjNjYwYWRhZDBkM2JhZDc0NTc0ZTI=", "commit": {"author": {"name": "F001", "email": "changchun.fan@qq.com", "date": "2018-11-07T04:26:05Z"}, "committer": {"name": "f001", "email": "changchun.fan@qq.com", "date": "2018-11-07T14:17:32Z"}, "message": "fix ICE", "tree": {"sha": "cf28420ea49efbe33b633fea7eca42217267ff00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf28420ea49efbe33b633fea7eca42217267ff00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f63c2f80e51a1942a28c660adad0d3bad74574e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f63c2f80e51a1942a28c660adad0d3bad74574e2", "html_url": "https://github.com/rust-lang/rust/commit/f63c2f80e51a1942a28c660adad0d3bad74574e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f63c2f80e51a1942a28c660adad0d3bad74574e2/comments", "author": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "committer": {"login": "F001", "id": 3314340, "node_id": "MDQ6VXNlcjMzMTQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/3314340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F001", "html_url": "https://github.com/F001", "followers_url": "https://api.github.com/users/F001/followers", "following_url": "https://api.github.com/users/F001/following{/other_user}", "gists_url": "https://api.github.com/users/F001/gists{/gist_id}", "starred_url": "https://api.github.com/users/F001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F001/subscriptions", "organizations_url": "https://api.github.com/users/F001/orgs", "repos_url": "https://api.github.com/users/F001/repos", "events_url": "https://api.github.com/users/F001/events{/privacy}", "received_events_url": "https://api.github.com/users/F001/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15d770400eed9018f18bddf83dd65cb7789280a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/15d770400eed9018f18bddf83dd65cb7789280a5", "html_url": "https://github.com/rust-lang/rust/commit/15d770400eed9018f18bddf83dd65cb7789280a5"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "4a300fe09215cbfc01e2dbd068b409dbfb2e400e", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f63c2f80e51a1942a28c660adad0d3bad74574e2/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63c2f80e51a1942a28c660adad0d3bad74574e2/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=f63c2f80e51a1942a28c660adad0d3bad74574e2", "patch": "@@ -814,11 +814,6 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n             report_unexpected_def(def);\n             return self.tcx.types.err;\n         }\n-        // Replace constructor type with constructed type for tuple struct patterns.\n-        let pat_ty = pat_ty.fn_sig(tcx).output();\n-        let pat_ty = pat_ty.no_bound_vars().expect(\"expected fn type\");\n-\n-        self.demand_eqtype(pat.span, expected, pat_ty);\n \n         let variant = match def {\n             Def::Err => {\n@@ -836,6 +831,13 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n             }\n             _ => bug!(\"unexpected pattern definition: {:?}\", def)\n         };\n+\n+        // Replace constructor type with constructed type for tuple struct patterns.\n+        let pat_ty = pat_ty.fn_sig(tcx).output();\n+        let pat_ty = pat_ty.no_bound_vars().expect(\"expected fn type\");\n+\n+        self.demand_eqtype(pat.span, expected, pat_ty);\n+\n         // Type check subpatterns.\n         if subpats.len() == variant.fields.len() ||\n                 subpats.len() < variant.fields.len() && ddpos.is_some() {"}, {"sha": "d9c50e75c494486abc32cd65a8d8b149b673977a", "filename": "src/test/ui/match/match-fn-call.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f63c2f80e51a1942a28c660adad0d3bad74574e2/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63c2f80e51a1942a28c660adad0d3bad74574e2/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.rs?ref=f63c2f80e51a1942a28c660adad0d3bad74574e2", "patch": "@@ -0,0 +1,12 @@\n+use std::path::Path;\n+\n+fn main() {\n+    let path = Path::new(\"foo\");\n+    match path {\n+        Path::new(\"foo\") => println!(\"foo\"),\n+        //~^ ERROR expected tuple struct/variant\n+        Path::new(\"bar\") => println!(\"bar\"),\n+        //~^ ERROR expected tuple struct/variant\n+        _ => (),\n+    }\n+}"}, {"sha": "4e24621706bdb91864ed914339081cd3d6d51b6f", "filename": "src/test/ui/match/match-fn-call.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f63c2f80e51a1942a28c660adad0d3bad74574e2/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f63c2f80e51a1942a28c660adad0d3bad74574e2/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-fn-call.stderr?ref=f63c2f80e51a1942a28c660adad0d3bad74574e2", "patch": "@@ -0,0 +1,15 @@\n+error[E0164]: expected tuple struct/variant, found method `<Path>::new`\n+  --> $DIR/match-fn-call.rs:6:9\n+   |\n+LL |         Path::new(\"foo\") => println!(\"foo\"),\n+   |         ^^^^^^^^^^^^^^^^ not a tuple variant or struct\n+\n+error[E0164]: expected tuple struct/variant, found method `<Path>::new`\n+  --> $DIR/match-fn-call.rs:8:9\n+   |\n+LL |         Path::new(\"bar\") => println!(\"bar\"),\n+   |         ^^^^^^^^^^^^^^^^ not a tuple variant or struct\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0164`."}]}