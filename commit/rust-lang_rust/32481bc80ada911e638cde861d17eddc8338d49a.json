{"sha": "32481bc80ada911e638cde861d17eddc8338d49a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNDgxYmM4MGFkYTkxMWU2MzhjZGU4NjFkMTdlZGRjODMzOGQ0OWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-30T21:08:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T21:08:58Z"}, "message": "Rollup merge of #72757 - petrochenkov:shebang, r=varkor\n\nrustc_lexer: Optimize shebang detection slightly\n\nSorry, I just couldn't resist.\nIt shouldn't make any difference in practice.\n\nAlso, documented a previously unnoticed case with doc comments treated as regular comments during shebang detection.", "tree": {"sha": "da8e13f64c13a96a09f37c28b2cd85d70296d1cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da8e13f64c13a96a09f37c28b2cd85d70296d1cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32481bc80ada911e638cde861d17eddc8338d49a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0strCRBK7hj4Ov3rIwAAdHIIABOKTYvPXInSUjGlbLdGlGS7\n2P8HxkV944QNuAa9T7X9YdkijEmvuvN+ELihqMFDPtIB2daJ93t7vQ5Dz+UMVgcO\nlLJX7zdD52h5bkkFZviKLi9rVhupWEz+yqMnY0nAY9/WgXlpDYSZDLVUTAp8JRaH\n9SFuhnUa8dAFLDmKLIQ8955yS8fNyk8x/Pc6jA03S2xPJNaX3SFaN0hKRGMRy4is\nw3PcSDeK4FmJzd4n2GRbiZN6uAWaUQ7K41MOu4m5UCk2OYkxLTlIzA2NcBZtD0Wj\nFcLALdWn1uWr7BKOjXkQaQWekq+UgNTnzTwQ96/Sad6b83kVjk1AlQ1q8c5n9NU=\n=TrR8\n-----END PGP SIGNATURE-----\n", "payload": "tree da8e13f64c13a96a09f37c28b2cd85d70296d1cc\nparent 8f1c0d0a10761b70d74bec7a537a25cb54f42b61\nparent 21755b58c900cd5d14422ebd980fe11390e021fe\nauthor Ralf Jung <post@ralfj.de> 1590872938 +0200\ncommitter GitHub <noreply@github.com> 1590872938 +0200\n\nRollup merge of #72757 - petrochenkov:shebang, r=varkor\n\nrustc_lexer: Optimize shebang detection slightly\n\nSorry, I just couldn't resist.\nIt shouldn't make any difference in practice.\n\nAlso, documented a previously unnoticed case with doc comments treated as regular comments during shebang detection.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32481bc80ada911e638cde861d17eddc8338d49a", "html_url": "https://github.com/rust-lang/rust/commit/32481bc80ada911e638cde861d17eddc8338d49a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32481bc80ada911e638cde861d17eddc8338d49a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "html_url": "https://github.com/rust-lang/rust/commit/8f1c0d0a10761b70d74bec7a537a25cb54f42b61"}, {"sha": "21755b58c900cd5d14422ebd980fe11390e021fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/21755b58c900cd5d14422ebd980fe11390e021fe", "html_url": "https://github.com/rust-lang/rust/commit/21755b58c900cd5d14422ebd980fe11390e021fe"}], "stats": {"total": 51, "additions": 32, "deletions": 19}, "files": [{"sha": "c2139d07f378a5640327bca97903c04b7da0b8a0", "filename": "src/librustc_lexer/src/lib.rs", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/32481bc80ada911e638cde861d17eddc8338d49a/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32481bc80ada911e638cde861d17eddc8338d49a/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Flib.rs?ref=32481bc80ada911e638cde861d17eddc8338d49a", "patch": "@@ -238,26 +238,25 @@ pub enum Base {\n /// `rustc` allows files to have a shebang, e.g. \"#!/usr/bin/rustrun\",\n /// but shebang isn't a part of rust syntax.\n pub fn strip_shebang(input: &str) -> Option<usize> {\n-    let first_line = input.lines().next()?;\n-    // A shebang is intentionally loosely defined as `#! [non whitespace]` on the first line.\n-    let could_be_shebang =\n-        first_line.starts_with(\"#!\") && first_line[2..].contains(|c| !is_whitespace(c));\n-    if !could_be_shebang {\n-        return None;\n-    }\n-    let non_whitespace_tokens = tokenize(input).map(|tok| tok.kind).filter(|tok|\n-        !matches!(tok, TokenKind::LineComment | TokenKind::BlockComment { .. } | TokenKind::Whitespace)\n-    );\n-    let prefix = [TokenKind::Pound, TokenKind::Not, TokenKind::OpenBracket];\n-    let starts_with_attribute = non_whitespace_tokens.take(3).eq(prefix.iter().copied());\n-    if starts_with_attribute {\n-        // If the file starts with #![ then it's definitely not a shebang -- it couldn't be\n-        // a rust program since a Rust program can't start with `[`\n-        None\n-    } else {\n-        // It's a #!... and there isn't a `[` in sight, must be a shebang\n-        Some(first_line.len())\n+    // Shebang must start with `#!` literally, without any preceding whitespace.\n+    if input.starts_with(\"#!\") {\n+        let input_tail = &input[2..];\n+        // Shebang must have something non-whitespace after `#!` on the first line.\n+        let first_line_tail = input_tail.lines().next()?;\n+        if first_line_tail.contains(|c| !is_whitespace(c)) {\n+            // Ok, this is a shebang but if the next non-whitespace token is `[` or maybe\n+            // a doc comment (due to `TokenKind::(Line,Block)Comment` ambiguity at lexer level),\n+            // then it may be valid Rust code, so consider it Rust code.\n+            let next_non_whitespace_token = tokenize(input_tail).map(|tok| tok.kind).filter(|tok|\n+                !matches!(tok, TokenKind::Whitespace | TokenKind::LineComment | TokenKind::BlockComment { .. })\n+            ).next();\n+            if next_non_whitespace_token != Some(TokenKind::OpenBracket) {\n+                // No other choice than to consider this a shebang.\n+                return Some(2 + first_line_tail.len());\n+            }\n+        }\n     }\n+    None\n }\n \n /// Parses the first token from the provided input string."}, {"sha": "7dbb9eebc757127599eb861fdba58f14ac0f3ed0", "filename": "src/test/ui/parser/shebang/shebang-doc-comment.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32481bc80ada911e638cde861d17eddc8338d49a/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-doc-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32481bc80ada911e638cde861d17eddc8338d49a/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-doc-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-doc-comment.rs?ref=32481bc80ada911e638cde861d17eddc8338d49a", "patch": "@@ -0,0 +1,6 @@\n+#!///bin/bash\n+[allow(unused_variables)]\n+//~^^ ERROR expected `[`, found doc comment\n+\n+// Doc comment is misinterpreted as a whitespace (regular comment) during shebang detection.\n+// Even if it wasn't, it would still result in an error, just a different one."}, {"sha": "f524f556837fbc1e30f412adec6dc9fb8810c2a3", "filename": "src/test/ui/parser/shebang/shebang-doc-comment.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/32481bc80ada911e638cde861d17eddc8338d49a/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-doc-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32481bc80ada911e638cde861d17eddc8338d49a/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-doc-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-doc-comment.stderr?ref=32481bc80ada911e638cde861d17eddc8338d49a", "patch": "@@ -0,0 +1,8 @@\n+error: expected `[`, found doc comment `///bin/bash`\n+  --> $DIR/shebang-doc-comment.rs:1:3\n+   |\n+LL | #!///bin/bash\n+   |   ^^^^^^^^^^^ expected `[`\n+\n+error: aborting due to previous error\n+"}]}