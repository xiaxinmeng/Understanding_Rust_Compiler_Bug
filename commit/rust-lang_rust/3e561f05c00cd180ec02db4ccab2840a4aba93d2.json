{"sha": "3e561f05c00cd180ec02db4ccab2840a4aba93d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNTYxZjA1YzAwY2QxODBlYzAyZGI0Y2NhYjI4NDBhNGFiYTkzZDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-01T10:59:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-01T10:59:37Z"}, "message": "Auto merge of #25825 - GuillaumeGomez:check_co, r=Manishearth\n\nPart of #24407.", "tree": {"sha": "7aed3ce8b4a2c4829398e982c2c45c73264935b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aed3ce8b4a2c4829398e982c2c45c73264935b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e561f05c00cd180ec02db4ccab2840a4aba93d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e561f05c00cd180ec02db4ccab2840a4aba93d2", "html_url": "https://github.com/rust-lang/rust/commit/3e561f05c00cd180ec02db4ccab2840a4aba93d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e561f05c00cd180ec02db4ccab2840a4aba93d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf508ba20d483513b4b5633ff1861d9fc0c92da", "url": "https://api.github.com/repos/rust-lang/rust/commits/baf508ba20d483513b4b5633ff1861d9fc0c92da", "html_url": "https://github.com/rust-lang/rust/commit/baf508ba20d483513b4b5633ff1861d9fc0c92da"}, {"sha": "dbfc8c5a0711a0746d0af8fdf798f3fc631c83b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbfc8c5a0711a0746d0af8fdf798f3fc631c83b6", "html_url": "https://github.com/rust-lang/rust/commit/dbfc8c5a0711a0746d0af8fdf798f3fc631c83b6"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "5e79e5a5a4ed2edf6b1a7623d4ab8bc5b9faf75a", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3e561f05c00cd180ec02db4ccab2840a4aba93d2/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e561f05c00cd180ec02db4ccab2840a4aba93d2/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=3e561f05c00cd180ec02db4ccab2840a4aba93d2", "patch": "@@ -176,6 +176,38 @@ for the entire lifetime of a program. Creating a boxed value allocates memory on\n the heap at runtime, and therefore cannot be done at compile time.\n \"##,\n \n+E0011: r##\"\n+Initializers for constants and statics are evaluated at compile time.\n+User-defined operators rely on user-defined functions, which cannot be evaluated\n+at compile time.\n+\n+Bad example:\n+\n+```\n+use std::ops::Index;\n+\n+struct Foo { a: u8 }\n+\n+impl Index<u8> for Foo {\n+    type Output = u8;\n+\n+    fn index<'a>(&'a self, idx: u8) -> &'a u8 { &self.a }\n+}\n+\n+const a: Foo = Foo { a: 0u8 };\n+const b: u8 = a[0]; // Index trait is defined by the user, bad!\n+```\n+\n+Only operators on builtin types are allowed.\n+\n+Example:\n+\n+```\n+const a: &'static [i32] = &[1, 2, 3];\n+const b: i32 = a[0]; // Good!\n+```\n+\"##,\n+\n E0013: r##\"\n Static and const variables can refer to other const variables. But a const\n variable cannot refer to a static variable. For example, `Y` cannot refer to `X`\n@@ -899,7 +931,6 @@ static mut BAR: Option<Vec<i32>> = None;\n \n \n register_diagnostics! {\n-    E0011,\n     E0014,\n     E0016,\n     E0017,"}]}