{"sha": "4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "node_id": "C_kwDOAAsO6NoAKDRmOGI5YTQxMjYzZWJkODQ2OWM2MjZkMzZiZjEwMDM0YWQ5OWVhOGM", "commit": {"author": {"name": "Daniel Conley", "email": "himself@danii.dev", "date": "2022-01-28T16:00:56Z"}, "committer": {"name": "Daniel Conley", "email": "himself@danii.dev", "date": "2022-01-28T16:00:56Z"}, "message": "Add Explanation For Error E0772", "tree": {"sha": "0e101861d4371ef649c4cbc3468d672d70aed29f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e101861d4371ef649c4cbc3468d672d70aed29f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3a0fQwhlargOXuthlMIeegYH8dwFAmH0EzgACgkQlMIeegYH\n8dz19g/8Ce16rZQfNpHEwmgHpvtDDv+DfRcojBptwFAnUIye2GuDQEnXuZJkkYf0\ngLPFS9xBXPmRzXb8z6VFCZ8hc3eU7hmG3Zi4PrgFVfQFPJDqh7NVvJlhJvJ0oOEo\nzWkbqr5MZfyi1rmaYGIbsLkFx/G5zjv7s4ZQl3AifGDSGO7Kgsna91uV6exstGTV\ng5dsyF9zcBLDx2yUGdBODdo++Y6P7uYaPGsFFjy/Uy65kTWayfFy+IOTuCvIMhaM\nZ4YL8M9wlmCNioy8FPU5M3yTty7EkqrMhYfzZiFLtScn6kSJLq+OTIXTd7wN6/eY\nFkgqxcwUCQsj4wdxjA5XmFiREbh3AQ0pQoqtke02rOinmyjOsOIGbBpnN3CyEL3S\n8tqgpz/p6XULQFwtcx3EZGsybbeGqnfsisbJTdxP+2KbTWXeDSFsRm+d8hCCFhld\nZBrXTDz1VNe3zutsIjJJOtuhOx09wynidtdGttuDG9+4MTd8wrRcXkhiZAKwnCM8\nsO/0VlCjapJOSEiCj7JGIb360Y19J7pZtWBv58OxUKq0K0Kk4+gjrZyRR4f9deFe\nyQyAl9VCi28OMX2n+E8QCNoR0GiBluXwYKE+nk2yK0Ra5cAN/+QJ7P6ZyB8y9zQP\ntBfBaZAFVj0/bOeE0lnqUh3Fn+1mLjwGFjmosDU0/s9A9wXOdvI=\n=h4wT\n-----END PGP SIGNATURE-----", "payload": "tree 0e101861d4371ef649c4cbc3468d672d70aed29f\nparent 337e1565d3b6b8ccb37d270331696da59f793c69\nauthor Daniel Conley <himself@danii.dev> 1643385656 -0500\ncommitter Daniel Conley <himself@danii.dev> 1643385656 -0500\n\nAdd Explanation For Error E0772\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "html_url": "https://github.com/rust-lang/rust/commit/4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/comments", "author": {"login": "danii", "id": 39541871, "node_id": "MDQ6VXNlcjM5NTQxODcx", "avatar_url": "https://avatars.githubusercontent.com/u/39541871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danii", "html_url": "https://github.com/danii", "followers_url": "https://api.github.com/users/danii/followers", "following_url": "https://api.github.com/users/danii/following{/other_user}", "gists_url": "https://api.github.com/users/danii/gists{/gist_id}", "starred_url": "https://api.github.com/users/danii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danii/subscriptions", "organizations_url": "https://api.github.com/users/danii/orgs", "repos_url": "https://api.github.com/users/danii/repos", "events_url": "https://api.github.com/users/danii/events{/privacy}", "received_events_url": "https://api.github.com/users/danii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danii", "id": 39541871, "node_id": "MDQ6VXNlcjM5NTQxODcx", "avatar_url": "https://avatars.githubusercontent.com/u/39541871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danii", "html_url": "https://github.com/danii", "followers_url": "https://api.github.com/users/danii/followers", "following_url": "https://api.github.com/users/danii/following{/other_user}", "gists_url": "https://api.github.com/users/danii/gists{/gist_id}", "starred_url": "https://api.github.com/users/danii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danii/subscriptions", "organizations_url": "https://api.github.com/users/danii/orgs", "repos_url": "https://api.github.com/users/danii/repos", "events_url": "https://api.github.com/users/danii/events{/privacy}", "received_events_url": "https://api.github.com/users/danii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "337e1565d3b6b8ccb37d270331696da59f793c69", "url": "https://api.github.com/repos/rust-lang/rust/commits/337e1565d3b6b8ccb37d270331696da59f793c69", "html_url": "https://github.com/rust-lang/rust/commit/337e1565d3b6b8ccb37d270331696da59f793c69"}], "stats": {"total": 97, "additions": 94, "deletions": 3}, "files": [{"sha": "5dafbb26b83c793bc9a02bd7a66fa5fa8f237f06", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "patch": "@@ -471,6 +471,7 @@ E0768: include_str!(\"./error_codes/E0768.md\"),\n E0769: include_str!(\"./error_codes/E0769.md\"),\n E0770: include_str!(\"./error_codes/E0770.md\"),\n E0771: include_str!(\"./error_codes/E0771.md\"),\n+E0772: include_str!(\"./error_codes/E0772.md\"),\n E0773: include_str!(\"./error_codes/E0773.md\"),\n E0774: include_str!(\"./error_codes/E0774.md\"),\n E0775: include_str!(\"./error_codes/E0775.md\"),\n@@ -641,5 +642,4 @@ E0785: include_str!(\"./error_codes/E0785.md\"),\n //  E0723, unstable feature in `const` context\n     E0726, // non-explicit (not `'_`) elided lifetime in unsupported position\n //  E0738, // Removed; errored on `#[track_caller] fn`s in `extern \"Rust\" { ... }`.\n-    E0772, // `'static' obligation coming from `impl dyn Trait {}` or `impl Foo for dyn Bar {}`.\n }"}, {"sha": "262e52351ef01c203ad655f7c2683dc6915e8a8a", "filename": "compiler/rustc_error_codes/src/error_codes/E0772.md", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0772.md", "raw_url": "https://github.com/rust-lang/rust/raw/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0772.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0772.md?ref=4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "patch": "@@ -0,0 +1,89 @@\n+A trait object has some specific lifetime `'1`, but it was used in a way that\n+requires it to have a `'static` lifetime.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0772\n+trait BooleanLike {}\n+trait Person {}\n+\n+impl BooleanLike for bool {}\n+\n+impl dyn Person {\n+    fn is_cool(&self) -> bool {\n+        // hey you, you're pretty cool\n+        true\n+    }\n+}\n+\n+fn get_is_cool<'p>(person: &'p dyn Person) -> impl BooleanLike {\n+    // error: `person` has an anonymous lifetime `'p` but calling\n+    //        `print_cool_fn` introduces an implicit `'static` lifetime\n+    //        requirement\n+    person.is_cool()\n+}\n+```\n+\n+The trait object `person` in the function `get_is_cool`, while already being\n+behind a reference with lifetime `'p`, also has it's own implicit lifetime,\n+`'2`.\n+\n+Lifetime `'2` represents the data the trait object might hold inside, for\n+example:\n+\n+```\n+trait MyTrait {}\n+\n+struct MyStruct<'a>(&'a i32);\n+\n+impl<'a> MyTrait for MyStruct<'a> {}\n+```\n+\n+With this scenario, if a trait object of `dyn MyTrait + '2` was made from\n+`MyStruct<'a>`, `'a` must live as long, if not longer than `'2`. This allows the\n+trait object's internal data to be accessed safely from any trait methods. This\n+rule also goes for any lifetime any struct made into a trait object may have.\n+\n+In the implementation for `dyn Person`, the `'2` lifetime representing the\n+internal data was ommitted, meaning that the compiler inferred the lifetime\n+`'static`. As a result, the implementation's `is_cool` is inferred by the\n+compiler to look like this:\n+\n+```\n+# trait Person {}\n+#\n+# impl dyn Person {\n+fn is_cool<'a>(self: &'a (dyn Person + 'static)) -> bool {unimplemented!()}\n+# }\n+```\n+\n+While the `get_is_cool` function is inferred to look like this:\n+\n+```\n+# trait Person {}\n+# trait BooleanLike {}\n+#\n+fn get_is_cool<'p, R: BooleanLike>(person: &'p (dyn Person + 'p)) -> R {\n+    unimplemented!()\n+}\n+```\n+\n+Which brings us to the core of the problem; the assignment of type\n+`&'_ (dyn Person + '_)` to type `&'_ (dyn Person + 'static)` is impossible.\n+\n+Fixing it is as simple as being generic over lifetime `'2`, as to prevent the\n+compiler from inferring it as `'static`:\n+\n+```\n+# trait Person {}\n+#\n+impl<'d> dyn Person + 'd {/* ... */}\n+\n+// This works too, and is more elegant:\n+//impl dyn Person + '_ {/* ... */}\n+```\n+\n+See the [Rust Reference on Trait Object Lifetime Bounds][trait-objects] for\n+more information on trait object lifetimes.\n+\n+[trait-object-lifetime-bounds]: https://doc.rust-lang.org/reference/types/trait-object.html#trait-object-lifetime-bounds"}, {"sha": "bd2e57517d7869a6ba4484909f250a4c90f4642e", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr?ref=4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "patch": "@@ -38,4 +38,5 @@ LL |     impl MyTrait for Box<dyn ObjectTrait<Assoc = i32> + '_> {\n \n error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0515`.\n+Some errors have detailed explanations: E0515, E0772.\n+For more information about an error, try `rustc --explain E0515`."}, {"sha": "ea482ced98d624d5f07393ec038c04dc49677feb", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f8b9a41263ebd8469c626d36bf10034ad99ea8c/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr?ref=4f8b9a41263ebd8469c626d36bf10034ad99ea8c", "patch": "@@ -131,4 +131,5 @@ LL |     impl MyTrait for Box<dyn ObjectTrait + '_> {\n \n error: aborting due to 6 previous errors\n \n-For more information about this error, try `rustc --explain E0759`.\n+Some errors have detailed explanations: E0759, E0772.\n+For more information about an error, try `rustc --explain E0759`."}]}