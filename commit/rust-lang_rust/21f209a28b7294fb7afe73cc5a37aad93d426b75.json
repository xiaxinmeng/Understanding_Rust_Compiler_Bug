{"sha": "21f209a28b7294fb7afe73cc5a37aad93d426b75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZjIwOWEyOGI3Mjk0ZmI3YWZlNzNjYzVhMzdhYWQ5M2Q0MjZiNzU=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-08-27T17:30:37Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-08-27T17:30:37Z"}, "message": "remove calls to deprecated `iter::order` functions", "tree": {"sha": "f91e5b4c8a0e423031487ed6659d6019a74d41a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f91e5b4c8a0e423031487ed6659d6019a74d41a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21f209a28b7294fb7afe73cc5a37aad93d426b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21f209a28b7294fb7afe73cc5a37aad93d426b75", "html_url": "https://github.com/rust-lang/rust/commit/21f209a28b7294fb7afe73cc5a37aad93d426b75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21f209a28b7294fb7afe73cc5a37aad93d426b75/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40fd4d678706af0684cee1e95304352a6ca02837", "url": "https://api.github.com/repos/rust-lang/rust/commits/40fd4d678706af0684cee1e95304352a6ca02837", "html_url": "https://github.com/rust-lang/rust/commit/40fd4d678706af0684cee1e95304352a6ca02837"}], "stats": {"total": 53, "additions": 26, "deletions": 27}, "files": [{"sha": "9def44191db0599fec4e861ccc245c981a74a214", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 26, "deletions": 27, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/21f209a28b7294fb7afe73cc5a37aad93d426b75/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21f209a28b7294fb7afe73cc5a37aad93d426b75/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=21f209a28b7294fb7afe73cc5a37aad93d426b75", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use core::iter::*;\n-use core::iter::order::*;\n use core::{i8, i16, isize};\n use core::usize;\n \n@@ -21,51 +20,51 @@ fn test_lt() {\n     let xs = [1,2,3];\n     let ys = [1,2,0];\n \n-    assert!(!lt(xs.iter(), ys.iter()));\n-    assert!(!le(xs.iter(), ys.iter()));\n-    assert!( gt(xs.iter(), ys.iter()));\n-    assert!( ge(xs.iter(), ys.iter()));\n+    assert!(!xs.iter().lt(ys.iter()));\n+    assert!(!xs.iter().le(ys.iter()));\n+    assert!( xs.iter().gt(ys.iter()));\n+    assert!( xs.iter().ge(ys.iter()));\n \n-    assert!( lt(ys.iter(), xs.iter()));\n-    assert!( le(ys.iter(), xs.iter()));\n-    assert!(!gt(ys.iter(), xs.iter()));\n-    assert!(!ge(ys.iter(), xs.iter()));\n+    assert!( ys.iter().lt(xs.iter()));\n+    assert!( ys.iter().le(xs.iter()));\n+    assert!(!ys.iter().gt(xs.iter()));\n+    assert!(!ys.iter().ge(xs.iter()));\n \n-    assert!( lt(empty.iter(), xs.iter()));\n-    assert!( le(empty.iter(), xs.iter()));\n-    assert!(!gt(empty.iter(), xs.iter()));\n-    assert!(!ge(empty.iter(), xs.iter()));\n+    assert!( empty.iter().lt(xs.iter()));\n+    assert!( empty.iter().le(xs.iter()));\n+    assert!(!empty.iter().gt(xs.iter()));\n+    assert!(!empty.iter().ge(xs.iter()));\n \n     // Sequence with NaN\n     let u = [1.0f64, 2.0];\n     let v = [0.0f64/0.0, 3.0];\n \n-    assert!(!lt(u.iter(), v.iter()));\n-    assert!(!le(u.iter(), v.iter()));\n-    assert!(!gt(u.iter(), v.iter()));\n-    assert!(!ge(u.iter(), v.iter()));\n+    assert!(!u.iter().lt(v.iter()));\n+    assert!(!u.iter().le(v.iter()));\n+    assert!(!u.iter().gt(v.iter()));\n+    assert!(!u.iter().ge(v.iter()));\n \n     let a = [0.0f64/0.0];\n     let b = [1.0f64];\n     let c = [2.0f64];\n \n-    assert!(lt(a.iter(), b.iter()) == (a[0] <  b[0]));\n-    assert!(le(a.iter(), b.iter()) == (a[0] <= b[0]));\n-    assert!(gt(a.iter(), b.iter()) == (a[0] >  b[0]));\n-    assert!(ge(a.iter(), b.iter()) == (a[0] >= b[0]));\n+    assert!(a.iter().lt(b.iter()) == (a[0] <  b[0]));\n+    assert!(a.iter().le(b.iter()) == (a[0] <= b[0]));\n+    assert!(a.iter().gt(b.iter()) == (a[0] >  b[0]));\n+    assert!(a.iter().ge(b.iter()) == (a[0] >= b[0]));\n \n-    assert!(lt(c.iter(), b.iter()) == (c[0] <  b[0]));\n-    assert!(le(c.iter(), b.iter()) == (c[0] <= b[0]));\n-    assert!(gt(c.iter(), b.iter()) == (c[0] >  b[0]));\n-    assert!(ge(c.iter(), b.iter()) == (c[0] >= b[0]));\n+    assert!(c.iter().lt(b.iter()) == (c[0] <  b[0]));\n+    assert!(c.iter().le(b.iter()) == (c[0] <= b[0]));\n+    assert!(c.iter().gt(b.iter()) == (c[0] >  b[0]));\n+    assert!(c.iter().ge(b.iter()) == (c[0] >= b[0]));\n }\n \n #[test]\n fn test_multi_iter() {\n     let xs = [1,2,3,4];\n     let ys = [4,3,2,1];\n-    assert!(eq(xs.iter(), ys.iter().rev()));\n-    assert!(lt(xs.iter(), xs.iter().skip(2)));\n+    assert!(xs.iter().eq(ys.iter().rev()));\n+    assert!(xs.iter().lt(xs.iter().skip(2)));\n }\n \n #[test]"}]}