{"sha": "f79a2a3990e88cba2a2d4c55828a97d2293d6992", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3OWEyYTM5OTBlODhjYmEyYTJkNGM1NTgyOGE5N2QyMjkzZDY5OTI=", "commit": {"author": {"name": "Mateusz Gacek", "email": "96mateusz.gacek@gmail.com", "date": "2021-05-05T11:52:03Z"}, "committer": {"name": "Mateusz Gacek", "email": "96mateusz.gacek@gmail.com", "date": "2021-05-05T11:52:03Z"}, "message": "needless_collect: use `node_type_opt` instead of `node_type`\n\nIt may prevent future ICEs.", "tree": {"sha": "fff75114b27ad789d121e290f6de03a1b6d97338", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fff75114b27ad789d121e290f6de03a1b6d97338"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f79a2a3990e88cba2a2d4c55828a97d2293d6992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f79a2a3990e88cba2a2d4c55828a97d2293d6992", "html_url": "https://github.com/rust-lang/rust/commit/f79a2a3990e88cba2a2d4c55828a97d2293d6992", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f79a2a3990e88cba2a2d4c55828a97d2293d6992/comments", "author": {"login": "mgacek8", "id": 24357739, "node_id": "MDQ6VXNlcjI0MzU3NzM5", "avatar_url": "https://avatars.githubusercontent.com/u/24357739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgacek8", "html_url": "https://github.com/mgacek8", "followers_url": "https://api.github.com/users/mgacek8/followers", "following_url": "https://api.github.com/users/mgacek8/following{/other_user}", "gists_url": "https://api.github.com/users/mgacek8/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgacek8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgacek8/subscriptions", "organizations_url": "https://api.github.com/users/mgacek8/orgs", "repos_url": "https://api.github.com/users/mgacek8/repos", "events_url": "https://api.github.com/users/mgacek8/events{/privacy}", "received_events_url": "https://api.github.com/users/mgacek8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mgacek8", "id": 24357739, "node_id": "MDQ6VXNlcjI0MzU3NzM5", "avatar_url": "https://avatars.githubusercontent.com/u/24357739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgacek8", "html_url": "https://github.com/mgacek8", "followers_url": "https://api.github.com/users/mgacek8/followers", "following_url": "https://api.github.com/users/mgacek8/following{/other_user}", "gists_url": "https://api.github.com/users/mgacek8/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgacek8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgacek8/subscriptions", "organizations_url": "https://api.github.com/users/mgacek8/orgs", "repos_url": "https://api.github.com/users/mgacek8/repos", "events_url": "https://api.github.com/users/mgacek8/events{/privacy}", "received_events_url": "https://api.github.com/users/mgacek8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1835d8a2383c8ae3d26cdcba594fdb933a41f3fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1835d8a2383c8ae3d26cdcba594fdb933a41f3fb", "html_url": "https://github.com/rust-lang/rust/commit/1835d8a2383c8ae3d26cdcba594fdb933a41f3fb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9662a0b22a3ab563629a4b9e5e79f56395efb399", "filename": "clippy_lints/src/loops/needless_collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f79a2a3990e88cba2a2d4c55828a97d2293d6992/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f79a2a3990e88cba2a2d4c55828a97d2293d6992/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs?ref=f79a2a3990e88cba2a2d4c55828a97d2293d6992", "patch": "@@ -27,7 +27,7 @@ fn check_needless_collect_direct_usage<'tcx>(expr: &'tcx Expr<'_>, cx: &LateCont\n         if chain_method.ident.name == sym!(collect) && is_trait_method(cx, &args[0], sym::Iterator);\n         if let Some(generic_args) = chain_method.args;\n         if let Some(GenericArg::Type(ref ty)) = generic_args.args.get(0);\n-        let ty = cx.typeck_results().node_type(ty.hir_id);\n+        if let Some(ty) = cx.typeck_results().node_type_opt(ty.hir_id);\n         if is_type_diagnostic_item(cx, ty, sym::vec_type)\n             || is_type_diagnostic_item(cx, ty, sym::vecdeque_type)\n             || match_type(cx, ty, &paths::BTREEMAP)\n@@ -82,7 +82,7 @@ fn check_needless_collect_indirect_usage<'tcx>(expr: &'tcx Expr<'_>, cx: &LateCo\n                 if let ExprKind::MethodCall(method_name, collect_span, &[ref iter_source], ..) = init_expr.kind;\n                 if method_name.ident.name == sym!(collect) && is_trait_method(cx, init_expr, sym::Iterator);\n                 if let Some(hir_id) = get_hir_id(*ty, method_name.args);\n-                if let ty = cx.typeck_results().node_type(hir_id);\n+                if let Some(ty) = cx.typeck_results().node_type_opt(hir_id);\n                 if is_type_diagnostic_item(cx, ty, sym::vec_type) ||\n                     is_type_diagnostic_item(cx, ty, sym::vecdeque_type) ||\n                     is_type_diagnostic_item(cx, ty, sym::BinaryHeap) ||"}]}