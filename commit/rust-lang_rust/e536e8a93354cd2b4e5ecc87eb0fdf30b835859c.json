{"sha": "e536e8a93354cd2b4e5ecc87eb0fdf30b835859c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MzZlOGE5MzM1NGNkMmI0ZTVlY2M4N2ViMGZkZjMwYjgzNTg1OWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T04:16:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T04:16:53Z"}, "message": "rustdoc: Don't escape characters between backticks", "tree": {"sha": "e107ba6c7641b7b406d384a3a0958f97a3e488e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e107ba6c7641b7b406d384a3a0958f97a3e488e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e536e8a93354cd2b4e5ecc87eb0fdf30b835859c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e536e8a93354cd2b4e5ecc87eb0fdf30b835859c", "html_url": "https://github.com/rust-lang/rust/commit/e536e8a93354cd2b4e5ecc87eb0fdf30b835859c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e536e8a93354cd2b4e5ecc87eb0fdf30b835859c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae5ea85c361e2b383b01c1101d731843795ea0cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5ea85c361e2b383b01c1101d731843795ea0cb", "html_url": "https://github.com/rust-lang/rust/commit/ae5ea85c361e2b383b01c1101d731843795ea0cb"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "f1a32d5a01926cc2e57513341c3ef2cf2e9e45c4", "filename": "src/rustdoc/html_escape_pass.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e536e8a93354cd2b4e5ecc87eb0fdf30b835859c/src%2Frustdoc%2Fhtml_escape_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e536e8a93354cd2b4e5ecc87eb0fdf30b835859c/src%2Frustdoc%2Fhtml_escape_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fhtml_escape_pass.rs?ref=e536e8a93354cd2b4e5ecc87eb0fdf30b835859c", "patch": "@@ -7,6 +7,20 @@ fn mk_pass() -> pass {\n }\n \n fn escape(s: str) -> str {\n+    let parts = str::split_char(s, '`');\n+    let i = 0;\n+    let parts = vec::map(parts) {|part|\n+        i += 1;\n+        if i % 2 != 0 {\n+            escape_(part)\n+        } else {\n+            part\n+        }\n+    };\n+    ret str::connect(parts, \"`\");\n+}\n+\n+fn escape_(s: str) -> str {\n     let s = str::replace(s, \"&\", \"&amp;\");\n     let s = str::replace(s, \"<\", \"&lt;\");\n     let s = str::replace(s, \">\", \"&gt;\");\n@@ -22,3 +36,9 @@ fn test() {\n     assert escape(\"\\\"\") == \"&quot;\";\n     assert escape(\"<>&\\\"\") == \"&lt;&gt;&amp;&quot;\";\n }\n+\n+#[test]\n+fn should_not_escape_characters_in_backticks() {\n+    // Markdown will quote things in backticks itself\n+    assert escape(\"<`<`<`<`<\") == \"&lt;`<`&lt;`<`&lt;\";\n+}"}]}