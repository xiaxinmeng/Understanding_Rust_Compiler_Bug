{"sha": "10dad22b6669defeee296a91b2e2c92f8fd46e43", "node_id": "C_kwDOAAsO6NoAKDEwZGFkMjJiNjY2OWRlZmVlZTI5NmE5MWIyZTJjOTJmOGZkNDZlNDM", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-02-16T19:48:39Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-10-22T02:36:00Z"}, "message": "Only apply `ProceduralMasquerade` hack to older versions of `rental`\n\nThe latest version of `rental` (v0.5.6) contains a fix that allows it to\ncompile without relying on the pretty-print back-compat hack.\n\nHopefully, there are no longer any crates relying on the affected\nversions of the (much less popular) `procedural-masquerade` crate. This\nshould allow us to target the pretty-print back-compat hack specifically\nto older versions of `rental`, and specifically mention upgrading to\n`rental` v0.5.6 in the lint message.", "tree": {"sha": "1acd8dfdd452091c3859419e2112f56a63dcd10a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1acd8dfdd452091c3859419e2112f56a63dcd10a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10dad22b6669defeee296a91b2e2c92f8fd46e43", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmNTVxEACgkQtAh+UQ6Y\nsWRYxg//eKtf8HXW/O8UWGRxRZtFNYvs7d8/MZoLPwU86qLpwnS6J3jDwxy/+xh1\nDyyen6BkeBZzbKdPGsB783aN4XV72G3vQL1Om8SMAJHNAqENRIdw1r84vY2jvjq2\nxQJcoTpvu40xRlJ7FvO9tDM4Kwh2k1dhWBM4XHRytQ57bRNh/RS4to+7QC3lBW77\n4E0ePce8RP+L2ZN69DFE3zm5GD9/Eks+hO42nlYyvn3pndSRdko+N0iHMI7a6Pr/\n8AIjRuFZvM8aBPEBlg1n2xCtyBhdN/GHGil3qJwZdbfM8L1yF65+lWXBHzuXWtuK\nuS1Uhe17n2R3+quOeFuEzUJpWHBqsPLA8QLMi0aLUF8OGL1u3AmBaAyzw5CVIlkg\ncaR5Lo84dd6bMiiajdpk16FscFfOOFzN/wcuoSJ1Pg7JNTPWSsRdUzNVdp5dDVjR\n6tX2MKZUV9xd4ycWu5DiEwjuX/gqUIHp7vDRcM5pOgFCGyYYw9Y4MWd9AcHARmtd\n9HyfQpcgeynOneCS80lXPxOnK5YphFTqnrV+S6l2ofOszNwofdB5Y7JRR793Fvbf\nFjLBfliCXu1gqSQToTV1KHd3jCa3RO+Up81zN3tvG1D+bjsjWodcKnPagk66Jkz8\n92QaL0oaVqzCS8VRhKuU2ocj7g+S0eyDI4EJAmtMiB0vKSIdXIY=\n=7Aax\n-----END PGP SIGNATURE-----", "payload": "tree 1acd8dfdd452091c3859419e2112f56a63dcd10a\nparent 5c8bff74bc1c52bef0c79f3689bb227f51f3e82d\nauthor Aaron Hill <aa1ronham@gmail.com> 1645040919 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1666406160 -0500\n\nOnly apply `ProceduralMasquerade` hack to older versions of `rental`\n\nThe latest version of `rental` (v0.5.6) contains a fix that allows it to\ncompile without relying on the pretty-print back-compat hack.\n\nHopefully, there are no longer any crates relying on the affected\nversions of the (much less popular) `procedural-masquerade` crate. This\nshould allow us to target the pretty-print back-compat hack specifically\nto older versions of `rental`, and specifically mention upgrading to\n`rental` v0.5.6 in the lint message.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10dad22b6669defeee296a91b2e2c92f8fd46e43", "html_url": "https://github.com/rust-lang/rust/commit/10dad22b6669defeee296a91b2e2c92f8fd46e43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10dad22b6669defeee296a91b2e2c92f8fd46e43/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c8bff74bc1c52bef0c79f3689bb227f51f3e82d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c8bff74bc1c52bef0c79f3689bb227f51f3e82d", "html_url": "https://github.com/rust-lang/rust/commit/5c8bff74bc1c52bef0c79f3689bb227f51f3e82d"}], "stats": {"total": 472, "additions": 356, "deletions": 116}, "files": [{"sha": "c8de60ccb89b9830a5000f8ae0f7f970fac5fa1a", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -22,7 +22,7 @@ use rustc_span::edition::Edition;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnKind, LocalExpnId};\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{BytePos, FileName, Span, DUMMY_SP};\n+use rustc_span::{BytePos, FileName, RealFileName, Span, DUMMY_SP};\n use smallvec::{smallvec, SmallVec};\n \n use std::default::Default;\n@@ -1423,16 +1423,40 @@ fn pretty_printing_compatibility_hack(item: &Item, sess: &ParseSess) -> bool {\n         if let ast::ItemKind::Enum(enum_def, _) = &item.kind {\n             if let [variant] = &*enum_def.variants {\n                 if variant.ident.name == sym::Input {\n-                    sess.buffer_lint_with_diagnostic(\n-                        &PROC_MACRO_BACK_COMPAT,\n-                        item.ident.span,\n-                        ast::CRATE_NODE_ID,\n-                        \"using `procedural-masquerade` crate\",\n-                        BuiltinLintDiagnostics::ProcMacroBackCompat(\n-                        \"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. \\\n-                        Versions of this crate below 0.1.7 will eventually stop compiling.\".to_string())\n-                    );\n-                    return true;\n+                    let filename = sess.source_map().span_to_filename(item.ident.span);\n+                    if let FileName::Real(RealFileName::LocalPath(path)) = filename {\n+                        if let Some(c) = path\n+                            .components()\n+                            .flat_map(|c| c.as_os_str().to_str())\n+                            .find(|c| c.starts_with(\"rental\") || c.starts_with(\"allsorts-rental\"))\n+                        {\n+                            let crate_matches = if c.starts_with(\"allsorts-rental\") {\n+                                true\n+                            } else {\n+                                let mut version = c.trim_start_matches(\"rental-\").split(\".\");\n+                                version.next() == Some(\"0\")\n+                                    && version.next() == Some(\"5\")\n+                                    && version\n+                                        .next()\n+                                        .and_then(|c| c.parse::<u32>().ok())\n+                                        .map_or(false, |v| v < 6)\n+                            };\n+\n+                            if crate_matches {\n+                                sess.buffer_lint_with_diagnostic(\n+                                        &PROC_MACRO_BACK_COMPAT,\n+                                        item.ident.span,\n+                                        ast::CRATE_NODE_ID,\n+                                        \"using an old version of `rental`\",\n+                                        BuiltinLintDiagnostics::ProcMacroBackCompat(\n+                                        \"older versions of the `rental` crate will stop compiling in future versions of Rust; \\\n+                                        please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\".to_string()\n+                                        )\n+                                    );\n+                                return true;\n+                            }\n+                        }\n+                    }\n                 }\n             }\n         }"}, {"sha": "a573c6e1c0b867d93e1e4fd73d7adfd610959b46", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -1,18 +1,11 @@\n // aux-build:test-macros.rs\n+// check-pass\n \n #[macro_use]\n extern crate test_macros;\n \n #[derive(Print)]\n enum ProceduralMasqueradeDummyType {\n-//~^ ERROR using\n-//~| WARN this was previously\n-//~| ERROR using\n-//~| WARN this was previously\n-//~| ERROR using\n-//~| WARN this was previously\n-//~| ERROR using\n-//~| WARN this was previously\n     Input\n }\n "}, {"sha": "ebb8e825e6a3b298d497d0db614837743539622c", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stderr", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/5c8bff74bc1c52bef0c79f3689bb227f51f3e82d/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c8bff74bc1c52bef0c79f3689bb227f51f3e82d/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr?ref=5c8bff74bc1c52bef0c79f3689bb227f51f3e82d", "patch": "@@ -1,91 +0,0 @@\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-\n-error: aborting due to 4 previous errors\n-\n-Future incompatibility report: Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-"}, {"sha": "8cd981e03f118755b7f77e0c958aee3471865f33", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stdout", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -1,22 +1,21 @@\n-PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n-PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\",\n-        span: #0 bytes(86..90),\n+        span: #0 bytes(100..104),\n     },\n     Ident {\n         ident: \"ProceduralMasqueradeDummyType\",\n-        span: #0 bytes(91..120),\n+        span: #0 bytes(105..134),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Ident {\n                 ident: \"Input\",\n-                span: #0 bytes(315..320),\n+                span: #0 bytes(141..146),\n             },\n         ],\n-        span: #0 bytes(121..322),\n+        span: #0 bytes(135..148),\n     },\n ]"}, {"sha": "f53e8fe8252f89456dee641f54f1d25458a2e852", "filename": "src/test/ui/proc-macro/pretty-print-hack-hide.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.rs?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,12 @@\n+// aux-build:test-macros.rs\n+// compile-flags: -Z span-debug\n+// check-pass\n+\n+#![no_std] // Don't load unnecessary hygiene information from std\n+extern crate std;\n+\n+#[macro_use] extern crate test_macros;\n+\n+include!(\"pretty-print-hack/rental-0.5.6/src/lib.rs\");\n+\n+fn main() {}"}, {"sha": "ea796bb26976830798d219c3ae56c7d9b19a8f78", "filename": "src/test/ui/proc-macro/pretty-print-hack-hide.stdout", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.stdout?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,21 @@\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]"}, {"sha": "9b1899e49220e16818f800e0f48008ed9872d3bf", "filename": "src/test/ui/proc-macro/pretty-print-hack-show.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,17 @@\n+// aux-build:test-macros.rs\n+// compile-flags: -Z span-debug\n+\n+#![no_std] // Don't load unnecessary hygiene information from std\n+extern crate std;\n+\n+#[macro_use] extern crate test_macros;\n+\n+mod first {\n+    include!(\"pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs\");\n+}\n+\n+mod second {\n+    include!(\"pretty-print-hack/rental-0.5.5/src/lib.rs\");\n+}\n+\n+fn main() {}"}, {"sha": "873054927c96279723f7b87ae31a908372109ca1", "filename": "src/test/ui/proc-macro/pretty-print-hack-show.stderr", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stderr?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,179 @@\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: aborting due to 8 previous errors\n+\n+Future incompatibility report: Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+"}, {"sha": "3d793d2a0145c984f27fa8092f21df04c2ba724e", "filename": "src/test/ui/proc-macro/pretty-print-hack-show.stdout", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stdout?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,44 @@\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]"}, {"sha": "9501980fa55dfc4456003b0bb5ee0ec221dd8c4d", "filename": "src/test/ui/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,14 @@\n+// ignore-test\n+\n+#[derive(Print)]\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+    Input\n+}"}, {"sha": "9501980fa55dfc4456003b0bb5ee0ec221dd8c4d", "filename": "src/test/ui/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,14 @@\n+// ignore-test\n+\n+#[derive(Print)]\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+    Input\n+}"}, {"sha": "9501980fa55dfc4456003b0bb5ee0ec221dd8c4d", "filename": "src/test/ui/proc-macro/pretty-print-hack/rental-0.5.6/src/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10dad22b6669defeee296a91b2e2c92f8fd46e43/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs?ref=10dad22b6669defeee296a91b2e2c92f8fd46e43", "patch": "@@ -0,0 +1,14 @@\n+// ignore-test\n+\n+#[derive(Print)]\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+    Input\n+}"}]}