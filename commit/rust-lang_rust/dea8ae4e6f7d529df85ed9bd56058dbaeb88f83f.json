{"sha": "dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYThhZTRlNmY3ZDUyOWRmODVlZDliZDU2MDU4ZGJhZWI4OGY4M2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-16T21:58:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-16T21:58:58Z"}, "message": "rustc: Resolve external impls defined in yet other crates. Issue #2196", "tree": {"sha": "40e9ac05cd4c5e8c0df908683d29599fa7bf02e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40e9ac05cd4c5e8c0df908683d29599fa7bf02e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f", "html_url": "https://github.com/rust-lang/rust/commit/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c461fc869c41f2f88eafc59e7c9238b267f31518", "url": "https://api.github.com/repos/rust-lang/rust/commits/c461fc869c41f2f88eafc59e7c9238b267f31518", "html_url": "https://github.com/rust-lang/rust/commit/c461fc869c41f2f88eafc59e7c9238b267f31518"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "b19473b60fe18bd4934ba7d01695fa4a3acf8bb6", "filename": "src/rustc/metadata/csearch.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f/src%2Frustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f/src%2Frustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fcsearch.rs?ref=dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f", "patch": "@@ -116,7 +116,9 @@ fn get_impls_for_mod(cstore: cstore::cstore, def: ast::def_id,\n                      name: option<ast::ident>)\n     -> @[@middle::resolve::_impl] {\n     let cdata = cstore::get_crate_data(cstore, def.crate);\n-    decoder::get_impls_for_mod(cdata, def.node, name)\n+    decoder::get_impls_for_mod(cdata, def.node, name) {|cnum|\n+        cstore::get_crate_data(cstore, cnum)\n+    }\n }\n \n fn get_iface_methods(tcx: ty::ctxt, def: ast::def_id) -> @[ty::method] {"}, {"sha": "06881630bc2b07941e616cba5fc22176441c87e3", "filename": "src/rustc/metadata/decoder.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f/src%2Frustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f/src%2Frustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fdecoder.rs?ref=dea8ae4e6f7d529df85ed9bd56058dbaeb88f83f", "patch": "@@ -397,18 +397,27 @@ fn item_impl_methods(cdata: cmd, item: ebml::doc, base_tps: uint)\n }\n \n fn get_impls_for_mod(cdata: cmd, m_id: ast::node_id,\n-                     name: option<ast::ident>)\n+                     name: option<ast::ident>,\n+                     get_cdata: fn(ast::crate_num) -> cmd)\n     -> @[@middle::resolve::_impl] {\n     let data = cdata.data;\n     let mod_item = lookup_item(m_id, data);\n     let mut result = [];\n     ebml::tagged_docs(mod_item, tag_mod_impl) {|doc|\n-        let did = translate_def_id(cdata, parse_def_id(ebml::doc_data(doc)));\n-        let item = lookup_item(did.node, data), nm = item_name(item);\n+        let did = parse_def_id(ebml::doc_data(doc));\n+        let local_did = translate_def_id(cdata, did);\n+        // The impl may be defined in a different crate. Ask the caller\n+        // to give us the metadata\n+        let impl_cdata = get_cdata(local_did.crate);\n+        let impl_data = impl_cdata.data;\n+        let item = lookup_item(local_did.node, impl_data);\n+        let nm = item_name(item);\n         if alt name { some(n) { n == nm } none { true } } {\n             let base_tps = item_ty_param_count(item);\n-            result += [@{did: did, ident: nm,\n-                         methods: item_impl_methods(cdata, item, base_tps)}];\n+            result += [@{\n+                did: local_did, ident: nm,\n+                methods: item_impl_methods(impl_cdata, item, base_tps)\n+            }];\n         }\n     }\n     @result"}]}