{"sha": "dc3de7cb2ae9d886ddac91d71f2e9517ff123e90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjM2RlN2NiMmFlOWQ4ODZkZGFjOTFkNzFmMmU5NTE3ZmYxMjNlOTA=", "commit": {"author": {"name": "Nathan West", "email": "Lucretiel@gmail.com", "date": "2020-05-20T20:49:31Z"}, "committer": {"name": "Nathan West", "email": "Lucretiel@gmail.com", "date": "2020-05-20T20:49:31Z"}, "message": "Add fast-path optimization for Ipv4Addr::fmt", "tree": {"sha": "91df1129739cdefc1f0eb0229d5ddd41bae3ab09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91df1129739cdefc1f0eb0229d5ddd41bae3ab09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc3de7cb2ae9d886ddac91d71f2e9517ff123e90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc3de7cb2ae9d886ddac91d71f2e9517ff123e90", "html_url": "https://github.com/rust-lang/rust/commit/dc3de7cb2ae9d886ddac91d71f2e9517ff123e90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc3de7cb2ae9d886ddac91d71f2e9517ff123e90/comments", "author": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "672b272077561ca7b5027a8aff9ea2957c7d4c21", "url": "https://api.github.com/repos/rust-lang/rust/commits/672b272077561ca7b5027a8aff9ea2957c7d4c21", "html_url": "https://github.com/rust-lang/rust/commit/672b272077561ca7b5027a8aff9ea2957c7d4c21"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "6e2478b8308af7d443c6986bbe8166c9748d3fc8", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/dc3de7cb2ae9d886ddac91d71f2e9517ff123e90/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc3de7cb2ae9d886ddac91d71f2e9517ff123e90/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=dc3de7cb2ae9d886ddac91d71f2e9517ff123e90", "patch": "@@ -856,16 +856,23 @@ impl From<Ipv6Addr> for IpAddr {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Display for Ipv4Addr {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        const IPV4_BUF_LEN: usize = 15; // Long enough for the longest possible IPv4 address\n-        let mut buf = [0u8; IPV4_BUF_LEN];\n-        let mut buf_slice = &mut buf[..];\n         let octets = self.octets();\n-        // Note: The call to write should never fail, hence the unwrap\n-        write!(buf_slice, \"{}.{}.{}.{}\", octets[0], octets[1], octets[2], octets[3]).unwrap();\n-        let len = IPV4_BUF_LEN - buf_slice.len();\n-        // This unsafe is OK because we know what is being written to the buffer\n-        let buf = unsafe { crate::str::from_utf8_unchecked(&buf[..len]) };\n-        fmt.pad(buf)\n+        // Fast Path: if there's no alignment stuff, write directly to the buffer\n+        if fmt.precision().is_none() && fmt.width().is_none() {\n+            write!(fmt, \"{}.{}.{}.{}\", octets[0], octets[1], octets[2], octets[3])\n+        } else {\n+            const IPV4_BUF_LEN: usize = 15; // Long enough for the longest possible IPv4 address\n+            let mut buf = [0u8; IPV4_BUF_LEN];\n+            let mut buf_slice = &mut buf[..];\n+\n+            // Note: The call to write should never fail, hence the unwrap\n+            write!(buf_slice, \"{}.{}.{}.{}\", octets[0], octets[1], octets[2], octets[3]).unwrap();\n+            let len = IPV4_BUF_LEN - buf_slice.len();\n+\n+            // This unsafe is OK because we know what is being written to the buffer\n+            let buf = unsafe { crate::str::from_utf8_unchecked(&buf[..len]) };\n+            fmt.pad(buf)\n+        }\n     }\n }\n "}]}