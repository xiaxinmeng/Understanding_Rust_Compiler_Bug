{"sha": "ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNDE2ZjNjNmU5MGE4ZDJiMmY5ZDE3MTNkMmRiNGRkY2UxMmRmNjU=", "commit": {"author": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-09T14:35:07Z"}, "committer": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-09T14:35:07Z"}, "message": "clean up param hint checking", "tree": {"sha": "257a014a6f062f680156e448543b01ee6f400e05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/257a014a6f062f680156e448543b01ee6f400e05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65", "html_url": "https://github.com/rust-lang/rust/commit/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65/comments", "author": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cba694c60276f7543ee9ed1dddf3fe93209f527f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cba694c60276f7543ee9ed1dddf3fe93209f527f", "html_url": "https://github.com/rust-lang/rust/commit/cba694c60276f7543ee9ed1dddf3fe93209f527f"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "b1661d2383f3345630c330dfed46d9d9cd67cd29", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65", "patch": "@@ -235,19 +235,7 @@ fn should_show_param_hint(\n     param_name: &str,\n     argument: &ast::Expr,\n ) -> bool {\n-    let argument_string = {\n-        let mut arg_string = argument.syntax().to_string();\n-        if arg_string.get(0..5) == Some(\"&mut \") {\n-            arg_string = arg_string[5..].to_string();\n-        } else if arg_string.get(0..1) == Some(\"&\") {\n-            arg_string = arg_string[1..].to_string();\n-        }\n-        arg_string\n-    };\n-    if param_name.is_empty()\n-        || argument_string.ends_with(&param_name)\n-        || argument_string.starts_with(&param_name)\n-    {\n+    if param_name.is_empty() || is_argument_similar_to_param(argument, param_name) {\n         return false;\n     }\n \n@@ -259,15 +247,27 @@ fn should_show_param_hint(\n \n     // avoid displaying hints for common functions like map, filter, etc.\n     // or other obvious words used in std\n+    if parameters_len == 1 && is_obvious_param(param_name) {\n+        return false;\n+    }\n+    true\n+}\n+\n+fn is_argument_similar_to_param(argument: &ast::Expr, param_name: &str) -> bool {\n+    let argument_string = if let ast::Expr::RefExpr(ref_expr) = argument {\n+        ref_expr.syntax().last_token().expect(\"RefExpr should have a last_token\").to_string()\n+    } else {\n+        argument.syntax().to_string()\n+    };\n+    argument_string.starts_with(&param_name) || argument_string.ends_with(&param_name)\n+}\n+\n+fn is_obvious_param(param_name: &str) -> bool {\n     let is_obvious_param_name = match param_name {\n         \"predicate\" | \"value\" | \"pat\" | \"rhs\" | \"other\" => true,\n         _ => false,\n     };\n-    if parameters_len == 1 && (param_name.len() == 1 || is_obvious_param_name) {\n-        return false;\n-    }\n-\n-    true\n+    param_name.len() == 1 || is_obvious_param_name\n }\n \n fn get_fn_signature(sema: &Semantics<RootDatabase>, expr: &ast::Expr) -> Option<FunctionSignature> {"}]}