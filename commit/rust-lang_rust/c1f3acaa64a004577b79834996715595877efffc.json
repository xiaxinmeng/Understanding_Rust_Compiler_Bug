{"sha": "c1f3acaa64a004577b79834996715595877efffc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZjNhY2FhNjRhMDA0NTc3Yjc5ODM0OTk2NzE1NTk1ODc3ZWZmZmM=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2014-12-29T07:54:51Z"}, "committer": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2014-12-29T07:54:51Z"}, "message": "Marked find and rfind as stable", "tree": {"sha": "6eb0e77438d9392fb1798e614388fef13ec0c222", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eb0e77438d9392fb1798e614388fef13ec0c222"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1f3acaa64a004577b79834996715595877efffc", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1f3acaa64a004577b79834996715595877efffc", "html_url": "https://github.com/rust-lang/rust/commit/c1f3acaa64a004577b79834996715595877efffc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1f3acaa64a004577b79834996715595877efffc/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72c8f3772bdca40ff2be2908aaf6b6a73d1c7821", "url": "https://api.github.com/repos/rust-lang/rust/commits/72c8f3772bdca40ff2be2908aaf6b6a73d1c7821", "html_url": "https://github.com/rust-lang/rust/commit/72c8f3772bdca40ff2be2908aaf6b6a73d1c7821"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "eeec7f767ab15a0e617882f9749def92977913bc", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1f3acaa64a004577b79834996715595877efffc/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f3acaa64a004577b79834996715595877efffc/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=c1f3acaa64a004577b79834996715595877efffc", "patch": "@@ -1475,7 +1475,7 @@ pub trait StrExt for Sized?: ops::Slice<uint, str> {\n     /// let x: &[_] = &['1', '2'];\n     /// assert_eq!(s.find(x), None);\n     /// ```\n-    #[unstable = \"might be superseded by match_indices\"]\n+    #[stable]\n     fn find<P: CharEq>(&self, pat: P) -> Option<uint> {\n         core_str::StrExt::find(self[], pat)\n     }\n@@ -1503,7 +1503,7 @@ pub trait StrExt for Sized?: ops::Slice<uint, str> {\n     /// let x: &[_] = &['1', '2'];\n     /// assert_eq!(s.rfind(x), None);\n     /// ```\n-    #[unstable = \"might be superseded by match_indices\"]\n+    #[stable]\n     fn rfind<P: CharEq>(&self, pat: P) -> Option<uint> {\n         core_str::StrExt::rfind(self[], pat)\n     }"}]}