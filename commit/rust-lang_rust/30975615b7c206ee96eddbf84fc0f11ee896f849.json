{"sha": "30975615b7c206ee96eddbf84fc0f11ee896f849", "node_id": "C_kwDOAAsO6NoAKDMwOTc1NjE1YjdjMjA2ZWU5NmVkZGJmODRmYzBmMTFlZTg5NmY4NDk", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2022-03-02T00:10:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-02T00:10:49Z"}, "message": "rust-lang/portable-simd#250: Add bitmask i{N <8} -> u8 impls\n\n...and copy the notes for why they're legal.", "tree": {"sha": "6dc1ae2b924188553d1fcefd0a922cc96730d93a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dc1ae2b924188553d1fcefd0a922cc96730d93a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30975615b7c206ee96eddbf84fc0f11ee896f849", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiHrYJCRBK7hj4Ov3rIwAA/ZIIADyx1GV7HZ4q2HHerw7eUilu\nHbLmJboum8ne83Lg+H/3/mTgez9zMKqLUdwTgdB89srq4704O1WgLSj/jJ/isqks\nPXhCfanWgfHEbJp5sCjJyzyCuW2kqhayWrd7er8ZzkxtwU+jLjnWap5XZRp8hmHR\nKauDLaNGBgUQxWDxEmAolxZavJHwhyGBnKX+6OmLh8w0SqPNs/gOqmx8a7M+xSrx\nnPXED2d2Bb1Vs0kJObejYC3LWF/yoCS3AM55bQRy5+EZuXX1RAN+u/mfD5WAVmaT\n1dXT6UvI4lDgAAM70Bti3jOlhWAmwwe5aVCdXtGdVn5sYW9Hl4DjzvUhSr+YuiA=\n=v2q7\n-----END PGP SIGNATURE-----\n", "payload": "tree 6dc1ae2b924188553d1fcefd0a922cc96730d93a\nparent a5789d17bfc8bb794ea6e3f1497b8026d07edd60\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1646179849 -0800\ncommitter GitHub <noreply@github.com> 1646179849 -0800\n\nrust-lang/portable-simd#250: Add bitmask i{N <8} -> u8 impls\n\n...and copy the notes for why they're legal."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30975615b7c206ee96eddbf84fc0f11ee896f849", "html_url": "https://github.com/rust-lang/rust/commit/30975615b7c206ee96eddbf84fc0f11ee896f849", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30975615b7c206ee96eddbf84fc0f11ee896f849/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5789d17bfc8bb794ea6e3f1497b8026d07edd60", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5789d17bfc8bb794ea6e3f1497b8026d07edd60", "html_url": "https://github.com/rust-lang/rust/commit/a5789d17bfc8bb794ea6e3f1497b8026d07edd60"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "47edff4a66afc93dcb79869379646eaf6881c9a9", "filename": "crates/core_simd/src/intrinsics.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/30975615b7c206ee96eddbf84fc0f11ee896f849/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30975615b7c206ee96eddbf84fc0f11ee896f849/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs?ref=30975615b7c206ee96eddbf84fc0f11ee896f849", "patch": "@@ -130,6 +130,14 @@ extern \"platform-intrinsic\" {\n     pub(crate) fn simd_reduce_xor<T, U>(x: T) -> U;\n \n     // truncate integer vector to bitmask\n+    // `fn simd_bitmask(vector) -> unsigned integer` takes a vector of integers and\n+    // returns either an unsigned integer or array of `u8`.\n+    // Every element in the vector becomes a single bit in the returned bitmask.\n+    // If the vector has less than 8 lanes, a u8 is returned with zeroed trailing bits.\n+    // The bit order of the result depends on the byte endianness. LSB-first for little\n+    // endian and MSB-first for big endian.\n+    //\n+    // UB if called on a vector with values other than 0 and -1.\n     #[allow(unused)]\n     pub(crate) fn simd_bitmask<T, U>(x: T) -> U;\n "}, {"sha": "c263f6a4eec3878145b8b71fb123ecb937144d36", "filename": "crates/core_simd/src/masks/to_bitmask.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/30975615b7c206ee96eddbf84fc0f11ee896f849/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30975615b7c206ee96eddbf84fc0f11ee896f849/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs?ref=30975615b7c206ee96eddbf84fc0f11ee896f849", "patch": "@@ -50,6 +50,9 @@ macro_rules! impl_integer_intrinsic {\n }\n \n impl_integer_intrinsic! {\n+    unsafe impl ToBitMask<BitMask=u8> for Mask<_, 1>\n+    unsafe impl ToBitMask<BitMask=u8> for Mask<_, 2>\n+    unsafe impl ToBitMask<BitMask=u8> for Mask<_, 4>\n     unsafe impl ToBitMask<BitMask=u8> for Mask<_, 8>\n     unsafe impl ToBitMask<BitMask=u16> for Mask<_, 16>\n     unsafe impl ToBitMask<BitMask=u32> for Mask<_, 32>"}]}