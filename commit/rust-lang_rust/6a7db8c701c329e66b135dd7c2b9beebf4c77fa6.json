{"sha": "6a7db8c701c329e66b135dd7c2b9beebf4c77fa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhN2RiOGM3MDFjMzI5ZTY2YjEzNWRkN2MyYjliZWViZjRjNzdmYTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-07T15:01:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-07T15:45:57Z"}, "message": "Share cache cleaning logic between OSes", "tree": {"sha": "6c213c6ba2429dcab1a7b17bd29ab26f9901d8e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c213c6ba2429dcab1a7b17bd29ab26f9901d8e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6", "html_url": "https://github.com/rust-lang/rust/commit/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e7995eeb7b7ab4cf0d80ddfa2d20e506216f895", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e7995eeb7b7ab4cf0d80ddfa2d20e506216f895", "html_url": "https://github.com/rust-lang/rust/commit/5e7995eeb7b7ab4cf0d80ddfa2d20e506216f895"}], "stats": {"total": 71, "additions": 49, "deletions": 22}, "files": [{"sha": "84c04ee722f26dfb43725db2f57a19a3937a1a89", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=6a7db8c701c329e66b135dd7c2b9beebf4c77fa6", "patch": "@@ -56,28 +56,13 @@ jobs:\n         with:\n           command: test\n \n-      - name: Prepare build directory for cache (UNIX)\n-        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'\n-        run: |\n-          find ./target/debug -maxdepth 1 -type f -delete \\\n-          && rm -fr ./target/debug/{deps,.fingerprint}/{*ra_*,*heavy_test*,*gen_lsp*,*thread_worker*} \\\n-          && rm -f  ./target/.rustc_info.json \\\n-          && rm ./target/.slow_tests_cookie\n+      - name: Prepare cache\n+        run: cargo xtask pre-cache\n \n-      - name: Prepare build directory for cache (Windows)\n+      - name: Prepare cache 2\n         if: matrix.os == 'windows-latest'\n-        run: >-\n-          (Get-ChildItem ./target/debug -Recurse -Depth 1 -File | Remove-Item) -and\n-          (Remove-Item -Force -Recurse ./target/debug/deps/*ra_*) -and\n-          (Remove-Item -Force -Recurse ./target/debug/deps/*heavy_test*) -and\n-          (Remove-Item -Force -Recurse ./target/debug/deps/*gen_lsp*) -and\n-          (Remove-Item -Force -Recurse ./target/debug/deps/*thread_worker*) -and\n-          (Remove-Item -Force -Recurse ./target/debug/.fingerprint/*ra_*) -and\n-          (Remove-Item -Force -Recurse ./target/debug/.fingerprint/*heavy_test*) -and\n-          (Remove-Item -Force -Recurse ./target/debug/.fingerprint/*gen_lsp*) -and\n-          (Remove-Item -Force -Recurse ./target/debug/.fingerprint/*thread_worker*) -and\n-          (Remove-Item -Force ./target/.rustc_info.json) -and\n-          (Remove-Item ./target/.slow_tests_cookie)\n+        run: Remove-Item ./target/debug/xtask.exe\n+\n \n   type-script:\n     name: TypeScript"}, {"sha": "e46c21db72738703d0a3637971b303c53c728db6", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=6a7db8c701c329e66b135dd7c2b9beebf4c77fa6", "patch": "@@ -9,7 +9,7 @@ mod ast_src;\n \n use anyhow::Context;\n use std::{\n-    env,\n+    env, fs,\n     path::{Path, PathBuf},\n     process::{Command, Stdio},\n };\n@@ -101,3 +101,41 @@ pub fn run_fuzzer() -> Result<()> {\n \n     run(\"rustup run nightly -- cargo fuzz run parser\", \"./crates/ra_syntax\")\n }\n+\n+/// Cleans the `./target` dir after the build such that only\n+/// dependencies are cached on CI.\n+pub fn run_pre_cache() -> Result<()> {\n+    let slow_tests_cookie = Path::new(\"./target/.slow_tests_cookie\");\n+    if !slow_tests_cookie.exists() {\n+        panic!(\"slow tests were skipped on CI!\")\n+    }\n+    rm_rf(slow_tests_cookie)?;\n+\n+    for entry in Path::new(\"./target/debug\").read_dir()? {\n+        let entry = entry?;\n+        if entry.file_type().map(|it| it.is_file()).ok() == Some(true) {\n+            // Can't delete yourself on windows :-(\n+            if !entry.path().ends_with(\"xtask.exe\") {\n+                rm_rf(&entry.path())?\n+            }\n+        }\n+    }\n+\n+    fs::remove_file(\"./target/.rustc_info.json\")?;\n+    let to_delete = [\"ra_\", \"heavy_test\"];\n+    for &dir in [\"./target/debug/deps\", \"target/debug/.fingerprint\"].iter() {\n+        for entry in Path::new(dir).read_dir()? {\n+            let entry = entry?;\n+            if to_delete.iter().any(|&it| entry.path().display().to_string().contains(it)) {\n+                rm_rf(&entry.path())?\n+            }\n+        }\n+    }\n+\n+    Ok(())\n+}\n+\n+fn rm_rf(path: &Path) -> Result<()> {\n+    if path.is_file() { fs::remove_file(path) } else { fs::remove_dir_all(path) }\n+        .with_context(|| format!(\"failed to remove {:?}\", path))\n+}"}, {"sha": "053453e6ebb11f2d61cc2cf29165302f5f7882b3", "filename": "xtask/src/main.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7db8c701c329e66b135dd7c2b9beebf4c77fa6/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=6a7db8c701c329e66b135dd7c2b9beebf4c77fa6", "patch": "@@ -14,7 +14,7 @@ use pico_args::Arguments;\n use xtask::{\n     codegen::{self, Mode},\n     install::{ClientOpt, InstallCmd, ServerOpt},\n-    pre_commit, run_clippy, run_fuzzer, run_rustfmt, Result,\n+    pre_commit, run_clippy, run_fuzzer, run_pre_cache, run_rustfmt, Result,\n };\n \n fn main() -> Result<()> {\n@@ -88,6 +88,10 @@ FLAGS:\n             args.finish()?;\n             run_fuzzer()\n         }\n+        \"pre-cache\" => {\n+            args.finish()?;\n+            run_pre_cache()\n+        }\n         _ => {\n             eprintln!(\n                 \"\\"}]}