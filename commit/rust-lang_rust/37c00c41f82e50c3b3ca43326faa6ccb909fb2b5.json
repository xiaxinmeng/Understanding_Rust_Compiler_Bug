{"sha": "37c00c41f82e50c3b3ca43326faa6ccb909fb2b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YzAwYzQxZjgyZTUwYzNiM2NhNDMzMjZmYWE2Y2NiOTA5ZmIyYjU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2020-10-07T18:31:23Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2020-10-21T20:05:38Z"}, "message": "Do not print type for placeholder values", "tree": {"sha": "fc1a8a70c3d5c70645fd65be2031fc066fbe31c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc1a8a70c3d5c70645fd65be2031fc066fbe31c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37c00c41f82e50c3b3ca43326faa6ccb909fb2b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37c00c41f82e50c3b3ca43326faa6ccb909fb2b5", "html_url": "https://github.com/rust-lang/rust/commit/37c00c41f82e50c3b3ca43326faa6ccb909fb2b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37c00c41f82e50c3b3ca43326faa6ccb909fb2b5/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b52603a49187e8ec1712bab2a7c0b87108fa89c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b52603a49187e8ec1712bab2a7c0b87108fa89c", "html_url": "https://github.com/rust-lang/rust/commit/6b52603a49187e8ec1712bab2a7c0b87108fa89c"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "7833385cbc99698271dc9478404f4ab8cff45a1c", "filename": "compiler/rustc_symbol_mangling/src/v0.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/37c00c41f82e50c3b3ca43326faa6ccb909fb2b5/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37c00c41f82e50c3b3ca43326faa6ccb909fb2b5/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs?ref=37c00c41f82e50c3b3ca43326faa6ccb909fb2b5", "patch": "@@ -548,9 +548,10 @@ impl Printer<'tcx> for SymbolMangler<'tcx> {\n                 bug!(\"symbol_names: unsupported constant of type `{}` ({:?})\", ct.ty, ct);\n             }\n         };\n-        self = ct.ty.print(self)?;\n \n         if let Some(bits) = val {\n+            // We only print the type if the const can be evaluated.\n+            self = ct.ty.print(self)?;\n             let _ = write!(self.out, \"{}{:x}_\", if neg { \"n\" } else { \"\" }, bits);\n         } else {\n             // NOTE(eddyb) despite having the path, we need to"}]}