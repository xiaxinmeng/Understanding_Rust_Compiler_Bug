{"sha": "3247c6688ce4369f548134f78097fbb0df71d38c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNDdjNjY4OGNlNDM2OWY1NDgxMzRmNzgwOTdmYmIwZGY3MWQzOGM=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-16T09:48:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-16T09:48:59Z"}, "message": "Merge pull request #482 from apoelstra/2018-10-lib-tests\n\ncargo-miri: support running unit tests for libraries as well as test binaries", "tree": {"sha": "2e0dd965e1c4436496cc1a2ea412b185f78beb35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e0dd965e1c4436496cc1a2ea412b185f78beb35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3247c6688ce4369f548134f78097fbb0df71d38c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbxbQLCRBK7hj4Ov3rIwAAdHIIAGui/J99ta25GEf/9h2l/4CV\nLei92FBd01KkODknNRZe2bTyAhnzo4c/8hiRY2NExGYeUQtFYPhLaOVCgYKx6bsK\nvoyOK0MurXTxN0CFuajwnNUVs0udR2Cz7Rt49Ajxh1FDGg86NuOCJC7HXUyPCovx\nH8OwCK9Y3y8DgANX+liD2UoK//Ic5khU4tgqlP6BdwAbZOj5++LGVre+O+yXClww\n+DGu6s08aU8JjTnya8TT+B/1ZjmXT+e6I79na7qEJnz64IUOcwyK7iv4R+9vXTuH\nkZgqKZ8tuU4iM/OEq8MyN1flRYfRUKi31RUbBlbMg5Cqlv5mF38+vN2kv9ZeUyo=\n=e7pt\n-----END PGP SIGNATURE-----\n", "payload": "tree 2e0dd965e1c4436496cc1a2ea412b185f78beb35\nparent 8e0180d4e7c3ad320c10177d32a361951e30dde7\nparent 4faf8fad106bbcff03a22b64cba57b8c09c4bb6e\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1539683339 +0200\ncommitter GitHub <noreply@github.com> 1539683339 +0200\n\nMerge pull request #482 from apoelstra/2018-10-lib-tests\n\ncargo-miri: support running unit tests for libraries as well as test binaries"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3247c6688ce4369f548134f78097fbb0df71d38c", "html_url": "https://github.com/rust-lang/rust/commit/3247c6688ce4369f548134f78097fbb0df71d38c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3247c6688ce4369f548134f78097fbb0df71d38c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e0180d4e7c3ad320c10177d32a361951e30dde7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0180d4e7c3ad320c10177d32a361951e30dde7", "html_url": "https://github.com/rust-lang/rust/commit/8e0180d4e7c3ad320c10177d32a361951e30dde7"}, {"sha": "4faf8fad106bbcff03a22b64cba57b8c09c4bb6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e", "html_url": "https://github.com/rust-lang/rust/commit/4faf8fad106bbcff03a22b64cba57b8c09c4bb6e"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "4cd20901333071701197e661bd9a231ead6f7bf4", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 30, "deletions": 16, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/3247c6688ce4369f548134f78097fbb0df71d38c/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3247c6688ce4369f548134f78097fbb0df71d38c/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=3247c6688ce4369f548134f78097fbb0df71d38c", "patch": "@@ -97,24 +97,38 @@ fn main() {\n             let kind = target.kind.get(0).expect(\n                 \"badly formatted cargo metadata: target::kind is an empty array\",\n             );\n-            if test && kind == \"test\" {\n-                if let Err(code) = process(\n-                    vec![\"--test\".to_string(), target.name].into_iter().chain(\n-                        args,\n-                    ),\n-                )\n-                {\n-                    std::process::exit(code);\n+            match (test, &kind[..]) {\n+                (true, \"test\") => {\n+                    if let Err(code) = process(\n+                        vec![\"--test\".to_string(), target.name].into_iter().chain(\n+                            args,\n+                        ),\n+                    )\n+                    {\n+                        std::process::exit(code);\n+                    }\n                 }\n-            } else if !test && kind == \"bin\" {\n-                if let Err(code) = process(\n-                    vec![\"--bin\".to_string(), target.name].into_iter().chain(\n-                        args,\n-                    ),\n-                )\n-                {\n-                    std::process::exit(code);\n+                (true, \"lib\") => {\n+                    if let Err(code) = process(\n+                        vec![\"--\".to_string(), \"--test\".to_string()].into_iter().chain(\n+                            args,\n+                        ),\n+                    )\n+                    {\n+                        std::process::exit(code);\n+                    }\n                 }\n+                (false, \"bin\") => {\n+                    if let Err(code) = process(\n+                        vec![\"--bin\".to_string(), target.name].into_iter().chain(\n+                            args,\n+                        ),\n+                    )\n+                    {\n+                        std::process::exit(code);\n+                    }\n+                }\n+                _ => {}\n             }\n         }\n     } else {"}]}