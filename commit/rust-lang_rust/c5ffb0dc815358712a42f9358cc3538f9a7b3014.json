{"sha": "c5ffb0dc815358712a42f9358cc3538f9a7b3014", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZmZiMGRjODE1MzU4NzEyYTQyZjkzNThjYzM1MzhmOWE3YjMwMTQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-06T09:57:20Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-06T20:25:22Z"}, "message": "Add stub implementation of format_args{_nl} macros\n\nJust enough to fix the huge amount of type mismatches they cause.", "tree": {"sha": "ae149235b0b42137cef966a141d1d23b5ccfe1c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae149235b0b42137cef966a141d1d23b5ccfe1c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5ffb0dc815358712a42f9358cc3538f9a7b3014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5ffb0dc815358712a42f9358cc3538f9a7b3014", "html_url": "https://github.com/rust-lang/rust/commit/c5ffb0dc815358712a42f9358cc3538f9a7b3014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5ffb0dc815358712a42f9358cc3538f9a7b3014/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3702c02cdff158f05d2af1bd7106cca8a3e4ba9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3702c02cdff158f05d2af1bd7106cca8a3e4ba9", "html_url": "https://github.com/rust-lang/rust/commit/d3702c02cdff158f05d2af1bd7106cca8a3e4ba9"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "e0709704a03914cd76a5edc64d27b2f5e2f7607f", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c5ffb0dc815358712a42f9358cc3538f9a7b3014/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5ffb0dc815358712a42f9358cc3538f9a7b3014/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=c5ffb0dc815358712a42f9358cc3538f9a7b3014", "patch": "@@ -49,7 +49,11 @@ register_builtin! {\n     (COMPILE_ERROR_MACRO, CompileError) => compile_error_expand,\n     (FILE_MACRO, File) => file_expand,\n     (LINE_MACRO, Line) => line_expand,\n-    (STRINGIFY_MACRO, Stringify) => stringify_expand\n+    (STRINGIFY_MACRO, Stringify) => stringify_expand,\n+    (FORMAT_ARGS_MACRO, FormatArgs) => format_args_expand,\n+    // format_args_nl only differs in that it adds a newline in the end,\n+    // so we use the same stub expansion for now\n+    (FORMAT_ARGS_NL_MACRO, FormatArgsNl) => format_args_expand\n }\n \n fn to_line_number(db: &dyn AstDatabase, file: HirFileId, pos: TextUnit) -> usize {\n@@ -200,6 +204,19 @@ fn compile_error_expand(\n     Err(mbe::ExpandError::BindingError(\"Must be a string\".into()))\n }\n \n+fn format_args_expand(\n+    _db: &dyn AstDatabase,\n+    _id: MacroCallId,\n+    _tt: &tt::Subtree,\n+) -> Result<tt::Subtree, mbe::ExpandError> {\n+    // FIXME this is just a stub to make format macros type-check without mismatches\n+    // We should make this at least insert the arguments, so that go to def etc. work within format macros\n+    let expanded = quote! {\n+        std::fmt::Arguments::new_v1(&[], &[])\n+    };\n+    Ok(expanded)\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::*;"}, {"sha": "34edf2003a48198de041b80cf983b05c77d9b66d", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5ffb0dc815358712a42f9358cc3538f9a7b3014/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5ffb0dc815358712a42f9358cc3538f9a7b3014/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=c5ffb0dc815358712a42f9358cc3538f9a7b3014", "patch": "@@ -159,6 +159,8 @@ pub const COLUMN_MACRO: Name = Name::new_inline_ascii(6, b\"column\");\n pub const COMPILE_ERROR_MACRO: Name = Name::new_inline_ascii(13, b\"compile_error\");\n pub const LINE_MACRO: Name = Name::new_inline_ascii(4, b\"line\");\n pub const STRINGIFY_MACRO: Name = Name::new_inline_ascii(9, b\"stringify\");\n+pub const FORMAT_ARGS_MACRO: Name = Name::new_inline_ascii(11, b\"format_args\");\n+pub const FORMAT_ARGS_NL_MACRO: Name = Name::new_inline_ascii(14, b\"format_args_nl\");\n \n // Builtin derives\n pub const COPY_TRAIT: Name = Name::new_inline_ascii(4, b\"Copy\");"}]}