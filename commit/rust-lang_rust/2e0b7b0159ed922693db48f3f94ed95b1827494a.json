{"sha": "2e0b7b0159ed922693db48f3f94ed95b1827494a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMGI3YjAxNTllZDkyMjY5M2RiNDhmM2Y5NGVkOTViMTgyNzQ5NGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-20T14:38:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-20T14:38:16Z"}, "message": "Merge #4057\n\n4057: Fix panic in split_imports assist r=matklad a=matklad\n\nThe fix is admittedly quit literally just papering over.\n\nLong-term, I see two more principled approaches:\n\n* we switch to a fully tree-based impl, without parse . to_string\n  step; with this approach, there shouldn't be any panics. The results\n  might be nonsensical, but so was the original input.\n\n* we preserve the invariant that re-parsing constructed node is an\n  identity, and make all the `make_xxx` method return an `Option`.\n\ncloses #4044\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "ede61469d8f4e180f0cfa7cbe00d889737d45551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ede61469d8f4e180f0cfa7cbe00d889737d45551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e0b7b0159ed922693db48f3f94ed95b1827494a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJenbPYCRBK7hj4Ov3rIwAAdHIIAAHobjR4eFHap7r7SWb4/wXn\n9WLJCgyZ7Ar1gXSxUqwjJci/OAPLfmS/oyZJUaSEOolzq7dHKLuet8wwjPBTX1o9\n9cTtXAmszTdtFSoOXenkiBTMBHfr1YVCKk+QD1WNbuO2QD/E2YSzY5QcZTc7Ef1d\n8bogXR3EFjEIGRd/DWZIgM91uXWlbOl/QviUESgQ3M8tB8OQDQNMGA8d8oaUTPbN\n0Db1WmYgiUyRwNyh9SKIvK+j9mC7NsPw1tX31XUmPWT+/nvMnnr6IKcXvSIiUwZd\njL083p8v8ZKh45Th9r9D/vJiX1MtHP83rD/uLA5aQmZsZZvXgdONbLTBaBWAATo=\n=rn7B\n-----END PGP SIGNATURE-----\n", "payload": "tree ede61469d8f4e180f0cfa7cbe00d889737d45551\nparent 90f837829d4f2c1054751de2de695ba1c0b8ae5c\nparent 8a04372fec5f26a0650395a1e420fea062b3a7ab\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587393496 +0000\ncommitter GitHub <noreply@github.com> 1587393496 +0000\n\nMerge #4057\n\n4057: Fix panic in split_imports assist r=matklad a=matklad\n\nThe fix is admittedly quit literally just papering over.\n\nLong-term, I see two more principled approaches:\n\n* we switch to a fully tree-based impl, without parse . to_string\n  step; with this approach, there shouldn't be any panics. The results\n  might be nonsensical, but so was the original input.\n\n* we preserve the invariant that re-parsing constructed node is an\n  identity, and make all the `make_xxx` method return an `Option`.\n\ncloses #4044\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e0b7b0159ed922693db48f3f94ed95b1827494a", "html_url": "https://github.com/rust-lang/rust/commit/2e0b7b0159ed922693db48f3f94ed95b1827494a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e0b7b0159ed922693db48f3f94ed95b1827494a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90f837829d4f2c1054751de2de695ba1c0b8ae5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/90f837829d4f2c1054751de2de695ba1c0b8ae5c", "html_url": "https://github.com/rust-lang/rust/commit/90f837829d4f2c1054751de2de695ba1c0b8ae5c"}, {"sha": "8a04372fec5f26a0650395a1e420fea062b3a7ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a04372fec5f26a0650395a1e420fea062b3a7ab", "html_url": "https://github.com/rust-lang/rust/commit/8a04372fec5f26a0650395a1e420fea062b3a7ab"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "f25826796317ef3412f62ca184c397d89aa5afed", "filename": "crates/ra_assists/src/handlers/split_import.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fsplit_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fsplit_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fsplit_import.rs?ref=2e0b7b0159ed922693db48f3f94ed95b1827494a", "patch": "@@ -37,7 +37,7 @@ pub(crate) fn split_import(ctx: AssistCtx) -> Option<Assist> {\n \n #[cfg(test)]\n mod tests {\n-    use crate::helpers::{check_assist, check_assist_target};\n+    use crate::helpers::{check_assist, check_assist_not_applicable, check_assist_target};\n \n     use super::*;\n \n@@ -63,4 +63,9 @@ mod tests {\n     fn split_import_target() {\n         check_assist_target(split_import, \"use crate::<|>db::{RootDatabase, FileSymbol}\", \"::\");\n     }\n+\n+    #[test]\n+    fn issue4044() {\n+        check_assist_not_applicable(split_import, \"use crate::<|>:::self;\")\n+    }\n }"}, {"sha": "06df8495c9688ab1740c7a5054eda50f818637f8", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=2e0b7b0159ed922693db48f3f94ed95b1827494a", "patch": "@@ -10,8 +10,8 @@ use ra_text_edit::TextEditBuilder;\n use rustc_hash::FxHashMap;\n \n use crate::{\n-    AstNode, Direction, NodeOrToken, SyntaxElement, SyntaxNode, SyntaxNodePtr, SyntaxToken,\n-    TextRange, TextUnit,\n+    AstNode, Direction, NodeOrToken, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxNodePtr,\n+    SyntaxToken, TextRange, TextUnit,\n };\n \n /// Returns ancestors of the node at the offset, sorted by length. This should\n@@ -90,6 +90,10 @@ pub fn neighbor<T: AstNode>(me: &T, direction: Direction) -> Option<T> {\n     me.syntax().siblings(direction).skip(1).find_map(T::cast)\n }\n \n+pub fn has_errors(node: &SyntaxNode) -> bool {\n+    node.children().any(|it| it.kind() == SyntaxKind::ERROR)\n+}\n+\n #[derive(Debug, PartialEq, Eq, Clone, Copy)]\n pub enum InsertPosition<T> {\n     First,"}, {"sha": "26e4576ffe9929d362895e441e46c4c5b3ded8e1", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0b7b0159ed922693db48f3f94ed95b1827494a/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=2e0b7b0159ed922693db48f3f94ed95b1827494a", "patch": "@@ -307,7 +307,11 @@ impl ast::UseTree {\n \n         fn split_path_prefix(prefix: &ast::Path) -> Option<ast::Path> {\n             let parent = prefix.parent_path()?;\n-            let mut res = make::path_unqualified(parent.segment()?);\n+            let segment = parent.segment()?;\n+            if algo::has_errors(segment.syntax()) {\n+                return None;\n+            }\n+            let mut res = make::path_unqualified(segment);\n             for p in iter::successors(parent.parent_path(), |it| it.parent_path()) {\n                 res = make::path_qualified(res, p.segment()?);\n             }"}]}