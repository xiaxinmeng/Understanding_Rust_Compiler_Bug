{"sha": "a32e979ba53af4d4654bfad7babdb9f8c197c3a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMmU5NzliYTUzYWY0ZDQ2NTRiZmFkN2JhYmRiOWY4YzE5N2MzYTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-11T03:48:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-11T03:48:23Z"}, "message": "Auto merge of #51423 - RalfJung:from_raw_parts, r=sfackler\n\nImprove docs for slice::from_raw_parts\n\nExplain why the pointer must be non-null and aligned.\n\nCc @hsivonen", "tree": {"sha": "825d3aacb95843b02f21837cbe69c74e7fe3bc1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/825d3aacb95843b02f21837cbe69c74e7fe3bc1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a32e979ba53af4d4654bfad7babdb9f8c197c3a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a32e979ba53af4d4654bfad7babdb9f8c197c3a2", "html_url": "https://github.com/rust-lang/rust/commit/a32e979ba53af4d4654bfad7babdb9f8c197c3a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a32e979ba53af4d4654bfad7babdb9f8c197c3a2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dc61f30228ec35b37f069e7b7a224433dce57f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc61f30228ec35b37f069e7b7a224433dce57f1", "html_url": "https://github.com/rust-lang/rust/commit/7dc61f30228ec35b37f069e7b7a224433dce57f1"}, {"sha": "426f06f8fea9783a63aa61b418ab0ecb723a5ad9", "url": "https://api.github.com/repos/rust-lang/rust/commits/426f06f8fea9783a63aa61b418ab0ecb723a5ad9", "html_url": "https://github.com/rust-lang/rust/commit/426f06f8fea9783a63aa61b418ab0ecb723a5ad9"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "6f4c130d8f318b1eb1114ad6b7b7591e8f98c2aa", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a32e979ba53af4d4654bfad7babdb9f8c197c3a2/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a32e979ba53af4d4654bfad7babdb9f8c197c3a2/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=a32e979ba53af4d4654bfad7babdb9f8c197c3a2", "patch": "@@ -3873,9 +3873,11 @@ unsafe impl<'a, T> TrustedRandomAccess for ExactChunksMut<'a, T> {\n /// valid for `len` elements, nor whether the lifetime inferred is a suitable\n /// lifetime for the returned slice.\n ///\n-/// `p` must be non-null and aligned, even for zero-length slices, as is\n-/// required for all references. However, for zero-length slices, `p` can be\n-/// a bogus non-dereferencable pointer such as [`NonNull::dangling()`].\n+/// `data` must be non-null and aligned, even for zero-length slices. One\n+/// reason for this is that enum layout optimizations may rely on references\n+/// (including slices of any length) being aligned and non-null to distinguish\n+/// them from other data. You can obtain a pointer that is usable as `data`\n+/// for zero-length slices using [`NonNull::dangling()`].\n ///\n /// # Caveat\n ///\n@@ -3910,8 +3912,8 @@ pub unsafe fn from_raw_parts<'a, T>(data: *const T, len: usize) -> &'a [T] {\n ///\n /// This function is unsafe for the same reasons as `from_raw_parts`, as well\n /// as not being able to provide a non-aliasing guarantee of the returned\n-/// mutable slice. `p` must be non-null and aligned even for zero-length slices as with\n-/// `from_raw_parts`.\n+/// mutable slice. `data` must be non-null and aligned even for zero-length\n+/// slices as with `from_raw_parts`.\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub unsafe fn from_raw_parts_mut<'a, T>(data: *mut T, len: usize) -> &'a mut [T] {"}]}