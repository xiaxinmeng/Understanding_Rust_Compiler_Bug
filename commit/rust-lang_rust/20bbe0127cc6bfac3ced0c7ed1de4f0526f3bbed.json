{"sha": "20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYmJlMDEyN2NjNmJmYWMzY2VkMGM3ZWQxZGU0ZjA1MjZmM2JiZWQ=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-17T22:34:18Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-19T20:12:18Z"}, "message": "Fix parsing of inclusive ranges (#214)\n\nI'm not certain that this is correct, so extra eyes would be good", "tree": {"sha": "7be28cc0c1f3848a024474fb52cc5663725c2700", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7be28cc0c1f3848a024474fb52cc5663725c2700"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "html_url": "https://github.com/rust-lang/rust/commit/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd9d87e87c6435d439de3f682b83bc74d784de3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd9d87e87c6435d439de3f682b83bc74d784de3", "html_url": "https://github.com/rust-lang/rust/commit/0bd9d87e87c6435d439de3f682b83bc74d784de3"}], "stats": {"total": 195, "additions": 158, "deletions": 37}, "files": [{"sha": "bca32f707f5fc5264f5d0730df7a9ea50312c21f", "filename": "crates/ra_syntax/src/grammar/expressions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "patch": "@@ -143,7 +143,7 @@ fn current_op(p: &Parser) -> (u8, Op) {\n \n     let bp = match p.current() {\n         EQ => 1,\n-        DOTDOT => 2,\n+        DOTDOT | DOTDOTEQ => 2,\n         EQEQ | NEQ | L_ANGLE | R_ANGLE => 5,\n         PIPE => 6,\n         CARET => 7,\n@@ -173,7 +173,7 @@ fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) -> BlockLike {\n     };\n \n     loop {\n-        let is_range = p.current() == DOTDOT;\n+        let is_range = p.current() == DOTDOT || p.current() == DOTDOTEQ;\n         let (op_bp, op) = current_op(p);\n         if op_bp < bp {\n             break;"}, {"sha": "64cdf0b1b04abcc82cebee1e239fce556cea98f3", "filename": "crates/ra_syntax/src/grammar/patterns.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "patch": "@@ -14,9 +14,13 @@ pub(super) fn pattern_r(p: &mut Parser, recovery_set: TokenSet) {\n     if let Some(lhs) = atom_pat(p, recovery_set) {\n         // test range_pat\n         // fn main() {\n-        //     match 92 { 0 ... 100 => () }\n+        //     match 92 {\n+        //         0 ... 100 => (),\n+        //         101 ..= 200 => (),\n+        //         200 .. 301=> (),\n+        //     }\n         // }\n-        if p.at(DOTDOTDOT) {\n+        if p.at(DOTDOTDOT) || p.at(DOTDOTEQ) || p.at(DOTDOT) {\n             let m = lhs.precede(p);\n             p.bump();\n             atom_pat(p, recovery_set);"}, {"sha": "3bca7bf5d4d3318ec5fe13e27d6c5f79cf5aa05c", "filename": "crates/ra_syntax/tests/data/parser/inline/0094_range_pat.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.rs?ref=20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "patch": "@@ -1,3 +1,7 @@\n fn main() {\n-    match 92 { 0 ... 100 => () }\n+    match 92 { \n+        0 ... 100 => (),\n+        101 ..= 200 => (),\n+        200 .. 301=> (),\n+    }\n }"}, {"sha": "7eb0fcdf48b244fbc3276d6332d4b2e89bdb16d3", "filename": "crates/ra_syntax/tests/data/parser/inline/0094_range_pat.txt", "status": "modified", "additions": 60, "deletions": 26, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.txt?ref=20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 47)\n-  FN_DEF@[0; 46)\n+SOURCE_FILE@[0; 113)\n+  FN_DEF@[0; 112)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 7)\n@@ -8,35 +8,69 @@ SOURCE_FILE@[0; 47)\n       L_PAREN@[7; 8)\n       R_PAREN@[8; 9)\n     WHITESPACE@[9; 10)\n-    BLOCK@[10; 46)\n+    BLOCK@[10; 112)\n       L_CURLY@[10; 11)\n       WHITESPACE@[11; 16)\n-      MATCH_EXPR@[16; 44)\n+      MATCH_EXPR@[16; 110)\n         MATCH_KW@[16; 21)\n         WHITESPACE@[21; 22)\n         LITERAL@[22; 24)\n           INT_NUMBER@[22; 24) \"92\"\n         WHITESPACE@[24; 25)\n-        MATCH_ARM_LIST@[25; 44)\n+        MATCH_ARM_LIST@[25; 110)\n           L_CURLY@[25; 26)\n-          WHITESPACE@[26; 27)\n-          MATCH_ARM@[27; 42)\n-            RANGE_PAT@[27; 36)\n-              LITERAL@[27; 28)\n-                INT_NUMBER@[27; 28) \"0\"\n-              WHITESPACE@[28; 29)\n-              DOTDOTDOT@[29; 32)\n-              WHITESPACE@[32; 33)\n-              LITERAL@[33; 36)\n-                INT_NUMBER@[33; 36) \"100\"\n-            WHITESPACE@[36; 37)\n-            FAT_ARROW@[37; 39)\n-            WHITESPACE@[39; 40)\n-            TUPLE_EXPR@[40; 42)\n-              L_PAREN@[40; 41)\n-              R_PAREN@[41; 42)\n-          WHITESPACE@[42; 43)\n-          R_CURLY@[43; 44)\n-      WHITESPACE@[44; 45)\n-      R_CURLY@[45; 46)\n-  WHITESPACE@[46; 47)\n+          WHITESPACE@[26; 36)\n+          MATCH_ARM@[36; 51)\n+            RANGE_PAT@[36; 45)\n+              LITERAL@[36; 37)\n+                INT_NUMBER@[36; 37) \"0\"\n+              WHITESPACE@[37; 38)\n+              DOTDOTDOT@[38; 41)\n+              WHITESPACE@[41; 42)\n+              LITERAL@[42; 45)\n+                INT_NUMBER@[42; 45) \"100\"\n+            WHITESPACE@[45; 46)\n+            FAT_ARROW@[46; 48)\n+            WHITESPACE@[48; 49)\n+            TUPLE_EXPR@[49; 51)\n+              L_PAREN@[49; 50)\n+              R_PAREN@[50; 51)\n+          COMMA@[51; 52)\n+          WHITESPACE@[52; 61)\n+          MATCH_ARM@[61; 78)\n+            RANGE_PAT@[61; 72)\n+              LITERAL@[61; 64)\n+                INT_NUMBER@[61; 64) \"101\"\n+              WHITESPACE@[64; 65)\n+              DOTDOTEQ@[65; 68)\n+              WHITESPACE@[68; 69)\n+              LITERAL@[69; 72)\n+                INT_NUMBER@[69; 72) \"200\"\n+            WHITESPACE@[72; 73)\n+            FAT_ARROW@[73; 75)\n+            WHITESPACE@[75; 76)\n+            TUPLE_EXPR@[76; 78)\n+              L_PAREN@[76; 77)\n+              R_PAREN@[77; 78)\n+          COMMA@[78; 79)\n+          WHITESPACE@[79; 88)\n+          MATCH_ARM@[88; 103)\n+            RANGE_PAT@[88; 98)\n+              LITERAL@[88; 91)\n+                INT_NUMBER@[88; 91) \"200\"\n+              WHITESPACE@[91; 92)\n+              DOTDOT@[92; 94)\n+              WHITESPACE@[94; 95)\n+              LITERAL@[95; 98)\n+                INT_NUMBER@[95; 98) \"301\"\n+            FAT_ARROW@[98; 100)\n+            WHITESPACE@[100; 101)\n+            TUPLE_EXPR@[101; 103)\n+              L_PAREN@[101; 102)\n+              R_PAREN@[102; 103)\n+          COMMA@[103; 104)\n+          WHITESPACE@[104; 109)\n+          R_CURLY@[109; 110)\n+      WHITESPACE@[110; 111)\n+      R_CURLY@[111; 112)\n+  WHITESPACE@[112; 113)"}, {"sha": "f9ff444d400c35a00c63bf237ac7f565a23a9dd5", "filename": "crates/ra_syntax/tests/data/parser/ok/0029_range_forms.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs?ref=20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "patch": "@@ -3,4 +3,9 @@ fn foo() {\n     ..z = 2;\n     x = false..1 == 1;\n     let x = 1..;\n+    \n+    ..=1 + 1;\n+    ..=z = 2;\n+    x = false..=1 == 1;\n+    let x = 1..;\n }"}, {"sha": "e3706bfbd0fd9bf0fe42c0f277679f6a622a3168", "filename": "crates/ra_syntax/tests/data/parser/ok/0029_range_forms.txt", "status": "modified", "additions": 80, "deletions": 6, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt", "raw_url": "https://github.com/rust-lang/rust/raw/20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt?ref=20bbe0127cc6bfac3ced0c7ed1de4f0526f3bbed", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 79)\n-  FN_DEF@[0; 78)\n+SOURCE_FILE@[0; 153)\n+  FN_DEF@[0; 152)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 79)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n     WHITESPACE@[8; 9)\n-    BLOCK@[9; 78)\n+    BLOCK@[9; 152)\n       L_CURLY@[9; 10)\n       WHITESPACE@[10; 15)\n       EXPR_STMT@[15; 23)\n@@ -78,6 +78,80 @@ SOURCE_FILE@[0; 79)\n             INT_NUMBER@[72; 73) \"1\"\n           DOTDOT@[73; 75)\n         SEMI@[75; 76)\n-      WHITESPACE@[76; 77)\n-      R_CURLY@[77; 78)\n-  WHITESPACE@[78; 79)\n+      WHITESPACE@[76; 86)\n+      err: `expected expression`\n+      EXPR_STMT@[86; 89)\n+        ERROR@[86; 89)\n+          DOTDOTEQ@[86; 89)\n+          err: `expected SEMI`\n+      EXPR_STMT@[89; 95)\n+        BIN_EXPR@[89; 94)\n+          LITERAL@[89; 90)\n+            INT_NUMBER@[89; 90) \"1\"\n+          WHITESPACE@[90; 91)\n+          PLUS@[91; 92)\n+          WHITESPACE@[92; 93)\n+          LITERAL@[93; 94)\n+            INT_NUMBER@[93; 94) \"1\"\n+        SEMI@[94; 95)\n+      WHITESPACE@[95; 100)\n+      err: `expected expression`\n+      EXPR_STMT@[100; 103)\n+        ERROR@[100; 103)\n+          DOTDOTEQ@[100; 103)\n+          err: `expected SEMI`\n+      EXPR_STMT@[103; 109)\n+        BIN_EXPR@[103; 108)\n+          PATH_EXPR@[103; 104)\n+            PATH@[103; 104)\n+              PATH_SEGMENT@[103; 104)\n+                NAME_REF@[103; 104)\n+                  IDENT@[103; 104) \"z\"\n+          WHITESPACE@[104; 105)\n+          EQ@[105; 106)\n+          WHITESPACE@[106; 107)\n+          LITERAL@[107; 108)\n+            INT_NUMBER@[107; 108) \"2\"\n+        SEMI@[108; 109)\n+      WHITESPACE@[109; 114)\n+      EXPR_STMT@[114; 133)\n+        BIN_EXPR@[114; 132)\n+          PATH_EXPR@[114; 115)\n+            PATH@[114; 115)\n+              PATH_SEGMENT@[114; 115)\n+                NAME_REF@[114; 115)\n+                  IDENT@[114; 115) \"x\"\n+          WHITESPACE@[115; 116)\n+          EQ@[116; 117)\n+          WHITESPACE@[117; 118)\n+          RANGE_EXPR@[118; 132)\n+            LITERAL@[118; 123)\n+              FALSE_KW@[118; 123)\n+            DOTDOTEQ@[123; 126)\n+            BIN_EXPR@[126; 132)\n+              LITERAL@[126; 127)\n+                INT_NUMBER@[126; 127) \"1\"\n+              WHITESPACE@[127; 128)\n+              EQEQ@[128; 130)\n+              WHITESPACE@[130; 131)\n+              LITERAL@[131; 132)\n+                INT_NUMBER@[131; 132) \"1\"\n+        SEMI@[132; 133)\n+      WHITESPACE@[133; 138)\n+      LET_STMT@[138; 150)\n+        LET_KW@[138; 141)\n+        WHITESPACE@[141; 142)\n+        BIND_PAT@[142; 143)\n+          NAME@[142; 143)\n+            IDENT@[142; 143) \"x\"\n+        WHITESPACE@[143; 144)\n+        EQ@[144; 145)\n+        WHITESPACE@[145; 146)\n+        RANGE_EXPR@[146; 149)\n+          LITERAL@[146; 147)\n+            INT_NUMBER@[146; 147) \"1\"\n+          DOTDOT@[147; 149)\n+        SEMI@[149; 150)\n+      WHITESPACE@[150; 151)\n+      R_CURLY@[151; 152)\n+  WHITESPACE@[152; 153)"}]}