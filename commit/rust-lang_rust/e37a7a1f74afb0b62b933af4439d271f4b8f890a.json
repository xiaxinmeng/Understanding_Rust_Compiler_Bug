{"sha": "e37a7a1f74afb0b62b933af4439d271f4b8f890a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzN2E3YTFmNzRhZmIwYjYyYjkzM2FmNDQzOWQyNzFmNGI4Zjg5MGE=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-06-05T20:08:36Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-06-05T20:18:13Z"}, "message": "add an example to `create_substs_for_ast_path`", "tree": {"sha": "227ebcf01bea2e434a5f3a58bce56b53d77f3f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/227ebcf01bea2e434a5f3a58bce56b53d77f3f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e37a7a1f74afb0b62b933af4439d271f4b8f890a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e37a7a1f74afb0b62b933af4439d271f4b8f890a", "html_url": "https://github.com/rust-lang/rust/commit/e37a7a1f74afb0b62b933af4439d271f4b8f890a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e37a7a1f74afb0b62b933af4439d271f4b8f890a/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a90042718848e25a7df29621592250ccecf78b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a90042718848e25a7df29621592250ccecf78b4d", "html_url": "https://github.com/rust-lang/rust/commit/a90042718848e25a7df29621592250ccecf78b4d"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "34f817ba570e705d4a7809e95844537e2a5666c0", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e37a7a1f74afb0b62b933af4439d271f4b8f890a/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37a7a1f74afb0b62b933af4439d271f4b8f890a/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=e37a7a1f74afb0b62b933af4439d271f4b8f890a", "patch": "@@ -573,6 +573,20 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n     /// set of substitutions. This may involve applying defaulted type parameters.\n     /// Also returns back constriants on associated types.\n     ///\n+    /// Example:\n+    ///\n+    /// ```\n+    /// T: std::ops::Index<usize, Output = u32>\n+    /// ^1 ^^^^^^^^^^^^^^2 ^^^^3  ^^^^^^^^^^^4\n+    /// ```\n+    ///\n+    /// 1. The `self_ty` here would refer to the type `T`.\n+    /// 2. The path in question is the path to the trait `std::ops::Index`,\n+    ///    which will have been resolved to a `def_id`\n+    /// 3. The `generic_args` contains info on the `<...>` contents. The `usize` type\n+    ///    parameters are returned in the `SubstsRef`, the associated type bindings like\n+    ///    `Output = u32` are returned in the `Vec<ConvertedBinding...>` result.\n+    ///\n     /// Note that the type listing given here is *exactly* what the user provided.\n     fn create_substs_for_ast_path<'a>(&self,\n         span: Span,"}]}