{"sha": "0f9d3b4c21338abf19ff897ea67928423a8663ce", "node_id": "C_kwDOAAsO6NoAKDBmOWQzYjRjMjEzMzhhYmYxOWZmODk3ZWE2NzkyODQyM2E4NjYzY2U", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-02-07T14:08:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-07T14:08:39Z"}, "message": "Rollup merge of #93723 - jyn514:rerun-if-changed, r=Mark-Simulacrum\n\nRerun bootstrap's build script when RUSTC changes\n\nPreviously, rustbuild would give strange errors if you tried to reuse the same build directory under two names:\n\n```\n$ mkdir tmp && cd tmp\n$ ../x.py check\nBuilding rustbuild\n    Finished dev [unoptimized] target(s) in 35.27s\nChecking stage0 std artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\n^C\n$ cd ..\n$ mv tmp/build build\n$ ./x.py check\nBuilding rustbuild\n   Compiling bootstrap v0.0.0 (/home/jnelson/rust-lang/rust/src/bootstrap)\n    Finished dev [unoptimized] target(s) in 11.18s\n\nfailed to execute command: \"/home/jnelson/rust-lang/rust/tmp/build/x86_64-unknown-linux-gnu/stage0/bin/rustc\" \"--target\" \"x86_64-unknown-linux-gnu\" \"--print\" \"target-libdir\"\nerror: No such file or directory (os error 2)\n```\n\nThis fixes the error. Reusing the same build directory is useful if you want to test path-related things in\nbootstrap itself, without having to recompile it each time.\n\nFor good measure, this also reruns the build script when PATH changes.", "tree": {"sha": "6d04acbea53594dc4f6a9a05f30d9ebd6734b7d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d04acbea53594dc4f6a9a05f30d9ebd6734b7d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f9d3b4c21338abf19ff897ea67928423a8663ce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiASfnCRBK7hj4Ov3rIwAAdwQIAAc1VdDT7VxkHGJCy5WnlJwa\nFpSW2AN5GyxuDxJUVVPVqQcDFXGkFi6q60xkOKU0C5GqvC0zX4O98MPk/XjmUMby\nGAhGAppnZf2tMXEk4vYsGyWbcy2ANGeUyhlqR6f7fSb8abtMRyQEtFr7vk4AiOmD\n/5xyF8jI7JhFW4jh+qmpDY14yUI2oaVHwj0uqy8oX8swC8H9f8QL2oU00SX5foYp\nSDD8G5YQbSaKY9jpRNOkur398FXFECzQuvnUCzWFUKl8BXyCRQM+8RWFj1VR8G5D\nUd3oDyrSiCNeSKGpS0XW5ZiREnAlN38Om/W1+mLXtEgKBvTeFAQRteAT0f3j/3E=\n=247V\n-----END PGP SIGNATURE-----\n", "payload": "tree 6d04acbea53594dc4f6a9a05f30d9ebd6734b7d7\nparent 82fe6ed42564e008dd2383cf34323fcacb3a18aa\nparent b5b21507c1a9ce2aa94a5cce6789d2b3281e62b8\nauthor Mara Bos <m-ou.se@m-ou.se> 1644242919 +0000\ncommitter GitHub <noreply@github.com> 1644242919 +0000\n\nRollup merge of #93723 - jyn514:rerun-if-changed, r=Mark-Simulacrum\n\nRerun bootstrap's build script when RUSTC changes\n\nPreviously, rustbuild would give strange errors if you tried to reuse the same build directory under two names:\n\n```\n$ mkdir tmp && cd tmp\n$ ../x.py check\nBuilding rustbuild\n    Finished dev [unoptimized] target(s) in 35.27s\nChecking stage0 std artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\n^C\n$ cd ..\n$ mv tmp/build build\n$ ./x.py check\nBuilding rustbuild\n   Compiling bootstrap v0.0.0 (/home/jnelson/rust-lang/rust/src/bootstrap)\n    Finished dev [unoptimized] target(s) in 11.18s\n\nfailed to execute command: \"/home/jnelson/rust-lang/rust/tmp/build/x86_64-unknown-linux-gnu/stage0/bin/rustc\" \"--target\" \"x86_64-unknown-linux-gnu\" \"--print\" \"target-libdir\"\nerror: No such file or directory (os error 2)\n```\n\nThis fixes the error. Reusing the same build directory is useful if you want to test path-related things in\nbootstrap itself, without having to recompile it each time.\n\nFor good measure, this also reruns the build script when PATH changes.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9d3b4c21338abf19ff897ea67928423a8663ce", "html_url": "https://github.com/rust-lang/rust/commit/0f9d3b4c21338abf19ff897ea67928423a8663ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f9d3b4c21338abf19ff897ea67928423a8663ce/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82fe6ed42564e008dd2383cf34323fcacb3a18aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/82fe6ed42564e008dd2383cf34323fcacb3a18aa", "html_url": "https://github.com/rust-lang/rust/commit/82fe6ed42564e008dd2383cf34323fcacb3a18aa"}, {"sha": "b5b21507c1a9ce2aa94a5cce6789d2b3281e62b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5b21507c1a9ce2aa94a5cce6789d2b3281e62b8", "html_url": "https://github.com/rust-lang/rust/commit/b5b21507c1a9ce2aa94a5cce6789d2b3281e62b8"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "6e39ea00f808c20ae34cf367a0b01f8b4b0cdc70", "filename": "src/bootstrap/build.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f9d3b4c21338abf19ff897ea67928423a8663ce/src%2Fbootstrap%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f9d3b4c21338abf19ff897ea67928423a8663ce/src%2Fbootstrap%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild.rs?ref=0f9d3b4c21338abf19ff897ea67928423a8663ce", "patch": "@@ -3,6 +3,8 @@ use std::path::PathBuf;\n \n fn main() {\n     println!(\"cargo:rerun-if-changed=build.rs\");\n+    println!(\"cargo:rerun-if-env-changed=RUSTC\");\n+    println!(\"cargo:rerun-if-env-changed=PATH\");\n     println!(\"cargo:rustc-env=BUILD_TRIPLE={}\", env::var(\"HOST\").unwrap());\n \n     // This may not be a canonicalized path."}]}