{"sha": "63e98aee0cc005c27431a0eca317fecf6706b072", "node_id": "C_kwDOAAsO6NoAKDYzZTk4YWVlMGNjMDA1YzI3NDMxYTBlY2EzMTdmZWNmNjcwNmIwNzI", "commit": {"author": {"name": "Mateusz Gienieczko", "email": "mat@gienieczko.com", "date": "2022-05-21T17:44:12Z"}, "committer": {"name": "Mateusz Gienieczko", "email": "mat@gienieczko.com", "date": "2022-05-21T17:44:12Z"}, "message": "Change GetSystemInfo to explicit offset.", "tree": {"sha": "e972437506f3d7561a0d273736946979b0bd5104", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e972437506f3d7561a0d273736946979b0bd5104"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63e98aee0cc005c27431a0eca317fecf6706b072", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS6ttWmD/dycqbuYdU4bLXkFRN0aQUCYokk7AAKCRA4bLXkFRN0\naQtWAP0dKA6VsLu0VaTOk1+i1GcVOBn0HL7repFuavfmbhWK/wEAjySYAKY4SfXs\n9+u2vqfQhwQ87E+AC+/xKXwlf5G3cAU=\n=8d/3\n-----END PGP SIGNATURE-----", "payload": "tree e972437506f3d7561a0d273736946979b0bd5104\nparent c4ee368acb065b783f3bc094077b4a5cdd1d7a27\nauthor Mateusz Gienieczko <mat@gienieczko.com> 1653155052 +0200\ncommitter Mateusz Gienieczko <mat@gienieczko.com> 1653155052 +0200\n\nChange GetSystemInfo to explicit offset.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63e98aee0cc005c27431a0eca317fecf6706b072", "html_url": "https://github.com/rust-lang/rust/commit/63e98aee0cc005c27431a0eca317fecf6706b072", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63e98aee0cc005c27431a0eca317fecf6706b072/comments", "author": {"login": "V0ldek", "id": 20441980, "node_id": "MDQ6VXNlcjIwNDQxOTgw", "avatar_url": "https://avatars.githubusercontent.com/u/20441980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/V0ldek", "html_url": "https://github.com/V0ldek", "followers_url": "https://api.github.com/users/V0ldek/followers", "following_url": "https://api.github.com/users/V0ldek/following{/other_user}", "gists_url": "https://api.github.com/users/V0ldek/gists{/gist_id}", "starred_url": "https://api.github.com/users/V0ldek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/V0ldek/subscriptions", "organizations_url": "https://api.github.com/users/V0ldek/orgs", "repos_url": "https://api.github.com/users/V0ldek/repos", "events_url": "https://api.github.com/users/V0ldek/events{/privacy}", "received_events_url": "https://api.github.com/users/V0ldek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "V0ldek", "id": 20441980, "node_id": "MDQ6VXNlcjIwNDQxOTgw", "avatar_url": "https://avatars.githubusercontent.com/u/20441980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/V0ldek", "html_url": "https://github.com/V0ldek", "followers_url": "https://api.github.com/users/V0ldek/followers", "following_url": "https://api.github.com/users/V0ldek/following{/other_user}", "gists_url": "https://api.github.com/users/V0ldek/gists{/gist_id}", "starred_url": "https://api.github.com/users/V0ldek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/V0ldek/subscriptions", "organizations_url": "https://api.github.com/users/V0ldek/orgs", "repos_url": "https://api.github.com/users/V0ldek/repos", "events_url": "https://api.github.com/users/V0ldek/events{/privacy}", "received_events_url": "https://api.github.com/users/V0ldek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4ee368acb065b783f3bc094077b4a5cdd1d7a27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4ee368acb065b783f3bc094077b4a5cdd1d7a27", "html_url": "https://github.com/rust-lang/rust/commit/c4ee368acb065b783f3bc094077b4a5cdd1d7a27"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "f9cf755c5b4f5752c053327eaa6a1dd2eec37a87", "filename": "src/shims/windows/foreign_items.rs", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/63e98aee0cc005c27431a0eca317fecf6706b072/src%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63e98aee0cc005c27431a0eca317fecf6706b072/src%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fforeign_items.rs?ref=63e98aee0cc005c27431a0eca317fecf6706b072", "patch": "@@ -111,6 +111,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             // Querying system information\n             \"GetSystemInfo\" => {\n+                use crate::rustc_middle::ty::{layout::LayoutOf, TyKind, UintTy};\n+\n                 let [system_info] =\n                     this.check_shim(abi, Abi::System { unwind: false }, link_name, args)?;\n                 let system_info = this.deref_operand(system_info)?;\n@@ -119,21 +121,28 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     system_info.ptr,\n                     iter::repeat(0u8).take(system_info.layout.size.bytes() as usize),\n                 )?;\n-                let dword_size = Size::from_bytes(4);\n-\n-                // In WinApi SYSTEM_INFO's first field is a 4-byte union, but num_cpus\n-                // inlines it as two 2-byte fields. In num_cpus case all fields are offset by 1\n-                // compared to WinApi. See https://github.com/rust-lang/miri/issues/2136#issuecomment-1133661262.\n-                let first_field = this.mplace_field(&system_info, 0)?;\n-                let offset = if first_field.layout.size.bytes() == 2 { 1 } else { 0 };\n-\n-                let page_size = this.mplace_field(&system_info, 1 + offset)?;\n-                let num_cpus = this.mplace_field(&system_info, 5 + offset)?;\n-\n+                // Set selected fields.\n+                let dword_ty = this.tcx.mk_ty(TyKind::Uint(UintTy::U32));\n+                let dword_layout = this.layout_of(dword_ty)?;\n                 // Set page size.\n-                this.write_scalar(Scalar::from_int(PAGE_SIZE, dword_size), &page_size.into())?;\n+                let page_size = system_info.offset(\n+                    Size::from_bytes(4),\n+                    MemPlaceMeta::None,\n+                    dword_layout,\n+                    &this.tcx,\n+                )?;\n+                this.write_scalar(\n+                    Scalar::from_int(PAGE_SIZE, dword_layout.size),\n+                    &page_size.into(),\n+                )?;\n                 // Set number of processors.\n-                this.write_scalar(Scalar::from_int(NUM_CPUS, dword_size), &num_cpus.into())?;\n+                let num_cpus = system_info.offset(\n+                    Size::from_bytes(32),\n+                    MemPlaceMeta::None,\n+                    dword_layout,\n+                    &this.tcx,\n+                )?;\n+                this.write_scalar(Scalar::from_int(NUM_CPUS, dword_layout.size), &num_cpus.into())?;\n             }\n \n             // Thread-local storage"}]}