{"sha": "2caac99ef3731b39c484a23cdab00af94de7b645", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYWFjOTllZjM3MzFiMzljNDg0YTIzY2RhYjAwYWY5NGRlN2I2NDU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-19T21:57:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-20T09:15:38Z"}, "message": "resolve paths across crates", "tree": {"sha": "48a03c5fe30915e82045962d5ea22e1800693b4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48a03c5fe30915e82045962d5ea22e1800693b4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2caac99ef3731b39c484a23cdab00af94de7b645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2caac99ef3731b39c484a23cdab00af94de7b645", "html_url": "https://github.com/rust-lang/rust/commit/2caac99ef3731b39c484a23cdab00af94de7b645", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2caac99ef3731b39c484a23cdab00af94de7b645/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "590bd5f849cf257f499f6c7aa8da3dc4ffc7578f", "url": "https://api.github.com/repos/rust-lang/rust/commits/590bd5f849cf257f499f6c7aa8da3dc4ffc7578f", "html_url": "https://github.com/rust-lang/rust/commit/590bd5f849cf257f499f6c7aa8da3dc4ffc7578f"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "4161442b26bbe3523e1df61632619385b1335c55", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2caac99ef3731b39c484a23cdab00af94de7b645/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2caac99ef3731b39c484a23cdab00af94de7b645/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=2caac99ef3731b39c484a23cdab00af94de7b645", "patch": "@@ -32,7 +32,7 @@ use crate::{\n     SourceItemId, SourceFileItemId, SourceFileItems,\n     Path, PathKind,\n     HirDatabase, Crate,\n-    module::{ModuleId, ModuleTree},\n+    module::{Module, ModuleId, ModuleTree},\n };\n \n /// Item map is the result of the name resolution. Item map contains, for each\n@@ -357,14 +357,27 @@ where\n                 curr = match def_id.loc(self.db) {\n                     DefLoc {\n                         kind: DefKind::Module,\n-                        module_id,\n+                        module_id: target_module_id,\n                         source_root_id,\n                         ..\n                     } => {\n                         if source_root_id == self.source_root {\n-                            module_id\n+                            target_module_id\n                         } else {\n-                            // FIXME: across crates resolve\n+                            let module = Module::new(self.db, source_root_id, target_module_id)?;\n+                            let path = Path {\n+                                segments: import.path.segments[i + 1..].iter().cloned().collect(),\n+                                kind: PathKind::Crate,\n+                            };\n+                            if let Some(def_id) = module.resolve_path(self.db, path)? {\n+                                self.update(module_id, |items| {\n+                                    let res = Resolution {\n+                                        def_id: Some(def_id),\n+                                        import: Some(ptr),\n+                                    };\n+                                    items.items.insert(name.clone(), res);\n+                                })\n+                            }\n                             return Ok(());\n                         }\n                     }"}]}