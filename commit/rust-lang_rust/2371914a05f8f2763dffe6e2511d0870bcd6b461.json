{"sha": "2371914a05f8f2763dffe6e2511d0870bcd6b461", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNzE5MTRhMDVmOGYyNzYzZGZmZTZlMjUxMWQwODcwYmNkNmI0NjE=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-03-03T20:09:01Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-03-05T18:03:32Z"}, "message": "Prevent Zip specialization from calling __iterator_get_unchecked twice with the same index after calling next_back", "tree": {"sha": "21eb51252837216e694cea8ad86b0f012ce9a964", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21eb51252837216e694cea8ad86b0f012ce9a964"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2371914a05f8f2763dffe6e2511d0870bcd6b461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2371914a05f8f2763dffe6e2511d0870bcd6b461", "html_url": "https://github.com/rust-lang/rust/commit/2371914a05f8f2763dffe6e2511d0870bcd6b461", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2371914a05f8f2763dffe6e2511d0870bcd6b461/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd946c63a6c3aae9788bd459d278cb2efa77099", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd946c63a6c3aae9788bd459d278cb2efa77099", "html_url": "https://github.com/rust-lang/rust/commit/8fd946c63a6c3aae9788bd459d278cb2efa77099"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "ea7a809c6badb61f34f55ee3bd82ab25a2bf2fb9", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2371914a05f8f2763dffe6e2511d0870bcd6b461/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2371914a05f8f2763dffe6e2511d0870bcd6b461/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=2371914a05f8f2763dffe6e2511d0870bcd6b461", "patch": "@@ -13,9 +13,10 @@ use crate::iter::{InPlaceIterable, SourceIter, TrustedLen};\n pub struct Zip<A, B> {\n     a: A,\n     b: B,\n-    // index and len are only used by the specialized version of zip\n+    // index, len and a_len are only used by the specialized version of zip\n     index: usize,\n     len: usize,\n+    a_len: usize,\n }\n impl<A: Iterator, B: Iterator> Zip<A, B> {\n     pub(in crate::iter) fn new(a: A, b: B) -> Zip<A, B> {\n@@ -110,6 +111,7 @@ where\n             b,\n             index: 0, // unused\n             len: 0,   // unused\n+            a_len: 0, // unused\n         }\n     }\n \n@@ -184,8 +186,9 @@ where\n     B: TrustedRandomAccess + Iterator,\n {\n     fn new(a: A, b: B) -> Self {\n-        let len = cmp::min(a.size(), b.size());\n-        Zip { a, b, index: 0, len }\n+        let a_len = a.size();\n+        let len = cmp::min(a_len, b.size());\n+        Zip { a, b, index: 0, len, a_len }\n     }\n \n     #[inline]\n@@ -197,7 +200,7 @@ where\n             unsafe {\n                 Some((self.a.__iterator_get_unchecked(i), self.b.__iterator_get_unchecked(i)))\n             }\n-        } else if A::MAY_HAVE_SIDE_EFFECT && self.index < self.a.size() {\n+        } else if A::MAY_HAVE_SIDE_EFFECT && self.index < self.a_len {\n             let i = self.index;\n             self.index += 1;\n             self.len += 1;\n@@ -262,6 +265,7 @@ where\n                     for _ in 0..sz_a - self.len {\n                         self.a.next_back();\n                     }\n+                    self.a_len = self.len;\n                 }\n                 let sz_b = self.b.size();\n                 if B::MAY_HAVE_SIDE_EFFECT && sz_b > self.len {\n@@ -273,6 +277,7 @@ where\n         }\n         if self.index < self.len {\n             self.len -= 1;\n+            self.a_len -= 1;\n             let i = self.len;\n             // SAFETY: `i` is smaller than the previous value of `self.len`,\n             // which is also smaller than or equal to `self.a.len()` and `self.b.len()`"}]}