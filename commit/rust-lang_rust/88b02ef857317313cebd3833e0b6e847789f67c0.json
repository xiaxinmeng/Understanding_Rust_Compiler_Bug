{"sha": "88b02ef857317313cebd3833e0b6e847789f67c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YjAyZWY4NTczMTczMTNjZWJkMzgzM2UwYjZlODQ3Nzg5ZjY3YzA=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-10-10T22:41:29Z"}, "committer": {"name": "Paul Daniel Faria", "email": "pfaria@localhost.localdomain", "date": "2017-10-13T12:43:27Z"}, "message": "Add allow_dead code directive to unused methods", "tree": {"sha": "07a13092f6bee88325a8bbc6e891db12283e6304", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07a13092f6bee88325a8bbc6e891db12283e6304"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88b02ef857317313cebd3833e0b6e847789f67c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88b02ef857317313cebd3833e0b6e847789f67c0", "html_url": "https://github.com/rust-lang/rust/commit/88b02ef857317313cebd3833e0b6e847789f67c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88b02ef857317313cebd3833e0b6e847789f67c0/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50ac63b9b179dca946c5fcbd50541359ccfc68c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ac63b9b179dca946c5fcbd50541359ccfc68c9", "html_url": "https://github.com/rust-lang/rust/commit/50ac63b9b179dca946c5fcbd50541359ccfc68c9"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "f3f4228b421ee423d73c94e82dc57b642662a18b", "filename": "src/librustc_mir/transform/nll/infer.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88b02ef857317313cebd3833e0b6e847789f67c0/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88b02ef857317313cebd3833e0b6e847789f67c0/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs?ref=88b02ef857317313cebd3833e0b6e847789f67c0", "patch": "@@ -52,10 +52,12 @@ impl InferenceContext {\n         }\n     }\n \n+    #[allow(dead_code)]\n     pub fn cap_var(&mut self, v: RegionIndex) {\n         self.definitions[v].capped = true;\n     }\n \n+    #[allow(dead_code)]\n     pub fn add_live_point(&mut self, v: RegionIndex, point: Location) {\n         debug!(\"add_live_point({:?}, {:?})\", v, point);\n         let definition = &mut self.definitions[v];\n@@ -69,11 +71,13 @@ impl InferenceContext {\n         }\n     }\n \n+    #[allow(dead_code)]\n     pub fn add_outlives(&mut self, sup: RegionIndex, sub: RegionIndex, point: Location) {\n         debug!(\"add_outlives({:?}: {:?} @ {:?}\", sup, sub, point);\n         self.constraints.push(Constraint { sup, sub, point });\n     }\n \n+    #[allow(dead_code)]\n     pub fn region(&self, v: RegionIndex) -> &Region {\n         &self.definitions[v].value\n     }\n@@ -130,6 +134,7 @@ impl InferenceContext {\n }\n \n struct Dfs<'a, 'gcx: 'tcx + 'a, 'tcx: 'a> {\n+    #[allow(dead_code)]\n     infcx: &'a InferCtxt<'a, 'gcx, 'tcx>,\n     mir: &'a Mir<'tcx>,\n }"}]}