{"sha": "6a5dea778b16a35d765a3a98f2ac303c5cc3df25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNWRlYTc3OGIxNmEzNWQ3NjVhM2E5OGYyYWMzMDNjNWNjM2RmMjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-24T19:52:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-24T19:52:15Z"}, "message": "Merge #2394\n\n2394: Implement HasModule for AdtId r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "25be7f35fc0cdbde880600660d9c98b440920931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25be7f35fc0cdbde880600660d9c98b440920931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a5dea778b16a35d765a3a98f2ac303c5cc3df25", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2t9wCRBK7hj4Ov3rIwAAdHIIADCtoKNojtWZ33cmPfWfHnnc\nGF635K4SecXe9dQRfDzE/t38bFyIWGIpKuR6/eXPpZ+Weppgo9KCud+oiDTYDQTF\nVR5lToj7cEDEQUDR4kjY5gXHJkgHeyc8sod+8V0XaJryq7nbQCpDA5CSMDdOfYGY\nmFbstrHGOXN3qLWpWpcE+chHPQ9UhzKYda45Q/Hw33qyRi7mBlJa0BxWwlsxGyVY\nPKMFlltOn4U1xEdK4qO+ZRPGWn6A2v2wIKif4u/V8IQ4gfLsxWzgHp4qzq+ZEJ7w\nbtG16NCWoNNu91SpIYuMsRguKPc560IK/V25Oxb6WKYiFOTa246HYxTR69SY6QQ=\n=e6TM\n-----END PGP SIGNATURE-----\n", "payload": "tree 25be7f35fc0cdbde880600660d9c98b440920931\nparent f16cff3cad931d48a5516b2aec468cfddbed7dd1\nparent a0e1dbb45038440ddfe0c53c99d16b7f50c2d2a3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574625135 +0000\ncommitter GitHub <noreply@github.com> 1574625135 +0000\n\nMerge #2394\n\n2394: Implement HasModule for AdtId r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a5dea778b16a35d765a3a98f2ac303c5cc3df25", "html_url": "https://github.com/rust-lang/rust/commit/6a5dea778b16a35d765a3a98f2ac303c5cc3df25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a5dea778b16a35d765a3a98f2ac303c5cc3df25/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f16cff3cad931d48a5516b2aec468cfddbed7dd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f16cff3cad931d48a5516b2aec468cfddbed7dd1", "html_url": "https://github.com/rust-lang/rust/commit/f16cff3cad931d48a5516b2aec468cfddbed7dd1"}, {"sha": "a0e1dbb45038440ddfe0c53c99d16b7f50c2d2a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0e1dbb45038440ddfe0c53c99d16b7f50c2d2a3", "html_url": "https://github.com/rust-lang/rust/commit/a0e1dbb45038440ddfe0c53c99d16b7f50c2d2a3"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "5bc9ffc0dc8af5237cc9066ad92aded0d1de774d", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6a5dea778b16a35d765a3a98f2ac303c5cc3df25/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a5dea778b16a35d765a3a98f2ac303c5cc3df25/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=6a5dea778b16a35d765a3a98f2ac303c5cc3df25", "patch": "@@ -481,6 +481,16 @@ impl HasModule for ConstLoc {\n     }\n }\n \n+impl HasModule for AdtId {\n+    fn module(&self, db: &impl db::DefDatabase) -> ModuleId {\n+        match self {\n+            AdtId::StructId(it) => it.0.module(db),\n+            AdtId::UnionId(it) => it.0.module(db),\n+            AdtId::EnumId(it) => it.module(db),\n+        }\n+    }\n+}\n+\n impl HasModule for StaticLoc {\n     fn module(&self, _db: &impl db::DefDatabase) -> ModuleId {\n         self.container"}, {"sha": "95b3c926dc28febbc311db35302c3f8a6eb173ea", "filename": "crates/ra_hir_def/src/resolver.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6a5dea778b16a35d765a3a98f2ac303c5cc3df25/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a5dea778b16a35d765a3a98f2ac303c5cc3df25/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs?ref=6a5dea778b16a35d765a3a98f2ac303c5cc3df25", "patch": "@@ -18,8 +18,8 @@ use crate::{\n     path::{Path, PathKind},\n     per_ns::PerNs,\n     AdtId, AstItemDef, ConstId, ContainerId, DefWithBodyId, EnumId, EnumVariantId, FunctionId,\n-    GenericDefId, ImplId, LocalModuleId, Lookup, ModuleDefId, ModuleId, StaticId, StructId,\n-    TraitId, TypeAliasId,\n+    GenericDefId, HasModule, ImplId, LocalModuleId, Lookup, ModuleDefId, ModuleId, StaticId,\n+    StructId, TraitId, TypeAliasId,\n };\n \n #[derive(Debug, Clone, Default)]\n@@ -503,13 +503,7 @@ impl HasResolver for TraitId {\n impl<T: Into<AdtId>> HasResolver for T {\n     fn resolver(self, db: &impl DefDatabase) -> Resolver {\n         let def = self.into();\n-        let module = match def {\n-            AdtId::StructId(it) => it.0.module(db),\n-            AdtId::UnionId(it) => it.0.module(db),\n-            AdtId::EnumId(it) => it.module(db),\n-        };\n-\n-        module\n+        def.module(db)\n             .resolver(db)\n             .push_generic_params_scope(db, def.into())\n             .push_scope(Scope::AdtScope(def))"}]}