{"sha": "98eb29cbba66561cf184f2d7f4277b38bd6b2aad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZWIyOWNiYmE2NjU2MWNmMTg0ZjJkN2Y0Mjc3YjM4YmQ2YjJhYWQ=", "commit": {"author": {"name": "Matthew McAllister", "email": "matthew.mcallister.0@gmail.com", "date": "2020-05-25T00:54:30Z"}, "committer": {"name": "Matthew McAllister", "email": "matthew.mcallister.0@gmail.com", "date": "2020-05-25T00:54:30Z"}, "message": "Fix trait alias inherent impl resolution\n\nFixes #60021 and #72415.", "tree": {"sha": "1f29fd547585a58a761bf763cb17ecddb3410c62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f29fd547585a58a761bf763cb17ecddb3410c62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98eb29cbba66561cf184f2d7f4277b38bd6b2aad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98eb29cbba66561cf184f2d7f4277b38bd6b2aad", "html_url": "https://github.com/rust-lang/rust/commit/98eb29cbba66561cf184f2d7f4277b38bd6b2aad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98eb29cbba66561cf184f2d7f4277b38bd6b2aad/comments", "author": {"login": "matthew-mcallister", "id": 6722367, "node_id": "MDQ6VXNlcjY3MjIzNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6722367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-mcallister", "html_url": "https://github.com/matthew-mcallister", "followers_url": "https://api.github.com/users/matthew-mcallister/followers", "following_url": "https://api.github.com/users/matthew-mcallister/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-mcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-mcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-mcallister/subscriptions", "organizations_url": "https://api.github.com/users/matthew-mcallister/orgs", "repos_url": "https://api.github.com/users/matthew-mcallister/repos", "events_url": "https://api.github.com/users/matthew-mcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-mcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthew-mcallister", "id": 6722367, "node_id": "MDQ6VXNlcjY3MjIzNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/6722367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-mcallister", "html_url": "https://github.com/matthew-mcallister", "followers_url": "https://api.github.com/users/matthew-mcallister/followers", "following_url": "https://api.github.com/users/matthew-mcallister/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-mcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-mcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-mcallister/subscriptions", "organizations_url": "https://api.github.com/users/matthew-mcallister/orgs", "repos_url": "https://api.github.com/users/matthew-mcallister/repos", "events_url": "https://api.github.com/users/matthew-mcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-mcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "963bf528292d8f97104515e32908e30c2467b6a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/963bf528292d8f97104515e32908e30c2467b6a8", "html_url": "https://github.com/rust-lang/rust/commit/963bf528292d8f97104515e32908e30c2467b6a8"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "33290b5ca82ba72c3f9ea105661b0fd0a981b815", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/98eb29cbba66561cf184f2d7f4277b38bd6b2aad/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eb29cbba66561cf184f2d7f4277b38bd6b2aad/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=98eb29cbba66561cf184f2d7f4277b38bd6b2aad", "patch": "@@ -795,6 +795,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n \n     fn assemble_inherent_candidates_from_param(&mut self, param_ty: ty::ParamTy) {\n         // FIXME: do we want to commit to this behavior for param bounds?\n+        debug!(\"assemble_inherent_candidates_from_param(param_ty={:?})\", param_ty);\n \n         let bounds = self.param_env.caller_bounds.iter().filter_map(|predicate| match *predicate {\n             ty::Predicate::Trait(ref trait_predicate, _) => {\n@@ -949,7 +950,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                         import_ids: import_ids.clone(),\n                         kind: TraitCandidate(new_trait_ref),\n                     },\n-                    true,\n+                    false,\n                 );\n             });\n         } else {"}, {"sha": "5e27ed3c6460eba62cc2ca8844ca0d1f7a2e5567", "filename": "src/test/ui/traits/trait-alias/issue-60021-assoc-method-resolve.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/98eb29cbba66561cf184f2d7f4277b38bd6b2aad/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Fissue-60021-assoc-method-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eb29cbba66561cf184f2d7f4277b38bd6b2aad/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Fissue-60021-assoc-method-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Fissue-60021-assoc-method-resolve.rs?ref=98eb29cbba66561cf184f2d7f4277b38bd6b2aad", "patch": "@@ -0,0 +1,19 @@\n+// check-pass\n+\n+#![feature(trait_alias)]\n+\n+trait SomeTrait {\n+    fn map(&self) {}\n+}\n+\n+impl<T> SomeTrait for Option<T> {}\n+\n+trait SomeAlias = SomeTrait;\n+\n+fn main() {\n+    let x = Some(123);\n+    // This should resolve to the trait impl for Option\n+    Option::map(x, |z| z);\n+    // This should resolve to the trait impl for SomeTrait\n+    SomeTrait::map(&x);\n+}"}, {"sha": "e49125d10249d635391f7b231862a285e24eb175", "filename": "src/test/ui/traits/trait-alias/issue-72415-assoc-const-resolve.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/98eb29cbba66561cf184f2d7f4277b38bd6b2aad/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Fissue-72415-assoc-const-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98eb29cbba66561cf184f2d7f4277b38bd6b2aad/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Fissue-72415-assoc-const-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Fissue-72415-assoc-const-resolve.rs?ref=98eb29cbba66561cf184f2d7f4277b38bd6b2aad", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+\n+#![feature(trait_alias)]\n+\n+trait Bounded { const MAX: Self; }\n+\n+impl Bounded for u32 {\n+    // This should correctly resolve to the associated const in the inherent impl of u32.\n+    const MAX: Self = u32::MAX;\n+}\n+\n+trait Num = Bounded + Copy;\n+\n+fn main() {}"}]}