{"sha": "68f7b265042c5dc023f24aaf65db60d030c8dbc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZjdiMjY1MDQyYzVkYzAyM2YyNGFhZjY1ZGI2MGQwMzBjOGRiYzI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-06T12:01:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-06T12:01:20Z"}, "message": "Rollup merge of #34916 - tbu-:pr_comment_on_seek_cast, r=GuillaumeGomez\n\nComment on the casts in the `seek` implementations on files", "tree": {"sha": "2c76880f49ac6ee7ede90148c0aa631daa95f515", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c76880f49ac6ee7ede90148c0aa631daa95f515"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68f7b265042c5dc023f24aaf65db60d030c8dbc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68f7b265042c5dc023f24aaf65db60d030c8dbc2", "html_url": "https://github.com/rust-lang/rust/commit/68f7b265042c5dc023f24aaf65db60d030c8dbc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68f7b265042c5dc023f24aaf65db60d030c8dbc2/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e04264b2387c66e10d150e50fca4cb9cba19046", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e04264b2387c66e10d150e50fca4cb9cba19046", "html_url": "https://github.com/rust-lang/rust/commit/8e04264b2387c66e10d150e50fca4cb9cba19046"}, {"sha": "291b6f16bb03c92fb383dfa12b8849808bace801", "url": "https://api.github.com/repos/rust-lang/rust/commits/291b6f16bb03c92fb383dfa12b8849808bace801", "html_url": "https://github.com/rust-lang/rust/commit/291b6f16bb03c92fb383dfa12b8849808bace801"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "3b132744f7055ce176e0f0689aca601b53a454c6", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68f7b265042c5dc023f24aaf65db60d030c8dbc2/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68f7b265042c5dc023f24aaf65db60d030c8dbc2/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=68f7b265042c5dc023f24aaf65db60d030c8dbc2", "patch": "@@ -27,7 +27,7 @@ use sys_common::{AsInner, FromInner};\n #[cfg(any(target_os = \"linux\", target_os = \"emscripten\"))]\n use libc::{stat64, fstat64, lstat64, off64_t, ftruncate64, lseek64, dirent64, readdir64_r, open64};\n #[cfg(target_os = \"android\")]\n-use libc::{stat as stat64, fstat as fstat64, lstat as lstat64, off64_t, lseek64,\n+use libc::{stat as stat64, fstat as fstat64, lstat as lstat64, lseek64,\n            dirent as dirent64, open as open64};\n #[cfg(not(any(target_os = \"linux\",\n               target_os = \"emscripten\",\n@@ -485,9 +485,11 @@ impl File {\n \n     pub fn seek(&self, pos: SeekFrom) -> io::Result<u64> {\n         let (whence, pos) = match pos {\n-            SeekFrom::Start(off) => (libc::SEEK_SET, off as off64_t),\n-            SeekFrom::End(off) => (libc::SEEK_END, off as off64_t),\n-            SeekFrom::Current(off) => (libc::SEEK_CUR, off as off64_t),\n+            // Casting to `i64` is fine, too large values will end up as\n+            // negative which will cause an error in `lseek64`.\n+            SeekFrom::Start(off) => (libc::SEEK_SET, off as i64),\n+            SeekFrom::End(off) => (libc::SEEK_END, off),\n+            SeekFrom::Current(off) => (libc::SEEK_CUR, off),\n         };\n         let n = cvt(unsafe { lseek64(self.0.raw(), pos, whence) })?;\n         Ok(n as u64)"}, {"sha": "4e6cef9a28d8f32147d5db051c5e95c2f5469a69", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68f7b265042c5dc023f24aaf65db60d030c8dbc2/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68f7b265042c5dc023f24aaf65db60d030c8dbc2/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=68f7b265042c5dc023f24aaf65db60d030c8dbc2", "patch": "@@ -324,6 +324,8 @@ impl File {\n \n     pub fn seek(&self, pos: SeekFrom) -> io::Result<u64> {\n         let (whence, pos) = match pos {\n+            // Casting to `i64` is fine, `SetFilePointerEx` reinterprets this\n+            // integer as `u64`.\n             SeekFrom::Start(n) => (c::FILE_BEGIN, n as i64),\n             SeekFrom::End(n) => (c::FILE_END, n),\n             SeekFrom::Current(n) => (c::FILE_CURRENT, n),"}]}