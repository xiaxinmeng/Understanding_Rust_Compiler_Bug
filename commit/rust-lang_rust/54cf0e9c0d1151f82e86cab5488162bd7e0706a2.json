{"sha": "54cf0e9c0d1151f82e86cab5488162bd7e0706a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0Y2YwZTljMGQxMTUxZjgyZTg2Y2FiNTQ4ODE2MmJkN2UwNzA2YTI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-05T21:45:02Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-05T21:45:02Z"}, "message": "Use precise return type to allocate retslot in trans_args\n\nUsing type_of_or_i8 did, predictably, allocate an i8 for a type parameter,\nwhich leads to memory corruption and general confusion.\n\nCloses #1443", "tree": {"sha": "fba7f39fd82131ec97b07e0de8a18ef6129cf229", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fba7f39fd82131ec97b07e0de8a18ef6129cf229"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54cf0e9c0d1151f82e86cab5488162bd7e0706a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54cf0e9c0d1151f82e86cab5488162bd7e0706a2", "html_url": "https://github.com/rust-lang/rust/commit/54cf0e9c0d1151f82e86cab5488162bd7e0706a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54cf0e9c0d1151f82e86cab5488162bd7e0706a2/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f84b2563f2d644a3d0cae4c2bc66c483008936", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f84b2563f2d644a3d0cae4c2bc66c483008936", "html_url": "https://github.com/rust-lang/rust/commit/75f84b2563f2d644a3d0cae4c2bc66c483008936"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "388268953a17b1b62b64e67ca1f3cf4c3d23e4f3", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/54cf0e9c0d1151f82e86cab5488162bd7e0706a2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cf0e9c0d1151f82e86cab5488162bd7e0706a2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=54cf0e9c0d1151f82e86cab5488162bd7e0706a2", "patch": "@@ -3176,15 +3176,22 @@ fn trans_args(cx: @block_ctxt, llenv: ValueRef,\n       _ { }\n     }\n     // Arg 0: Output pointer.\n-    let llretty = type_of_or_i8(bcx, full_retty);\n     let llretslot = alt dest {\n       ignore. {\n         if ty::type_is_nil(tcx, retty) {\n-            llvm::LLVMGetUndef(T_ptr(llretty))\n-        } else { alloca(cx, llretty) }\n+            llvm::LLVMGetUndef(T_ptr(T_nil()))\n+        } else {\n+            let {bcx: cx, val} = alloc_ty(bcx, full_retty);\n+            bcx = cx;\n+            val\n+        }\n       }\n       save_in(dst) { dst }\n-      by_val(_) { alloca(cx, llretty) }\n+      by_val(_) {\n+          let {bcx: cx, val} = alloc_ty(bcx, full_retty);\n+          bcx = cx;\n+          val\n+      }\n     };\n \n     if ty::type_contains_params(tcx, retty) {"}]}