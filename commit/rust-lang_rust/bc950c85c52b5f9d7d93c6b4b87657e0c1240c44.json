{"sha": "bc950c85c52b5f9d7d93c6b4b87657e0c1240c44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOTUwYzg1YzUyYjVmOWQ3ZDkzYzZiNGI4NzY1N2UwYzEyNDBjNDQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-21T11:04:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-21T11:04:53Z"}, "message": "Rollup merge of #81185 - osa1:fix_80742, r=oli-obk\n\nFix ICE in mir when evaluating SizeOf on unsized type\n\nNot quite ready yet. This tries to fix #80742 as discussed on [Zulip topic][1],\nby using `delay_span_bug`.\n\nI don't understand what `delay_span_bug` does. It seems like my error message\nis never used. With this patch, in this program:\n\n```rust\n#![allow(incomplete_features)]\n#![feature(const_evaluatable_checked)]\n#![feature(const_generics)]\n\nuse std::fmt::Debug;\nuse std::marker::PhantomData;\nuse std::mem::size_of;\n\nstruct Inline<T>\nwhere\n    [u8; size_of::<T>() + 1]: ,\n{\n    _phantom: PhantomData<T>,\n    buf: [u8; size_of::<T>() + 1],\n}\n\nimpl<T> Inline<T>\nwhere\n    [u8; size_of::<T>() + 1]: ,\n{\n    pub fn new(val: T) -> Inline<T> {\n        todo!()\n    }\n}\n\nfn main() {\n    let dst = Inline::<dyn Debug>::new(0); // line 27\n}\n```\n\nthese errors are printed, both for line 27 (annotated line above):\n\n- \"no function or associated item named `new` found for struct `Inline<dyn\n  Debug>` in the current scope\"\n- \"the size for values of type `dyn Debug` cannot be known at compilation time\"\n\nSecond error makes sense, but I'm not sure about the first one and why it's\neven printed.\n\nFinally, I'm not sure about the span passing in `const_eval`.\n\n[1]: https://rust-lang.zulipchat.com/#narrow/stream/269128-miri/topic/Help.20fixing.20.2380742", "tree": {"sha": "6adae6f98eeb6ecf05aba923606643c3d14228b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6adae6f98eeb6ecf05aba923606643c3d14228b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgCV/VCRBK7hj4Ov3rIwAAdHIIABqqeX7LNjUGP0nJTHrzXGMl\nk+00+yPUGlNOUyNVKnyEQrM9CPFnKhRP8YDyRRNzD+rWBz/uTcQEeANVaCLk+TBy\nkGkn5ZDBfCK86edytnrb/nfQjoATztpX5A7B5I/CEkJpN8M+61JY1523xzNNZLOj\nOhXRmwkk1jMzVdHwsPvc/LfKZ1h/bfqfOC9AZ7I5OcIDeKofLysfjTJ1lgj2prXR\np2es4EBP2kA44akHMGzC11P7JMW9DA3dZyp3R7gOXePT1kTBvzbL07IWBNhMnxKN\nl2iAs1gkEm8ko89yMat+bOJZDQYZwOtvab6aqz5nbq8WonU+Qehtuo5RwAJeQMs=\n=4mAd\n-----END PGP SIGNATURE-----\n", "payload": "tree 6adae6f98eeb6ecf05aba923606643c3d14228b5\nparent 0aeb2fcba1370e820863b10af5db3cf1013adbe1\nparent 3fb53c2c85a12ff6e0b0667d6be547c7aab29d9f\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611227093 +0900\ncommitter GitHub <noreply@github.com> 1611227093 +0900\n\nRollup merge of #81185 - osa1:fix_80742, r=oli-obk\n\nFix ICE in mir when evaluating SizeOf on unsized type\n\nNot quite ready yet. This tries to fix #80742 as discussed on [Zulip topic][1],\nby using `delay_span_bug`.\n\nI don't understand what `delay_span_bug` does. It seems like my error message\nis never used. With this patch, in this program:\n\n```rust\n#![allow(incomplete_features)]\n#![feature(const_evaluatable_checked)]\n#![feature(const_generics)]\n\nuse std::fmt::Debug;\nuse std::marker::PhantomData;\nuse std::mem::size_of;\n\nstruct Inline<T>\nwhere\n    [u8; size_of::<T>() + 1]: ,\n{\n    _phantom: PhantomData<T>,\n    buf: [u8; size_of::<T>() + 1],\n}\n\nimpl<T> Inline<T>\nwhere\n    [u8; size_of::<T>() + 1]: ,\n{\n    pub fn new(val: T) -> Inline<T> {\n        todo!()\n    }\n}\n\nfn main() {\n    let dst = Inline::<dyn Debug>::new(0); // line 27\n}\n```\n\nthese errors are printed, both for line 27 (annotated line above):\n\n- \"no function or associated item named `new` found for struct `Inline<dyn\n  Debug>` in the current scope\"\n- \"the size for values of type `dyn Debug` cannot be known at compilation time\"\n\nSecond error makes sense, but I'm not sure about the first one and why it's\neven printed.\n\nFinally, I'm not sure about the span passing in `const_eval`.\n\n[1]: https://rust-lang.zulipchat.com/#narrow/stream/269128-miri/topic/Help.20fixing.20.2380742\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44", "html_url": "https://github.com/rust-lang/rust/commit/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aeb2fcba1370e820863b10af5db3cf1013adbe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aeb2fcba1370e820863b10af5db3cf1013adbe1", "html_url": "https://github.com/rust-lang/rust/commit/0aeb2fcba1370e820863b10af5db3cf1013adbe1"}, {"sha": "3fb53c2c85a12ff6e0b0667d6be547c7aab29d9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fb53c2c85a12ff6e0b0667d6be547c7aab29d9f", "html_url": "https://github.com/rust-lang/rust/commit/3fb53c2c85a12ff6e0b0667d6be547c7aab29d9f"}], "stats": {"total": 86, "additions": 82, "deletions": 4}, "files": [{"sha": "6d447acbecf34caf6679d9fe88eb12e36fdcae7c", "filename": "compiler/rustc_mir/src/interpret/step.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fstep.rs?ref=bc950c85c52b5f9d7d93c6b4b87657e0c1240c44", "patch": "@@ -264,10 +264,13 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             NullaryOp(mir::NullOp::SizeOf, ty) => {\n                 let ty = self.subst_from_current_frame_and_normalize_erasing_regions(ty);\n                 let layout = self.layout_of(ty)?;\n-                assert!(\n-                    !layout.is_unsized(),\n-                    \"SizeOf nullary MIR operator called for unsized type\"\n-                );\n+                if layout.is_unsized() {\n+                    // FIXME: This should be a span_bug (#80742)\n+                    self.tcx.sess.delay_span_bug(\n+                        self.frame().current_span(),\n+                        &format!(\"SizeOf nullary MIR operator called for unsized type {}\", ty),\n+                    );\n+                }\n                 self.write_scalar(Scalar::from_machine_usize(layout.size.bytes(), self), dest)?;\n             }\n "}, {"sha": "c06d182fd567d2acc0cebf1d5a748d96cf6e15c4", "filename": "src/test/ui/mir/issue-80742.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44/src%2Ftest%2Fui%2Fmir%2Fissue-80742.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44/src%2Ftest%2Fui%2Fmir%2Fissue-80742.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-80742.rs?ref=bc950c85c52b5f9d7d93c6b4b87657e0c1240c44", "patch": "@@ -0,0 +1,33 @@\n+// check-fail\n+\n+// This test used to cause an ICE in rustc_mir::interpret::step::eval_rvalue_into_place\n+\n+#![allow(incomplete_features)]\n+#![feature(const_evaluatable_checked)]\n+#![feature(const_generics)]\n+\n+use std::fmt::Debug;\n+use std::marker::PhantomData;\n+use std::mem::size_of;\n+\n+struct Inline<T>\n+where\n+    [u8; size_of::<T>() + 1]: ,\n+{\n+    _phantom: PhantomData<T>,\n+    buf: [u8; size_of::<T>() + 1],\n+}\n+\n+impl<T> Inline<T>\n+where\n+    [u8; size_of::<T>() + 1]: ,\n+{\n+    pub fn new(val: T) -> Inline<T> {\n+        todo!()\n+    }\n+}\n+\n+fn main() {\n+    let dst = Inline::<dyn Debug>::new(0); //~ ERROR\n+    //~^ ERROR\n+}"}, {"sha": "2ec0e9505288bfdc16aa0daf57b65d833cc57ccd", "filename": "src/test/ui/mir/issue-80742.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc950c85c52b5f9d7d93c6b4b87657e0c1240c44/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-80742.stderr?ref=bc950c85c52b5f9d7d93c6b4b87657e0c1240c44", "patch": "@@ -0,0 +1,42 @@\n+error[E0599]: no function or associated item named `new` found for struct `Inline<dyn Debug>` in the current scope\n+  --> $DIR/issue-80742.rs:31:36\n+   |\n+LL | / struct Inline<T>\n+LL | | where\n+LL | |     [u8; size_of::<T>() + 1]: ,\n+LL | | {\n+LL | |     _phantom: PhantomData<T>,\n+LL | |     buf: [u8; size_of::<T>() + 1],\n+LL | | }\n+   | |_- function or associated item `new` not found for this\n+...\n+LL |       let dst = Inline::<dyn Debug>::new(0);\n+   |                                      ^^^ function or associated item not found in `Inline<dyn Debug>`\n+   | \n+  ::: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+   |\n+LL |   pub trait Debug {\n+   |   --------------- doesn't satisfy `dyn Debug: Sized`\n+   |\n+   = note: the method `new` exists but the following trait bounds were not satisfied:\n+           `dyn Debug: Sized`\n+\n+error[E0277]: the size for values of type `dyn Debug` cannot be known at compilation time\n+  --> $DIR/issue-80742.rs:31:15\n+   |\n+LL | struct Inline<T>\n+   |               - required by this bound in `Inline`\n+...\n+LL |     let dst = Inline::<dyn Debug>::new(0);\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `dyn Debug`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | struct Inline<T: ?Sized>\n+   |                ^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0277, E0599.\n+For more information about an error, try `rustc --explain E0277`."}]}