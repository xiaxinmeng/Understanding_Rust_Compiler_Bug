{"sha": "c596e01b8ea34bb46444005425cd5aa825515f7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1OTZlMDFiOGVhMzRiYjQ2NDQ0MDA1NDI1Y2Q1YWE4MjU1MTVmN2I=", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2020-07-19T18:07:21Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2020-07-28T19:45:25Z"}, "message": "add track_caller to RefCell::{borrow, borrow_mut}\n\nSo panic messages point at the offending borrow.", "tree": {"sha": "2f13ceb8d18f2f177767f5b4d043e9f02f55a570", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f13ceb8d18f2f177767f5b4d043e9f02f55a570"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c596e01b8ea34bb46444005425cd5aa825515f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c596e01b8ea34bb46444005425cd5aa825515f7b", "html_url": "https://github.com/rust-lang/rust/commit/c596e01b8ea34bb46444005425cd5aa825515f7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c596e01b8ea34bb46444005425cd5aa825515f7b/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98efae87607aabd7c30b879befe61bf9c29eb978", "url": "https://api.github.com/repos/rust-lang/rust/commits/98efae87607aabd7c30b879befe61bf9c29eb978", "html_url": "https://github.com/rust-lang/rust/commit/98efae87607aabd7c30b879befe61bf9c29eb978"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "cbbfcb4611321a68ae861f650552de7e8a278cd8", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c596e01b8ea34bb46444005425cd5aa825515f7b/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c596e01b8ea34bb46444005425cd5aa825515f7b/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=c596e01b8ea34bb46444005425cd5aa825515f7b", "patch": "@@ -788,6 +788,7 @@ impl<T: ?Sized> RefCell<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n+    #[track_caller]\n     pub fn borrow(&self) -> Ref<'_, T> {\n         self.try_borrow().expect(\"already mutably borrowed\")\n     }\n@@ -863,6 +864,7 @@ impl<T: ?Sized> RefCell<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n+    #[track_caller]\n     pub fn borrow_mut(&self) -> RefMut<'_, T> {\n         self.try_borrow_mut().expect(\"already borrowed\")\n     }"}, {"sha": "d6a3a760b3ee273c5372d45b6b4f71b088d40814", "filename": "src/test/ui/rfc-2091-track-caller/std-panic-locations.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c596e01b8ea34bb46444005425cd5aa825515f7b/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fstd-panic-locations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c596e01b8ea34bb46444005425cd5aa825515f7b/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fstd-panic-locations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fstd-panic-locations.rs?ref=c596e01b8ea34bb46444005425cd5aa825515f7b", "patch": "@@ -7,8 +7,10 @@\n //! Test that panic locations for `#[track_caller]` functions in std have the correct\n //! location reported.\n \n+use std::cell::RefCell;\n use std::collections::{BTreeMap, HashMap, VecDeque};\n use std::ops::{Index, IndexMut};\n+use std::panic::{AssertUnwindSafe, UnwindSafe};\n \n fn main() {\n     // inspect the `PanicInfo` we receive to ensure the right file is the source\n@@ -20,7 +22,7 @@ fn main() {\n         }\n     }));\n \n-    fn assert_panicked(f: impl FnOnce() + std::panic::UnwindSafe) {\n+    fn assert_panicked(f: impl FnOnce() + UnwindSafe) {\n         std::panic::catch_unwind(f).unwrap_err();\n     }\n \n@@ -57,4 +59,9 @@ fn main() {\n     let weirdo: VecDeque<()> = Default::default();\n     assert_panicked(|| { weirdo.index(1); });\n     assert_panicked(|| { weirdo[1]; });\n+\n+    let refcell: RefCell<()> = Default::default();\n+    let _conflicting = refcell.borrow_mut();\n+    assert_panicked(AssertUnwindSafe(|| { refcell.borrow(); }));\n+    assert_panicked(AssertUnwindSafe(|| { refcell.borrow_mut(); }));\n }"}]}