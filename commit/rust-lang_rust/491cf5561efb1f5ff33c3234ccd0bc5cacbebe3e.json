{"sha": "491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MWNmNTU2MWVmYjFmNWZmMzNjMzIzNGNjZDBiYzVjYWNiZWJlM2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T18:04:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T18:04:47Z"}, "message": "Auto merge of #85443 - RalfJung:rollup-d9gd64t, r=RalfJung\n\nRollup of 7 pull requests\n\nSuccessful merges:\n\n - #84462 (rustdoc: use focus for search navigation)\n - #85251 (Make `const_generics_defaults` not an incomplete feature)\n - #85404 (Backport 1.52.1 release notes)\n - #85407 (Improve display for \"copy-path\" button, making it more discreet)\n - #85423 (Don't require cmake on Windows when LLVM isn't being built)\n - #85428 (Add x.py pre-setup instructions)\n - #85442 (fix typo)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "bd996aa4a98801b953ce49b432f8f462a050a17f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd996aa4a98801b953ce49b432f8f462a050a17f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "html_url": "https://github.com/rust-lang/rust/commit/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5560a6a90f08a84728802bb5fa5632a17a78672", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5560a6a90f08a84728802bb5fa5632a17a78672", "html_url": "https://github.com/rust-lang/rust/commit/a5560a6a90f08a84728802bb5fa5632a17a78672"}, {"sha": "738984311575475472d7ac10c6c02628ee4152e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/738984311575475472d7ac10c6c02628ee4152e5", "html_url": "https://github.com/rust-lang/rust/commit/738984311575475472d7ac10c6c02628ee4152e5"}], "stats": {"total": 492, "additions": 267, "deletions": 225}, "files": [{"sha": "af6a4090a27cb58c85b1ddd2adb6accdea2efa80", "filename": "README.md", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -19,8 +19,28 @@ Read [\"Installation\"] from [The Book].\n ## Installing from Source\n \n The Rust build system uses a Python script called `x.py` to build the compiler,\n-which manages the bootstrapping process. More information about it can be found\n-by running `./x.py --help` or reading the [rustc dev guide][rustcguidebuild].\n+which manages the bootstrapping process. It lives in the root of the project.\n+\n+The `x.py` command can be run directly on most systems in the following format: \n+\n+```sh\n+./x.py <subcommand> [flags]\n+```\n+\n+This is how the documentation and examples assume you are running `x.py`.\n+\n+Systems such as Ubuntu 20.04 LTS do not create the necessary `python` command by default when Python is installed that allows `x.py` to be run directly. In that case you can either create a symlink for `python` (Ubuntu provides the `python-is-python3` package for this), or run `x.py` using Python itself:\n+\n+```sh\n+# Python 3\n+python3 x.py <subcommand> [flags]\n+\n+# Python 2.7\n+python2.7 x.py <subcommand> [flags]\n+```\n+\n+More information about `x.py` can be found\n+by running it with the `--help` flag or reading the [rustc dev guide][rustcguidebuild].\n \n [gettingstarted]: https://rustc-dev-guide.rust-lang.org/getting-started.html\n [rustcguidebuild]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html"}, {"sha": "60b3359c1b68ab519664e78c38cfc539a2336192", "filename": "RELEASES.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,3 +1,24 @@\n+Version 1.52.1 (2021-05-10)\n+============================\n+\n+This release disables incremental compilation, unless the user has explicitly\n+opted in via the newly added RUSTC_FORCE_INCREMENTAL=1 environment variable.\n+\n+This is due to the widespread, and frequently occuring, breakage encountered by\n+Rust users due to newly enabled incremental verification in 1.52.0. Notably,\n+Rust users **should** upgrade to 1.52.0 or 1.52.1: the bugs that are detected by\n+newly added incremental verification are still present in past stable versions,\n+and are not yet fixed on any channel. These bugs can lead to miscompilation of\n+Rust binaries.\n+\n+These problems only affect incremental builds, so release builds with Cargo\n+should not be affected unless the user has explicitly opted into incremental.\n+Debug and check builds are affected.\n+\n+See [84970] for more details.\n+\n+[84970]: https://github.com/rust-lang/rust/issues/84970\n+\n Version 1.52.0 (2021-05-06)\n ============================\n "}, {"sha": "b3a6fb3c808b2ad5882dfdcb62bc8488d69106d8", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -698,7 +698,6 @@ pub const INCOMPLETE_FEATURES: &[Symbol] = &[\n     sym::repr128,\n     sym::unsized_locals,\n     sym::capture_disjoint_fields,\n-    sym::const_generics_defaults,\n     sym::inherent_associated_types,\n     sym::type_alias_impl_trait,\n     sym::native_link_modifiers,"}, {"sha": "e18402f8dec1cf02cc64fd1557d26b8913ab2fdc", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1663,7 +1663,7 @@ pub trait Seek {\n     ///\n     /// # Errors\n     ///\n-    /// Seeking can fail, for example becaue it might involve flushing a buffer.\n+    /// Seeking can fail, for example because it might involve flushing a buffer.\n     ///\n     /// Seeking to a negative offset is considered an error.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1675,7 +1675,7 @@ pub trait Seek {\n     ///\n     /// # Errors\n     ///\n-    /// Rewinding can fail, for example becaue it might involve flushing a buffer.\n+    /// Rewinding can fail, for example because it might involve flushing a buffer.\n     ///\n     /// # Example\n     ///"}, {"sha": "a28762ac485ecc03e1358219660b4bc126dfe138", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -93,7 +93,8 @@ pub fn check(build: &mut Build) {\n                     .unwrap_or(true)\n             })\n             .any(|build_llvm_ourselves| build_llvm_ourselves);\n-    if building_llvm || build.config.any_sanitizers_enabled() {\n+    let need_cmake = building_llvm || build.config.any_sanitizers_enabled();\n+    if need_cmake {\n         cmd_finder.must_have(\"cmake\");\n     }\n \n@@ -204,7 +205,7 @@ pub fn check(build: &mut Build) {\n             }\n         }\n \n-        if target.contains(\"msvc\") {\n+        if need_cmake && target.contains(\"msvc\") {\n             // There are three builds of cmake on windows: MSVC, MinGW, and\n             // Cygwin. The Cygwin build does not have generators for Visual\n             // Studio, so detect that here and error."}, {"sha": "307ce9ac3752c37e074c157661b2144801f5481d", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -170,7 +170,8 @@ function hideThemeButtonState() {\n         // 1 for \"In Parameters\"\n         // 2 for \"In Return Types\"\n         currentTab: 0,\n-        mouseMovedAfterSearch: true,\n+        // tab and back preserves the element that was focused.\n+        focusedByTab: [null, null, null],\n         clearInputTimeout: function() {\n             if (searchState.timeout !== null) {\n                 clearTimeout(searchState.timeout);\n@@ -262,10 +263,6 @@ function hideThemeButtonState() {\n                 search_input.placeholder = searchState.input.origPlaceholder;\n             });\n \n-            document.addEventListener(\"mousemove\", function() {\n-                searchState.mouseMovedAfterSearch = true;\n-            });\n-\n             search_input.removeAttribute('disabled');\n \n             // `crates{version}.js` should always be loaded before this script, so we can use it\n@@ -1064,7 +1061,7 @@ function hideThemeButtonState() {\n             [\"T\", \"Focus the theme picker menu\"],\n             [\"\u2191\", \"Move up in search results\"],\n             [\"\u2193\", \"Move down in search results\"],\n-            [\"ctrl + \u2191 / \u2193\", \"Switch result tab\"],\n+            [\"\u2190 / \u2192\", \"Switch result tab (when results focused)\"],\n             [\"&#9166;\", \"Go to active search result\"],\n             [\"+\", \"Expand all sections\"],\n             [\"-\", \"Collapse all sections\"],"}, {"sha": "28fa867b95f939ad9d5765fd681bcc1f302cf86a", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -144,7 +144,7 @@ h4.type.trait-impl, h4.associatedconstant.trait-impl, h4.associatedtype.trait-im\n }\n \n h1, h2, h3, h4,\n-.sidebar, a.source, .search-input, .content table td:first-child > a,\n+.sidebar, a.source, .search-input, .search-results .result-name,\n div.item-list .out-of-band,\n #source-sidebar, #sidebar-toggle,\n details.rustdoc-toggle > summary::before,\n@@ -748,6 +748,15 @@ a {\n \toutline: 0;\n }\n \n+.search-results {\n+\tdisplay: none;\n+\tpadding-bottom: 2em;\n+}\n+\n+.search-results.active {\n+\tdisplay: block;\n+}\n+\n .search-results .desc {\n \twhite-space: nowrap;\n \ttext-overflow: ellipsis;\n@@ -756,22 +765,14 @@ a {\n }\n \n .search-results a {\n+\t/* A little margin ensures the browser's outlining of focused links has room to display. */\n+\tmargin-left: 2px;\n+\tmargin-right: 2px;\n \tdisplay: block;\n }\n \n-.content .search-results td:first-child {\n-\tpadding-right: 0;\n+.result-name {\n \twidth: 50%;\n-}\n-.content .search-results td:first-child a {\n-\tpadding-right: 10px;\n-}\n-.content .search-results td:first-child a:after {\n-\tclear: both;\n-\tcontent: \"\";\n-\tdisplay: block;\n-}\n-.content .search-results td:first-child a span {\n \tfloat: left;\n }\n \n@@ -1134,6 +1135,11 @@ pre.rust {\n .search-failed {\n \ttext-align: center;\n \tmargin-top: 20px;\n+\tdisplay: none;\n+}\n+\n+.search-failed.active {\n+\tdisplay: block;\n }\n \n .search-failed > ul {\n@@ -1262,12 +1268,11 @@ h4 > .notable-traits {\n }\n \n #copy-path {\n+\tbackground: initial;\n \tmargin-left: 10px;\n \tpadding: 0;\n \tpadding-left: 2px;\n-}\n-#copy-path> img {\n-\tmargin-bottom: 2px;\n+\tborder: 0;\n }\n \n #theme-choices {"}, {"sha": "01cfffc5429610104358a2fdc7ff7bb25b1896b6", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 72, "deletions": 114, "changes": 186, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -51,9 +51,9 @@ function printTab(nb) {\n     });\n     onEachLazy(document.getElementById(\"results\").childNodes, function(elem) {\n         if (nb === 0) {\n-            elem.style.display = \"\";\n+            addClass(elem, \"active\");\n         } else {\n-            elem.style.display = \"none\";\n+            removeClass(elem, \"active\");\n         }\n         nb -= 1;\n     });\n@@ -878,106 +878,22 @@ window.initSearch = function(rawSearchIndex) {\n         };\n     }\n \n-    function initSearchNav() {\n-        var hoverTimeout;\n-\n-        var click_func = function(e) {\n-            var el = e.target;\n-            // to retrieve the real \"owner\" of the event.\n-            while (el.tagName !== \"TR\") {\n-                el = el.parentNode;\n-            }\n-            var dst = e.target.getElementsByTagName(\"a\");\n-            if (dst.length < 1) {\n-                return;\n-            }\n-            dst = dst[0];\n-            if (window.location.pathname === dst.pathname) {\n-                searchState.hideResults();\n-                document.location.href = dst.href;\n-            }\n-        };\n-        var mouseover_func = function(e) {\n-            if (searchState.mouseMovedAfterSearch) {\n-                var el = e.target;\n-                // to retrieve the real \"owner\" of the event.\n-                while (el.tagName !== \"TR\") {\n-                    el = el.parentNode;\n-                }\n-                clearTimeout(hoverTimeout);\n-                hoverTimeout = setTimeout(function() {\n-                    onEachLazy(document.getElementsByClassName(\"search-results\"), function(e) {\n-                        onEachLazy(e.getElementsByClassName(\"result\"), function(i_e) {\n-                            removeClass(i_e, \"highlighted\");\n-                        });\n-                    });\n-                    addClass(el, \"highlighted\");\n-                }, 20);\n-            }\n-        };\n-        onEachLazy(document.getElementsByClassName(\"search-results\"), function(e) {\n-            onEachLazy(e.getElementsByClassName(\"result\"), function(i_e) {\n-                i_e.onclick = click_func;\n-                i_e.onmouseover = mouseover_func;\n-            });\n-        });\n-\n-        searchState.input.onkeydown = function(e) {\n-            // \"actives\" references the currently highlighted item in each search tab.\n-            // Each array in \"actives\" represents a tab.\n-            var actives = [[], [], []];\n-            // \"current\" is used to know which tab we're looking into.\n-            var current = 0;\n-            onEachLazy(document.getElementById(\"results\").childNodes, function(e) {\n-                onEachLazy(e.getElementsByClassName(\"highlighted\"), function(h_e) {\n-                    actives[current].push(h_e);\n-                });\n-                current += 1;\n-            });\n-            var SHIFT = 16;\n-            var CTRL = 17;\n-            var ALT = 18;\n+    function nextTab(direction) {\n+        var next = (searchState.currentTab + direction + 3) % searchState.focusedByTab.length;\n+        searchState.focusedByTab[searchState.currentTab] = document.activeElement;\n+        printTab(next);\n+        focusSearchResult();\n+    }\n \n-            var currentTab = searchState.currentTab;\n-            if (e.which === 38) { // up\n-                if (e.ctrlKey) { // Going through result tabs.\n-                    printTab(currentTab > 0 ? currentTab - 1 : 2);\n-                } else {\n-                    if (!actives[currentTab].length ||\n-                        !actives[currentTab][0].previousElementSibling) {\n-                        return;\n-                    }\n-                    addClass(actives[currentTab][0].previousElementSibling, \"highlighted\");\n-                    removeClass(actives[currentTab][0], \"highlighted\");\n-                }\n-                e.preventDefault();\n-            } else if (e.which === 40) { // down\n-                if (e.ctrlKey) { // Going through result tabs.\n-                    printTab(currentTab > 1 ? 0 : currentTab + 1);\n-                } else if (!actives[currentTab].length) {\n-                    var results = document.getElementById(\"results\").childNodes;\n-                    if (results.length > 0) {\n-                        var res = results[currentTab].getElementsByClassName(\"result\");\n-                        if (res.length > 0) {\n-                            addClass(res[0], \"highlighted\");\n-                        }\n-                    }\n-                } else if (actives[currentTab][0].nextElementSibling) {\n-                    addClass(actives[currentTab][0].nextElementSibling, \"highlighted\");\n-                    removeClass(actives[currentTab][0], \"highlighted\");\n-                }\n-                e.preventDefault();\n-            } else if (e.which === 13) { // return\n-                if (actives[currentTab].length) {\n-                    var elem = actives[currentTab][0].getElementsByTagName(\"a\")[0];\n-                    document.location.href = elem.href;\n-                }\n-            } else if ([SHIFT, CTRL, ALT].indexOf(e.which) !== -1) {\n-                // Does nothing, it's just to avoid losing \"focus\" on the highlighted element.\n-            } else if (actives[currentTab].length > 0) {\n-                removeClass(actives[currentTab][0], \"highlighted\");\n-            }\n-        };\n+    // focus the first search result on the active tab, or the result that\n+    // was focused last time this tab was active.\n+    function focusSearchResult() {\n+        var target = searchState.focusedByTab[searchState.currentTab] ||\n+          document.querySelectorAll(\".search-results.active a\").item(0) ||\n+          document.querySelectorAll(\"#titles > button\").item(searchState.currentTab);\n+        if (target) {\n+            target.focus();\n+        }\n     }\n \n     function buildHrefAndPath(item) {\n@@ -1047,16 +963,16 @@ window.initSearch = function(rawSearchIndex) {\n     }\n \n     function addTab(array, query, display) {\n-        var extraStyle = \"\";\n-        if (display === false) {\n-            extraStyle = \" style=\\\"display: none;\\\"\";\n+        var extraClass = \"\";\n+        if (display === true) {\n+            extraClass = \" active\";\n         }\n \n         var output = \"\";\n         var duplicates = {};\n         var length = 0;\n         if (array.length > 0) {\n-            output = \"<table class=\\\"search-results\\\"\" + extraStyle + \">\";\n+            output = \"<div class=\\\"search-results \" + extraClass + \"\\\">\";\n \n             array.forEach(function(item) {\n                 var name, type;\n@@ -1072,20 +988,19 @@ window.initSearch = function(rawSearchIndex) {\n                 }\n                 length += 1;\n \n-                output += \"<tr class=\\\"\" + type + \" result\\\"><td>\" +\n-                          \"<a href=\\\"\" + item.href + \"\\\">\" +\n+                output += \"<a class=\\\"result-\" + type + \"\\\" href=\\\"\" + item.href + \"\\\">\" +\n+                          \"<div><div class=\\\"result-name\\\">\" +\n                           (item.is_alias === true ?\n                            (\"<span class=\\\"alias\\\"><b>\" + item.alias + \" </b></span><span \" +\n                               \"class=\\\"grey\\\"><i>&nbsp;- see&nbsp;</i></span>\") : \"\") +\n                           item.displayPath + \"<span class=\\\"\" + type + \"\\\">\" +\n-                          name + \"</span></a></td><td>\" +\n-                          \"<a href=\\\"\" + item.href + \"\\\">\" +\n+                          name + \"</span></div><div>\" +\n                           \"<span class=\\\"desc\\\">\" + item.desc +\n-                          \"&nbsp;</span></a></td></tr>\";\n+                          \"&nbsp;</span></div></div></a>\";\n             });\n-            output += \"</table>\";\n+            output += \"</div>\";\n         } else {\n-            output = \"<div class=\\\"search-failed\\\"\" + extraStyle + \">No results :(<br/>\" +\n+            output = \"<div class=\\\"search-failed\\\"\" + extraClass + \">No results :(<br/>\" +\n                 \"Try on <a href=\\\"https://duckduckgo.com/?q=\" +\n                 encodeURIComponent(\"rust \" + query.query) +\n                 \"\\\">DuckDuckGo</a>?<br/><br/>\" +\n@@ -1121,7 +1036,7 @@ window.initSearch = function(rawSearchIndex) {\n         {\n             var elem = document.createElement(\"a\");\n             elem.href = results.others[0].href;\n-            elem.style.display = \"none\";\n+            removeClass(elem, \"active\");\n             // For firefox, we need the element to be in the DOM so it can be clicked.\n             document.body.appendChild(elem);\n             elem.click();\n@@ -1162,7 +1077,6 @@ window.initSearch = function(rawSearchIndex) {\n \n         search.innerHTML = output;\n         searchState.showResults(search);\n-        initSearchNav();\n         var elems = document.getElementById(\"titles\").childNodes;\n         elems[0].onclick = function() { printTab(0); };\n         elems[1].onclick = function() { printTab(1); };\n@@ -1440,6 +1354,50 @@ window.initSearch = function(rawSearchIndex) {\n         };\n         searchState.input.onpaste = searchState.input.onchange;\n \n+        searchState.outputElement().addEventListener(\"keydown\", function(e) {\n+            // We only handle unmodified keystrokes here. We don't want to interfere with,\n+            // for instance, alt-left and alt-right for history navigation.\n+            if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n+                return;\n+            }\n+            // up and down arrow select next/previous search result, or the\n+            // search box if we're already at the top.\n+            if (e.which === 38) { // up\n+                var previous = document.activeElement.previousElementSibling;\n+                if (previous) {\n+                    console.log(\"previousElementSibling\", previous);\n+                    previous.focus();\n+                } else {\n+                    searchState.focus();\n+                }\n+                e.preventDefault();\n+            } else if (e.which === 40) { // down\n+                var next = document.activeElement.nextElementSibling;\n+                if (next) {\n+                    next.focus();\n+                }\n+                var rect = document.activeElement.getBoundingClientRect();\n+                if (window.innerHeight - rect.bottom < rect.height) {\n+                    window.scrollBy(0, rect.height);\n+                }\n+                e.preventDefault();\n+            } else if (e.which === 37) { // left\n+                nextTab(-1);\n+                e.preventDefault();\n+            } else if (e.which === 39) { // right\n+                nextTab(1);\n+                e.preventDefault();\n+            }\n+        });\n+\n+        searchState.input.addEventListener(\"keydown\", function(e) {\n+            if (e.which === 40) { // down\n+                focusSearchResult();\n+                e.preventDefault();\n+            }\n+        });\n+\n+\n         var selectCrate = document.getElementById(\"crate-search\");\n         if (selectCrate) {\n             selectCrate.onchange = function() {"}, {"sha": "989ea7140c58792ccfd92f5c5c248f81cbc15922", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 45, "deletions": 22, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -151,13 +151,16 @@ pre, .rustdoc.source .example-wrap {\n \tcolor: #c5c5c5;\n }\n \n-.content .highlighted {\n+.content a:hover {\n+\tbackground-color: #777;\n+}\n+\n+.content a:focus {\n \tcolor: #000 !important;\n \tbackground-color: #c6afb3;\n }\n-.content .highlighted a, .content .highlighted span { color: #000 !important; }\n-.content .highlighted {\n-\tbackground-color: #c6afb3;\n+.content a:focus {\n+\tcolor: #000 !important;\n }\n .search-results a {\n \tcolor: #0096cf;\n@@ -432,31 +435,21 @@ individually rather than as a group) */\n /* FIXME: these rules should be at the bottom of the file but currently must be\n above the `@media (max-width: 700px)` rules due to a bug in the css checker */\n /* see https://github.com/rust-lang/rust/pull/71237#issuecomment-618170143 */\n-.content .highlighted.mod, .content .highlighted.externcrate {}\n .search-input:focus {}\n .content span.attr,.content a.attr,.block a.current.attr,.content span.derive,.content a.derive,\n .block a.current.derive,.content span.macro,.content a.macro,.block a.current.macro {}\n-.content .highlighted.trait {}\n .content span.struct,.content a.struct,.block a.current.struct {}\n #titles>button:hover,#titles>button.selected {}\n-.content .highlighted.traitalias {}\n .content span.type,.content a.type,.block a.current.type {}\n .content span.union,.content a.union,.block a.current.union {}\n-.content .highlighted.foreigntype {}\n pre.rust .lifetime {}\n-.content .highlighted.primitive {}\n-.content .highlighted.constant,.content .highlighted.static {}\n .stab.unstable {}\n-.content .highlighted.fn,.content .highlighted.method,.content .highlighted.tymethod {}\n h2,h3:not(.impl):not(.method):not(.type):not(.tymethod),h4:not(.method):not(.type):not(.tymethod) {}\n .content span.enum,.content a.enum,.block a.current.enum {}\n .content span.constant,.content a.constant,.block a.current.constant,.content span.static,\n-.content a.static,.block a.current.static {}\n+.content a.static, .block a.current.static {}\n .content span.keyword,.content a.keyword,.block a.current.keyword {}\n pre.rust .comment {}\n-.content .highlighted.enum {}\n-.content .highlighted.struct {}\n-.content .highlighted.keyword {}\n .content span.traitalias,.content a.traitalias,.block a.current.traitalias {}\n .content span.fn,.content a.fn,.block a.current.fn,.content span.method,.content a.method,\n .block a.current.method,.content span.tymethod,.content a.tymethod,.block a.current.tymethod,\n@@ -467,15 +460,36 @@ pre.rust .attribute .ident {}\n .content span.foreigntype,.content a.foreigntype,.block a.current.foreigntype {}\n pre.rust .doccomment {}\n .stab.deprecated {}\n-.content .highlighted.attr,.content .highlighted.derive,.content .highlighted.macro {}\n+.content a.attr,.content a.derive,.content a.macro {}\n .stab.portability {}\n-.content .highlighted.union {}\n .content span.primitive,.content a.primitive,.block a.current.primitive {}\n .content span.externcrate,.content span.mod,.content a.mod,.block a.current.mod {}\n-.content .highlighted.type {}\n pre.rust .kw-2,pre.rust .prelude-ty {}\n .content span.trait,.content a.trait,.block a.current.trait {}\n \n+.search-results a:focus span {}\n+a.result-trait:focus {}\n+a.result-traitalias:focus {}\n+a.result-mod:focus,\n+a.result-externcrate:focus {}\n+a.result-mod:focus {}\n+a.result-externcrate:focus {}\n+a.result-enum:focus {}\n+a.result-struct:focus {}\n+a.result-union:focus {}\n+a.result-fn:focus,\n+a.result-method:focus,\n+a.result-tymethod:focus {}\n+a.result-type:focus {}\n+a.result-foreigntype:focus {}\n+a.result-attr:focus,\n+a.result-derive:focus,\n+a.result-macro:focus {}\n+a.result-constant:focus,\n+a.result-static:focus {}\n+a.result-primitive:focus {}\n+a.result-keyword:focus {}\n+\n @media (max-width: 700px) {\n \t.sidebar-menu {\n \t\tbackground-color: #14191f;\n@@ -502,20 +516,29 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, #help-button, #copy-path {\n+#theme-picker, #settings-menu, #help-button {\n \tborder-color: #5c6773;\n \tbackground-color: #0f1419;\n \tcolor: #fff;\n }\n \n-#theme-picker > img, #settings-menu > img, #copy-path > img {\n+#theme-picker > img, #settings-menu > img {\n \tfilter: invert(100);\n }\n \n+#copy-path {\n+\tcolor: #fff;\n+}\n+#copy-path > img {\n+\tfilter: invert(70%);\n+}\n+#copy-path:hover > img {\n+\tfilter: invert(100%);\n+}\n+\n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-#help-button:hover, #help-button:focus,\n-#copy-path:hover, #copy-path:focus {\n+#help-button:hover, #help-button:focus {\n \tborder-color: #e0e0e0;\n }\n "}, {"sha": "e6bd16ddd11b8ecb3609a2629e7917469a4cbcc1", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 39, "deletions": 26, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -109,32 +109,36 @@ pre, .rustdoc.source .example-wrap {\n \tcolor: #ddd;\n }\n \n-.content .highlighted {\n+.content a:hover {\n+\tbackground-color: #777;\n+}\n+\n+.content a:focus {\n \tcolor: #eee !important;\n \tbackground-color: #616161;\n }\n-.content .highlighted a, .content .highlighted span { color: #eee !important; }\n-.content .highlighted.trait { background-color: #013191; }\n-.content .highlighted.traitalias { background-color: #013191; }\n-.content .highlighted.mod,\n-.content .highlighted.externcrate { background-color: #afc6e4; }\n-.content .highlighted.mod { background-color: #803a1b; }\n-.content .highlighted.externcrate { background-color: #396bac; }\n-.content .highlighted.enum { background-color: #5b4e68; }\n-.content .highlighted.struct { background-color: #194e9f; }\n-.content .highlighted.union { background-color: #b7bd49; }\n-.content .highlighted.fn,\n-.content .highlighted.method,\n-.content .highlighted.tymethod { background-color: #4950ed; }\n-.content .highlighted.type { background-color: #38902c; }\n-.content .highlighted.foreigntype { background-color: #b200d6; }\n-.content .highlighted.attr,\n-.content .highlighted.derive,\n-.content .highlighted.macro { background-color: #217d1c; }\n-.content .highlighted.constant,\n-.content .highlighted.static { background-color: #0063cc; }\n-.content .highlighted.primitive { background-color: #00708a; }\n-.content .highlighted.keyword { background-color: #884719; }\n+.search-results a:focus span { color: #eee !important; }\n+a.result-trait:focus { background-color: #013191; }\n+a.result-traitalias:focus { background-color: #013191; }\n+a.result-mod:focus,\n+a.result-externcrate:focus { background-color: #afc6e4; }\n+a.result-mod:focus { background-color: #803a1b; }\n+a.result-externcrate:focus { background-color: #396bac; }\n+a.result-enum:focus { background-color: #5b4e68; }\n+a.result-struct:focus { background-color: #194e9f; }\n+a.result-union:focus { background-color: #b7bd49; }\n+a.result-fn:focus,\n+a.result-method:focus,\n+a.result-tymethod:focus { background-color: #4950ed; }\n+a.result-type:focus { background-color: #38902c; }\n+a.result-foreigntype:focus { background-color: #b200d6; }\n+a.result-attr:focus,\n+a.result-derive:focus,\n+a.result-macro:focus { background-color: #217d1c; }\n+a.result-constant:focus,\n+a.result-static:focus { background-color: #0063cc; }\n+a.result-primitive:focus { background-color: #00708a; }\n+a.result-keyword:focus { background-color: #884719; }\n \n .content .item-info::before { color: #ccc; }\n \n@@ -392,19 +396,28 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, #help-button, #copy-path {\n+#theme-picker, #settings-menu, #help-button {\n \tborder-color: #e0e0e0;\n \tbackground: #f0f0f0;\n \tcolor: #000;\n }\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-#help-button:hover, #help-button:focus,\n-#copy-path:hover, #copy-path:focus {\n+#help-button:hover, #help-button:focus {\n \tborder-color: #ffb900;\n }\n \n+#copy-path {\n+\tcolor: #999;\n+}\n+#copy-path > img {\n+\tfilter: invert(50%);\n+}\n+#copy-path:hover > img {\n+\tfilter: invert(65%);\n+}\n+\n #theme-choices {\n \tborder-color: #e0e0e0;\n \tbackground-color: #353535;"}, {"sha": "5481b348aa26f8059147f572c146d3a438c8d18d", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 37, "deletions": 24, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -109,30 +109,34 @@ pre, .rustdoc.source .example-wrap {\n \tcolor: #4E4C4C;\n }\n \n-.content .highlighted {\n+.content a:hover {\n+\tbackground-color: #ddd;\n+}\n+\n+.content a:focus {\n \tcolor: #000 !important;\n \tbackground-color: #ccc;\n }\n-.content .highlighted a, .content .highlighted span { color: #000 !important; }\n-.content .highlighted.trait { background-color: #c7b6ff; }\n-.content .highlighted.traitalias { background-color: #c7b6ff; }\n-.content .highlighted.mod,\n-.content .highlighted.externcrate { background-color: #afc6e4; }\n-.content .highlighted.enum { background-color: #b4d1b9; }\n-.content .highlighted.struct { background-color: #e7b1a0; }\n-.content .highlighted.union { background-color: #b7bd49; }\n-.content .highlighted.fn,\n-.content .highlighted.method,\n-.content .highlighted.tymethod { background-color: #c6afb3; }\n-.content .highlighted.type { background-color: #ffc891; }\n-.content .highlighted.foreigntype { background-color: #f5c4ff; }\n-.content .highlighted.attr,\n-.content .highlighted.derive,\n-.content .highlighted.macro { background-color: #8ce488; }\n-.content .highlighted.constant,\n-.content .highlighted.static { background-color: #c3e0ff; }\n-.content .highlighted.primitive { background-color: #9aecff; }\n-.content .highlighted.keyword { background-color: #f99650; }\n+.search-results a:focus span { color: #000 !important; }\n+a.result-trait:focus { background-color: #c7b6ff; }\n+a.result-traitalias:focus { background-color: #c7b6ff; }\n+a.result-mod:focus,\n+a.result-externcrate:focus { background-color: #afc6e4; }\n+a.result-enum:focus { background-color: #b4d1b9; }\n+a.result-struct:focus { background-color: #e7b1a0; }\n+a.result-union:focus { background-color: #b7bd49; }\n+a.result-fn:focus,\n+a.result-method:focus,\n+a.result-tymethod:focus { background-color: #c6afb3; }\n+a.result-type:focus { background-color: #ffc891; }\n+a.result-foreigntype:focus { background-color: #f5c4ff; }\n+a.result-attr:focus,\n+a.result-derive:focus,\n+a.result-macro:focus { background-color: #8ce488; }\n+a.result-constant:focus,\n+a.result-static:focus { background-color: #c3e0ff; }\n+a.result-primitive:focus { background-color: #9aecff; }\n+a.result-keyword:focus { background-color: #f99650; }\n \n .content .item-info::before { color: #ccc; }\n \n@@ -384,18 +388,27 @@ kbd {\n \tbox-shadow-color: #c6cbd1;\n }\n \n-#theme-picker, #settings-menu, #help-button, #copy-path {\n+#theme-picker, #settings-menu, #help-button {\n \tborder-color: #e0e0e0;\n \tbackground-color: #fff;\n }\n \n #theme-picker:hover, #theme-picker:focus,\n #settings-menu:hover, #settings-menu:focus,\n-#help-button:hover, #help-button:focus,\n-#copy-path:hover, #copy-path:focus {\n+#help-button:hover, #help-button:focus {\n \tborder-color: #717171;\n }\n \n+#copy-path {\n+\tcolor: #999;\n+}\n+#copy-path > img {\n+\tfilter: invert(50%);\n+}\n+#copy-path:hover > img {\n+\tfilter: invert(35%);\n+}\n+\n #theme-choices {\n \tborder-color: #ccc;\n \tbackground-color: #fff;"}, {"sha": "9779835d3150b40b06e09aea72d59dbace7945e9", "filename": "src/test/ui/const-generics/defaults/const-param-as-default-value.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fconst-param-as-default-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fconst-param-as-default-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fconst-param-as-default-value.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n #![feature(const_generics_defaults)]\n-#![allow(incomplete_features)]\n struct Foo<const N: usize, const M: usize = N>([u8; N], [u8; M]);\n \n fn foo<const N: usize>() -> Foo<N> {"}, {"sha": "dbcab77dcd2ee0eeb06d8dfc6dcdd6f8a6e617c4", "filename": "src/test/ui/const-generics/defaults/const-param-in-ty-defaults.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fconst-param-in-ty-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fconst-param-in-ty-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fconst-param-in-ty-defaults.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n #![feature(const_generics_defaults)]\n-#![allow(incomplete_features)]\n struct Foo<const N: usize, T = [u8; N]>(T);\n \n impl<const N: usize> Foo<N> {"}, {"sha": "d4271adefd12ae1488c017880c78b5b57972222b", "filename": "src/test/ui/const-generics/defaults/default-param-wf-concrete.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-param-wf-concrete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-param-wf-concrete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-param-wf-concrete.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,5 +1,4 @@\n #![feature(const_generics_defaults)]\n-#![allow(incomplete_features)]\n struct Foo<const N: u8 = { 255 + 1 }>;\n //~^ ERROR evaluation of constant value failed\n fn main() {}"}, {"sha": "6fca9d31c0a99f31e498095ffb31e168756d3c52", "filename": "src/test/ui/const-generics/defaults/default-param-wf-concrete.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-param-wf-concrete.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-param-wf-concrete.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fdefault-param-wf-concrete.stderr?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,5 +1,5 @@\n error[E0080]: evaluation of constant value failed\n-  --> $DIR/default-param-wf-concrete.rs:3:28\n+  --> $DIR/default-param-wf-concrete.rs:2:28\n    |\n LL | struct Foo<const N: u8 = { 255 + 1 }>;\n    |                            ^^^^^^^ attempt to compute `u8::MAX + 1_u8`, which would overflow"}, {"sha": "0487668cd2a7c0f7bb152e2944214df4cb29a3e9", "filename": "src/test/ui/const-generics/defaults/pretty-printing-ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fpretty-printing-ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fpretty-printing-ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fpretty-printing-ast.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -4,7 +4,6 @@\n \n #![crate_type = \"lib\"]\n #![feature(const_generics_defaults)]\n-#![allow(incomplete_features)]\n \n trait Foo<const KIND: bool = true> {}\n "}, {"sha": "1bceb8cbb94ddcc3b8e8ac179d353e43000dcb0d", "filename": "src/test/ui/const-generics/defaults/pretty-printing-ast.stdout", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fpretty-printing-ast.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fpretty-printing-ast.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fpretty-printing-ast.stdout?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -6,7 +6,6 @@\n \n #![crate_type = \"lib\"]\n #![feature(const_generics_defaults)]\n-#![allow(incomplete_features)]\n #[prelude_import]\n use ::std::prelude::rust_2015::*;\n #[macro_use]"}, {"sha": "ca29ee942064536aaee9252305c93b693b627796", "filename": "src/test/ui/const-generics/defaults/repr-c-issue-82792.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Frepr-c-issue-82792.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Frepr-c-issue-82792.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Frepr-c-issue-82792.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -3,7 +3,6 @@\n // run-pass\n \n #![feature(const_generics_defaults)]\n-#![allow(incomplete_features)]\n \n #[repr(C)]\n pub struct Loaf<T: Sized, const N: usize = 1> {"}, {"sha": "b47dd2f618cd976b7cc9e61bff27bf1b81a2c0fd", "filename": "src/test/ui/const-generics/min_const_generics/default_function_param.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fdefault_function_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fdefault_function_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fdefault_function_param.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,6 +1,5 @@\n #![crate_type = \"lib\"]\n #![feature(const_generics_defaults)]\n-#![allow(incomplete_features)]\n \n fn foo<const SIZE: usize = 5usize>() {}\n //~^ ERROR defaults for const parameters are"}, {"sha": "11df8621faa24a57ba39cb42e419d7caadf737a3", "filename": "src/test/ui/const-generics/min_const_generics/default_function_param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fdefault_function_param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fdefault_function_param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fdefault_function_param.stderr?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,5 +1,5 @@\n error: defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n-  --> $DIR/default_function_param.rs:5:14\n+  --> $DIR/default_function_param.rs:4:14\n    |\n LL | fn foo<const SIZE: usize = 5usize>() {}\n    |              ^^^^"}, {"sha": "7c4ebca874673f769b76640e8329a0d22aea9a6b", "filename": "src/test/ui/derives/derive-macro-const-default.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fderives%2Fderive-macro-const-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e/src%2Ftest%2Fui%2Fderives%2Fderive-macro-const-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderive-macro-const-default.rs?ref=491cf5561efb1f5ff33c3234ccd0bc5cacbebe3e", "patch": "@@ -1,5 +1,4 @@\n // check-pass\n-#![allow(incomplete_features)]\n #![feature(const_generics_defaults)]\n \n #[derive(Clone, PartialEq, Debug)]"}]}