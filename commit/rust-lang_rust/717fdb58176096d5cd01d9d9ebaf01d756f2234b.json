{"sha": "717fdb58176096d5cd01d9d9ebaf01d756f2234b", "node_id": "C_kwDOAAsO6NoAKDcxN2ZkYjU4MTc2MDk2ZDVjZDAxZDlkOWViYWYwMWQ3NTZmMjIzNGI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-07T10:36:08Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-07T10:36:08Z"}, "message": "Make -Zsimulate-remapped-rust-src-base reproducible on CI", "tree": {"sha": "58682d9bfc3d886cc73c5440e125cd5a4ac3d762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58682d9bfc3d886cc73c5440e125cd5a4ac3d762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/717fdb58176096d5cd01d9d9ebaf01d756f2234b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/717fdb58176096d5cd01d9d9ebaf01d756f2234b", "html_url": "https://github.com/rust-lang/rust/commit/717fdb58176096d5cd01d9d9ebaf01d756f2234b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/717fdb58176096d5cd01d9d9ebaf01d756f2234b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aff39130ff476f0949cd259478737762cc0bd30", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aff39130ff476f0949cd259478737762cc0bd30", "html_url": "https://github.com/rust-lang/rust/commit/8aff39130ff476f0949cd259478737762cc0bd30"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "c4930b73aaab8996def56ae74f102f09f8c823a4", "filename": "src/test/ui/consts/missing_span_in_backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fconsts%2Fmissing_span_in_backtrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fconsts%2Fmissing_span_in_backtrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmissing_span_in_backtrace.rs?ref=717fdb58176096d5cd01d9d9ebaf01d756f2234b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z simulate-remapped-rust-src-base=/rustc/xyz -Z translate-remapped-path-to-local-path=no -Z ui-testing=no\n+// compile-flags: -Z simulate-remapped-rust-src-base=/rustc/FAKE_PREFIX -Z translate-remapped-path-to-local-path=no -Z ui-testing=no\n // normalize-stderr-test \"alloc[0-9]+\" -> \"ALLOC_ID\"\n \n #![feature(const_swap)]"}, {"sha": "e6d3d51990dd502f5748ab7e47a583ff961c359e", "filename": "src/test/ui/consts/missing_span_in_backtrace.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fconsts%2Fmissing_span_in_backtrace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fconsts%2Fmissing_span_in_backtrace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmissing_span_in_backtrace.stderr?ref=717fdb58176096d5cd01d9d9ebaf01d756f2234b", "patch": "@@ -1,18 +1,18 @@\n error[E0080]: evaluation of constant value failed\n-  --> /rustc/xyz/library/core/src/ptr/mod.rs:1135:9\n+  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n    |\n    = note: unable to copy parts of a pointer from memory at ALLOC_ID\n    |\n    = help: this code performed an operation that depends on the underlying bytes representing a pointer\n    = help: the absolute address of a pointer is not known at compile-time, so such operations are not supported\n note: inside `std::ptr::read::<MaybeUninit<MaybeUninit<u8>>>`\n-  --> /rustc/xyz/library/core/src/ptr/mod.rs:1135:9\n+  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n note: inside `mem::swap_simple::<MaybeUninit<MaybeUninit<u8>>>`\n-  --> /rustc/xyz/library/core/src/mem/mod.rs:773:17\n+  --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n note: inside `ptr::swap_nonoverlapping_simple_untyped::<MaybeUninit<u8>>`\n-  --> /rustc/xyz/library/core/src/ptr/mod.rs:944:9\n+  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n note: inside `swap_nonoverlapping::<MaybeUninit<u8>>`\n-  --> /rustc/xyz/library/core/src/ptr/mod.rs:925:14\n+  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n note: inside `X`\n   --> $DIR/missing_span_in_backtrace.rs:17:9\n    |"}, {"sha": "f187d0efa8451abe60bfae1fe0f013ac6439b06d", "filename": "src/test/ui/span/issue-71363.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fspan%2Fissue-71363.rs", "raw_url": "https://github.com/rust-lang/rust/raw/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fspan%2Fissue-71363.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-71363.rs?ref=717fdb58176096d5cd01d9d9ebaf01d756f2234b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z simulate-remapped-rust-src-base=/rustc/xyz -Z translate-remapped-path-to-local-path=no -Z ui-testing=no\n+// compile-flags: -Z simulate-remapped-rust-src-base=/rustc/FAKE_PREFIX -Z translate-remapped-path-to-local-path=no -Z ui-testing=no\n \n struct MyError;\n impl std::error::Error for MyError {}"}, {"sha": "0370e46e6ceb749c82ae6166a7de3f06aaff7da6", "filename": "src/test/ui/span/issue-71363.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr?ref=717fdb58176096d5cd01d9d9ebaf01d756f2234b", "patch": "@@ -7,7 +7,7 @@ error[E0277]: `MyError` doesn't implement `std::fmt::Display`\n   = help: the trait `std::fmt::Display` is not implemented for `MyError`\n   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n note: required by a bound in `std::error::Error`\n- --> /rustc/xyz/library/core/src/error.rs:31:26\n+ --> $SRC_DIR/core/src/error.rs:LL:COL\n   |\n   = note: required by this bound in `std::error::Error`\n \n@@ -20,7 +20,7 @@ error[E0277]: `MyError` doesn't implement `Debug`\n   = help: the trait `Debug` is not implemented for `MyError`\n   = note: add `#[derive(Debug)]` to `MyError` or manually `impl Debug for MyError`\n note: required by a bound in `std::error::Error`\n- --> /rustc/xyz/library/core/src/error.rs:31:18\n+ --> $SRC_DIR/core/src/error.rs:LL:COL\n   |\n   = note: required by this bound in `std::error::Error`\n help: consider annotating `MyError` with `#[derive(Debug)]`"}, {"sha": "1542b1c17ad112006df87805d19e354b82bd6fc8", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/717fdb58176096d5cd01d9d9ebaf01d756f2234b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=717fdb58176096d5cd01d9d9ebaf01d756f2234b", "patch": "@@ -3542,6 +3542,8 @@ impl<'test> TestCx<'test> {\n             option_env!(\"CFG_VIRTUAL_RUST_SOURCE_BASE_DIR\").map(PathBuf::from),\n             // Virtual `/rustc/$sha` coming from download-rustc:\n             std::env::var_os(\"FAKE_DOWNLOAD_RUSTC_PREFIX\").map(PathBuf::from),\n+            // Tests using -Zsimulate-remapped-rust-src-base should use this fake path\n+            Some(\"/rustc/FAKE_PREFIX\".into()),\n         ];\n         for base_dir in source_bases {\n             if let Some(base_dir) = base_dir {"}]}