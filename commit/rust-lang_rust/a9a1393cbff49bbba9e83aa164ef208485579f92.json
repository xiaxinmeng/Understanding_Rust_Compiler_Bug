{"sha": "a9a1393cbff49bbba9e83aa164ef208485579f92", "node_id": "C_kwDOAAsO6NoAKGE5YTEzOTNjYmZmNDliYmJhOWU4M2FhMTY0ZWYyMDg0ODU1NzlmOTI", "commit": {"author": {"name": "Hudson Ayers", "email": "hayers@stanford.edu", "date": "2021-10-14T00:01:31Z"}, "committer": {"name": "Hudson Ayers", "email": "hayers@stanford.edu", "date": "2021-10-15T20:10:03Z"}, "message": "Add -Z location-detail flag", "tree": {"sha": "f4a90f8b56f1f99737628b20db0018229ed675ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4a90f8b56f1f99737628b20db0018229ed675ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9a1393cbff49bbba9e83aa164ef208485579f92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9a1393cbff49bbba9e83aa164ef208485579f92", "html_url": "https://github.com/rust-lang/rust/commit/a9a1393cbff49bbba9e83aa164ef208485579f92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9a1393cbff49bbba9e83aa164ef208485579f92/comments", "author": {"login": "hudson-ayers", "id": 32688905, "node_id": "MDQ6VXNlcjMyNjg4OTA1", "avatar_url": "https://avatars.githubusercontent.com/u/32688905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hudson-ayers", "html_url": "https://github.com/hudson-ayers", "followers_url": "https://api.github.com/users/hudson-ayers/followers", "following_url": "https://api.github.com/users/hudson-ayers/following{/other_user}", "gists_url": "https://api.github.com/users/hudson-ayers/gists{/gist_id}", "starred_url": "https://api.github.com/users/hudson-ayers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hudson-ayers/subscriptions", "organizations_url": "https://api.github.com/users/hudson-ayers/orgs", "repos_url": "https://api.github.com/users/hudson-ayers/repos", "events_url": "https://api.github.com/users/hudson-ayers/events{/privacy}", "received_events_url": "https://api.github.com/users/hudson-ayers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hudson-ayers", "id": 32688905, "node_id": "MDQ6VXNlcjMyNjg4OTA1", "avatar_url": "https://avatars.githubusercontent.com/u/32688905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hudson-ayers", "html_url": "https://github.com/hudson-ayers", "followers_url": "https://api.github.com/users/hudson-ayers/followers", "following_url": "https://api.github.com/users/hudson-ayers/following{/other_user}", "gists_url": "https://api.github.com/users/hudson-ayers/gists{/gist_id}", "starred_url": "https://api.github.com/users/hudson-ayers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hudson-ayers/subscriptions", "organizations_url": "https://api.github.com/users/hudson-ayers/orgs", "repos_url": "https://api.github.com/users/hudson-ayers/repos", "events_url": "https://api.github.com/users/hudson-ayers/events{/privacy}", "received_events_url": "https://api.github.com/users/hudson-ayers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97e3b30285af8526f8d21072a0c6d3f231e74876", "url": "https://api.github.com/repos/rust-lang/rust/commits/97e3b30285af8526f8d21072a0c6d3f231e74876", "html_url": "https://github.com/rust-lang/rust/commit/97e3b30285af8526f8d21072a0c6d3f231e74876"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "299dfed9d5dcea7845f2898b3cb612e1ddc96d80", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a9a1393cbff49bbba9e83aa164ef208485579f92/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9a1393cbff49bbba9e83aa164ef208485579f92/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=a9a1393cbff49bbba9e83aa164ef208485579f92", "patch": "@@ -174,6 +174,20 @@ impl LinkerPluginLto {\n     }\n }\n \n+/// The different settings that can be enabled via the `-Z location-detail` flag.\n+#[derive(Clone, PartialEq, Hash, Debug)]\n+pub struct LocationDetail {\n+    pub file: bool,\n+    pub line: bool,\n+    pub column: bool,\n+}\n+\n+impl LocationDetail {\n+    pub fn all() -> Self {\n+        Self { file: true, line: true, column: true }\n+    }\n+}\n+\n #[derive(Clone, PartialEq, Hash, Debug)]\n pub enum SwitchWithOptPath {\n     Enabled(Option<PathBuf>),\n@@ -2422,7 +2436,7 @@ crate mod dep_tracking {\n     use super::LdImpl;\n     use super::{\n         CFGuard, CrateType, DebugInfo, ErrorOutputType, InstrumentCoverage, LinkerPluginLto,\n-        LtoCli, OptLevel, OutputType, OutputTypes, Passes, SourceFileHashAlgorithm,\n+        LocationDetail, LtoCli, OptLevel, OutputType, OutputTypes, Passes, SourceFileHashAlgorithm,\n         SwitchWithOptPath, SymbolManglingVersion, TrimmedDefPaths,\n     };\n     use crate::lint;\n@@ -2513,6 +2527,7 @@ crate mod dep_tracking {\n         Option<LdImpl>,\n         OutputType,\n         RealFileName,\n+        LocationDetail,\n     );\n \n     impl<T1, T2> DepTrackingHash for (T1, T2)"}, {"sha": "0bc868234afb101be7f726add3c79c016c3ab77f", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a9a1393cbff49bbba9e83aa164ef208485579f92/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9a1393cbff49bbba9e83aa164ef208485579f92/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=a9a1393cbff49bbba9e83aa164ef208485579f92", "patch": "@@ -368,6 +368,8 @@ mod desc {\n         \"either a boolean (`yes`, `no`, `on`, `off`, etc), `thin`, `fat`, or omitted\";\n     pub const parse_linker_plugin_lto: &str =\n         \"either a boolean (`yes`, `no`, `on`, `off`, etc), or the path to the linker plugin\";\n+    pub const parse_location_detail: &str =\n+        \"comma seperated list of location details to track: `file`, `line`, or `column`\";\n     pub const parse_switch_with_opt_path: &str =\n         \"an optional path to the profiling data output directory\";\n     pub const parse_merge_functions: &str = \"one of: `disabled`, `trampolines`, or `aliases`\";\n@@ -484,6 +486,25 @@ mod parse {\n         }\n     }\n \n+    crate fn parse_location_detail(ld: &mut LocationDetail, v: Option<&str>) -> bool {\n+        if let Some(v) = v {\n+            ld.line = false;\n+            ld.file = false;\n+            ld.column = false;\n+            for s in v.split(',') {\n+                match s {\n+                    \"file\" => ld.file = true,\n+                    \"line\" => ld.line = true,\n+                    \"column\" => ld.column = true,\n+                    _ => return false,\n+                }\n+            }\n+            true\n+        } else {\n+            false\n+        }\n+    }\n+\n     crate fn parse_opt_comma_list(slot: &mut Option<Vec<String>>, v: Option<&str>) -> bool {\n         match v {\n             Some(s) => {\n@@ -1152,6 +1173,9 @@ options! {\n         \"a list LLVM plugins to enable (space separated)\"),\n     llvm_time_trace: bool = (false, parse_bool, [UNTRACKED],\n         \"generate JSON tracing data file from LLVM data (default: no)\"),\n+    location_detail: LocationDetail = (LocationDetail::all(), parse_location_detail, [TRACKED],\n+        \"comma seperated list of location details to be tracked when using caller_location \\\n+        valid options are `file`, `line`, and `column` (default: all)\"),\n     ls: bool = (false, parse_bool, [UNTRACKED],\n         \"list the symbols defined by a library crate (default: no)\"),\n     macro_backtrace: bool = (false, parse_bool, [UNTRACKED],"}]}