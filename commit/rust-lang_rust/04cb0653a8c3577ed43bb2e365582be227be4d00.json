{"sha": "04cb0653a8c3577ed43bb2e365582be227be4d00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0Y2IwNjUzYThjMzU3N2VkNDNiYjJlMzY1NTgyYmUyMjdiZTRkMDA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-08-15T20:54:36Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-09-23T16:34:44Z"}, "message": "bootstrap: Remove need for RUSTC_SAVE_ANALYSIS", "tree": {"sha": "b836160641f05b4910e82bd7b5939ca4fb2d2141", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b836160641f05b4910e82bd7b5939ca4fb2d2141"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04cb0653a8c3577ed43bb2e365582be227be4d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04cb0653a8c3577ed43bb2e365582be227be4d00", "html_url": "https://github.com/rust-lang/rust/commit/04cb0653a8c3577ed43bb2e365582be227be4d00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04cb0653a8c3577ed43bb2e365582be227be4d00/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d63e2def82f208f8c15c78db5f0f58cc14792972", "url": "https://api.github.com/repos/rust-lang/rust/commits/d63e2def82f208f8c15c78db5f0f58cc14792972", "html_url": "https://github.com/rust-lang/rust/commit/d63e2def82f208f8c15c78db5f0f58cc14792972"}], "stats": {"total": 46, "additions": 20, "deletions": 26}, "files": [{"sha": "60f4b98d9d840273f96e8858c501d2f57f33bd4d", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/04cb0653a8c3577ed43bb2e365582be227be4d00/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04cb0653a8c3577ed43bb2e365582be227be4d00/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=04cb0653a8c3577ed43bb2e365582be227be4d00", "patch": "@@ -184,15 +184,6 @@ fn main() {\n             cmd.arg(\"-C\").arg(format!(\"codegen-units={}\", s));\n         }\n \n-        // Emit save-analysis info.\n-        if env::var(\"RUSTC_SAVE_ANALYSIS\") == Ok(\"api\".to_string()) {\n-            cmd.arg(\"-Zsave-analysis\");\n-            cmd.env(\"RUST_SAVE_ANALYSIS_CONFIG\",\n-                    \"{\\\"output_file\\\": null,\\\"full_docs\\\": false,\\\n-                     \\\"pub_only\\\": true,\\\"reachable_only\\\": false,\\\n-                     \\\"distro_crate\\\": true,\\\"signatures\\\": false,\\\"borrow_data\\\": false}\");\n-        }\n-\n         // Dealing with rpath here is a little special, so let's go into some\n         // detail. First off, `-rpath` is a linker option on Unix platforms\n         // which adds to the runtime dynamic loader path when looking for"}, {"sha": "3995ab170d12e36fc884ee924023103241a56817", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/04cb0653a8c3577ed43bb2e365582be227be4d00/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04cb0653a8c3577ed43bb2e365582be227be4d00/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=04cb0653a8c3577ed43bb2e365582be227be4d00", "patch": "@@ -796,6 +796,21 @@ impl<'a> Builder<'a> {\n             cargo.env(\"RUST_CHECK\", \"1\");\n         }\n \n+        let stage;\n+        if compiler.stage == 0 && self.local_rebuild {\n+            // Assume the local-rebuild rustc already has stage1 features.\n+            stage = 1;\n+        } else {\n+            stage = compiler.stage;\n+        }\n+\n+        let mut rustflags = Rustflags::new();\n+        if stage != 0 {\n+            rustflags.env(\"RUSTFLAGS_NOT_BOOTSTRAP\");\n+        } else {\n+            rustflags.env(\"RUSTFLAGS_BOOTSTRAP\");\n+        }\n+\n         match mode {\n             Mode::Std | Mode::ToolBootstrap | Mode::ToolStd => {},\n             Mode::Rustc | Mode::Codegen | Mode::ToolRustc => {\n@@ -852,22 +867,6 @@ impl<'a> Builder<'a> {\n         }\n         cargo.env(\"__CARGO_DEFAULT_LIB_METADATA\", &metadata);\n \n-        let stage;\n-        if compiler.stage == 0 && self.local_rebuild {\n-            // Assume the local-rebuild rustc already has stage1 features.\n-            stage = 1;\n-        } else {\n-            stage = compiler.stage;\n-        }\n-\n-        let mut rustflags = Rustflags::new();\n-        rustflags.env(&format!(\"RUSTFLAGS_STAGE_{}\", stage));\n-        if stage != 0 {\n-            rustflags.env(\"RUSTFLAGS_NOT_BOOTSTRAP\");\n-        } else {\n-            rustflags.env(\"RUSTFLAGS_BOOTSTRAP\");\n-        }\n-\n         if cmd == \"clippy\" {\n             rustflags.arg(\"-Zforce-unstable-if-unmarked\");\n         }\n@@ -1064,7 +1063,11 @@ impl<'a> Builder<'a> {\n             && self.config.extended\n             && compiler.is_final_stage(self)\n         {\n-            cargo.env(\"RUSTC_SAVE_ANALYSIS\", \"api\".to_string());\n+            rustflags.arg(\"-Zsave-analysis\");\n+            cargo.env(\"RUST_SAVE_ANALYSIS_CONFIG\",\n+                      \"{\\\"output_file\\\": null,\\\"full_docs\\\": false,\\\n+                       \\\"pub_only\\\": true,\\\"reachable_only\\\": false,\\\n+                       \\\"distro_crate\\\": true,\\\"signatures\\\": false,\\\"borrow_data\\\": false}\");\n         }\n \n         // For `cargo doc` invocations, make rustdoc print the Rust version into the docs"}]}