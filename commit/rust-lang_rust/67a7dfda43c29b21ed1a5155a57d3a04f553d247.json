{"sha": "67a7dfda43c29b21ed1a5155a57d3a04f553d247", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YTdkZmRhNDNjMjliMjFlZDFhNTE1NWE1N2QzYTA0ZjU1M2QyNDc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-12T17:04:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-12T17:05:09Z"}, "message": "internal: remove deprecated fn", "tree": {"sha": "b4dde4f0955de91844e8f4043ae2e3cab093c568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4dde4f0955de91844e8f4043ae2e3cab093c568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a7dfda43c29b21ed1a5155a57d3a04f553d247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a7dfda43c29b21ed1a5155a57d3a04f553d247", "html_url": "https://github.com/rust-lang/rust/commit/67a7dfda43c29b21ed1a5155a57d3a04f553d247", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a7dfda43c29b21ed1a5155a57d3a04f553d247/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d40cf52e6d105bf807f78bd00b69ecd2cb4826b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9", "html_url": "https://github.com/rust-lang/rust/commit/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3984b67456d770bddb42cfbf5988230e8e29f303", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/67a7dfda43c29b21ed1a5155a57d3a04f553d247/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a7dfda43c29b21ed1a5155a57d3a04f553d247/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=67a7dfda43c29b21ed1a5155a57d3a04f553d247", "patch": "@@ -1625,14 +1625,14 @@ impl ModCollector<'_, '_> {\n             .resolve_visibility(self.def_collector.db, self.module_id, visibility)\n             .unwrap_or(Visibility::Public);\n         let modules = &mut self.def_collector.def_map.modules;\n-        let res = modules.alloc(ModuleData::default());\n-        modules[res].parent = Some(self.module_id);\n-        modules[res].origin = match definition {\n+        let origin = match definition {\n             None => ModuleOrigin::Inline { definition: declaration },\n             Some((definition, is_mod_rs)) => {\n                 ModuleOrigin::File { declaration, definition, is_mod_rs }\n             }\n         };\n+        let res = modules.alloc(ModuleData::new(origin));\n+        modules[res].parent = Some(self.module_id);\n         for (name, mac) in modules[self.module_id].scope.collect_legacy_macros() {\n             modules[res].scope.define_legacy_macro(name, mac)\n         }"}]}