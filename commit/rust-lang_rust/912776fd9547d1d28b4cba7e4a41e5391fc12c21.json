{"sha": "912776fd9547d1d28b4cba7e4a41e5391fc12c21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMjc3NmZkOTU0N2QxZDI4YjRjYmE3ZTRhNDFlNTM5MWZjMTJjMjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-27T23:33:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-27T23:33:06Z"}, "message": "Merge #2916\n\n2916: Buffer reads from cargo check's stdout r=matklad a=lnicola\n\n`Stdio::piped()` is unbuffered, which caused RA to read the output of `cargo check` one byte at a time (out of 114KB in my test).\r\n\r\nThis isn't obviously faster on my system, but making fewer syscalls sounds like a good idea.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "3b4137a41a8e2ad8a7baf20be9ec55c728a8b42f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b4137a41a8e2ad8a7baf20be9ec55c728a8b42f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/912776fd9547d1d28b4cba7e4a41e5391fc12c21", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeL3MyCRBK7hj4Ov3rIwAAdHIIAGoZmpNRSFsjLv+iPoTGc3NG\nQRzy9kgZ80h8YrMnYn73TzaPlVCfyoE+sARy+CDrT6G9dCYBLdGjab6fQrrWwt0k\n2RIzT1IeUitZI2dX8pCcoh3qC1QmoZvX/+5AUnDad8ItJRG0mWtkVLepQbhfDnZk\nyOyJww2qgkifl2Q6K4VTxpfq4I9ke+WYwdQkyfGT14sjaFplx+aYK8mBdxkq4Mm0\nqJV7XuzGZZeTWfLQ7Y2pQ68ZLIemXlMyE0Y68+PA2y38aDdR4YdbPGK709tcay3j\n1Mj7xWiZRG78sIAiyf80HTz8b3gDce1+D3TPeucX3u1eHBsHrN9UoGwu+R3RJLk=\n=YrEv\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b4137a41a8e2ad8a7baf20be9ec55c728a8b42f\nparent 5dd8f8e26f2a62f5e7e4da50dcdfde344f6d31b9\nparent c34571c19e727654139a27c5b9d656485fb516f9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1580167986 +0000\ncommitter GitHub <noreply@github.com> 1580167986 +0000\n\nMerge #2916\n\n2916: Buffer reads from cargo check's stdout r=matklad a=lnicola\n\n`Stdio::piped()` is unbuffered, which caused RA to read the output of `cargo check` one byte at a time (out of 114KB in my test).\r\n\r\nThis isn't obviously faster on my system, but making fewer syscalls sounds like a good idea.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/912776fd9547d1d28b4cba7e4a41e5391fc12c21", "html_url": "https://github.com/rust-lang/rust/commit/912776fd9547d1d28b4cba7e4a41e5391fc12c21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/912776fd9547d1d28b4cba7e4a41e5391fc12c21/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dd8f8e26f2a62f5e7e4da50dcdfde344f6d31b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd8f8e26f2a62f5e7e4da50dcdfde344f6d31b9", "html_url": "https://github.com/rust-lang/rust/commit/5dd8f8e26f2a62f5e7e4da50dcdfde344f6d31b9"}, {"sha": "c34571c19e727654139a27c5b9d656485fb516f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c34571c19e727654139a27c5b9d656485fb516f9", "html_url": "https://github.com/rust-lang/rust/commit/c34571c19e727654139a27c5b9d656485fb516f9"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e7b700c1041eadd7f91fff3ece376c07646c9d48", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/912776fd9547d1d28b4cba7e4a41e5391fc12c21/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/912776fd9547d1d28b4cba7e4a41e5391fc12c21/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=912776fd9547d1d28b4cba7e4a41e5391fc12c21", "patch": "@@ -9,6 +9,7 @@ use lsp_types::{\n };\n use std::{\n     collections::HashMap,\n+    io::BufReader,\n     path::PathBuf,\n     process::{Command, Stdio},\n     sync::Arc,\n@@ -347,7 +348,9 @@ impl WatchThread {\n             // which will break out of the loop, and continue the shutdown\n             let _ = message_send.send(CheckEvent::Begin);\n \n-            for message in cargo_metadata::parse_messages(command.stdout.take().unwrap()) {\n+            for message in\n+                cargo_metadata::parse_messages(BufReader::new(command.stdout.take().unwrap()))\n+            {\n                 let message = match message {\n                     Ok(message) => message,\n                     Err(err) => {"}]}