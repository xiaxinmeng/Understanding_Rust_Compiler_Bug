{"sha": "5b7df0922ef15a8b105aceda8770faedc58ec67b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViN2RmMDkyMmVmMTVhOGIxMDVhY2VkYTg3NzBmYWVkYzU4ZWM2N2I=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-25T17:41:52Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-25T18:23:17Z"}, "message": "pprust: Do not print spaces before some tokens", "tree": {"sha": "0dd1c3e67ddea576a649e76e948a0c2570dc65cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dd1c3e67ddea576a649e76e948a0c2570dc65cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b7df0922ef15a8b105aceda8770faedc58ec67b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7df0922ef15a8b105aceda8770faedc58ec67b", "html_url": "https://github.com/rust-lang/rust/commit/5b7df0922ef15a8b105aceda8770faedc58ec67b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b7df0922ef15a8b105aceda8770faedc58ec67b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d760df5aea483aae041c9a241e7acacf48f75035", "url": "https://api.github.com/repos/rust-lang/rust/commits/d760df5aea483aae041c9a241e7acacf48f75035", "html_url": "https://github.com/rust-lang/rust/commit/d760df5aea483aae041c9a241e7acacf48f75035"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "83a926a6217e738c87e56c78cd7d09943876145e", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -152,6 +152,18 @@ pub fn to_string<F>(f: F) -> String where\n     printer.s.eof()\n }\n \n+// This makes comma-separated lists look slightly nicer,\n+// and also addresses a specific regression described in issue #63896.\n+fn tt_prepend_space(tt: &TokenTree) -> bool {\n+    match tt {\n+        TokenTree::Token(token) => match token.kind {\n+            token::Comma => false,\n+            _ => true,\n+        }\n+        _ => true,\n+    }\n+}\n+\n fn binop_to_string(op: BinOpToken) -> &'static str {\n     match op {\n         token::Plus     => \"+\",\n@@ -696,7 +708,7 @@ pub trait PrintState<'a>: std::ops::Deref<Target=pp::Printer> + std::ops::DerefM\n \n     fn print_tts(&mut self, tts: tokenstream::TokenStream, convert_dollar_crate: bool) {\n         for (i, tt) in tts.into_trees().enumerate() {\n-            if i != 0 {\n+            if i != 0 && tt_prepend_space(&tt) {\n                 self.space();\n             }\n             self.print_tt(tt, convert_dollar_crate);"}, {"sha": "9db7e27b16103e195eded9d81c95511465321e67", "filename": "src/test/pretty/attr-literals.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fattr-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fattr-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-literals.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -5,10 +5,10 @@\n #![feature(rustc_attrs)]\n \n fn main() {\n-    #![rustc_dummy(\"hi\" , 1 , 2 , 1.012 , pi = 3.14 , bye , name (\"John\"))]\n+    #![rustc_dummy(\"hi\", 1, 2, 1.012, pi = 3.14, bye, name (\"John\"))]\n     #[rustc_dummy = 8]\n     fn f() { }\n \n-    #[rustc_dummy(1 , 2 , 3)]\n+    #[rustc_dummy(1, 2, 3)]\n     fn g() { }\n }"}, {"sha": "9317b36ba497b656554d36623e2387840cddb958", "filename": "src/test/pretty/block-comment-wchar.pp", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-comment-wchar.pp?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -99,8 +99,5 @@\n          '\\u{2004}', '\\u{2005}', '\\u{2006}', '\\u{2007}', '\\u{2008}',\n          '\\u{2009}', '\\u{200A}', '\\u{2028}', '\\u{2029}', '\\u{202F}',\n          '\\u{205F}', '\\u{3000}'];\n-    for c in &chars {\n-        let ws = c.is_whitespace();\n-        println!(\"{} {}\" , c , ws);\n-    }\n+    for c in &chars { let ws = c.is_whitespace(); println!(\"{} {}\", c, ws); }\n }"}, {"sha": "7bbb7dc911f93a8fe09be4146c28feca05c6ff86", "filename": "src/test/pretty/delimited-token-groups.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -5,7 +5,7 @@\n macro_rules! mac { ($ ($ tt : tt) *) => () }\n \n mac! {\n-    struct S { field1 : u8 , field2 : u16 , } impl Clone for S\n+    struct S { field1 : u8, field2 : u16, } impl Clone for S\n     {\n         fn clone () -> S\n         {"}, {"sha": "233ccdb0098b36d7a98c0308a42db7d5c6371423", "filename": "src/test/pretty/do1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fdo1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fdo1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdo1.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -2,4 +2,4 @@\n \n fn f<F>(f: F) where F: Fn(isize) { f(10) }\n \n-fn main() { f(|i| { assert_eq!(i , 10) }) }\n+fn main() { f(|i| { assert_eq!(i, 10) }) }"}, {"sha": "10903e928cda8ebcee344186630a00bca9516219", "filename": "src/test/pretty/match-block-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fmatch-block-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fpretty%2Fmatch-block-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fmatch-block-expr.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -2,5 +2,5 @@\n \n fn main() {\n     let x = match { 5 } { 1 => 5, 2 => 6, _ => 7, };\n-    assert_eq!(x , 7);\n+    assert_eq!(x, 7);\n }"}, {"sha": "34529cdaa64f1bcdfcae36808a8333da8b6888f1", "filename": "src/test/ui/macros/macro-first-set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fui%2Fmacros%2Fmacro-first-set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fui%2Fmacros%2Fmacro-first-set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-first-set.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -25,7 +25,7 @@ macro_rules! foo_26444 {\n }\n \n fn test_26444() {\n-    assert_eq!(\"a , b , c , d , e\", foo_26444!(a, b; c; d, e));\n+    assert_eq!(\"a, b, c, d, e\", foo_26444!(a, b; c; d, e));\n     assert_eq!(\"f\", foo_26444!(; f ;));\n }\n "}, {"sha": "f1de3709b166b2c51429b1a383911f48136b16ad", "filename": "src/test/ui/proc-macro/auxiliary/attr-stmt-expr-rpass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr-rpass.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -17,7 +17,7 @@ pub fn expect_let(attr: TokenStream, item: TokenStream) -> TokenStream {\n #[proc_macro_attribute]\n pub fn expect_print_stmt(attr: TokenStream, item: TokenStream) -> TokenStream {\n     assert!(attr.to_string().is_empty());\n-    assert_eq!(item.to_string(), \"println!(\\\"{}\\\" , string);\");\n+    assert_eq!(item.to_string(), \"println!(\\\"{}\\\", string);\");\n     item\n }\n \n@@ -31,7 +31,7 @@ pub fn expect_expr(attr: TokenStream, item: TokenStream) -> TokenStream {\n #[proc_macro_attribute]\n pub fn expect_print_expr(attr: TokenStream, item: TokenStream) -> TokenStream {\n     assert!(attr.to_string().is_empty());\n-    assert_eq!(item.to_string(), \"println!(\\\"{}\\\" , string)\");\n+    assert_eq!(item.to_string(), \"println!(\\\"{}\\\", string)\");\n     item\n }\n "}, {"sha": "d2180def5b7601c85ee1006e9b2a4874dec615e8", "filename": "src/test/ui/proc-macro/auxiliary/attr-stmt-expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b7df0922ef15a8b105aceda8770faedc58ec67b/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs?ref=5b7df0922ef15a8b105aceda8770faedc58ec67b", "patch": "@@ -17,7 +17,7 @@ pub fn expect_let(attr: TokenStream, item: TokenStream) -> TokenStream {\n #[proc_macro_attribute]\n pub fn expect_print_stmt(attr: TokenStream, item: TokenStream) -> TokenStream {\n     assert!(attr.to_string().is_empty());\n-    assert_eq!(item.to_string(), \"println!(\\\"{}\\\" , string);\");\n+    assert_eq!(item.to_string(), \"println!(\\\"{}\\\", string);\");\n     item\n }\n \n@@ -31,7 +31,7 @@ pub fn expect_expr(attr: TokenStream, item: TokenStream) -> TokenStream {\n #[proc_macro_attribute]\n pub fn expect_print_expr(attr: TokenStream, item: TokenStream) -> TokenStream {\n     assert!(attr.to_string().is_empty());\n-    assert_eq!(item.to_string(), \"println!(\\\"{}\\\" , string)\");\n+    assert_eq!(item.to_string(), \"println!(\\\"{}\\\", string)\");\n     item\n }\n "}]}