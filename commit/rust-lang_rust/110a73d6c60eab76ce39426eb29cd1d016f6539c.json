{"sha": "110a73d6c60eab76ce39426eb29cd1d016f6539c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMGE3M2Q2YzYwZWFiNzZjZTM5NDI2ZWIyOWNkMWQwMTZmNjUzOWM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-20T14:05:25Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-20T14:05:25Z"}, "message": "Deny rust_2018_idioms in liballoc tests", "tree": {"sha": "2ccdf6323d640d4203e52cf942369da6d89da38b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ccdf6323d640d4203e52cf942369da6d89da38b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/110a73d6c60eab76ce39426eb29cd1d016f6539c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAly7JzUQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5ieTEADQsx3atUjI2Mhw+nVU0/xzce9Bd/+65DGf\n32j1QGJHR7rSEVWTEdLxwgtC2l164wzuC4prLRfhNeQQe3AQhB6cFDciz2jpntD6\nRuFuiHjmY6zG11PCHhhzo0YR/7F2Y3ic7NS5wT6LnIWSk9Jdp46J6+wvjl1LsAzZ\nAGFxK6Ij8Y59lTRiYelLTDb6biHj6VhM5odElcdCImPrqe3Iz4ESuvVZK+w21Vx2\nuCpdPtfKfUIA9RPn/ihNB+P39jC8kwc4cs0HjsgrZRYbA2CVMrT/jP3IsLlU7Cub\nfojX/M0J3i3i5y6jIE9PE6PYiZ5Jqc6ahcRPbFiJdYgo/x0557enx9p1rR/yL9zM\n6HCpLo1/awQjNUHUaUvo1IzHSyBUypRHTJUfiZFaX9kPQqYr7dnPDAEt5OMQGez6\nBw9vMbazksOs6hhi9QahDkGR6LRpNs9KNIVux4G8UPoFRqzgm1Fkt1NDk+Lox8pH\n5Xmripdncloh/27ToolYnBQKg2Eph4opRQlie1+eBnpCWc3wwn5X96k2jUKoqEWE\nRBW1jPZI/QZPqVvi6O5of0oQPJeX/kURUhjyTAqy9bf3J/BY/9AofSEveOB0jVL6\nYSSj9hGQnwEVuKJu++BaX4bdxbF+JPWniZHB15tlGW8A3Eg4/CIM86hrniiMqzXc\nPuCWw+scvw==\n=nOjE\n-----END PGP SIGNATURE-----", "payload": "tree 2ccdf6323d640d4203e52cf942369da6d89da38b\nparent d5d1ee86bb72730a77abfcab3a38c1a5d1b757bf\nauthor Philipp Hansch <dev@phansch.net> 1555769125 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1555769125 +0200\n\nDeny rust_2018_idioms in liballoc tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/110a73d6c60eab76ce39426eb29cd1d016f6539c", "html_url": "https://github.com/rust-lang/rust/commit/110a73d6c60eab76ce39426eb29cd1d016f6539c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/110a73d6c60eab76ce39426eb29cd1d016f6539c/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5d1ee86bb72730a77abfcab3a38c1a5d1b757bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5d1ee86bb72730a77abfcab3a38c1a5d1b757bf", "html_url": "https://github.com/rust-lang/rust/commit/d5d1ee86bb72730a77abfcab3a38c1a5d1b757bf"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "6f357eda9b83b88d70e93c58cddb4edef75b452b", "filename": "src/liballoc/tests/cow_str.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/110a73d6c60eab76ce39426eb29cd1d016f6539c/src%2Fliballoc%2Ftests%2Fcow_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/110a73d6c60eab76ce39426eb29cd1d016f6539c/src%2Fliballoc%2Ftests%2Fcow_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fcow_str.rs?ref=110a73d6c60eab76ce39426eb29cd1d016f6539c", "patch": "@@ -7,9 +7,9 @@ fn check_cow_add_cow() {\n     let borrowed2 = Cow::Borrowed(\"World!\");\n     let borrow_empty = Cow::Borrowed(\"\");\n \n-    let owned1: Cow<str> = Cow::Owned(String::from(\"Hi, \"));\n-    let owned2: Cow<str> = Cow::Owned(String::from(\"Rustaceans!\"));\n-    let owned_empty: Cow<str> = Cow::Owned(String::new());\n+    let owned1: Cow<'_, str> = Cow::Owned(String::from(\"Hi, \"));\n+    let owned2: Cow<'_, str> = Cow::Owned(String::from(\"Rustaceans!\"));\n+    let owned_empty: Cow<'_, str> = Cow::Owned(String::new());\n \n     assert_eq!(\"Hello, World!\", borrowed1.clone() + borrowed2.clone());\n     assert_eq!(\"Hello, Rustaceans!\", borrowed1.clone() + owned2.clone());\n@@ -36,8 +36,8 @@ fn check_cow_add_str() {\n     let borrowed = Cow::Borrowed(\"Hello, \");\n     let borrow_empty = Cow::Borrowed(\"\");\n \n-    let owned: Cow<str> = Cow::Owned(String::from(\"Hi, \"));\n-    let owned_empty: Cow<str> = Cow::Owned(String::new());\n+    let owned: Cow<'_, str> = Cow::Owned(String::from(\"Hi, \"));\n+    let owned_empty: Cow<'_, str> = Cow::Owned(String::new());\n \n     assert_eq!(\"Hello, World!\", borrowed.clone() + \"World!\");\n \n@@ -60,9 +60,9 @@ fn check_cow_add_assign_cow() {\n     let borrowed2 = Cow::Borrowed(\"World!\");\n     let borrow_empty = Cow::Borrowed(\"\");\n \n-    let mut owned1: Cow<str> = Cow::Owned(String::from(\"Hi, \"));\n-    let owned2: Cow<str> = Cow::Owned(String::from(\"Rustaceans!\"));\n-    let owned_empty: Cow<str> = Cow::Owned(String::new());\n+    let mut owned1: Cow<'_, str> = Cow::Owned(String::from(\"Hi, \"));\n+    let owned2: Cow<'_, str> = Cow::Owned(String::from(\"Rustaceans!\"));\n+    let owned_empty: Cow<'_, str> = Cow::Owned(String::new());\n \n     let mut s = borrowed1.clone();\n     s += borrow_empty.clone();\n@@ -101,8 +101,8 @@ fn check_cow_add_assign_str() {\n     let mut borrowed = Cow::Borrowed(\"Hello, \");\n     let borrow_empty = Cow::Borrowed(\"\");\n \n-    let mut owned: Cow<str> = Cow::Owned(String::from(\"Hi, \"));\n-    let owned_empty: Cow<str> = Cow::Owned(String::new());\n+    let mut owned: Cow<'_, str> = Cow::Owned(String::from(\"Hi, \"));\n+    let owned_empty: Cow<'_, str> = Cow::Owned(String::new());\n \n     let mut s = borrowed.clone();\n     s += \"\";\n@@ -132,10 +132,10 @@ fn check_cow_add_assign_str() {\n \n #[test]\n fn check_cow_clone_from() {\n-    let mut c1: Cow<str> = Cow::Owned(String::with_capacity(25));\n+    let mut c1: Cow<'_, str> = Cow::Owned(String::with_capacity(25));\n     let s: String = \"hi\".to_string();\n     assert!(s.capacity() < 25);\n-    let c2: Cow<str> = Cow::Owned(s);\n+    let c2: Cow<'_, str> = Cow::Owned(s);\n     c1.clone_from(&c2);\n     assert!(c1.into_owned().capacity() >= 25);\n }"}, {"sha": "b736750c57601e5b1798d871837b90910f1bad40", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/110a73d6c60eab76ce39426eb29cd1d016f6539c/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/110a73d6c60eab76ce39426eb29cd1d016f6539c/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=110a73d6c60eab76ce39426eb29cd1d016f6539c", "patch": "@@ -7,6 +7,7 @@\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n #![feature(vecdeque_rotate)]\n+#![deny(rust_2018_idioms)]\n \n use std::hash::{Hash, Hasher};\n use std::collections::hash_map::DefaultHasher;"}, {"sha": "765210e5aa6b39f636ee6245d04c671246d7824e", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/110a73d6c60eab76ce39426eb29cd1d016f6539c/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/110a73d6c60eab76ce39426eb29cd1d016f6539c/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=110a73d6c60eab76ce39426eb29cd1d016f6539c", "patch": "@@ -54,11 +54,11 @@ fn test_from_utf8() {\n #[test]\n fn test_from_utf8_lossy() {\n     let xs = b\"hello\";\n-    let ys: Cow<str> = \"hello\".into_cow();\n+    let ys: Cow<'_, str> = \"hello\".into_cow();\n     assert_eq!(String::from_utf8_lossy(xs), ys);\n \n     let xs = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\".as_bytes();\n-    let ys: Cow<str> = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\".into_cow();\n+    let ys: Cow<'_, str> = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\".into_cow();\n     assert_eq!(String::from_utf8_lossy(xs), ys);\n \n     let xs = b\"Hello\\xC2 There\\xFF Goodbye\";"}]}