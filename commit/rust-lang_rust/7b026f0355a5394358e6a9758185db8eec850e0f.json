{"sha": "7b026f0355a5394358e6a9758185db8eec850e0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMDI2ZjAzNTVhNTM5NDM1OGU2YTk3NTgxODVkYjhlZWM4NTBlMGY=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-01-25T21:23:31Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-01-29T23:46:25Z"}, "message": "add support for mips(el)-unknown-linux-musl\n\nThis target covers MIPS devices that run the trunk version of OpenWRT.\n\nThe x86_64-unknown-linux-musl target always links statically to C libraries. For\nthe mips(el)-unknown-linux-musl target, we opt for dynamic linking (like most of\nother targets do) to keep binary size down.\n\nAs for the C compiler flags used in the build system, we use the same flags used\nfor the mips(el)-unknown-linux-gnu target.", "tree": {"sha": "b4ef4e77aa3ce77f5886dbd39caf5417daf89475", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4ef4e77aa3ce77f5886dbd39caf5417daf89475"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b026f0355a5394358e6a9758185db8eec850e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b026f0355a5394358e6a9758185db8eec850e0f", "html_url": "https://github.com/rust-lang/rust/commit/7b026f0355a5394358e6a9758185db8eec850e0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b026f0355a5394358e6a9758185db8eec850e0f/comments", "author": null, "committer": null, "parents": [{"sha": "0f196bcc3b23925854e3d758c03f56c7520e9b99", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f196bcc3b23925854e3d758c03f56c7520e9b99", "html_url": "https://github.com/rust-lang/rust/commit/0f196bcc3b23925854e3d758c03f56c7520e9b99"}], "stats": {"total": 120, "additions": 115, "deletions": 5}, "files": [{"sha": "1c0da89546915448e5c4398d60add3888ae2336e", "filename": ".gitmodules", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/.gitmodules", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/.gitmodules", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitmodules?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -16,4 +16,5 @@\n \turl = https://github.com/rust-lang/rust-installer.git\n [submodule \"src/liblibc\"]\n \tpath = src/liblibc\n-\turl = https://github.com/rust-lang-nursery/libc.git\n+\turl = https://github.com/japaric/libc.git\n+\tbranch = mips-musl"}, {"sha": "fea864638f814477d9da9152d89fe712d6229f07", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/configure", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -1178,7 +1178,7 @@ do\n             ;;\n \n \n-        *-musl)\n+        x86_64-*-musl)\n             if [ ! -f $CFG_MUSL_ROOT/lib/libc.a ]\n             then\n                 err \"musl libc $CFG_MUSL_ROOT/lib/libc.a not found\""}, {"sha": "f7892bf041fed3b175e7d84f0f35eff3a1cf56e8", "filename": "mk/cfg/mips-unknown-linux-musl.mk", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/mk%2Fcfg%2Fmips-unknown-linux-musl.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/mk%2Fcfg%2Fmips-unknown-linux-musl.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fmips-unknown-linux-musl.mk?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -0,0 +1,24 @@\n+# mips-unknown-linux-musl configuration\n+CC_mips-unknown-linux-musl=mips-openwrt-linux-gcc\n+CXX_mips-unknown-linux-musl=mips-openwrt-linux-g++\n+CPP_mips-unknown-linux-musl=mips-openwrt-linux-gcc -E\n+AR_mips-unknown-linux-musl=mips-openwrt-linux-ar\n+CFG_LIB_NAME_mips-unknown-linux-musl=lib$(1).so\n+CFG_STATIC_LIB_NAME_mips-unknown-linux-musl=lib$(1).a\n+CFG_LIB_GLOB_mips-unknown-linux-musl=lib$(1)-*.so\n+CFG_LIB_DSYM_GLOB_mips-unknown-linux-musl=lib$(1)-*.dylib.dSYM\n+CFG_JEMALLOC_CFLAGS_mips-unknown-linux-musl := -mips32r2 -msoft-float -mabi=32 $(CFLAGS)\n+CFG_GCCISH_CFLAGS_mips-unknown-linux-musl := -Wall -g -fPIC -mips32r2 -msoft-float -mabi=32 $(CFLAGS)\n+CFG_GCCISH_CXXFLAGS_mips-unknown-linux-musl := -fno-rtti $(CXXFLAGS)\n+CFG_GCCISH_LINK_FLAGS_mips-unknown-linux-musl := -shared -fPIC -g -mips32r2 -msoft-float -mabi=32\n+CFG_GCCISH_DEF_FLAG_mips-unknown-linux-musl := -Wl,--export-dynamic,--dynamic-list=\n+CFG_LLC_FLAGS_mips-unknown-linux-musl :=\n+CFG_INSTALL_NAME_mips-unknown-linux-musl =\n+CFG_EXE_SUFFIX_mips-unknown-linux-musl =\n+CFG_WINDOWSY_mips-unknown-linux-musl :=\n+CFG_UNIXY_mips-unknown-linux-musl := 1\n+CFG_LDPATH_mips-unknown-linux-musl :=\n+CFG_RUN_mips-unknown-linux-musl=\n+CFG_RUN_TARG_mips-unknown-linux-musl=\n+RUSTC_FLAGS_mips-unknown-linux-musl := -C target-cpu=mips32r2 -C target-feature=\"+mips32r2\" -C soft-float\n+CFG_GNU_TRIPLE_mips-unknown-linux-musl := mips-unknown-linux-musl"}, {"sha": "632423cc881e9d7d738ee492f6648c52f9d009d7", "filename": "mk/cfg/mipsel-unknown-linux-musl.mk", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/mk%2Fcfg%2Fmipsel-unknown-linux-musl.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/mk%2Fcfg%2Fmipsel-unknown-linux-musl.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fmipsel-unknown-linux-musl.mk?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -0,0 +1,24 @@\n+# mipsel-unknown-linux-musl configuration\n+CC_mipsel-unknown-linux-musl=mipsel-openwrt-linux-gcc\n+CXX_mipsel-unknown-linux-musl=mipsel-openwrt-linux-g++\n+CPP_mipsel-unknown-linux-musl=mipsel-openwrt-linux-gcc\n+AR_mipsel-unknown-linux-musl=mipsel-openwrt-linux-ar\n+CFG_LIB_NAME_mipsel-unknown-linux-musl=lib$(1).so\n+CFG_STATIC_LIB_NAME_mipsel-unknown-linux-musl=lib$(1).a\n+CFG_LIB_GLOB_mipsel-unknown-linux-musl=lib$(1)-*.so\n+CFG_LIB_DSYM_GLOB_mipsel-unknown-linux-musl=lib$(1)-*.dylib.dSYM\n+CFG_JEMALLOC_CFLAGS_mipsel-unknown-linux-musl := -mips32 -mabi=32 $(CFLAGS)\n+CFG_GCCISH_CFLAGS_mipsel-unknown-linux-musl := -Wall -g -fPIC -mips32 -mabi=32 $(CFLAGS)\n+CFG_GCCISH_CXXFLAGS_mipsel-unknown-linux-musl := -fno-rtti $(CXXFLAGS)\n+CFG_GCCISH_LINK_FLAGS_mipsel-unknown-linux-musl := -shared -fPIC -g -mips32\n+CFG_GCCISH_DEF_FLAG_mipsel-unknown-linux-musl := -Wl,--export-dynamic,--dynamic-list=\n+CFG_LLC_FLAGS_mipsel-unknown-linux-musl :=\n+CFG_INSTALL_NAME_mipsel-unknown-linux-musl =\n+CFG_EXE_SUFFIX_mipsel-unknown-linux-musl :=\n+CFG_WINDOWSY_mipsel-unknown-linux-musl :=\n+CFG_UNIXY_mipsel-unknown-linux-musl := 1\n+CFG_LDPATH_mipsel-unknown-linux-musl :=\n+CFG_RUN_mipsel-unknown-linux-musl=\n+CFG_RUN_TARG_mipsel-unknown-linux-musl=\n+RUSTC_FLAGS_mipsel-unknown-linux-musl := -C target-cpu=mips32 -C target-feature=\"+mips32\"\n+CFG_GNU_TRIPLE_mipsel-unknown-linux-musl := mipsel-unknown-linux-musl"}, {"sha": "81c05bcddb05d0e5facf66f3945405bbf50b04d3", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -1 +1 @@\n-Subproject commit 91ff43c736de664f8d3cd351e148c09cdea6731e\n+Subproject commit 81c05bcddb05d0e5facf66f3945405bbf50b04d3"}, {"sha": "21be075af8e1f00417e7d15ef5d40c16f6157c55", "filename": "src/librustc_back/target/mips_unknown_linux_musl.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_musl.rs?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::Target;\n+\n+pub fn target() -> Target {\n+    Target {\n+        llvm_target: \"mips-unknown-linux-musl\".to_string(),\n+        target_endian: \"big\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        arch: \"mips\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        options: super::linux_base::opts()\n+    }\n+}"}, {"sha": "11c9caf90373e599603c0a36f7756454f719ac3a", "filename": "src/librustc_back/target/mipsel_unknown_linux_musl.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::Target;\n+\n+pub fn target() -> Target {\n+    Target {\n+        llvm_target: \"mipsel-unknown-linux-musl\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        arch: \"mips\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+\n+        options: super::linux_base::opts()\n+    }\n+}"}, {"sha": "39f05ba645e873e1ef5e0543b78e9cb9f887bacf", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -420,6 +420,8 @@ impl Target {\n             armv7_unknown_linux_gnueabihf,\n             aarch64_unknown_linux_gnu,\n             x86_64_unknown_linux_musl,\n+            mips_unknown_linux_musl,\n+            mipsel_unknown_linux_musl,\n \n             i686_linux_android,\n             arm_linux_androideabi,"}, {"sha": "286823552c29b3aa0c91accb118e3a667bef7658", "filename": "src/libstd/os/linux/raw.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibstd%2Fos%2Flinux%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibstd%2Fos%2Flinux%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Flinux%2Fraw.rs?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -93,11 +93,20 @@ mod arch {\n     use os::raw::{c_long, c_ulong};\n     use os::unix::raw::{gid_t, uid_t};\n \n+    #[cfg(target_env = \"musl\")]\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blkcnt_t = i64;\n+    #[cfg(not(target_env = \"musl\"))]\n     #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blkcnt_t = i32;\n     #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blksize_t = i32;\n+    #[cfg(target_env = \"musl\")]\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type ino_t = u64;\n+    #[cfg(not(target_env = \"musl\"))]\n     #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type ino_t = u32;\n     #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type nlink_t = u32;\n+    #[cfg(target_env = \"musl\")]\n     #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i32;\n+    #[cfg(not(target_env = \"musl\"))]\n+    #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n     #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = i32;\n \n     #[repr(C)]"}, {"sha": "179a27a2ec86c8ea845963d5aa654c873c0ae26b", "filename": "src/libstd/sys/common/libunwind.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibstd%2Fsys%2Fcommon%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b026f0355a5394358e6a9758185db8eec850e0f/src%2Flibstd%2Fsys%2Fcommon%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Flibunwind.rs?ref=7b026f0355a5394358e6a9758185db8eec850e0f", "patch": "@@ -101,9 +101,10 @@ pub type _Unwind_Exception_Cleanup_Fn =\n                       exception: *mut _Unwind_Exception);\n \n #[cfg_attr(any(all(target_os = \"linux\", not(target_env = \"musl\")),\n-               target_os = \"freebsd\"),\n+               target_os = \"freebsd\",\n+               all(target_os = \"linux\", target_env = \"musl\", not(target_arch = \"x86_64\"))),\n            link(name = \"gcc_s\"))]\n-#[cfg_attr(all(target_os = \"linux\", target_env = \"musl\", not(test)),\n+#[cfg_attr(all(target_os = \"linux\", target_env = \"musl\", target_arch = \"x86_64\", not(test)),\n            link(name = \"unwind\", kind = \"static\"))]\n #[cfg_attr(any(target_os = \"android\", target_os = \"openbsd\"),\n            link(name = \"gcc\"))]"}]}