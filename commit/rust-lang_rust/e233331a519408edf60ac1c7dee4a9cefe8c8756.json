{"sha": "e233331a519408edf60ac1c7dee4a9cefe8c8756", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMzMzMzFhNTE5NDA4ZWRmNjBhYzFjN2RlZTRhOWNlZmU4Yzg3NTY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T16:02:46Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-01T17:59:49Z"}, "message": "syntax::print -> new crate rustc_ast_pretty", "tree": {"sha": "b70bcec238312d4d4f6620cf11e55f05ed3585c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b70bcec238312d4d4f6620cf11e55f05ed3585c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e233331a519408edf60ac1c7dee4a9cefe8c8756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e233331a519408edf60ac1c7dee4a9cefe8c8756", "html_url": "https://github.com/rust-lang/rust/commit/e233331a519408edf60ac1c7dee4a9cefe8c8756", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e233331a519408edf60ac1c7dee4a9cefe8c8756/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "html_url": "https://github.com/rust-lang/rust/commit/98fd6a5c88a44214f15a43a9e633e3b71876bdb3"}], "stats": {"total": 210, "additions": 129, "deletions": 81}, "files": [{"sha": "62fbba7a77041be78f6581c936b6c449dda8e138", "filename": "Cargo.lock", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -3093,6 +3093,7 @@ dependencies = [\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n  \"rustc_apfloat\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3359,6 +3360,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n@@ -3375,6 +3377,7 @@ name = \"rustc_ast_passes\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3385,10 +3388,21 @@ dependencies = [\n  \"syntax\",\n ]\n \n+[[package]]\n+name = \"rustc_ast_pretty\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"log\",\n+ \"rustc_data_structures\",\n+ \"rustc_span\",\n+ \"syntax\",\n+]\n+\n [[package]]\n name = \"rustc_attr\"\n version = \"0.0.0\"\n dependencies = [\n+ \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -3406,6 +3420,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"fmt_macros\",\n  \"log\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3526,6 +3541,7 @@ dependencies = [\n  \"lazy_static 1.4.0\",\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast_pretty\",\n  \"rustc_codegen_utils\",\n  \"rustc_data_structures\",\n  \"rustc_error_codes\",\n@@ -3572,6 +3588,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc_ast_passes\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3602,6 +3619,7 @@ version = \"0.0.0\"\n name = \"rustc_hir\"\n version = \"0.0.0\"\n dependencies = [\n+ \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_index\",\n@@ -3693,6 +3711,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3734,6 +3753,7 @@ dependencies = [\n  \"log\",\n  \"memmap\",\n  \"rustc\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3762,6 +3782,7 @@ dependencies = [\n  \"polonius-engine\",\n  \"rustc\",\n  \"rustc_apfloat\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3805,6 +3826,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"bitflags\",\n  \"log\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3872,6 +3894,7 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_ast_lowering\",\n+ \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3893,6 +3916,7 @@ dependencies = [\n  \"rls-data\",\n  \"rls-span\",\n  \"rustc\",\n+ \"rustc_ast_pretty\",\n  \"rustc_codegen_utils\",\n  \"rustc_data_structures\",\n  \"rustc_hir\","}, {"sha": "7df5185d27c4066f5f208c5aec3f4338a9cbc4e0", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -21,6 +21,8 @@ rustc-rayon = \"0.3.0\"\n rustc-rayon-core = \"0.3.0\"\n polonius-engine = \"0.11.0\"\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n+# FIXME(Centril): remove this dependency when stuff is moved to rustc_lint.\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "f6ab60e199f335f977d1f92d8a6d6aeb52d080f3", "filename": "src/librustc_ast_lowering/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_lowering%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_lowering%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -12,6 +12,7 @@ doctest = false\n [dependencies]\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n rustc = { path = \"../librustc\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "c3e96a31e4001264a4fc890accf97497cbbad3b3", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -38,6 +38,7 @@ use rustc::dep_graph::DepGraph;\n use rustc::hir::map::definitions::{DefKey, DefPathData, Definitions};\n use rustc::hir::map::Map;\n use rustc::{bug, span_bug};\n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n@@ -60,7 +61,6 @@ use syntax::ast;\n use syntax::ast::*;\n use syntax::attr;\n use syntax::node_id::NodeMap;\n-use syntax::print::pprust;\n use syntax::token::{self, Nonterminal, Token};\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::visit::{self, Visitor};"}, {"sha": "01d2ac449b590b034a054c494f5777ecee71eb09", "filename": "src/librustc_ast_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -10,6 +10,7 @@ path = \"lib.rs\"\n \n [dependencies]\n log = \"0.4\"\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "4bb55d6acddcd2038a9674927f19ce265e2d0d18", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -6,6 +6,7 @@\n // This pass is supposed to perform only simple checks not requiring name resolution\n // or type checking or some other kind of complex analysis.\n \n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, Applicability, FatalError};\n use rustc_parse::validate_attr;\n@@ -19,7 +20,6 @@ use std::mem;\n use syntax::ast::*;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n-use syntax::print::pprust;\n use syntax::visit::{self, Visitor};\n use syntax::walk_list;\n "}, {"sha": "2f7f804b62887a7f9fc79030435404f9cf225f4f", "filename": "src/librustc_ast_pretty/Cargo.toml", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -0,0 +1,16 @@\n+[package]\n+authors = [\"The Rust Project Developers\"]\n+name = \"rustc_ast_pretty\"\n+version = \"0.0.0\"\n+edition = \"2018\"\n+\n+[lib]\n+name = \"rustc_ast_pretty\"\n+path = \"lib.rs\"\n+doctest = false\n+\n+[dependencies]\n+log = \"0.4\"\n+rustc_span = { path = \"../librustc_span\" }\n+rustc_data_structures = { path = \"../librustc_data_structures\" }\n+syntax = { path = \"../libsyntax\" }"}, {"sha": "dce856df9c66abeb4087f173ce29b64ea929f0e9", "filename": "src/librustc_ast_pretty/helpers.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fhelpers.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,4 +1,4 @@\n-use crate::print::pp::Printer;\n+use crate::pp::Printer;\n use std::borrow::Cow;\n \n impl Printer {", "previous_filename": "src/libsyntax/print/helpers.rs"}, {"sha": "4c3a836e17ccfc5c6dfba7a3d3e1724167112ac0", "filename": "src/librustc_ast_pretty/lib.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Flib.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -0,0 +1,6 @@\n+#![feature(bool_to_option)]\n+#![feature(crate_visibility_modifier)]\n+\n+mod helpers;\n+pub mod pp;\n+pub mod pprust;"}, {"sha": "e6090db3284a72a1d45a29482bf3035d6dfe73d0", "filename": "src/librustc_ast_pretty/pp.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fpp.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "previous_filename": "src/libsyntax/print/pp.rs"}, {"sha": "2257710147abfbc90fd03397f9e1cf719a66e9fb", "filename": "src/librustc_ast_pretty/pprust.rs", "status": "renamed", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fpprust.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,21 +1,20 @@\n-use crate::ast::{self, BlockCheckMode, PatKind, RangeEnd, RangeSyntax};\n-use crate::ast::{Attribute, GenericArg, MacArgs};\n-use crate::ast::{GenericBound, SelfKind, TraitBoundModifier};\n-use crate::attr;\n-use crate::print::pp::Breaks::{Consistent, Inconsistent};\n-use crate::print::pp::{self, Breaks};\n-use crate::ptr::P;\n-use crate::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n-use crate::tokenstream::{self, TokenStream, TokenTree};\n-use crate::util::classify;\n-use crate::util::comments;\n-use crate::util::parser::{self, AssocOp, Fixity};\n+use crate::pp::Breaks::{Consistent, Inconsistent};\n+use crate::pp::{self, Breaks};\n \n use rustc_data_structures::sync::Once;\n use rustc_span::edition::Edition;\n use rustc_span::source_map::{dummy_spanned, SourceMap, Spanned};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, FileName, Span};\n+use syntax::ast::{self, BlockCheckMode, PatKind, RangeEnd, RangeSyntax};\n+use syntax::ast::{Attribute, GenericArg, MacArgs};\n+use syntax::ast::{GenericBound, SelfKind, TraitBoundModifier};\n+use syntax::attr;\n+use syntax::ptr::P;\n+use syntax::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n+use syntax::tokenstream::{self, TokenStream, TokenTree};\n+use syntax::util::parser::{self, AssocOp, Fixity};\n+use syntax::util::{classify, comments};\n \n use std::borrow::Cow;\n ", "previous_filename": "src/libsyntax/print/pprust.rs"}, {"sha": "ec6f5096d91af21160311c413e1914d896613fe0", "filename": "src/librustc_ast_pretty/pprust/tests.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,9 +1,9 @@\n use super::*;\n \n-use crate::ast;\n-use crate::with_default_globals;\n use rustc_span;\n use rustc_span::source_map::{dummy_spanned, respan};\n+use syntax::ast;\n+use syntax::attr::with_default_globals;\n \n fn fun_to_string(\n     decl: &ast::FnDecl,", "previous_filename": "src/libsyntax/print/pprust/tests.rs"}, {"sha": "83a5f41989b6c2f7125b7168cefb245eca1ce36c", "filename": "src/librustc_attr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_attr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_attr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -10,6 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_span = { path = \"../librustc_span\" }"}, {"sha": "be7c164395b0a9e766cb72ec5a19d1570525b2fe", "filename": "src/librustc_attr/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_attr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_attr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Fbuiltin.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -2,6 +2,7 @@\n \n use super::{find_by_name, mark_used};\n \n+use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, Handler};\n use rustc_feature::{find_gated_cfg, is_builtin_attr_name, Features, GatedCfg};\n use rustc_macros::HashStable_Generic;\n@@ -10,7 +11,6 @@ use rustc_span::hygiene::Transparency;\n use rustc_span::{symbol::sym, symbol::Symbol, Span};\n use std::num::NonZeroU32;\n use syntax::ast::{self, Attribute, MetaItem, MetaItemKind, NestedMetaItem};\n-use syntax::print::pprust;\n \n pub fn is_builtin_attr(attr: &Attribute) -> bool {\n     attr.is_doc_comment() || attr.ident().filter(|ident| is_builtin_attr_name(ident.name)).is_some()"}, {"sha": "b424ce432148fb755dd20e218fb55dc9c13d94a8", "filename": "src/librustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -12,6 +12,7 @@ doctest = false\n [dependencies]\n fmt_macros = { path = \"../libfmt_macros\" }\n log = \"0.4\"\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "3fc86a5469c2f75c6ed4da1bdf3192c14bb894a2", "filename": "src/librustc_builtin_macros/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fassert.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,11 +1,11 @@\n use rustc_errors::{Applicability, DiagnosticBuilder};\n \n+use rustc_ast_pretty::pprust;\n use rustc_expand::base::*;\n use rustc_parse::parser::Parser;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, *};\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token::{self, TokenKind};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};"}, {"sha": "6d9bfbfd05f0aed01509d9e49c72d7bbb7dfbaf3", "filename": "src/librustc_builtin_macros/log_syntax.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Flog_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Flog_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Flog_syntax.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,14 +1,14 @@\n+use rustc_ast_pretty::pprust;\n use rustc_expand::base;\n use rustc_span;\n-use syntax::print;\n use syntax::tokenstream::TokenStream;\n \n pub fn expand_log_syntax<'cx>(\n     _cx: &'cx mut base::ExtCtxt<'_>,\n     sp: rustc_span::Span,\n     tts: TokenStream,\n ) -> Box<dyn base::MacResult + 'cx> {\n-    println!(\"{}\", print::pprust::tts_to_string(tts));\n+    println!(\"{}\", pprust::tts_to_string(tts));\n \n     // any so that `log_syntax` can be invoked as an expression and item.\n     base::DummyResult::any_valid(sp)"}, {"sha": "222456d8fe0d98477eff3655d7b2a2c46ee9cf69", "filename": "src/librustc_builtin_macros/proc_macro_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,5 +1,6 @@\n use std::mem;\n \n+use rustc_ast_pretty::pprust;\n use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_session::parse::ParseSess;\n@@ -10,7 +11,6 @@ use smallvec::smallvec;\n use syntax::ast::{self, Ident};\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::visit::{self, Visitor};\n "}, {"sha": "264223bafbcf9c6eb68572489a7568bea78ae383", "filename": "src/librustc_builtin_macros/source_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fsource_util.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,11 +1,11 @@\n+use rustc_ast_pretty::pprust;\n use rustc_expand::base::{self, *};\n use rustc_expand::panictry;\n use rustc_parse::{self, new_sub_parser_from_file, parser::Parser, DirectoryOwnership};\n use rustc_session::lint::builtin::INCOMPLETE_INCLUDE;\n use rustc_span::symbol::Symbol;\n use rustc_span::{self, Pos, Span};\n use syntax::ast;\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token;\n use syntax::tokenstream::TokenStream;"}, {"sha": "2d6ff81aea8b840628b70cad567668a20c0d1804", "filename": "src/librustc_builtin_macros/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_builtin_macros%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -2,13 +2,13 @@\n /// Ideally, this code would be in libtest but for efficiency and error messages it lives here.\n use crate::util::check_builtin_macro_attribute;\n \n+use rustc_ast_pretty::pprust;\n use rustc_expand::base::*;\n use rustc_span::source_map::respan;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n use syntax::attr;\n-use syntax::print::pprust;\n \n use std::iter;\n "}, {"sha": "7a5966269b30196e4b42f15e8d7d053e9f7e5ef5", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -14,6 +14,7 @@ lazy_static = \"1.0\"\n log = \"0.4\"\n env_logger = { version = \"0.7\", default-features = false }\n rustc = { path = \"../librustc\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_lint = { path = \"../librustc_lint\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "65dbc59ea55b087d62c763e18f357a4e8f3ee020", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -5,14 +5,13 @@ use rustc::session::config::{Input, PpMode, PpSourceMode};\n use rustc::session::Session;\n use rustc::ty::{self, TyCtxt};\n use rustc::util::common::ErrorReported;\n+use rustc_ast_pretty::pprust;\n use rustc_hir as hir;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::print as pprust_hir;\n use rustc_mir::util::{write_mir_graphviz, write_mir_pretty};\n-\n use rustc_span::FileName;\n use syntax::ast;\n-use syntax::print::pprust;\n \n use std::cell::Cell;\n use std::fs::File;"}, {"sha": "cb7919d630ad40e99a791a72a2ee23bed416539b", "filename": "src/librustc_expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -14,6 +14,7 @@ doctest = false\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n log = \"0.4\"\n rustc_span = { path = \"../librustc_span\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_ast_passes = { path = \"../librustc_ast_passes\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "f08bed5731530e8558f892d6d05e4e814c808ab9", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -5,6 +5,7 @@ use crate::mbe::macro_rules::annotate_err_with_kind;\n use crate::placeholders::{placeholder, PlaceholderExpander};\n use crate::proc_macro::collect_derives;\n \n+use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, is_builtin_attr, HasAttrs};\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Applicability, FatalError, PResult};\n@@ -20,7 +21,6 @@ use rustc_span::{FileName, Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Block, Ident, LitKind, NodeId, PatKind, Path};\n use syntax::ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n use syntax::mut_visit::*;\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token;\n use syntax::tokenstream::{TokenStream, TokenTree};"}, {"sha": "b14725fd731b1fb0d0e0a491243bcadc113ad7c1", "filename": "src/librustc_expand/mbe/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -76,12 +76,12 @@ use TokenTreeOrTokenTreeSlice::*;\n \n use crate::mbe::{self, TokenTree};\n \n+use rustc_ast_pretty::pprust;\n use rustc_parse::parser::{FollowedByType, Parser, PathStyle};\n use rustc_parse::Directory;\n use rustc_session::parse::ParseSess;\n use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{Ident, Name};\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token::{self, DocComment, Nonterminal, Token};\n use syntax::tokenstream::TokenStream;"}, {"sha": "29d41543fbf8cefb9e562c403634c6304e99fecf", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -8,6 +8,7 @@ use crate::mbe::macro_parser::{Error, Failure, Success};\n use crate::mbe::macro_parser::{MatchedNonterminal, MatchedSeq, NamedParseResult};\n use crate::mbe::transcribe::transcribe;\n \n+use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, TransparencyError};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n@@ -21,7 +22,6 @@ use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::print::pprust;\n use syntax::token::{self, NtTT, Token, TokenKind::*};\n use syntax::tokenstream::{DelimSpan, TokenStream};\n "}, {"sha": "9ae8ead1a724d1bc8b63acb1d09e841e1325385b", "filename": "src/librustc_expand/mbe/quoted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,10 +1,10 @@\n use crate::mbe::macro_parser;\n use crate::mbe::{Delimited, KleeneOp, KleeneToken, SequenceRepetition, TokenTree};\n \n+use rustc_ast_pretty::pprust;\n use rustc_session::parse::ParseSess;\n use rustc_span::symbol::kw;\n use syntax::ast;\n-use syntax::print::pprust;\n use syntax::token::{self, Token};\n use syntax::tokenstream;\n "}, {"sha": "a7397e576b18cd02e190ab966dfaed0fa6c2f9fd", "filename": "src/librustc_expand/proc_macro_server.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_expand%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fproc_macro_server.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,5 +1,6 @@\n use crate::base::ExtCtxt;\n \n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::Diagnostic;\n use rustc_parse::lexer::nfc_normalize;\n@@ -8,7 +9,6 @@ use rustc_session::parse::ParseSess;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, FileName, MultiSpan, Pos, SourceFile, Span};\n use syntax::ast;\n-use syntax::print::pprust;\n use syntax::token;\n use syntax::tokenstream::{self, DelimSpan, IsJoint::*, TokenStream, TreeAndJoint};\n use syntax::util::comments;"}, {"sha": "3ae943a4ce08bf7cd3c176ea4baf67ab50068d31", "filename": "src/librustc_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -10,6 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "b0d2f96c71a03ac7b750466bd127265825fa5557", "filename": "src/librustc_hir/print.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_hir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_hir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fprint.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,11 +1,11 @@\n+use rustc_ast_pretty::pp::Breaks::{Consistent, Inconsistent};\n+use rustc_ast_pretty::pp::{self, Breaks};\n+use rustc_ast_pretty::pprust::{self, Comments, PrintState};\n use rustc_span::source_map::{SourceMap, Spanned};\n use rustc_span::symbol::kw;\n use rustc_span::{self, BytePos, FileName};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n-use syntax::print::pp::Breaks::{Consistent, Inconsistent};\n-use syntax::print::pp::{self, Breaks};\n-use syntax::print::pprust::{self, Comments, PrintState};\n use syntax::util::parser::{self, AssocOp, Fixity};\n \n use crate::hir;"}, {"sha": "27df0f904e48aaf93d8c192b30247817b142b181", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -12,6 +12,7 @@ path = \"lib.rs\"\n log = \"0.4\"\n unicode-security = \"0.0.2\"\n rustc = { path = \"../librustc\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "345665de63c3cd67fd300706462ee121a29ac5f8", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -25,6 +25,7 @@ use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext}\n use rustc::hir::map::Map;\n use rustc::traits::misc::can_type_implement_copy;\n use rustc::ty::{self, layout::VariantIdx, Ty, TyCtxt};\n+use rustc_ast_pretty::pprust::{self, expr_to_string};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_feature::Stability;\n@@ -41,7 +42,6 @@ use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, Span};\n use syntax::ast::{self, Expr};\n use syntax::attr::{self, HasAttrs};\n-use syntax::print::pprust::{self, expr_to_string};\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::visit::FnKind;\n "}, {"sha": "4f30d2b2226843180500a1be812c0e84e8b5b40a", "filename": "src/librustc_lint/levels.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flevels.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,10 +1,10 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n use rustc::hir::map::Map;\n-use rustc::lint::struct_lint_level;\n-use rustc::lint::{LintLevelMap, LintLevelSets, LintSet, LintSource};\n+use rustc::lint::{struct_lint_level, LintLevelMap, LintLevelSets, LintSet, LintSource};\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n@@ -17,7 +17,6 @@ use rustc_span::source_map::MultiSpan;\n use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n use syntax::attr;\n-use syntax::print::pprust;\n use syntax::unwrap_or;\n \n use std::cmp;"}, {"sha": "272c4f29203d8d635919db879d4e03a759a65831", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,6 +1,7 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n use rustc::ty::adjustment;\n use rustc::ty::{self, Ty};\n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{pluralize, Applicability};\n use rustc_feature::{AttributeType, BuiltinAttribute, BUILTIN_ATTRIBUTE_MAP};\n@@ -13,7 +14,6 @@ use rustc_span::symbol::{kw, sym};\n use rustc_span::{BytePos, Span};\n use syntax::ast;\n use syntax::attr;\n-use syntax::print::pprust;\n use syntax::util::parser;\n \n use log::debug;"}, {"sha": "a4fdcee5e12975a8e888beeeb016d45251cdb5cf", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -15,6 +15,7 @@ log = \"0.4\"\n memmap = \"0.7\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc = { path = \"../librustc\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "54fbdb14010c94d246df13d71b9cc8e55162ecf6", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1236,7 +1236,7 @@ impl EncodeContext<'tcx> {\n \n     /// Serialize the text of exported macros\n     fn encode_info_for_macro_def(&mut self, macro_def: &hir::MacroDef<'_>) {\n-        use syntax::print::pprust;\n+        use rustc_ast_pretty::pprust;\n         let def_id = self.tcx.hir().local_def_id(macro_def.hir_id);\n         record!(self.per_def.kind[def_id] <- EntryKind::MacroDef(self.lazy(MacroDef {\n             body: pprust::tts_to_string(macro_def.body.clone()),"}, {"sha": "6b2e2bb919c1302825f494e79aa27a62e400f1a0", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -17,6 +17,7 @@ log = \"0.4\"\n log_settings = \"0.1.1\"\n polonius-engine = \"0.11.0\"\n rustc = { path = \"../librustc\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "7cd7fc309b6b91ce18965e2fa9f813a0ba410255", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,6 +1,6 @@\n+use rustc_ast_pretty::pprust;\n use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::{self, MetaItem};\n-use syntax::print::pprust;\n \n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_index::bit_set::{BitSet, HybridBitSet};"}, {"sha": "176bb58ad27e6d34471c06bb130b0f29351130c2", "filename": "src/librustc_parse/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -12,6 +12,7 @@ doctest = false\n [dependencies]\n bitflags = \"1.0\"\n log = \"0.4\"\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "c28b59a7908015572cce6e33c3d1858a8536cf88", "filename": "src/librustc_parse/lexer/tokentrees.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,9 +1,9 @@\n use super::{StringReader, UnmatchedBrace};\n \n+use rustc_ast_pretty::pprust::token_to_string;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::PResult;\n use rustc_span::Span;\n-use syntax::print::pprust::token_to_string;\n use syntax::token::{self, Token};\n use syntax::tokenstream::{\n     DelimSpan,"}, {"sha": "bf0f8ff0064d556d2a554a5e5cfdd00fa76358f6", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -4,12 +4,12 @@\n #![feature(crate_visibility_modifier)]\n #![cfg_attr(bootstrap, feature(slice_patterns))]\n \n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Diagnostic, FatalError, Level, PResult};\n use rustc_session::parse::ParseSess;\n use rustc_span::{FileName, SourceFile, Span};\n use syntax::ast;\n-use syntax::print::pprust;\n use syntax::token::{self, Nonterminal};\n use syntax::tokenstream::{self, TokenStream, TokenTree};\n "}, {"sha": "e58eb9ffc51e74f254bf3db277f2c0be78933c3b", "filename": "src/librustc_parse/parser/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fattr.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,9 +1,9 @@\n use super::{Parser, PathStyle, TokenType};\n+use rustc_ast_pretty::pprust;\n use rustc_errors::PResult;\n use rustc_span::{Span, Symbol};\n use syntax::ast;\n use syntax::attr;\n-use syntax::print::pprust;\n use syntax::token::{self, Nonterminal};\n use syntax::util::comments;\n "}, {"sha": "e2227f669738cb2da5128510f9599eff8e8a95f3", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,5 +1,6 @@\n use super::{BlockMode, Parser, PathStyle, SemiColonMode, SeqSep, TokenExpectType, TokenType};\n \n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{pluralize, struct_span_err};\n use rustc_errors::{Applicability, DiagnosticBuilder, Handler, PResult};\n@@ -10,7 +11,6 @@ use syntax::ast::{\n     self, BinOpKind, BindingMode, BlockCheckMode, Expr, ExprKind, Ident, Item, Param,\n };\n use syntax::ast::{AttrVec, ItemKind, Mutability, Pat, PatKind, PathSegment, QSelf, Ty, TyKind};\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token::{self, token_can_begin_expr, TokenKind};\n use syntax::util::parser::AssocOp;"}, {"sha": "0d12f8cf6c03959be57cba54fbc3409a2fa2c5b8", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -3,6 +3,7 @@ use super::{BlockMode, Parser, PathStyle, PrevTokenKind, Restrictions, TokenType\n use super::{SemiColonMode, SeqSep, TokenExpectType};\n use crate::maybe_recover_from_interpolated_ty_qpath;\n \n+use rustc_ast_pretty::pprust;\n use rustc_errors::{Applicability, PResult};\n use rustc_span::source_map::{self, Span, Spanned};\n use rustc_span::symbol::{kw, sym, Symbol};\n@@ -12,7 +13,6 @@ use syntax::ast::{\n     AnonConst, BinOp, BinOpKind, FnDecl, FunctionRetTy, Mac, Param, Ty, TyKind, UnOp,\n };\n use syntax::ast::{Arm, BlockCheckMode, Expr, ExprKind, IsAsync, Label, Movability, RangeLimits};\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token::{self, Token, TokenKind};\n use syntax::util::classify;"}, {"sha": "7f15c403e9af9718f614eb9ee21d88633b0a7b21", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -3,6 +3,7 @@ use super::{FollowedByType, Parser, PathStyle};\n \n use crate::maybe_whole;\n \n+use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, PResult, StashKey};\n use rustc_span::source_map::{self, respan, Span};\n use rustc_span::symbol::{kw, sym, Symbol};\n@@ -13,7 +14,6 @@ use syntax::ast::{BindingMode, Block, FnDecl, FnSig, Mac, MacArgs, MacDelimiter,\n use syntax::ast::{Constness, Defaultness, Extern, IsAsync, IsAuto, PathSegment, StrLit, Unsafety};\n use syntax::ast::{EnumDef, Generics, StructField, TraitRef, Ty, TyKind, Variant, VariantData};\n use syntax::ast::{FnHeader, ForeignItem, ForeignItemKind, Mutability, Visibility, VisibilityKind};\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token;\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};"}, {"sha": "1e28372c384f5d6bb2831dbcdc1d7f53b4617ad6", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -16,14 +16,14 @@ use crate::lexer::UnmatchedBrace;\n use crate::{Directory, DirectoryOwnership};\n \n use log::debug;\n+use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, FatalError, PResult};\n use rustc_session::parse::ParseSess;\n use rustc_span::source_map::respan;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, FileName, Span, DUMMY_SP};\n use syntax::ast::{self, AttrStyle, AttrVec, CrateSugar, Extern, Ident, Unsafety, DUMMY_NODE_ID};\n use syntax::ast::{IsAsync, MacArgs, MacDelimiter, Mutability, StrLit, Visibility, VisibilityKind};\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token::{self, DelimToken, Token, TokenKind};\n use syntax::tokenstream::{self, DelimSpan, TokenStream, TokenTree, TreeAndJoint};"}, {"sha": "e07b0733739d16da678661da044f8e35dd638f75", "filename": "src/librustc_parse/parser/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_parse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpat.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,12 +1,12 @@\n use super::{Parser, PathStyle};\n use crate::{maybe_recover_from_interpolated_ty_qpath, maybe_whole};\n+use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, PResult};\n use rustc_span::source_map::{respan, Span, Spanned};\n use rustc_span::symbol::{kw, sym};\n use syntax::ast::{self, AttrVec, Attribute, FieldPat, Mac, Pat, PatKind, RangeEnd, RangeSyntax};\n use syntax::ast::{BindingMode, Expr, ExprKind, Ident, Mutability, Path, QSelf};\n use syntax::mut_visit::{noop_visit_mac, noop_visit_pat, MutVisitor};\n-use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::token;\n "}, {"sha": "f8c96ecaf9373f176b3dad5072bf016d3c9d4399", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -17,6 +17,7 @@ syntax = { path = \"../libsyntax\" }\n arena = { path = \"../libarena\" }\n rustc = { path = \"../librustc\" }\n rustc_ast_lowering = { path = \"../librustc_ast_lowering\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "f8e963192c99f9a6d0f336b25ac8c2ac93dba8bb", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -4,6 +4,7 @@ use log::debug;\n use rustc::bug;\n use rustc::session::Session;\n use rustc::ty::{self, DefIdTree};\n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_feature::BUILTIN_ATTRIBUTES;\n@@ -16,7 +17,6 @@ use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, Symbol};\n use rustc_span::{BytePos, MultiSpan, Span};\n use syntax::ast::{self, Ident, Path};\n-use syntax::print::pprust;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use crate::imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver};"}, {"sha": "402e25fcf482b2af0121feb4577c894069e98a92", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -25,6 +25,7 @@ use rustc::middle::cstore::{CrateStore, MetadataLoaderDyn};\n use rustc::span_bug;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, ResolverOutputs};\n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_data_structures::ptr_key::PtrKey;\n use rustc_data_structures::sync::Lrc;\n@@ -47,7 +48,6 @@ use syntax::ast::{Crate, CRATE_NODE_ID};\n use syntax::ast::{ItemKind, Path};\n use syntax::attr;\n use syntax::node_id::{NodeMap, NodeSet};\n-use syntax::print::pprust;\n use syntax::unwrap_or;\n use syntax::visit::{self, Visitor};\n "}, {"sha": "11139a3dc94fcea89a44e282b7de37526284585e", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -10,6 +10,7 @@ use rustc::middle::stability;\n use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::{lint, span_bug, ty};\n+use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, StabilityLevel};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_expand::base::SyntaxExtension;\n@@ -24,7 +25,6 @@ use rustc_span::hygiene::{self, ExpnData, ExpnId, ExpnKind};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Ident, NodeId};\n-use syntax::print::pprust;\n \n use rustc_data_structures::sync::Lrc;\n use rustc_span::hygiene::{AstPass, MacroKind};"}, {"sha": "2cbed75eaf597292bb498eb6ef43a9b584955075", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -11,6 +11,7 @@ path = \"lib.rs\"\n [dependencies]\n log = \"0.4\"\n rustc = { path = \"../librustc\" }\n+rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_codegen_utils = { path = \"../librustc_codegen_utils\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "09c261cdc2388abf11162bce28712e7786799e59", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -16,22 +16,21 @@\n use rustc::session::config::Input;\n use rustc::span_bug;\n use rustc::ty::{self, DefIdTree, TyCtxt};\n+use rustc_ast_pretty::pprust::{bounds_to_string, generic_params_to_string, ty_to_string};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::{DefKind as HirDefKind, Res};\n use rustc_hir::def_id::DefId;\n-\n-use std::env;\n-use std::path::Path;\n-\n use rustc_span::source_map::{respan, DUMMY_SP};\n use rustc_span::*;\n use syntax::ast::{self, Attribute, NodeId, PatKind};\n-use syntax::print::pprust::{bounds_to_string, generic_params_to_string, ty_to_string};\n use syntax::ptr::P;\n use syntax::token;\n use syntax::visit::{self, Visitor};\n use syntax::walk_list;\n \n+use std::env;\n+use std::path::Path;\n+\n use crate::dumper::{Access, Dumper};\n use crate::sig;\n use crate::span_utils::SpanUtils;"}, {"sha": "89054441fa3bfed728822f887d4424295358e818", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -13,11 +13,17 @@ use rustc::middle::privacy::AccessLevels;\n use rustc::session::config::{CrateType, Input, OutputType};\n use rustc::ty::{self, DefIdTree, TyCtxt};\n use rustc::{bug, span_bug};\n+use rustc_ast_pretty::pprust::{self, param_to_string, ty_to_string};\n use rustc_codegen_utils::link::{filename_for_metadata, out_filename};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind as HirDefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::Node;\n+use rustc_span::source_map::Spanned;\n+use rustc_span::*;\n+use syntax::ast::{self, Attribute, NodeId, PatKind, DUMMY_NODE_ID};\n+use syntax::util::comments::strip_doc_comment_decoration;\n+use syntax::visit::{self, Visitor};\n \n use std::cell::Cell;\n use std::default::Default;\n@@ -26,14 +32,6 @@ use std::fs::File;\n use std::io::BufWriter;\n use std::path::{Path, PathBuf};\n \n-use rustc_span::source_map::Spanned;\n-use rustc_span::*;\n-use syntax::ast::{self, Attribute, NodeId, PatKind, DUMMY_NODE_ID};\n-use syntax::print::pprust;\n-use syntax::print::pprust::{param_to_string, ty_to_string};\n-use syntax::util::comments::strip_doc_comment_decoration;\n-use syntax::visit::{self, Visitor};\n-\n use dump_visitor::DumpVisitor;\n use span_utils::SpanUtils;\n "}, {"sha": "dbf29b6531d2abd87da36e9e9f4e56b21867711c", "filename": "src/librustc_save_analysis/sig.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustc_save_analysis%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fsig.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -29,9 +29,9 @@ use crate::{id_from_def_id, id_from_node_id, SaveContext};\n \n use rls_data::{SigElement, Signature};\n \n+use rustc_ast_pretty::pprust;\n use rustc_hir::def::{DefKind, Res};\n use syntax::ast::{self, Extern, NodeId};\n-use syntax::print::pprust;\n \n pub fn item_signature(item: &ast::Item, scx: &SaveContext<'_, '_>) -> Option<Signature> {\n     if !scx.config.signatures {"}, {"sha": "c67064139426706b733ce69ccfb6b4615d086433", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -44,6 +44,7 @@ use std::sync::Arc;\n \n use rustc::middle::privacy::AccessLevels;\n use rustc::middle::stability;\n+use rustc_ast_pretty::pprust;\n use rustc_data_structures::flock;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_feature::UnstableFeatures;\n@@ -57,7 +58,6 @@ use rustc_span::symbol::{sym, Symbol};\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n use syntax::ast;\n-use syntax::print::pprust;\n \n use crate::clean::{self, AttributesExt, Deprecation, GetDefId, SelfTy};\n use crate::config::RenderOptions;"}, {"sha": "ed3f0f94e0ed8903b3f2688cbde8f9382843547e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -21,6 +21,7 @@\n extern crate env_logger;\n extern crate getopts;\n extern crate rustc;\n+extern crate rustc_ast_pretty;\n extern crate rustc_attr;\n extern crate rustc_data_structures;\n extern crate rustc_driver;"}, {"sha": "52776eabdf562904c238f5102da6b39f9c231c10", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -141,7 +141,7 @@ pub fn run(options: Options) -> i32 {\n \n // Look for `#![doc(test(no_crate_inject))]`, used by crates in the std facade.\n fn scrape_test_config(krate: &::rustc_hir::Crate) -> TestOptions {\n-    use syntax::print::pprust;\n+    use rustc_ast_pretty::pprust;\n \n     let mut opts =\n         TestOptions { no_crate_inject: false, display_warnings: false, attrs: Vec::new() };"}, {"sha": "5a8c9f76ea9435c50253c6ede80ccacddc683b32", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1417,7 +1417,7 @@ pub enum MacDelimiter {\n }\n \n impl MacDelimiter {\n-    crate fn to_token(self) -> DelimToken {\n+    pub fn to_token(self) -> DelimToken {\n         match self {\n             MacDelimiter::Parenthesis => DelimToken::Paren,\n             MacDelimiter::Bracket => DelimToken::Bracket,\n@@ -1480,7 +1480,7 @@ pub struct StrLit {\n }\n \n impl StrLit {\n-    crate fn as_lit(&self) -> Lit {\n+    pub fn as_lit(&self) -> Lit {\n         let token_kind = match self.style {\n             StrStyle::Cooked => token::Str,\n             StrStyle::Raw(n) => token::StrRaw(n),"}, {"sha": "c9800da700fc5a24fa7127d6c609fc14d2061727", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -47,12 +47,6 @@ pub mod token;\n pub mod tokenstream;\n pub mod visit;\n \n-pub mod print {\n-    mod helpers;\n-    pub mod pp;\n-    pub mod pprust;\n-}\n-\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n \n /// Requirements for a `StableHashingContext` to be used in this crate."}, {"sha": "5a67531624d292003bbf19b9e1321478341c3b73", "filename": "src/libsyntax/util/comments.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Futil%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Futil%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fcomments.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -1,13 +1,11 @@\n pub use CommentStyle::*;\n \n use crate::ast;\n-\n use rustc_span::source_map::SourceMap;\n use rustc_span::{BytePos, CharPos, FileName, Pos};\n \n-use std::usize;\n-\n use log::debug;\n+use std::usize;\n \n #[cfg(test)]\n mod tests;\n@@ -190,7 +188,7 @@ fn split_block_comment_into_lines(text: &str, col: CharPos) -> Vec<String> {\n \n // it appears this function is called only from pprust... that's\n // probably not a good thing.\n-crate fn gather_comments(sm: &SourceMap, path: FileName, src: String) -> Vec<Comment> {\n+pub fn gather_comments(sm: &SourceMap, path: FileName, src: String) -> Vec<Comment> {\n     let cm = SourceMap::new(sm.path_mapping().clone());\n     let source_file = cm.new_source_file(path, src);\n     let text = (*source_file.src.as_ref().unwrap()).clone();"}, {"sha": "b98cc96b3c64798ac4e95f55a29facdc80324ccf", "filename": "src/libsyntax/util/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Futil%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e233331a519408edf60ac1c7dee4a9cefe8c8756/src%2Flibsyntax%2Futil%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser.rs?ref=e233331a519408edf60ac1c7dee4a9cefe8c8756", "patch": "@@ -367,7 +367,7 @@ pub fn prec_let_scrutinee_needs_par() -> usize {\n ///\n /// Conversely, suppose that we have `(let _ = a) OP b` and `order` is that of `OP`.\n /// Can we print this as `let _ = a OP b`?\n-crate fn needs_par_as_let_scrutinee(order: i8) -> bool {\n+pub fn needs_par_as_let_scrutinee(order: i8) -> bool {\n     order <= prec_let_scrutinee_needs_par() as i8\n }\n "}]}