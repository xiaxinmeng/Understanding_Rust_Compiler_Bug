{"sha": "edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYmQwMmZkMzVmZmQzNzI0YTQxNWMwNWMyMWU0ZTRmYzU1NzVlMWU=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-03-10T16:25:03Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-03-16T03:11:09Z"}, "message": "Queryify check_trait_item_well_formed\n\nFixes #46753", "tree": {"sha": "f707872bf972adcf3f7bdc6ef1a3e40daf652067", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f707872bf972adcf3f7bdc6ef1a3e40daf652067"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "html_url": "https://github.com/rust-lang/rust/commit/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86a123c2fd018905fca7af94a352227fe97e1623", "url": "https://api.github.com/repos/rust-lang/rust/commits/86a123c2fd018905fca7af94a352227fe97e1623", "html_url": "https://github.com/rust-lang/rust/commit/86a123c2fd018905fca7af94a352227fe97e1623"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "9cb59da47bd9f96549b77dd60f7b1ec770867ea6", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "patch": "@@ -580,6 +580,7 @@ define_dep_nodes!( <'tcx>\n     [] IsNoBuiltins(CrateNum),\n     [] ImplDefaultness(DefId),\n     [] CheckItemWellFormed(DefId),\n+    [] CheckTraitItemWellFormed(DefId),\n     [] ReachableNonGenerics(CrateNum),\n     [] NativeLibraries(CrateNum),\n     [] PluginRegistrarFn(CrateNum),"}, {"sha": "3e201560474472c3b25ed586141a2ac0a9568aaa", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "patch": "@@ -299,6 +299,7 @@ define_maps! { <'tcx>\n     [] fn impl_defaultness: ImplDefaultness(DefId) -> hir::Defaultness,\n \n     [] fn check_item_well_formed: CheckItemWellFormed(DefId) -> (),\n+    [] fn check_trait_item_well_formed: CheckTraitItemWellFormed(DefId) -> (),\n \n     // The DefIds of all non-generic functions and statics in the given crate\n     // that can be reached from outside the crate."}, {"sha": "2eba72a590e3acaaff6684c48e3041a77f0a766f", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "patch": "@@ -872,6 +872,7 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::IsNoBuiltins => { force!(is_no_builtins, krate!()); }\n         DepKind::ImplDefaultness => { force!(impl_defaultness, def_id!()); }\n         DepKind::CheckItemWellFormed => { force!(check_item_well_formed, def_id!()); }\n+        DepKind::CheckTraitItemWellFormed => { force!(check_trait_item_well_formed, def_id!()); }\n         DepKind::ReachableNonGenerics => { force!(reachable_non_generics, krate!()); }\n         DepKind::NativeLibraries => { force!(native_libraries, krate!()); }\n         DepKind::PluginRegistrarFn => { force!(plugin_registrar_fn, krate!()); }"}, {"sha": "9ffe029468d3ea79b700ea159ef472c93a7f9d01", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "patch": "@@ -722,6 +722,10 @@ fn check_item_well_formed<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId)\n     wfcheck::CheckTypeWellFormed::new(tcx).check_item_well_formed(def_id);\n }\n \n+fn check_trait_item_well_formed<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) {\n+    wfcheck::CheckTypeWellFormed::new(tcx).check_trait_item(def_id);\n+}\n+\n pub fn provide(providers: &mut Providers) {\n     *providers = Providers {\n         typeck_item_bodies,\n@@ -730,6 +734,7 @@ pub fn provide(providers: &mut Providers) {\n         adt_destructor,\n         used_trait_imports,\n         check_item_well_formed,\n+        check_trait_item_well_formed,\n         ..*providers\n     };\n }"}, {"sha": "c80e0b8bba0666dd256c2510f8e142927d53c65e", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edbd02fd35ffd3724a415c05c21e4e4fc5575e1e/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=edbd02fd35ffd3724a415c05c21e4e4fc5575e1e", "patch": "@@ -159,6 +159,18 @@ impl<'a, 'gcx> CheckTypeWellFormed<'a, 'gcx> {\n         }\n     }\n \n+    pub fn check_trait_item(&mut self, def_id: DefId) {\n+        let node_id = self.tcx.hir.as_local_node_id(def_id).unwrap();\n+        let trait_item = self.tcx.hir.expect_trait_item(node_id);\n+\n+        let method_sig = match trait_item.node {\n+            hir::TraitItemKind::Method(ref sig, _) => Some(sig),\n+            _ => None\n+        };\n+        CheckTypeWellFormed::new(self.tcx)\n+            .check_associated_item(trait_item.id, trait_item.span, method_sig);\n+    }\n+\n     fn check_associated_item(&mut self,\n                              item_id: ast::NodeId,\n                              span: Span,\n@@ -675,12 +687,8 @@ impl<'a, 'tcx, 'v> Visitor<'v> for CheckTypeWellFormedVisitor<'a, 'tcx> {\n \n     fn visit_trait_item(&mut self, trait_item: &'v hir::TraitItem) {\n         debug!(\"visit_trait_item: {:?}\", trait_item);\n-        let method_sig = match trait_item.node {\n-            hir::TraitItemKind::Method(ref sig, _) => Some(sig),\n-            _ => None\n-        };\n-        CheckTypeWellFormed::new(self.tcx)\n-            .check_associated_item(trait_item.id, trait_item.span, method_sig);\n+        let def_id = self.tcx.hir.local_def_id(trait_item.id);\n+        ty::maps::queries::check_trait_item_well_formed::ensure(self.tcx, def_id);\n         intravisit::walk_trait_item(self, trait_item)\n     }\n "}]}