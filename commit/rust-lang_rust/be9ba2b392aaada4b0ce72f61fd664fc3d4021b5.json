{"sha": "be9ba2b392aaada4b0ce72f61fd664fc3d4021b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOWJhMmIzOTJhYWFkYTRiMGNlNzJmNjFmZDY2NGZjM2Q0MDIxYjU=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-11-29T14:52:12Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-11-29T14:52:12Z"}, "message": "Move identifier check to analysis", "tree": {"sha": "306a78600c08b7b9c3d558ae702c416d6ed063e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/306a78600c08b7b9c3d558ae702c416d6ed063e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJd4TCcAAoJENWyu1zcMzS8CK0H/2NfZN8mX740JVMmnrtJ7P0D\nEt7A4a9MwuENt9WA+eibthfpjkgxQyuU2hNf8vEiJzbpdaZYAOvANsd3w5go4bGx\n+IZDPsbZGemcVTNM+Z/8bRLPVKC29HL/kjElxw8LS0mLWiv59BOgTGRdFhGNYQD6\nSa4oOG3snRpJWuAFey5ryjjx0Im2NwUonDb6tCCDFhZicsnAgsAtWmIYyuT8UB6U\nIiS/xOf2S4TsZntPzOv6NTyXCS1FVb13I6XWzxfhsNoxfjIV/3Pe/LZraqFzNwAS\nHoEPcRLMOjJjgXSGwRknx43eoylfFgQdMdsbIUj+gBIQH0EJz2EVTiciVyDoOLY=\n=ine5\n-----END PGP SIGNATURE-----", "payload": "tree 306a78600c08b7b9c3d558ae702c416d6ed063e5\nparent f081c9d94dcc7a06e9c224e6b113a563d474ad18\nauthor Wilco Kusee <wilcokusee@gmail.com> 1575039132 +0100\ncommitter Wilco Kusee <wilcokusee@gmail.com> 1575039132 +0100\n\nMove identifier check to analysis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5", "html_url": "https://github.com/rust-lang/rust/commit/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f081c9d94dcc7a06e9c224e6b113a563d474ad18", "url": "https://api.github.com/repos/rust-lang/rust/commits/f081c9d94dcc7a06e9c224e6b113a563d474ad18", "html_url": "https://github.com/rust-lang/rust/commit/f081c9d94dcc7a06e9c224e6b113a563d474ad18"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "1f88791d775e426c540a6f0c7649c11d9bd8b7f8", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=be9ba2b392aaada4b0ce72f61fd664fc3d4021b5", "patch": "@@ -56,7 +56,7 @@ use ra_db::{\n     salsa::{self, ParallelDatabase},\n     CheckCanceled, Env, FileLoader, SourceDatabase,\n };\n-use ra_syntax::{SourceFile, TextRange, TextUnit};\n+use ra_syntax::{tokenize, SourceFile, SyntaxKind, TextRange, TextUnit};\n \n use crate::{db::LineIndexDatabase, display::ToNav, symbol_index::FileSymbol};\n \n@@ -470,6 +470,13 @@ impl Analysis {\n         position: FilePosition,\n         new_name: &str,\n     ) -> Cancelable<Option<RangeInfo<SourceChange>>> {\n+        let tokens = tokenize(new_name);\n+        if tokens.len() != 1\n+            || (tokens[0].kind != SyntaxKind::IDENT && tokens[0].kind != SyntaxKind::UNDERSCORE)\n+        {\n+            return Ok(None);\n+        }\n+\n         self.with_db(|db| references::rename(db, position, new_name))\n     }\n "}, {"sha": "ca47ff5e16cab2c598134735db9236994c55382a", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9ba2b392aaada4b0ce72f61fd664fc3d4021b5/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=be9ba2b392aaada4b0ce72f61fd664fc3d4021b5", "patch": "@@ -13,7 +13,7 @@ use ra_ide::{\n     AssistId, FileId, FilePosition, FileRange, Query, Runnable, RunnableKind, SearchScope,\n };\n use ra_prof::profile;\n-use ra_syntax::{tokenize, AstNode, SyntaxKind, TextRange, TextUnit};\n+use ra_syntax::{AstNode, SyntaxKind, TextRange, TextUnit};\n use rustc_hash::FxHashMap;\n use serde::{Deserialize, Serialize};\n use serde_json::to_value;\n@@ -480,8 +480,6 @@ pub fn handle_prepare_rename(\n     let _p = profile(\"handle_prepare_rename\");\n     let position = params.try_conv_with(&world)?;\n \n-    // We support renaming references like handle_rename does.\n-    // In the future we may want to reject the renaming of things like keywords here too.\n     let optional_change = world.analysis().rename(position, \"dummy\")?;\n     let range = match optional_change {\n         None => return Ok(None),\n@@ -506,14 +504,6 @@ pub fn handle_rename(world: WorldSnapshot, params: RenameParams) -> Result<Optio\n         .into());\n     }\n \n-    // Only rename to valid identifiers\n-    let tokens = tokenize(&params.new_name);\n-    if tokens.len() != 1\n-        || (tokens[0].kind != SyntaxKind::IDENT && tokens[0].kind != SyntaxKind::UNDERSCORE)\n-    {\n-        return Ok(None);\n-    }\n-\n     let optional_change = world.analysis().rename(position, &*params.new_name)?;\n     let change = match optional_change {\n         None => return Ok(None),"}]}