{"sha": "a1f91aa4104c330d5592c56653a1c68394251120", "node_id": "C_kwDOAAsO6NoAKGExZjkxYWE0MTA0YzMzMGQ1NTkyYzU2NjUzYTFjNjgzOTQyNTExMjA", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-17T12:39:55Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-17T12:42:48Z"}, "message": "Use a const ParamEnv when in default_method_body_is_const", "tree": {"sha": "464a1aceda17610f0ab408330171f449ceca122c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/464a1aceda17610f0ab408330171f449ceca122c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1f91aa4104c330d5592c56653a1c68394251120", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmG8hcgACgkQbQF6ltjm\nwvlbOw/+I5hBkj4lthXQvzqF7ZJrI7cPs5/41xD3IjgzD5+fdSKYijZnyFAPZI+y\nU/SjuOF38uDuspmNeyHcCW3cyNT7/zWJvi2RjFUo9SmPDz0YJdwBjjOppibGh1FV\nsley+0IFoXf88FleVkgelSOkAvksjE+IJgSb2oKs62n12RgCKW3Cwt5NnopjGKVT\npwIZWNa2hgcYpNFgbuIwjFeH4bTjVCPdQJ0nM40rh3imNa0enwxEEUUkSPOHaL+I\nA+7Jkmv1bm6rhGJJAjzUoAKxXzXXvT6Jxfd6c5RZPziCGPIxldhVooJQCWiYPYE/\nasTI2Sw8nn1sXYyeZe2RiiwB2ZC7zSGPt4jYqt5k5kKhWFAIQqUiYSl1OnJQfHzA\nla12uboEkAZmfZlk8ZIN2MfNZARvrMhNTayX8qdrjGsQGToVoq2Q8aOXtIedVa9w\nQM5JlT3gqvR0rDbDK1kM9mopgeRCmorzGU4pThVgc339KaGn71JDh2Fyysi/5+kW\nvVsyQdVooXHqfJnu447S1U0AcBvSGjIDVgm9H3LgLnAmaoEDDiTaE8xBmb0myQ5a\nqZTUaF0FaNWOQ/Pq+VnUu788wsKUNzIWUuJcZyMzkhqA8GGf14ekiag7AAnTPLSB\nyN8W9R8Ebp3YBraK7JIAdVBC3tQMzgHW7OOHJuVRvXec0x8kel4=\n=8pSu\n-----END PGP SIGNATURE-----", "payload": "tree 464a1aceda17610f0ab408330171f449ceca122c\nparent 9b45f04414f3e4006fc2ed3d8e1fa7708efe0e53\nauthor Deadbeef <ent3rm4n@gmail.com> 1639744795 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1639744968 +0800\n\nUse a const ParamEnv when in default_method_body_is_const\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f91aa4104c330d5592c56653a1c68394251120", "html_url": "https://github.com/rust-lang/rust/commit/a1f91aa4104c330d5592c56653a1c68394251120", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1f91aa4104c330d5592c56653a1c68394251120/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b45f04414f3e4006fc2ed3d8e1fa7708efe0e53", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b45f04414f3e4006fc2ed3d8e1fa7708efe0e53", "html_url": "https://github.com/rust-lang/rust/commit/9b45f04414f3e4006fc2ed3d8e1fa7708efe0e53"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "6c2657bd64bdbe47de19dafaa50545a05425063a", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a1f91aa4104c330d5592c56653a1c68394251120/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1f91aa4104c330d5592c56653a1c68394251120/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=a1f91aa4104c330d5592c56653a1c68394251120", "patch": "@@ -3,7 +3,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Binder, Predicate, PredicateKind, ToPredicate, Ty, TyCtxt};\n-use rustc_span::Span;\n+use rustc_span::{sym, Span};\n use rustc_trait_selection::traits;\n \n fn sized_constraint_for_ty<'tcx>(\n@@ -285,6 +285,12 @@ fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n \n     let constness = match hir_id {\n         Some(hir_id) => match tcx.hir().get(hir_id) {\n+            hir::Node::TraitItem(hir::TraitItem { kind: hir::TraitItemKind::Fn(..), .. })\n+                if tcx.has_attr(def_id, sym::default_method_body_is_const) =>\n+            {\n+                hir::Constness::Const\n+            }\n+\n             hir::Node::Item(hir::Item { kind: hir::ItemKind::Const(..), .. })\n             | hir::Node::Item(hir::Item { kind: hir::ItemKind::Static(..), .. })\n             | hir::Node::TraitItem(hir::TraitItem {"}, {"sha": "7db04fe1ac3f13646867dfd513993bd037b942bf", "filename": "src/test/ui/rfc-2632-const-trait-impl/default-method-body-is-const-body-checking.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a1f91aa4104c330d5592c56653a1c68394251120/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1f91aa4104c330d5592c56653a1c68394251120/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.rs?ref=a1f91aa4104c330d5592c56653a1c68394251120", "patch": "@@ -0,0 +1,17 @@\n+#![feature(const_fn_trait_bound)]\n+#![feature(const_trait_impl)]\n+\n+trait Tr {}\n+impl Tr for () {}\n+\n+const fn foo<T>() where T: ~const Tr {}\n+\n+pub trait Foo {\n+    #[default_method_body_is_const]\n+    fn foo() {\n+        foo::<()>();\n+        //~^ ERROR the trait bound `(): Tr` is not satisfied\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "6e7e4b3a472d6b715940a315429141225259d5f1", "filename": "src/test/ui/rfc-2632-const-trait-impl/default-method-body-is-const-body-checking.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a1f91aa4104c330d5592c56653a1c68394251120/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a1f91aa4104c330d5592c56653a1c68394251120/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fdefault-method-body-is-const-body-checking.stderr?ref=a1f91aa4104c330d5592c56653a1c68394251120", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: the trait bound `(): Tr` is not satisfied\n+  --> $DIR/default-method-body-is-const-body-checking.rs:12:15\n+   |\n+LL |         foo::<()>();\n+   |               ^^ the trait `Tr` is not implemented for `()`\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/default-method-body-is-const-body-checking.rs:7:28\n+   |\n+LL | const fn foo<T>() where T: ~const Tr {}\n+   |                            ^^^^^^^^^ required by this bound in `foo`\n+help: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\n+   |\n+LL | pub trait Foo where (): Tr {\n+   |               ++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}