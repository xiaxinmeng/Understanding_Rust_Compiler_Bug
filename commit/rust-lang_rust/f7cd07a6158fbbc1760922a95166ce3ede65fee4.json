{"sha": "f7cd07a6158fbbc1760922a95166ce3ede65fee4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3Y2QwN2E2MTU4ZmJiYzE3NjA5MjJhOTUxNjZjZTNlZGU2NWZlZTQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-11-27T07:20:15Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-11-27T07:21:25Z"}, "message": "Produce PrimValKinds for small, simple layout ADTs.", "tree": {"sha": "f6bd08b30002560e47f2c0acc75969f9aa5a3efa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6bd08b30002560e47f2c0acc75969f9aa5a3efa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7cd07a6158fbbc1760922a95166ce3ede65fee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7cd07a6158fbbc1760922a95166ce3ede65fee4", "html_url": "https://github.com/rust-lang/rust/commit/f7cd07a6158fbbc1760922a95166ce3ede65fee4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7cd07a6158fbbc1760922a95166ce3ede65fee4/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc3e1c0064abbc39650b8d46e6e8c459e739e8ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3e1c0064abbc39650b8d46e6e8c459e739e8ad", "html_url": "https://github.com/rust-lang/rust/commit/fc3e1c0064abbc39650b8d46e6e8c459e739e8ad"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "ac2e5cd7967bdd6df682288aefefb04959d9f87d", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f7cd07a6158fbbc1760922a95166ce3ede65fee4/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7cd07a6158fbbc1760922a95166ce3ede65fee4/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=f7cd07a6158fbbc1760922a95166ce3ede65fee4", "patch": "@@ -1364,17 +1364,30 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n             ty::TyAdt(..) => {\n                 use rustc::ty::layout::Layout::*;\n-                if let CEnum { discr, signed, .. } = *self.type_layout(ty)? {\n-                    let size = discr.size().bytes();\n-                    if signed {\n-                        PrimValKind::from_int_size(size)\n-                    } else {\n-                        PrimValKind::from_uint_size(size)\n+                match *self.type_layout(ty)? {\n+                    CEnum { discr, signed, .. } => {\n+                        let size = discr.size().bytes();\n+                        if signed {\n+                            PrimValKind::from_int_size(size)\n+                        } else {\n+                            PrimValKind::from_uint_size(size)\n+                        }\n                     }\n-                } else {\n-                    return Err(EvalError::TypeNotPrimitive(ty));\n+\n+                    RawNullablePointer { value, .. } => {\n+                        use rustc::ty::layout::Primitive::*;\n+                        match value {\n+                            // TODO(solson): Does signedness matter here? What should the sign be?\n+                            Int(int) => PrimValKind::from_uint_size(int.size().bytes()),\n+                            F32 => PrimValKind::F32,\n+                            F64 => PrimValKind::F64,\n+                            Pointer => PrimValKind::Ptr,\n+                        }\n+                    }\n+\n+                    _ => return Err(EvalError::TypeNotPrimitive(ty)),\n                 }\n-            },\n+            }\n \n             _ => return Err(EvalError::TypeNotPrimitive(ty)),\n         };"}]}