{"sha": "42b75a5c18463b4fef98267663fab13d265eac3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYjc1YTVjMTg0NjNiNGZlZjk4MjY3NjYzZmFiMTNkMjY1ZWFjM2U=", "commit": {"author": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2016-07-03T03:24:27Z"}, "committer": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2016-08-31T06:54:19Z"}, "message": "Warn about multiple conflicting #[repr] hints\n\nCloses #34622", "tree": {"sha": "c6fee17c4ff63cdc07071354c6316907ef5ef084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6fee17c4ff63cdc07071354c6316907ef5ef084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42b75a5c18463b4fef98267663fab13d265eac3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42b75a5c18463b4fef98267663fab13d265eac3e", "html_url": "https://github.com/rust-lang/rust/commit/42b75a5c18463b4fef98267663fab13d265eac3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42b75a5c18463b4fef98267663fab13d265eac3e/comments", "author": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eac41469d778d18ae7bf38fa917ed0fe122f944b", "url": "https://api.github.com/repos/rust-lang/rust/commits/eac41469d778d18ae7bf38fa917ed0fe122f944b", "html_url": "https://github.com/rust-lang/rust/commit/eac41469d778d18ae7bf38fa917ed0fe122f944b"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "de68cc707ad7a2020e3d7e6061f46968697ce394", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=42b75a5c18463b4fef98267663fab13d265eac3e", "patch": "@@ -1804,4 +1804,5 @@ register_diagnostics! {\n     E0490, // a value of type `..` is borrowed for too long\n     E0491, // in type `..`, reference has a longer lifetime than the data it...\n     E0495, // cannot infer an appropriate lifetime due to conflicting requirements\n+    E0566  // conflicting representation hints\n }"}, {"sha": "53624702c848b4138ace55642e6ed8c95c21deba", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=42b75a5c18463b4fef98267663fab13d265eac3e", "patch": "@@ -52,6 +52,7 @@ impl<'a> CheckAttrVisitor<'a> {\n             }\n         };\n \n+        let mut conflicting_reprs = 0;\n         for word in words {\n             let name = match word.name() {\n                 Some(word) => word,\n@@ -60,13 +61,24 @@ impl<'a> CheckAttrVisitor<'a> {\n \n             let message = match &*name {\n                 \"C\" => {\n+                    conflicting_reprs += 1;\n                     if target != Target::Struct && target != Target::Enum {\n                         \"attribute should be applied to struct or enum\"\n                     } else {\n                         continue\n                     }\n                 }\n-                \"packed\" | \"simd\" => {\n+                \"packed\" => {\n+                    // Do not increment conflicting_reprs here, because \"packed\"\n+                    // can be used to modify another repr hint\n+                    if target != Target::Struct {\n+                        \"attribute should be applied to struct\"\n+                    } else {\n+                        continue\n+                    }\n+                }\n+                \"simd\" => {\n+                    conflicting_reprs += 1;\n                     if target != Target::Struct {\n                         \"attribute should be applied to struct\"\n                     } else {\n@@ -76,6 +88,7 @@ impl<'a> CheckAttrVisitor<'a> {\n                 \"i8\" | \"u8\" | \"i16\" | \"u16\" |\n                 \"i32\" | \"u32\" | \"i64\" | \"u64\" |\n                 \"isize\" | \"usize\" => {\n+                    conflicting_reprs += 1;\n                     if target != Target::Enum {\n                         \"attribute should be applied to enum\"\n                     } else {\n@@ -87,6 +100,10 @@ impl<'a> CheckAttrVisitor<'a> {\n \n             span_err!(self.sess, attr.span, E0517, \"{}\", message);\n         }\n+        if conflicting_reprs > 1 {\n+            span_warn!(self.sess, attr.span, E0566,\n+                       \"conflicting representation hints\");\n+        }\n     }\n \n     fn check_attribute(&self, attr: &ast::Attribute, target: Target) {"}, {"sha": "703f3f7adf9106befce5713c8942c0171802f731", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=42b75a5c18463b4fef98267663fab13d265eac3e", "patch": "@@ -904,9 +904,8 @@ pub fn find_repr_attrs(diagnostic: &Handler, attr: &Attribute) -> Vec<ReprAttr>\n                         }\n                     };\n \n-                    match hint {\n-                        Some(h) => acc.push(h),\n-                        None => { }\n+                    if let Some(h) = hint {\n+                        acc.push(h);\n                     }\n                 } else {\n                     span_err!(diagnostic, item.span, E0553,"}, {"sha": "9e0c0d845ca24a10d6fb06a62fd7b897ea4b8997", "filename": "src/test/compile-fail/conflicting-repr-hints.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Ftest%2Fcompile-fail%2Fconflicting-repr-hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Ftest%2Fcompile-fail%2Fconflicting-repr-hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconflicting-repr-hints.rs?ref=42b75a5c18463b4fef98267663fab13d265eac3e", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+\n+#[repr(C)]\n+enum A { A }\n+\n+#[repr(u64)]\n+enum B { B }\n+\n+#[repr(C, u64)] //~ WARNING conflicting representation hints\n+enum C { C }\n+\n+#[repr(u32, u64)] //~ WARNING conflicting representation hints\n+enum D { D }\n+\n+#[repr(C, packed)]\n+struct E(i32);\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}, {"sha": "6b47721ab4b32779e372d8daa773e16aa5c5b237", "filename": "src/test/run-pass/mir_adt_construction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b75a5c18463b4fef98267663fab13d265eac3e/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs?ref=42b75a5c18463b4fef98267663fab13d265eac3e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[repr(C, u32)]\n+#[repr(C)]\n enum CEnum {\n     Hello = 30,\n     World = 60"}]}