{"sha": "c238df1ec346438869a1b6313cc3e34ee3814c4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMzhkZjFlYzM0NjQzODg2OWExYjYzMTNjYzNlMzRlZTM4MTRjNGI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-08T05:38:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-08T05:38:59Z"}, "message": "Rollup merge of #45052 - steveklabnik:gh44105, r=dtolnay\n\nModify Rc/Arc language around mutability\n\nThere are a few exceptions to the rule that Arc/Rc are immutable. Rather\nthan dig into the details, add \"generally\" to hint at this difference,\nas it's kind of a distraction at this point in the docs.\n\nAdditionally, Arc's docs were slightly different here generally, so add\nin both the existing language and the exception.\n\nFixes #44105", "tree": {"sha": "35a5fff6e8ad5958a9487a377c0de5c8f9783834", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35a5fff6e8ad5958a9487a377c0de5c8f9783834"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c238df1ec346438869a1b6313cc3e34ee3814c4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c238df1ec346438869a1b6313cc3e34ee3814c4b", "html_url": "https://github.com/rust-lang/rust/commit/c238df1ec346438869a1b6313cc3e34ee3814c4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c238df1ec346438869a1b6313cc3e34ee3814c4b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4090e81319380ee5963ed8a2d01759d3c4ff8644", "url": "https://api.github.com/repos/rust-lang/rust/commits/4090e81319380ee5963ed8a2d01759d3c4ff8644", "html_url": "https://github.com/rust-lang/rust/commit/4090e81319380ee5963ed8a2d01759d3c4ff8644"}, {"sha": "5e251b74eb200ba6d3b8ddaa68ef682c78be26e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e251b74eb200ba6d3b8ddaa68ef682c78be26e2", "html_url": "https://github.com/rust-lang/rust/commit/5e251b74eb200ba6d3b8ddaa68ef682c78be26e2"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "9481cd4e1a4f170c242d4340b6548dd18618438d", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c238df1ec346438869a1b6313cc3e34ee3814c4b/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c238df1ec346438869a1b6313cc3e34ee3814c4b/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=c238df1ec346438869a1b6313cc3e34ee3814c4b", "patch": "@@ -52,8 +52,10 @@ const MAX_REFCOUNT: usize = (isize::MAX) as usize;\n /// also destroyed.\n ///\n /// Shared references in Rust disallow mutation by default, and `Arc` is no\n-/// exception. If you need to mutate through an `Arc`, use [`Mutex`][mutex],\n-/// [`RwLock`][rwlock], or one of the [`Atomic`][atomic] types.\n+/// exception: you cannot generally obtain a mutable reference to something\n+/// inside an `Arc`. If you need to mutate through an `Arc`, use\n+/// [`Mutex`][mutex], [`RwLock`][rwlock], or one of the [`Atomic`][atomic]\n+/// types.\n ///\n /// ## Thread Safety\n ///"}, {"sha": "2f8620cc75051e4bb10cbdc3bec5ae343ba08ad4", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c238df1ec346438869a1b6313cc3e34ee3814c4b/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c238df1ec346438869a1b6313cc3e34ee3814c4b/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=c238df1ec346438869a1b6313cc3e34ee3814c4b", "patch": "@@ -19,7 +19,7 @@\n //! given value is destroyed, the pointed-to value is also destroyed.\n //!\n //! Shared references in Rust disallow mutation by default, and [`Rc`]\n-//! is no exception: you cannot obtain a mutable reference to\n+//! is no exception: you cannot generally obtain a mutable reference to\n //! something inside an [`Rc`]. If you need mutability, put a [`Cell`]\n //! or [`RefCell`] inside the [`Rc`]; see [an example of mutability\n //! inside an Rc][mutability]."}]}