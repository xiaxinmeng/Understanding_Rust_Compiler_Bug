{"sha": "3a687e7510b9f4c716f3ad7cc3a86492979a266d", "node_id": "C_kwDOAAsO6NoAKDNhNjg3ZTc1MTBiOWY0YzcxNmYzYWQ3Y2MzYTg2NDkyOTc5YTI2NmQ", "commit": {"author": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-10-31T19:49:57Z"}, "committer": {"name": "Hans Kratz", "email": "hans@appfour.com", "date": "2021-10-31T22:30:37Z"}, "message": "Use ubuntu image to download openssl, curl sources, cacert.pem", "tree": {"sha": "f23437d36776aa258cc760ecb5edf2bc6941e958", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f23437d36776aa258cc760ecb5edf2bc6941e958"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a687e7510b9f4c716f3ad7cc3a86492979a266d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a687e7510b9f4c716f3ad7cc3a86492979a266d", "html_url": "https://github.com/rust-lang/rust/commit/3a687e7510b9f4c716f3ad7cc3a86492979a266d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a687e7510b9f4c716f3ad7cc3a86492979a266d/comments", "author": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkratz", "id": 3736990, "node_id": "MDQ6VXNlcjM3MzY5OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/3736990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkratz", "html_url": "https://github.com/hkratz", "followers_url": "https://api.github.com/users/hkratz/followers", "following_url": "https://api.github.com/users/hkratz/following{/other_user}", "gists_url": "https://api.github.com/users/hkratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkratz/subscriptions", "organizations_url": "https://api.github.com/users/hkratz/orgs", "repos_url": "https://api.github.com/users/hkratz/repos", "events_url": "https://api.github.com/users/hkratz/events{/privacy}", "received_events_url": "https://api.github.com/users/hkratz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58899c4d9c63a6d27ac395ee9597ae797df7f026", "url": "https://api.github.com/repos/rust-lang/rust/commits/58899c4d9c63a6d27ac395ee9597ae797df7f026", "html_url": "https://github.com/rust-lang/rust/commit/58899c4d9c63a6d27ac395ee9597ae797df7f026"}], "stats": {"total": 121, "additions": 54, "deletions": 67}, "files": [{"sha": "2b4b78e81350d5dd396e62e038781a837b3c308c", "filename": "src/ci/docker/host-x86_64/dist-i686-linux/Dockerfile", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i686-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i686-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i686-linux%2FDockerfile?ref=3a687e7510b9f4c716f3ad7cc3a86492979a266d", "patch": "@@ -1,3 +1,15 @@\n+# We need recent curl, OpenSSL and CA certificates, so we can download further\n+# dependencies in the debian:6 image. We use an ubuntu 20.04 image download\n+# those.\n+FROM ubuntu:20.04\n+RUN apt-get update && \\\n+    apt-get install -y --no-install-recommends \\\n+        curl \\\n+        ca-certificates\n+WORKDIR /tmp\n+COPY host-x86_64/dist-x86_64-linux/download-openssl-curl.sh /tmp/\n+RUN ./download-openssl-curl.sh\n+\n # We use Debian 6 (glibc 2.11, kernel 2.6.32) as a common base for other\n # distros that still need Rust support: RHEL 6 (glibc 2.12, kernel 2.6.32) and\n # SLES 11 SP4 (glibc 2.11, kernel 3.0).\n@@ -14,8 +26,6 @@ RUN apt-get update && \\\n     apt-get install --allow-unauthenticated -y --no-install-recommends \\\n       automake \\\n       bzip2 \\\n-      ca-certificates \\\n-      curl \\\n       file \\\n       g++ \\\n       g++-multilib \\\n@@ -34,11 +44,6 @@ RUN apt-get update && \\\n       xz-utils \\\n       zlib1g-dev\n \n-# Install new Let's Encrypt root CA certificate and remove the expired one.\n-COPY host-x86_64/shared/ISRG_Root_X1.crt /usr/local/share/ca-certificates/ISRG_Root_X1.crt\n-RUN sed -i '/mozilla\\/DST_Root_CA_X3\\.crt/d' /etc/ca-certificates.conf\n-RUN /usr/sbin/update-ca-certificates\n-\n ENV PATH=/rustroot/bin:$PATH\n ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib32:/rustroot/lib\n ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n@@ -50,6 +55,7 @@ COPY host-x86_64/dist-x86_64-linux/shared.sh /tmp/\n # static.rust-lang.org. This'll be used to link into libcurl below (and used\n # later as well), so build a copy of OpenSSL with dynamic libraries into our\n # generic root.\n+COPY --from=0 /tmp/openssl.tar.gz /tmp/openssl.tar.gz\n COPY host-x86_64/dist-x86_64-linux/build-openssl.sh /tmp/\n RUN ./build-openssl.sh\n \n@@ -59,8 +65,13 @@ RUN ./build-openssl.sh\n #\n # Note that we also disable a bunch of optional features of curl that we don't\n # really need.\n+COPY --from=0 /tmp/curl.tar.xz /tmp/curl.tar.xz\n COPY host-x86_64/dist-x86_64-linux/build-curl.sh /tmp/\n-RUN ./build-curl.sh && apt-get remove -y curl\n+RUN ./build-curl.sh\n+\n+# Use up-to-date curl CA bundle\n+COPY --from=0 /tmp/cacert.pem /tmp/cacert.pem\n+ENV CURL_CA_BUNDLE /tmp/cacert.pem\n \n # binutils < 2.22 has a bug where the 32-bit executables it generates\n # immediately segfault in Rust, so we need to install our own binutils."}, {"sha": "50452349931e84c9321a41512c283581859f9068", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile?ref=3a687e7510b9f4c716f3ad7cc3a86492979a266d", "patch": "@@ -1,3 +1,15 @@\n+# We need recent curl, OpenSSL and CA certificates, so we can download further\n+# dependencies in the debian:6 image. We use an ubuntu 20.04 image download\n+# those.\n+FROM ubuntu:20.04\n+RUN apt-get update && \\\n+    apt-get install -y --no-install-recommends \\\n+        curl \\\n+        ca-certificates\n+WORKDIR /tmp\n+COPY host-x86_64/dist-x86_64-linux/download-openssl-curl.sh /tmp/\n+RUN ./download-openssl-curl.sh\n+\n # We use Debian 6 (glibc 2.11, kernel 2.6.32) as a common base for other\n # distros that still need Rust support: RHEL 6 (glibc 2.12, kernel 2.6.32) and\n # SLES 11 SP4 (glibc 2.11, kernel 3.0).\n@@ -14,8 +26,6 @@ RUN apt-get update && \\\n     apt-get install --allow-unauthenticated -y --no-install-recommends \\\n       automake \\\n       bzip2 \\\n-      ca-certificates \\\n-      curl \\\n       file \\\n       g++ \\\n       g++-multilib \\\n@@ -34,11 +44,6 @@ RUN apt-get update && \\\n       xz-utils \\\n       zlib1g-dev\n \n-# Install new Let's Encrypt root CA certificate and remove the expired one.\n-COPY host-x86_64/shared/ISRG_Root_X1.crt /usr/local/share/ca-certificates/ISRG_Root_X1.crt\n-RUN sed -i '/mozilla\\/DST_Root_CA_X3\\.crt/d' /etc/ca-certificates.conf\n-RUN /usr/sbin/update-ca-certificates\n-\n ENV PATH=/rustroot/bin:$PATH\n ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib32:/rustroot/lib\n ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n@@ -50,6 +55,7 @@ COPY host-x86_64/dist-x86_64-linux/shared.sh /tmp/\n # static.rust-lang.org. This'll be used to link into libcurl below (and used\n # later as well), so build a copy of OpenSSL with dynamic libraries into our\n # generic root.\n+COPY --from=0 /tmp/openssl.tar.gz /tmp/openssl.tar.gz\n COPY host-x86_64/dist-x86_64-linux/build-openssl.sh /tmp/\n RUN ./build-openssl.sh\n \n@@ -59,8 +65,13 @@ RUN ./build-openssl.sh\n #\n # Note that we also disable a bunch of optional features of curl that we don't\n # really need.\n+COPY --from=0 /tmp/curl.tar.xz /tmp/curl.tar.xz\n COPY host-x86_64/dist-x86_64-linux/build-curl.sh /tmp/\n-RUN ./build-curl.sh && apt-get remove -y curl\n+RUN ./build-curl.sh\n+\n+# Use up-to-date curl CA bundle\n+COPY --from=0 /tmp/cacert.pem /tmp/cacert.pem\n+ENV CURL_CA_BUNDLE /tmp/cacert.pem\n \n # binutils < 2.22 has a bug where the 32-bit executables it generates\n # immediately segfault in Rust, so we need to install our own binutils."}, {"sha": "88ee96eaa89b579c0a5e4ea56b7c594fb8a4482d", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/build-curl.sh", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-curl.sh?ref=3a687e7510b9f4c716f3ad7cc3a86492979a266d", "patch": "@@ -3,18 +3,11 @@\n set -ex\n source shared.sh\n \n-VERSION=7.66.0\n-\n-# This needs to be downloaded directly from S3, it can't go through the CDN.\n-# That's because the CDN is backed by CloudFront, which requires SNI and TLSv1\n-# (without paying an absurd amount of money).\n-curl https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/curl-$VERSION.tar.xz \\\n-  | xz --decompress \\\n-  | tar xf -\n+tar xJf curl.tar.xz\n \n mkdir curl-build\n cd curl-build\n-hide_output ../curl-$VERSION/configure \\\n+hide_output ../curl-*/configure \\\n       --prefix=/rustroot \\\n       --with-ssl=/rustroot \\\n       --disable-sspi \\\n@@ -35,4 +28,4 @@ hide_output make install\n \n cd ..\n rm -rf curl-build\n-rm -rf curl-$VERSION\n+rm -rf curl-*"}, {"sha": "b48b5c4c00aae59aa0a11917b46dd7daaf561cc4", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/build-openssl.sh", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-openssl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fbuild-openssl.sh?ref=3a687e7510b9f4c716f3ad7cc3a86492979a266d", "patch": "@@ -3,21 +3,14 @@\n set -ex\n source shared.sh\n \n-VERSION=1.0.2k\n+tar xzf openssl.tar.gz\n \n-# This needs to be downloaded directly from S3, it can't go through the CDN.\n-# That's because the CDN is backed by CloudFront, which requires SNI and TLSv1\n-# (without paying an absurd amount of money).\n-URL=https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/openssl-$VERSION.tar.gz\n-\n-curl $URL | tar xzf -\n-\n-cd openssl-$VERSION\n+cd openssl-*\n hide_output ./config --prefix=/rustroot shared -fPIC\n hide_output make -j$(nproc)\n hide_output make install\n cd ..\n-rm -rf openssl-$VERSION\n+rm -rf openssl-*\n \n # Make the system cert collection available to the new install.\n ln -nsf /etc/pki/tls/cert.pem /rustroot/ssl/"}, {"sha": "ca40a8cf7daa97dea0791ee3bb0115e0618d25fd", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/download-openssl-curl.sh", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fdownload-openssl-curl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3a687e7510b9f4c716f3ad7cc3a86492979a266d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fdownload-openssl-curl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2Fdownload-openssl-curl.sh?ref=3a687e7510b9f4c716f3ad7cc3a86492979a266d", "patch": "@@ -0,0 +1,10 @@\n+#!/usr/bin/env bash\n+\n+set -ex\n+\n+OPENSSL_VERSION=1.0.2k\n+CURL_VERSION=7.66.0\n+\n+curl -f https://ci-mirrors.rust-lang.org/rustc/openssl-$OPENSSL_VERSION.tar.gz -o openssl.tar.gz\n+curl -f https://ci-mirrors.rust-lang.org/rustc/curl-$CURL_VERSION.tar.xz -o curl.tar.xz\n+curl -f https://curl.se/ca/cacert.pem -o cacert.pem"}, {"sha": "b85c8037f6b60976b2546fdbae88312c5246d9a3", "filename": "src/ci/docker/host-x86_64/shared/ISRG_Root_X1.crt", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/58899c4d9c63a6d27ac395ee9597ae797df7f026/src%2Fci%2Fdocker%2Fhost-x86_64%2Fshared%2FISRG_Root_X1.crt", "raw_url": "https://github.com/rust-lang/rust/raw/58899c4d9c63a6d27ac395ee9597ae797df7f026/src%2Fci%2Fdocker%2Fhost-x86_64%2Fshared%2FISRG_Root_X1.crt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fshared%2FISRG_Root_X1.crt?ref=58899c4d9c63a6d27ac395ee9597ae797df7f026", "patch": "@@ -1,31 +0,0 @@\n------BEGIN CERTIFICATE-----\n-MIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAw\n-TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\n-cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4\n-WhcNMzUwNjA0MTEwNDM4WjBPMQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJu\n-ZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBY\n-MTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK3oJHP0FDfzm54rVygc\n-h77ct984kIxuPOZXoHj3dcKi/vVqbvYATyjb3miGbESTtrFj/RQSa78f0uoxmyF+\n-0TM8ukj13Xnfs7j/EvEhmkvBioZxaUpmZmyPfjxwv60pIgbz5MDmgK7iS4+3mX6U\n-A5/TR5d8mUgjU+g4rk8Kb4Mu0UlXjIB0ttov0DiNewNwIRt18jA8+o+u3dpjq+sW\n-T8KOEUt+zwvo/7V3LvSye0rgTBIlDHCNAymg4VMk7BPZ7hm/ELNKjD+Jo2FR3qyH\n-B5T0Y3HsLuJvW5iB4YlcNHlsdu87kGJ55tukmi8mxdAQ4Q7e2RCOFvu396j3x+UC\n-B5iPNgiV5+I3lg02dZ77DnKxHZu8A/lJBdiB3QW0KtZB6awBdpUKD9jf1b0SHzUv\n-KBds0pjBqAlkd25HN7rOrFleaJ1/ctaJxQZBKT5ZPt0m9STJEadao0xAH0ahmbWn\n-OlFuhjuefXKnEgV4We0+UXgVCwOPjdAvBbI+e0ocS3MFEvzG6uBQE3xDk3SzynTn\n-jh8BCNAw1FtxNrQHusEwMFxIt4I7mKZ9YIqioymCzLq9gwQbooMDQaHWBfEbwrbw\n-qHyGO0aoSCqI3Haadr8faqU9GY/rOPNk3sgrDQoo//fb4hVC1CLQJ13hef4Y53CI\n-rU7m2Ys6xt0nUW7/vGT1M0NPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV\n-HRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5tFnme7bl5AFzgAiIyBpY9umbbjANBgkq\n-hkiG9w0BAQsFAAOCAgEAVR9YqbyyqFDQDLHYGmkgJykIrGF1XIpu+ILlaS/V9lZL\n-ubhzEFnTIZd+50xx+7LSYK05qAvqFyFWhfFQDlnrzuBZ6brJFe+GnY+EgPbk6ZGQ\n-3BebYhtF8GaV0nxvwuo77x/Py9auJ/GpsMiu/X1+mvoiBOv/2X/qkSsisRcOj/KK\n-NFtY2PwByVS5uCbMiogziUwthDyC3+6WVwW6LLv3xLfHTjuCvjHIInNzktHCgKQ5\n-ORAzI4JMPJ+GslWYHb4phowim57iaztXOoJwTdwJx4nLCgdNbOhdjsnvzqvHu7Ur\n-TkXWStAmzOVyyghqpZXjFaH3pO3JLF+l+/+sKAIuvtd7u+Nxe5AW0wdeRlN8NwdC\n-jNPElpzVmbUq4JUagEiuTDkHzsxHpFKVK7q4+63SM1N95R1NbdWhscdCb+ZAJzVc\n-oyi3B43njTOQ5yOf+1CceWxG1bQVs5ZufpsMljq4Ui0/1lvh+wjChP4kqKOJ2qxq\n-4RgqsahDYVvTH9w7jXbyLeiNdd8XM2w9U/t7y0Ff/9yi0GE44Za4rF2LN9d11TPA\n-mRGunUHBcnWEvgJBQl9nJEiU0Zsnvgc/ubhPgXRR4Xq37Z0j4r7g1SgEEzwxA57d\n-emyPxgcYxn/eR44/KJ4EBs+lVDR3veyJm+kXQ99b21/+jh5Xos1AnX5iItreGCc=\n------END CERTIFICATE-----"}]}