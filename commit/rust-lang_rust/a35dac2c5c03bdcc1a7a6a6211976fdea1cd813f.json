{"sha": "a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNWRhYzJjNWMwM2JkY2MxYTdhNmE2MjExOTc2ZmRlYTFjZDgxM2Y=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-05T15:29:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-05T15:29:05Z"}, "message": "Rollup merge of #58128 - taiki-e:libunwind-2018, r=Centril\n\nlibunwind => 2018\n\nTransitions `libunwind` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "02d50f5cb03f624bc141aa5623fcb94e7169734d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02d50f5cb03f624bc141aa5623fcb94e7169734d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcWavBCRBK7hj4Ov3rIwAAdHIIADrGmIVp5mt3ITmCgDNhN+xf\nxhdMkyZYzh3qaz89P//Cj8qaf4M8MyHEp/D4sla9yPlbPXSjy/SLSwY9lxRQvhxC\nUK6c6JLWU455qDtvJs6RJi0LcSjRi0MofpjHdLkjyaxdQ4iOP+SolZ5NBLnaLAsS\n4iacrcT8FeHwuFGwjbf8yz/yE0SqEn/C4jq9Hk6iIfK3ae8APX4WVlLyX0qSJ0xo\nSjpq+I52qfSc8LPYiK4vXf5HgHle691XuDZ4uEh/VJS1nDf1VOP4p+rV3O9RbPbF\ncCdOXTu5sULVdGDVHq25la8Dx08K7rA+oFj6vNRaIoQoc38Y94BwoexogEQ46So=\n=ShuJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 02d50f5cb03f624bc141aa5623fcb94e7169734d\nparent 3dbdd692cc7ca436d9d22e036bf46ba06813eb1f\nparent 5440149229068ef202af1b59846d123a24e4c62f\nauthor kennytm <kennytm@gmail.com> 1549380545 +0900\ncommitter GitHub <noreply@github.com> 1549380545 +0900\n\nRollup merge of #58128 - taiki-e:libunwind-2018, r=Centril\n\nlibunwind => 2018\n\nTransitions `libunwind` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f", "html_url": "https://github.com/rust-lang/rust/commit/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dbdd692cc7ca436d9d22e036bf46ba06813eb1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dbdd692cc7ca436d9d22e036bf46ba06813eb1f", "html_url": "https://github.com/rust-lang/rust/commit/3dbdd692cc7ca436d9d22e036bf46ba06813eb1f"}, {"sha": "5440149229068ef202af1b59846d123a24e4c62f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5440149229068ef202af1b59846d123a24e4c62f", "html_url": "https://github.com/rust-lang/rust/commit/5440149229068ef202af1b59846d123a24e4c62f"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "2378b0a315a169701182fd1d398c1bdc0a9e1d70", "filename": "src/libunwind/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f/src%2Flibunwind%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f/src%2Flibunwind%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2FCargo.toml?ref=a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f", "patch": "@@ -3,6 +3,7 @@ authors = [\"The Rust Project Developers\"]\n name = \"unwind\"\n version = \"0.0.0\"\n build = \"build.rs\"\n+edition = \"2018\"\n \n [lib]\n name = \"unwind\""}, {"sha": "b9a9929ef8b87e1d0dea85cfba05080076452ad8", "filename": "src/libunwind/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f/src%2Flibunwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f/src%2Flibunwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flib.rs?ref=a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f", "patch": "@@ -1,8 +1,9 @@\n #![no_std]\n #![unstable(feature = \"panic_unwind\", issue = \"32837\")]\n \n+#![deny(rust_2018_idioms)]\n+\n #![feature(link_cfg)]\n-#![feature(nll)]\n #![feature(staged_api)]\n #![feature(unwind_attributes)]\n #![feature(static_nobundle)]\n@@ -18,7 +19,6 @@ cfg_if! {\n     } else if #[cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))] {\n         // no unwinder on the system!\n     } else {\n-        extern crate libc;\n         mod libunwind;\n         pub use libunwind::*;\n     }"}, {"sha": "339b554ed6abd2568083f0bb4cb0c09ca7fcb399", "filename": "src/libunwind/libunwind.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f/src%2Flibunwind%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f/src%2Flibunwind%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flibunwind.rs?ref=a35dac2c5c03bdcc1a7a6a6211976fdea1cd813f", "patch": "@@ -21,7 +21,7 @@ pub enum _Unwind_Reason_Code {\n     _URC_CONTINUE_UNWIND = 8,\n     _URC_FAILURE = 9, // used only by ARM EHABI\n }\n-pub use self::_Unwind_Reason_Code::*;\n+pub use _Unwind_Reason_Code::*;\n \n pub type _Unwind_Exception_Class = u64;\n pub type _Unwind_Word = uintptr_t;\n@@ -94,7 +94,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _UA_FORCE_UNWIND = 8,\n         _UA_END_OF_STACK = 16,\n     }\n-    pub use self::_Unwind_Action::*;\n+    pub use _Unwind_Action::*;\n \n     extern \"C\" {\n         pub fn _Unwind_GetGR(ctx: *mut _Unwind_Context, reg_index: c_int) -> _Unwind_Word;\n@@ -118,7 +118,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _US_FORCE_UNWIND = 8,\n         _US_END_OF_STACK = 16,\n     }\n-    pub use self::_Unwind_State::*;\n+    pub use _Unwind_State::*;\n \n     #[repr(C)]\n     enum _Unwind_VRS_Result {\n@@ -134,7 +134,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _UVRSC_WMMXD = 3,\n         _UVRSC_WMMXC = 4,\n     }\n-    use self::_Unwind_VRS_RegClass::*;\n+    use _Unwind_VRS_RegClass::*;\n     #[repr(C)]\n     enum _Unwind_VRS_DataRepresentation {\n         _UVRSD_UINT32 = 0,\n@@ -144,7 +144,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _UVRSD_FLOAT = 4,\n         _UVRSD_DOUBLE = 5,\n     }\n-    use self::_Unwind_VRS_DataRepresentation::*;\n+    use _Unwind_VRS_DataRepresentation::*;\n \n     pub const UNWIND_POINTER_REG: c_int = 12;\n     pub const UNWIND_IP_REG: c_int = 15;"}]}