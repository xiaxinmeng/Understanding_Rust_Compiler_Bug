{"sha": "d22f189da13f8ffb3c9227a038615608e99a6211", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMmYxODlkYTEzZjhmZmIzYzkyMjdhMDM4NjE1NjA4ZTk5YTYyMTE=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-10T18:41:37Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-10T19:28:51Z"}, "message": "Improve some of the string escape diagnostic spans", "tree": {"sha": "43490b64f18f182cdd3e58ad26a4eb222a5528da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43490b64f18f182cdd3e58ad26a4eb222a5528da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d22f189da13f8ffb3c9227a038615608e99a6211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d22f189da13f8ffb3c9227a038615608e99a6211", "html_url": "https://github.com/rust-lang/rust/commit/d22f189da13f8ffb3c9227a038615608e99a6211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d22f189da13f8ffb3c9227a038615608e99a6211/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd5dd6449c9db734bd2d1700ea4b50e22b220be", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd5dd6449c9db734bd2d1700ea4b50e22b220be", "html_url": "https://github.com/rust-lang/rust/commit/0bd5dd6449c9db734bd2d1700ea4b50e22b220be"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "edaac3b09bad89c92b2c4c815975ac66ddd7eba5", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d22f189da13f8ffb3c9227a038615608e99a6211/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22f189da13f8ffb3c9227a038615608e99a6211/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=d22f189da13f8ffb3c9227a038615608e99a6211", "patch": "@@ -742,7 +742,7 @@ impl<'a> StringReader<'a> {\n                                 let valid = self.scan_unicode_escape(delim);\n                                 if valid && ascii_only {\n                                     self.err_span_(\n-                                        escaped_pos,\n+                                        start,\n                                         self.last_pos,\n                                         \"unicode escape sequences cannot be used as a byte or in \\\n                                         a byte string\"\n@@ -753,9 +753,9 @@ impl<'a> StringReader<'a> {\n                                 }\n                             }\n                             'u' if !ascii_only => {\n-                                self.err_span_(escaped_pos, self.last_pos,\n+                                self.err_span_(start, self.last_pos,\n                                     \"incomplete unicode escape sequence\");\n-                                self.help_span_(escaped_pos, self.last_pos,\n+                                self.help_span_(start, self.last_pos,\n                                     \"format of unicode escape sequences is `\\\\u{\u2026}`\");\n                                 false\n                             }\n@@ -862,14 +862,12 @@ impl<'a> StringReader<'a> {\n             valid = false;\n         }\n \n-        self.bump(); // past the ending }\n-\n         if valid && (char::from_u32(accum_int).is_none() || count == 0) {\n             self.err_span_(start_bpos, self.last_pos, \"illegal unicode character escape\");\n             valid = false;\n         }\n \n-\n+        self.bump(); // past the ending }\n         valid\n     }\n "}]}