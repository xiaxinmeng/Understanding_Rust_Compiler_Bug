{"sha": "1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMjc5YmY5Y2E4MzViZjliNTBjNWMyNzA5OGI0ODA1ZWQ3MTM5ZTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-17T02:21:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-17T02:21:25Z"}, "message": "auto merge of #9721 : klutzy/rust/uv-net-read-fix, r=alexcrichton\n\nSee #9605 for detailed information.\r\n\r\nThis also fixes two tests of #8811.", "tree": {"sha": "021719e9b80b4840490b02da1319846b4e7acc5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/021719e9b80b4840490b02da1319846b4e7acc5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "html_url": "https://github.com/rust-lang/rust/commit/1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c92f2168d49ee330992b9e23cd3dabf695e0d248", "url": "https://api.github.com/repos/rust-lang/rust/commits/c92f2168d49ee330992b9e23cd3dabf695e0d248", "html_url": "https://github.com/rust-lang/rust/commit/c92f2168d49ee330992b9e23cd3dabf695e0d248"}, {"sha": "ade57d9f5827f0753cd0acee025f830a5256a78a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ade57d9f5827f0753cd0acee025f830a5256a78a", "html_url": "https://github.com/rust-lang/rust/commit/ade57d9f5827f0753cd0acee025f830a5256a78a"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "d505c97ba0f9d6ff7ac42fe707422ebec27dc9eb", "filename": "src/libstd/rt/io/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fmod.rs?ref=1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "patch": "@@ -371,6 +371,7 @@ pub enum IoErrorKind {\n     Closed,\n     ConnectionRefused,\n     ConnectionReset,\n+    NotConnected,\n     BrokenPipe,\n     PathAlreadyExists,\n     PathDoesntExist,\n@@ -390,6 +391,7 @@ impl ToStr for IoErrorKind {\n             Closed => ~\"Closed\",\n             ConnectionRefused => ~\"ConnectionRefused\",\n             ConnectionReset => ~\"ConnectionReset\",\n+            NotConnected => ~\"NotConnected\",\n             BrokenPipe => ~\"BrokenPipe\",\n             PathAlreadyExists => ~\"PathAlreadyExists\",\n             PathDoesntExist => ~\"PathDoesntExist\","}, {"sha": "3b894b9d3319338d242c8abe358cfb9cd764f10e", "filename": "src/libstd/rt/io/net/tcp.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fnet%2Ftcp.rs?ref=1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "patch": "@@ -306,7 +306,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME #8811\n     fn read_eof_twice_ip4() {\n         do run_in_mt_newsched_task {\n             let addr = next_test_ip4();\n@@ -321,8 +320,16 @@ mod test {\n                 let mut buf = [0];\n                 let nread = stream.read(buf);\n                 assert!(nread.is_none());\n-                let nread = stream.read(buf);\n-                assert!(nread.is_none());\n+                do read_error::cond.trap(|e| {\n+                    if cfg!(windows) {\n+                        assert_eq!(e.kind, NotConnected);\n+                    } else {\n+                        fail2!();\n+                    }\n+                }).inside {\n+                    let nread = stream.read(buf);\n+                    assert!(nread.is_none());\n+                }\n             }\n \n             do spawntask {\n@@ -334,7 +341,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME #8811\n     fn read_eof_twice_ip6() {\n         do run_in_mt_newsched_task {\n             let addr = next_test_ip6();\n@@ -349,8 +355,16 @@ mod test {\n                 let mut buf = [0];\n                 let nread = stream.read(buf);\n                 assert!(nread.is_none());\n-                let nread = stream.read(buf);\n-                assert!(nread.is_none());\n+                do read_error::cond.trap(|e| {\n+                    if cfg!(windows) {\n+                        assert_eq!(e.kind, NotConnected);\n+                    } else {\n+                        fail2!();\n+                    }\n+                }).inside {\n+                    let nread = stream.read(buf);\n+                    assert!(nread.is_none());\n+                }\n             }\n \n             do spawntask {"}, {"sha": "67926b35a6219b0f7cd4ebeee7366dae05b38253", "filename": "src/libstd/rt/uv/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fmod.rs?ref=1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "patch": "@@ -267,6 +267,7 @@ pub fn uv_error_to_io_error(uverr: UvError) -> IoError {\n             EACCES => PermissionDenied,\n             ECONNREFUSED => ConnectionRefused,\n             ECONNRESET => ConnectionReset,\n+            ENOTCONN => NotConnected,\n             EPIPE => BrokenPipe,\n             err => {\n                 rtdebug!(\"uverr.code {}\", err as int);"}, {"sha": "2c27db982aa3100a53652a226b13778eb525093a", "filename": "src/libstd/rt/uv/net.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fuv%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fuv%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fnet.rs?ref=1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "patch": "@@ -14,7 +14,7 @@ use rt::uv::uvll;\n use rt::uv::uvll::*;\n use rt::uv::{AllocCallback, ConnectionCallback, ReadCallback, UdpReceiveCallback, UdpSendCallback};\n use rt::uv::{Loop, Watcher, Request, UvError, Buf, NativeHandle, NullCallback,\n-             status_to_maybe_uv_error};\n+             status_to_maybe_uv_error, vec_to_uv_buf};\n use rt::io::net::ip::{SocketAddr, Ipv4Addr, Ipv6Addr};\n use vec;\n use str;\n@@ -147,7 +147,18 @@ impl StreamWatcher {\n             data.read_cb = Some(cb);\n         }\n \n-        unsafe { uvll::read_start(self.native_handle(), alloc_cb, read_cb); }\n+        let ret = unsafe { uvll::read_start(self.native_handle(), alloc_cb, read_cb) };\n+\n+        if ret != 0 {\n+            // uvll::read_start failed, so read_cb will not be called.\n+            // Call it manually for scheduling.\n+            call_read_cb(self.native_handle(), ret as ssize_t);\n+        }\n+\n+        fn call_read_cb(stream: *uvll::uv_stream_t, errno: ssize_t) {\n+            #[fixed_stack_segment]; #[inline(never)];\n+            read_cb(stream, errno, vec_to_uv_buf(~[]));\n+        }\n \n         extern fn alloc_cb(stream: *uvll::uv_stream_t, suggested_size: size_t) -> Buf {\n             let mut stream_watcher: StreamWatcher = NativeHandle::from_native_handle(stream);"}, {"sha": "a80d5cbc1fb439a3562af209078b0979858eccd8", "filename": "src/libstd/rt/uv/uvll.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f279bf9ca835bf9b50c5c27098b4805ed7139e8/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvll.rs?ref=1f279bf9ca835bf9b50c5c27098b4805ed7139e8", "patch": "@@ -53,6 +53,7 @@ pub mod errors {\n     pub static EACCES: c_int = -4093;\n     pub static ECONNREFUSED: c_int = -4079;\n     pub static ECONNRESET: c_int = -4078;\n+    pub static ENOTCONN: c_int = -4054;\n     pub static EPIPE: c_int = -4048;\n }\n #[cfg(not(windows))]\n@@ -63,6 +64,7 @@ pub mod errors {\n     pub static EACCES: c_int = -libc::EACCES;\n     pub static ECONNREFUSED: c_int = -libc::ECONNREFUSED;\n     pub static ECONNRESET: c_int = -libc::ECONNRESET;\n+    pub static ENOTCONN: c_int = -libc::ENOTCONN;\n     pub static EPIPE: c_int = -libc::EPIPE;\n }\n "}]}