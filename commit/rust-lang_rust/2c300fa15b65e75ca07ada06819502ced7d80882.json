{"sha": "2c300fa15b65e75ca07ada06819502ced7d80882", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMzAwZmExNWI2NWU3NWNhMDdhZGEwNjgxOTUwMmNlZDdkODA4ODI=", "commit": {"author": {"name": "\u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov]", "email": "newpavlov@gmail.com", "date": "2018-07-30T09:12:52Z"}, "committer": {"name": "\u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov]", "email": "newpavlov@gmail.com", "date": "2018-07-30T09:12:52Z"}, "message": "change negativity check", "tree": {"sha": "66e2a410f89c2169189875ab391faadf66b445d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66e2a410f89c2169189875ab391faadf66b445d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c300fa15b65e75ca07ada06819502ced7d80882", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJbXtaUAAoJEBOpOZ+3fjNcjp4P/jMn1cllwVuA/mKuQ49PUC8/\nvsh/MsyD5e4n6v9seQPlaNfT2J7lgD+xwUqX1Xr9AkFsn6fWOch1Eocy0YM6i96e\nYopsoY9040e0sc1zUu1Zy7EbOWQwUIoaXsGWdVwRwcuOoLCL25LM+zbXtZDzJjxb\ngQXyxFzv5WiI/VZapdDlbTaits7GiyevtlNWl1vKqomRUfalV1WkUkvJTPrqlFjo\ny7IncioMqEYW1KxyMDjNPMbsYl8VIb7gjKQ9xCD1MV7++kvyjxxxE6AXPXFPSNmI\necskrX9pV3v1VA7Ousu/Q7tcifflMHrULwJWoaCW+SyVuB6T6Tpt+c/vcL33MM5E\nASDAq+wrm2RArUTwebkDaTMIV2QkFSDZf2GUrdumSFpdbK6T2j9KkrFZHYArQv8a\nx4u2JXqTEZdMKmBXWOnNj8/2CucJPnRq2237CMrsx+KK4j0dXxR30lajbWHzkq8P\nsi0/iMDv14UbfRniQUK7152+3nm3cC8wPjSqhbI97NBJ76tAkeWBCio/shAtThC9\nk0h4aKiEYta1Rblw5pKcnfKtbr81r3PxM2YOFkkjjZqSkz3xSmU9ZtRzyOlAGfwx\n8wW9/ZZnGHv4YFfGiEIsZTUQ1PpEA613+0u8xMjaa19EAoGZjd8PnafAKgpix90a\nxlA9TSeH2Rss4iRYdnzB\n=ZKOf\n-----END PGP SIGNATURE-----", "payload": "tree 66e2a410f89c2169189875ab391faadf66b445d0\nparent 3e07236a31950aa8e6a4c66066de02d1bca68ea9\nauthor \u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov] <newpavlov@gmail.com> 1532941972 +0300\ncommitter \u0410\u0440\u0442\u0451\u043c \u041f\u0430\u0432\u043b\u043e\u0432 [Artyom Pavlov] <newpavlov@gmail.com> 1532941972 +0300\n\nchange negativity check\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c300fa15b65e75ca07ada06819502ced7d80882", "html_url": "https://github.com/rust-lang/rust/commit/2c300fa15b65e75ca07ada06819502ced7d80882", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c300fa15b65e75ca07ada06819502ced7d80882/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e07236a31950aa8e6a4c66066de02d1bca68ea9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e07236a31950aa8e6a4c66066de02d1bca68ea9", "html_url": "https://github.com/rust-lang/rust/commit/3e07236a31950aa8e6a4c66066de02d1bca68ea9"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "cd98f51f5cdb7d870357349eadec1d9d1692e719", "filename": "src/libcore/time.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2c300fa15b65e75ca07ada06819502ced7d80882/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c300fa15b65e75ca07ada06819502ced7d80882/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=2c300fa15b65e75ca07ada06819502ced7d80882", "patch": "@@ -517,16 +517,16 @@ impl Mul<f64> for Duration {\n \n     fn mul(self, rhs: f64) -> Duration {\n         const NPS: f64 = NANOS_PER_SEC as f64;\n-        if rhs.is_sign_negative() {\n-            panic!(\"duration can not be multiplied by negative float\");\n-        }\n         let nanos_f64 = rhs * (NPS * (self.secs as f64) + (self.nanos as f64));\n         if !nanos_f64.is_finite() {\n             panic!(\"got non-finite value when multiplying duration by float\");\n         }\n         if nanos_f64 > MAX_NANOS_F64 {\n             panic!(\"overflow when multiplying duration by float\");\n-        };\n+        }\n+        if nanos_f64 < 0.0 {\n+            panic!(\"underflow when multiplying duration by float\");\n+        }\n         let nanos_u128 = nanos_f64 as u128;\n         Duration {\n             secs: (nanos_u128 / (NANOS_PER_SEC as u128)) as u64,\n@@ -541,16 +541,16 @@ impl Mul<Duration> for f64 {\n \n     fn mul(self, rhs: Duration) -> Duration {\n         const NPS: f64 = NANOS_PER_SEC as f64;\n-        if self.is_sign_negative() {\n-            panic!(\"duration can not be multiplied by negative float\");\n-        }\n         let nanos_f64 = self * (NPS * (rhs.secs as f64) + (rhs.nanos as f64));\n         if !nanos_f64.is_finite() {\n             panic!(\"got non-finite value when multiplying float by duration\");\n         }\n         if nanos_f64 > MAX_NANOS_F64 {\n             panic!(\"overflow when multiplying float by duration\");\n-        };\n+        }\n+        if nanos_f64 < 0.0 {\n+            panic!(\"underflow when multiplying float by duration\");\n+        }\n         let nanos_u128 = nanos_f64 as u128;\n         Duration {\n             secs: (nanos_u128 / (NANOS_PER_SEC as u128)) as u64,\n@@ -588,16 +588,16 @@ impl Div<f64> for Duration {\n \n     fn div(self, rhs: f64) -> Duration {\n         const NPS: f64 = NANOS_PER_SEC as f64;\n-        if rhs.is_sign_negative() {\n-            panic!(\"duration can not be divided by negative float\");\n-        }\n         let nanos_f64 = (NPS * (self.secs as f64) + (self.nanos as f64)) / rhs;\n         if !nanos_f64.is_finite() {\n             panic!(\"got non-finite value when dividing duration by float\");\n         }\n         if nanos_f64 > MAX_NANOS_F64 {\n             panic!(\"overflow when dividing duration by float\");\n-        };\n+        }\n+        if nanos_f64 < 0.0 {\n+            panic!(\"underflow when multiplying duration by float\");\n+        }\n         let nanos_u128 = nanos_f64 as u128;\n         Duration {\n             secs: (nanos_u128 / (NANOS_PER_SEC as u128)) as u64,"}]}