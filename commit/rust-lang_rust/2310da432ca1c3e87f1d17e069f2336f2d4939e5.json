{"sha": "2310da432ca1c3e87f1d17e069f2336f2d4939e5", "node_id": "C_kwDOAAsO6NoAKDIzMTBkYTQzMmNhMWMzZTg3ZjFkMTdlMDY5ZjIzMzZmMmQ0OTM5ZTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-07T00:15:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-07T00:15:18Z"}, "message": "Auto merge of #95745 - Dylan-DPC:rollup-485ajqi, r=Dylan-DPC\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #95185 (Stabilize Stdin::lines.)\n - #95626 (Don't cast thread name to an integer for prctl)\n - #95709 (Improve terse test output.)\n - #95735 (Revert \"Mark Location::caller() as #[inline]\")\n - #95738 (Switch item-info from div to span)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "123f2f68946cdb98b500b4d5bd71828c221a222c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/123f2f68946cdb98b500b4d5bd71828c221a222c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2310da432ca1c3e87f1d17e069f2336f2d4939e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2310da432ca1c3e87f1d17e069f2336f2d4939e5", "html_url": "https://github.com/rust-lang/rust/commit/2310da432ca1c3e87f1d17e069f2336f2d4939e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2310da432ca1c3e87f1d17e069f2336f2d4939e5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f36334ca939a67cce3f37f24953ff6f2d3f3d33", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f36334ca939a67cce3f37f24953ff6f2d3f3d33", "html_url": "https://github.com/rust-lang/rust/commit/8f36334ca939a67cce3f37f24953ff6f2d3f3d33"}, {"sha": "fe6d69f4103086e07b7c3996ff5dc886646734e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6d69f4103086e07b7c3996ff5dc886646734e8", "html_url": "https://github.com/rust-lang/rust/commit/fe6d69f4103086e07b7c3996ff5dc886646734e8"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "714e9b73c78a61f71e4c32e8c2a46dc51eeaa7d2", "filename": "library/core/src/panic/location.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Fcore%2Fsrc%2Fpanic%2Flocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Fcore%2Fsrc%2Fpanic%2Flocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpanic%2Flocation.rs?ref=2310da432ca1c3e87f1d17e069f2336f2d4939e5", "patch": "@@ -83,7 +83,6 @@ impl<'a> Location<'a> {\n     #[stable(feature = \"track_caller\", since = \"1.46.0\")]\n     #[rustc_const_unstable(feature = \"const_caller_location\", issue = \"76156\")]\n     #[track_caller]\n-    #[inline]\n     pub const fn caller() -> &'static Location<'static> {\n         crate::intrinsics::caller_location()\n     }"}, {"sha": "ae16015e35a1a626b07e58c820eb57ffebb27779", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=2310da432ca1c3e87f1d17e069f2336f2d4939e5", "patch": "@@ -394,7 +394,6 @@ impl Stdin {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(stdin_forwarders)]\n     /// use std::io;\n     ///\n     /// let lines = io::stdin().lines();\n@@ -403,7 +402,7 @@ impl Stdin {\n     /// }\n     /// ```\n     #[must_use = \"`self` will be dropped if the result is not used\"]\n-    #[unstable(feature = \"stdin_forwarders\", issue = \"87096\")]\n+    #[stable(feature = \"stdin_forwarders\", since = \"1.62.0\")]\n     pub fn lines(self) -> Lines<StdinLock<'static>> {\n         self.lock().lines()\n     }"}, {"sha": "d191e1fe7a650ffe0be849958ceac2f5b61c0f59", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=2310da432ca1c3e87f1d17e069f2336f2d4939e5", "patch": "@@ -122,7 +122,13 @@ impl Thread {\n         // pthread wrapper only appeared in glibc 2.12, so we use syscall\n         // directly.\n         unsafe {\n-            libc::prctl(PR_SET_NAME, name.as_ptr() as libc::c_ulong, 0, 0, 0);\n+            libc::prctl(\n+                PR_SET_NAME,\n+                name.as_ptr(),\n+                0 as libc::c_ulong,\n+                0 as libc::c_ulong,\n+                0 as libc::c_ulong,\n+            );\n         }\n     }\n "}, {"sha": "5dace8baef7f823054d29b93305922b4b8b2c667", "filename": "library/test/src/formatters/terse.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2310da432ca1c3e87f1d17e069f2336f2d4939e5/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs?ref=2310da432ca1c3e87f1d17e069f2336f2d4939e5", "patch": "@@ -11,8 +11,9 @@ use crate::{\n     types::TestDesc,\n };\n \n-// insert a '\\n' after 100 tests in quiet mode\n-const QUIET_MODE_MAX_COLUMN: usize = 100;\n+// We insert a '\\n' when the output hits 100 columns in quiet mode. 88 test\n+// result chars leaves 12 chars for a progress count like \" 11704/12853\".\n+const QUIET_MODE_MAX_COLUMN: usize = 88;\n \n pub(crate) struct TerseFormatter<T> {\n     out: OutputLocation<T>,\n@@ -65,7 +66,7 @@ impl<T: Write> TerseFormatter<T> {\n     ) -> io::Result<()> {\n         self.write_pretty(result, color)?;\n         if self.test_count % QUIET_MODE_MAX_COLUMN == QUIET_MODE_MAX_COLUMN - 1 {\n-            // we insert a new line every 100 dots in order to flush the\n+            // We insert a new line regularly in order to flush the\n             // screen when dealing with line-buffered output (e.g., piping to\n             // `stamp` in the rust CI).\n             let out = format!(\" {}/{}\\n\", self.test_count + 1, self.total_test_count);"}, {"sha": "12da16527a0eb574034caa25fce8820aac96382a", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2310da432ca1c3e87f1d17e069f2336f2d4939e5/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2310da432ca1c3e87f1d17e069f2336f2d4939e5/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=2310da432ca1c3e87f1d17e069f2336f2d4939e5", "patch": "@@ -597,11 +597,11 @@ fn document_item_info(\n ) {\n     let item_infos = short_item_info(item, cx, parent);\n     if !item_infos.is_empty() {\n-        w.write_str(\"<div class=\\\"item-info\\\">\");\n+        w.write_str(\"<span class=\\\"item-info\\\">\");\n         for info in item_infos {\n             w.write_str(&info);\n         }\n-        w.write_str(\"</div>\");\n+        w.write_str(\"</span>\");\n     }\n }\n \n@@ -1772,7 +1772,7 @@ pub(crate) fn render_impl_summary(\n     let is_trait = i.inner_impl().trait_.is_some();\n     if is_trait {\n         if let Some(portability) = portability(&i.impl_item, Some(parent)) {\n-            write!(w, \"<div class=\\\"item-info\\\">{}</div>\", portability);\n+            write!(w, \"<span class=\\\"item-info\\\">{}</span>\", portability);\n         }\n     }\n "}, {"sha": "68c88b551ca74a549f72aa071682b60b7b40f0e4", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2310da432ca1c3e87f1d17e069f2336f2d4939e5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/2310da432ca1c3e87f1d17e069f2336f2d4939e5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=2310da432ca1c3e87f1d17e069f2336f2d4939e5", "patch": "@@ -737,6 +737,10 @@ h2.location a {\n \tborder: none;\n }\n \n+.item-info {\n+\tdisplay: block;\n+}\n+\n .content .item-info code {\n \tfont-size: 0.875rem;\n }"}, {"sha": "90be2050d926ba991ea670f296f0a04aefc6a7bc", "filename": "src/test/rustdoc/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2310da432ca1c3e87f1d17e069f2336f2d4939e5/src%2Ftest%2Frustdoc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2310da432ca1c3e87f1d17e069f2336f2d4939e5/src%2Ftest%2Frustdoc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstability.rs?ref=2310da432ca1c3e87f1d17e069f2336f2d4939e5", "patch": "@@ -4,7 +4,7 @@\n \n pub struct Unstable {\n     // @has stability/struct.Unstable.html \\\n-    //      '//div[@class=\"item-info\"]//div[@class=\"stab unstable\"]' \\\n+    //      '//span[@class=\"item-info\"]//div[@class=\"stab unstable\"]' \\\n     //      'This is a nightly-only experimental API'\n     // @count stability/struct.Unstable.html '//span[@class=\"stab unstable\"]' 0\n     pub foo: u32,"}]}