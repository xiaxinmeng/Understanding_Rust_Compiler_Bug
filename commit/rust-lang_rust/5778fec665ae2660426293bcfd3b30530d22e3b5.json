{"sha": "5778fec665ae2660426293bcfd3b30530d22e3b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NzhmZWM2NjVhZTI2NjA0MjYyOTNiY2ZkM2IzMDUzMGQyMmUzYjU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-09T17:08:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-24T17:27:38Z"}, "message": "pacify the mercilous tidy: adt-nullary-enums test", "tree": {"sha": "ef600903eda038c4bed407b16159a7f9ecd07a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef600903eda038c4bed407b16159a7f9ecd07a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5778fec665ae2660426293bcfd3b30530d22e3b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5778fec665ae2660426293bcfd3b30530d22e3b5", "html_url": "https://github.com/rust-lang/rust/commit/5778fec665ae2660426293bcfd3b30530d22e3b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5778fec665ae2660426293bcfd3b30530d22e3b5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c3654a722f8a2edc34af386ed798ef9ad801957", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c3654a722f8a2edc34af386ed798ef9ad801957", "html_url": "https://github.com/rust-lang/rust/commit/7c3654a722f8a2edc34af386ed798ef9ad801957"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "df62b67a4598f59f4ee3ccb5d49abf339fea8141", "filename": "src/test/ui/nll/user-annotations/adt-nullary-enums.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5778fec665ae2660426293bcfd3b30530d22e3b5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fadt-nullary-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5778fec665ae2660426293bcfd3b30530d22e3b5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fadt-nullary-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fadt-nullary-enums.rs?ref=5778fec665ae2660426293bcfd3b30530d22e3b5", "patch": "@@ -40,12 +40,18 @@ fn annot_reference_any_lifetime() {\n \n fn annot_reference_static_lifetime() {\n     let c = 66;\n-    combine(SomeEnum::SomeVariant(Cell::new(&c)), SomeEnum::SomeOtherVariant::<Cell<&'static u32>>); //~ ERROR\n+    combine(\n+        SomeEnum::SomeVariant(Cell::new(&c)), //~ ERROR\n+        SomeEnum::SomeOtherVariant::<Cell<&'static u32>>,\n+    );\n }\n \n fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n     let c = 66;\n-    combine(SomeEnum::SomeVariant(Cell::new(&c)), SomeEnum::SomeOtherVariant::<Cell<&'a u32>>); //~ ERROR\n+    combine(\n+        SomeEnum::SomeVariant(Cell::new(&c)), //~ ERROR\n+        SomeEnum::SomeOtherVariant::<Cell<&'a u32>>,\n+    );\n }\n \n fn annot_reference_named_lifetime_ok<'a>(c: &'a u32) {\n@@ -55,13 +61,19 @@ fn annot_reference_named_lifetime_ok<'a>(c: &'a u32) {\n fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n     let _closure = || {\n         let c = 66;\n-        combine(SomeEnum::SomeVariant(Cell::new(&c)), SomeEnum::SomeOtherVariant::<Cell<&'a u32>>); //~ ERROR\n+        combine(\n+            SomeEnum::SomeVariant(Cell::new(&c)), //~ ERROR\n+            SomeEnum::SomeOtherVariant::<Cell<&'a u32>>,\n+        );\n     };\n }\n \n fn annot_reference_named_lifetime_in_closure_ok<'a>(c: &'a u32) {\n     let _closure = || {\n-        combine(SomeEnum::SomeVariant(Cell::new(c)), SomeEnum::SomeOtherVariant::<Cell<&'a u32>>);\n+        combine(\n+            SomeEnum::SomeVariant(Cell::new(c)),\n+            SomeEnum::SomeOtherVariant::<Cell<&'a u32>>,\n+        );\n     };\n }\n "}, {"sha": "fa251f3df17b9765c43736cc1082a4d00d974ed7", "filename": "src/test/ui/nll/user-annotations/adt-nullary-enums.stderr", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5778fec665ae2660426293bcfd3b30530d22e3b5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fadt-nullary-enums.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5778fec665ae2660426293bcfd3b30530d22e3b5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fadt-nullary-enums.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fadt-nullary-enums.stderr?ref=5778fec665ae2660426293bcfd3b30530d22e3b5", "patch": "@@ -1,37 +1,40 @@\n error[E0597]: `c` does not live long enough\n-  --> $DIR/adt-nullary-enums.rs:43:45\n+  --> $DIR/adt-nullary-enums.rs:44:41\n    |\n-LL |     combine(SomeEnum::SomeVariant(Cell::new(&c)), SomeEnum::SomeOtherVariant::<Cell<&'static u32>>); //~ ERROR\n-   |                                             ^^ borrowed value does not live long enough\n+LL |         SomeEnum::SomeVariant(Cell::new(&c)), //~ ERROR\n+   |                                         ^^ borrowed value does not live long enough\n+...\n LL | }\n    | - `c` dropped here while still borrowed\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n error[E0597]: `c` does not live long enough\n-  --> $DIR/adt-nullary-enums.rs:48:45\n+  --> $DIR/adt-nullary-enums.rs:52:41\n    |\n-LL |     combine(SomeEnum::SomeVariant(Cell::new(&c)), SomeEnum::SomeOtherVariant::<Cell<&'a u32>>); //~ ERROR\n-   |                                             ^^ borrowed value does not live long enough\n+LL |         SomeEnum::SomeVariant(Cell::new(&c)), //~ ERROR\n+   |                                         ^^ borrowed value does not live long enough\n+...\n LL | }\n    | - `c` dropped here while still borrowed\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the function body at 46:35...\n-  --> $DIR/adt-nullary-enums.rs:46:35\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 49:35...\n+  --> $DIR/adt-nullary-enums.rs:49:35\n    |\n LL | fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n    |                                   ^^\n \n error[E0597]: `c` does not live long enough\n-  --> $DIR/adt-nullary-enums.rs:58:49\n+  --> $DIR/adt-nullary-enums.rs:65:45\n    |\n-LL |         combine(SomeEnum::SomeVariant(Cell::new(&c)), SomeEnum::SomeOtherVariant::<Cell<&'a u32>>); //~ ERROR\n-   |                                                 ^^ borrowed value does not live long enough\n+LL |             SomeEnum::SomeVariant(Cell::new(&c)), //~ ERROR\n+   |                                             ^^ borrowed value does not live long enough\n+...\n LL |     };\n    |     - `c` dropped here while still borrowed\n    |\n-note: borrowed value must be valid for the lifetime 'a as defined on the function body at 55:46...\n-  --> $DIR/adt-nullary-enums.rs:55:46\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 61:46...\n+  --> $DIR/adt-nullary-enums.rs:61:46\n    |\n LL | fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n    |                                              ^^"}]}