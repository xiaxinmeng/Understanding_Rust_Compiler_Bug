{"sha": "cc1776ef1eb8ef2696ebc3228f6ce9db63019d15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMTc3NmVmMWViOGVmMjY5NmViYzMyMjhmNmNlOWRiNjMwMTlkMTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-08T17:02:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-08T17:02:34Z"}, "message": "Add another test using projection types in impls.", "tree": {"sha": "1c4dd7dcaccc8e783f4c4623a6a77e2d225ac400", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c4dd7dcaccc8e783f4c4623a6a77e2d225ac400"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc1776ef1eb8ef2696ebc3228f6ce9db63019d15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc1776ef1eb8ef2696ebc3228f6ce9db63019d15", "html_url": "https://github.com/rust-lang/rust/commit/cc1776ef1eb8ef2696ebc3228f6ce9db63019d15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc1776ef1eb8ef2696ebc3228f6ce9db63019d15/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d9a11d6addee6a420217be9f6864d643c86e32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9a11d6addee6a420217be9f6864d643c86e32f", "html_url": "https://github.com/rust-lang/rust/commit/0d9a11d6addee6a420217be9f6864d643c86e32f"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "0a1a8589dec82b55e56357d3bbf15fd0e01de2e6", "filename": "src/test/run-pass/associated-types-projection-from-known-type-in-impl.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/cc1776ef1eb8ef2696ebc3228f6ce9db63019d15/src%2Ftest%2Frun-pass%2Fassociated-types-projection-from-known-type-in-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc1776ef1eb8ef2696ebc3228f6ce9db63019d15/src%2Ftest%2Frun-pass%2Fassociated-types-projection-from-known-type-in-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types-projection-from-known-type-in-impl.rs?ref=cc1776ef1eb8ef2696ebc3228f6ce9db63019d15", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test where the impl self type uses a projection from a constant type.\n+\n+trait Int\n+{\n+    type T;\n+}\n+\n+trait NonZero\n+{\n+    fn non_zero(self) -> bool;\n+}\n+\n+impl Int for i32 { type T = i32; }\n+impl Int for i64 { type T = i64; }\n+impl Int for u32 { type T = u32; }\n+impl Int for u64 { type T = u64; }\n+\n+impl NonZero for <i32 as Int>::T { fn non_zero(self) -> bool { self != 0 } }\n+impl NonZero for <i64 as Int>::T { fn non_zero(self) -> bool { self != 0 } }\n+impl NonZero for <u32 as Int>::T { fn non_zero(self) -> bool { self != 0 } }\n+impl NonZero for <u64 as Int>::T { fn non_zero(self) -> bool { self != 0 } }\n+\n+fn main ()\n+{\n+    assert!(NonZero::non_zero(22_i32));\n+    assert!(NonZero::non_zero(22_i64));\n+    assert!(NonZero::non_zero(22_u32));\n+    assert!(NonZero::non_zero(22_u64));\n+\n+    assert!(!NonZero::non_zero(0_i32));\n+    assert!(!NonZero::non_zero(0_i64));\n+    assert!(!NonZero::non_zero(0_u32));\n+    assert!(!NonZero::non_zero(0_u64));\n+}"}]}