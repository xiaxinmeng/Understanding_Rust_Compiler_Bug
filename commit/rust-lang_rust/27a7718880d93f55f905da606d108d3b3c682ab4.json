{"sha": "27a7718880d93f55f905da606d108d3b3c682ab4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3YTc3MTg4ODBkOTNmNTVmOTA1ZGE2MDZkMTA4ZDNiM2M2ODJhYjQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-24T21:11:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-24T21:11:19Z"}, "message": "Merge #4128\n\n4128: Include correct item path for variant completions r=matklad a=jonas-schievink\n\nThe test would previously suggest `E::V`, which is not enough to name the variant as the enum is in a module. Now it correctly suggests the full path `m::E::V`.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "0e914349ddff41d2cbea342ee312efc9d4f37371", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e914349ddff41d2cbea342ee312efc9d4f37371"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27a7718880d93f55f905da606d108d3b3c682ab4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeo1X3CRBK7hj4Ov3rIwAAdHIIACxMduPC8t5eVz3awH+/Xbs3\n3vZcHNI4i5bz4OIgj6CjRKptDfEYV9C1G8v2sohRIEMR+dMo9U7QyZ1h0SNGV/Fw\nxMeHb5+F9EYAQ/Oyk1r6O61GNruey9AHP9MW3XP4HglI6NEv/86D9VO62nU93gr0\nPACjrtDDZqzRRIaqI/BNmpVoLDZhIDODaggTsw+HnTyB/qxAV+BBlV1MZXMnGgXr\nD3JnNJDH53f5jbHlKVv80N0KggT8OIWikhSAmeketRjdMSS4OiyHk6ZlfUZB9HAv\nPno85IUWgsE1hoW+n39wWFPS63QHqirp4xvUV3nhTQtd1xZuzhGLZ62WEOyLTes=\n=66gs\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e914349ddff41d2cbea342ee312efc9d4f37371\nparent 57b3dda980afba5dfb6e30e4716b7713ff0b1be0\nparent e131763fb8b2e40ee2ad434bbb93b2ae43030390\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587762679 +0000\ncommitter GitHub <noreply@github.com> 1587762679 +0000\n\nMerge #4128\n\n4128: Include correct item path for variant completions r=matklad a=jonas-schievink\n\nThe test would previously suggest `E::V`, which is not enough to name the variant as the enum is in a module. Now it correctly suggests the full path `m::E::V`.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27a7718880d93f55f905da606d108d3b3c682ab4", "html_url": "https://github.com/rust-lang/rust/commit/27a7718880d93f55f905da606d108d3b3c682ab4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27a7718880d93f55f905da606d108d3b3c682ab4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57b3dda980afba5dfb6e30e4716b7713ff0b1be0", "url": "https://api.github.com/repos/rust-lang/rust/commits/57b3dda980afba5dfb6e30e4716b7713ff0b1be0", "html_url": "https://github.com/rust-lang/rust/commit/57b3dda980afba5dfb6e30e4716b7713ff0b1be0"}, {"sha": "e131763fb8b2e40ee2ad434bbb93b2ae43030390", "url": "https://api.github.com/repos/rust-lang/rust/commits/e131763fb8b2e40ee2ad434bbb93b2ae43030390", "html_url": "https://github.com/rust-lang/rust/commit/e131763fb8b2e40ee2ad434bbb93b2ae43030390"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "8e3dcf96e0026160f1e2b10c85bc6c7c0c2c34b9", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/27a7718880d93f55f905da606d108d3b3c682ab4/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27a7718880d93f55f905da606d108d3b3c682ab4/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=27a7718880d93f55f905da606d108d3b3c682ab4", "patch": "@@ -38,7 +38,15 @@ fn complete_enum_variants(acc: &mut Completions, ctx: &CompletionContext) {\n     if let Some(ty) = ctx.expected_type_of(&ctx.token.parent()) {\n         if let Some(Adt::Enum(enum_data)) = ty.as_adt() {\n             let variants = enum_data.variants(ctx.db);\n-            let module = enum_data.module(ctx.db);\n+\n+            let module = if let Some(module) = ctx.scope().module() {\n+                // Compute path from the completion site if available.\n+                module\n+            } else {\n+                // Otherwise fall back to the enum's definition site.\n+                enum_data.module(ctx.db)\n+            };\n+\n             for variant in variants {\n                 if let Some(path) = module.find_use_path(ctx.db, ModuleDef::from(variant)) {\n                     // Variants with trivial paths are already added by the existing completion logic,\n@@ -1308,4 +1316,47 @@ mod tests {\n         \"###\n         )\n     }\n+\n+    #[test]\n+    fn completes_enum_variant_from_module() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                mod m { pub enum E { V } }\n+\n+                fn f() -> m::E {\n+                    V<|>\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"f()\",\n+                source_range: [98; 99),\n+                delete: [98; 99),\n+                insert: \"f()$0\",\n+                kind: Function,\n+                lookup: \"f\",\n+                detail: \"fn f() -> m::E\",\n+            },\n+            CompletionItem {\n+                label: \"m\",\n+                source_range: [98; 99),\n+                delete: [98; 99),\n+                insert: \"m\",\n+                kind: Module,\n+            },\n+            CompletionItem {\n+                label: \"m::E::V\",\n+                source_range: [98; 99),\n+                delete: [98; 99),\n+                insert: \"m::E::V\",\n+                kind: EnumVariant,\n+                detail: \"()\",\n+            },\n+        ]\n+        \"###\n+        )\n+    }\n }"}]}