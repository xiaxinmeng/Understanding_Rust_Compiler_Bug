{"sha": "0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkOGU0ZDdjMzdiNjI1NTgyYzNjN2Q4YmRjMWJkMTk0ZTIxYzIzNTQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T11:59:10Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "mem_discriminant: split test, make rustfixable", "tree": {"sha": "7eae817b7f41018f5ba8607a4858ac267d48b778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7eae817b7f41018f5ba8607a4858ac267d48b778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "html_url": "https://github.com/rust-lang/rust/commit/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "483e140bcea938a119ae5a93109e9c8d3f2c4188", "url": "https://api.github.com/repos/rust-lang/rust/commits/483e140bcea938a119ae5a93109e9c8d3f2c4188", "html_url": "https://github.com/rust-lang/rust/commit/483e140bcea938a119ae5a93109e9c8d3f2c4188"}], "stats": {"total": 131, "additions": 99, "deletions": 32}, "files": [{"sha": "69a8f286d050d398dc19f78e0252a8d31f67d62f", "filename": "tests/ui/mem_discriminant.fixed", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.fixed?ref=0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "patch": "@@ -0,0 +1,45 @@\n+// run-rustfix\n+\n+#![deny(clippy::mem_discriminant_non_enum)]\n+\n+use std::mem;\n+\n+enum Foo {\n+    One(usize),\n+    Two(u8),\n+}\n+\n+fn main() {\n+    // bad\n+    mem::discriminant(&Some(2));\n+    mem::discriminant(&None::<u8>);\n+    mem::discriminant(&Foo::One(5));\n+    mem::discriminant(&Foo::Two(5));\n+\n+    let ro = &Some(3);\n+    let rro = &ro;\n+    mem::discriminant(ro);\n+    mem::discriminant(*rro);\n+    mem::discriminant(*rro);\n+\n+    macro_rules! mem_discriminant_but_in_a_macro {\n+        ($param:expr) => {\n+            mem::discriminant($param)\n+        };\n+    }\n+\n+    mem_discriminant_but_in_a_macro!(*rro);\n+\n+    let rrrrro = &&&rro;\n+    mem::discriminant(****rrrrro);\n+    mem::discriminant(****rrrrro);\n+\n+    // ok\n+    mem::discriminant(&Some(2));\n+    mem::discriminant(&None::<u8>);\n+    mem::discriminant(&Foo::One(5));\n+    mem::discriminant(&Foo::Two(5));\n+    mem::discriminant(ro);\n+    mem::discriminant(*rro);\n+    mem::discriminant(****rrrrro);\n+}"}, {"sha": "55db50fcdc733d4a0180df3ff1eedf535045711d", "filename": "tests/ui/mem_discriminant.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.rs?ref=0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+\n #![deny(clippy::mem_discriminant_non_enum)]\n \n use std::mem;\n@@ -7,16 +9,12 @@ enum Foo {\n     Two(u8),\n }\n \n-struct A(Foo);\n-\n fn main() {\n     // bad\n-    mem::discriminant(&\"hello\");\n     mem::discriminant(&&Some(2));\n     mem::discriminant(&&None::<u8>);\n     mem::discriminant(&&Foo::One(5));\n     mem::discriminant(&&Foo::Two(5));\n-    mem::discriminant(&A(Foo::One(0)));\n \n     let ro = &Some(3);\n     let rro = &ro;"}, {"sha": "0420c82abda5e70d543982f634d781ee27f80963", "filename": "tests/ui/mem_discriminant.stderr", "status": "modified", "additions": 16, "deletions": 28, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.stderr?ref=0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "patch": "@@ -1,79 +1,67 @@\n-error: calling `mem::discriminant` on non-enum type `&str`\n+error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n   --> $DIR/mem_discriminant.rs:14:5\n    |\n-LL |     mem::discriminant(&\"hello\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     mem::discriminant(&&Some(2));\n+   |     ^^^^^^^^^^^^^^^^^^---------^\n+   |                       |\n+   |                       help: try dereferencing: `&Some(2)`\n    |\n note: lint level defined here\n-  --> $DIR/mem_discriminant.rs:1:9\n+  --> $DIR/mem_discriminant.rs:3:9\n    |\n LL | #![deny(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:15:5\n-   |\n-LL |     mem::discriminant(&&Some(2));\n-   |     ^^^^^^^^^^^^^^^^^^---------^\n-   |                       |\n-   |                       help: try dereferencing: `&Some(2)`\n-\n error: calling `mem::discriminant` on non-enum type `&std::option::Option<u8>`\n-  --> $DIR/mem_discriminant.rs:16:5\n+  --> $DIR/mem_discriminant.rs:15:5\n    |\n LL |     mem::discriminant(&&None::<u8>);\n    |     ^^^^^^^^^^^^^^^^^^------------^\n    |                       |\n    |                       help: try dereferencing: `&None::<u8>`\n \n error: calling `mem::discriminant` on non-enum type `&Foo`\n-  --> $DIR/mem_discriminant.rs:17:5\n+  --> $DIR/mem_discriminant.rs:16:5\n    |\n LL |     mem::discriminant(&&Foo::One(5));\n    |     ^^^^^^^^^^^^^^^^^^-------------^\n    |                       |\n    |                       help: try dereferencing: `&Foo::One(5)`\n \n error: calling `mem::discriminant` on non-enum type `&Foo`\n-  --> $DIR/mem_discriminant.rs:18:5\n+  --> $DIR/mem_discriminant.rs:17:5\n    |\n LL |     mem::discriminant(&&Foo::Two(5));\n    |     ^^^^^^^^^^^^^^^^^^-------------^\n    |                       |\n    |                       help: try dereferencing: `&Foo::Two(5)`\n \n-error: calling `mem::discriminant` on non-enum type `A`\n-  --> $DIR/mem_discriminant.rs:19:5\n-   |\n-LL |     mem::discriminant(&A(Foo::One(0)));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:23:5\n+  --> $DIR/mem_discriminant.rs:21:5\n    |\n LL |     mem::discriminant(&ro);\n    |     ^^^^^^^^^^^^^^^^^^---^\n    |                       |\n    |                       help: try dereferencing: `ro`\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:24:5\n+  --> $DIR/mem_discriminant.rs:22:5\n    |\n LL |     mem::discriminant(rro);\n    |     ^^^^^^^^^^^^^^^^^^---^\n    |                       |\n    |                       help: try dereferencing: `*rro`\n \n error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:25:5\n+  --> $DIR/mem_discriminant.rs:23:5\n    |\n LL |     mem::discriminant(&rro);\n    |     ^^^^^^^^^^^^^^^^^^----^\n    |                       |\n    |                       help: try dereferencing: `*rro`\n \n error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:29:13\n+  --> $DIR/mem_discriminant.rs:27:13\n    |\n LL |             mem::discriminant($param)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -85,20 +73,20 @@ LL |     mem_discriminant_but_in_a_macro!(&rro);\n    |     in this macro invocation\n \n error: calling `mem::discriminant` on non-enum type `&&&&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:36:5\n+  --> $DIR/mem_discriminant.rs:34:5\n    |\n LL |     mem::discriminant(&rrrrro);\n    |     ^^^^^^^^^^^^^^^^^^-------^\n    |                       |\n    |                       help: try dereferencing: `****rrrrro`\n \n error: calling `mem::discriminant` on non-enum type `&&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:37:5\n+  --> $DIR/mem_discriminant.rs:35:5\n    |\n LL |     mem::discriminant(*rrrrro);\n    |     ^^^^^^^^^^^^^^^^^^-------^\n    |                       |\n    |                       help: try dereferencing: `****rrrrro`\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "e245d3257d55d02a5639ec09761a8a8af87f58f2", "filename": "tests/ui/mem_discriminant_unfixable.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant_unfixable.rs?ref=0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "patch": "@@ -0,0 +1,16 @@\n+#![deny(clippy::mem_discriminant_non_enum)]\n+\n+use std::mem;\n+\n+enum Foo {\n+    One(usize),\n+    Two(u8),\n+}\n+\n+struct A(Foo);\n+\n+fn main() {\n+    // bad\n+    mem::discriminant(&\"hello\");\n+    mem::discriminant(&A(Foo::One(0)));\n+}"}, {"sha": "f12a9b2d934d64a7f78dbbbb68241d9a553ebff0", "filename": "tests/ui/mem_discriminant_unfixable.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354/tests%2Fui%2Fmem_discriminant_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant_unfixable.stderr?ref=0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "patch": "@@ -0,0 +1,20 @@\n+error: calling `mem::discriminant` on non-enum type `&str`\n+  --> $DIR/mem_discriminant_unfixable.rs:14:5\n+   |\n+LL |     mem::discriminant(&\"hello\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/mem_discriminant_unfixable.rs:1:9\n+   |\n+LL | #![deny(clippy::mem_discriminant_non_enum)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: calling `mem::discriminant` on non-enum type `A`\n+  --> $DIR/mem_discriminant_unfixable.rs:15:5\n+   |\n+LL |     mem::discriminant(&A(Foo::One(0)));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}