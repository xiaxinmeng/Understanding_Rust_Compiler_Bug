{"sha": "fcd3279f36214e6915a3b14074f154da3c7cd88a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZDMyNzlmMzYyMTRlNjkxNWEzYjE0MDc0ZjE1NGRhM2M3Y2Q4OGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-06T20:36:14Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-09-30T21:02:47Z"}, "message": "Improve bootstrap crate testing for emscripten", "tree": {"sha": "5c2c0e4b449ff0147bf11c1453a1f69cb80fb46d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c2c0e4b449ff0147bf11c1453a1f69cb80fb46d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcd3279f36214e6915a3b14074f154da3c7cd88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd3279f36214e6915a3b14074f154da3c7cd88a", "html_url": "https://github.com/rust-lang/rust/commit/fcd3279f36214e6915a3b14074f154da3c7cd88a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcd3279f36214e6915a3b14074f154da3c7cd88a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f41b363ea315509040a20e59acae97955dc8e601", "url": "https://api.github.com/repos/rust-lang/rust/commits/f41b363ea315509040a20e59acae97955dc8e601", "html_url": "https://github.com/rust-lang/rust/commit/f41b363ea315509040a20e59acae97955dc8e601"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "0bd9355098f26df9a25680c38d5d7bd1922168b9", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fcd3279f36214e6915a3b14074f154da3c7cd88a/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd3279f36214e6915a3b14074f154da3c7cd88a/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=fcd3279f36214e6915a3b14074f154da3c7cd88a", "patch": "@@ -385,8 +385,19 @@ fn krate_emscripten(build: &Build,\n \n      for test in tests {\n          let test_file_name = test.to_string_lossy().into_owned();\n-         let output = output(Command::new(\"node\").arg(&test_file_name));\n-         println!(\"{}\", output);\n+         println!(\"running {}\", test_file_name);\n+         let output = Command::new(\"node\")\n+             .arg(&test_file_name)\n+             .stderr(::std::process::Stdio::inherit())\n+             .output();\n+         let output = match output {\n+             Ok(status) => status,\n+             Err(e) => panic!(format!(\"failed to execute command: {}\", e)),\n+         };\n+         println!(\"{}\", String::from_utf8(output.stdout).unwrap());\n+         if !output.status.success() {\n+             panic!(\"some tests failed\");\n+         }\n      }\n  }\n \n@@ -402,7 +413,7 @@ fn find_tests(dir: &Path,\n         let filename = e.file_name().into_string().unwrap();\n         if (target.contains(\"windows\") && filename.ends_with(\".exe\")) ||\n            (!target.contains(\"windows\") && !filename.contains(\".\")) ||\n-           (target.contains(\"asmjs\") && filename.contains(\".js\")){\n+           (target.contains(\"emscripten\") && filename.contains(\".js\")){\n             dst.push(e.path());\n         }\n     }"}]}