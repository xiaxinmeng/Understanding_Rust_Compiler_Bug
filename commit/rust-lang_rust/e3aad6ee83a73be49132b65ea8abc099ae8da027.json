{"sha": "e3aad6ee83a73be49132b65ea8abc099ae8da027", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYWFkNmVlODNhNzNiZTQ5MTMyYjY1ZWE4YWJjMDk5YWU4ZGEwMjc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-09T02:49:58Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-09T02:49:58Z"}, "message": "Be smarter about finding the span for `..` in patterns\n\nFixes #1319", "tree": {"sha": "d6113143292ab0218f49897561d3873645177955", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6113143292ab0218f49897561d3873645177955"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3aad6ee83a73be49132b65ea8abc099ae8da027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3aad6ee83a73be49132b65ea8abc099ae8da027", "html_url": "https://github.com/rust-lang/rust/commit/e3aad6ee83a73be49132b65ea8abc099ae8da027", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3aad6ee83a73be49132b65ea8abc099ae8da027/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d107ca12b83b679ed7aab54a72fcd0d01b511ed8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d107ca12b83b679ed7aab54a72fcd0d01b511ed8", "html_url": "https://github.com/rust-lang/rust/commit/d107ca12b83b679ed7aab54a72fcd0d01b511ed8"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "c1b3de56cfbbfe6a59d56d56471cd54ada2c8b83", "filename": "src/patterns.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e3aad6ee83a73be49132b65ea8abc099ae8da027/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3aad6ee83a73be49132b65ea8abc099ae8da027/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=e3aad6ee83a73be49132b65ea8abc099ae8da027", "patch": "@@ -210,8 +210,19 @@ fn rewrite_tuple_pat(pats: &[ptr::P<ast::Pat>],\n     let mut pat_vec: Vec<_> = pats.into_iter().map(|x| TuplePatField::Pat(x)).collect();\n \n     if let Some(pos) = dotdot_pos {\n-        let snippet = context.snippet(span);\n-        let lo = span.lo + BytePos(snippet.find_uncommented(\"..\").unwrap() as u32);\n+        let prev = if pos == 0 {\n+            span.lo\n+        } else {\n+            pats[pos - 1].span().hi\n+        };\n+        let next = if pos + 1 >= pats.len() {\n+            span.hi\n+        } else {\n+            pats[pos + 1].span().lo\n+        };\n+        let dot_span = codemap::mk_sp(prev, next);\n+        let snippet = context.snippet(dot_span);\n+        let lo = dot_span.lo + BytePos(snippet.find_uncommented(\"..\").unwrap() as u32);\n         let span = Span {\n             lo: lo,\n             // 2 == \"..\".len()"}, {"sha": "468ff579710b1bc278356acf9ddc3bf70673de86", "filename": "tests/source/pattern.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3aad6ee83a73be49132b65ea8abc099ae8da027/tests%2Fsource%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3aad6ee83a73be49132b65ea8abc099ae8da027/tests%2Fsource%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fpattern.rs?ref=e3aad6ee83a73be49132b65ea8abc099ae8da027", "patch": "@@ -38,3 +38,8 @@ impl<'a,'b> ResolveGeneratedContentFragmentMutator<'a,'b> {\n                 )\n             ) => {}}}\n }\n+\n+fn issue_1319() {\n+    if let (Event { .. }, .. ) = ev_state {}\n+}\n+"}, {"sha": "36d24170cee3c4587c508c78cb896106739fe36f", "filename": "tests/target/pattern.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3aad6ee83a73be49132b65ea8abc099ae8da027/tests%2Ftarget%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3aad6ee83a73be49132b65ea8abc099ae8da027/tests%2Ftarget%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpattern.rs?ref=e3aad6ee83a73be49132b65ea8abc099ae8da027", "patch": "@@ -41,3 +41,7 @@ impl<'a, 'b> ResolveGeneratedContentFragmentMutator<'a, 'b> {\n         }\n     }\n }\n+\n+fn issue_1319() {\n+    if let (Event { .. }, ..) = ev_state {}\n+}"}]}