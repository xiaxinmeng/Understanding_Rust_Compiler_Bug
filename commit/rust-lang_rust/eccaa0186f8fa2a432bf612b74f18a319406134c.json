{"sha": "eccaa0186f8fa2a432bf612b74f18a319406134c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjY2FhMDE4NmY4ZmEyYTQzMmJmNjEyYjc0ZjE4YTMxOTQwNjEzNGM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-05-01T22:59:35Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-05-20T17:57:44Z"}, "message": "rustc_target: Add a target spec option for static-pie support", "tree": {"sha": "b68e450bfd25a509726597259e350330107c41ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b68e450bfd25a509726597259e350330107c41ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eccaa0186f8fa2a432bf612b74f18a319406134c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eccaa0186f8fa2a432bf612b74f18a319406134c", "html_url": "https://github.com/rust-lang/rust/commit/eccaa0186f8fa2a432bf612b74f18a319406134c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eccaa0186f8fa2a432bf612b74f18a319406134c/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f182c4af8a22df906f6e901cb11a1a804f29f32c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f182c4af8a22df906f6e901cb11a1a804f29f32c", "html_url": "https://github.com/rust-lang/rust/commit/f182c4af8a22df906f6e901cb11a1a804f29f32c"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "288a4a41e07f02eb302d532c3dac2d7d6417cc0c", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eccaa0186f8fa2a432bf612b74f18a319406134c/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccaa0186f8fa2a432bf612b74f18a319406134c/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=eccaa0186f8fa2a432bf612b74f18a319406134c", "patch": "@@ -1143,9 +1143,10 @@ fn link_output_kind(sess: &Session, crate_type: CrateType) -> LinkOutputKind {\n     };\n \n     // Adjust the output kind to target capabilities.\n-    let pic_exe_supported = sess.target.target.options.position_independent_executables;\n-    let static_pic_exe_supported = false; // FIXME: Add this option to target specs.\n-    let static_dylib_supported = sess.target.target.options.crt_static_allows_dylibs;\n+    let opts = &sess.target.target.options;\n+    let pic_exe_supported = opts.position_independent_executables;\n+    let static_pic_exe_supported = opts.static_position_independent_executables;\n+    let static_dylib_supported = opts.crt_static_allows_dylibs;\n     match kind {\n         LinkOutputKind::DynamicPicExe if !pic_exe_supported => LinkOutputKind::DynamicNoPicExe,\n         LinkOutputKind::StaticPicExe if !static_pic_exe_supported => LinkOutputKind::StaticNoPicExe,"}, {"sha": "d92f5cdeab5a5453424621675412cc0218197918", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eccaa0186f8fa2a432bf612b74f18a319406134c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccaa0186f8fa2a432bf612b74f18a319406134c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=eccaa0186f8fa2a432bf612b74f18a319406134c", "patch": "@@ -855,6 +855,8 @@ pub struct TargetOptions {\n     /// the functions in the executable are not randomized and can be used\n     /// during an exploit of a vulnerability in any code.\n     pub position_independent_executables: bool,\n+    /// Executables that are both statically linked and position-independent are supported.\n+    pub static_position_independent_executables: bool,\n     /// Determines if the target always requires using the PLT for indirect\n     /// library calls or not. This controls the default value of the `-Z plt` flag.\n     pub needs_plt: bool,\n@@ -1028,6 +1030,7 @@ impl Default for TargetOptions {\n             has_rpath: false,\n             no_default_libraries: true,\n             position_independent_executables: false,\n+            static_position_independent_executables: false,\n             needs_plt: false,\n             relro_level: RelroLevel::None,\n             pre_link_objects: Default::default(),\n@@ -1432,6 +1435,7 @@ impl Target {\n         key!(has_rpath, bool);\n         key!(no_default_libraries, bool);\n         key!(position_independent_executables, bool);\n+        key!(static_position_independent_executables, bool);\n         key!(needs_plt, bool);\n         key!(relro_level, RelroLevel)?;\n         key!(archive_format);\n@@ -1663,6 +1667,7 @@ impl ToJson for Target {\n         target_option_val!(has_rpath);\n         target_option_val!(no_default_libraries);\n         target_option_val!(position_independent_executables);\n+        target_option_val!(static_position_independent_executables);\n         target_option_val!(needs_plt);\n         target_option_val!(relro_level);\n         target_option_val!(archive_format);"}]}