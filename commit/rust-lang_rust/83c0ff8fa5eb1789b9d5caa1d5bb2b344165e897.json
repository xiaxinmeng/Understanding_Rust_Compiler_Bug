{"sha": "83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897", "node_id": "C_kwDOAAsO6NoAKDgzYzBmZjhmYTVlYjE3ODliOWQ1Y2FhMWQ1YmIyYjM0NDE2NWU4OTc", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-03T15:34:16Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-06T17:49:47Z"}, "message": "Map to new synthesized assoc ty for RPITITs in astconv", "tree": {"sha": "4758626d849a957a7c44f63c7fc6ed298e708940", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4758626d849a957a7c44f63c7fc6ed298e708940"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmQGJ7sACgkQgTGiTgx5\n76+KBRAAsOWBUHJ3BcBILTzjtj+h018HShvWt6eP/aY0ggA+ZHv4LjC8A9/a9K3T\nXSorjcySmn6heodyBK/74nSFk/kE5ON3t/k1aFP2z8Fs2IZFIWDscBAxlwsCjs+2\n/6YZztkK66UtXl4xRPYlF1T11Ag7rPOwW+mjQnUrh2ivIu4IsUBanjJrhnmh7OBi\nJ3GPL+2wBafQkYx7PtmkHWbSToN6C2fv8CWufiMNPYyJo+SvE5RnvuKIU1yYoEnj\n0qg/KwM3ukZMW6ckP5bxUz4UJWBe/+c/Vpro/CgJY7XOV4D90M6+NwtqUUPTCgA4\nKyAZ/7eaL5NggEGAhU2JK4+G51EHaErzbe9nM8oKK7H0pCS0SlzkSVSBDPWlV/xK\nyZPMOnLSC9BSRE9H+3kV9M/HOcb2OhiFuPqgeO3ZLHa1vXCxairV5z+VGfk9XM7O\nmTD8hEvS7EYbjkYY/2FxqhCPR5tSciX32v3h0DjwVTozXYFmbbMSLjNkh251azpF\no371Ze7hIJzvnzi53js2qTGfKosUxJ+YbUno5DC2XfqdXr8Oo7W+Nk3sfqLsXhxE\nyhYIHUxGZ7vcyBrvJZOQdBFyeVHawDwSnp3LvFODSBsfQaDZGtGVch4826ub9ZuS\n/IvnpP0TaJbpSwkp0sZvJRW5ljgOvMkBY1U0RTWoeKHDJYfT/eA=\n=Aitb\n-----END PGP SIGNATURE-----", "payload": "tree 4758626d849a957a7c44f63c7fc6ed298e708940\nparent 3ecb70125e813750dffcec78b4d5075f0d0deb6a\nauthor Santiago Pastorino <spastorino@gmail.com> 1677857656 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1678124987 -0300\n\nMap to new synthesized assoc ty for RPITITs in astconv\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897", "html_url": "https://github.com/rust-lang/rust/commit/83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ecb70125e813750dffcec78b4d5075f0d0deb6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ecb70125e813750dffcec78b4d5075f0d0deb6a", "html_url": "https://github.com/rust-lang/rust/commit/3ecb70125e813750dffcec78b4d5075f0d0deb6a"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "2a64e09b9c605689786de215de34409c0e29ded6", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=83c0ff8fa5eb1789b9d5caa1d5bb2b344165e897", "patch": "@@ -3049,10 +3049,18 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             }\n             &hir::TyKind::OpaqueDef(item_id, lifetimes, in_trait) => {\n                 let opaque_ty = tcx.hir().item(item_id);\n-                let def_id = item_id.owner_id.to_def_id();\n \n                 match opaque_ty.kind {\n                     hir::ItemKind::OpaqueTy(hir::OpaqueTy { origin, .. }) => {\n+                        let local_def_id = item_id.owner_id.def_id;\n+                        // If this is an RPITIT and we are using the new RPITIT lowering scheme, we\n+                        // generate the def_id of an associated type for the trait and return as\n+                        // type a projection.\n+                        let def_id = if in_trait && tcx.lower_impl_trait_in_trait_to_assoc_ty() {\n+                            tcx.associated_item_for_impl_trait_in_trait(local_def_id).to_def_id()\n+                        } else {\n+                            local_def_id.to_def_id()\n+                        };\n                         self.impl_trait_ty_to_ty(def_id, lifetimes, origin, in_trait)\n                     }\n                     ref i => bug!(\"`impl Trait` pointed to non-opaque type?? {:#?}\", i),"}]}