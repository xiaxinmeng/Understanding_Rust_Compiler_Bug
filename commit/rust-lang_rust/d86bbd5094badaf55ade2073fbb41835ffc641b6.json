{"sha": "d86bbd5094badaf55ade2073fbb41835ffc641b6", "node_id": "C_kwDOAAsO6NoAKGQ4NmJiZDUwOTRiYWRhZjU1YWRlMjA3M2ZiYjQxODM1ZmZjNjQxYjY", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-10-23T16:32:45Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-10-25T21:51:49Z"}, "message": "Rename, improve docs, fail better", "tree": {"sha": "bf76b7c60f5fc74e443d5fdaab5f8dfe1d554cc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf76b7c60f5fc74e443d5fdaab5f8dfe1d554cc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d86bbd5094badaf55ade2073fbb41835ffc641b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d86bbd5094badaf55ade2073fbb41835ffc641b6", "html_url": "https://github.com/rust-lang/rust/commit/d86bbd5094badaf55ade2073fbb41835ffc641b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d86bbd5094badaf55ade2073fbb41835ffc641b6/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a46ccba167086f0b562eb78403f7446b0fed5f65", "url": "https://api.github.com/repos/rust-lang/rust/commits/a46ccba167086f0b562eb78403f7446b0fed5f65", "html_url": "https://github.com/rust-lang/rust/commit/a46ccba167086f0b562eb78403f7446b0fed5f65"}], "stats": {"total": 58, "additions": 44, "deletions": 14}, "files": [{"sha": "bd175b46b7a68ae7feaab7d0e38eb0db9fbc812d", "filename": "src/tools/miri/README.md", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FREADME.md?ref=d86bbd5094badaf55ade2073fbb41835ffc641b6", "patch": "@@ -538,15 +538,20 @@ extern \"Rust\" {\n     fn miri_start_panic(payload: *mut u8) -> !;\n \n     /// Miri-provided extern function to get the internal unique identifier for the allocation that a pointer\n-    /// points to. This is only useful as an input to `miri_print_stacks`, and it is a separate call because\n+    /// points to. This is only useful as an input to `miri_print_borrow_stacks`, and it is a separate call because\n     /// getting a pointer to an allocation at runtime can change the borrow stacks in the allocation.\n+    /// This function should be considered unstable. It exists only to support `miri_print_borrow_stacks` and so\n+    /// inherits all of its instability.\n     fn miri_get_alloc_id(ptr: *const ()) -> u64;\n \n     /// Miri-provided extern function to print (from the interpreter, not the program) the contents of all\n-    /// borrow stacks in an allocation. The format of what this emits is unstable and may change at any time.\n-    /// In particular, users should be aware that Miri will periodically attempt to garbage collect the\n-    /// contents of all stacks. Callers of this function may wish to pass `-Zmiri-tag-gc=0` to disable the GC.\n-    fn miri_print_stacks(alloc_id: u64);\n+    /// borrow stacks in an allocation. The leftmost tag is the bottom of the stack.\n+    /// The format of what this emits is unstable and may change at any time. In particular, users should be\n+    /// aware that Miri will periodically attempt to garbage collect the contents of all stacks. Callers of\n+    /// this function may wish to pass `-Zmiri-tag-gc=0` to disable the GC.\n+    /// This function is extremely unstable. At any time the format of its output may change, its signature may\n+    /// change, or it may be removed entirely.\n+    fn miri_print_borrow_stacks(alloc_id: u64);\n \n     /// Miri-provided extern function to print (from the interpreter, not the\n     /// program) the contents of a section of program memory, as bytes. Bytes"}, {"sha": "1b3205aabc99da2663dc4d4f82240baeafa887e2", "filename": "src/tools/miri/src/shims/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs?ref=d86bbd5094badaf55ade2073fbb41835ffc641b6", "patch": "@@ -420,10 +420,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             \"miri_get_alloc_id\" => {\n                 let [ptr] = this.check_shim(abi, Abi::Rust, link_name, args)?;\n                 let ptr = this.read_pointer(ptr)?;\n-                let (alloc_id, _, _) = this.ptr_get_alloc_id(ptr)?;\n+                let (alloc_id, _, _) = this.ptr_get_alloc_id(ptr).map_err(|_e| {\n+                    err_machine_stop!(TerminationInfo::Abort(\n+                        format!(\"pointer passed to miri_get_alloc_id must not be dangling, got {ptr:?}\")\n+                    ))\n+                })?;\n                 this.write_scalar(Scalar::from_u64(alloc_id.0.get()), dest)?;\n             }\n-            \"miri_print_stacks\" => {\n+            \"miri_print_borrow_stacks\" => {\n                 let [id] = this.check_shim(abi, Abi::Rust, link_name, args)?;\n                 let id = this.read_scalar(id)?.to_u64()?;\n                 if let Some(id) = std::num::NonZeroU64::new(id) {"}, {"sha": "cc27b71eb5604ea8d42335e6307df1c81d9e84a5", "filename": "src/tools/miri/src/stacked_borrows/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs?ref=d86bbd5094badaf55ade2073fbb41835ffc641b6", "patch": "@@ -1154,6 +1154,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         let stacks = alloc_extra.stacked_borrows.as_ref().unwrap().borrow();\n         for (range, stack) in stacks.stacks.iter_all() {\n             print!(\"{range:?}: [\");\n+            if let Some(bottom) = stack.unknown_bottom() {\n+                print!(\" unknown-bottom(..{bottom:?})\");\n+            }\n             for i in 0..stack.len() {\n                 let item = stack.get(i).unwrap();\n                 print!(\" {:?}{:?}\", item.perm(), item.tag());"}, {"sha": "3ca937ae13db810aff8863bac703a55b20ba92c3", "filename": "src/tools/miri/tests/pass/stacked-borrows/stack-printing.rs", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Fstack-printing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Fstack-printing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Fstack-printing.rs?ref=d86bbd5094badaf55ade2073fbb41835ffc641b6", "patch": "@@ -1,29 +1,46 @@\n+//@compile-flags: -Zmiri-permissive-provenance\n+#![feature(strict_provenance)]\n use std::{\n     alloc::{self, Layout},\n     mem::ManuallyDrop,\n };\n \n extern \"Rust\" {\n     fn miri_get_alloc_id(ptr: *const u8) -> u64;\n-    fn miri_print_stacks(alloc_id: u64);\n+    fn miri_print_borrow_stacks(alloc_id: u64);\n+}\n+\n+fn get_alloc_id(ptr: *const u8) -> u64 {\n+    unsafe { miri_get_alloc_id(ptr) }\n+}\n+\n+fn print_borrow_stacks(alloc_id: u64) {\n+    unsafe { miri_print_borrow_stacks(alloc_id) }\n }\n \n fn main() {\n     let ptr = unsafe { alloc::alloc(Layout::new::<u8>()) };\n-    let alloc_id = unsafe { miri_get_alloc_id(ptr) };\n-    unsafe { miri_print_stacks(alloc_id) };\n+    let alloc_id = get_alloc_id(ptr);\n+    print_borrow_stacks(alloc_id);\n \n     assert!(!ptr.is_null());\n-    unsafe { miri_print_stacks(alloc_id) };\n+    print_borrow_stacks(alloc_id);\n \n     unsafe { *ptr = 42 };\n-    unsafe { miri_print_stacks(alloc_id) };\n+    print_borrow_stacks(alloc_id);\n \n     let _b = unsafe { ManuallyDrop::new(Box::from_raw(ptr)) };\n-    unsafe { miri_print_stacks(alloc_id) };\n+    print_borrow_stacks(alloc_id);\n \n     let _ptr = unsafe { &*ptr };\n-    unsafe { miri_print_stacks(alloc_id) };\n+    print_borrow_stacks(alloc_id);\n+\n+    // Create an unknown bottom, and print it\n+    let ptr = ptr as usize as *mut u8;\n+    unsafe {\n+        *ptr = 5;\n+    }\n+    print_borrow_stacks(alloc_id);\n \n     unsafe { alloc::dealloc(ptr, Layout::new::<u8>()) };\n }"}, {"sha": "838733078209def1b9a84c17a96a30c1921a520b", "filename": "src/tools/miri/tests/pass/stacked-borrows/stack-printing.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Fstack-printing.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d86bbd5094badaf55ade2073fbb41835ffc641b6/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Fstack-printing.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fstacked-borrows%2Fstack-printing.stdout?ref=d86bbd5094badaf55ade2073fbb41835ffc641b6", "patch": "@@ -3,3 +3,4 @@\n 0..1: [ SharedReadWrite<TAG> ]\n 0..1: [ SharedReadWrite<TAG> Unique<TAG> Unique<TAG> Unique<TAG> Unique<TAG> Unique<TAG> ]\n 0..1: [ SharedReadWrite<TAG> Disabled<TAG> Disabled<TAG> Disabled<TAG> Disabled<TAG> Disabled<TAG> SharedReadOnly<TAG> ]\n+0..1: [ unknown-bottom(..<TAG>) ]"}]}