{"sha": "99cf5a92acba672845a3563c4abf98e663eaf5cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5Y2Y1YTkyYWNiYTY3Mjg0NWEzNTYzYzRhYmY5OGU2NjNlYWY1Y2Q=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2018-05-15T16:52:16Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2018-05-16T02:24:04Z"}, "message": "Separate feature gate for wrapping_next_power_of_two", "tree": {"sha": "d862b55b50e8c8330db487587d921e36598c5682", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d862b55b50e8c8330db487587d921e36598c5682"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99cf5a92acba672845a3563c4abf98e663eaf5cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99cf5a92acba672845a3563c4abf98e663eaf5cd", "html_url": "https://github.com/rust-lang/rust/commit/99cf5a92acba672845a3563c4abf98e663eaf5cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99cf5a92acba672845a3563c4abf98e663eaf5cd/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a00e68ddc667e6ab110dd07c45ee10ca8ef90bbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a00e68ddc667e6ab110dd07c45ee10ca8ef90bbc", "html_url": "https://github.com/rust-lang/rust/commit/a00e68ddc667e6ab110dd07c45ee10ca8ef90bbc"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "97fcd8ebb50d70ad208786c6330843471b7a15ee", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99cf5a92acba672845a3563c4abf98e663eaf5cd/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99cf5a92acba672845a3563c4abf98e663eaf5cd/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=99cf5a92acba672845a3563c4abf98e663eaf5cd", "patch": "@@ -3433,14 +3433,15 @@ the return value is wrapped to `0`.\n Basic usage:\n \n ```\n-#![feature(wrapping_int_impl)]\n+#![feature(wrapping_next_power_of_two)]\n \", $Feature, \"\n assert_eq!(2\", stringify!($SelfT), \".wrapping_next_power_of_two(), 2);\n assert_eq!(3\", stringify!($SelfT), \".wrapping_next_power_of_two(), 4);\n assert_eq!(\", stringify!($SelfT), \"::max_value().wrapping_next_power_of_two(), 0);\",\n $EndFeature, \"\n ```\"),\n-            #[unstable(feature = \"wrapping_int_impl\", issue = \"32463\")]\n+            #[unstable(feature = \"wrapping_next_power_of_two\", issue = \"32463\",\n+                       reason = \"needs decision on wrapping behaviour\")]\n             pub fn wrapping_next_power_of_two(self) -> Self {\n                 self.one_less_than_next_power_of_two().wrapping_add(1)\n             }"}, {"sha": "d7f87d37f5b334ec0b9b871a80c1b2522e705b67", "filename": "src/libcore/num/wrapping.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99cf5a92acba672845a3563c4abf98e663eaf5cd/src%2Flibcore%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99cf5a92acba672845a3563c4abf98e663eaf5cd/src%2Flibcore%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fwrapping.rs?ref=99cf5a92acba672845a3563c4abf98e663eaf5cd", "patch": "@@ -874,15 +874,16 @@ When return value overflows (i.e. `self > (1 << (N-1))` for type\n Basic usage:\n \n ```\n-#![feature(wrapping_int_impl)]\n+#![feature(wrapping_next_power_of_two)]\n use std::num::Wrapping;\n \n assert_eq!(Wrapping(2\", stringify!($t), \").next_power_of_two(), Wrapping(2));\n assert_eq!(Wrapping(3\", stringify!($t), \").next_power_of_two(), Wrapping(4));\n assert_eq!(Wrapping(200_u8).next_power_of_two(), Wrapping(0));\n ```\"),\n                 #[inline]\n-                #[unstable(feature = \"wrapping_int_impl\", issue = \"32463\")]\n+                #[unstable(feature = \"wrapping_next_power_of_two\", issue = \"32463\",\n+                           reason = \"needs decision on wrapping behaviour\")]\n                 pub fn next_power_of_two(self) -> Self {\n                     Wrapping(self.0.wrapping_next_power_of_two())\n                 }"}]}