{"sha": "000b945ceaed1b74b101f96889b63d48d877ba69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMGI5NDVjZWFlZDFiNzRiMTAxZjk2ODg5YjYzZDQ4ZDg3N2JhNjk=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-14T21:23:36Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-18T12:30:10Z"}, "message": "Remove OpaqueTyOrigin::Misc, use TyAlias instead", "tree": {"sha": "142683c06d94abaa24d9889df840642b9982ce6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/142683c06d94abaa24d9889df840642b9982ce6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/000b945ceaed1b74b101f96889b63d48d877ba69", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmD0HtIACgkQgTGiTgx5\n76/MPxAAiWyefThtR3kM9wQkdSZok5z18cux1t1SOPr5NeU0roaS4fB+/8Z1hfpH\nkmqAAYDobtmWpRpELFLgkVi7/qiLfZOucHP7+tBnyT5E1o5Y352/S+0f2QJezy6u\nPdc9Rb43U6+1NvMv02kIRXg2l/RKn++gPTSV5es0a3xOLSOFcM3j3oFtifM0wLZ2\nNv31u8GB7Y7AqFQfKZa49Ot0etKvjmYt82hpW1D3Q6fGKTqdKqXsjmY4Rh3sTZUM\nwt/kXAZB5VQg4b1QY60v1c1QL0kR1xh5npyQnwqpkgOiUpoiAzIL+d1JZNmKfEn1\na3zzS3VOHXFN0VNInL/AcVVuJT6U2P/FA27SAaPPbYYdirZap3fmeVoNAuy7scxe\nLPZ04N3+vTZZb0giGbYPb92aSa9zvbE8zb+MyzB7NQy0cYRnyh0imgDCOQvZe332\nhE+Y1IMxBj4m1cntD2ll5qWSJuhpveWvSMQCSzyKKF2J+R19s2LYItp3H3KSTCkY\ntDLvbusrQzqYTSKV6exTF5D44e3ZqpRypt+7eN7246xneuaS44IwoeVoyrTZIK7+\nB91f8XJfZZJ7LeU1DSn6xhe0WjsSxI4ZDYROtxp2jv+q3darNFz90n30bWDB4jMa\ni1s+coc9WjRjDxd+dDdnUkTOHPZPqEcuYTAl15qi32KuPxBSbH4=\n=01AW\n-----END PGP SIGNATURE-----", "payload": "tree 142683c06d94abaa24d9889df840642b9982ce6f\nparent d98384595f105179fef37960f37a636e562d6425\nauthor Santiago Pastorino <spastorino@gmail.com> 1626297816 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1626611410 -0300\n\nRemove OpaqueTyOrigin::Misc, use TyAlias instead\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/000b945ceaed1b74b101f96889b63d48d877ba69", "html_url": "https://github.com/rust-lang/rust/commit/000b945ceaed1b74b101f96889b63d48d877ba69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/000b945ceaed1b74b101f96889b63d48d877ba69/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d98384595f105179fef37960f37a636e562d6425", "url": "https://api.github.com/repos/rust-lang/rust/commits/d98384595f105179fef37960f37a636e562d6425", "html_url": "https://github.com/rust-lang/rust/commit/d98384595f105179fef37960f37a636e562d6425"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "37809c377cae22042fefd6681002c23940b21874", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=000b945ceaed1b74b101f96889b63d48d877ba69", "patch": "@@ -280,7 +280,7 @@ enum ImplTraitContext<'b, 'a> {\n         // FIXME(impl_trait): but `required_region_bounds` will ICE later\n         // anyway.\n         capturable_lifetimes: &'b mut FxHashSet<hir::LifetimeName>,\n-        /// Origin: Either OpaqueTyOrigin::TyAlias or OpaqueTyOrigin::Misc,\n+        /// Origin: OpaqueTyOrigin::TyAlias\n         origin: hir::OpaqueTyOrigin,\n     },\n     /// `impl Trait` is not accepted in this position.\n@@ -1152,7 +1152,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             true,\n                             ImplTraitContext::TypeAliasesOpaqueTy {\n                                 capturable_lifetimes: &mut capturable_lifetimes,\n-                                origin: hir::OpaqueTyOrigin::Misc,\n+                                origin: hir::OpaqueTyOrigin::TyAlias,\n                             },\n                         )\n                     }"}, {"sha": "fd5ee75effe648c61e490ae3c5a69509c2910e2a", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=000b945ceaed1b74b101f96889b63d48d877ba69", "patch": "@@ -2272,8 +2272,6 @@ pub enum OpaqueTyOrigin {\n     AsyncFn,\n     /// type aliases: `type Foo = impl Trait;`\n     TyAlias,\n-    /// Impl trait consts, statics, bounds.\n-    Misc,\n }\n \n /// The various kinds of types recognized by the compiler."}, {"sha": "39013a317fd9c494af6c94439bea66dbc5df7ad4", "filename": "compiler/rustc_trait_selection/src/opaque_types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs?ref=000b945ceaed1b74b101f96889b63d48d877ba69", "patch": "@@ -402,7 +402,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             }\n             // These opaque type inherit all lifetime parameters from their\n             // parent, so we have to check them all.\n-            hir::OpaqueTyOrigin::TyAlias | hir::OpaqueTyOrigin::Misc => 0,\n+            hir::OpaqueTyOrigin::TyAlias => 0,\n         };\n \n         let span = tcx.def_span(def_id);\n@@ -994,7 +994,7 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n                                     may_define_opaque_type(tcx, self.parent_def_id, opaque_hir_id),\n                                     origin,\n                                 ),\n-                                _ => (def_scope_default(), hir::OpaqueTyOrigin::Misc),\n+                                _ => (def_scope_default(), hir::OpaqueTyOrigin::TyAlias),\n                             };\n                         if in_definition_scope {\n                             let opaque_type_key ="}, {"sha": "8db95957816164d3ac39812d912126fdaa9be9d9", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=000b945ceaed1b74b101f96889b63d48d877ba69", "patch": "@@ -700,7 +700,7 @@ fn check_opaque_meets_bounds<'tcx>(\n         // Checked when type checking the function containing them.\n         hir::OpaqueTyOrigin::FnReturn | hir::OpaqueTyOrigin::AsyncFn => return,\n         // Can have different predicates to their defining use\n-        hir::OpaqueTyOrigin::Misc | hir::OpaqueTyOrigin::TyAlias => {}\n+        hir::OpaqueTyOrigin::TyAlias => {}\n     }\n \n     let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);"}, {"sha": "190ce782cfeb95608f17911c092451c59071e772", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/000b945ceaed1b74b101f96889b63d48d877ba69/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=000b945ceaed1b74b101f96889b63d48d877ba69", "patch": "@@ -521,8 +521,7 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n             let mut skip_add = false;\n \n             if let ty::Opaque(definition_ty_def_id, _substs) = *definition_ty.kind() {\n-                if let hir::OpaqueTyOrigin::Misc | hir::OpaqueTyOrigin::TyAlias = opaque_defn.origin\n-                {\n+                if let hir::OpaqueTyOrigin::TyAlias = opaque_defn.origin {\n                     if opaque_type_key.def_id == definition_ty_def_id {\n                         debug!(\n                             \"skipping adding concrete definition for opaque type {:?} {:?}\","}]}