{"sha": "0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNzE1Y2ZiZDIxMWE5MDAwNmQ1YmZkNDc1YzhmYmEyM2Y2ZjE4ZWU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-09T21:13:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-09T21:13:51Z"}, "message": "Merge #6472\n\n6472: Add `static` modifier for associated functions r=matklad a=p3achyjr\n\nAdds static semantic token modifier to associated functions, resolves #6194 \r\n\r\n## Info\r\n\r\n- Associated functions are more-or-less equivalent to static methods in other languages. This PR checks, for each function, whether that function has a self_param, and whether it's enclosed in a trait/impl.\r\n\r\n## Changes\r\n\r\n- Added method ```is_associated``` to code_model::Function. This basically gets the source from the ast, and checks whether the enclosing scope is an impl or trait.\r\n- Added `static` to HighlightModifiers\r\n- Added unit test\r\n\r\n## Tests\r\n\r\n- Ran ```cargo test```\n\nCo-authored-by: Anatol Liu <axlui@anatols-mbp.lan>", "tree": {"sha": "a215abf374d48a3e23a8492f8c4f2fb53704e569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a215abf374d48a3e23a8492f8c4f2fb53704e569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqbEPCRBK7hj4Ov3rIwAAdHIIAGl57N5wuNVxm6Zs9soveKlD\nm52mgCIU5xTRRm1qRh17MB59XVizN8hGI9j4XoKJkx6PNBqiPx+f2nzi/nbMCuQF\nweQtM/7RbblkQAJBZXY4DRKutJKXNxyvtSNWHhzCSPUaPBeqB0aiFJ6vCmXvMmc8\n4YvuyHGQsM/5leqcAhhfw3MbztJm+TrljyAeVsFU6nqbG8xqaZisItpVAN3jNO4c\nABGafxsoSGPoirD6SSQ7eJEb3GgXNp+iZ5aYfO0gYNF+OrgaznVNbWdIyvqIdMiD\nKzoISyc1qDmYBCTNCr5XhOEecJ0ih34C2USYU/cu+cNOCzzirhj6wvlKdKe4MCQ=\n=jRy+\n-----END PGP SIGNATURE-----\n", "payload": "tree a215abf374d48a3e23a8492f8c4f2fb53704e569\nparent d5775b320c4f274c77b38f01b39ea96336f046bb\nparent 6b950d24d44c6de4de3486832676359b2dfcb7c8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1604956431 +0000\ncommitter GitHub <noreply@github.com> 1604956431 +0000\n\nMerge #6472\n\n6472: Add `static` modifier for associated functions r=matklad a=p3achyjr\n\nAdds static semantic token modifier to associated functions, resolves #6194 \r\n\r\n## Info\r\n\r\n- Associated functions are more-or-less equivalent to static methods in other languages. This PR checks, for each function, whether that function has a self_param, and whether it's enclosed in a trait/impl.\r\n\r\n## Changes\r\n\r\n- Added method ```is_associated``` to code_model::Function. This basically gets the source from the ast, and checks whether the enclosing scope is an impl or trait.\r\n- Added `static` to HighlightModifiers\r\n- Added unit test\r\n\r\n## Tests\r\n\r\n- Ran ```cargo test```\n\nCo-authored-by: Anatol Liu <axlui@anatols-mbp.lan>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "html_url": "https://github.com/rust-lang/rust/commit/0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5775b320c4f274c77b38f01b39ea96336f046bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5775b320c4f274c77b38f01b39ea96336f046bb", "html_url": "https://github.com/rust-lang/rust/commit/d5775b320c4f274c77b38f01b39ea96336f046bb"}, {"sha": "6b950d24d44c6de4de3486832676359b2dfcb7c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b950d24d44c6de4de3486832676359b2dfcb7c8", "html_url": "https://github.com/rust-lang/rust/commit/6b950d24d44c6de4de3486832676359b2dfcb7c8"}], "stats": {"total": 98, "additions": 95, "deletions": 3}, "files": [{"sha": "1ed77b40b0d14ebf7724514828c5e1d9ee13e7bf", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "patch": "@@ -6,7 +6,7 @@ pub(crate) mod tags;\n #[cfg(test)]\n mod tests;\n \n-use hir::{Local, Name, Semantics, VariantDef};\n+use hir::{AsAssocItem, Local, Name, Semantics, VariantDef};\n use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase,\n@@ -746,6 +746,9 @@ fn highlight_def(db: &RootDatabase, def: Definition) -> Highlight {\n                 if func.is_unsafe(db) {\n                     h |= HighlightModifier::Unsafe;\n                 }\n+                if func.as_assoc_item(db).is_some() && func.self_param(db).is_none() {\n+                    h |= HighlightModifier::Static;\n+                }\n                 return h;\n             }\n             hir::ModuleDef::Adt(hir::Adt::Struct(_)) => HighlightTag::Struct,"}, {"sha": "65e0671a5a970a363869bb46bdc2828c4100bb27", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "patch": "@@ -65,6 +65,8 @@ pub enum HighlightModifier {\n     Consuming,\n     Unsafe,\n     Callable,\n+    /// Used for associated functions\n+    Static,\n }\n \n impl HighlightTag {\n@@ -124,6 +126,7 @@ impl HighlightModifier {\n         HighlightModifier::Consuming,\n         HighlightModifier::Unsafe,\n         HighlightModifier::Callable,\n+        HighlightModifier::Static,\n     ];\n \n     fn as_str(self) -> &'static str {\n@@ -137,6 +140,7 @@ impl HighlightModifier {\n             HighlightModifier::Consuming => \"consuming\",\n             HighlightModifier::Unsafe => \"unsafe\",\n             HighlightModifier::Callable => \"callable\",\n+            HighlightModifier::Static => \"static\",\n         }\n     }\n "}, {"sha": "cd80d72b79890a196c1e668bf7303fedf48888e5", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_assoc_functions.html", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "raw_url": "https://github.com/rust-lang/rust/raw/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html?ref=0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "patch": "@@ -0,0 +1,56 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">not_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+\n+<span class=\"keyword\">struct</span> <span class=\"struct declaration\">foo</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+\n+<span class=\"keyword\">impl</span> <span class=\"struct\">foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static\">is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n+\n+<span class=\"keyword\">trait</span> <span class=\"trait declaration\">t</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration static\">t_is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">t_is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n+\n+<span class=\"keyword\">impl</span> <span class=\"trait\">t</span> <span class=\"keyword\">for</span> <span class=\"struct\">foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static\">is_static</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">is_not_static</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+<span class=\"punctuation\">}</span>\n+        </code></pre>\n\\ No newline at end of file"}, {"sha": "6be88f856b818937d51d5d74aed96df3a2041b92", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "patch": "@@ -53,7 +53,7 @@\n     <span class=\"comment documentation\">/// #</span><span class=\"generic injected\"> </span><span class=\"attribute injected\">#</span><span class=\"attribute injected\">!</span><span class=\"attribute injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"punctuation injected\">(</span><span class=\"attribute injected\">unused_mut</span><span class=\"punctuation injected\">)</span><span class=\"attribute injected\">]</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"generic injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"generic injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"punctuation injected\">:</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"generic injected\"> </span><span class=\"operator injected\">=</span><span class=\"generic injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"punctuation injected\">(</span><span class=\"punctuation injected\">)</span><span class=\"punctuation injected\">;</span><span class=\"punctuation injected\">\n </span>    <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static\">new</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n         <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span> <span class=\"field\">bar</span><span class=\"punctuation\">:</span> <span class=\"bool_literal\">true</span> <span class=\"punctuation\">}</span>\n     <span class=\"punctuation\">}</span>\n "}, {"sha": "57c178916f6afa7d7fc1de5f0e816dd8ae2c412e", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "patch": "@@ -40,7 +40,7 @@\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n     <span class=\"function\">fixture</span><span class=\"punctuation\">(</span><span class=\"string_literal\">r#\"</span>\n         <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Foo</span> <span class=\"punctuation\">{</span>\n-            <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n+            <span class=\"keyword\">fn</span> <span class=\"function declaration static\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n                 <span class=\"macro\">println!</span><span class=\"punctuation\">(</span><span class=\"string_literal\">\"2 + 2 = {}\"</span><span class=\"punctuation\">,</span> <span class=\"numeric_literal\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n             <span class=\"punctuation\">}</span>\n         <span class=\"punctuation\">}</span><span class=\"string_literal\">\"#</span>"}, {"sha": "5c22e2fce36071372e00ba8737fd8a25acf6657d", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "patch": "@@ -513,6 +513,34 @@ fn test_extern_crate() {\n     );\n }\n \n+#[test]\n+fn test_associated_function() {\n+    check_highlighting(\n+        r#\"\n+fn not_static() {}\n+\n+struct foo {}\n+\n+impl foo {\n+    pub fn is_static() {}\n+    pub fn is_not_static(&self) {}\n+}\n+\n+trait t {\n+    fn t_is_static() {}\n+    fn t_is_not_static(&self) {}\n+}\n+\n+impl t for foo {\n+    pub fn is_static() {}\n+    pub fn is_not_static(&self) {}\n+}\n+        \"#,\n+        expect_file![\"./test_data/highlight_assoc_functions.html\"],\n+        false,\n+    )\n+}\n+\n /// Highlights the code given by the `ra_fixture` argument, renders the\n /// result as HTML, and compares it with the HTML file given as `snapshot`.\n /// Note that the `snapshot` file is overwritten by the rendered HTML."}, {"sha": "f8ecd8e8392043a28e018cf858989620942b907e", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a715cfbd211a90006d5bfd475c8fba23f6f18ee/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=0a715cfbd211a90006d5bfd475c8fba23f6f18ee", "patch": "@@ -426,6 +426,7 @@ fn semantic_token_type_and_modifiers(\n             HighlightModifier::Consuming => semantic_tokens::CONSUMING,\n             HighlightModifier::Unsafe => semantic_tokens::UNSAFE,\n             HighlightModifier::Callable => semantic_tokens::CALLABLE,\n+            HighlightModifier::Static => lsp_types::SemanticTokenModifier::STATIC,\n         };\n         mods |= modifier;\n     }"}]}