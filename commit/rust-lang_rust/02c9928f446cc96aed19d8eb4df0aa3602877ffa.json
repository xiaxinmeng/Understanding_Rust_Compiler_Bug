{"sha": "02c9928f446cc96aed19d8eb4df0aa3602877ffa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYzk5MjhmNDQ2Y2M5NmFlZDE5ZDhlYjRkZjBhYTM2MDI4NzdmZmE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-09T16:18:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-09T16:18:27Z"}, "message": "Rollup merge of #59018 - alexcrichton:omg, r=sfackler\n\nstd: Delete a by-definition spuriously failing test\n\nThis commit deletes the `connect_timeout_unbound` test from the standard\nlibrary which, unfortunately, is by definition eventually going to be a\nspuriously failing test. There's no way to reserve a port as unbound so\nwe can rely on ecosystem testing for this feature for now.\n\nCloses #52590", "tree": {"sha": "06c88558f1405dc59f34bc138a70ab1ed0b913e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06c88558f1405dc59f34bc138a70ab1ed0b913e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02c9928f446cc96aed19d8eb4df0aa3602877ffa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcg+dTCRBK7hj4Ov3rIwAAdHIIAFQ3YehPaCwxeuBXOY7kmcUE\nbdgiceLrbpdf7bce8ROWw2Ubm+R5J4QmwwZQh1wLCXdev3KjdvioNIoyItX89ujP\ntHr7QcPeUZcZcDNGM3sF32JbYHN1iUPR1tzmnecEKGhX1QBigs9Sr4+WB16kSzIU\nNyR7sWQIINq74Fv1U3ZRH6X0ZUj4IilmN+Nl0Z/3cYF/V9x/0JvwKpHK+2fP98Cf\nLOCQGec1EOv6sDoHTo4TzR/DnGNj5Iu5+Q15HgDgm9VJaOTrIrbbm9gg0/KNAGVo\nwJs+QDwtu0dxrIPSxlhQVg+aRp5L2JtUntGaDGPN7KIEgQre3Q80EGgTj88tBjE=\n=5fqv\n-----END PGP SIGNATURE-----\n", "payload": "tree 06c88558f1405dc59f34bc138a70ab1ed0b913e9\nparent f67efe9d3a68b353a8021c6c6bc80a496a57e13f\nparent 6465257e5442b489a1d4469d3f613aeb637e3665\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1552148307 +0100\ncommitter GitHub <noreply@github.com> 1552148307 +0100\n\nRollup merge of #59018 - alexcrichton:omg, r=sfackler\n\nstd: Delete a by-definition spuriously failing test\n\nThis commit deletes the `connect_timeout_unbound` test from the standard\nlibrary which, unfortunately, is by definition eventually going to be a\nspuriously failing test. There's no way to reserve a port as unbound so\nwe can rely on ecosystem testing for this feature for now.\n\nCloses #52590\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02c9928f446cc96aed19d8eb4df0aa3602877ffa", "html_url": "https://github.com/rust-lang/rust/commit/02c9928f446cc96aed19d8eb4df0aa3602877ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02c9928f446cc96aed19d8eb4df0aa3602877ffa/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f67efe9d3a68b353a8021c6c6bc80a496a57e13f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f67efe9d3a68b353a8021c6c6bc80a496a57e13f", "html_url": "https://github.com/rust-lang/rust/commit/f67efe9d3a68b353a8021c6c6bc80a496a57e13f"}, {"sha": "6465257e5442b489a1d4469d3f613aeb637e3665", "url": "https://api.github.com/repos/rust-lang/rust/commits/6465257e5442b489a1d4469d3f613aeb637e3665", "html_url": "https://github.com/rust-lang/rust/commit/6465257e5442b489a1d4469d3f613aeb637e3665"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "ce0c5c0bb0dc7d25dad48eaf0c3e83e763dc49fc", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/02c9928f446cc96aed19d8eb4df0aa3602877ffa/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02c9928f446cc96aed19d8eb4df0aa3602877ffa/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=02c9928f446cc96aed19d8eb4df0aa3602877ffa", "patch": "@@ -1742,21 +1742,6 @@ mod tests {\n         })\n     }\n \n-    #[test]\n-    fn connect_timeout_unbound() {\n-        // bind and drop a socket to track down a \"probably unassigned\" port\n-        let socket = TcpListener::bind(\"127.0.0.1:0\").unwrap();\n-        let addr = socket.local_addr().unwrap();\n-        drop(socket);\n-\n-        let timeout = Duration::from_secs(1);\n-        let e = TcpStream::connect_timeout(&addr, timeout).unwrap_err();\n-        assert!(e.kind() == io::ErrorKind::ConnectionRefused ||\n-                e.kind() == io::ErrorKind::TimedOut ||\n-                e.kind() == io::ErrorKind::Other,\n-                \"bad error: {} {:?}\", e, e.kind());\n-    }\n-\n     #[test]\n     fn connect_timeout_valid() {\n         let listener = TcpListener::bind(\"127.0.0.1:0\").unwrap();"}]}