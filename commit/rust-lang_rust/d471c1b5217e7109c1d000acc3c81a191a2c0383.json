{"sha": "d471c1b5217e7109c1d000acc3c81a191a2c0383", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NzFjMWI1MjE3ZTcxMDljMWQwMDBhY2MzYzgxYTE5MWEyYzAzODM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T08:38:12Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T08:38:12Z"}, "message": "Update Cranelift", "tree": {"sha": "31ac8e9082384ae0ca1ef855ac9a4f7424d7a213", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31ac8e9082384ae0ca1ef855ac9a4f7424d7a213"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d471c1b5217e7109c1d000acc3c81a191a2c0383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d471c1b5217e7109c1d000acc3c81a191a2c0383", "html_url": "https://github.com/rust-lang/rust/commit/d471c1b5217e7109c1d000acc3c81a191a2c0383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d471c1b5217e7109c1d000acc3c81a191a2c0383/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd6e0e6e1218a7cc63ee57848096efad1a1bb54b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd6e0e6e1218a7cc63ee57848096efad1a1bb54b", "html_url": "https://github.com/rust-lang/rust/commit/bd6e0e6e1218a7cc63ee57848096efad1a1bb54b"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "dd47b093b0b6fb351338f380a31112bf311f8a53", "filename": "Cargo.lock", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d471c1b5217e7109c1d000acc3c81a191a2c0383/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d471c1b5217e7109c1d000acc3c81a191a2c0383/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d471c1b5217e7109c1d000acc3c81a191a2c0383", "patch": "@@ -45,15 +45,15 @@ checksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n [[package]]\n name = \"cranelift-bforest\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n  \"cranelift-entity\",\n ]\n \n [[package]]\n name = \"cranelift-codegen\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n  \"byteorder\",\n  \"cranelift-bforest\",\n@@ -71,7 +71,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-codegen-meta\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n  \"cranelift-codegen-shared\",\n  \"cranelift-entity\",\n@@ -80,17 +80,17 @@ dependencies = [\n [[package]]\n name = \"cranelift-codegen-shared\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n \n [[package]]\n name = \"cranelift-entity\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n \n [[package]]\n name = \"cranelift-frontend\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"log\",\n@@ -101,7 +101,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-module\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -113,7 +113,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-native\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"raw-cpuid\",\n@@ -123,8 +123,9 @@ dependencies = [\n [[package]]\n name = \"cranelift-object\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n+ \"anyhow\",\n  \"cranelift-codegen\",\n  \"cranelift-module\",\n  \"object\",\n@@ -134,7 +135,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-simplejit\"\n version = \"0.65.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#2dbe98b823e39cbd1bffe9c137b684d6a94f280a\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#647d2b423131c533af57e59e98928ca5d1f6887e\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"cranelift-module\",\n@@ -235,13 +236,12 @@ dependencies = [\n \n [[package]]\n name = \"object\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e5666bbb90bc4d1e5bdcb26c0afda1822d25928341e9384ab187a9b37ab69e36\"\n+checksum = \"9cbca9424c482ee628fa549d9c812e2cd22f1180b9222c9200fdfa6eb31aecb2\"\n dependencies = [\n  \"crc32fast\",\n  \"indexmap\",\n- \"target-lexicon\",\n  \"wasmparser\",\n ]\n \n@@ -397,9 +397,9 @@ checksum = \"826e7639553986605ec5979c7dd957c7895e93eabed50ab2ffa7f6128a75097c\"\n \n [[package]]\n name = \"wasmparser\"\n-version = \"0.51.4\"\n+version = \"0.54.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"aeb1956b19469d1c5e63e459d29e7b5aa0f558d9f16fcef09736f8a265e6c10a\"\n+checksum = \"747467da102640806cf6643e032a70174e7768839bcac7e71a0a9aaa54761d59\"\n \n [[package]]\n name = \"winapi\""}, {"sha": "b656ed7cb5780c164b67129b4af49440e1d98812", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d471c1b5217e7109c1d000acc3c81a191a2c0383/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d471c1b5217e7109c1d000acc3c81a191a2c0383/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=d471c1b5217e7109c1d000acc3c81a191a2c0383", "patch": "@@ -21,7 +21,7 @@ indexmap = \"1.0.2\"\n cfg-if = \"0.1.10\"\n \n [dependencies.object]\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n default-features = false\n features = [\"read\", \"std\", \"write\"] # We don't need WASM support\n "}, {"sha": "294f6952ae20c5aa563479e1de5a4e455d0eab07", "filename": "src/backend.rs", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d471c1b5217e7109c1d000acc3c81a191a2c0383/src%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d471c1b5217e7109c1d000acc3c81a191a2c0383/src%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbackend.rs?ref=d471c1b5217e7109c1d000acc3c81a191a2c0383", "patch": "@@ -58,7 +58,7 @@ impl WriteDebugInfo for ObjectProduct {\n         id: SectionId,\n         data: Vec<u8>,\n     ) -> (object::write::SectionId, object::write::SymbolId) {\n-        let name = if self.object.format() == target_lexicon::BinaryFormat::Macho {\n+        let name = if self.object.format() == object::BinaryFormat::MachO {\n             id.name().replace('.', \"__\") // machO expects __debug_info instead of .debug_info\n         } else {\n             id.name().to_string()\n@@ -109,8 +109,32 @@ impl Emit for ObjectProduct {\n \n pub(crate) fn with_object(sess: &Session, name: &str, f: impl FnOnce(&mut Object)) -> Vec<u8> {\n     let triple = crate::build_isa(sess, true).triple().clone();\n-    let mut metadata_object =\n-        object::write::Object::new(triple.binary_format, triple.architecture);\n+\n+    let binary_format = match triple.binary_format {\n+        target_lexicon::BinaryFormat::Elf => object::BinaryFormat::Elf,\n+        target_lexicon::BinaryFormat::Coff => object::BinaryFormat::Coff,\n+        target_lexicon::BinaryFormat::Macho => object::BinaryFormat::MachO,\n+        target_lexicon::BinaryFormat::Wasm => sess.fatal(\"binary format wasm is unsupported\"),\n+        target_lexicon::BinaryFormat::Unknown => sess.fatal(\"binary format is unknown\"),\n+    };\n+    let architecture = match triple.architecture {\n+        target_lexicon::Architecture::I386\n+        | target_lexicon::Architecture::I586\n+        | target_lexicon::Architecture::I686 => object::Architecture::I386,\n+        target_lexicon::Architecture::X86_64 => object::Architecture::X86_64,\n+        target_lexicon::Architecture::Arm(_) => object::Architecture::Arm,\n+        target_lexicon::Architecture::Aarch64(_) => object::Architecture::Aarch64,\n+        architecture => sess.fatal(&format!(\n+            \"target architecture {:?} is unsupported\",\n+            architecture,\n+        ))\n+    };\n+    let endian = match triple.endianness().unwrap() {\n+        target_lexicon::Endianness::Little => object::Endianness::Little,\n+        target_lexicon::Endianness::Big => object::Endianness::Big,\n+    };\n+\n+    let mut metadata_object = object::write::Object::new(binary_format, architecture, endian);\n     metadata_object.add_file_symbol(name.as_bytes().to_vec());\n     f(&mut metadata_object);\n     metadata_object.write().unwrap()\n@@ -124,7 +148,7 @@ pub(crate) fn make_module(sess: &Session, name: String) -> Module<Backend> {\n             crate::build_isa(sess, true),\n             name + \".o\",\n             cranelift_module::default_libcall_names(),\n-        ),\n+        ).unwrap(),\n     );\n     module\n }"}]}