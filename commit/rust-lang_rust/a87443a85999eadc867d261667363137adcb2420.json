{"sha": "a87443a85999eadc867d261667363137adcb2420", "node_id": "C_kwDOAAsO6NoAKGE4NzQ0M2E4NTk5OWVhZGM4NjdkMjYxNjY3MzYzMTM3YWRjYjI0MjA", "commit": {"author": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-02-16T19:18:14Z"}, "committer": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-02-23T10:57:13Z"}, "message": "Emit `map_unit_fn` lint in closure case", "tree": {"sha": "8de53158770a5f80108e22eabb7b42e51e6200da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8de53158770a5f80108e22eabb7b42e51e6200da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a87443a85999eadc867d261667363137adcb2420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a87443a85999eadc867d261667363137adcb2420", "html_url": "https://github.com/rust-lang/rust/commit/a87443a85999eadc867d261667363137adcb2420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a87443a85999eadc867d261667363137adcb2420/comments", "author": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd7d1087998ef692e46520d0ceb56a0eb5fd7a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd7d1087998ef692e46520d0ceb56a0eb5fd7a6", "html_url": "https://github.com/rust-lang/rust/commit/ddd7d1087998ef692e46520d0ceb56a0eb5fd7a6"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "62e8b4fe9e4a2073b7763ceb5174fc1117d34b4f", "filename": "compiler/rustc_lint/src/map_unit_fn.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a87443a85999eadc867d261667363137adcb2420/compiler%2Frustc_lint%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a87443a85999eadc867d261667363137adcb2420/compiler%2Frustc_lint%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fmap_unit_fn.rs?ref=a87443a85999eadc867d261667363137adcb2420", "patch": "@@ -72,6 +72,22 @@ impl<'tcx> LateLintPass<'tcx> for MapUnitFn {\n                                 },\n                             )\n                         }\n+                    } else if let ty::Closure(id, subs) = arg_ty.kind() {\n+                        let cl_ty = subs.as_closure().sig();\n+                        let ret_ty = cl_ty.output().skip_binder();\n+                        if is_unit_type(ret_ty) {\n+                            cx.emit_spanned_lint(\n+                                MAP_UNIT_FN,\n+                                span,\n+                                MappingToUnit {\n+                                    function_label: cx.tcx.span_of_impl(*id).unwrap(),\n+                                    argument_label: args[0].span,\n+                                    map_label: arg_ty.default_span(cx.tcx),\n+                                    suggestion: path.ident.span,\n+                                    replace: \"for_each\".to_string(),\n+                                },\n+                            )\n+                        }\n                     }\n                 }\n             }"}]}