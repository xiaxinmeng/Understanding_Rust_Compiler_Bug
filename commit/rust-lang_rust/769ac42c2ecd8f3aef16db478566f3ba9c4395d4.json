{"sha": "769ac42c2ecd8f3aef16db478566f3ba9c4395d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OWFjNDJjMmVjZDhmM2FlZjE2ZGI0Nzg1NjZmM2JhOWM0Mzk1ZDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-26T07:36:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-26T07:36:03Z"}, "message": "Auto merge of #33099 - eddyb:issue-33096, r=michaelwoerister\n\nNormalize types before using them in debuginfo.\n\nSmall oversight, fixes #33096 - odd thing is that the old code doesn't look like it should've ever worked, although it wasn't using all of the type parameters, so maybe that's what changed.", "tree": {"sha": "057c12ee9d3a20fd617d4f762dc5f5224aa5e508", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/057c12ee9d3a20fd617d4f762dc5f5224aa5e508"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/769ac42c2ecd8f3aef16db478566f3ba9c4395d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/769ac42c2ecd8f3aef16db478566f3ba9c4395d4", "html_url": "https://github.com/rust-lang/rust/commit/769ac42c2ecd8f3aef16db478566f3ba9c4395d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/769ac42c2ecd8f3aef16db478566f3ba9c4395d4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41028def11c2d72e7ba32386cf8d15ec8b8849b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/41028def11c2d72e7ba32386cf8d15ec8b8849b8", "html_url": "https://github.com/rust-lang/rust/commit/41028def11c2d72e7ba32386cf8d15ec8b8849b8"}, {"sha": "4e1cf9a8ef481eccdc55387382e33c94d8e0366b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1cf9a8ef481eccdc55387382e33c94d8e0366b", "html_url": "https://github.com/rust-lang/rust/commit/4e1cf9a8ef481eccdc55387382e33c94d8e0366b"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "dac593b7509e0749c25d5d9121389883a821280c", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/769ac42c2ecd8f3aef16db478566f3ba9c4395d4/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769ac42c2ecd8f3aef16db478566f3ba9c4395d4/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=769ac42c2ecd8f3aef16db478566f3ba9c4395d4", "patch": "@@ -34,6 +34,7 @@ use rustc::hir;\n use abi::Abi;\n use common::{NodeIdAndSpan, CrateContext, FunctionContext, Block, BlockAndBuilder};\n use monomorphize::Instance;\n+use rustc::infer::normalize_associated_type;\n use rustc::ty::{self, Ty};\n use session::config::{self, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n use util::nodemap::{DefIdMap, NodeMap, FnvHashMap, FnvHashSet};\n@@ -368,6 +369,7 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n \n         name_to_append_suffix_to.push('<');\n         for (i, &actual_type) in actual_types.iter().enumerate() {\n+            let actual_type = normalize_associated_type(cx.tcx(), &actual_type);\n             // Add actual type name to <...> clause of function name\n             let actual_type_name = compute_debuginfo_type_name(cx,\n                                                                actual_type,\n@@ -383,7 +385,7 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n         // Again, only create type information if full debuginfo is enabled\n         let template_params: Vec<_> = if cx.sess().opts.debuginfo == FullDebugInfo {\n             generics.types.as_slice().iter().enumerate().map(|(i, param)| {\n-                let actual_type = actual_types[i];\n+                let actual_type = normalize_associated_type(cx.tcx(), &actual_types[i]);\n                 let actual_type_metadata = type_metadata(cx, actual_type, codemap::DUMMY_SP);\n                 let name = CString::new(param.name.as_str().as_bytes()).unwrap();\n                 unsafe {"}, {"sha": "c3cf008c82515989f76ca0e77cb05555984314ad", "filename": "src/test/run-pass/issue-33096.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/769ac42c2ecd8f3aef16db478566f3ba9c4395d4/src%2Ftest%2Frun-pass%2Fissue-33096.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769ac42c2ecd8f3aef16db478566f3ba9c4395d4/src%2Ftest%2Frun-pass%2Fissue-33096.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-33096.rs?ref=769ac42c2ecd8f3aef16db478566f3ba9c4395d4", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -g\n+\n+use std::ops::Deref;\n+\n+trait Foo {\n+    fn foo() {}\n+}\n+\n+impl Foo for u8 {}\n+\n+fn bar<T: Deref>() where T::Target: Foo {\n+    <<T as Deref>::Target as Foo>::foo()\n+}\n+\n+fn main() {\n+    bar::<&u8>();\n+}"}]}