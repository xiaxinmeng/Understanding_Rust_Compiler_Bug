{"sha": "e00922d113e5f998893419dedae511043890f9fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMDkyMmQxMTNlNWY5OTg4OTM0MTlkZWRhZTUxMTA0Mzg5MGY5ZmE=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-10T00:08:49Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-17T20:24:38Z"}, "message": "ra_syntax: SyntaxError::range() now returns by value", "tree": {"sha": "28d53fc6b80febc9cca5d4ad8d95a2b471ec812d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28d53fc6b80febc9cca5d4ad8d95a2b471ec812d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e00922d113e5f998893419dedae511043890f9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e00922d113e5f998893419dedae511043890f9fa", "html_url": "https://github.com/rust-lang/rust/commit/e00922d113e5f998893419dedae511043890f9fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e00922d113e5f998893419dedae511043890f9fa/comments", "author": null, "committer": null, "parents": [{"sha": "acdab6f0f232913da44fca085e2f508d53982ab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/acdab6f0f232913da44fca085e2f508d53982ab6", "html_url": "https://github.com/rust-lang/rust/commit/acdab6f0f232913da44fca085e2f508d53982ab6"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "82596c665cb180cca53cda913790f105af549472", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=e00922d113e5f998893419dedae511043890f9fa", "patch": "@@ -29,7 +29,7 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n     let mut res = Vec::new();\n \n     res.extend(parse.errors().iter().map(|err| Diagnostic {\n-        range: *err.range(),\n+        range: err.range(),\n         message: format!(\"Syntax Error: {}\", err),\n         severity: Severity::Error,\n         fix: None,"}, {"sha": "4faeeab45f4b70c66079fe022ce5a6e6e89ca249", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=e00922d113e5f998893419dedae511043890f9fa", "patch": "@@ -180,7 +180,7 @@ fn merge_errors(\n     }\n     res.extend(new_errors.into_iter().map(|new_err| {\n         // fighting borrow checker with a variable ;)\n-        let offseted_range = *new_err.range() + range_before_reparse.start();\n+        let offseted_range = new_err.range() + range_before_reparse.start();\n         new_err.with_range(offseted_range)\n     }));\n     res"}, {"sha": "af4584e66634f1fc67c0e4be28881bdd2a13899e", "filename": "crates/ra_syntax/src/syntax_error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs?ref=e00922d113e5f998893419dedae511043890f9fa", "patch": "@@ -30,8 +30,8 @@ impl SyntaxError {\n     pub fn message(&self) -> &str {\n         &self.0\n     }\n-    pub fn range(&self) -> &TextRange {\n-        &self.1\n+    pub fn range(&self) -> TextRange {\n+        self.1\n     }\n \n     pub fn with_range(mut self, range: TextRange) -> Self {"}, {"sha": "912e6aec0e548d39aca3bcb3b0f39b376d6c28a4", "filename": "crates/ra_syntax/src/tests.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00922d113e5f998893419dedae511043890f9fa/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ftests.rs?ref=e00922d113e5f998893419dedae511043890f9fa", "patch": "@@ -128,14 +128,8 @@ fn dump_tokens_and_errors(tokens: &[Token], errors: &[SyntaxError], text: &str)\n         writeln!(acc, \"{:?} {} {:?}\", token.kind, token_len, token_text).unwrap();\n     }\n     for err in errors {\n-        writeln!(\n-            acc,\n-            \"> error{:?} token({:?}) msg({})\",\n-            err.range(),\n-            &text[*err.range()],\n-            err.message()\n-        )\n-        .unwrap();\n+        writeln!(acc, \"> error{:?} token({:?}) msg({})\", err.range(), &text[err.range()], err)\n+            .unwrap();\n     }\n     acc\n }"}]}