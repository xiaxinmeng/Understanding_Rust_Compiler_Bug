{"sha": "632d8909a0dbf1c8f2569987b24d36dc013ed5e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMmQ4OTA5YTBkYmYxYzhmMjU2OTk4N2IyNGQzNmRjMDEzZWQ1ZTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-12T09:55:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-12T09:55:05Z"}, "message": "Rollup merge of #57434 - nnethercote:rm-CrateNum-Invalid, r=petrochenkov\n\nRemove `CrateNum::Invalid`.\n\nIt's unused.", "tree": {"sha": "59bb0472525a4bc895123858047ece6616ae0c89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59bb0472525a4bc895123858047ece6616ae0c89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/632d8909a0dbf1c8f2569987b24d36dc013ed5e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcObl5CRBK7hj4Ov3rIwAAdHIIAHpmYT69ziF3nzGosFgyVCyI\nK8FrTYQfu2WoCuaSTKF6DQ3y1qSTIEUqYw/RDani0Su5zpeXr1j9L+QGKXMdFUA7\n+QJ0+5gWQLLErm3wd13mGdd1NlkagYEUQK+mlUjHFt+TB6OiWJMv6mIpthZNfVb1\njgNX2SR17OaonnmCUjSbsIfAViWj2Zd+Ps7Y64CrxqLttkOn4PHYL9dTfialukBf\nqSYSyGJlkpk6LPM1BvnRkCr0f5dMcTPFU3HZFQO+dxZ/u86TOmD46mbomz6raXd+\nX5ejDhCtzbnqOFxuirOwmdR7HRwtDUN418Ou5REK9Y3cGHVcuk0R+vI+tNn2HbA=\n=gCHE\n-----END PGP SIGNATURE-----\n", "payload": "tree 59bb0472525a4bc895123858047ece6616ae0c89\nparent a9c9a2c0484ceb8f6e8d6dc5cfa7b54e75f0019f\nparent 8780ebff1f7468f0be64b81f81b72bce1301433a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547286905 +0100\ncommitter GitHub <noreply@github.com> 1547286905 +0100\n\nRollup merge of #57434 - nnethercote:rm-CrateNum-Invalid, r=petrochenkov\n\nRemove `CrateNum::Invalid`.\n\nIt's unused.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/632d8909a0dbf1c8f2569987b24d36dc013ed5e8", "html_url": "https://github.com/rust-lang/rust/commit/632d8909a0dbf1c8f2569987b24d36dc013ed5e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/632d8909a0dbf1c8f2569987b24d36dc013ed5e8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9c9a2c0484ceb8f6e8d6dc5cfa7b54e75f0019f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c9a2c0484ceb8f6e8d6dc5cfa7b54e75f0019f", "html_url": "https://github.com/rust-lang/rust/commit/a9c9a2c0484ceb8f6e8d6dc5cfa7b54e75f0019f"}, {"sha": "8780ebff1f7468f0be64b81f81b72bce1301433a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8780ebff1f7468f0be64b81f81b72bce1301433a", "html_url": "https://github.com/rust-lang/rust/commit/8780ebff1f7468f0be64b81f81b72bce1301433a"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "0a8c72a0ad8ec9f49059048a58ec565b7230c90f", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/632d8909a0dbf1c8f2569987b24d36dc013ed5e8/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/632d8909a0dbf1c8f2569987b24d36dc013ed5e8/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=632d8909a0dbf1c8f2569987b24d36dc013ed5e8", "patch": "@@ -17,8 +17,6 @@ pub enum CrateNum {\n     // FIXME(jseyfried): this is also used for custom derives until proc-macro crates get\n     // `CrateNum`s.\n     BuiltinMacros,\n-    /// A CrateNum value that indicates that something is wrong.\n-    Invalid,\n     /// A special CrateNum that we use for the tcx.rcache when decoding from\n     /// the incr. comp. cache.\n     ReservedForIncrCompCache,\n@@ -29,7 +27,6 @@ impl ::std::fmt::Debug for CrateNum {\n     fn fmt(&self, fmt: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {\n         match self {\n             CrateNum::Index(id) => write!(fmt, \"crate{}\", id.private),\n-            CrateNum::Invalid => write!(fmt, \"invalid crate\"),\n             CrateNum::BuiltinMacros => write!(fmt, \"builtin macros crate\"),\n             CrateNum::ReservedForIncrCompCache => write!(fmt, \"crate for decoding incr comp cache\"),\n         }\n@@ -90,7 +87,6 @@ impl fmt::Display for CrateNum {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {\n             CrateNum::Index(id) => fmt::Display::fmt(&id.private, f),\n-            CrateNum::Invalid => write!(f, \"invalid crate\"),\n             CrateNum::BuiltinMacros => write!(f, \"builtin macros crate\"),\n             CrateNum::ReservedForIncrCompCache => write!(f, \"crate for decoding incr comp cache\"),\n         }"}]}