{"sha": "3a65e4e75a067e0ff207057766171a48961bb8f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNjVlNGU3NWEwNjdlMGZmMjA3MDU3NzY2MTcxYTQ4OTYxYmI4ZjU=", "commit": {"author": {"name": "Jeremy Stucki", "email": "jeremy@myelin.ch", "date": "2019-08-12T18:35:50Z"}, "committer": {"name": "Jeremy Stucki", "email": "jeremy@myelin.ch", "date": "2019-08-12T19:29:33Z"}, "message": "Minor refactoring", "tree": {"sha": "1099e151a2f8f38673fa962d90ac61a830c7efb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1099e151a2f8f38673fa962d90ac61a830c7efb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a65e4e75a067e0ff207057766171a48961bb8f5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCAAdFiEENfZy0Nd1FLYaZCRY7vypMUgEJlUFAl1RviEACgkQ7vypMUgE\nJlU/Ug/3aUa3VFW4VHO1Ac48xUnTrwSu8wglmvaZrG1uSU+C1oB/Tf0C/P6ijR+z\nDrbFf5WdaHjuYExdhW99W1LahrN98nHo9SilV3OF652Gmw5JRWukrxG/g38qAjke\nXSKg1QgImwIvRA44MnYGJGqi0CZgUDhjAkuUNNURYSzIT6yBRZGZF5JGdf4zVsaH\ni8CQKmYfvAyG60obHg59oSLcVpAoIM/h2BOX8paErgPLK4mTN7nfLUXQe0nIpRT0\n1n6VUkd8yzpF1QrqVdJCWzV9FtgaRM9j1D2slAmvKk9KEkxEmpiNQgyRTSlc1vr/\nnuVZZp7vJ5mcWDiZDWWlDf0feG9SL8IMW1k8ksq+Hpr2d323GlFPIJHEg356SEtH\nL1raGwshMBWyH2V7vOyO7Z1f6ibrH9gXDVdz6ZT3hOziZ515g0bM/slZ3gmMksMb\n0aw3hrFmQ5A+usHeVachpNFFIyp3pBy/Ectst2wuGkOakQqA13lYn6v53/TiQ7Jn\nrZFa93A36YLx6OIrRMuiTUlwk427YQNVnrCzEKEKU0/WfQ72zXW+L+IBe++BEeGE\nUSFlGKPTCr4qdB1cofsx+JqSvvTnK8HggKbBLRCqysrljzRGnpIsAgQGH6/iTTVX\nBPWfB0x7/RrX0o0kVestj/SvAbbm2lLJG9CoU7YCHlOla6YmLQ==\n=Utu7\n-----END PGP SIGNATURE-----", "payload": "tree 1099e151a2f8f38673fa962d90ac61a830c7efb3\nparent 09e9568c266a17ec398242cb85b454bdaf5f5e4c\nauthor Jeremy Stucki <jeremy@myelin.ch> 1565634950 +0200\ncommitter Jeremy Stucki <jeremy@myelin.ch> 1565638173 +0200\n\nMinor refactoring\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a65e4e75a067e0ff207057766171a48961bb8f5", "html_url": "https://github.com/rust-lang/rust/commit/3a65e4e75a067e0ff207057766171a48961bb8f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a65e4e75a067e0ff207057766171a48961bb8f5/comments", "author": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09e9568c266a17ec398242cb85b454bdaf5f5e4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/09e9568c266a17ec398242cb85b454bdaf5f5e4c", "html_url": "https://github.com/rust-lang/rust/commit/09e9568c266a17ec398242cb85b454bdaf5f5e4c"}], "stats": {"total": 49, "additions": 22, "deletions": 27}, "files": [{"sha": "431053846f72ecce6749bcc3cdc4a000696e64da", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 22, "deletions": 27, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/3a65e4e75a067e0ff207057766171a48961bb8f5/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a65e4e75a067e0ff207057766171a48961bb8f5/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3a65e4e75a067e0ff207057766171a48961bb8f5", "patch": "@@ -2172,42 +2172,37 @@ fn lint_flat_map_identity<'a, 'tcx>(\n     expr: &'tcx hir::Expr,\n     flat_map_args: &'tcx [hir::Expr],\n ) {\n-    if_chain! {\n-        if match_trait_method(cx, expr, &paths::ITERATOR);\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+        let arg_node = &flat_map_args[1].node;\n \n-        if flat_map_args.len() == 2;\n+        let apply_lint = |message: &str| {\n+            span_lint(cx, FLAT_MAP_IDENTITY, expr.span, message);\n+        };\n \n-        then {\n-            if_chain! {\n-                if let hir::ExprKind::Closure(_, _, body_id, _, _) = flat_map_args[1].node;\n-                let body = cx.tcx.hir().body(body_id);\n+        if_chain! {\n+            if let hir::ExprKind::Closure(_, _, body_id, _, _) = arg_node;\n+            let body = cx.tcx.hir().body(*body_id);\n \n-                if body.arguments.len() == 1;\n-                if let hir::PatKind::Binding(_, _, binding_ident, _) = body.arguments[0].pat.node;\n-                if let hir::ExprKind::Path(hir::QPath::Resolved(_, ref path)) = body.value.node;\n+            if let hir::PatKind::Binding(_, _, binding_ident, _) = body.arguments[0].pat.node;\n+            if let hir::ExprKind::Path(hir::QPath::Resolved(_, ref path)) = body.value.node;\n \n-                if path.segments.len() == 1;\n-                if path.segments[0].ident.as_str() == binding_ident.as_str();\n+            if path.segments.len() == 1;\n+            if path.segments[0].ident.as_str() == binding_ident.as_str();\n \n-                then {\n-                    let msg = \"called `flat_map(|x| x)` on an `Iterator`. \\\n-                               This can be simplified by calling `flatten().`\";\n-                    span_lint(cx, FLAT_MAP_IDENTITY, expr.span, msg);\n-                }\n+            then {\n+                apply_lint(\"called `flat_map(|x| x)` on an `Iterator`. \\\n+                            This can be simplified by calling `flatten().`\");\n             }\n+        }\n \n-            if_chain! {\n-                let expr = &flat_map_args[1];\n-\n-                if let hir::ExprKind::Path(ref qpath) = expr.node;\n+        if_chain! {\n+            if let hir::ExprKind::Path(ref qpath) = arg_node;\n \n-                if match_qpath(qpath, &paths::STD_CONVERT_IDENTITY);\n+            if match_qpath(qpath, &paths::STD_CONVERT_IDENTITY);\n \n-                then {\n-                    let msg = \"called `flat_map(std::convert::identity)` on an `Iterator`. \\\n-                               This can be simplified by calling `flatten().`\";\n-                    span_lint(cx, FLAT_MAP_IDENTITY, expr.span, msg);\n-                }\n+            then {\n+                apply_lint(\"called `flat_map(std::convert::identity)` on an `Iterator`. \\\n+                            This can be simplified by calling `flatten().`\");\n             }\n         }\n     }"}]}