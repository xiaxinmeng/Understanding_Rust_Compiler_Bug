{"sha": "a8558e9efabc6640e8c1b1c353e62c233624f616", "node_id": "C_kwDOAAsO6NoAKGE4NTU4ZTllZmFiYzY2NDBlOGMxYjFjMzUzZTYyYzIzMzYyNGY2MTY", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-09-30T03:33:12Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2021-10-13T23:26:01Z"}, "message": "Exit early if expected type is not an adt", "tree": {"sha": "b30059d5af55d00bee8162b0a4d703aaa01a87de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b30059d5af55d00bee8162b0a4d703aaa01a87de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8558e9efabc6640e8c1b1c353e62c233624f616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8558e9efabc6640e8c1b1c353e62c233624f616", "html_url": "https://github.com/rust-lang/rust/commit/a8558e9efabc6640e8c1b1c353e62c233624f616", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8558e9efabc6640e8c1b1c353e62c233624f616/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "156c9222f52acb1a842ffc2d6e814fca8937cbf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/156c9222f52acb1a842ffc2d6e814fca8937cbf0", "html_url": "https://github.com/rust-lang/rust/commit/156c9222f52acb1a842ffc2d6e814fca8937cbf0"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "339c46616a590b944c01528381c3b174a1b299f5", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a8558e9efabc6640e8c1b1c353e62c233624f616/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8558e9efabc6640e8c1b1c353e62c233624f616/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=a8558e9efabc6640e8c1b1c353e62c233624f616", "patch": "@@ -364,11 +364,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return false;\n         }\n         let pin_did = self.tcx.lang_items().pin_type();\n+        // This guards the `unwrap` and `mk_box` below.\n+        if pin_did.is_none() || self.tcx.lang_items().owned_box().is_none() {\n+            return false;\n+        }\n         match expected.kind() {\n-            ty::Adt(def, _) if Some(def.did) != pin_did => return false,\n-            // This guards the `unwrap` and `mk_box` below.\n-            _ if pin_did.is_none() || self.tcx.lang_items().owned_box().is_none() => return false,\n-            _ => {}\n+            ty::Adt(def, _) if Some(def.did) == pin_did => (),\n+            _ => return false,\n         }\n         let box_found = self.tcx.mk_box(found);\n         let pin_box_found = self.tcx.mk_lang_item(box_found, LangItem::Pin).unwrap();"}]}