{"sha": "4cf59304c1e112c3b0fbedc6034b2a469fb9fce8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZjU5MzA0YzFlMTEyYzNiMGZiZWRjNjAzNGIyYTQ2OWZiOWZjZTg=", "commit": {"author": {"name": "\u0141ukasz Niemier", "email": "lukasz@niemier.pl", "date": "2015-04-07T18:35:54Z"}, "committer": {"name": "\u0141ukasz Niemier", "email": "lukasz@niemier.pl", "date": "2015-04-07T18:35:54Z"}, "message": "Remove incorrect example from docs", "tree": {"sha": "42c84b2a4b87da25623122daf4505fc657f1e3a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42c84b2a4b87da25623122daf4505fc657f1e3a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8", "html_url": "https://github.com/rust-lang/rust/commit/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8/comments", "author": {"login": "hauleth", "id": 291639, "node_id": "MDQ6VXNlcjI5MTYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hauleth", "html_url": "https://github.com/hauleth", "followers_url": "https://api.github.com/users/hauleth/followers", "following_url": "https://api.github.com/users/hauleth/following{/other_user}", "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}", "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions", "organizations_url": "https://api.github.com/users/hauleth/orgs", "repos_url": "https://api.github.com/users/hauleth/repos", "events_url": "https://api.github.com/users/hauleth/events{/privacy}", "received_events_url": "https://api.github.com/users/hauleth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hauleth", "id": 291639, "node_id": "MDQ6VXNlcjI5MTYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hauleth", "html_url": "https://github.com/hauleth", "followers_url": "https://api.github.com/users/hauleth/followers", "following_url": "https://api.github.com/users/hauleth/following{/other_user}", "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}", "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions", "organizations_url": "https://api.github.com/users/hauleth/orgs", "repos_url": "https://api.github.com/users/hauleth/repos", "events_url": "https://api.github.com/users/hauleth/events{/privacy}", "received_events_url": "https://api.github.com/users/hauleth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b41f2df4ca92e9ab816d9b6649c0fc5df9e9d213", "url": "https://api.github.com/repos/rust-lang/rust/commits/b41f2df4ca92e9ab816d9b6649c0fc5df9e9d213", "html_url": "https://github.com/rust-lang/rust/commit/b41f2df4ca92e9ab816d9b6649c0fc5df9e9d213"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "a955f88164c4ffd57f33aa1ce1a5fe0bc19083cf", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cf59304c1e112c3b0fbedc6034b2a469fb9fce8/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=4cf59304c1e112c3b0fbedc6034b2a469fb9fce8", "patch": "@@ -113,32 +113,6 @@\n //! rx.recv().unwrap();\n //! ```\n //!\n-//! Reading from a channel with a timeout requires to use a Timer together\n-//! with the channel. You can use the `select!` macro to select either and\n-//! handle the timeout case. This first example will break out of the loop\n-//! after 10 seconds no matter what:\n-//!\n-//! ```no_run\n-//! # #![feature(std_misc, old_io)]\n-//! use std::sync::mpsc::channel;\n-//! use std::old_io::timer::Timer;\n-//! use std::time::Duration;\n-//!\n-//! let (tx, rx) = channel::<i32>();\n-//! let mut timer = Timer::new().unwrap();\n-//! let timeout = timer.oneshot(Duration::seconds(10));\n-//!\n-//! loop {\n-//!     select! {\n-//!         val = rx.recv() => println!(\"Received {}\", val.unwrap()),\n-//!         _ = timeout.recv() => {\n-//!             println!(\"timed out, total time was more than 10 seconds\");\n-//!             break;\n-//!         }\n-//!     }\n-//! }\n-//! ```\n-//!\n //! This second example is more costly since it allocates a new timer every\n //! time a message is received, but it allows you to timeout after the channel\n //! has been inactive for 5 seconds:"}]}