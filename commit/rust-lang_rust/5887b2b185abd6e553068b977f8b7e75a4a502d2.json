{"sha": "5887b2b185abd6e553068b977f8b7e75a4a502d2", "node_id": "C_kwDOAAsO6NoAKDU4ODdiMmIxODVhYmQ2ZTU1MzA2OGI5NzdmOGI3ZTc1YTRhNTAyZDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T10:43:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T10:43:48Z"}, "message": "Auto merge of #2115 - rust-lang:comment_nit, r=oli-obk\n\nUpdate a path to libstd source in our comments\n\nTaken from review in https://github.com/rust-lang/miri/pull/2101", "tree": {"sha": "0c9ff0bbfdec11cb0567bcfae927087e27b82b7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c9ff0bbfdec11cb0567bcfae927087e27b82b7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5887b2b185abd6e553068b977f8b7e75a4a502d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5887b2b185abd6e553068b977f8b7e75a4a502d2", "html_url": "https://github.com/rust-lang/rust/commit/5887b2b185abd6e553068b977f8b7e75a4a502d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5887b2b185abd6e553068b977f8b7e75a4a502d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84a976a771f971d53b980ac3a950e2fe5f85f6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84a976a771f971d53b980ac3a950e2fe5f85f6e", "html_url": "https://github.com/rust-lang/rust/commit/f84a976a771f971d53b980ac3a950e2fe5f85f6e"}, {"sha": "0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66", "html_url": "https://github.com/rust-lang/rust/commit/0ee9d3d047ab3c23c1f87e5c58a0a3e64a3dfe66"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "66ba793b98ccbcfb5d7720b84b76745c989d7913", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5887b2b185abd6e553068b977f8b7e75a4a502d2/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5887b2b185abd6e553068b977f8b7e75a4a502d2/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=5887b2b185abd6e553068b977f8b7e75a4a502d2", "patch": "@@ -42,7 +42,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     /// Returns the minimum alignment for the target architecture for allocations of the given size.\n     fn min_align(&self, size: u64, kind: MiriMemoryKind) -> Align {\n         let this = self.eval_context_ref();\n-        // List taken from `libstd/sys_common/alloc.rs`.\n+        // List taken from `library/std/src/sys/common/alloc.rs`.\n+        // This list should be kept in sync with the one from libstd.\n         let min_align = match this.tcx.sess.target.arch.as_ref() {\n             \"x86\" | \"arm\" | \"mips\" | \"powerpc\" | \"powerpc64\" | \"asmjs\" | \"wasm32\" => 8,\n             \"x86_64\" | \"aarch64\" | \"mips64\" | \"s390x\" | \"sparc64\" => 16,"}]}