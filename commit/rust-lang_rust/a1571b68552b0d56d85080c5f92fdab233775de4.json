{"sha": "a1571b68552b0d56d85080c5f92fdab233775de4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNTcxYjY4NTUyYjBkNTZkODUwODBjNWY5MmZkYWIyMzM3NzVkZTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-11T12:14:30Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-07T12:59:13Z"}, "message": "syntax::attr: remove usage of lexer", "tree": {"sha": "f98a9e52d3a8771fb83981ed79d9ed6207b7d5b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f98a9e52d3a8771fb83981ed79d9ed6207b7d5b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1571b68552b0d56d85080c5f92fdab233775de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1571b68552b0d56d85080c5f92fdab233775de4", "html_url": "https://github.com/rust-lang/rust/commit/a1571b68552b0d56d85080c5f92fdab233775de4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1571b68552b0d56d85080c5f92fdab233775de4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "255b12a8d3ef3639b4b389fc56d93bd80f03d087", "url": "https://api.github.com/repos/rust-lang/rust/commits/255b12a8d3ef3639b4b389fc56d93bd80f03d087", "html_url": "https://github.com/rust-lang/rust/commit/255b12a8d3ef3639b4b389fc56d93bd80f03d087"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "c639431794c500d070706f662999e1975d657b23", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1571b68552b0d56d85080c5f92fdab233775de4/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1571b68552b0d56d85080c5f92fdab233775de4/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=a1571b68552b0d56d85080c5f92fdab233775de4", "patch": "@@ -14,7 +14,6 @@ use crate::ast::{MetaItem, MetaItemKind, NestedMetaItem};\n use crate::ast::{Lit, LitKind, Expr, Item, Local, Stmt, StmtKind, GenericParam};\n use crate::mut_visit::visit_clobber;\n use crate::source_map::{BytePos, Spanned};\n-use crate::parse::lexer::comments::doc_comment_style;\n use crate::parse;\n use crate::token::{self, Token};\n use crate::ptr::P;\n@@ -401,11 +400,11 @@ pub fn mk_attr_outer(item: MetaItem) -> Attribute {\n     mk_attr(AttrStyle::Outer, item.path, item.kind.tokens(item.span), item.span)\n }\n \n-pub fn mk_doc_comment(comment: Symbol, span: Span) -> Attribute {\n+pub fn mk_doc_comment(style: AttrStyle, comment: Symbol, span: Span) -> Attribute {\n     Attribute {\n         kind: AttrKind::DocComment(comment),\n         id: mk_attr_id(),\n-        style: doc_comment_style(&comment.as_str()),\n+        style,\n         span,\n     }\n }"}, {"sha": "920e7a521ef74e8f27732f5bcdf0e74594c0b6f6", "filename": "src/libsyntax/parse/parser/attr.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a1571b68552b0d56d85080c5f92fdab233775de4/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1571b68552b0d56d85080c5f92fdab233775de4/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs?ref=a1571b68552b0d56d85080c5f92fdab233775de4", "patch": "@@ -1,10 +1,12 @@\n use super::{SeqSep, Parser, TokenType, PathStyle};\n use crate::attr;\n use crate::ast;\n+use crate::parse::lexer::comments;\n use crate::token::{self, Nonterminal, DelimToken};\n use crate::tokenstream::{TokenStream, TokenTree};\n use crate::source_map::Span;\n \n+use syntax_pos::Symbol;\n use errors::PResult;\n \n use log::debug;\n@@ -45,7 +47,7 @@ impl<'a> Parser<'a> {\n                     just_parsed_doc_comment = false;\n                 }\n                 token::DocComment(s) => {\n-                    let attr = attr::mk_doc_comment(s, self.token.span);\n+                    let attr = self.mk_doc_comment(s);\n                     if attr.style != ast::AttrStyle::Outer {\n                         let mut err = self.fatal(\"expected outer doc comment\");\n                         err.note(\"inner doc comments like this (starting with \\\n@@ -62,6 +64,11 @@ impl<'a> Parser<'a> {\n         Ok(attrs)\n     }\n \n+    fn mk_doc_comment(&self, s: Symbol) -> ast::Attribute {\n+        let style = comments::doc_comment_style(&s.as_str());\n+        attr::mk_doc_comment(style, s, self.token.span)\n+    }\n+\n     /// Matches `attribute = # ! [ meta_item ]`.\n     ///\n     /// If `permit_inner` is `true`, then a leading `!` indicates an inner\n@@ -230,7 +237,7 @@ impl<'a> Parser<'a> {\n                 }\n                 token::DocComment(s) => {\n                     // We need to get the position of this token before we bump.\n-                    let attr = attr::mk_doc_comment(s, self.token.span);\n+                    let attr = self.mk_doc_comment(s);\n                     if attr.style == ast::AttrStyle::Inner {\n                         attrs.push(attr);\n                         self.bump();"}]}