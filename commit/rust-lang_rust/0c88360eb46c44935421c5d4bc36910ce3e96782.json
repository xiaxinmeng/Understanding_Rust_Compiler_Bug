{"sha": "0c88360eb46c44935421c5d4bc36910ce3e96782", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjODgzNjBlYjQ2YzQ0OTM1NDIxYzVkNGJjMzY5MTBjZTNlOTY3ODI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T17:47:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T18:01:41Z"}, "message": "add comment", "tree": {"sha": "d997e64093f919bee3cbaae766b3e1fa2e44096e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d997e64093f919bee3cbaae766b3e1fa2e44096e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c88360eb46c44935421c5d4bc36910ce3e96782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c88360eb46c44935421c5d4bc36910ce3e96782", "html_url": "https://github.com/rust-lang/rust/commit/0c88360eb46c44935421c5d4bc36910ce3e96782", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c88360eb46c44935421c5d4bc36910ce3e96782/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13301f284c63440d3354f74b51cb5a504d1e6eef", "url": "https://api.github.com/repos/rust-lang/rust/commits/13301f284c63440d3354f74b51cb5a504d1e6eef", "html_url": "https://github.com/rust-lang/rust/commit/13301f284c63440d3354f74b51cb5a504d1e6eef"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "45747e21d4dc479a54ad67f12a0c94c465ed5ea1", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0c88360eb46c44935421c5d4bc36910ce3e96782/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c88360eb46c44935421c5d4bc36910ce3e96782/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=0c88360eb46c44935421c5d4bc36910ce3e96782", "patch": "@@ -16,6 +16,15 @@ pub fn find_leaf_at_offset(node: &SyntaxNode, offset: TextUnit) -> LeafAtOffset<\n     }\n }\n \n+/// Finds a node of specific Ast type at offset. Note that this is slightly\n+/// impercise: if the cursor is strictly betwen two nodes of the desired type,\n+/// as in\n+///\n+/// ```no-run\n+/// struct Foo {}|struct Bar;\n+/// ```\n+///\n+/// then the left node will be silently prefered.\n pub fn find_node_at_offset<N: AstNode>(syntax: &SyntaxNode, offset: TextUnit) -> Option<&N> {\n     find_leaf_at_offset(syntax, offset).find_map(|leaf| leaf.ancestors().find_map(N::cast))\n }"}]}