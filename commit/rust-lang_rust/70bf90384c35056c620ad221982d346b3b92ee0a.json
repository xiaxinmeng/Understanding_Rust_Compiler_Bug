{"sha": "70bf90384c35056c620ad221982d346b3b92ee0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYmY5MDM4NGMzNTA1NmM2MjBhZDIyMTk4MmQzNDZiM2I5MmVlMGE=", "commit": {"author": {"name": "Levente Kurusa", "email": "lkurusa@acm.org", "date": "2018-09-26T04:43:19Z"}, "committer": {"name": "Levente Kurusa", "email": "lkurusa@acm.org", "date": "2018-09-26T04:43:19Z"}, "message": "fixup! codegen_llvm: check inline assembly constraints with LLVM", "tree": {"sha": "cf06fbd1cc3fdccf757def0e57a1fe5881624a3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf06fbd1cc3fdccf757def0e57a1fe5881624a3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70bf90384c35056c620ad221982d346b3b92ee0a", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE9aWNXk3bBSVLHV6MKNaxXmtJEmkFAlurDmcACgkQKNaxXmtJ\nEmk+8Qf/S7mLP6X80s6Dvn8htJcP49o61jFjDkLZlcBG//ilvOKAaJ+LodMAMfNB\n9ms7seB05I2+jaCFqaZZt33BEd3KYh+n6ZKAqau5skQiK+1wutzZrYrL5n6O9pMF\nH+QHag920lhRzSoLUO/5Q2aRGQfcABedfKgB7JxAnqrF9R/va5cJahzDI2do6G29\nuVKQtaypnf31Vz/C5jRIxULBQfKVtHBlXAQwR/coCact9fdbXpy0LQmH9DEI0tVg\n/eVDuYUHBOFpTc962s0eEqgGm68H7gOF7DZxw9CBPiV1aNq5F8MCOveYJXF2oZY5\nDah5qIWz+BcG2/DVw27wEsmbY+RszA==\n=voZM\n-----END PGP SIGNATURE-----", "payload": "tree cf06fbd1cc3fdccf757def0e57a1fe5881624a3d\nparent fec86c8352d57fd7764d0fa2c4975010c7de793e\nauthor Levente Kurusa <lkurusa@acm.org> 1537936999 +0200\ncommitter Levente Kurusa <lkurusa@acm.org> 1537936999 +0200\n\nfixup! codegen_llvm: check inline assembly constraints with LLVM\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70bf90384c35056c620ad221982d346b3b92ee0a", "html_url": "https://github.com/rust-lang/rust/commit/70bf90384c35056c620ad221982d346b3b92ee0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70bf90384c35056c620ad221982d346b3b92ee0a/comments", "author": {"login": "levex", "id": 849140, "node_id": "MDQ6VXNlcjg0OTE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/849140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levex", "html_url": "https://github.com/levex", "followers_url": "https://api.github.com/users/levex/followers", "following_url": "https://api.github.com/users/levex/following{/other_user}", "gists_url": "https://api.github.com/users/levex/gists{/gist_id}", "starred_url": "https://api.github.com/users/levex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levex/subscriptions", "organizations_url": "https://api.github.com/users/levex/orgs", "repos_url": "https://api.github.com/users/levex/repos", "events_url": "https://api.github.com/users/levex/events{/privacy}", "received_events_url": "https://api.github.com/users/levex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "levex", "id": 849140, "node_id": "MDQ6VXNlcjg0OTE0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/849140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levex", "html_url": "https://github.com/levex", "followers_url": "https://api.github.com/users/levex/followers", "following_url": "https://api.github.com/users/levex/following{/other_user}", "gists_url": "https://api.github.com/users/levex/gists{/gist_id}", "starred_url": "https://api.github.com/users/levex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levex/subscriptions", "organizations_url": "https://api.github.com/users/levex/orgs", "repos_url": "https://api.github.com/users/levex/repos", "events_url": "https://api.github.com/users/levex/events{/privacy}", "received_events_url": "https://api.github.com/users/levex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fec86c8352d57fd7764d0fa2c4975010c7de793e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fec86c8352d57fd7764d0fa2c4975010c7de793e", "html_url": "https://github.com/rust-lang/rust/commit/fec86c8352d57fd7764d0fa2c4975010c7de793e"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "77de88997e4903ebc0326203049a4d1756e670a7", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70bf90384c35056c620ad221982d346b3b92ee0a/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70bf90384c35056c620ad221982d346b3b92ee0a/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=70bf90384c35056c620ad221982d346b3b92ee0a", "patch": "@@ -756,7 +756,7 @@ impl Builder<'a, 'll, 'tcx> {\n             // Ask LLVM to verify that the constraints are well-formed.\n             let constraints_ok = llvm::LLVMRustInlineAsmVerify(fty, cons);\n             debug!(\"Constraint verification result: {:?}\", constraints_ok);\n-            if constraints_ok == 1 {\n+            if constraints_ok == llvm::True {\n                 let v = llvm::LLVMRustInlineAsm(\n                     fty, asm, cons, volatile, alignstack, dia);\n                 Some(self.call(v, inputs, None))"}, {"sha": "6bd41bfe16feee3d6c23e6f8fd8eb271ecc45123", "filename": "src/librustc_codegen_llvm/mir/statement.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/70bf90384c35056c620ad221982d346b3b92ee0a/src%2Flibrustc_codegen_llvm%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70bf90384c35056c620ad221982d346b3b92ee0a/src%2Flibrustc_codegen_llvm%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Fstatement.rs?ref=70bf90384c35056c620ad221982d346b3b92ee0a", "patch": "@@ -88,7 +88,8 @@ impl FunctionCx<'a, 'll, 'tcx> {\n \n                 let res = asm::codegen_inline_asm(&bx, asm, outputs, input_vals);\n                 if !res {\n-                    span_err!(bx.sess(), statement.source_info.span, E0668, \"malformed inline assembly\");\n+                    span_err!(bx.sess(), statement.source_info.span, E0668,\n+                              \"malformed inline assembly\");\n                 }\n                 bx\n             }"}]}