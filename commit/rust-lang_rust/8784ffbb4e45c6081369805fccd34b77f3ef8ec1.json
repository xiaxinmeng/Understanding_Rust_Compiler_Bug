{"sha": "8784ffbb4e45c6081369805fccd34b77f3ef8ec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ODRmZmJiNGU0NWM2MDgxMzY5ODA1ZmNjZDM0Yjc3ZjNlZjhlYzE=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-08-25T16:09:35Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-10T13:19:11Z"}, "message": "Using `read_unaligned` instead of `memcpy`.", "tree": {"sha": "6e93f016783686f19e2571f44a31f81105593156", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e93f016783686f19e2571f44a31f81105593156"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8784ffbb4e45c6081369805fccd34b77f3ef8ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8784ffbb4e45c6081369805fccd34b77f3ef8ec1", "html_url": "https://github.com/rust-lang/rust/commit/8784ffbb4e45c6081369805fccd34b77f3ef8ec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8784ffbb4e45c6081369805fccd34b77f3ef8ec1/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8783b06bd2c5165cbb356d06bbaf943fae6937a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8783b06bd2c5165cbb356d06bbaf943fae6937a2", "html_url": "https://github.com/rust-lang/rust/commit/8783b06bd2c5165cbb356d06bbaf943fae6937a2"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "039cdd8ff91be31c771f4d89a0f407f4bd47158b", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8784ffbb4e45c6081369805fccd34b77f3ef8ec1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8784ffbb4e45c6081369805fccd34b77f3ef8ec1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=8784ffbb4e45c6081369805fccd34b77f3ef8ec1", "patch": "@@ -4,7 +4,7 @@ use crate::marker::PhantomData;\n use crate::mem::{size_of, zeroed};\n use crate::os::unix::io::RawFd;\n use crate::path::Path;\n-use crate::ptr::null_mut;\n+use crate::ptr::{null_mut, read_unaligned};\n use crate::slice::from_raw_parts;\n use crate::sys::unix::ext::net::addr::{sockaddr_un, SocketAddr};\n use crate::sys::unix::net::Socket;\n@@ -131,16 +131,14 @@ impl<'a, T> Iterator for AncillaryDataIter<'a, T> {\n     type Item = T;\n \n     fn next(&mut self) -> Option<T> {\n-        unsafe {\n-            let mut unit = zeroed();\n-            if size_of::<T>() <= self.data.len() {\n-                let unit_ptr: *mut T = &mut unit;\n-                libc::memcpy(unit_ptr.cast(), self.data.as_ptr().cast(), size_of::<T>());\n+        if size_of::<T>() <= self.data.len() {\n+            unsafe {\n+                let unit = read_unaligned(self.data.as_ptr().cast());\n                 self.data = &self.data[size_of::<T>()..];\n                 Some(unit)\n-            } else {\n-                None\n             }\n+        } else {\n+            None\n         }\n     }\n }"}]}