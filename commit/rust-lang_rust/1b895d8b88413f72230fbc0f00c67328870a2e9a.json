{"sha": "1b895d8b88413f72230fbc0f00c67328870a2e9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiODk1ZDhiODg0MTNmNzIyMzBmYmMwZjAwYzY3MzI4ODcwYTJlOWE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-03T12:36:57Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-12T20:52:47Z"}, "message": "Import the `alloc` crate as `alloc_crate` in std\n\n\u2026 to make the name `alloc` available.", "tree": {"sha": "b17feb40084b23db85ca8d5e9667e0f7f0d6315f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b17feb40084b23db85ca8d5e9667e0f7f0d6315f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b895d8b88413f72230fbc0f00c67328870a2e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b895d8b88413f72230fbc0f00c67328870a2e9a", "html_url": "https://github.com/rust-lang/rust/commit/1b895d8b88413f72230fbc0f00c67328870a2e9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b895d8b88413f72230fbc0f00c67328870a2e9a/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c660cedc02e125fe47d90075837c5d8adeb4c097", "url": "https://api.github.com/repos/rust-lang/rust/commits/c660cedc02e125fe47d90075837c5d8adeb4c097", "html_url": "https://github.com/rust-lang/rust/commit/c660cedc02e125fe47d90075837c5d8adeb4c097"}], "stats": {"total": 74, "additions": 34, "deletions": 40}, "files": [{"sha": "73a5df8dc285ffb29fb8c0267191fe4d258329a1", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -11,15 +11,13 @@\n use self::Entry::*;\n use self::VacantEntryState::*;\n \n-use alloc::heap::Heap;\n-use alloc::allocator::CollectionAllocErr;\n use cell::Cell;\n-use core::heap::Alloc;\n use borrow::Borrow;\n use cmp::max;\n use fmt::{self, Debug};\n #[allow(deprecated)]\n use hash::{Hash, Hasher, BuildHasher, SipHasher13};\n+use heap::{Heap, Alloc, CollectionAllocErr};\n use iter::{FromIterator, FusedIterator};\n use mem::{self, replace};\n use ops::{Deref, Index};"}, {"sha": "878cd82a258d2855e7c1cea5ec8eca5c5866dfcc", "filename": "src/libstd/collections/hash/table.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Ftable.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -8,17 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::heap::Heap;\n-use core::heap::{Alloc, Layout};\n-\n use cmp;\n use hash::{BuildHasher, Hash, Hasher};\n+use heap::{Heap, Alloc, Layout, CollectionAllocErr};\n use marker;\n use mem::{align_of, size_of, needs_drop};\n use mem;\n use ops::{Deref, DerefMut};\n use ptr::{self, Unique, NonNull};\n-use alloc::allocator::CollectionAllocErr;\n \n use self::BucketState::*;\n "}, {"sha": "9cf73824deaaff70a8e1ea027ed21a5a73a31524", "filename": "src/libstd/collections/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fmod.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -424,13 +424,13 @@\n #[doc(hidden)]\n pub use ops::Bound;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::{BinaryHeap, BTreeMap, BTreeSet};\n+pub use alloc_crate::{BinaryHeap, BTreeMap, BTreeSet};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::{LinkedList, VecDeque};\n+pub use alloc_crate::{LinkedList, VecDeque};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::{binary_heap, btree_map, btree_set};\n+pub use alloc_crate::{binary_heap, btree_map, btree_set};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::{linked_list, vec_deque};\n+pub use alloc_crate::{linked_list, vec_deque};\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::hash_map::HashMap;\n@@ -446,7 +446,7 @@ pub mod range {\n }\n \n #[unstable(feature = \"try_reserve\", reason = \"new API\", issue=\"48043\")]\n-pub use alloc::allocator::CollectionAllocErr;\n+pub use heap::CollectionAllocErr;\n \n mod hash;\n "}, {"sha": "4edb897350efd6fb6eda506d15eb927952a77c4c", "filename": "src/libstd/error.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -51,13 +51,13 @@\n // coherence challenge (e.g., specialization, neg impls, etc) we can\n // reconsider what crate these items belong in.\n \n-use alloc::allocator;\n use any::TypeId;\n use borrow::Cow;\n use cell;\n use char;\n use core::array;\n use fmt::{self, Debug, Display};\n+use heap::{AllocErr, CannotReallocInPlace};\n use mem::transmute;\n use num;\n use str;\n@@ -241,18 +241,18 @@ impl Error for ! {\n #[unstable(feature = \"allocator_api\",\n            reason = \"the precise API and guarantees it provides may be tweaked.\",\n            issue = \"32838\")]\n-impl Error for allocator::AllocErr {\n+impl Error for AllocErr {\n     fn description(&self) -> &str {\n-        allocator::AllocErr::description(self)\n+        AllocErr::description(self)\n     }\n }\n \n #[unstable(feature = \"allocator_api\",\n            reason = \"the precise API and guarantees it provides may be tweaked.\",\n            issue = \"32838\")]\n-impl Error for allocator::CannotReallocInPlace {\n+impl Error for CannotReallocInPlace {\n     fn description(&self) -> &str {\n-        allocator::CannotReallocInPlace::description(self)\n+        CannotReallocInPlace::description(self)\n     }\n }\n "}, {"sha": "b42a1052c49f73d24cdfbb150600b2c1ace3720a", "filename": "src/libstd/heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fheap.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -12,7 +12,7 @@\n \n #![unstable(issue = \"32838\", feature = \"allocator_api\")]\n \n-pub use alloc::heap::Heap;\n+pub use alloc_crate::heap::Heap;\n pub use alloc_system::System;\n #[doc(inline)] pub use core::heap::*;\n "}, {"sha": "ef4205e7a620d522d05a15b97fca3f838a2fd8b8", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -351,7 +351,7 @@ extern crate core as __core;\n \n #[macro_use]\n #[macro_reexport(vec, format)]\n-extern crate alloc;\n+extern crate alloc as alloc_crate;\n extern crate alloc_system;\n #[doc(masked)]\n extern crate libc;\n@@ -437,21 +437,21 @@ pub use core::u32;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::u64;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::boxed;\n+pub use alloc_crate::boxed;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::rc;\n+pub use alloc_crate::rc;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::borrow;\n+pub use alloc_crate::borrow;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::fmt;\n+pub use alloc_crate::fmt;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::slice;\n+pub use alloc_crate::slice;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::str;\n+pub use alloc_crate::str;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::string;\n+pub use alloc_crate::string;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::vec;\n+pub use alloc_crate::vec;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::char;\n #[stable(feature = \"i128\", since = \"1.26.0\")]"}, {"sha": "642b284c6c794bc4aa7216dffc039bac7f5729e9", "filename": "src/libstd/sync/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsync%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsync%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmod.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -18,7 +18,7 @@\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::arc::{Arc, Weak};\n+pub use alloc_crate::arc::{Arc, Weak};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::sync::atomic;\n "}, {"sha": "df945ac3859f9c10765b275eb6e9c25327d95c74", "filename": "src/libstd/sync/mpsc/mpsc_queue.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsync%2Fmpsc%2Fmpsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsync%2Fmpsc%2Fmpsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmpsc_queue.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -23,10 +23,9 @@\n \n pub use self::PopResult::*;\n \n-use alloc::boxed::Box;\n use core::ptr;\n use core::cell::UnsafeCell;\n-\n+use boxed::Box;\n use sync::atomic::{AtomicPtr, Ordering};\n \n /// A result of the `pop` function."}, {"sha": "9482f6958b311b8f45f5c6c75687f8eb8e2dc35a", "filename": "src/libstd/sync/mpsc/spsc_queue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -16,7 +16,7 @@\n \n // http://www.1024cores.net/home/lock-free-algorithms/queues/unbounded-spsc-queue\n \n-use alloc::boxed::Box;\n+use boxed::Box;\n use core::ptr;\n use core::cell::UnsafeCell;\n "}, {"sha": "5d66936b2a4ff1753e5e735acc7dd9d3e3cf9f96", "filename": "src/libstd/sys/cloudabi/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::boxed::FnBox;\n+use boxed::FnBox;\n use cmp;\n use ffi::CStr;\n use io;"}, {"sha": "110d46ca3ab0381387efe55e8d39ae97ab9c7631", "filename": "src/libstd/sys/redox/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::boxed::FnBox;\n+use boxed::FnBox;\n use ffi::CStr;\n use io;\n use mem;"}, {"sha": "9e38880803026cc62abe7498c8d413997552ab2c", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::boxed::FnBox;\n+use boxed::FnBox;\n use cmp;\n use ffi::CStr;\n use io;"}, {"sha": "728e678a2e8c193c22b48270bd815a2a54f7c015", "filename": "src/libstd/sys/wasm/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::boxed::FnBox;\n+use boxed::FnBox;\n use ffi::CStr;\n use io;\n use sys::{unsupported, Void};"}, {"sha": "be442f413740a440deee9b7fd9c7db5196b8105a", "filename": "src/libstd/sys/windows/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -31,7 +31,7 @@ use sys::stdio;\n use sys::cvt;\n use sys_common::{AsInner, FromInner, IntoInner};\n use sys_common::process::{CommandEnv, EnvKey};\n-use alloc::borrow::Borrow;\n+use borrow::Borrow;\n \n ////////////////////////////////////////////////////////////////////////////////\n // Command"}, {"sha": "b6f63303dc2f0af374d731305059f9c8a45008d5", "filename": "src/libstd/sys/windows/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::boxed::FnBox;\n+use boxed::FnBox;\n use io;\n use ffi::CStr;\n use mem;"}, {"sha": "26da51c9825fbe8a07e9afc1dbcb0328a1fed9b8", "filename": "src/libstd/sys_common/at_exit_imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys_common%2Fat_exit_imp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys_common%2Fat_exit_imp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fat_exit_imp.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -12,7 +12,7 @@\n //!\n //! Documentation can be found on the `rt::at_exit` function.\n \n-use alloc::boxed::FnBox;\n+use boxed::FnBox;\n use ptr;\n use sys_common::mutex::Mutex;\n "}, {"sha": "ddf0ebe603e08887fcef06cf22ec71051a80a37d", "filename": "src/libstd/sys_common/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys_common%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys_common%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fprocess.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -14,7 +14,7 @@\n use ffi::{OsStr, OsString};\n use env;\n use collections::BTreeMap;\n-use alloc::borrow::Borrow;\n+use borrow::Borrow;\n \n pub trait EnvKey:\n     From<OsString> + Into<OsString> +"}, {"sha": "da6f58ef6bb7724952ef73162a75b6bec26491f0", "filename": "src/libstd/sys_common/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys_common%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b895d8b88413f72230fbc0f00c67328870a2e9a/src%2Flibstd%2Fsys_common%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fthread.rs?ref=1b895d8b88413f72230fbc0f00c67328870a2e9a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use alloc::boxed::FnBox;\n+use boxed::FnBox;\n use env;\n use sync::atomic::{self, Ordering};\n use sys::stack_overflow;"}]}