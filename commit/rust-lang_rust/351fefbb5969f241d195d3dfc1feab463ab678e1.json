{"sha": "351fefbb5969f241d195d3dfc1feab463ab678e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MWZlZmJiNTk2OWYyNDFkMTk1ZDNkZmMxZmVhYjQ2M2FiNjc4ZTE=", "commit": {"author": {"name": "Mazdak", "email": "twingoow@gmail.com", "date": "2018-01-19T00:27:59Z"}, "committer": {"name": "Mazdak", "email": "twingoow@gmail.com", "date": "2018-01-19T00:27:59Z"}, "message": "add fn core::convert::id<T>(x: T) -> T { x }", "tree": {"sha": "6acead334cd07823ffac7f640aac548b3773acce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6acead334cd07823ffac7f640aac548b3773acce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/351fefbb5969f241d195d3dfc1feab463ab678e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/351fefbb5969f241d195d3dfc1feab463ab678e1", "html_url": "https://github.com/rust-lang/rust/commit/351fefbb5969f241d195d3dfc1feab463ab678e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/351fefbb5969f241d195d3dfc1feab463ab678e1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f9c784751434c70ddd6719ccda6817c819126f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9c784751434c70ddd6719ccda6817c819126f9", "html_url": "https://github.com/rust-lang/rust/commit/0f9c784751434c70ddd6719ccda6817c819126f9"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "77a87fdf1c6f69e4b268157258f5835570a8f30e", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/351fefbb5969f241d195d3dfc1feab463ab678e1/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351fefbb5969f241d195d3dfc1feab463ab678e1/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=351fefbb5969f241d195d3dfc1feab463ab678e1", "patch": "@@ -50,6 +50,73 @@\n \n use fmt;\n \n+/// An identity function. Two things are important to note about this function:\n+///\n+/// - It is not always equivalent to a closure like `|x| x` since the\n+///   closure may coerce `x` into a different type.\n+///\n+/// - It moves the input `x` passed to the function.\n+///\n+/// While it might seem strange to have a function that just returns back the\n+/// input, there are some interesting uses.\n+///\n+/// # Examples\n+///\n+/// Using `id` to do nothing among other interesting functions:\n+///\n+/// ```rust\n+/// #![feature(convert_id)]\n+/// use std::convert::id;\n+///\n+/// fn manipulation(x: u32) -> u32 {\n+///     // Let's assume that this function does something interesting.\n+///     x + 1\n+/// }\n+///\n+/// let _arr = &[id, manipulation];\n+/// ```\n+///\n+/// Using `id` to get a function that changes nothing in a conditional:\n+///\n+/// ```rust\n+/// #![feature(convert_id)]\n+/// use std::convert::id;\n+///\n+/// // Let's pretend we have an interesting condition:\n+/// let condition = true;\n+///\n+/// let do_stuff = if condition { manipulation } else { id };\n+///\n+/// // do more interesting stuff..\n+/// let _results = do_stuff(42);\n+/// ```\n+///\n+/// Using `id` to concatenate an iterator of iterators:\n+///\n+/// ```rust\n+/// #![feature(convert_id)]\n+/// use std::convert::id;\n+///\n+/// let vec_vec = vec![vec![1, 3, 4], vec![5, 6]];\n+/// let iter_iter = vec_vec.into_iter().map(Vec::into_iter);\n+/// let concatenated = iter_iter.flat_map(id).collect::<Vec<_>>();\n+/// assert_eq!(vec![1, 3, 4, 5, 6], concatenated);\n+/// ```\n+///\n+/// Using `id` to keep the `Some` variants of an iterator of `Option<T>`:\n+///\n+/// ```rust\n+/// #![feature(convert_id)]\n+/// use std::convert::id;\n+///\n+/// let iter = vec![Some(1), None, Some(3)].into_iter();\n+/// let filtered = iter.filter_map(id).collect::<Vec<_>>();\n+/// assert_eq!(vec![1, 3], filtered);\n+/// ```\n+#[unstable(feature = \"convert_id\", issue = \"0\")]\n+#[inline]\n+pub fn id<T>(x: T) -> T { x }\n+\n /// A type used as the error type for implementations of fallible conversion\n /// traits in cases where conversions cannot actually fail.\n ///"}]}