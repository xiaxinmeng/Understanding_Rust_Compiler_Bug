{"sha": "f841ff4a7b8227f17e0fa056c6a73ba549f2872e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NDFmZjRhN2I4MjI3ZjE3ZTBmYTA1NmM2YTczYmE1NDlmMjg3MmU=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2019-01-31T19:46:11Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2019-01-31T19:46:11Z"}, "message": "Stabilize the time_checked_add feature", "tree": {"sha": "6a77cb8ee4bbb6f190af0e8a03de57f961a5cb52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a77cb8ee4bbb6f190af0e8a03de57f961a5cb52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f841ff4a7b8227f17e0fa056c6a73ba549f2872e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f841ff4a7b8227f17e0fa056c6a73ba549f2872e", "html_url": "https://github.com/rust-lang/rust/commit/f841ff4a7b8227f17e0fa056c6a73ba549f2872e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f841ff4a7b8227f17e0fa056c6a73ba549f2872e/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63505b84a6fb0fdb6a2f2a2a884556aeca2326d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/63505b84a6fb0fdb6a2f2a2a884556aeca2326d4", "html_url": "https://github.com/rust-lang/rust/commit/63505b84a6fb0fdb6a2f2a2a884556aeca2326d4"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6685ee202658ada2884ab6146f783cf0781d710f", "filename": "src/libstd/time.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f841ff4a7b8227f17e0fa056c6a73ba549f2872e/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f841ff4a7b8227f17e0fa056c6a73ba549f2872e/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=f841ff4a7b8227f17e0fa056c6a73ba549f2872e", "patch": "@@ -245,15 +245,15 @@ impl Instant {\n     /// Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n     /// `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n     /// otherwise.\n-    #[unstable(feature = \"time_checked_add\", issue = \"55940\")]\n+    #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_add(&self, duration: Duration) -> Option<Instant> {\n         self.0.checked_add_duration(&duration).map(|t| Instant(t))\n     }\n \n     /// Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n     /// `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n     /// otherwise.\n-    #[unstable(feature = \"time_checked_add\", issue = \"55940\")]\n+    #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_sub(&self, duration: Duration) -> Option<Instant> {\n         self.0.checked_sub_duration(&duration).map(|t| Instant(t))\n     }\n@@ -418,15 +418,15 @@ impl SystemTime {\n     /// Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n     /// `SystemTime` (which means it's inside the bounds of the underlying data structure), `None`\n     /// otherwise.\n-    #[unstable(feature = \"time_checked_add\", issue = \"55940\")]\n+    #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_add(&self, duration: Duration) -> Option<SystemTime> {\n         self.0.checked_add_duration(&duration).map(|t| SystemTime(t))\n     }\n \n     /// Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n     /// `SystemTime` (which means it's inside the bounds of the underlying data structure), `None`\n     /// otherwise.\n-    #[unstable(feature = \"time_checked_add\", issue = \"55940\")]\n+    #[stable(feature = \"time_checked_add\", since = \"1.34.0\")]\n     pub fn checked_sub(&self, duration: Duration) -> Option<SystemTime> {\n         self.0.checked_sub_duration(&duration).map(|t| SystemTime(t))\n     }"}]}