{"sha": "32cf6e32f66980cea7630edacaa66d1bd0497b2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyY2Y2ZTMyZjY2OTgwY2VhNzYzMGVkYWNhYTY2ZDFiZDA0OTdiMmU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-02T11:03:44Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-02T11:06:17Z"}, "message": "Improve documentation on match_ref_pats (fixes #532)", "tree": {"sha": "8a9d97dbd3ff4f9a1bead1c15ce120246274d279", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a9d97dbd3ff4f9a1bead1c15ce120246274d279"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32cf6e32f66980cea7630edacaa66d1bd0497b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32cf6e32f66980cea7630edacaa66d1bd0497b2e", "html_url": "https://github.com/rust-lang/rust/commit/32cf6e32f66980cea7630edacaa66d1bd0497b2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32cf6e32f66980cea7630edacaa66d1bd0497b2e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c11d140ebf1f4027868a52aa5d67e28e567ef844", "url": "https://api.github.com/repos/rust-lang/rust/commits/c11d140ebf1f4027868a52aa5d67e28e567ef844", "html_url": "https://github.com/rust-lang/rust/commit/c11d140ebf1f4027868a52aa5d67e28e567ef844"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0e0a60537b458b770a4e4672ed3041cfce843179", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32cf6e32f66980cea7630edacaa66d1bd0497b2e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/32cf6e32f66980cea7630edacaa66d1bd0497b2e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=32cf6e32f66980cea7630edacaa66d1bd0497b2e", "patch": "@@ -41,7 +41,7 @@ name\n [linkedlist](https://github.com/Manishearth/rust-clippy/wiki#linkedlist)                                 | warn    | usage of LinkedList, usually a vector is faster, or a more specialized data structure like a VecDeque\n [map_clone](https://github.com/Manishearth/rust-clippy/wiki#map_clone)                                   | warn    | using `.map(|x| x.clone())` to clone an iterator or option's contents (recommends `.cloned()` instead)\n [match_bool](https://github.com/Manishearth/rust-clippy/wiki#match_bool)                                 | warn    | a match on boolean expression; recommends `if..else` block instead\n-[match_ref_pats](https://github.com/Manishearth/rust-clippy/wiki#match_ref_pats)                         | warn    | a match has all arms prefixed with `&`; the match expression can be dereferenced instead\n+[match_ref_pats](https://github.com/Manishearth/rust-clippy/wiki#match_ref_pats)                         | warn    | a match or `if let` has all arms prefixed with `&`; the match expression can be dereferenced instead\n [min_max](https://github.com/Manishearth/rust-clippy/wiki#min_max)                                       | warn    | `min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                                 | warn    | taking a number modulo 1, which always returns 0\n [mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                       | allow   | usage of double-mut refs, e.g. `&mut &mut ...` (either copy'n'paste error, or shows a fundamental misunderstanding of references)"}, {"sha": "aaf41a391cb5b9c8a6ae73790d15912f8144fd83", "filename": "src/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32cf6e32f66980cea7630edacaa66d1bd0497b2e/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32cf6e32f66980cea7630edacaa66d1bd0497b2e/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=32cf6e32f66980cea7630edacaa66d1bd0497b2e", "patch": "@@ -22,7 +22,7 @@ use utils::{snippet, span_lint, span_help_and_lint, in_external_macro, expr_bloc\n declare_lint!(pub SINGLE_MATCH, Warn,\n               \"a match statement with a single nontrivial arm (i.e, where the other arm \\\n                is `_ => {}`) is used; recommends `if let` instead\");\n-/// **What it does:** This lint checks for matches where all arms match a reference, suggesting to remove the reference and deref the matched expression instead. It is `Warn` by default.\n+/// **What it does:** This lint checks for matches where all arms match a reference, suggesting to remove the reference and deref the matched expression instead. It also checks for `if let &foo = bar` blocks. It is `Warn` by default.\n ///\n /// **Why is this bad?** It just makes the code less readable. That reference destructuring adds nothing to the code.\n ///\n@@ -38,7 +38,7 @@ declare_lint!(pub SINGLE_MATCH, Warn,\n /// }\n /// ```\n declare_lint!(pub MATCH_REF_PATS, Warn,\n-              \"a match has all arms prefixed with `&`; the match expression can be \\\n+              \"a match or `if let` has all arms prefixed with `&`; the match expression can be \\\n                dereferenced instead\");\n /// **What it does:** This lint checks for matches where match expression is a `bool`. It suggests to replace the expression with an `if...else` block. It is `Warn` by default.\n ///"}]}