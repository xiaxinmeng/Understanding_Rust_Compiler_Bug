{"sha": "d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNWNmMmM5NjAwZTA0NjRiOWJjZDAyNzNlNzg0NWVmYmY3YmRlYjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-17T12:30:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-17T12:30:33Z"}, "message": "Merge #1693\n\n1693: Remove cpuprofile dependencies r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "4d08163916538620cc356ed959e3674d49b3683b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d08163916538620cc356ed959e3674d49b3683b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdV/NpCRBK7hj4Ov3rIwAAdHIIABRHhb25zoGIZQx0QV0jcGlU\n0T6HtFTfgy2mzNCgGsT+3AYBz+YR4vgmrHx52o9EQ9k9buv7/a9CqB8KA4IhmuHj\nmYfeR7GvaQKk0hU2YRcd9WwTffG4SyZPQt2zJ+Sv+MHH030mc4RxHjLjH6mg4v8/\nOV47OwIwDWb58uSYPoaYvHr7Et/9Yy/YWLnoy5tRCOgOuyUOyoAnuFaTZzKrnPmC\nch+JI3dVhfDNC7mghGeI0w20gI/Q0Nz9gWm15mUVG+3VN7wlIiAO8uqMccz8Wtgv\nJ4BCimqI+hl6gGzbrpTFqOYxe0W/tW/YdQ5JOJSbZnIepc4YJVGoBjCMRFDd3Mw=\n=Eevz\n-----END PGP SIGNATURE-----\n", "payload": "tree 4d08163916538620cc356ed959e3674d49b3683b\nparent c2dcabef2a3fab42bbdf1fa6f05e89a02dd6afa3\nparent e751e4d8a366de45b4afe311eedfadcc0a47435c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1566045033 +0000\ncommitter GitHub <noreply@github.com> 1566045033 +0000\n\nMerge #1693\n\n1693: Remove cpuprofile dependencies r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "html_url": "https://github.com/rust-lang/rust/commit/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2dcabef2a3fab42bbdf1fa6f05e89a02dd6afa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2dcabef2a3fab42bbdf1fa6f05e89a02dd6afa3", "html_url": "https://github.com/rust-lang/rust/commit/c2dcabef2a3fab42bbdf1fa6f05e89a02dd6afa3"}, {"sha": "e751e4d8a366de45b4afe311eedfadcc0a47435c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e751e4d8a366de45b4afe311eedfadcc0a47435c", "html_url": "https://github.com/rust-lang/rust/commit/e751e4d8a366de45b4afe311eedfadcc0a47435c"}], "stats": {"total": 127, "additions": 63, "deletions": 64}, "files": [{"sha": "f4508592114429ef05ac9fc73d2b898b8b6ca9f8", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "patch": "@@ -38,20 +38,6 @@ name = \"autocfg\"\n version = \"0.1.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"backtrace\"\n-version = \"0.2.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"dbghelp-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"backtrace\"\n version = \"0.3.34\"\n@@ -287,15 +273,6 @@ dependencies = [\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"cpuprofiler\"\n-version = \"0.0.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"error-chain 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"crossbeam\"\n version = \"0.7.2\"\n@@ -365,15 +342,6 @@ dependencies = [\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"dbghelp-sys\"\n-version = \"0.2.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"derive-new\"\n version = \"0.5.7\"\n@@ -438,14 +406,6 @@ name = \"encode_unicode\"\n version = \"0.3.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"error-chain\"\n-version = \"0.5.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"backtrace 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"error-chain\"\n version = \"0.12.1\"\n@@ -766,11 +726,6 @@ name = \"lalrpop-intern\"\n version = \"0.15.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"lazy_static\"\n-version = \"0.2.11\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"lazy_static\"\n version = \"1.3.0\"\n@@ -1351,7 +1306,6 @@ name = \"ra_prof\"\n version = \"0.1.0\"\n dependencies = [\n  \"backtrace 0.3.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cpuprofiler 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"jemalloc-ctl 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"jemallocator 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2199,7 +2153,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8d73f9beda665eaa98ab9e4f7442bd4e7de6652587de55b2525e52e29c1b0ba\"\n \"checksum atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1803c647a3ec87095e7ae7acfca019e98de5ec9a7d01343f611cf3152ed71a90\"\n \"checksum autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"22130e92352b948e7e82a49cdb0aa94f2211761117f29e052dd397c1ac33542b\"\n-\"checksum backtrace 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"346d7644f0b5f9bc73082d3b2236b69a05fd35cce0cfa3724e184e6a5c9e2a2f\"\n \"checksum backtrace 0.3.34 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b5164d292487f037ece34ec0de2fcede2faa162f085dd96d2385ab81b12765ba\"\n \"checksum backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)\" = \"82a830b4ef2d1124a711c71d263c5abdc710ef8e907bd508c88be475cebc422b\"\n \"checksum base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0b25d992356d2eb0ed82172f5248873db5560c4721f564b13cb5193bda5e668e\"\n@@ -2226,15 +2179,13 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum clicolors-control 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"73abfd4c73d003a674ce5d2933fca6ce6c42480ea84a5ffe0a2dc39ed56300f9\"\n \"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\n \"checksum console 0.7.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ca57c2c14b8a2bf3105bc9d15574aad80babf6a9c44b1058034cdf8bd169628\"\n-\"checksum cpuprofiler 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"33f07976bb6821459632d7a18d97ccca005cb5c552f251f822c7c1781c1d7035\"\n \"checksum crossbeam 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d818a4990769aac0c7ff1360e233ef3a41adcb009ebb2036bf6915eb0f6b23c\"\n \"checksum crossbeam-channel 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8ec7fcd21571dc78f96cc96243cab8d8f035247c3efd16c687be154c3fa9efa\"\n \"checksum crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05e44b8cf3e1a625844d1750e1f7820da46044ff6d28f4d43e455ba3e5bb2c13\"\n \"checksum crossbeam-deque 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b18cd2e169ad86297e6bc0ad9aa679aee9daa4f19e8163860faf7c164e4f5a71\"\n \"checksum crossbeam-epoch 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fedcd6772e37f3da2a9af9bf12ebe046c0dfe657992377b4df982a2b54cd37a9\"\n \"checksum crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7c979cd6cfe72335896575c6b5688da489e420d36a27a0b9eb0c73db574b4a4b\"\n \"checksum crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"04973fa96e96579258a5091af6003abde64af786b860f18622b82e026cca60e6\"\n-\"checksum dbghelp-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"97590ba53bcb8ac28279161ca943a924d1fd4a8fb3fa63302591647c4fc5b850\"\n \"checksum derive-new 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c3fd04571b29c91cfbe1e7c9a228e069ac8635f180ffb4ccd6a6907617ee8bb0\"\n \"checksum deunicode 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"850878694b7933ca4c9569d30a34b55031b9b139ee1fc7b94a527c4ef960d690\"\n \"checksum difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n@@ -2246,7 +2197,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum ena 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dc01d68e08ca384955a3aeba9217102ca1aa85b6e168639bf27739f1d749d87\"\n \"checksum encode_unicode 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"90b2c9496c001e8cb61827acdefad780795c42264c137744cae6f7d9e3450abd\"\n \"checksum error-chain 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3ab49e9dcb602294bc42f9a7dfc9bc6e936fca4418ea300dbfb84fe16de0b7d9\"\n-\"checksum error-chain 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bd5c82c815138e278b8dcdeffc49f27ea6ffb528403e9dea4194f2e3dd40b143\"\n \"checksum failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2\"\n \"checksum failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1\"\n \"checksum fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed\"\n@@ -2284,7 +2234,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4dc7a5290e8c2606ce2be49f456d50f69173cb96d1541e4f66e34ac8b331a98f\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum lalrpop-intern 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cc4fd87be4a815fd373e02773983940f0d75fb26fde8c098e9e45f7af03154c0\"\n-\"checksum lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73\"\n \"checksum lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bc5729f27f159ddd61f4df6228e827e86643d4d3e7c32183cb30a1c08f604a14\"\n \"checksum lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b294d6fa9ee409a054354afc4352b0b9ef7ca222c69b8812cbea9e7d2bf3783f\"\n \"checksum libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)\" = \"34fcd2c08d2f832f376f4173a231990fa5aef4e99fb569867318a227ef4c06ba\""}, {"sha": "9c2ebdad25070ccb2776b1ad1be0c09881787a55", "filename": "crates/ra_cli/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_cli%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_cli%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2FCargo.toml?ref=d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "patch": "@@ -18,5 +18,5 @@ ra_db = { path = \"../ra_db\" }\n \n [dependencies.ra_prof]\n path = \"../ra_prof\"\n-# features = [ \"cpuprofiler\" ]\n+# features = [ \"cpu_profiler\" ]\n # features = [ \"jemalloc\" ]"}, {"sha": "d35adeeebe1ebd163255cecefbe598d35ce1a7c9", "filename": "crates/ra_prof/Cargo.toml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_prof%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_prof%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2FCargo.toml?ref=d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "patch": "@@ -9,10 +9,9 @@ publish = false\n once_cell = \"0.2.0\"\n itertools = \"0.8.0\"\n backtrace = \"0.3.28\"\n-cpuprofiler = { version = \"0.0.3\", optional = true }\n jemallocator = { version = \"0.3.2\", optional = true }\n jemalloc-ctl = { version = \"0.3.2\", optional = true }\n \n-\n [features]\n jemalloc = [ \"jemallocator\", \"jemalloc-ctl\" ]\n+cpu_profiler = []"}, {"sha": "db865c65be17e80716c93cbbbe9c870e506ae79c", "filename": "crates/ra_prof/src/google_cpu_profiler.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_prof%2Fsrc%2Fgoogle_cpu_profiler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_prof%2Fsrc%2Fgoogle_cpu_profiler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Fgoogle_cpu_profiler.rs?ref=d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "patch": "@@ -0,0 +1,39 @@\n+//! https://github.com/gperftools/gperftools\n+\n+use std::{\n+    ffi::CString,\n+    os::raw::c_char,\n+    path::Path,\n+    sync::atomic::{AtomicUsize, Ordering},\n+};\n+\n+#[link(name = \"profiler\")]\n+#[allow(non_snake_case)]\n+extern \"C\" {\n+    fn ProfilerStart(fname: *const c_char) -> i32;\n+    fn ProfilerStop();\n+}\n+\n+static PROFILER_STATE: AtomicUsize = AtomicUsize::new(OFF);\n+const OFF: usize = 0;\n+const ON: usize = 1;\n+const PENDING: usize = 2;\n+\n+pub fn start(path: &Path) {\n+    if PROFILER_STATE.compare_and_swap(OFF, PENDING, Ordering::SeqCst) != OFF {\n+        panic!(\"profiler already started\");\n+    }\n+    let path = CString::new(path.display().to_string()).unwrap();\n+    if unsafe { ProfilerStart(path.as_ptr()) } == 0 {\n+        panic!(\"profiler failed to start\")\n+    }\n+    assert!(PROFILER_STATE.compare_and_swap(PENDING, ON, Ordering::SeqCst) == PENDING);\n+}\n+\n+pub fn stop() {\n+    if PROFILER_STATE.compare_and_swap(ON, PENDING, Ordering::SeqCst) != ON {\n+        panic!(\"profiler is not started\")\n+    }\n+    unsafe { ProfilerStop() };\n+    assert!(PROFILER_STATE.compare_and_swap(PENDING, OFF, Ordering::SeqCst) == PENDING);\n+}"}, {"sha": "d32a289be78b2c102a0ef211d2c246026a25cb2c", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=d15cf2c9600e0464b9bcd0273e7845efbf7bdeb5", "patch": "@@ -1,4 +1,6 @@\n mod memory_usage;\n+#[cfg(feature = \"cpu_profiler\")]\n+mod google_cpu_profiler;\n \n use std::{\n     cell::RefCell,\n@@ -268,35 +270,45 @@ impl Drop for Scope {\n     }\n }\n \n-/// A wrapper around https://github.com/AtheMathmo/cpuprofiler\n+/// A wrapper around google_cpu_profiler.\n ///\n-/// It can be used to capture sampling profiles of sections of code.\n-/// It is not exactly out-of-the-box, as it relies on gperftools.\n-/// See the docs for the crate for more!\n+/// Usage:\n+/// 1. Install gpref_tools (https://github.com/gperftools/gperftools), probably packaged with your Linux distro.\n+/// 2. Build with `cpu_profiler` feature.\n+/// 3. Tun the code, the *raw* output would be in the `./out.profile` file.\n+/// 4. Install pprof for visualization (https://github.com/google/pprof).\n+/// 5. Use something like `pprof -svg target/release/ra_cli ./out.profile` to see the results.\n+///\n+/// For example, here's how I run profiling on NixOS:\n+///\n+/// ```bash\n+/// $ nix-shell -p gperftools --run \\\n+///     'cargo run --release -p ra_cli -- parse < ~/projects/rustbench/parser.rs > /dev/null'\n+/// ```\n #[derive(Debug)]\n pub struct CpuProfiler {\n     _private: (),\n }\n \n pub fn cpu_profiler() -> CpuProfiler {\n-    #[cfg(feature = \"cpuprofiler\")]\n+    #[cfg(feature = \"cpu_profiler\")]\n     {\n-        cpuprofiler::PROFILER.lock().unwrap().start(\"./out.profile\").unwrap();\n+        google_cpu_profiler::start(\"./out.profile\".as_ref())\n     }\n \n-    #[cfg(not(feature = \"cpuprofiler\"))]\n+    #[cfg(not(feature = \"cpu_profiler\"))]\n     {\n-        eprintln!(\"cpuprofiler feature is disabled\")\n+        eprintln!(\"cpu_profiler feature is disabled\")\n     }\n \n     CpuProfiler { _private: () }\n }\n \n impl Drop for CpuProfiler {\n     fn drop(&mut self) {\n-        #[cfg(feature = \"cpuprofiler\")]\n+        #[cfg(feature = \"cpu_profiler\")]\n         {\n-            cpuprofiler::PROFILER.lock().unwrap().stop().unwrap();\n+            google_cpu_profiler::stop()\n         }\n     }\n }"}]}