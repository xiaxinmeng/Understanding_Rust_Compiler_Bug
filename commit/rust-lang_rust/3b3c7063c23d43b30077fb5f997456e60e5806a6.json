{"sha": "3b3c7063c23d43b30077fb5f997456e60e5806a6", "node_id": "C_kwDOAAsO6NoAKDNiM2M3MDYzYzIzZDQzYjMwMDc3ZmI1Zjk5NzQ1NmU2MGU1ODA2YTY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-04T20:48:39Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-04T20:48:39Z"}, "message": "Point at type parameter in plain path expr", "tree": {"sha": "f8c858ff7cf1beecb3fbc33b7b776ec25de8fd6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8c858ff7cf1beecb3fbc33b7b776ec25de8fd6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b3c7063c23d43b30077fb5f997456e60e5806a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b3c7063c23d43b30077fb5f997456e60e5806a6", "html_url": "https://github.com/rust-lang/rust/commit/3b3c7063c23d43b30077fb5f997456e60e5806a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b3c7063c23d43b30077fb5f997456e60e5806a6/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2cdcb3fea2baae5d20eabaa412e0d2f5b98c318", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cdcb3fea2baae5d20eabaa412e0d2f5b98c318", "html_url": "https://github.com/rust-lang/rust/commit/a2cdcb3fea2baae5d20eabaa412e0d2f5b98c318"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "2f6d0b19368635e796140e85e73d0388e934c424", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3b3c7063c23d43b30077fb5f997456e60e5806a6/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b3c7063c23d43b30077fb5f997456e60e5806a6/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=3b3c7063c23d43b30077fb5f997456e60e5806a6", "patch": "@@ -1780,16 +1780,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             return true;\n                         }\n                     }\n-                    // Notably, we only point to params that are local to the\n-                    // item we're checking, since those are the ones we are able\n-                    // to look in the final `hir::PathSegment` for. Everything else\n-                    // would require a deeper search into the `qpath` than I think\n-                    // is worthwhile.\n-                    if let Some(param_to_point_at) = param_to_point_at\n-                        && self.point_at_path_if_possible(error, def_id, param_to_point_at, qpath)\n-                    {\n-                        return true;\n-                    }\n+                }\n+                // Notably, we only point to params that are local to the\n+                // item we're checking, since those are the ones we are able\n+                // to look in the final `hir::PathSegment` for. Everything else\n+                // would require a deeper search into the `qpath` than I think\n+                // is worthwhile.\n+                if let Some(param_to_point_at) = param_to_point_at\n+                    && self.point_at_path_if_possible(error, def_id, param_to_point_at, qpath)\n+                {\n+                    return true;\n                 }\n             }\n             hir::ExprKind::MethodCall(segment, args, ..) => {"}, {"sha": "9a21536f9b12bf39f558bb6ab1a0899916b9a3cd", "filename": "src/test/ui/typeck/point-at-type-param-in-path-expr.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b3c7063c23d43b30077fb5f997456e60e5806a6/src%2Ftest%2Fui%2Ftypeck%2Fpoint-at-type-param-in-path-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b3c7063c23d43b30077fb5f997456e60e5806a6/src%2Ftest%2Fui%2Ftypeck%2Fpoint-at-type-param-in-path-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fpoint-at-type-param-in-path-expr.rs?ref=3b3c7063c23d43b30077fb5f997456e60e5806a6", "patch": "@@ -0,0 +1,6 @@\n+fn foo<T: std::fmt::Display>() {}\n+\n+fn main() {\n+    let x = foo::<()>;\n+    //~^ ERROR `()` doesn't implement `std::fmt::Display`\n+}"}, {"sha": "1feaa0508bfa74017351da64b6aa00b4fc015377", "filename": "src/test/ui/typeck/point-at-type-param-in-path-expr.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3b3c7063c23d43b30077fb5f997456e60e5806a6/src%2Ftest%2Fui%2Ftypeck%2Fpoint-at-type-param-in-path-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b3c7063c23d43b30077fb5f997456e60e5806a6/src%2Ftest%2Fui%2Ftypeck%2Fpoint-at-type-param-in-path-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fpoint-at-type-param-in-path-expr.stderr?ref=3b3c7063c23d43b30077fb5f997456e60e5806a6", "patch": "@@ -0,0 +1,17 @@\n+error[E0277]: `()` doesn't implement `std::fmt::Display`\n+  --> $DIR/point-at-type-param-in-path-expr.rs:4:19\n+   |\n+LL |     let x = foo::<()>;\n+   |                   ^^ `()` cannot be formatted with the default formatter\n+   |\n+   = help: the trait `std::fmt::Display` is not implemented for `()`\n+   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n+note: required by a bound in `foo`\n+  --> $DIR/point-at-type-param-in-path-expr.rs:1:11\n+   |\n+LL | fn foo<T: std::fmt::Display>() {}\n+   |           ^^^^^^^^^^^^^^^^^ required by this bound in `foo`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}