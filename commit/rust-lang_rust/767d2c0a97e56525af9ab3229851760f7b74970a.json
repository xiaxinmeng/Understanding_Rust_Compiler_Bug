{"sha": "767d2c0a97e56525af9ab3229851760f7b74970a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2N2QyYzBhOTdlNTY1MjVhZjlhYjMyMjk4NTE3NjBmN2I3NDk3MGE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-31T05:46:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-31T05:46:47Z"}, "message": "test: De-export sudoku. rs=burningtree", "tree": {"sha": "3aedc0a8c36809abb7cfd8e262afa4c6c9755985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aedc0a8c36809abb7cfd8e262afa4c6c9755985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/767d2c0a97e56525af9ab3229851760f7b74970a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/767d2c0a97e56525af9ab3229851760f7b74970a", "html_url": "https://github.com/rust-lang/rust/commit/767d2c0a97e56525af9ab3229851760f7b74970a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/767d2c0a97e56525af9ab3229851760f7b74970a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d8ae4403e3d10ca8304b4a1bd90ac7cade5d713", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d8ae4403e3d10ca8304b4a1bd90ac7cade5d713", "html_url": "https://github.com/rust-lang/rust/commit/7d8ae4403e3d10ca8304b4a1bd90ac7cade5d713"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "06108a2fd32761ee1e120acf8beb74b4cf724d5d", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/767d2c0a97e56525af9ab3229851760f7b74970a/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767d2c0a97e56525af9ab3229851760f7b74970a/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=767d2c0a97e56525af9ab3229851760f7b74970a", "patch": "@@ -29,16 +29,14 @@ use io::{ReaderUtil, WriterUtil};\n // If called without arguments, sudoku solves a built-in example sudoku\n //\n \n-export grid_t, read_grid, solve_grid, write_grid;\n-\n // internal type of sudoku grids\n type grid = ~[~[mut u8]];\n \n // exported type of sudoku grids\n-enum grid_t { grid_ctor(grid), }\n+pub enum grid_t { grid_ctor(grid), }\n \n // read a sudoku problem from file f\n-fn read_grid(f: io::Reader) -> grid_t {\n+pub fn read_grid(f: io::Reader) -> grid_t {\n     assert f.read_line() == ~\"9,9\"; /* assert first line is exactly \"9,9\" */\n \n     let g = vec::from_fn(10u, {|_i|\n@@ -56,7 +54,7 @@ fn read_grid(f: io::Reader) -> grid_t {\n }\n \n // solve sudoku grid\n-fn solve_grid(g: grid_t) {\n+pub fn solve_grid(g: grid_t) {\n     fn next_color(g: grid, row: u8, col: u8, start_color: u8) -> bool {\n         if start_color < 10u8 {\n             // colors not yet used\n@@ -126,7 +124,7 @@ fn solve_grid(g: grid_t) {\n     }\n }\n \n-fn write_grid(f: io::Writer, g: grid_t) {\n+pub fn write_grid(f: io::Writer, g: grid_t) {\n     for u8::range(0u8, 9u8) |row| {\n         f.write_str(fmt!(\"%u\", (*g)[row][0] as uint));\n         for u8::range(1u8, 9u8) |col| {"}]}