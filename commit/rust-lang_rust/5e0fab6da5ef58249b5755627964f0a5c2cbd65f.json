{"sha": "5e0fab6da5ef58249b5755627964f0a5c2cbd65f", "node_id": "C_kwDOAAsO6NoAKDVlMGZhYjZkYTVlZjU4MjQ5YjU3NTU2Mjc5NjRmMGE1YzJjYmQ2NWY", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-02-08T11:14:44Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-02-15T20:10:42Z"}, "message": "use ConstantKind::Val in StaticRef", "tree": {"sha": "c8728118e3b06b8ed900a652a3cfff2f3ceb396a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8728118e3b06b8ed900a652a3cfff2f3ceb396a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e0fab6da5ef58249b5755627964f0a5c2cbd65f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e0fab6da5ef58249b5755627964f0a5c2cbd65f", "html_url": "https://github.com/rust-lang/rust/commit/5e0fab6da5ef58249b5755627964f0a5c2cbd65f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e0fab6da5ef58249b5755627964f0a5c2cbd65f/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bf3008f0757c7c89c3f02e0e7eaac5ee30c1c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf3008f0757c7c89c3f02e0e7eaac5ee30c1c6c", "html_url": "https://github.com/rust-lang/rust/commit/6bf3008f0757c7c89c3f02e0e7eaac5ee30c1c6c"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "1136844377ab03eda9aef122e008d54260b5fdad", "filename": "compiler/rustc_mir_build/src/build/expr/as_constant.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5e0fab6da5ef58249b5755627964f0a5c2cbd65f/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e0fab6da5ef58249b5755627964f0a5c2cbd65f/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs?ref=5e0fab6da5ef58249b5755627964f0a5c2cbd65f", "patch": "@@ -27,7 +27,12 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 Constant { span, user_ty, literal: literal.into() }\n             }\n             ExprKind::StaticRef { literal, .. } => {\n-                Constant { span, user_ty: None, literal: literal.into() }\n+                let const_val = literal.val.try_to_value().unwrap_or_else(|| {\n+                    bug!(\"expected `ConstKind::Value`, but found {:?}\", literal.val)\n+                });\n+                let literal = ConstantKind::Val(const_val, literal.ty);\n+\n+                Constant { span, user_ty: None, literal }\n             }\n             ExprKind::ConstBlock { value } => {\n                 Constant { span: span, user_ty: None, literal: value.into() }"}]}