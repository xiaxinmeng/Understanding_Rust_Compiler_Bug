{"sha": "7aca2fa7c647954baab2b0c108dced092fb82631", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhY2EyZmE3YzY0Nzk1NGJhYWIyYjBjMTA4ZGNlZDA5MmZiODI2MzE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-13T13:33:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-13T17:47:26Z"}, "message": "Remove is_dllimport_foreign_item def from cg_ssa\n\nIt overwrites the definition from rustc_metadata", "tree": {"sha": "d11e593ffb8adce4fe34b9f6f1a54bc912225bd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d11e593ffb8adce4fe34b9f6f1a54bc912225bd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7aca2fa7c647954baab2b0c108dced092fb82631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7aca2fa7c647954baab2b0c108dced092fb82631", "html_url": "https://github.com/rust-lang/rust/commit/7aca2fa7c647954baab2b0c108dced092fb82631", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7aca2fa7c647954baab2b0c108dced092fb82631/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18d27b2c94cff9a5f6d8e4d2ea45f6f2e434e5f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d27b2c94cff9a5f6d8e4d2ea45f6f2e434e5f6", "html_url": "https://github.com/rust-lang/rust/commit/18d27b2c94cff9a5f6d8e4d2ea45f6f2e434e5f6"}], "stats": {"total": 32, "additions": 0, "deletions": 32}, "files": [{"sha": "2ce5fe5ad504b75d2f8ed59061a4bd4b1e23f91f", "filename": "compiler/rustc_codegen_ssa/src/base.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7aca2fa7c647954baab2b0c108dced092fb82631/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aca2fa7c647954baab2b0c108dced092fb82631/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs?ref=7aca2fa7c647954baab2b0c108dced092fb82631", "patch": "@@ -29,7 +29,6 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{self, EntryFnType};\n-use rustc_session::utils::NativeLibKind;\n use rustc_session::Session;\n use rustc_target::abi::{Align, LayoutOf, VariantIdx};\n \n@@ -817,32 +816,6 @@ pub fn provide_both(providers: &mut Providers) {\n         }\n         tcx.sess.opts.optimize\n     };\n-\n-    providers.dllimport_foreign_items = |tcx, krate| {\n-        let module_map = tcx.foreign_modules(krate);\n-\n-        let dllimports = tcx\n-            .native_libraries(krate)\n-            .iter()\n-            .filter(|lib| {\n-                if !matches!(lib.kind, NativeLibKind::Dylib | NativeLibKind::Unspecified) {\n-                    return false;\n-                }\n-                let cfg = match lib.cfg {\n-                    Some(ref cfg) => cfg,\n-                    None => return true,\n-                };\n-                attr::cfg_matches(cfg, &tcx.sess.parse_sess, None)\n-            })\n-            .filter_map(|lib| lib.foreign_module)\n-            .map(|id| &module_map[&id])\n-            .flat_map(|module| module.foreign_items.iter().cloned())\n-            .collect();\n-        dllimports\n-    };\n-\n-    providers.is_dllimport_foreign_item =\n-        |tcx, def_id| tcx.dllimport_foreign_items(def_id.krate).contains(&def_id);\n }\n \n fn determine_cgu_reuse<'tcx>(tcx: TyCtxt<'tcx>, cgu: &CodegenUnit<'tcx>) -> CguReuse {"}, {"sha": "61cb344293d010fc0398219414549f3786d96d18", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7aca2fa7c647954baab2b0c108dced092fb82631/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aca2fa7c647954baab2b0c108dced092fb82631/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=7aca2fa7c647954baab2b0c108dced092fb82631", "patch": "@@ -1259,11 +1259,6 @@ rustc_queries! {\n     }\n \n     Other {\n-        query dllimport_foreign_items(_: CrateNum)\n-            -> FxHashSet<DefId> {\n-            storage(ArenaCacheSelector<'tcx>)\n-            desc { \"dllimport_foreign_items\" }\n-        }\n         query is_dllimport_foreign_item(def_id: DefId) -> bool {\n             desc { |tcx| \"is_dllimport_foreign_item({})\", tcx.def_path_str(def_id) }\n         }"}]}