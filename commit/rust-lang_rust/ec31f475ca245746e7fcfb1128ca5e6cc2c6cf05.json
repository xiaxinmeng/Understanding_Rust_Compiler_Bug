{"sha": "ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzFmNDc1Y2EyNDU3NDZlN2ZjZmIxMTI4Y2E1ZTZjYzJjNmNmMDU=", "commit": {"author": {"name": "Simon Bihel", "email": "simon.bihel@ens-rennes.fr", "date": "2019-06-04T20:26:12Z"}, "committer": {"name": "Simon Bihel", "email": "simon.bihel@ens-rennes.fr", "date": "2019-06-04T20:26:12Z"}, "message": "Use inline snapshots in complete_keyword", "tree": {"sha": "0d28d0328d27a23316153b7212ea3def3e03b490", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d28d0328d27a23316153b7212ea3def3e03b490"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEj5l77JwvbG/sq2TwmgdoVQNrD3gFAlz20+UACgkQmgdoVQNr\nD3hMOggAg9Dv9ejgNC6UzHsoT/QjBBGQ/XeXpbzSrdf/esWya+YvOZKWvGSdXoxr\nhO76cjST14ILVJt7nEdgLvLA0jlYC3HBnEkzcM6SZRbdxNcQEm6KakHUY7dKXRR1\ntyPQqaH6GLQrZAKvpBqvrTESsSQQ3bfKC+IOj2qSIa6/32mko+WsehwUDcrioWN2\nLffkrVO6M6CNpwo9qpVk4PqYhD76Zx0U1pcKnFPW++R06Q4h6wB6FAtuAOg/zEb1\nHPRmEmv1TeCgVztqcRTzFtGuauRqTTVf0mzIO1KdRLoVCC5NdcUaK4UZhP7h7YKs\nfcP6Q+pH1HNTVaUIKbqXX2pIh0JZQg==\n=uyGA\n-----END PGP SIGNATURE-----", "payload": "tree 0d28d0328d27a23316153b7212ea3def3e03b490\nparent 6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc\nauthor Simon Bihel <simon.bihel@ens-rennes.fr> 1559679972 +0100\ncommitter Simon Bihel <simon.bihel@ens-rennes.fr> 1559679972 +0100\n\nUse inline snapshots in complete_keyword\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05", "html_url": "https://github.com/rust-lang/rust/commit/ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05/comments", "author": null, "committer": null, "parents": [{"sha": "6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "html_url": "https://github.com/rust-lang/rust/commit/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc"}], "stats": {"total": 1224, "additions": 580, "deletions": 644}, "files": [{"sha": "cfb9fd6e8c9c81f9d06f362c61974a62747fbccf", "filename": "crates/ra_ide_api/src/completion/complete_keyword.rs", "status": "modified", "additions": 580, "deletions": 99, "changes": 679, "blob_url": "https://github.com/rust-lang/rust/blob/ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=ec31f475ca245746e7fcfb1128ca5e6cc2c6cf05", "patch": "@@ -109,159 +109,640 @@ fn complete_return(\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{check_completion, CompletionKind};\n+    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use insta::assert_debug_snapshot_matches;\n \n-    fn check_keyword_completion(name: &str, code: &str) {\n-        check_completion(name, code, CompletionKind::Keyword);\n+    fn do_keyword_completion(code: &str) -> Vec<CompletionItem> {\n+        do_completion(code, CompletionKind::Keyword)\n     }\n \n     #[test]\n     fn completes_keywords_in_use_stmt() {\n-        check_keyword_completion(\n-            \"keywords_in_use_stmt1\",\n-            r\"\n-            use <|>\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                use <|>\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"crate\",\n+        source_range: [21; 21),\n+        delete: [21; 21),\n+        insert: \"crate::\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"self\",\n+        source_range: [21; 21),\n+        delete: [21; 21),\n+        insert: \"self\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"super\",\n+        source_range: [21; 21),\n+        delete: [21; 21),\n+        insert: \"super::\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n \n-        check_keyword_completion(\n-            \"keywords_in_use_stmt2\",\n-            r\"\n-            use a::<|>\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                use a::<|>\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"self\",\n+        source_range: [24; 24),\n+        delete: [24; 24),\n+        insert: \"self\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"super\",\n+        source_range: [24; 24),\n+        delete: [24; 24),\n+        insert: \"super::\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n \n-        check_keyword_completion(\n-            \"keywords_in_use_stmt3\",\n-            r\"\n-            use a::{b, <|>}\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                use a::{b, <|>}\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"self\",\n+        source_range: [28; 28),\n+        delete: [28; 28),\n+        insert: \"self\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"super\",\n+        source_range: [28; 28),\n+        delete: [28; 28),\n+        insert: \"super::\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_various_keywords_in_function() {\n-        check_keyword_completion(\n-            \"keywords_in_function1\",\n-            r\"\n-            fn quux() {\n-                <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() {\n+                    <|>\n+                }\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"return;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_else_after_if() {\n-        check_keyword_completion(\n-            \"keywords_in_function2\",\n-            r\"\n-            fn quux() {\n-                if true {\n-                    ()\n-                } <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() {\n+                    if true {\n+                        ()\n+                    } <|>\n+                }\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"else\",\n+        source_range: [108; 108),\n+        delete: [108; 108),\n+        insert: \"else {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"else if\",\n+        source_range: [108; 108),\n+        delete: [108; 108),\n+        insert: \"else if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [108; 108),\n+        delete: [108; 108),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [108; 108),\n+        delete: [108; 108),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [108; 108),\n+        delete: [108; 108),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [108; 108),\n+        delete: [108; 108),\n+        insert: \"return;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [108; 108),\n+        delete: [108; 108),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn test_completion_return_value() {\n-        check_keyword_completion(\n-            \"keywords_in_function3\",\n-            r\"\n-            fn quux() -> i32 {\n-                <|>\n-                92\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() -> i32 {\n+                    <|>\n+                    92\n+                }\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [56; 56),\n+        delete: [56; 56),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [56; 56),\n+        delete: [56; 56),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [56; 56),\n+        delete: [56; 56),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [56; 56),\n+        delete: [56; 56),\n+        insert: \"return $0;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [56; 56),\n+        delete: [56; 56),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n-        check_keyword_completion(\n-            \"keywords_in_function4\",\n-            r\"\n-            fn quux() {\n-                <|>\n-                92\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() {\n+                    <|>\n+                    92\n+                }\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"return;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [49; 49),\n+        delete: [49; 49),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn dont_add_semi_after_return_if_not_a_statement() {\n-        check_keyword_completion(\n-            \"dont_add_semi_after_return_if_not_a_statement\",\n-            r\"\n-            fn quux() -> i32 {\n-                match () {\n-                    () => <|>\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() -> i32 {\n+                    match () {\n+                        () => <|>\n+                    }\n                 }\n-            }\n-            \",\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [97; 97),\n+        delete: [97; 97),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [97; 97),\n+        delete: [97; 97),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [97; 97),\n+        delete: [97; 97),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [97; 97),\n+        delete: [97; 97),\n+        insert: \"return $0\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [97; 97),\n+        delete: [97; 97),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn last_return_in_block_has_semi() {\n-        check_keyword_completion(\n-            \"last_return_in_block_has_semi1\",\n-            r\"\n-            fn quux() -> i32 {\n-                if condition {\n-                    <|>\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() -> i32 {\n+                    if condition {\n+                        <|>\n+                    }\n                 }\n-            }\n-            \",\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"return $0;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n-        check_keyword_completion(\n-            \"last_return_in_block_has_semi2\",\n-            r\"\n-            fn quux() -> i32 {\n-                if condition {\n-                    <|>\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() -> i32 {\n+                    if condition {\n+                        <|>\n+                    }\n+                    let x = 92;\n+                    x\n                 }\n-                let x = 92;\n-                x\n-            }\n-            \",\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"return $0;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_break_and_continue_in_loops() {\n-        check_keyword_completion(\n-            \"completes_break_and_continue_in_loops1\",\n-            r\"\n-            fn quux() -> i32 {\n-                loop { <|> }\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() -> i32 {\n+                    loop { <|> }\n+                }\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"break\",\n+        source_range: [63; 63),\n+        delete: [63; 63),\n+        insert: \"break;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"continue\",\n+        source_range: [63; 63),\n+        delete: [63; 63),\n+        insert: \"continue;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [63; 63),\n+        delete: [63; 63),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [63; 63),\n+        delete: [63; 63),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [63; 63),\n+        delete: [63; 63),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [63; 63),\n+        delete: [63; 63),\n+        insert: \"return $0;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [63; 63),\n+        delete: [63; 63),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n \n         // No completion: lambda isolates control flow\n-        check_keyword_completion(\n-            \"completes_break_and_continue_in_loops2\",\n-            r\"\n-            fn quux() -> i32 {\n-                loop { || { <|> } }\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn quux() -> i32 {\n+                    loop { || { <|> } }\n+                }\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [68; 68),\n+        delete: [68; 68),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [68; 68),\n+        delete: [68; 68),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [68; 68),\n+        delete: [68; 68),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [68; 68),\n+        delete: [68; 68),\n+        insert: \"return $0;\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [68; 68),\n+        delete: [68; 68),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn no_semi_after_break_continue_in_expr() {\n-        check_keyword_completion(\n-            \"no_semi_after_break_continue_in_expr\",\n-            r\"\n-            fn f() {\n-                loop {\n-                    match () {\n-                        () => br<|>\n+        assert_debug_snapshot_matches!(\n+            do_keyword_completion(\n+                r\"\n+                fn f() {\n+                    loop {\n+                        match () {\n+                            () => br<|>\n+                        }\n                     }\n                 }\n-            }\n-            \",\n+                \",\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"break\",\n+        source_range: [122; 124),\n+        delete: [122; 124),\n+        insert: \"break\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"continue\",\n+        source_range: [122; 124),\n+        delete: [122; 124),\n+        insert: \"continue\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"if\",\n+        source_range: [122; 124),\n+        delete: [122; 124),\n+        insert: \"if $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"loop\",\n+        source_range: [122; 124),\n+        delete: [122; 124),\n+        insert: \"loop {$0}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"match\",\n+        source_range: [122; 124),\n+        delete: [122; 124),\n+        insert: \"match $0 {}\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"return\",\n+        source_range: [122; 124),\n+        delete: [122; 124),\n+        insert: \"return\",\n+        kind: Keyword,\n+    },\n+    CompletionItem {\n+        label: \"while\",\n+        source_range: [122; 124),\n+        delete: [122; 124),\n+        insert: \"while $0 {}\",\n+        kind: Keyword,\n+    },\n+]\"###\n         )\n     }\n }"}, {"sha": "b6f95c1ff07e4fe9ec8dcbaaede754235f835f14", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completes_break_and_continue_in_loops1.snap", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops1.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,57 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.067956470Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"break\",\n-        source_range: [55; 55),\n-        delete: [55; 55),\n-        insert: \"break;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"continue\",\n-        source_range: [55; 55),\n-        delete: [55; 55),\n-        insert: \"continue;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [55; 55),\n-        delete: [55; 55),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [55; 55),\n-        delete: [55; 55),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [55; 55),\n-        delete: [55; 55),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [55; 55),\n-        delete: [55; 55),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [55; 55),\n-        delete: [55; 55),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "9b37478efe18b3d96ec1149ed0cdd17f8ef0667c", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completes_break_and_continue_in_loops2.snap", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops2.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,43 +0,0 @@\n----\n-created: \"2019-05-23T22:44:10.859967190Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [60; 60),\n-        delete: [60; 60),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [60; 60),\n-        delete: [60; 60),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [60; 60),\n-        delete: [60; 60),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [60; 60),\n-        delete: [60; 60),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [60; 60),\n-        delete: [60; 60),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "9d320c71541eb1245b222d7a75693362307ad1f9", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_add_semi_after_return_if_not_a_statement.snap", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_add_semi_after_return_if_not_a_statement.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_add_semi_after_return_if_not_a_statement.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_add_semi_after_return_if_not_a_statement.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,43 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.081993214Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [85; 85),\n-        delete: [85; 85),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [85; 85),\n-        delete: [85; 85),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [85; 85),\n-        delete: [85; 85),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [85; 85),\n-        delete: [85; 85),\n-        insert: \"return $0\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [85; 85),\n-        delete: [85; 85),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "34a44bb70399e217ec9302423f00eb7e94ed8492", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function1.snap", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function1.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,43 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.075690846Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"return;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "ac744f3625daf232c972d61a70d4b13f046977e6", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function2.snap", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function2.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,57 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.068799431Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"else\",\n-        source_range: [92; 92),\n-        delete: [92; 92),\n-        insert: \"else {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"else if\",\n-        source_range: [92; 92),\n-        delete: [92; 92),\n-        insert: \"else if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [92; 92),\n-        delete: [92; 92),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [92; 92),\n-        delete: [92; 92),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [92; 92),\n-        delete: [92; 92),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [92; 92),\n-        delete: [92; 92),\n-        insert: \"return;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [92; 92),\n-        delete: [92; 92),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "1098ecf54c2152ce5b6ce7293a2639f475884985", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function3.snap", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function3.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function3.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function3.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,43 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.085655258Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [48; 48),\n-        delete: [48; 48),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [48; 48),\n-        delete: [48; 48),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [48; 48),\n-        delete: [48; 48),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [48; 48),\n-        delete: [48; 48),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [48; 48),\n-        delete: [48; 48),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "3c5eca1baaea6d7ffc3986af502827b434fd5deb", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function4.snap", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function4.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function4.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function4.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,43 +0,0 @@\n----\n-created: \"2019-05-23T22:44:10.869539856Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"return;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [41; 41),\n-        delete: [41; 41),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "71d7e9de844bf2be7251eaa40d73b9d73c64bef8", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_use_stmt1.snap", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt1.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,29 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.066687241Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"crate\",\n-        source_range: [17; 17),\n-        delete: [17; 17),\n-        insert: \"crate::\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [17; 17),\n-        delete: [17; 17),\n-        insert: \"self\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"super\",\n-        source_range: [17; 17),\n-        delete: [17; 17),\n-        insert: \"super::\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "ad156fb44049653566b2b4e24c93cfe1047d7dbd", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_use_stmt2.snap", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt2.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,22 +0,0 @@\n----\n-created: \"2019-05-23T22:44:10.859494330Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [20; 20),\n-        delete: [20; 20),\n-        insert: \"self\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"super\",\n-        source_range: [20; 20),\n-        delete: [20; 20),\n-        insert: \"super::\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "e7b11d532ee11270f48d7808665ec0603e53427f", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_use_stmt3.snap", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt3.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt3.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt3.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,22 +0,0 @@\n----\n-created: \"2019-05-23T22:44:40.506690279Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [24; 24),\n-        delete: [24; 24),\n-        insert: \"self\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"super\",\n-        source_range: [24; 24),\n-        delete: [24; 24),\n-        insert: \"super::\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "e7069dc0c05020db778ea98ae688626cfa0aa6b5", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__last_return_in_block_has_semi1.snap", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi1.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,43 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.082403612Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "47beb904bcdf8ff82be91f89523ca7d2c0de4b1d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__last_return_in_block_has_semi2.snap", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi2.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,43 +0,0 @@\n----\n-created: \"2019-05-23T22:44:10.871868390Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}, {"sha": "22e25fe3dc9db431c8e6ed19f95231a4b0ae8331", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__no_semi_after_break_continue_in_expr.snap", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_semi_after_break_continue_in_expr.snap", "raw_url": "https://github.com/rust-lang/rust/raw/6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_semi_after_break_continue_in_expr.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_semi_after_break_continue_in_expr.snap?ref=6aa8d8b99da1641f1cbec6c767187dfdb7cee0dc", "patch": "@@ -1,57 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.085365816Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"break\",\n-        source_range: [106; 108),\n-        delete: [106; 108),\n-        insert: \"break\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"continue\",\n-        source_range: [106; 108),\n-        delete: [106; 108),\n-        insert: \"continue\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [106; 108),\n-        delete: [106; 108),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [106; 108),\n-        delete: [106; 108),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [106; 108),\n-        delete: [106; 108),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [106; 108),\n-        delete: [106; 108),\n-        insert: \"return\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [106; 108),\n-        delete: [106; 108),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]"}]}