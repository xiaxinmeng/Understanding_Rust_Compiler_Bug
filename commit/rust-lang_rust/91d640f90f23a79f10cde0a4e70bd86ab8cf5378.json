{"sha": "91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZDY0MGY5MGYyM2E3OWYxMGNkZTBhNGU3MGJkODZhYjhjZjUzNzg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-25T23:21:50Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-25T23:21:50Z"}, "message": "Merge obj-drop and closure-drop code, handles freeing bound exteriors now.", "tree": {"sha": "3150ce55a053e36984eaf51b782b433612f0289a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3150ce55a053e36984eaf51b782b433612f0289a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "html_url": "https://github.com/rust-lang/rust/commit/91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e0f486ea6fb168f5ffd61febd71217e5d16d1bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0f486ea6fb168f5ffd61febd71217e5d16d1bf", "html_url": "https://github.com/rust-lang/rust/commit/8e0f486ea6fb168f5ffd61febd71217e5d16d1bf"}], "stats": {"total": 105, "additions": 61, "deletions": 44}, "files": [{"sha": "5d7b9dc9b2f0c4a4fc1531474e06d4cf3cf7ba8e", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "patch": "@@ -435,6 +435,7 @@ TEST_XFAILS_LLVM := $(TASK_XFAILS) \\\n                       basic.rs \\\n                       basic-1.rs \\\n                       basic-2.rs \\\n+                      bind-exterior.rs \\\n                       bind-obj-ctor.rs \\\n                       bind-thunk.rs \\\n                       bind-trivial.rs \\"}, {"sha": "be777bc68b9836adcd77ff076bc926d5c6baf763", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "patch": "@@ -1918,19 +1918,24 @@ let rec closure_box_rty\n \n   let rc = word_rty word_bits in\n   let tydesc = sp (tydesc_rty word_bits) in\n-  let targ = fn_rty word_bits in\n+  let targ = fn_rty true word_bits in\n   let bound_args = r (Array.map (slot_referent_type word_bits) bs) in\n \n     r [| rc; r [| tydesc; targ; bound_args |] |]\n \n-and fn_rty (word_bits:Il.bits) : Il.referent_ty =\n+and fn_rty (opaque_box_body:bool) (word_bits:Il.bits) : Il.referent_ty =\n   let s t = Il.ScalarTy t in\n   let p t = Il.AddrTy t in\n   let sp t = s (p t) in\n   let r rtys = Il.StructTy rtys in\n   let word = word_rty word_bits in\n \n-  let box_ptr = sp (Il.StructTy [| word; Il.OpaqueTy |]) in\n+  let box =\n+    if opaque_box_body\n+    then r [| word; Il.OpaqueTy |]\n+    else closure_box_rty word_bits [||]\n+  in\n+  let box_ptr = sp box in\n   let code_ptr = sp Il.CodeTy in\n \n     r [| code_ptr; box_ptr |]\n@@ -1985,7 +1990,7 @@ and referent_type (word_bits:Il.bits) (t:Ast.ty) : Il.referent_ty =\n       | Ast.TY_tup tt -> tup tt\n       | Ast.TY_rec tr -> tup (Array.map snd tr)\n \n-      | Ast.TY_fn _ -> fn_rty word_bits\n+      | Ast.TY_fn _ -> fn_rty false word_bits\n       | Ast.TY_obj _ -> obj_rty word_bits\n \n       | Ast.TY_tag ttag -> tag ttag"}, {"sha": "f0483e6e7bc84490dd695ceca72ba0a23b8e77b5", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 43, "deletions": 40, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "patch": "@@ -2604,56 +2604,59 @@ let trans_visitor\n \n       match ty with\n \n-          Ast.TY_fn _ ->\n-            note_drop_step ty \"drop_ty: fn path\";\n-            let box = get_element_ptr cell Abi.fn_field_box in\n-            let null_jmp = null_check box in\n-              (* Drop non-null bindings. *)\n-              (* FIXME (issue #58): this is completely wrong, Closures need to\n-               * carry tydescs like objs. For now this only works by accident,\n-               * and will leak closures with box substructure.\n-               *)\n-              drop_ty ty_params box (Ast.TY_box Ast.TY_int) curr_iso;\n-              patch null_jmp;\n-              note_drop_step ty \"drop_ty: done fn path\";\n-\n+          Ast.TY_fn _\n         | Ast.TY_obj _ ->\n-            note_drop_step ty \"drop_ty: obj path\";\n-            let binding = get_element_ptr cell Abi.obj_field_box in\n-            let null_jmp = null_check binding in\n-            let rc_jmp = drop_refcount_and_cmp binding in\n-            let obj_box = deref binding in\n-            let obj = get_element_ptr obj_box Abi.box_rc_field_body in\n-            let tydesc = get_element_ptr obj Abi.obj_body_elt_tydesc in\n-            let body = get_element_ptr obj Abi.obj_body_elt_fields in\n-            let ty_params = get_tydesc_params ty_params tydesc in\n-            let dtor =\n-              get_element_ptr (deref tydesc) Abi.tydesc_field_obj_drop_glue\n+            note_drop_step ty \"drop_ty: obj/fn path\";\n+            let box_ptr =\n+              get_element_ptr cell Abi.binding_field_bound_data\n             in\n-            let null_dtor_jmp = null_check dtor in\n-              (* Call any dtor, if present. *)\n-              note_drop_step ty \"drop_ty: calling obj dtor\";\n-              trans_call_dynamic_glue\n-                tydesc\n-                Abi.tydesc_field_obj_drop_glue\n-                None\n-                [| binding |]\n-                (Some binding);\n-              patch null_dtor_jmp;\n-              (* Drop the body. *)\n-              note_drop_step ty \"drop_ty: dropping obj body\";\n+            let _ = check_box_rty box_ptr in\n+            let null_jmp = null_check box_ptr in\n+            let rc_jmp = drop_refcount_and_cmp box_ptr in\n+            let box = deref box_ptr in\n+            let body = get_element_ptr box Abi.box_rc_field_body in\n+            let tydesc = get_element_ptr body Abi.obj_body_elt_tydesc in\n+            let fields =\n+              match ty with\n+                  Ast.TY_fn _ ->\n+                    get_element_ptr body Abi.closure_body_elt_bound_args\n+                | _ ->\n+                    get_element_ptr body Abi.obj_body_elt_fields\n+            in\n+            let ty_params = get_tydesc_params ty_params tydesc in\n+              begin\n+                match ty with\n+                    Ast.TY_obj _ ->\n+                      let dtor =\n+                        get_element_ptr (deref tydesc)\n+                          Abi.tydesc_field_obj_drop_glue\n+                      in\n+                      let null_dtor_jmp = null_check dtor in\n+                        (* Call any dtor, if present. *)\n+                        note_drop_step ty \"drop_ty: calling obj/fn dtor\";\n+                        trans_call_dynamic_glue\n+                          tydesc\n+                          Abi.tydesc_field_obj_drop_glue\n+                          None\n+                          [| box_ptr |]\n+                          (Some box_ptr);\n+                        patch null_dtor_jmp;\n+                  | _ -> ()\n+              end;\n+              (* Drop the fields. *)\n+              note_drop_step ty \"drop_ty: dropping obj/fn fields\";\n               trans_call_dynamic_glue\n                 tydesc\n                 Abi.tydesc_field_drop_glue\n                 None\n-                [| ty_params; alias body |]\n+                [| ty_params; alias fields |]\n                 None;\n               (* FIXME: this will fail if the user has lied about the\n                * state-ness of their obj. We need to store state-ness in the\n                * captured tydesc, and use that.  *)\n-              note_drop_step ty \"drop_ty: freeing obj body\";\n-              trans_free binding (type_has_state ty);\n-              mov binding zero;\n+              note_drop_step ty \"drop_ty: freeing obj/fn body\";\n+              trans_free box_ptr (type_has_state ty);\n+              mov box_ptr zero;\n               patch rc_jmp;\n               patch null_jmp;\n               note_drop_step ty \"drop_ty: done obj path\";"}, {"sha": "c3fc2e7c3613744d3e10ac66bc6aed016b482bad", "filename": "src/test/run-pass/bind-exterior.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2Ftest%2Frun-pass%2Fbind-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d640f90f23a79f10cde0a4e70bd86ab8cf5378/src%2Ftest%2Frun-pass%2Fbind-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-exterior.rs?ref=91d640f90f23a79f10cde0a4e70bd86ab8cf5378", "patch": "@@ -0,0 +1,8 @@\n+fn foo(@int a, @int b) -> int {\n+  ret a+b;\n+}\n+\n+fn main() {\n+  auto f1 = bind foo(@10, @12);\n+  check(f1() == 22);\n+}"}]}