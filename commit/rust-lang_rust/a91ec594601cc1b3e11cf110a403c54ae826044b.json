{"sha": "a91ec594601cc1b3e11cf110a403c54ae826044b", "node_id": "C_kwDOAAsO6NoAKGE5MWVjNTk0NjAxY2MxYjNlMTFjZjExMGE0MDNjNTRhZTgyNjA0NGI", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-22T05:43:21Z"}, "committer": {"name": "Dharma Saputra Wijaya", "email": "dswijj@gmail.com", "date": "2021-10-26T13:21:46Z"}, "message": "Update `question_mark` expected test output", "tree": {"sha": "e4be097d4db9c75b57cb338b4e359731dae00c72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4be097d4db9c75b57cb338b4e359731dae00c72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a91ec594601cc1b3e11cf110a403c54ae826044b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a91ec594601cc1b3e11cf110a403c54ae826044b", "html_url": "https://github.com/rust-lang/rust/commit/a91ec594601cc1b3e11cf110a403c54ae826044b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a91ec594601cc1b3e11cf110a403c54ae826044b/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1a399d16830ac84c1ce18c2a0e8a77a13edf265", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a399d16830ac84c1ce18c2a0e8a77a13edf265", "html_url": "https://github.com/rust-lang/rust/commit/a1a399d16830ac84c1ce18c2a0e8a77a13edf265"}], "stats": {"total": 53, "additions": 36, "deletions": 17}, "files": [{"sha": "060ea8c8c548ba906596f79ed3661585b51e3862", "filename": "tests/ui/question_mark.fixed", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a91ec594601cc1b3e11cf110a403c54ae826044b/tests%2Fui%2Fquestion_mark.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a91ec594601cc1b3e11cf110a403c54ae826044b/tests%2Fui%2Fquestion_mark.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.fixed?ref=a91ec594601cc1b3e11cf110a403c54ae826044b", "patch": "@@ -2,6 +2,9 @@\n #![allow(unreachable_code)]\n #![allow(clippy::unnecessary_wraps)]\n \n+use std::env;\n+use std::path::PathBuf;\n+\n fn some_func(a: Option<u32>) -> Option<u32> {\n     a?;\n \n@@ -104,18 +107,34 @@ fn func() -> Option<i32> {\n     Some(0)\n }\n \n-fn result_func(x: Result<i32, &str>) -> Result<i32, &str> {\n+fn func_returning_result() -> Result<i32, String> {\n+    Ok(1)\n+}\n+\n+fn result_func(x: Result<i32, String>) -> Result<i32, String> {\n     let _ = x?;\n \n-    x?;\n+    x.as_ref()?;\n \n     // No warning\n     let y = if let Ok(x) = x {\n         x\n     } else {\n-        return Err(\"some error\");\n+        return Err(\"some error\".to_string());\n     };\n \n+    // issue #7859\n+    // no warning\n+    let _ = if let Ok(x) = func_returning_result() {\n+        x\n+    } else {\n+        return Err(\"some error\".to_string());\n+    };\n+\n+    if func_returning_result().is_err() {\n+        return func_returning_result();\n+    }\n+\n     Ok(y)\n }\n "}, {"sha": "8eee7f8cb18d08c74a8cc5ec004b3b15fad68c48", "filename": "tests/ui/question_mark.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a91ec594601cc1b3e11cf110a403c54ae826044b/tests%2Fui%2Fquestion_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a91ec594601cc1b3e11cf110a403c54ae826044b/tests%2Fui%2Fquestion_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.stderr?ref=a91ec594601cc1b3e11cf110a403c54ae826044b", "patch": "@@ -1,5 +1,5 @@\n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:6:5\n+  --> $DIR/question_mark.rs:9:5\n    |\n LL | /     if a.is_none() {\n LL | |         return None;\n@@ -9,23 +9,23 @@ LL | |     }\n    = note: `-D clippy::question-mark` implied by `-D warnings`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:51:9\n+  --> $DIR/question_mark.rs:54:9\n    |\n LL | /         if (self.opt).is_none() {\n LL | |             return None;\n LL | |         }\n    | |_________^ help: replace it with: `(self.opt)?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:55:9\n+  --> $DIR/question_mark.rs:58:9\n    |\n LL | /         if self.opt.is_none() {\n LL | |             return None\n LL | |         }\n    | |_________^ help: replace it with: `self.opt?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:59:17\n+  --> $DIR/question_mark.rs:62:17\n    |\n LL |           let _ = if self.opt.is_none() {\n    |  _________________^\n@@ -36,7 +36,7 @@ LL | |         };\n    | |_________^ help: replace it with: `Some(self.opt?)`\n \n error: this if-let-else may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:65:17\n+  --> $DIR/question_mark.rs:68:17\n    |\n LL |           let _ = if let Some(x) = self.opt {\n    |  _________________^\n@@ -47,31 +47,31 @@ LL | |         };\n    | |_________^ help: replace it with: `self.opt?`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:82:9\n+  --> $DIR/question_mark.rs:85:9\n    |\n LL | /         if self.opt.is_none() {\n LL | |             return None;\n LL | |         }\n    | |_________^ help: replace it with: `self.opt.as_ref()?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:90:9\n+  --> $DIR/question_mark.rs:93:9\n    |\n LL | /         if self.opt.is_none() {\n LL | |             return None;\n LL | |         }\n    | |_________^ help: replace it with: `self.opt.as_ref()?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:98:9\n+  --> $DIR/question_mark.rs:101:9\n    |\n LL | /         if self.opt.is_none() {\n LL | |             return None;\n LL | |         }\n    | |_________^ help: replace it with: `self.opt.as_ref()?;`\n \n error: this if-let-else may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:105:26\n+  --> $DIR/question_mark.rs:108:26\n    |\n LL |           let v: &Vec<_> = if let Some(ref v) = self.opt {\n    |  __________________________^\n@@ -82,7 +82,7 @@ LL | |         };\n    | |_________^ help: replace it with: `self.opt.as_ref()?`\n \n error: this if-let-else may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:115:17\n+  --> $DIR/question_mark.rs:118:17\n    |\n LL |           let v = if let Some(v) = self.opt {\n    |  _________________^\n@@ -93,26 +93,26 @@ LL | |         };\n    | |_________^ help: replace it with: `self.opt?`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:130:5\n+  --> $DIR/question_mark.rs:133:5\n    |\n LL | /     if f().is_none() {\n LL | |         return None;\n LL | |     }\n    | |_____^ help: replace it with: `f()?;`\n \n error: this if-let-else may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:138:13\n+  --> $DIR/question_mark.rs:145:13\n    |\n LL |     let _ = if let Ok(x) = x { x } else { return x };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `x?`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:140:5\n+  --> $DIR/question_mark.rs:147:5\n    |\n LL | /     if x.is_err() {\n LL | |         return x;\n LL | |     }\n-   | |_____^ help: replace it with: `x?;`\n+   | |_____^ help: replace it with: `x.as_ref()?;`\n \n error: aborting due to 13 previous errors\n "}]}