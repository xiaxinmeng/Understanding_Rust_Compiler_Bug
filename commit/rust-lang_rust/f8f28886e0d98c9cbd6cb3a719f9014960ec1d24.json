{"sha": "f8f28886e0d98c9cbd6cb3a719f9014960ec1d24", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZjI4ODg2ZTBkOThjOWNiZDZjYjNhNzE5ZjkwMTQ5NjBlYzFkMjQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-12-13T15:11:42Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-12-13T15:11:42Z"}, "message": "Use memchr in [u8]::contains", "tree": {"sha": "e9cc3ab266d58f96945dec5afcf388f229ab8853", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9cc3ab266d58f96945dec5afcf388f229ab8853"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8f28886e0d98c9cbd6cb3a719f9014960ec1d24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f28886e0d98c9cbd6cb3a719f9014960ec1d24", "html_url": "https://github.com/rust-lang/rust/commit/f8f28886e0d98c9cbd6cb3a719f9014960ec1d24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8f28886e0d98c9cbd6cb3a719f9014960ec1d24/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bf0df777b7712d1b719cd5ac7cce63176b7384c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bf0df777b7712d1b719cd5ac7cce63176b7384c", "html_url": "https://github.com/rust-lang/rust/commit/2bf0df777b7712d1b719cd5ac7cce63176b7384c"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "346ee27331121630a6a78431e2aeedad1f38a530", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f8f28886e0d98c9cbd6cb3a719f9014960ec1d24/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8f28886e0d98c9cbd6cb3a719f9014960ec1d24/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=f8f28886e0d98c9cbd6cb3a719f9014960ec1d24", "patch": "@@ -624,7 +624,7 @@ impl<T> SliceExt for [T] {\n \n     #[inline]\n     fn contains(&self, x: &T) -> bool where T: PartialEq {\n-        self.iter().any(|elt| *x == *elt)\n+        x.slice_contains(self)\n     }\n \n     #[inline]\n@@ -2619,3 +2619,19 @@ unsafe impl<'a, T> TrustedRandomAccess for IterMut<'a, T> {\n     }\n     fn may_have_side_effect() -> bool { false }\n }\n+\n+trait SliceContains: Sized {\n+    fn slice_contains(&self, x: &[Self]) -> bool;\n+}\n+\n+impl<T> SliceContains for T where T: PartialEq {\n+    default fn slice_contains(&self, x: &[Self]) -> bool {\n+        x.iter().any(|y| *y == *self)\n+    }\n+}\n+\n+impl SliceContains for u8 {\n+    fn slice_contains(&self, x: &[Self]) -> bool {\n+        memchr::memchr(*self, x).is_some()\n+    }\n+}"}]}