{"sha": "4d473300a200b26b04335dcd32200878ce8e6e04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNDczMzAwYTIwMGIyNmIwNDMzNWRjZDMyMjAwODc4Y2U4ZTZlMDQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-27T12:55:06Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-28T09:04:26Z"}, "message": "Turn the use of erroneous constants into errors again", "tree": {"sha": "1ed2ecc1771e81b16595211ef887d6425d1a8f0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ed2ecc1771e81b16595211ef887d6425d1a8f0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d473300a200b26b04335dcd32200878ce8e6e04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d473300a200b26b04335dcd32200878ce8e6e04", "html_url": "https://github.com/rust-lang/rust/commit/4d473300a200b26b04335dcd32200878ce8e6e04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d473300a200b26b04335dcd32200878ce8e6e04/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eea1a4e5e28a9a84579ee6a52f115375adefde6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eea1a4e5e28a9a84579ee6a52f115375adefde6", "html_url": "https://github.com/rust-lang/rust/commit/4eea1a4e5e28a9a84579ee6a52f115375adefde6"}], "stats": {"total": 87, "additions": 45, "deletions": 42}, "files": [{"sha": "86427bb2382cb5bc7004ec8bd01b10818e289f81", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -80,7 +80,7 @@ impl<'a, 'gcx, 'tcx> ConstEvalErr<'tcx> {\n             ::mir::interpret::EvalErrorKind::CheckMatchError |\n             ::mir::interpret::EvalErrorKind::Layout(_) => return None,\n             ::mir::interpret::EvalErrorKind::ReferencedConstant(ref inner) => {\n-                inner.struct_generic(tcx, \"referenced constant\", lint_root)?.emit();\n+                inner.struct_generic(tcx, \"referenced constant has errors\", lint_root)?.emit();\n             },\n             _ => {},\n         }"}, {"sha": "3b3c28f6ae2655c2dbd9df61e247ad1be3e33b81", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -170,10 +170,23 @@ impl<'b, 'a, 'tcx:'b> ConstPropagator<'b, 'a, 'tcx> {\n     ) -> Option<Const<'tcx>> {\n         match c.literal {\n             Literal::Value { value } => {\n-                let v = self.use_ecx(source_info, |this| {\n-                    this.ecx.const_to_value(value.val)\n-                })?;\n-                Some((v, value.ty, c.span))\n+                self.ecx.tcx.span = source_info.span;\n+                match self.ecx.const_to_value(value.val) {\n+                    Ok(val) => Some((val, value.ty, c.span)),\n+                    Err(error) => {\n+                        let (stacktrace, span) = self.ecx.generate_stacktrace(None);\n+                        let err = ConstEvalErr {\n+                            span,\n+                            error,\n+                            stacktrace,\n+                        };\n+                        err.report_as_error(\n+                            self.tcx.at(source_info.span),\n+                            \"could not evaluate constant\",\n+                        );\n+                        None\n+                    },\n+                }\n             },\n             // evaluate the promoted and replace the constant with the evaluated result\n             Literal::Promoted { index } => {"}, {"sha": "8683f6a0231921c0e89d84a9dc36fe68edfc6e58", "filename": "src/test/compile-fail/const-err.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err.rs?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -27,4 +27,6 @@ const FOO: u8 = [5u8][1];\n \n fn main() {\n     black_box((FOO, FOO));\n+    //~^ ERROR referenced constant has errors\n+    //~| ERROR could not evaluate constant\n }"}, {"sha": "8bc302a2befa4fca221547969703380a6e194c38", "filename": "src/test/ui/const-eval/conditional_array_execution.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.nll.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -12,7 +12,7 @@ note: lint level defined here\n LL | #![warn(const_err)]\n    |         ^^^^^^^^^\n \n-warning: referenced constant\n+warning: referenced constant has errors\n   --> $DIR/conditional_array_execution.rs:19:20\n    |\n LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n@@ -27,7 +27,7 @@ warning: this expression will panic at runtime\n LL |     println!(\"{}\", FOO);\n    |                    ^^^ referenced constant has errors\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/conditional_array_execution.rs:19:5\n    |\n LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n@@ -48,7 +48,7 @@ LL |     println!(\"{}\", FOO);\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/conditional_array_execution.rs:19:20\n    |\n LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];"}, {"sha": "649da03a5e7fae60d713e0f1eb96805432233e56", "filename": "src/test/ui/const-eval/conditional_array_execution.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fconditional_array_execution.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -12,7 +12,7 @@ note: lint level defined here\n LL | #![warn(const_err)]\n    |         ^^^^^^^^^\n \n-warning: referenced constant\n+warning: referenced constant has errors\n   --> $DIR/conditional_array_execution.rs:19:20\n    |\n LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];\n@@ -27,7 +27,7 @@ warning: this expression will panic at runtime\n LL |     println!(\"{}\", FOO);\n    |                    ^^^ referenced constant has errors\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/conditional_array_execution.rs:19:20\n    |\n LL | const FOO: u32 = [X - Y, Y - X][(X < Y) as usize];"}, {"sha": "5819e6a9254a759bcb63a8c2d0cdf89740824b02", "filename": "src/test/ui/const-eval/issue-43197.nll.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.nll.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -20,7 +20,7 @@ LL |     const Y: u32 = foo(0-1);\n    |                        |\n    |                        attempt to subtract with overflow\n \n-warning: referenced constant\n+warning: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:23\n    |\n LL |     const X: u32 = 0-1;\n@@ -35,7 +35,7 @@ warning: this expression will panic at runtime\n LL |     println!(\"{} {}\", X, Y);\n    |                       ^ referenced constant has errors\n \n-warning: referenced constant\n+warning: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:26\n    |\n LL |     const Y: u32 = foo(0-1);\n@@ -50,7 +50,7 @@ warning: this expression will panic at runtime\n LL |     println!(\"{} {}\", X, Y);\n    |                          ^ referenced constant has errors\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:5\n    |\n LL |     const X: u32 = 0-1;\n@@ -71,7 +71,7 @@ LL |     println!(\"{} {}\", X, Y);\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:26\n    |\n LL |     const Y: u32 = foo(0-1);\n@@ -86,7 +86,7 @@ error[E0080]: erroneous constant used\n LL |     println!(\"{} {}\", X, Y);\n    |                          ^ referenced constant has errors\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:23\n    |\n LL |     const X: u32 = 0-1;"}, {"sha": "bf864d81ea3ca179f34825c5b01ab59f13daf2de", "filename": "src/test/ui/const-eval/issue-43197.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -20,7 +20,7 @@ LL |     const Y: u32 = foo(0-1);\n    |                        |\n    |                        attempt to subtract with overflow\n \n-warning: referenced constant\n+warning: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:23\n    |\n LL |     const X: u32 = 0-1;\n@@ -35,7 +35,7 @@ warning: this expression will panic at runtime\n LL |     println!(\"{} {}\", X, Y);\n    |                       ^ referenced constant has errors\n \n-warning: referenced constant\n+warning: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:26\n    |\n LL |     const Y: u32 = foo(0-1);\n@@ -50,7 +50,7 @@ warning: this expression will panic at runtime\n LL |     println!(\"{} {}\", X, Y);\n    |                          ^ referenced constant has errors\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:26\n    |\n LL |     const Y: u32 = foo(0-1);\n@@ -65,7 +65,7 @@ error[E0080]: erroneous constant used\n LL |     println!(\"{} {}\", X, Y);\n    |                          ^ referenced constant has errors\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-43197.rs:24:23\n    |\n LL |     const X: u32 = 0-1;"}, {"sha": "eeb152e00ea477d2c5d5ea7095acfe69648e824a", "filename": "src/test/ui/const-eval/issue-44578.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.nll.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -1,4 +1,4 @@\n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-44578.rs:35:5\n    |\n LL |     const AMT: usize = [A::AMT][(A::AMT > B::AMT) as usize];\n@@ -19,7 +19,7 @@ LL |     println!(\"{}\", <Bar<u16, u8> as Foo>::AMT);\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-44578.rs:35:20\n    |\n LL |     const AMT: usize = [A::AMT][(A::AMT > B::AMT) as usize];"}, {"sha": "06174f37dcad1145896f92a9d2fa78e3e68a5c7f", "filename": "src/test/ui/const-eval/issue-44578.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-44578.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -1,4 +1,4 @@\n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-44578.rs:35:20\n    |\n LL |     const AMT: usize = [A::AMT][(A::AMT > B::AMT) as usize];"}, {"sha": "1e37e9498120fb64da6ba57d8feb4f03c1381103", "filename": "src/test/ui/const-eval/issue-50814-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-50814-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-50814-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-50814-2.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -1,4 +1,4 @@\n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-50814-2.rs:26:5\n    |\n LL |     const BAR: usize = [5, 6, 7][T::BOO];"}, {"sha": "16160207c573ba20d39f923db33cf0d30d687d6d", "filename": "src/test/ui/const-eval/issue-50814.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-50814.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-eval%2Fissue-50814.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-50814.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -1,4 +1,4 @@\n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/issue-50814.rs:27:5\n    |\n LL |     const MAX: u8 = A::MAX + B::MAX;"}, {"sha": "8db1411005e5772daa8548a395adc18fd16205f2", "filename": "src/test/ui/const-len-underflow-separate-spans.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.rs?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -20,7 +20,6 @@ fn main() {\n     let a: [i8; LEN] = unimplemented!();\n //~^ ERROR E0080\n //~| ERROR E0080\n-//~| ERROR const_err\n-//~| ERROR const_err\n-//~| ERROR const_err\n+//~| ERROR E0080\n+//~| ERROR E0080\n }"}, {"sha": "cf97a0dc5557866a674705f84fffc56b41ce1dac", "filename": "src/test/ui/const-len-underflow-separate-spans.stderr", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d473300a200b26b04335dcd32200878ce8e6e04/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-len-underflow-separate-spans.stderr?ref=4d473300a200b26b04335dcd32200878ce8e6e04", "patch": "@@ -1,30 +1,19 @@\n-error: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/const-len-underflow-separate-spans.rs:20:17\n    |\n LL | const LEN: usize = ONE - TWO;\n    |                    --------- attempt to subtract with overflow\n ...\n LL |     let a: [i8; LEN] = unimplemented!();\n    |                 ^^^\n-   |\n-   = note: #[deny(const_err)] on by default\n \n-error: this expression will panic at runtime\n+error[E0080]: could not evaluate constant\n   --> $DIR/const-len-underflow-separate-spans.rs:20:17\n    |\n LL |     let a: [i8; LEN] = unimplemented!();\n    |                 ^^^ referenced constant has errors\n \n-error: referenced constant\n-  --> $DIR/const-len-underflow-separate-spans.rs:20:17\n-   |\n-LL | const LEN: usize = ONE - TWO;\n-   |                    --------- attempt to subtract with overflow\n-...\n-LL |     let a: [i8; LEN] = unimplemented!();\n-   |                 ^^^\n-\n-error[E0080]: referenced constant\n+error[E0080]: referenced constant has errors\n   --> $DIR/const-len-underflow-separate-spans.rs:20:12\n    |\n LL | const LEN: usize = ONE - TWO;\n@@ -41,6 +30,6 @@ LL |     let a: [i8; LEN] = unimplemented!();\n    |                 |\n    |                 referenced constant has errors\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}]}