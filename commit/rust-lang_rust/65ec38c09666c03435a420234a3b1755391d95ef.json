{"sha": "65ec38c09666c03435a420234a3b1755391d95ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZWMzOGMwOTY2NmMwMzQzNWE0MjAyMzRhM2IxNzU1MzkxZDk1ZWY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T20:07:30Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T20:07:30Z"}, "message": "rustc: Cleanup formatting in rustc.rs", "tree": {"sha": "0e85c257bc2750507e74c16340c2bf87c1e91d3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e85c257bc2750507e74c16340c2bf87c1e91d3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65ec38c09666c03435a420234a3b1755391d95ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65ec38c09666c03435a420234a3b1755391d95ef", "html_url": "https://github.com/rust-lang/rust/commit/65ec38c09666c03435a420234a3b1755391d95ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65ec38c09666c03435a420234a3b1755391d95ef/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1122a67073f8587c7cf4d4a68fd37cdabed4298", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1122a67073f8587c7cf4d4a68fd37cdabed4298", "html_url": "https://github.com/rust-lang/rust/commit/c1122a67073f8587c7cf4d4a68fd37cdabed4298"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "5e1b5b6c4a22cf822c4548333495b6ab115179bf", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/65ec38c09666c03435a420234a3b1755391d95ef/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ec38c09666c03435a420234a3b1755391d95ef/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=65ec38c09666c03435a420234a3b1755391d95ef", "patch": "@@ -44,17 +44,15 @@ fn default_environment(session::session sess,\n         case (session::os_linux) { libc = \"libc.so.6\"; }\n     }\n \n-    ret\n-        [\n-            // Target bindings.\n-            tup(\"target_os\", eval::val_str(std::os::target_os())),\n-            tup(\"target_arch\", eval::val_str(\"x86\")),\n-            tup(\"target_libc\", eval::val_str(libc)),\n-\n-            // Build bindings.\n-            tup(\"build_compiler\", eval::val_str(argv0)),\n-            tup(\"build_input\", eval::val_str(input))\n-            ];\n+    ret [// Target bindings.\n+         tup(\"target_os\", eval::val_str(std::os::target_os())),\n+         tup(\"target_arch\", eval::val_str(\"x86\")),\n+         tup(\"target_libc\", eval::val_str(libc)),\n+\n+         // Build bindings.\n+         tup(\"build_compiler\", eval::val_str(argv0)),\n+         tup(\"build_input\", eval::val_str(input))\n+         ];\n }\n \n fn parse_input(session::session sess,\n@@ -286,8 +284,7 @@ fn main(vec[str] args) {\n     if (opt_present(match, \"O\")) {\n         optLevel = 2u;\n         if (opt_present(match, \"OptLevel\")) {\n-            log\n-                (\"error: -O and --OptLevel both provided\");\n+            log_err \"error: -O and --OptLevel both provided\";\n             fail;\n         }\n     }\n@@ -302,14 +299,13 @@ fn main(vec[str] args) {\n                     case (\"2\") { optLevel = 2u; }\n                     case (\"3\") { optLevel = 3u; }\n                     case (_) {\n-                        log\n-                        (\"error: optimization level needs to be between 0-3\");\n+                        log_err \"error: optimization level needs to be between 0-3\";\n                         fail;\n                     }\n                 }\n             }\n             case (none[str]) {\n-                log(\"error: expected optimization level after --OptLevel=\");\n+                log_err \"error: expected optimization level after --OptLevel=\";\n                 fail;\n             }\n         }"}]}