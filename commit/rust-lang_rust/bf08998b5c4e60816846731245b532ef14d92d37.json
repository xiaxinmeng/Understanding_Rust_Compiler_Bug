{"sha": "bf08998b5c4e60816846731245b532ef14d92d37", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMDg5OThiNWM0ZTYwODE2ODQ2NzMxMjQ1YjUzMmVmMTRkOTJkMzc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-31T07:50:43Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-31T07:50:43Z"}, "message": "Use `is_empty()`", "tree": {"sha": "65c74054f77b02223c0b5f638688516fba7c4ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65c74054f77b02223c0b5f638688516fba7c4ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf08998b5c4e60816846731245b532ef14d92d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf08998b5c4e60816846731245b532ef14d92d37", "html_url": "https://github.com/rust-lang/rust/commit/bf08998b5c4e60816846731245b532ef14d92d37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf08998b5c4e60816846731245b532ef14d92d37/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9086b17e14d9a7c50065b72a626822ce488226d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9086b17e14d9a7c50065b72a626822ce488226d8", "html_url": "https://github.com/rust-lang/rust/commit/9086b17e14d9a7c50065b72a626822ce488226d8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "445891ff58a088d484c9532278bc130ecc94f08e", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf08998b5c4e60816846731245b532ef14d92d37/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf08998b5c4e60816846731245b532ef14d92d37/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=bf08998b5c4e60816846731245b532ef14d92d37", "patch": "@@ -54,7 +54,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MultipleInherentImpl {\n             // Remember for each inherent implementation encoutered its span and generics\n             // but filter out implementations that have generic params (type or lifetime)\n             // or are derived from a macro\n-            if !in_macro(item.span) && generics.params.len() == 0 {\n+            if !in_macro(item.span) && generics.params.is_empty() {\n                 self.impls.insert(item.hir_id.owner_def_id(), item.span);\n             }\n         }"}]}