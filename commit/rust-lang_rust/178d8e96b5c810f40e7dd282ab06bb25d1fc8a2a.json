{"sha": "178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3OGQ4ZTk2YjVjODEwZjQwZTdkZDI4MmFiMDZiYjI1ZDFmYzhhMmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T14:43:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T15:28:51Z"}, "message": "use Source for StructField", "tree": {"sha": "6ce44285c249ef6a7f8803a3be2de579f97ba766", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ce44285c249ef6a7f8803a3be2de579f97ba766"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "html_url": "https://github.com/rust-lang/rust/commit/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b94b429e5a76a0518b07111f8faf0dca7457948", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b94b429e5a76a0518b07111f8faf0dca7457948", "html_url": "https://github.com/rust-lang/rust/commit/8b94b429e5a76a0518b07111f8faf0dca7457948"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "0e08830d1478b8195c206227f9aa827670bfca04", "filename": "crates/ra_assists/src/fill_match_arms.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_assists%2Fsrc%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_assists%2Fsrc%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ffill_match_arms.rs?ref=178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "patch": "@@ -44,8 +44,8 @@ pub(crate) fn fill_match_arms(mut ctx: AssistCtx<impl HirDatabase>) -> Option<As\n                 .into_iter()\n                 .map(|field| {\n                     let name = field.name(db).to_string();\n-                    let (_, source) = field.source(db);\n-                    match source {\n+                    let src = field.source(db);\n+                    match src.ast {\n                         FieldSource::Named(_) => name,\n                         FieldSource::Pos(_) => \"_\".to_string(),\n                     }"}, {"sha": "4c121503e9e0f9a46f8595e18a4e0b318f7fcc30", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "patch": "@@ -346,13 +346,20 @@ pub enum FieldSource {\n     Pos(TreeArc<ast::PosFieldDef>),\n }\n \n+impl HasSource for StructField {\n+    type Ast = FieldSource;\n+    fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<FieldSource> {\n+        self.source_impl(db).into()\n+    }\n+}\n+\n impl StructField {\n     pub fn name(&self, db: &impl HirDatabase) -> Name {\n         self.parent.variant_data(db).fields().unwrap()[self.id].name.clone()\n     }\n \n-    pub fn source(&self, db: &(impl DefDatabase + AstDatabase)) -> (HirFileId, FieldSource) {\n-        self.source_impl(db)\n+    pub fn source(&self, db: &(impl DefDatabase + AstDatabase)) -> Source<FieldSource> {\n+        self.source_impl(db).into()\n     }\n \n     pub fn ty(&self, db: &impl HirDatabase) -> Ty {"}, {"sha": "ae82d55a53e069871516dc74b4708a59e56a1940", "filename": "crates/ra_hir/src/docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdocs.rs?ref=178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "patch": "@@ -72,7 +72,7 @@ pub(crate) fn documentation_query(\n ) -> Option<Documentation> {\n     match def {\n         DocDef::Module(it) => docs_from_ast(&*it.declaration_source(db)?.1),\n-        DocDef::StructField(it) => match it.source(db).1 {\n+        DocDef::StructField(it) => match it.source(db).ast {\n             FieldSource::Named(named) => docs_from_ast(&*named),\n             FieldSource::Pos(..) => return None,\n         },"}, {"sha": "efba122b17dd2469942f11a665d6744aefdc450d", "filename": "crates/ra_ide_api/src/display/navigation_target.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "patch": "@@ -168,9 +168,9 @@ impl NavigationTarget {\n     }\n \n     pub(crate) fn from_field(db: &RootDatabase, field: hir::StructField) -> NavigationTarget {\n-        let (file_id, field) = field.source(db);\n-        let file_id = file_id.original_file(db);\n-        match field {\n+        let src = field.source(db);\n+        let file_id = src.file_id.original_file(db);\n+        match src.ast {\n             FieldSource::Named(it) => {\n                 NavigationTarget::from_named(file_id, &*it, it.doc_comment_text(), it.short_label())\n             }"}, {"sha": "e43c1d8e5860e303ef6f4ada94754cc3a40503db", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=178d8e96b5c810f40e7dd282ab06bb25d1fc8a2a", "patch": "@@ -102,8 +102,8 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n                 res.extend(hover_text(src.ast.doc_comment_text(), None));\n             }\n             Some(FieldAccess(it)) => {\n-                let it = it.source(db).1;\n-                if let hir::FieldSource::Named(it) = it {\n+                let src = it.source(db);\n+                if let hir::FieldSource::Named(it) = src.ast {\n                     res.extend(hover_text(it.doc_comment_text(), it.short_label()));\n                 }\n             }"}]}