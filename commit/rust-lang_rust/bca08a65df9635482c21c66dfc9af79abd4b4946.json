{"sha": "bca08a65df9635482c21c66dfc9af79abd4b4946", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYTA4YTY1ZGY5NjM1NDgyYzIxYzY2ZGZjOWFmNzlhYmQ0YjQ5NDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-27T06:16:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-27T06:16:55Z"}, "message": "Auto merge of #4589 - mikerite:booleans-refactor-20190925, r=phansch\n\nRefactor `booleans`\n\nRemove unused output from `suggest(..)`\n\nchangelog: none", "tree": {"sha": "3ee11b56d24079926dd90c581f9bd4f28e3de771", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ee11b56d24079926dd90c581f9bd4f28e3de771"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bca08a65df9635482c21c66dfc9af79abd4b4946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bca08a65df9635482c21c66dfc9af79abd4b4946", "html_url": "https://github.com/rust-lang/rust/commit/bca08a65df9635482c21c66dfc9af79abd4b4946", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bca08a65df9635482c21c66dfc9af79abd4b4946/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7d7456303a5f451668a8a47c016f3f78207f79c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7d7456303a5f451668a8a47c016f3f78207f79c", "html_url": "https://github.com/rust-lang/rust/commit/f7d7456303a5f451668a8a47c016f3f78207f79c"}, {"sha": "8b9415cd88370cad63b489181567b4e387c6010b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b9415cd88370cad63b489181567b4e387c6010b", "html_url": "https://github.com/rust-lang/rust/commit/8b9415cd88370cad63b489181567b4e387c6010b"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "461abf86ea555f88c0b914621662024f353c260c", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bca08a65df9635482c21c66dfc9af79abd4b4946/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca08a65df9635482c21c66dfc9af79abd4b4946/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=bca08a65df9635482c21c66dfc9af79abd4b4946", "patch": "@@ -156,7 +156,6 @@ struct SuggestContext<'a, 'tcx, 'v> {\n     terminals: &'v [&'v Expr],\n     cx: &'a LateContext<'a, 'tcx>,\n     output: String,\n-    simplified: bool,\n }\n \n impl<'a, 'tcx, 'v> SuggestContext<'a, 'tcx, 'v> {\n@@ -179,7 +178,6 @@ impl<'a, 'tcx, 'v> SuggestContext<'a, 'tcx, 'v> {\n                 Term(n) => {\n                     let terminal = self.terminals[n as usize];\n                     if let Some(str) = simplify_not(self.cx, terminal) {\n-                        self.simplified = true;\n                         self.output.push_str(&str)\n                     } else {\n                         self.output.push('!');\n@@ -264,16 +262,14 @@ fn simplify_not(cx: &LateContext<'_, '_>, expr: &Expr) -> Option<String> {\n     }\n }\n \n-// The boolean part of the return indicates whether some simplifications have been applied.\n-fn suggest(cx: &LateContext<'_, '_>, suggestion: &Bool, terminals: &[&Expr]) -> (String, bool) {\n+fn suggest(cx: &LateContext<'_, '_>, suggestion: &Bool, terminals: &[&Expr]) -> String {\n     let mut suggest_context = SuggestContext {\n         terminals,\n         cx,\n         output: String::new(),\n-        simplified: false,\n     };\n     suggest_context.recurse(suggestion);\n-    (suggest_context.output, suggest_context.simplified)\n+    suggest_context.output\n }\n \n fn simple_negate(b: Bool) -> Bool {\n@@ -383,7 +379,7 @@ impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n                                 db.span_suggestion(\n                                     e.span,\n                                     \"it would look like the following\",\n-                                    suggest(self.cx, suggestion, &h2q.terminals).0,\n+                                    suggest(self.cx, suggestion, &h2q.terminals),\n                                     // nonminimal_bool can produce minimal but\n                                     // not human readable expressions (#3141)\n                                     Applicability::Unspecified,\n@@ -428,7 +424,7 @@ impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n                 nonminimal_bool_lint(\n                     improvements\n                         .into_iter()\n-                        .map(|suggestion| suggest(self.cx, suggestion, &h2q.terminals).0)\n+                        .map(|suggestion| suggest(self.cx, suggestion, &h2q.terminals))\n                         .collect(),\n                 );\n             }"}]}