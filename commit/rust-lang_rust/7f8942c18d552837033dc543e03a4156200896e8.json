{"sha": "7f8942c18d552837033dc543e03a4156200896e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmODk0MmMxOGQ1NTI4MzcwMzNkYzU0M2UwM2E0MTU2MjAwODk2ZTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-14T13:26:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-14T13:26:19Z"}, "message": "Correct nits from @nrc", "tree": {"sha": "2a696344d097c3cc5f65d9a217c68d5803112ad8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a696344d097c3cc5f65d9a217c68d5803112ad8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f8942c18d552837033dc543e03a4156200896e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f8942c18d552837033dc543e03a4156200896e8", "html_url": "https://github.com/rust-lang/rust/commit/7f8942c18d552837033dc543e03a4156200896e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f8942c18d552837033dc543e03a4156200896e8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "401a2435521ad63a0d780a719f4f5cf9f8b6ae90", "url": "https://api.github.com/repos/rust-lang/rust/commits/401a2435521ad63a0d780a719f4f5cf9f8b6ae90", "html_url": "https://github.com/rust-lang/rust/commit/401a2435521ad63a0d780a719f4f5cf9f8b6ae90"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "9a2570d710d387bf6d353648c53023be2ddd0deb", "filename": "src/librustc/middle/outlives.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f8942c18d552837033dc543e03a4156200896e8/src%2Flibrustc%2Fmiddle%2Foutlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f8942c18d552837033dc543e03a4156200896e8/src%2Flibrustc%2Fmiddle%2Foutlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Foutlives.rs?ref=7f8942c18d552837033dc543e03a4156200896e8", "patch": "@@ -54,6 +54,10 @@ pub enum Component<'tcx> {\n     // the future without breaking backwards compat.\n     EscapingProjection(Vec<Component<'tcx>>),\n \n+    // This is a temporary marker indicating \"outlives components\"\n+    // that are due to the new rules introduced by RFC 1214.  For the\n+    // time being, violations of these requirements generally induce\n+    // warnings, not errors.\n     RFC1214(Vec<Component<'tcx>>),\n }\n \n@@ -64,7 +68,7 @@ pub fn components<'a,'tcx>(infcx: &InferCtxt<'a,'tcx>,\n                            -> Vec<Component<'tcx>> {\n     let mut components = vec![];\n     compute_components(infcx, ty0, &mut components);\n-    debug!(\"outlives({:?}) = {:?}\", ty0, components);\n+    debug!(\"components({:?}) = {:?}\", ty0, components);\n     components\n }\n "}, {"sha": "670b9d72d868bb25c649737057fed38f0148346b", "filename": "src/librustc/middle/wf.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f8942c18d552837033dc543e03a4156200896e8/src%2Flibrustc%2Fmiddle%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f8942c18d552837033dc543e03a4156200896e8/src%2Flibrustc%2Fmiddle%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fwf.rs?ref=7f8942c18d552837033dc543e03a4156200896e8", "patch": "@@ -122,9 +122,9 @@ pub enum ImpliedBound<'tcx> {\n     RegionSubProjection(ty::Region, ty::ProjectionTy<'tcx>),\n }\n \n-/// This routine computes the full set of well-formedness constraints\n-/// that must hold for the type `ty` to appear in a context with\n-/// lifetime `outer_region`.\n+/// Compute the implied bounds that a callee/impl can assume based on\n+/// the fact that caller/projector has ensured that `ty` is WF.  See\n+/// the `ImpliedBound` type for more details.\n pub fn implied_bounds<'a,'tcx>(\n     infcx: &'a InferCtxt<'a,'tcx>,\n     body_id: ast::NodeId,"}, {"sha": "ced3ee82de2bdc20721c724206594fe9d1e796ae", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7f8942c18d552837033dc543e03a4156200896e8/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f8942c18d552837033dc543e03a4156200896e8/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=7f8942c18d552837033dc543e03a4156200896e8", "patch": "@@ -1732,11 +1732,6 @@ fn projection_bound<'a, 'tcx>(rcx: &Rcx<'a, 'tcx>,\n \n     // see the extensive comment in projection_must_outlive\n \n-    // this routine is not invoked in this case\n-    assert!(\n-        !projection_ty.trait_ref.substs.types.iter().any(|t| t.needs_infer()) &&\n-            !projection_ty.trait_ref.substs.regions().iter().any(|r| r.needs_infer()));\n-\n     let ty = rcx.tcx().mk_projection(projection_ty.trait_ref, projection_ty.item_name);\n     let recursive_bound = recursive_type_bound(rcx, span, ty);\n "}]}