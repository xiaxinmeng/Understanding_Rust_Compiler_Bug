{"sha": "5c6118339a6d143983c0096b3053aefca694352b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNjExODMzOWE2ZDE0Mzk4M2MwMDk2YjMwNTNhZWZjYTY5NDM1MmI=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-09-29T20:59:53Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-09-29T20:59:53Z"}, "message": "Document that there are many possible null pointers", "tree": {"sha": "83ce0a3265387155421392da059de8d3ba37bad5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83ce0a3265387155421392da059de8d3ba37bad5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c6118339a6d143983c0096b3053aefca694352b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c6118339a6d143983c0096b3053aefca694352b", "html_url": "https://github.com/rust-lang/rust/commit/5c6118339a6d143983c0096b3053aefca694352b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c6118339a6d143983c0096b3053aefca694352b/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b2e09ffbbb69402f8881824f8689f785695a780", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b2e09ffbbb69402f8881824f8689f785695a780", "html_url": "https://github.com/rust-lang/rust/commit/8b2e09ffbbb69402f8881824f8689f785695a780"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "474658b65a154a0ab8854f17a8f9914a6f835b81", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5c6118339a6d143983c0096b3053aefca694352b/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6118339a6d143983c0096b3053aefca694352b/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=5c6118339a6d143983c0096b3053aefca694352b", "patch": "@@ -476,6 +476,11 @@ pub unsafe fn write_volatile<T>(dst: *mut T, src: T) {\n impl<T: ?Sized> *const T {\n     /// Returns `true` if the pointer is null.\n     ///\n+    /// Note that unsized types have many possible null pointers, as only the\n+    /// raw data pointer is considered, not their length, vtable, etc.\n+    /// Therefore, two pointers that are null may still not compare equal to\n+    /// each other.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -1109,6 +1114,11 @@ impl<T: ?Sized> *const T {\n impl<T: ?Sized> *mut T {\n     /// Returns `true` if the pointer is null.\n     ///\n+    /// Note that unsized types have many possible null pointers, as only the\n+    /// raw data pointer is considered, not their length, vtable, etc.\n+    /// Therefore, two pointers that are null may still not compare equal to\n+    /// each other.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:"}]}