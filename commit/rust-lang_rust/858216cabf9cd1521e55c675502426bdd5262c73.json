{"sha": "858216cabf9cd1521e55c675502426bdd5262c73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ODIxNmNhYmY5Y2QxNTIxZTU1YzY3NTUwMjQyNmJkZDUyNjJjNzM=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-02-23T10:16:24Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-12T12:20:14Z"}, "message": "Add fallible Scalar to ScalarInt conversion method", "tree": {"sha": "1577b531dde17cd1cf5178af0af2cfacc2252e71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1577b531dde17cd1cf5178af0af2cfacc2252e71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/858216cabf9cd1521e55c675502426bdd5262c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/858216cabf9cd1521e55c675502426bdd5262c73", "html_url": "https://github.com/rust-lang/rust/commit/858216cabf9cd1521e55c675502426bdd5262c73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/858216cabf9cd1521e55c675502426bdd5262c73/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fe4f38769ff5654cb24a9b84ce69b4cdce46e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe4f38769ff5654cb24a9b84ce69b4cdce46e64", "html_url": "https://github.com/rust-lang/rust/commit/0fe4f38769ff5654cb24a9b84ce69b4cdce46e64"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "3dd905b35b228b94dafae7b01a1e9c10074f87f5", "filename": "compiler/rustc_middle/src/mir/interpret/value.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/858216cabf9cd1521e55c675502426bdd5262c73/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/858216cabf9cd1521e55c675502426bdd5262c73/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs?ref=858216cabf9cd1521e55c675502426bdd5262c73", "patch": "@@ -346,16 +346,13 @@ impl<'tcx, Tag> Scalar<Tag> {\n     #[inline]\n     fn to_bits(self, target_size: Size) -> InterpResult<'tcx, u128> {\n         assert_ne!(target_size.bytes(), 0, \"you should never look at the bits of a ZST\");\n-        match self {\n-            Scalar::Int(int) => int.to_bits(target_size).map_err(|size| {\n-                err_ub!(ScalarSizeMismatch {\n-                    target_size: target_size.bytes(),\n-                    data_size: size.bytes(),\n-                })\n-                .into()\n-            }),\n-            Scalar::Ptr(_) => throw_unsup!(ReadPointerAsBytes),\n-        }\n+        self.to_int()?.to_bits(target_size).map_err(|size| {\n+            err_ub!(ScalarSizeMismatch {\n+                target_size: target_size.bytes(),\n+                data_size: size.bytes(),\n+            })\n+            .into()\n+        })\n     }\n \n     #[inline(always)]\n@@ -364,13 +361,18 @@ impl<'tcx, Tag> Scalar<Tag> {\n     }\n \n     #[inline]\n-    pub fn assert_int(self) -> ScalarInt {\n+    pub fn to_int(self) -> InterpResult<'tcx, ScalarInt> {\n         match self {\n-            Scalar::Ptr(_) => bug!(\"expected an int but got an abstract pointer\"),\n-            Scalar::Int(int) => int,\n+            Scalar::Ptr(_) => throw_unsup!(ReadPointerAsBytes),\n+            Scalar::Int(int) => Ok(int),\n         }\n     }\n \n+    #[inline]\n+    pub fn assert_int(self) -> ScalarInt {\n+        self.to_int().expect(\"expected an int but got an abstract pointer\")\n+    }\n+\n     #[inline]\n     pub fn assert_ptr(self) -> Pointer<Tag> {\n         match self {"}]}