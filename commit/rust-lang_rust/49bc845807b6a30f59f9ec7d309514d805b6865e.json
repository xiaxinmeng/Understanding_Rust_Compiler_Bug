{"sha": "49bc845807b6a30f59f9ec7d309514d805b6865e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YmM4NDU4MDdiNmEzMGY1OWY5ZWM3ZDMwOTUxNGQ4MDViNjg2NWU=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2017-09-17T11:19:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-17T11:19:02Z"}, "message": "Rollup merge of #44397 - GuillaumeGomez:codeblock-color, r=QuietMisdreavus\n\nCodeblock color\n\n<img width=\"1440\" alt=\"screen shot 2017-09-07 at 21 53 58\" src=\"https://user-images.githubusercontent.com/3050060/30183045-4319108e-9419-11e7-98da-da54952cab37.png\">\n\nThis screenshot has been generated from:\n\n```rust\n/// foo\n///\n/// ```compile_fail\n/// foo();\n/// ```\n///\n/// ```ignore\n/// goo();\n/// ```\n///\n/// ```\n/// let x = 0;\n/// ```\npub fn bar() -> usize { 2 }\n```\n\nr? @QuietMisdreavus\ncc @rust-lang/docs", "tree": {"sha": "cd0d41317f5cbb294dd54c4947cf082da64293dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0d41317f5cbb294dd54c4947cf082da64293dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49bc845807b6a30f59f9ec7d309514d805b6865e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49bc845807b6a30f59f9ec7d309514d805b6865e", "html_url": "https://github.com/rust-lang/rust/commit/49bc845807b6a30f59f9ec7d309514d805b6865e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49bc845807b6a30f59f9ec7d309514d805b6865e/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2934588c15fc49c5a1071fba60a893dab9aaced7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2934588c15fc49c5a1071fba60a893dab9aaced7", "html_url": "https://github.com/rust-lang/rust/commit/2934588c15fc49c5a1071fba60a893dab9aaced7"}, {"sha": "79f888da6810e9e38918f524b0882b8eaf40e5a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/79f888da6810e9e38918f524b0882b8eaf40e5a1", "html_url": "https://github.com/rust-lang/rust/commit/79f888da6810e9e38918f524b0882b8eaf40e5a1"}], "stats": {"total": 183, "additions": 173, "deletions": 10}, "files": [{"sha": "081f950e40db222a331587be16d83da373d9a8c4", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=49bc845807b6a30f59f9ec7d309514d805b6865e", "patch": "@@ -34,12 +34,18 @@ use syntax_pos::Span;\n \n /// Highlights `src`, returning the HTML output.\n pub fn render_with_highlighting(src: &str, class: Option<&str>, id: Option<&str>,\n-                                extension: Option<&str>) -> String {\n+                                extension: Option<&str>,\n+                                tooltip: Option<(&str, &str)>) -> String {\n     debug!(\"highlighting: ================\\n{}\\n==============\", src);\n     let sess = parse::ParseSess::new(FilePathMapping::empty());\n     let fm = sess.codemap().new_filemap(\"<stdin>\".to_string(), src.to_string());\n \n     let mut out = Vec::new();\n+    if let Some((tooltip, class)) = tooltip {\n+        write!(out, \"<div class='information'><div class='tooltip {}'>\u26a0<span \\\n+                     class='tooltiptext'>{}</span></div></div>\",\n+               class, tooltip).unwrap();\n+    }\n     write_header(class, id, &mut out).unwrap();\n \n     let mut classifier = Classifier::new(lexer::StringReader::new(&sess, fm), sess.codemap());"}, {"sha": "80d1f0b01cc261dfdd6df65cfdb1029bf6f2a04a", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 39, "deletions": 6, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=49bc845807b6a30f59f9ec7d309514d805b6865e", "patch": "@@ -160,10 +160,15 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n \n     fn next(&mut self) -> Option<Self::Item> {\n         let event = self.inner.next();\n+        let compile_fail;\n+        let ignore;\n         if let Some(Event::Start(Tag::CodeBlock(lang))) = event {\n-            if !LangString::parse(&lang).rust {\n+            let parse_result = LangString::parse(&lang);\n+            if !parse_result.rust {\n                 return Some(Event::Start(Tag::CodeBlock(lang)));\n             }\n+            compile_fail = parse_result.compile_fail;\n+            ignore = parse_result.ignore;\n         } else {\n             return event;\n         }\n@@ -222,11 +227,22 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n                     url, test_escaped, channel\n                 ))\n             });\n+            let tooltip = if ignore {\n+                Some((\"Be careful when using this code, it's not being tested!\", \"ignore\"))\n+            } else if compile_fail {\n+                Some((\"This code doesn't compile so be extra careful!\", \"compile_fail\"))\n+            } else {\n+                None\n+            };\n             s.push_str(&highlight::render_with_highlighting(\n                         &text,\n-                        Some(\"rust-example-rendered\"),\n+                        Some(&format!(\"rust-example-rendered{}\",\n+                                      if ignore { \" ignore\" }\n+                                      else if compile_fail { \" compile_fail\" }\n+                                      else { \"\" })),\n                         None,\n-                        playground_button.as_ref().map(String::as_str)));\n+                        playground_button.as_ref().map(String::as_str),\n+                        tooltip));\n             Some(Event::Html(s.into()))\n         })\n     }\n@@ -556,12 +572,18 @@ pub fn render(w: &mut fmt::Formatter,\n             let origtext = str::from_utf8(text).unwrap();\n             let origtext = origtext.trim_left();\n             debug!(\"docblock: ==============\\n{:?}\\n=======\", text);\n+            let mut compile_fail = false;\n+            let mut ignore = false;\n+\n             let rendered = if lang.is_null() || origtext.is_empty() {\n                 false\n             } else {\n                 let rlang = (*lang).as_bytes();\n                 let rlang = str::from_utf8(rlang).unwrap();\n-                if !LangString::parse(rlang).rust {\n+                let parse_result = LangString::parse(rlang);\n+                compile_fail = parse_result.compile_fail;\n+                ignore = parse_result.ignore;\n+                if !parse_result.rust {\n                     (my_opaque.dfltblk)(ob, orig_text, lang,\n                                         opaque as *const hoedown_renderer_data,\n                                         line);\n@@ -616,11 +638,22 @@ pub fn render(w: &mut fmt::Formatter,\n                         url, test_escaped, channel\n                     ))\n                 });\n+                let tooltip = if ignore {\n+                    Some((\"Be careful when using this code, it's not being tested!\", \"ignore\"))\n+                } else if compile_fail {\n+                    Some((\"This code doesn't compile so be extra careful!\", \"compile_fail\"))\n+                } else {\n+                    None\n+                };\n                 s.push_str(&highlight::render_with_highlighting(\n                                &text,\n-                               Some(\"rust-example-rendered\"),\n+                               Some(&format!(\"rust-example-rendered{}\",\n+                                             if ignore { \" ignore\" }\n+                                             else if compile_fail { \" compile_fail\" }\n+                                             else { \"\" })),\n                                None,\n-                               playground_button.as_ref().map(String::as_str)));\n+                               playground_button.as_ref().map(String::as_str),\n+                               tooltip));\n                 hoedown_buffer_put(ob, s.as_ptr(), s.len());\n             })\n         }"}, {"sha": "c09ce4c4bd31ad949c1475f0803b42a2b3f081d2", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=49bc845807b6a30f59f9ec7d309514d805b6865e", "patch": "@@ -1819,6 +1819,7 @@ fn render_assoc_const_value(item: &clean::Item) -> String {\n                 None,\n                 None,\n                 None,\n+                None,\n             )\n         }\n         _ => String::new(),\n@@ -3647,7 +3648,8 @@ impl<'a> fmt::Display for Source<'a> {\n             write!(fmt, \"<span id=\\\"{0}\\\">{0:1$}</span>\\n\", i, cols)?;\n         }\n         write!(fmt, \"</pre>\")?;\n-        write!(fmt, \"{}\", highlight::render_with_highlighting(s, None, None, None))?;\n+        write!(fmt, \"{}\",\n+               highlight::render_with_highlighting(s, None, None, None, None))?;\n         Ok(())\n     }\n }\n@@ -3657,6 +3659,7 @@ fn item_macro(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n     w.write_str(&highlight::render_with_highlighting(&t.source,\n                                                      Some(\"macro\"),\n                                                      None,\n+                                                     None,\n                                                      None))?;\n     document(w, cx, it)\n }"}, {"sha": "da4430d8a1539fc62170d39d7f25b82532f6a293", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=49bc845807b6a30f59f9ec7d309514d805b6865e", "patch": "@@ -1296,6 +1296,24 @@\n             collapseDocs(i_e.previousSibling.childNodes[0]);\n         });\n     });\n+\n+    onEach(document.getElementsByClassName('rust-example-rendered'), function(e) {\n+        if (hasClass(e, 'compile_fail')) {\n+            e.addEventListener(\"mouseover\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '#f00';\n+            });\n+            e.addEventListener(\"mouseout\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '';\n+            });\n+        } else if (hasClass(e, 'ignore')) {\n+            e.addEventListener(\"mouseover\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '#ff9200';\n+            });\n+            e.addEventListener(\"mouseout\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '';\n+            });\n+        }\n+    });\n }());\n \n // Sets the focus on the search bar at the top of the page"}, {"sha": "c15051376bf2766ee7f94efe155b02c8a696aff4", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=49bc845807b6a30f59f9ec7d309514d805b6865e", "patch": "@@ -612,7 +612,6 @@ pre.rust .question-mark {\n \tfont-weight: bold;\n }\n \n-pre.rust { position: relative; }\n a.test-arrow {\n \tdisplay: inline-block;\n \tposition: absolute;\n@@ -813,3 +812,44 @@ span.since {\n \t\tdisplay: none;\n \t}\n }\n+\n+.information {\n+\tposition: absolute;\n+\tleft: -1px;\n+\tmargin-top: 7px;\n+}\n+\n+.tooltip {\n+\tposition: relative;\n+\tdisplay: inline-block;\n+\tcursor: pointer;\n+}\n+\n+.tooltip .tooltiptext {\n+\twidth: 120px;\n+\tdisplay: none;\n+\tbackground-color: black;\n+\tcolor: #fff;\n+\ttext-align: center;\n+\tpadding: 5px 3px;\n+\tborder-radius: 6px;\n+\tmargin-left: 5px;\n+\ttop: -5px;\n+\tleft: 105%;\n+\tz-index: 1;\n+}\n+\n+.tooltip:hover .tooltiptext {\n+\tdisplay: inline;\n+}\n+\n+.tooltip .tooltiptext::after {\n+\tcontent: \" \";\n+\tposition: absolute;\n+\ttop: 50%;\n+\tleft: 11px;\n+\tmargin-top: -5px;\n+\tborder-width: 5px;\n+\tborder-style: solid;\n+\tborder-color: transparent black transparent transparent;\n+}"}, {"sha": "42d0ec704f45f01f98fef03255209bf0b4d06453", "filename": "src/librustdoc/html/static/styles/main.css", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css?ref=49bc845807b6a30f59f9ec7d309514d805b6865e", "patch": "@@ -202,4 +202,36 @@ a.test-arrow:hover{\n \n :target > code {\n \tbackground: #FDFFD3;\n-}\n\\ No newline at end of file\n+}\n+\n+pre.compile_fail {\n+\tborder-left: 2px solid rgba(255,0,0,.4);\n+}\n+\n+pre.compile_fail:hover, .information:hover + pre.compile_fail {\n+\tborder-left: 2px solid #f00;\n+}\n+\n+pre.ignore {\n+\tborder-left: 2px solid rgba(255,142,0,.4);\n+}\n+\n+pre.ignore:hover, .information:hover + pre.ignore {\n+\tborder-left: 2px solid #ff9200;\n+}\n+\n+.tooltip.compile_fail {\n+\tcolor: rgba(255,0,0,.3);\n+}\n+\n+.information > .compile_fail:hover {\n+\tcolor: #f00;\n+}\n+\n+.tooltip.ignore {\n+\tcolor: rgba(255,142,0,.3);\n+}\n+\n+.information > .ignore:hover {\n+\tcolor: rgba(255,142,0,1);\n+}"}, {"sha": "accefd6b65f28b1344da2385e63b3dc70ea35cc8", "filename": "src/test/rustdoc/codeblock-title.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Ftest%2Frustdoc%2Fcodeblock-title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49bc845807b6a30f59f9ec7d309514d805b6865e/src%2Ftest%2Frustdoc%2Fcodeblock-title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcodeblock-title.rs?ref=49bc845807b6a30f59f9ec7d309514d805b6865e", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// ignore-tidy-linelength\n+\n+// @has foo/fn.bar.html '//*[@class=\"tooltip compile_fail\"]/span' \"This code doesn't compile so be extra careful!\"\n+// @has foo/fn.bar.html '//*[@class=\"tooltip ignore\"]/span' \"Be careful when using this code, it's not being tested!\"\n+\n+/// foo\n+///\n+/// ```compile_fail\n+/// foo();\n+/// ```\n+///\n+/// ```ignore (tidy)\n+/// goo();\n+/// ```\n+///\n+/// ```\n+/// let x = 0;\n+/// ```\n+pub fn bar() -> usize { 2 }"}]}