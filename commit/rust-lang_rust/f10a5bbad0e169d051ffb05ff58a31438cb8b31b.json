{"sha": "f10a5bbad0e169d051ffb05ff58a31438cb8b31b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMGE1YmJhZDBlMTY5ZDA1MWZmYjA1ZmY1OGEzMTQzOGNiOGIzMWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-03T22:23:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-03T22:23:58Z"}, "message": "rustc: Make type_of() return the type of the wrapper for native functions. lib-map now compiles, but fails to work properly.", "tree": {"sha": "d554ecdff724eadabff546f7f93c72f50f459bcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d554ecdff724eadabff546f7f93c72f50f459bcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f10a5bbad0e169d051ffb05ff58a31438cb8b31b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f10a5bbad0e169d051ffb05ff58a31438cb8b31b", "html_url": "https://github.com/rust-lang/rust/commit/f10a5bbad0e169d051ffb05ff58a31438cb8b31b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f10a5bbad0e169d051ffb05ff58a31438cb8b31b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd9f45446a747da26382f08f1769ef98b8e43898", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd9f45446a747da26382f08f1769ef98b8e43898", "html_url": "https://github.com/rust-lang/rust/commit/bd9f45446a747da26382f08f1769ef98b8e43898"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c9fc39459e191f6a585fa976a138d8bae6701587", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f10a5bbad0e169d051ffb05ff58a31438cb8b31b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10a5bbad0e169d051ffb05ff58a31438cb8b31b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f10a5bbad0e169d051ffb05ff58a31438cb8b31b", "patch": "@@ -705,7 +705,7 @@ fn type_of_inner(@crate_ctxt cx, @ty.t t, bool boxed) -> TypeRef {\n             llty = T_fn_pair(cx.tn, type_of_fn(cx, proto, args, out, 0u));\n         }\n         case (ty.ty_native_fn(?abi, ?args, ?out)) {\n-            auto nft = type_of_native_fn(cx, abi, args, out, 0u);\n+            auto nft = native_fn_wrapper_type(cx, 0u, t);\n             llty = T_fn_pair(cx.tn, nft);\n         }\n         case (ty.ty_obj(?meths)) {\n@@ -6101,9 +6101,8 @@ fn native_fn_ty_param_count(@crate_ctxt cx, &ast.def_id id) -> uint {\n     ret count;\n }\n \n-fn native_fn_wrapper_type(@crate_ctxt cx, uint ty_param_count, &ast.ann ann)\n+fn native_fn_wrapper_type(@crate_ctxt cx, uint ty_param_count, @ty.t x)\n         -> TypeRef {\n-    auto x = node_ann_type(cx, ann);\n     alt (x.struct) {\n         case (ty.ty_native_fn(?abi, ?args, ?out)) {\n             ret type_of_fn(cx, ast.proto_fn, args, out, ty_param_count);\n@@ -6119,7 +6118,8 @@ fn decl_native_fn_and_pair(@crate_ctxt cx,\n     auto num_ty_param = native_fn_ty_param_count(cx, id);\n \n     // Declare the wrapper.\n-    auto wrapper_type = native_fn_wrapper_type(cx, num_ty_param, ann);\n+    auto t = node_ann_type(cx, ann);\n+    auto wrapper_type = native_fn_wrapper_type(cx, num_ty_param, t);\n     let str s = mangle_name_by_seq(cx, \"wrapper\");\n     let ValueRef wrapper_fn = decl_internal_fastcall_fn(cx.llmod, s,\n                                                        wrapper_type);"}]}