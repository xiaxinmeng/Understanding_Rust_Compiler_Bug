{"sha": "67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "node_id": "C_kwDOAAsO6NoAKDY3YTliY2IzMWI4NWU4N2NjOGJiMzI3MDIyNjMyZTQ4YTBjYTY0YTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-19T06:57:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-19T06:57:59Z"}, "message": "Auto merge of #97103 - luqmana:asm-unwind-cleanup, r=Amanieu,tmiasko\n\nUpdate MIR passes to handle unwinding Inline Asm\n\nSome more follow up fixes from https://github.com/rust-lang/rust/pull/95864#issuecomment-1094165398\n\nr? `@Amanieu`", "tree": {"sha": "ae2039ac8b0a9ce6bc74ed1982ab4eafe26b8d17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae2039ac8b0a9ce6bc74ed1982ab4eafe26b8d17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "html_url": "https://github.com/rust-lang/rust/commit/67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50872bdb99c96716ee50a3b9613c395302b99767", "url": "https://api.github.com/repos/rust-lang/rust/commits/50872bdb99c96716ee50a3b9613c395302b99767", "html_url": "https://github.com/rust-lang/rust/commit/50872bdb99c96716ee50a3b9613c395302b99767"}, {"sha": "af7f53d6d0f05b953d9364ae81339f6e185a9957", "url": "https://api.github.com/repos/rust-lang/rust/commits/af7f53d6d0f05b953d9364ae81339f6e185a9957", "html_url": "https://github.com/rust-lang/rust/commit/af7f53d6d0f05b953d9364ae81339f6e185a9957"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "11980382ffdb267aaf74549f03d736f03139fb63", "filename": "compiler/rustc_mir_transform/src/abort_unwinding_calls.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/compiler%2Frustc_mir_transform%2Fsrc%2Fabort_unwinding_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/compiler%2Frustc_mir_transform%2Fsrc%2Fabort_unwinding_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fabort_unwinding_calls.rs?ref=67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "patch": "@@ -1,4 +1,5 @@\n use crate::MirPass;\n+use rustc_ast::InlineAsmOptions;\n use rustc_hir::def::DefKind;\n use rustc_middle::mir::*;\n use rustc_middle::ty::layout;\n@@ -85,6 +86,12 @@ impl<'tcx> MirPass<'tcx> for AbortUnwindingCalls {\n                 TerminatorKind::Assert { .. } | TerminatorKind::FalseUnwind { .. } => {\n                     layout::fn_can_unwind(tcx, None, Abi::Rust)\n                 }\n+                TerminatorKind::InlineAsm { options, .. } => {\n+                    options.contains(InlineAsmOptions::MAY_UNWIND)\n+                }\n+                _ if terminator.unwind().is_some() => {\n+                    span_bug!(span, \"unexpected terminator that may unwind {:?}\", terminator)\n+                }\n                 _ => continue,\n             };\n "}, {"sha": "9e7bf5c792951eda09e10acd87a0ddecb0ea124a", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "patch": "@@ -1042,8 +1042,7 @@ fn can_unwind<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) -> bool {\n             | TerminatorKind::Unreachable\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::FalseEdge { .. }\n-            | TerminatorKind::FalseUnwind { .. }\n-            | TerminatorKind::InlineAsm { .. } => {}\n+            | TerminatorKind::FalseUnwind { .. } => {}\n \n             // Resume will *continue* unwinding, but if there's no other unwinding terminator it\n             // will never be reached.\n@@ -1057,6 +1056,7 @@ fn can_unwind<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) -> bool {\n             TerminatorKind::Drop { .. }\n             | TerminatorKind::DropAndReplace { .. }\n             | TerminatorKind::Call { .. }\n+            | TerminatorKind::InlineAsm { .. }\n             | TerminatorKind::Assert { .. } => return true,\n         }\n     }"}, {"sha": "44d722d6f9bffae1238a0e4932ceae8df8041f92", "filename": "src/test/mir-opt/asm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir?ref=67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "patch": "@@ -0,0 +1,24 @@\n+// MIR for `main` after AbortUnwindingCalls\n+\n+fn main() -> () {\n+    let mut _0: ();                      // return place in scope 0 at $DIR/asm_unwind_panic_abort.rs:12:11: 12:11\n+    let _1: ();                          // in scope 0 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+    scope 1 {\n+    }\n+\n+    bb0: {\n+        StorageLive(_1);                 // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+        _1 = const ();                   // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+        asm!(\"\", options(MAY_UNWIND)) -> [return: bb1, unwind: bb2]; // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+    }\n+\n+    bb1: {\n+        StorageDead(_1);                 // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:48: 14:49\n+        _0 = const ();                   // scope 1 at $DIR/asm_unwind_panic_abort.rs:13:5: 15:6\n+        return;                          // scope 0 at $DIR/asm_unwind_panic_abort.rs:16:2: 16:2\n+    }\n+\n+    bb2 (cleanup): {\n+        abort;                           // scope 0 at $DIR/asm_unwind_panic_abort.rs:12:1: 16:2\n+    }\n+}"}, {"sha": "8201d54348a839fa4c09f6648350bb95fe9a581c", "filename": "src/test/mir-opt/asm_unwind_panic_abort.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a9bcb31b85e87cc8bb327022632e48a0ca64a8/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.rs?ref=67a9bcb31b85e87cc8bb327022632e48a0ca64a8", "patch": "@@ -0,0 +1,16 @@\n+//! Tests that unwinding from an asm block is caught and forced to abort\n+//! when `-C panic=abort`.\n+\n+// min-llvm-version: 13.0.0\n+// only-x86_64\n+// compile-flags: -C panic=abort\n+// no-prefer-dynamic\n+\n+#![feature(asm_unwind)]\n+\n+// EMIT_MIR asm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir\n+fn main() {\n+    unsafe {\n+        std::arch::asm!(\"\", options(may_unwind));\n+    }\n+}"}]}