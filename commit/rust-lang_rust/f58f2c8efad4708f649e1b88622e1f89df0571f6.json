{"sha": "f58f2c8efad4708f649e1b88622e1f89df0571f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1OGYyYzhlZmFkNDcwOGY2NDllMWI4ODYyMmUxZjg5ZGYwNTcxZjY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-13T17:40:25Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-13T17:40:33Z"}, "message": "don't cache overflow results globally", "tree": {"sha": "7ba18bdb9cf684d503533f65cae5f483b78250e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ba18bdb9cf684d503533f65cae5f483b78250e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f58f2c8efad4708f649e1b88622e1f89df0571f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f58f2c8efad4708f649e1b88622e1f89df0571f6", "html_url": "https://github.com/rust-lang/rust/commit/f58f2c8efad4708f649e1b88622e1f89df0571f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f58f2c8efad4708f649e1b88622e1f89df0571f6/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b2aeca10a91e2c2cb3f2efcc383e8addabebe58", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2aeca10a91e2c2cb3f2efcc383e8addabebe58", "html_url": "https://github.com/rust-lang/rust/commit/7b2aeca10a91e2c2cb3f2efcc383e8addabebe58"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "c5adec2c6d2636f5d00ebd5869efd5378f4adad1", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f58f2c8efad4708f649e1b88622e1f89df0571f6/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f58f2c8efad4708f649e1b88622e1f89df0571f6/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=f58f2c8efad4708f649e1b88622e1f89df0571f6", "patch": "@@ -1376,7 +1376,10 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n         let tcx = self.tcx();\n         let trait_ref = cache_fresh_trait_pred.skip_binder().trait_ref;\n         if self.can_use_global_caches(param_env) {\n-            if let Some(trait_ref) = tcx.lift_to_global(&trait_ref) {\n+            if let Err(Overflow) = candidate {\n+                // Don't cache overflow globally; we only produce this\n+                // in certain modes.\n+            } else if let Some(trait_ref) = tcx.lift_to_global(&trait_ref) {\n                 if let Some(candidate) = tcx.lift_to_global(&candidate) {\n                     debug!(\n                         \"insert_candidate_cache(trait_ref={:?}, candidate={:?}) global\","}]}